
puzzle2.elf:     file format elf32-littlenios2
puzzle2.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010180

Program Header:
    LOAD off    0x00001000 vaddr 0x00010000 paddr 0x00010000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00010020 paddr 0x00010020 align 2**12
         filesz 0x0000d7e4 memsz 0x0000d7e4 flags r-x
    LOAD off    0x0000e804 vaddr 0x0001d804 paddr 0x0001e174 align 2**12
         filesz 0x00000970 memsz 0x00000970 flags rw-
    LOAD off    0x0000fae4 vaddr 0x0001eae4 paddr 0x0001eae4 align 2**12
         filesz 0x00000000 memsz 0x000004cc flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00010000  00010000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000160  00010020  00010020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000d2e8  00010180  00010180  00001180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000039c  0001d468  0001d468  0000e468  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000970  0001d804  0001e174  0000e804  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000004cc  0001eae4  0001eae4  0000fae4  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory 00000000  0001efb0  0001efb0  0000f174  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0000f174  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 000009c0  00000000  00000000  0000f198  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00014847  00000000  00000000  0000fb58  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00005636  00000000  00000000  0002439f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00007acd  00000000  00000000  000299d5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000138c  00000000  00000000  000314a4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000031de  00000000  00000000  00032830  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00016e8a  00000000  00000000  00035a0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0004c898  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000014e0  00000000  00000000  0004c8a8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000506b6  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  000506b9  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  000506bc  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  000506bd  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  000506be  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  000506c2  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  000506c6  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  000506ca  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  000506d3  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  000506dc  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000c  00000000  00000000  000506e5  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000023  00000000  00000000  000506f1  2**0
                  CONTENTS, READONLY
 29 .jdi          00004a13  00000000  00000000  00050714  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     000717fd  00000000  00000000  00055127  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00010000 l    d  .entry	00000000 .entry
00010020 l    d  .exceptions	00000000 .exceptions
00010180 l    d  .text	00000000 .text
0001d468 l    d  .rodata	00000000 .rodata
0001d804 l    d  .rwdata	00000000 .rwdata
0001eae4 l    d  .bss	00000000 .bss
0001efb0 l    d  .onchip_memory	00000000 .onchip_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../puzzle2_bsp//obj/HAL/src/crt0.o
000101b8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 DE_seven_segment_display.c
0001d4dc l     O .rodata	0000002b CSWTCH.28
0001eb74 l     O .bss	00000014 filter_x.3939
0001eb60 l     O .bss	00000014 filter_y.3940
0001d508 l     O .rodata	00000028 h.3938
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 asprintf.c
00000000 l    df *ABS*	00000000 impure.c
0001d804 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 strstr.c
00013110 l     F .text	00000104 critical_factorization
00013214 l     F .text	000003b0 two_way_long_needle
00000000 l    df *ABS*	00000000 vfprintf.c
0001d676 l     O .rodata	00000010 zeroes.4389
0001d686 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 dtoa.c
00015c30 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
0001e050 l     O .rwdata	00000020 lc_ctype_charset
0001e030 l     O .rwdata	00000020 lc_message_charset
0001e070 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 mprec.c
0001d6b4 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0001d7d8 l     O .rodata	00000010 zeroes.4333
0001d7e8 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_getchar.c
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0001e14c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_sys_init.c
0001e0a8 l     O .rwdata	0000002c accelerometer_spi
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0001d04c l     F .text	0000003c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_accelerometer_spi.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
0001d214 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
0001eb5c g     O .bss	00000004 alt_instruction_exception_handler
00018bd8 g     F .text	00000074 _mprec_log10
00018cc4 g     F .text	0000008c __any_on
0001d6c0 g     O .rodata	00000028 __mprec_tinytens
0001ceac g     F .text	0000002c alt_main
00013080 g     F .text	00000090 strcpy
00010494 g     F .text	00000014 led_write
0001eeb0 g     O .bss	00000100 alt_irq
0001e174 g       *ABS*	00000000 __flash_rwdata_start
0001c0f8 g     F .text	00000088 .hidden __eqdf2
0001eae8 g     O .bss	00000004 pause
00010704 g     F .text	00000054 print
0001efb0 g       *ABS*	00000000 __alt_heap_start
0001eaec g     O .bss	00000004 dancing
0001023c g     F .text	00000044 print_data
0001eaf0 g     O .bss	00000004 disp_off
00017914 g     F .text	0000007c _setlocale_r
0001cedc g     F .text	00000004 __malloc_unlock
0001a4a8 g     F .text	0000015c memmove
00017c98 g     F .text	000000a8 _Balloc
0001e130 g     O .rwdata	00000004 timer
0001eaf4 g     O .bss	00000004 reverse
000101bc g     F .text	00000080 sys_timer_isr
0001044c g     F .text	00000048 read_chars
0001cee0 g     F .text	00000038 alt_putstr
0001c180 g     F .text	000000dc .hidden __gtdf2
0001e150 g     O .rwdata	00000004 jtag_uart
0001d3ec g     F .text	00000008 altera_nios2_gen2_irq_init
00010000 g     F .entry	0000000c __reset
0001d108 g     F .text	00000058 alt_up_accelerometer_spi_read_x_axis
00010020 g       *ABS*	00000000 __flash_exceptions_start
0001eb34 g     O .bss	00000004 errno
0001902c g     F .text	000013a0 ___svfiprintf_internal_r
0001eb4c g     O .bss	00000004 alt_argv
0002612c g       *ABS*	00000000 _gp
000102d0 g     F .text	000000b4 generate_text
0001e0d4 g     O .rwdata	00000030 alt_fd_list
0001d288 g     F .text	00000074 alt_find_dev
00017b50 g     F .text	00000148 memcpy
00012188 g     F .text	000000dc .hidden __floatsidf
0001c25c g     F .text	000000f4 .hidden __ltdf2
0001eaf8 g     O .bss	00000001 prevLetter
0001d3f4 g     F .text	00000074 alt_exception_cause_generated_bad_addr
00018d50 g     F .text	00000074 __fpclassifyd
00018b34 g     F .text	000000a4 __ratio
0001cfbc g     F .text	0000005c altera_avalon_jtag_uart_read
000123cc g     F .text	00000014 malloc
00010f34 g     F .text	00000064 .hidden __udivsi3
00010628 g     F .text	00000054 getBinLow
0001d710 g     O .rodata	000000c8 __mprec_tens
00017990 g     F .text	0000000c __locale_charset
0001eb30 g     O .bss	00000004 __malloc_top_pad
0001eafc g     O .bss	00000004 flag
0001e144 g     O .rwdata	00000004 __mb_cur_max
000179c0 g     F .text	0000000c _localeconv_r
0001eb00 g     O .bss	00000004 length
000180cc g     F .text	0000003c __i2b
00012d28 g     F .text	00000054 _sbrk_r
0001e154 g     O .rwdata	00000004 alt_max_fd
0001eb2c g     O .bss	00000004 __malloc_max_sbrked_mem
0001cd38 g     F .text	00000094 alt_irq_register
00010ff0 g     F .text	000008ac .hidden __adddf3
000188dc g     F .text	0000010c __b2d
0001b164 g     F .text	000005c4 .hidden __umoddi3
0001e134 g     O .rwdata	00000004 _global_impure_ptr
0001a604 g     F .text	00000564 _realloc_r
0001efb0 g       *ABS*	00000000 __bss_end
0001ccf4 g     F .text	00000044 alt_getchar
0001d334 g     F .text	000000b8 alt_tick
000105f4 g     F .text	00000034 getBinLowLow
0001ab68 g     F .text	000005fc .hidden __udivdi3
0001d6e8 g     O .rodata	00000028 __mprec_bigtens
00017eb0 g     F .text	00000104 __s2b
0001cc4c g     F .text	000000a8 .hidden __floatunsidf
0001861c g     F .text	00000060 __mcmp
0001d300 g     F .text	00000034 alt_alarm_stop
0001eb44 g     O .bss	00000004 alt_irq_active
000100fc g     F .exceptions	00000060 alt_irq_handler
0001e104 g     O .rwdata	00000028 alt_dev_null
0001d210 g     F .text	00000004 alt_dcache_flush_all
00017fb4 g     F .text	00000068 __hi0bits
00012108 g     F .text	00000080 .hidden __fixdfsi
0001e174 g       *ABS*	00000000 __ram_rwdata_end
000104dc g     F .text	00000070 timer_init
00010000 g       *ABS*	00000000 __alt_mem_onchip_memory
00010758 g     F .text	00000280 print_letters
0001e158 g     O .rwdata	00000008 alt_dev_list
0001ebb0 g     O .bss	00000200 text
0001eb04 g     O .bss	00000004 dance_dir
0001d804 g       *ABS*	00000000 __ram_rodata_end
0001c25c g     F .text	000000f4 .hidden __ledf2
00018394 g     F .text	00000140 __pow5mult
0001eb08 g     O .bss	00000001 led
0001eb40 g     O .bss	00000004 __nlocale_changed
00010f98 g     F .text	00000058 .hidden __umodsi3
0001efb0 g       *ABS*	00000000 end
0001015c g     F .exceptions	00000024 alt_instruction_exception_entry
00020000 g       *ABS*	00000000 __alt_stack_pointer
0001d088 g     F .text	00000028 alt_avalon_timer_sc_init
00012264 g     F .text	00000064 .hidden __clzsi2
0001d018 g     F .text	00000034 altera_avalon_jtag_uart_write
00010384 g     F .text	000000c8 interpret_command
000122f0 g     F .text	00000064 _asprintf_r
000179f0 g     F .text	000000e4 memchr
00012d7c g     F .text	00000058 _sprintf_r
00017604 g     F .text	00000310 _free_r
0001799c g     F .text	00000010 __locale_mb_cur_max
0001eb3c g     O .bss	00000004 __mlocale_changed
0001e13c g     O .rwdata	00000004 __malloc_sbrk_base
00010180 g     F .text	0000003c _start
0001eb0c g     O .bss	00000004 level
0001eb58 g     O .bss	00000004 _alt_tick_rate
000135c4 g     F .text	000003b0 strstr
000184d4 g     F .text	00000148 __lshift
0001eb54 g     O .bss	00000004 _alt_nticks
0001cf84 g     F .text	00000038 alt_sys_init
0001d0b8 g     F .text	00000014 alt_up_accelerometer_spi_read_address_register
00018e5c g     F .text	000001d0 __ssprint_r
00018108 g     F .text	0000028c __multiply
000122c8 g     F .text	00000028 .hidden __mulsi3
0001d804 g       *ABS*	00000000 __ram_rwdata_start
0001d468 g       *ABS*	00000000 __ram_rodata_start
0001eb88 g     O .bss	00000028 __malloc_current_mallinfo
000189e8 g     F .text	0000014c __d2b
0001d160 g     F .text	00000058 alt_up_accelerometer_spi_read_y_axis
0001eb10 g     O .bss	00000004 slowdown_toggle
00017ad4 g     F .text	0000007c memcmp
0001efb0 g       *ABS*	00000000 __alt_stack_base
00010578 g     F .text	0000007c getBinaryLetter
0001b728 g     F .text	000009d0 .hidden __divdf3
00018c4c g     F .text	00000078 __copybits
0001dc28 g     O .rwdata	00000408 __malloc_av_
0001189c g     F .text	0000086c .hidden __muldf3
0001d21c g     F .text	0000006c alt_dev_llist_insert
0001ced8 g     F .text	00000004 __malloc_lock
0001cf18 g     F .text	0000004c sbrk
00013974 g     F .text	000022bc ___svfprintf_internal_r
0001edb0 g     O .bss	00000100 enteredText
0001a3cc g     F .text	000000dc _calloc_r
0001eae4 g       *ABS*	00000000 __bss_start
00012c00 g     F .text	00000128 memset
000109d8 g     F .text	00000464 main
0001eb48 g     O .bss	00000004 alt_envp
0001eb28 g     O .bss	00000004 __malloc_max_total_mem
00020000 g       *ABS*	00000000 __alt_heap_limit
00015e58 g     F .text	00001688 _dtoa_r
000123f4 g     F .text	0000080c _malloc_r
0001e12c g     O .rwdata	00000004 life
0001e168 g     O .rwdata	00000004 alt_errno
00010e3c g     F .text	00000084 .hidden __divsi3
000174e0 g     F .text	00000124 _malloc_trim_r
00012fa4 g     F .text	000000dc strcmp
0001d468 g       *ABS*	00000000 __flash_rodata_start
0001c0f8 g     F .text	00000088 .hidden __nedf2
0001cf64 g     F .text	00000020 alt_irq_init
00012dd4 g     F .text	0000006c sprintf
0001d530 g     O .rodata	00000100 .hidden __clz_tab
00012354 g     F .text	00000078 asprintf
0001eb38 g     O .bss	00000004 _PathLocale
000179cc g     F .text	00000018 setlocale
0001e138 g     O .rwdata	00000004 _impure_ptr
0001eb50 g     O .bss	00000004 alt_argc
000179b8 g     F .text	00000008 __locale_cjk_lang
0001067c g     F .text	00000054 getBinHigh
00010020 g       .exceptions	00000000 alt_irq_entry
00018878 g     F .text	00000064 __ulp
0001eae4 g     O .bss	00000001 pwm
0001eb14 g     O .bss	00000004 toggle
0001e160 g     O .rwdata	00000008 alt_fs_list
0001eb18 g     O .bss	00000004 speedup_toggle
00010020 g       *ABS*	00000000 __ram_exceptions_start
0001d0b0 g     F .text	00000008 alt_up_accelerometer_spi_open_dev
000179e4 g     F .text	0000000c localeconv
0001eb1c g     O .bss	00000004 upsideDown
0001e174 g       *ABS*	00000000 _edata
0001eb20 g     O .bss	00000004 dance_state
0001efb0 g       *ABS*	00000000 _end
00010180 g       *ABS*	00000000 __ram_exceptions_end
0001e140 g     O .rwdata	00000004 __malloc_trim_threshold
000179ac g     F .text	0000000c __locale_msgcharset
0001867c g     F .text	000001fc __mdiff
00010ec0 g     F .text	00000074 .hidden __modsi3
0001d1b8 g     F .text	00000058 alt_up_accelerometer_spi_read_z_axis
00020000 g       *ABS*	00000000 __alt_data_end
00010020 g     F .exceptions	00000000 alt_exception
000106d0 g     F .text	00000034 getBinHighHigh
000104a8 g     F .text	00000034 convert_read
0001000c g       .entry	00000000 _exit
0001d0cc g     F .text	00000020 alt_up_accelerometer_spi_read
0001d0ec g     F .text	0000001c alt_up_accelerometer_spi_write
0001054c g     F .text	0000002c getBin
00018dc4 g     F .text	00000098 strlen
0001c180 g     F .text	000000dc .hidden __gedf2
0001d2fc g     F .text	00000004 alt_icache_flush_all
00012e40 g     F .text	00000164 strchr
0001e148 g     O .rwdata	00000004 alt_priority_mask
0001eb24 g     O .bss	00000004 re_enter
0001c350 g     F .text	000008fc .hidden __subdf3
0001801c g     F .text	000000b0 __lo0bits
0001e16c g     O .rwdata	00000008 alt_alarm_list
00010280 g     F .text	00000050 send_text
0001cdcc g     F .text	000000e0 alt_load
000123e0 g     F .text	00000014 free
00017d68 g     F .text	00000148 __multadd
00017d40 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00010000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   10000:	00400074 	movhi	at,1
    ori r1, r1, %lo(_start)
   10004:	08406014 	ori	at,at,384
    jmp r1
   10008:	0800683a 	jmp	at

0001000c <_exit>:
	...

Disassembly of section .exceptions:

00010020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   10020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   10024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   10028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   1002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   10030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   10034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   10038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   1003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   10040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   10044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   10048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   1004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   10050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   10054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   10058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   1005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   10060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   10064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   10068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   1006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   10070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   10074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   10078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   1007c:	10000326 	beq	r2,zero,1008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   10080:	20000226 	beq	r4,zero,1008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   10084:	00100fc0 	call	100fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   10088:	00000706 	br	100a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   1008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   10090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   10094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   10098:	001015c0 	call	1015c <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   1009c:	1000021e 	bne	r2,zero,100a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   100a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   100a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   100a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   100ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   100b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   100b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   100b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   100bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   100c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   100c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   100c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   100cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   100d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   100d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   100d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   100dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   100e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   100e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   100e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   100ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   100f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   100f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   100f8:	ef80083a 	eret

000100fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   100fc:	defffe04 	addi	sp,sp,-8
   10100:	dfc00115 	stw	ra,4(sp)
   10104:	dc000015 	stw	r16,0(sp)
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   10108:	0007313a 	rdctl	r3,ipending
      if (active & mask)
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
   1010c:	040000b4 	movhi	r16,2
   10110:	843bac04 	addi	r16,r16,-4432

  active = alt_irq_pending ();

  do
  {
    i = 0;
   10114:	000b883a 	mov	r5,zero
    mask = 1;
   10118:	00800044 	movi	r2,1
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   1011c:	1888703a 	and	r4,r3,r2
   10120:	20000b26 	beq	r4,zero,10150 <alt_irq_handler+0x54>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
   10124:	280490fa 	slli	r2,r5,3
   10128:	8085883a 	add	r2,r16,r2
   1012c:	10c00017 	ldw	r3,0(r2)
   10130:	11000117 	ldw	r4,4(r2)
   10134:	183ee83a 	callr	r3
   10138:	0007313a 	rdctl	r3,ipending

    } while (1);

    active = alt_irq_pending ();
    
  } while (active);
   1013c:	183ff51e 	bne	r3,zero,10114 <_gp+0xfffe9fe8>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
   10140:	dfc00117 	ldw	ra,4(sp)
   10144:	dc000017 	ldw	r16,0(sp)
   10148:	dec00204 	addi	sp,sp,8
   1014c:	f800283a 	ret
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
   10150:	1085883a 	add	r2,r2,r2
      i++;
   10154:	29400044 	addi	r5,r5,1

    } while (1);
   10158:	003ff006 	br	1011c <_gp+0xfffe9ff0>

0001015c <alt_instruction_exception_entry>:
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   1015c:	d0a28c17 	ldw	r2,-30160(gp)
   10160:	10000426 	beq	r2,zero,10174 <alt_instruction_exception_entry+0x18>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   10164:	200b883a 	mov	r5,r4
   10168:	000d883a 	mov	r6,zero
   1016c:	013fffc4 	movi	r4,-1
   10170:	1000683a 	jmp	r2
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   10174:	003da03a 	break	0
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
}
   10178:	0005883a 	mov	r2,zero
   1017c:	f800283a 	ret

Disassembly of section .text:

00010180 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   10180:	06c000b4 	movhi	sp,2
    ori sp, sp, %lo(__alt_stack_pointer)
   10184:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   10188:	068000b4 	movhi	gp,2
    ori gp, gp, %lo(_gp)
   1018c:	d6984b14 	ori	gp,gp,24876
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   10190:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
   10194:	10bab914 	ori	r2,r2,60132

    movhi r3, %hi(__bss_end)
   10198:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
   1019c:	18fbec14 	ori	r3,r3,61360

    beq r2, r3, 1f
   101a0:	10c00326 	beq	r2,r3,101b0 <_start+0x30>

0:
    stw zero, (r2)
   101a4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   101a8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   101ac:	10fffd36 	bltu	r2,r3,101a4 <_gp+0xfffea078>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   101b0:	001cdcc0 	call	1cdcc <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   101b4:	001ceac0 	call	1ceac <alt_main>

000101b8 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   101b8:	003fff06 	br	101b8 <_gp+0xfffea08c>

000101bc <sys_timer_isr>:
    * led = (8 >> val) | (8 << (8 - val));
    * level = (acc_read >> 1) & 0x1f;
}

void sys_timer_isr() {
    IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_BASE, 0);
   101bc:	008000b4 	movhi	r2,2
   101c0:	10840004 	addi	r2,r2,4096
   101c4:	10000035 	stwio	zero,0(r2)

    if (pwm < abs(level)) {
   101c8:	d0a27817 	ldw	r2,-30240(gp)
   101cc:	d1626e07 	ldb	r5,-30280(gp)
   101d0:	1009883a 	mov	r4,r2
   101d4:	1000010e 	bge	r2,zero,101dc <sys_timer_isr+0x20>
   101d8:	0089c83a 	sub	r4,zero,r2
   101dc:	00c000b4 	movhi	r3,2
   101e0:	18c42004 	addi	r3,r3,4224
   101e4:	2900080e 	bge	r5,r4,10208 <sys_timer_isr+0x4c>

        if (level < 0) {
   101e8:	1000040e 	bge	r2,zero,101fc <sys_timer_isr+0x40>
alt_8 pwm = 0;
alt_u8 led;
int level;

void led_write(alt_u8 led_pattern) {
    IOWR(LED_BASE, 0, led_pattern);
   101ec:	d0a27703 	ldbu	r2,-30244(gp)
   101f0:	1085883a 	add	r2,r2,r2
   101f4:	10803fcc 	andi	r2,r2,255
   101f8:	00000406 	br	1020c <sys_timer_isr+0x50>
   101fc:	d0a27703 	ldbu	r2,-30244(gp)
   10200:	1004d07a 	srli	r2,r2,1
   10204:	00000106 	br	1020c <sys_timer_isr+0x50>
   10208:	d0a27703 	ldbu	r2,-30244(gp)
   1020c:	18800035 	stwio	r2,0(r3)

    } else {
        led_write(led);
    }

    if (pwm > PWM_PERIOD) {
   10210:	d0a26e03 	ldbu	r2,-30280(gp)
   10214:	01000404 	movi	r4,16
   10218:	10c03fcc 	andi	r3,r2,255
   1021c:	18c0201c 	xori	r3,r3,128
   10220:	18ffe004 	addi	r3,r3,-128
   10224:	20c0020e 	bge	r4,r3,10230 <sys_timer_isr+0x74>
        pwm = 0;
   10228:	d0226e05 	stb	zero,-30280(gp)
   1022c:	f800283a 	ret
    } else {
        pwm++;
   10230:	10800044 	addi	r2,r2,1
   10234:	d0a26e05 	stb	r2,-30280(gp)
   10238:	f800283a 	ret

0001023c <print_data>:
char text[2*CHARLIM];//The text that has been adjusted for the allowed letters
int pause, reverse, toggle, speedup_toggle, slowdown_toggle, dance_state, dancing, dance_dir, upsideDown, length, re_enter, disp_off, flag;
int timer = CLOCKINIT;  //Standard speed for movement
int life = 1023;

void print_data(char *accel_x, char *accel_y, char *switchdata, char *buttondata){
   1023c:	defffc04 	addi	sp,sp,-16
	char *printMsg;
	asprintf(&printMsg, "%s %s %s %s\n", accel_x, accel_y, switchdata, buttondata); 	// Print out the strings
   10240:	d9c00115 	stw	r7,4(sp)
   10244:	280f883a 	mov	r7,r5
   10248:	014000b4 	movhi	r5,2
   1024c:	29751a04 	addi	r5,r5,-11160
   10250:	d9800015 	stw	r6,0(sp)
   10254:	200d883a 	mov	r6,r4
   10258:	d9000204 	addi	r4,sp,8
char text[2*CHARLIM];//The text that has been adjusted for the allowed letters
int pause, reverse, toggle, speedup_toggle, slowdown_toggle, dance_state, dancing, dance_dir, upsideDown, length, re_enter, disp_off, flag;
int timer = CLOCKINIT;  //Standard speed for movement
int life = 1023;

void print_data(char *accel_x, char *accel_y, char *switchdata, char *buttondata){
   1025c:	dfc00315 	stw	ra,12(sp)
	char *printMsg;
	asprintf(&printMsg, "%s %s %s %s\n", accel_x, accel_y, switchdata, buttondata); 	// Print out the strings
   10260:	00123540 	call	12354 <asprintf>
	alt_putstr(printMsg);
   10264:	d9000217 	ldw	r4,8(sp)
   10268:	001cee00 	call	1cee0 <alt_putstr>
	free(printMsg);
   1026c:	d9000217 	ldw	r4,8(sp)
   10270:	00123e00 	call	123e0 <free>
	//memset(accel_x, 0, 4*CHARLIM);
	//memset(accel_y, 0, 4*CHARLIM);
	//memset(switchdata, 0, 4*CHARLIM);
	//memset(buttondata, 0, 4*CHARLIM);
}
   10274:	dfc00317 	ldw	ra,12(sp)
   10278:	dec00404 	addi	sp,sp,16
   1027c:	f800283a 	ret

00010280 <send_text>:

void send_text(char *text) {
   10280:	defffd04 	addi	sp,sp,-12
	char *printMsg;
	asprintf(&printMsg, "<--> %s <--> \n", text); 	// Print out the strings
   10284:	014000b4 	movhi	r5,2
   10288:	200d883a 	mov	r6,r4
   1028c:	29751e04 	addi	r5,r5,-11144
	//memset(accel_y, 0, 4*CHARLIM);
	//memset(switchdata, 0, 4*CHARLIM);
	//memset(buttondata, 0, 4*CHARLIM);
}

void send_text(char *text) {
   10290:	dc000115 	stw	r16,4(sp)
   10294:	2021883a 	mov	r16,r4
	char *printMsg;
	asprintf(&printMsg, "<--> %s <--> \n", text); 	// Print out the strings
   10298:	d809883a 	mov	r4,sp
	//memset(accel_y, 0, 4*CHARLIM);
	//memset(switchdata, 0, 4*CHARLIM);
	//memset(buttondata, 0, 4*CHARLIM);
}

void send_text(char *text) {
   1029c:	dfc00215 	stw	ra,8(sp)
	char *printMsg;
	asprintf(&printMsg, "<--> %s <--> \n", text); 	// Print out the strings
   102a0:	00123540 	call	12354 <asprintf>
	alt_putstr(printMsg);
   102a4:	d9000017 	ldw	r4,0(sp)
   102a8:	001cee00 	call	1cee0 <alt_putstr>
	free(printMsg);
   102ac:	d9000017 	ldw	r4,0(sp)
   102b0:	00123e00 	call	123e0 <free>
	memset(text, 0, 2*CHARLIM);								// Empty the text buffer for next input
   102b4:	01808004 	movi	r6,512
   102b8:	000b883a 	mov	r5,zero
   102bc:	8009883a 	mov	r4,r16
}
   102c0:	dfc00217 	ldw	ra,8(sp)
   102c4:	dc000117 	ldw	r16,4(sp)
   102c8:	dec00304 	addi	sp,sp,12
void send_text(char *text) {
	char *printMsg;
	asprintf(&printMsg, "<--> %s <--> \n", text); 	// Print out the strings
	alt_putstr(printMsg);
	free(printMsg);
	memset(text, 0, 2*CHARLIM);								// Empty the text buffer for next input
   102cc:	0012c001 	jmpi	12c00 <memset>

000102d0 <generate_text>:
}

char generate_text(char curr, int *length, char *text, int *running) {
   102d0:	2005883a 	mov	r2,r4
	if(curr == '\n') return curr;								// If the line is empty, return nothing.
   102d4:	21003fcc 	andi	r4,r4,255
   102d8:	2100201c 	xori	r4,r4,128
   102dc:	213fe004 	addi	r4,r4,-128
   102e0:	00c00284 	movi	r3,10
   102e4:	20c02626 	beq	r4,r3,10380 <generate_text+0xb0>
	alt_putstr(printMsg);
	free(printMsg);
	memset(text, 0, 2*CHARLIM);								// Empty the text buffer for next input
}

char generate_text(char curr, int *length, char *text, int *running) {
   102e8:	defff804 	addi	sp,sp,-32
   102ec:	dd800615 	stw	r22,24(sp)
   102f0:	dd400515 	stw	r21,20(sp)
   102f4:	dd000415 	stw	r20,16(sp)
   102f8:	dcc00315 	stw	r19,12(sp)
   102fc:	dc800215 	stw	r18,8(sp)
   10300:	dc400115 	stw	r17,4(sp)
   10304:	dc000015 	stw	r16,0(sp)
   10308:	dfc00715 	stw	ra,28(sp)
   1030c:	3829883a 	mov	r20,r7
   10310:	3025883a 	mov	r18,r6
   10314:	2827883a 	mov	r19,r5
	if(curr == '\n') return curr;								// If the line is empty, return nothing.
   10318:	3023883a 	mov	r17,r6
	int idx = 0;										// Keep track of how many characters have been sent down for later printing
	char newCurr = curr;

	while (newCurr != EOF && newCurr != '\n'){						// Keep reading characters until we get to the end of the line
   1031c:	057fffc4 	movi	r21,-1
   10320:	1821883a 	mov	r16,r3
		if (newCurr == QUITLETTER) { *running = 0; }					// If quitting letter is encountered, setting running to 0
   10324:	05801f84 	movi	r22,126
char generate_text(char curr, int *length, char *text, int *running) {
	if(curr == '\n') return curr;								// If the line is empty, return nothing.
	int idx = 0;										// Keep track of how many characters have been sent down for later printing
	char newCurr = curr;

	while (newCurr != EOF && newCurr != '\n'){						// Keep reading characters until we get to the end of the line
   10328:	10c03fcc 	andi	r3,r2,255
   1032c:	18c0201c 	xori	r3,r3,128
   10330:	18ffe004 	addi	r3,r3,-128
   10334:	8c89c83a 	sub	r4,r17,r18
   10338:	1d400726 	beq	r3,r21,10358 <generate_text+0x88>
   1033c:	1c000626 	beq	r3,r16,10358 <generate_text+0x88>
		if (newCurr == QUITLETTER) { *running = 0; }					// If quitting letter is encountered, setting running to 0
   10340:	1d80011e 	bne	r3,r22,10348 <generate_text+0x78>
   10344:	a0000015 	stw	zero,0(r20)
		text[idx] = newCurr;								// Add the next letter to the text buffer
   10348:	88800005 	stb	r2,0(r17)
		idx++;										// Keep track of the number of characters read
		newCurr = alt_getchar();							// Get the next character
   1034c:	001ccf40 	call	1ccf4 <alt_getchar>
   10350:	8c400044 	addi	r17,r17,1
   10354:	003ff406 	br	10328 <_gp+0xfffea1fc>
	}
	*length = idx;
   10358:	99000015 	stw	r4,0(r19)

	return newCurr;
}
   1035c:	dfc00717 	ldw	ra,28(sp)
   10360:	dd800617 	ldw	r22,24(sp)
   10364:	dd400517 	ldw	r21,20(sp)
   10368:	dd000417 	ldw	r20,16(sp)
   1036c:	dcc00317 	ldw	r19,12(sp)
   10370:	dc800217 	ldw	r18,8(sp)
   10374:	dc400117 	ldw	r17,4(sp)
   10378:	dc000017 	ldw	r16,0(sp)
   1037c:	dec00804 	addi	sp,sp,32
   10380:	f800283a 	ret

00010384 <interpret_command>:

char * interpret_command(char* command)
{
	if ( strstr(command, "7SEG=") != 0 ) {
   10384:	014000b4 	movhi	r5,2

	return newCurr;
}

char * interpret_command(char* command)
{
   10388:	defffe04 	addi	sp,sp,-8
	if ( strstr(command, "7SEG=") != 0 ) {
   1038c:	29752804 	addi	r5,r5,-11104

	return newCurr;
}

char * interpret_command(char* command)
{
   10390:	dc000015 	stw	r16,0(sp)
   10394:	dfc00115 	stw	ra,4(sp)
   10398:	2021883a 	mov	r16,r4
	if ( strstr(command, "7SEG=") != 0 ) {
   1039c:	00135c40 	call	135c4 <strstr>
   103a0:	10000226 	beq	r2,zero,103ac <interpret_command+0x28>
		command += 5;
   103a4:	80800144 	addi	r2,r16,5
		return command;
   103a8:	00002406 	br	1043c <interpret_command+0xb8>
	}
	if ( strstr(command, "LED=") != 0 ) {
   103ac:	014000b4 	movhi	r5,2
   103b0:	29752a04 	addi	r5,r5,-11096
   103b4:	8009883a 	mov	r4,r16
   103b8:	00135c40 	call	135c4 <strstr>
   103bc:	10000226 	beq	r2,zero,103c8 <interpret_command+0x44>
		command += 4;
   103c0:	80800104 	addi	r2,r16,4
		return command;
   103c4:	00001d06 	br	1043c <interpret_command+0xb8>
	}
	if ( strstr(command, "LIFE+") != 0 )	{
   103c8:	014000b4 	movhi	r5,2
   103cc:	29752c04 	addi	r5,r5,-11088
   103d0:	8009883a 	mov	r4,r16
   103d4:	00135c40 	call	135c4 <strstr>
   103d8:	10000426 	beq	r2,zero,103ec <interpret_command+0x68>
		life = ((life + 1) * 2) - 1;
   103dc:	d0a00017 	ldw	r2,-32768(gp)
   103e0:	1004907a 	slli	r2,r2,1
   103e4:	10800044 	addi	r2,r2,1
   103e8:	00001106 	br	10430 <interpret_command+0xac>
		//command += 5;
		return "!!!!!!!!!!!!!!!!!!!!";
	}
	if ( strstr(command, "LIFE-") != 0 )	{
   103ec:	014000b4 	movhi	r5,2
   103f0:	29752e04 	addi	r5,r5,-11080
   103f4:	8009883a 	mov	r4,r16
   103f8:	00135c40 	call	135c4 <strstr>
   103fc:	10000726 	beq	r2,zero,1041c <interpret_command+0x98>
		life = ((life + 1) / 2) - 1;
   10400:	d0a00017 	ldw	r2,-32768(gp)
   10404:	10800044 	addi	r2,r2,1
   10408:	1006d7fa 	srli	r3,r2,31
   1040c:	1885883a 	add	r2,r3,r2
   10410:	1005d07a 	srai	r2,r2,1
   10414:	10bfffc4 	addi	r2,r2,-1
   10418:	00000506 	br	10430 <interpret_command+0xac>
		//command += 5;
		return "!!!!!!!!!!!!!!!!!!!!";
	}
	if ( strstr(command, "r") != 0 ) {
   1041c:	01401c84 	movi	r5,114
   10420:	8009883a 	mov	r4,r16
   10424:	0012e400 	call	12e40 <strchr>
   10428:	10000226 	beq	r2,zero,10434 <interpret_command+0xb0>
		life = 1023;
   1042c:	0080ffc4 	movi	r2,1023
   10430:	d0a00015 	stw	r2,-32768(gp)
	if ( strstr(command, "LIFE-") != 0 )	{
		life = ((life + 1) / 2) - 1;
		//command += 5;
		return "!!!!!!!!!!!!!!!!!!!!";
	}
	if ( strstr(command, "r") != 0 ) {
   10434:	008000b4 	movhi	r2,2
   10438:	10b52204 	addi	r2,r2,-11128
	}
	if ( strcmp(command, "") != 0 ) {
		return "!!!!!!!!!!!!!!!!!!!!";
	}
	return "!!!!!!!!!!!!!!!!!!!!";
}
   1043c:	dfc00117 	ldw	ra,4(sp)
   10440:	dc000017 	ldw	r16,0(sp)
   10444:	dec00204 	addi	sp,sp,8
   10448:	f800283a 	ret

0001044c <read_chars>:

char * read_chars() {
   1044c:	deff7d04 	addi	sp,sp,-524
	char data[2*CHARLIM];									// The buffer for the printing text
	char prevLetter = '!';
	int length = 0;
	int running = 1;
   10450:	00800044 	movi	r2,1
		return "!!!!!!!!!!!!!!!!!!!!";
	}
	return "!!!!!!!!!!!!!!!!!!!!";
}

char * read_chars() {
   10454:	dfc08215 	stw	ra,520(sp)
	char data[2*CHARLIM];									// The buffer for the printing text
	char prevLetter = '!';
	int length = 0;
   10458:	d8008115 	stw	zero,516(sp)
	int running = 1;
   1045c:	d8808015 	stw	r2,512(sp)

	prevLetter = alt_getchar();							// Extract the first character (and create a hold until one arrives)
   10460:	001ccf40 	call	1ccf4 <alt_getchar>
	prevLetter = generate_text(prevLetter, &length, data, &running);		// Process input text
   10464:	11003fcc 	andi	r4,r2,255
   10468:	2100201c 	xori	r4,r4,128
   1046c:	d9c08004 	addi	r7,sp,512
   10470:	d80d883a 	mov	r6,sp
   10474:	d9408104 	addi	r5,sp,516
   10478:	213fe004 	addi	r4,r4,-128
   1047c:	00102d00 	call	102d0 <generate_text>
	//print_text(text, length);							// Print input text

	return interpret_command(data);
   10480:	d809883a 	mov	r4,sp
   10484:	00103840 	call	10384 <interpret_command>
}
   10488:	dfc08217 	ldw	ra,520(sp)
   1048c:	dec08304 	addi	sp,sp,524
   10490:	f800283a 	ret

00010494 <led_write>:
alt_8 pwm = 0;
alt_u8 led;
int level;

void led_write(alt_u8 led_pattern) {
    IOWR(LED_BASE, 0, led_pattern);
   10494:	008000b4 	movhi	r2,2
   10498:	21003fcc 	andi	r4,r4,255
   1049c:	10842004 	addi	r2,r2,4224
   104a0:	11000035 	stwio	r4,0(r2)
   104a4:	f800283a 	ret

000104a8 <convert_read>:
}

void convert_read(alt_32 acc_read, int * level, alt_u8 * led) {
    acc_read += OFFSET;
   104a8:	213ff804 	addi	r4,r4,-32
    alt_u8 val = (acc_read >> 6) & 0x07;
    * led = (8 >> val) | (8 << (8 - val));
   104ac:	2005d1ba 	srai	r2,r4,6
    * level = (acc_read >> 1) & 0x1f;
   104b0:	2009d07a 	srai	r4,r4,1
}

void convert_read(alt_32 acc_read, int * level, alt_u8 * led) {
    acc_read += OFFSET;
    alt_u8 val = (acc_read >> 6) & 0x07;
    * led = (8 >> val) | (8 << (8 - val));
   104b4:	10c001cc 	andi	r3,r2,7
   104b8:	00800204 	movi	r2,8
   104bc:	10cfc83a 	sub	r7,r2,r3
   104c0:	11ce983a 	sll	r7,r2,r7
   104c4:	10c5d83a 	sra	r2,r2,r3
    * level = (acc_read >> 1) & 0x1f;
   104c8:	210007cc 	andi	r4,r4,31
}

void convert_read(alt_32 acc_read, int * level, alt_u8 * led) {
    acc_read += OFFSET;
    alt_u8 val = (acc_read >> 6) & 0x07;
    * led = (8 >> val) | (8 << (8 - val));
   104cc:	3884b03a 	or	r2,r7,r2
   104d0:	30800005 	stb	r2,0(r6)
    * level = (acc_read >> 1) & 0x1f;
   104d4:	29000015 	stw	r4,0(r5)
   104d8:	f800283a 	ret

000104dc <timer_init>:
    } else {
        pwm++;
    }
}

void timer_init(void * isr) {
   104dc:	defffe04 	addi	sp,sp,-8
   104e0:	dc000015 	stw	r16,0(sp)
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0003);
   104e4:	040000b4 	movhi	r16,2
    } else {
        pwm++;
    }
}

void timer_init(void * isr) {
   104e8:	dfc00115 	stw	ra,4(sp)
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0003);
   104ec:	84040104 	addi	r16,r16,4100
   104f0:	008000c4 	movi	r2,3
   104f4:	80800035 	stwio	r2,0(r16)
    IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_BASE, 0);
   104f8:	00c000b4 	movhi	r3,2
   104fc:	0005883a 	mov	r2,zero
   10500:	18c40004 	addi	r3,r3,4096
   10504:	18800035 	stwio	r2,0(r3)
    IOWR_ALTERA_AVALON_TIMER_PERIODL(TIMER_BASE, 0x0900);
   10508:	00c000b4 	movhi	r3,2
   1050c:	18c40204 	addi	r3,r3,4104
   10510:	01424004 	movi	r5,2304
   10514:	19400035 	stwio	r5,0(r3)
    IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_BASE, 0x0000);
   10518:	00c000b4 	movhi	r3,2
   1051c:	18c40304 	addi	r3,r3,4108
   10520:	18800035 	stwio	r2,0(r3)
    alt_irq_register(TIMER_IRQ, 0, isr);
   10524:	200d883a 	mov	r6,r4
   10528:	000b883a 	mov	r5,zero
   1052c:	01000084 	movi	r4,2
   10530:	001cd380 	call	1cd38 <alt_irq_register>
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0007);
   10534:	008001c4 	movi	r2,7
   10538:	80800035 	stwio	r2,0(r16)
}
   1053c:	dfc00117 	ldw	ra,4(sp)
   10540:	dc000017 	ldw	r16,0(sp)
   10544:	dec00204 	addi	sp,sp,8
   10548:	f800283a 	ret

0001054c <getBin>:
	int bit7 = (letter_inv & 0b1000000) >> 3;
	int res = (0b0000000) | bit0 | bit1 | bit5 | bit7;
	return ~res; //Uninvert the binary representation so the display knows which lights to turn on
}
//Gets the binary representation of the character
int getBin(char letter){
   1054c:	213ff404 	addi	r4,r4,-48
   10550:	21003fcc 	andi	r4,r4,255
   10554:	00800a84 	movi	r2,42
   10558:	11000536 	bltu	r2,r4,10570 <getBin+0x24>
   1055c:	008000b4 	movhi	r2,2
   10560:	10b53704 	addi	r2,r2,-11044
   10564:	1109883a 	add	r4,r2,r4
   10568:	20800007 	ldb	r2,0(r4)
   1056c:	f800283a 	ret
	/*Based on the character entered, we convert to binary so the 7-segment knows which lights to turn on.
	The 7-segment has inverted logic so a 0 means the light is on and a 1 means the light is off.
	The rightmost bit starts the index at HEX#[0], and the leftmost bit is HEX#[6], the pattern
	for the 7-segment is shown in the DE0_C5 User Manual*/
	switch(letter){
   10570:	00801fc4 	movi	r2,127
	case 'Z':
		return 0b0100100;
	default:
		return 0b1111111;
	}
}
   10574:	f800283a 	ret

00010578 <getBinaryLetter>:
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
}
//Returns the letter or the upsideDown version of the letter
int getBinaryLetter(char letter){
	int let = getBin(letter);
   10578:	21003fcc 	andi	r4,r4,255
   1057c:	2100201c 	xori	r4,r4,128
	int bit3 = (letter_inv & 0b0001000) >> 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
}
//Returns the letter or the upsideDown version of the letter
int getBinaryLetter(char letter){
   10580:	deffff04 	addi	sp,sp,-4
	int let = getBin(letter);
   10584:	213fe004 	addi	r4,r4,-128
	int bit3 = (letter_inv & 0b0001000) >> 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
}
//Returns the letter or the upsideDown version of the letter
int getBinaryLetter(char letter){
   10588:	dfc00015 	stw	ra,0(sp)
	int let = getBin(letter);
   1058c:	001054c0 	call	1054c <getBin>
	if (upsideDown){
   10590:	d0e27c17 	ldw	r3,-30224(gp)
   10594:	18001426 	beq	r3,zero,105e8 <getBinaryLetter+0x70>
		//If the user has toggled the upsideDown switch, (SW8), we can use bit shifting to invert the display
		int letter_inv = ~let; //Inverting the binary makes the logic easier to deal with.
   10598:	0086303a 	nor	r3,zero,r2
		int bit3 = (letter_inv & 0b0001000) >> 3;
		int bit4 = (letter_inv & 0b0010000) << 1;
		int bit5 = (letter_inv & 0b0100000) >> 1;
		int bit6 = (letter_inv & 0b1000000);
		int full_inv = (0b0000000) | bit0 | bit1 | bit2 | bit3 | bit4 | bit5 | bit6;
		return ~full_inv; //Invert the logic back again
   1059c:	1880004c 	andi	r2,r3,1
   105a0:	100890fa 	slli	r4,r2,3
   105a4:	1880008c 	andi	r2,r3,2
   105a8:	1085883a 	add	r2,r2,r2
   105ac:	2084b03a 	or	r2,r4,r2
   105b0:	1900100c 	andi	r4,r3,64
   105b4:	1104b03a 	or	r2,r2,r4
   105b8:	1900010c 	andi	r4,r3,4
   105bc:	2009d07a 	srai	r4,r4,1
   105c0:	1104b03a 	or	r2,r2,r4
   105c4:	1900020c 	andi	r4,r3,8
   105c8:	2009d0fa 	srai	r4,r4,3
   105cc:	1104b03a 	or	r2,r2,r4
   105d0:	1900040c 	andi	r4,r3,16
   105d4:	18c0080c 	andi	r3,r3,32
   105d8:	1807d07a 	srai	r3,r3,1
   105dc:	2109883a 	add	r4,r4,r4
   105e0:	1104b03a 	or	r2,r2,r4
   105e4:	10c4303a 	nor	r2,r2,r3
	}
	//Otherwise, if the SW8 is in the rightside-up position, we can just display the letter
	return let;
}
   105e8:	dfc00017 	ldw	ra,0(sp)
   105ec:	dec00104 	addi	sp,sp,4
   105f0:	f800283a 	ret

000105f4 <getBinLowLow>:

//Does initial setup of display

//Gets the lowest number representation of the given letter
int getBinLowLow(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; the inverting logic is easier to deal with
   105f4:	21003fcc 	andi	r4,r4,255
   105f8:	2100201c 	xori	r4,r4,128
}

//Does initial setup of display

//Gets the lowest number representation of the given letter
int getBinLowLow(char letter){
   105fc:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; the inverting logic is easier to deal with
   10600:	213fe004 	addi	r4,r4,-128
}

//Does initial setup of display

//Gets the lowest number representation of the given letter
int getBinLowLow(char letter){
   10604:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; the inverting logic is easier to deal with
   10608:	00105780 	call	10578 <getBinaryLetter>
	int bit0 = (letter_inv & 0b0000001) << 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit0;
	return ~res; //Reinvert the binary representation of the modified letter so the display reads the correct representation
   1060c:	0084303a 	nor	r2,zero,r2
   10610:	1080004c 	andi	r2,r2,1
   10614:	100490fa 	slli	r2,r2,3
}
   10618:	0084303a 	nor	r2,zero,r2
   1061c:	dfc00017 	ldw	ra,0(sp)
   10620:	dec00104 	addi	sp,sp,4
   10624:	f800283a 	ret

00010628 <getBinLow>:
//Gets a lower integer representation of the given letter
int getBinLow(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; inverting the binary makes the logic easier
   10628:	21003fcc 	andi	r4,r4,255
   1062c:	2100201c 	xori	r4,r4,128
	int bit0 = (letter_inv & 0b0000001) << 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit0;
	return ~res; //Reinvert the binary representation of the modified letter so the display reads the correct representation
}
//Gets a lower integer representation of the given letter
int getBinLow(char letter){
   10630:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; inverting the binary makes the logic easier
   10634:	213fe004 	addi	r4,r4,-128
	int bit0 = (letter_inv & 0b0000001) << 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit0;
	return ~res; //Reinvert the binary representation of the modified letter so the display reads the correct representation
}
//Gets a lower integer representation of the given letter
int getBinLow(char letter){
   10638:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; inverting the binary makes the logic easier
   1063c:	00105780 	call	10578 <getBinaryLetter>
   10640:	0086303a 	nor	r3,zero,r2
	int bit0 = (letter_inv & 0b0000001) << 6; //This logic deals with bit shifting so the letters appear higher on the display
	int bit1 = (letter_inv & 0b0000010) << 1;
	int bit5 = (letter_inv & 0b0100000) >> 1;
	int bit7 = (letter_inv & 0b1000000) >> 3;
	int res = (0b0000000) | bit0 | bit1 | bit5 | bit7;
	return ~res; //Uninvert the binary representation so the display knows which lights to turn on
   10644:	1900004c 	andi	r4,r3,1
   10648:	200491ba 	slli	r2,r4,6
   1064c:	1900008c 	andi	r4,r3,2
   10650:	2109883a 	add	r4,r4,r4
   10654:	1108b03a 	or	r4,r2,r4
   10658:	1880080c 	andi	r2,r3,32
   1065c:	1005d07a 	srai	r2,r2,1
   10660:	18c0100c 	andi	r3,r3,64
   10664:	2088b03a 	or	r4,r4,r2
   10668:	1805d0fa 	srai	r2,r3,3
}
   1066c:	2084303a 	nor	r2,r4,r2
   10670:	dfc00017 	ldw	ra,0(sp)
   10674:	dec00104 	addi	sp,sp,4
   10678:	f800283a 	ret

0001067c <getBinHigh>:
		return 0b1111111;
	}
}
//Gets the upper binary representation of the character
int getBinHigh(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, the logic is easier to work with inverted
   1067c:	21003fcc 	andi	r4,r4,255
   10680:	2100201c 	xori	r4,r4,128
	default:
		return 0b1111111;
	}
}
//Gets the upper binary representation of the character
int getBinHigh(char letter){
   10684:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, the logic is easier to work with inverted
   10688:	213fe004 	addi	r4,r4,-128
	default:
		return 0b1111111;
	}
}
//Gets the upper binary representation of the character
int getBinHigh(char letter){
   1068c:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, the logic is easier to work with inverted
   10690:	00105780 	call	10578 <getBinaryLetter>
   10694:	0086303a 	nor	r3,zero,r2
	int bit2 = (letter_inv & 0b0000100) >> 1 ; //This logic deals with bit shifting so the letters appear higher on the display
	int bit3 = (letter_inv & 0b0001000) << 3;
	int bit4 = (letter_inv & 0b0010000) << 1 ;
	int bit6 = (letter_inv & 0b1000000) >> 6;
	int res = (0b0000000) | bit2 | bit3 | bit4 | bit6;
	return ~res;//Uninvert the logic to get the correct representation
   10698:	1880010c 	andi	r2,r3,4
   1069c:	1009d07a 	srai	r4,r2,1
   106a0:	1880020c 	andi	r2,r3,8
   106a4:	100490fa 	slli	r2,r2,3
   106a8:	2084b03a 	or	r2,r4,r2
   106ac:	1900040c 	andi	r4,r3,16
   106b0:	18c0100c 	andi	r3,r3,64
   106b4:	1807d1ba 	srai	r3,r3,6
   106b8:	2109883a 	add	r4,r4,r4
   106bc:	1104b03a 	or	r2,r2,r4
}
   106c0:	10c4303a 	nor	r2,r2,r3
   106c4:	dfc00017 	ldw	ra,0(sp)
   106c8:	dec00104 	addi	sp,sp,4
   106cc:	f800283a 	ret

000106d0 <getBinHighHigh>:
//Gets the highest number representation of the given letter
int getBinHighHigh(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, it is easier to deal with the inverted logic
   106d0:	21003fcc 	andi	r4,r4,255
   106d4:	2100201c 	xori	r4,r4,128
	int bit6 = (letter_inv & 0b1000000) >> 6;
	int res = (0b0000000) | bit2 | bit3 | bit4 | bit6;
	return ~res;//Uninvert the logic to get the correct representation
}
//Gets the highest number representation of the given letter
int getBinHighHigh(char letter){
   106d8:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, it is easier to deal with the inverted logic
   106dc:	213fe004 	addi	r4,r4,-128
	int bit6 = (letter_inv & 0b1000000) >> 6;
	int res = (0b0000000) | bit2 | bit3 | bit4 | bit6;
	return ~res;//Uninvert the logic to get the correct representation
}
//Gets the highest number representation of the given letter
int getBinHighHigh(char letter){
   106e0:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, it is easier to deal with the inverted logic
   106e4:	00105780 	call	10578 <getBinaryLetter>
	int bit3 = (letter_inv & 0b0001000) >> 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
   106e8:	0084303a 	nor	r2,zero,r2
   106ec:	1080020c 	andi	r2,r2,8
   106f0:	1005d0fa 	srai	r2,r2,3
}
   106f4:	0084303a 	nor	r2,zero,r2
   106f8:	dfc00017 	ldw	ra,0(sp)
   106fc:	dec00104 	addi	sp,sp,4
   10700:	f800283a 	ret

00010704 <print>:
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   10704:	008000b4 	movhi	r2,2
   10708:	10840804 	addi	r2,r2,4128
   1070c:	11000035 	stwio	r4,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   10710:	008000b4 	movhi	r2,2
   10714:	10840c04 	addi	r2,r2,4144
   10718:	11400035 	stwio	r5,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   1071c:	008000b4 	movhi	r2,2
   10720:	10841004 	addi	r2,r2,4160
   10724:	11800035 	stwio	r6,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   10728:	008000b4 	movhi	r2,2
   1072c:	10841404 	addi	r2,r2,4176
   10730:	11c00035 	stwio	r7,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   10734:	d8c00017 	ldw	r3,0(sp)
   10738:	008000b4 	movhi	r2,2
   1073c:	10841804 	addi	r2,r2,4192
   10740:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, let0);
   10744:	d8c00117 	ldw	r3,4(sp)
   10748:	008000b4 	movhi	r2,2
   1074c:	10841c04 	addi	r2,r2,4208
   10750:	10c00035 	stwio	r3,0(r2)
   10754:	f800283a 	ret

00010758 <print_letters>:
	return;
}
//Prints each of the letters out to the screen; takes into account the dancing letters
void print_letters(char let5, char let4, char let3, char let2, char let1, char let0, int state){
	//If the display is "muted," don't show anything
	if (disp_off){
   10758:	d0e27117 	ldw	r3,-30268(gp)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, let0);
	return;
}
//Prints each of the letters out to the screen; takes into account the dancing letters
void print_letters(char let5, char let4, char let3, char let2, char let1, char let0, int state){
   1075c:	defff404 	addi	sp,sp,-48
   10760:	df000a15 	stw	fp,40(sp)
   10764:	ddc00915 	stw	r23,36(sp)
   10768:	dd800815 	stw	r22,32(sp)
   1076c:	dd400715 	stw	r21,28(sp)
   10770:	dd000615 	stw	r20,24(sp)
   10774:	dcc00515 	stw	r19,20(sp)
   10778:	dc400315 	stw	r17,12(sp)
   1077c:	dc000215 	stw	r16,8(sp)
   10780:	070000b4 	movhi	fp,2
   10784:	05c000b4 	movhi	r23,2
   10788:	058000b4 	movhi	r22,2
   1078c:	054000b4 	movhi	r21,2
   10790:	044000b4 	movhi	r17,2
   10794:	040000b4 	movhi	r16,2
   10798:	dfc00b15 	stw	ra,44(sp)
   1079c:	dc800415 	stw	r18,16(sp)
   107a0:	dd000c17 	ldw	r20,48(sp)
   107a4:	dcc00d17 	ldw	r19,52(sp)
   107a8:	d8800e17 	ldw	r2,56(sp)
   107ac:	e7040804 	addi	fp,fp,4128
   107b0:	bdc40c04 	addi	r23,r23,4144
   107b4:	b5841004 	addi	r22,r22,4160
   107b8:	ad441404 	addi	r21,r21,4176
   107bc:	8c441804 	addi	r17,r17,4192
   107c0:	84041c04 	addi	r16,r16,4208
	//If the display is "muted," don't show anything
	if (disp_off){
   107c4:	18000726 	beq	r3,zero,107e4 <print_letters+0x8c>
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   107c8:	00801fc4 	movi	r2,127
   107cc:	e0800035 	stwio	r2,0(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   107d0:	b8800035 	stwio	r2,0(r23)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   107d4:	b0800035 	stwio	r2,0(r22)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   107d8:	a8800035 	stwio	r2,0(r21)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   107dc:	88800035 	stwio	r2,0(r17)
   107e0:	00007006 	br	109a4 <print_letters+0x24c>
   107e4:	31803fcc 	andi	r6,r6,255
   107e8:	39c03fcc 	andi	r7,r7,255
   107ec:	3180201c 	xori	r6,r6,128
   107f0:	39c0201c 	xori	r7,r7,128
   107f4:	21003fcc 	andi	r4,r4,255
   107f8:	2c803fcc 	andi	r18,r5,255
   107fc:	31bfe004 	addi	r6,r6,-128
   10800:	39ffe004 	addi	r7,r7,-128
   10804:	a5003fcc 	andi	r20,r20,255
   10808:	9cc03fcc 	andi	r19,r19,255
   1080c:	2100201c 	xori	r4,r4,128
   10810:	9480201c 	xori	r18,r18,128
   10814:	a500201c 	xori	r20,r20,128
   10818:	9cc0201c 	xori	r19,r19,128
	if (disp_off){
		print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
		return;
	}
	//State refers to which dancing state the characters are in
	switch (state){
   1081c:	00c00044 	movi	r3,1
   10820:	d9800015 	stw	r6,0(sp)
   10824:	d9c00115 	stw	r7,4(sp)
   10828:	213fe004 	addi	r4,r4,-128
   1082c:	94bfe004 	addi	r18,r18,-128
   10830:	a53fe004 	addi	r20,r20,-128
   10834:	9cffe004 	addi	r19,r19,-128
   10838:	10c02826 	beq	r2,r3,108dc <print_letters+0x184>
   1083c:	18801216 	blt	r3,r2,10888 <print_letters+0x130>
   10840:	1000481e 	bne	r2,zero,10964 <print_letters+0x20c>
	//This is the case where the letters are shifted down by the maximum amount on the display
	case 0:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinLowLow(let5));
   10844:	00105f40 	call	105f4 <getBinLowLow>
   10848:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinLowLow(let4));
   1084c:	9009883a 	mov	r4,r18
   10850:	00105f40 	call	105f4 <getBinLowLow>
   10854:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinLowLow(let3));
   10858:	d9000017 	ldw	r4,0(sp)
   1085c:	00105f40 	call	105f4 <getBinLowLow>
   10860:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinLowLow(let2));
   10864:	d9000117 	ldw	r4,4(sp)
   10868:	00105f40 	call	105f4 <getBinLowLow>
   1086c:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinLowLow(let1));
   10870:	a009883a 	mov	r4,r20
   10874:	00105f40 	call	105f4 <getBinLowLow>
   10878:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinLowLow(let0));
   1087c:	9809883a 	mov	r4,r19
   10880:	00105f40 	call	105f4 <getBinLowLow>
   10884:	00004706 	br	109a4 <print_letters+0x24c>
	if (disp_off){
		print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
		return;
	}
	//State refers to which dancing state the characters are in
	switch (state){
   10888:	00c00084 	movi	r3,2
   1088c:	10c02426 	beq	r2,r3,10920 <print_letters+0x1c8>
   10890:	00c000c4 	movi	r3,3
   10894:	10c0331e 	bne	r2,r3,10964 <print_letters+0x20c>
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinaryLetter(let1));
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinaryLetter(let0));
		return;
	//This is the case where the letters are shifted up a bit on the display
	case 3:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinHigh(let5));
   10898:	001067c0 	call	1067c <getBinHigh>
   1089c:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinHigh(let4));
   108a0:	9009883a 	mov	r4,r18
   108a4:	001067c0 	call	1067c <getBinHigh>
   108a8:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinHigh(let3));
   108ac:	d9000017 	ldw	r4,0(sp)
   108b0:	001067c0 	call	1067c <getBinHigh>
   108b4:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinHigh(let2));
   108b8:	d9000117 	ldw	r4,4(sp)
   108bc:	001067c0 	call	1067c <getBinHigh>
   108c0:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinHigh(let1));
   108c4:	a009883a 	mov	r4,r20
   108c8:	001067c0 	call	1067c <getBinHigh>
   108cc:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinHigh(let0));
   108d0:	9809883a 	mov	r4,r19
   108d4:	001067c0 	call	1067c <getBinHigh>
   108d8:	00003206 	br	109a4 <print_letters+0x24c>
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinLowLow(let1));
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinLowLow(let0));
		return;
	//This is the case where the letters are shifted down a bit on the display
	case 1:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinLow(let5));
   108dc:	00106280 	call	10628 <getBinLow>
   108e0:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinLow(let4));
   108e4:	9009883a 	mov	r4,r18
   108e8:	00106280 	call	10628 <getBinLow>
   108ec:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinLow(let3));
   108f0:	d9000017 	ldw	r4,0(sp)
   108f4:	00106280 	call	10628 <getBinLow>
   108f8:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinLow(let2));
   108fc:	d9000117 	ldw	r4,4(sp)
   10900:	00106280 	call	10628 <getBinLow>
   10904:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinLow(let1));
   10908:	a009883a 	mov	r4,r20
   1090c:	00106280 	call	10628 <getBinLow>
   10910:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinLow(let0));
   10914:	9809883a 	mov	r4,r19
   10918:	00106280 	call	10628 <getBinLow>
   1091c:	00002106 	br	109a4 <print_letters+0x24c>
		return;
	//This is the "main" case, where the full letters are displayed on the display
	case 2:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinaryLetter(let5));
   10920:	00105780 	call	10578 <getBinaryLetter>
   10924:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinaryLetter(let4));
   10928:	9009883a 	mov	r4,r18
   1092c:	00105780 	call	10578 <getBinaryLetter>
   10930:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinaryLetter(let3));
   10934:	d9000017 	ldw	r4,0(sp)
   10938:	00105780 	call	10578 <getBinaryLetter>
   1093c:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinaryLetter(let2));
   10940:	d9000117 	ldw	r4,4(sp)
   10944:	00105780 	call	10578 <getBinaryLetter>
   10948:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinaryLetter(let1));
   1094c:	a009883a 	mov	r4,r20
   10950:	00105780 	call	10578 <getBinaryLetter>
   10954:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinaryLetter(let0));
   10958:	9809883a 	mov	r4,r19
   1095c:	00105780 	call	10578 <getBinaryLetter>
   10960:	00001006 	br	109a4 <print_letters+0x24c>
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinHigh(let1));
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinHigh(let0));
		return;
	//This is the case where the letters are shifted by the maximum amount on the display
	default:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinHighHigh(let5));
   10964:	00106d00 	call	106d0 <getBinHighHigh>
   10968:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinHighHigh(let4));
   1096c:	9009883a 	mov	r4,r18
   10970:	00106d00 	call	106d0 <getBinHighHigh>
   10974:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinHighHigh(let3));
   10978:	d9000017 	ldw	r4,0(sp)
   1097c:	00106d00 	call	106d0 <getBinHighHigh>
   10980:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinHighHigh(let2));
   10984:	d9000117 	ldw	r4,4(sp)
   10988:	00106d00 	call	106d0 <getBinHighHigh>
   1098c:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinHighHigh(let1));
   10990:	a009883a 	mov	r4,r20
   10994:	00106d00 	call	106d0 <getBinHighHigh>
   10998:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinHighHigh(let0));
   1099c:	9809883a 	mov	r4,r19
   109a0:	00106d00 	call	106d0 <getBinHighHigh>
   109a4:	80800035 	stwio	r2,0(r16)
		return;
	}
}
   109a8:	dfc00b17 	ldw	ra,44(sp)
   109ac:	df000a17 	ldw	fp,40(sp)
   109b0:	ddc00917 	ldw	r23,36(sp)
   109b4:	dd800817 	ldw	r22,32(sp)
   109b8:	dd400717 	ldw	r21,28(sp)
   109bc:	dd000617 	ldw	r20,24(sp)
   109c0:	dcc00517 	ldw	r19,20(sp)
   109c4:	dc800417 	ldw	r18,16(sp)
   109c8:	dc400317 	ldw	r17,12(sp)
   109cc:	dc000217 	ldw	r16,8(sp)
   109d0:	dec00c04 	addi	sp,sp,48
   109d4:	f800283a 	ret

000109d8 <main>:
	// ACCELEROMTER INITIALISE
	alt_32 x_read;
	alt_32 y_read;
	alt_32 z_read;
	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   109d8:	010000b4 	movhi	r4,2
    IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_BASE, 0x0000);
    alt_irq_register(TIMER_IRQ, 0, isr);
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0007);
}

int main(){
   109dc:	def9ec04 	addi	sp,sp,-6224
	// ACCELEROMTER INITIALISE
	alt_32 x_read;
	alt_32 y_read;
	alt_32 z_read;
	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   109e0:	21353004 	addi	r4,r4,-11072
    IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_BASE, 0x0000);
    alt_irq_register(TIMER_IRQ, 0, isr);
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0007);
}

int main(){
   109e4:	dfc61315 	stw	ra,6220(sp)
   109e8:	df061215 	stw	fp,6216(sp)
   109ec:	ddc61115 	stw	r23,6212(sp)
   109f0:	dd861015 	stw	r22,6208(sp)
   109f4:	dd460f15 	stw	r21,6204(sp)
   109f8:	dd060e15 	stw	r20,6200(sp)
   109fc:	dcc60d15 	stw	r19,6196(sp)
   10a00:	dc860c15 	stw	r18,6192(sp)
   10a04:	dc460b15 	stw	r17,6188(sp)
   10a08:	dc060a15 	stw	r16,6184(sp)
	// ACCELEROMTER INITIALISE
	alt_32 x_read;
	alt_32 y_read;
	alt_32 z_read;
	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   10a0c:	001d0b00 	call	1d0b0 <alt_up_accelerometer_spi_open_dev>
	if (acc_dev == NULL) { // if return 1, check if the spi ip name is "accelerometer_spi"
   10a10:	1000fd26 	beq	r2,zero,10e08 <main+0x430>
		return 1;
	}
	timer_init(sys_timer_isr);
   10a14:	01000074 	movhi	r4,1
   10a18:	21006f04 	addi	r4,r4,444
	char accel_data_z[4*CHARLIM];
	char switch_data[4*CHARLIM];
	char button_data[4*CHARLIM];

	// SWITCH
	int switch_datain, switch_data_old = IORD_ALTERA_AVALON_PIO_DATA(SWITCH_BASE);
   10a1c:	040000b4 	movhi	r16,2
   10a20:	1029883a 	mov	r20,r2
   10a24:	84042404 	addi	r16,r16,4240
	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
	if (acc_dev == NULL) { // if return 1, check if the spi ip name is "accelerometer_spi"
		return 1;
	}
	timer_init(sys_timer_isr);
   10a28:	00104dc0 	call	104dc <timer_init>
	char accel_data_z[4*CHARLIM];
	char switch_data[4*CHARLIM];
	char button_data[4*CHARLIM];

	// SWITCH
	int switch_datain, switch_data_old = IORD_ALTERA_AVALON_PIO_DATA(SWITCH_BASE);
   10a2c:	80800037 	ldwio	r2,0(r16)
	// BUTTON
	int button_datain, button_data_old = IORD_ALTERA_AVALON_PIO_DATA(BUTTON_BASE);
   10a30:	04c000b4 	movhi	r19,2
   10a34:	9cc42804 	addi	r19,r19,4256
   10a38:	98800037 	ldwio	r2,0(r19)

	// HEX7 display
	char temp_data[4*CHARLIM];
	char to_print[4*CHARLIM];

	strcpy(temp_data, "!!!!!!!!!!!!!!!!!!!!");
   10a3c:	014000b4 	movhi	r5,2
   10a40:	29752204 	addi	r5,r5,-11128
   10a44:	d9010004 	addi	r4,sp,1024
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
   10a48:	04c000b4 	movhi	r19,2

	// HEX7 display
	char temp_data[4*CHARLIM];
	char to_print[4*CHARLIM];

	strcpy(temp_data, "!!!!!!!!!!!!!!!!!!!!");
   10a4c:	00130800 	call	13080 <strcpy>


	int length = 0;
	int temp_length = 0;
	int x = -1;
	int count = 0;
   10a50:	0025883a 	mov	r18,zero
	alt_32 out_y, out_x;


	int length = 0;
	int temp_length = 0;
	int x = -1;
   10a54:	047fffc4 	movi	r17,-1
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
   10a58:	9cfadd04 	addi	r19,r19,-5260

	strcpy(temp_data, "!!!!!!!!!!!!!!!!!!!!");

	while (1) {
		count++;
		IOWR_ALTERA_AVALON_PIO_DATA(LED_BASE, life);
   10a5c:	d0a00017 	ldw	r2,-32768(gp)
   10a60:	00c000b4 	movhi	r3,2
	char to_print[4*CHARLIM];

	strcpy(temp_data, "!!!!!!!!!!!!!!!!!!!!");

	while (1) {
		count++;
   10a64:	94800044 	addi	r18,r18,1
		IOWR_ALTERA_AVALON_PIO_DATA(LED_BASE, life);
   10a68:	18c42004 	addi	r3,r3,4224
   10a6c:	18800035 	stwio	r2,0(r3)

		/* <--> SENDING DATA <--> */
		alt_up_accelerometer_spi_read_x_axis(acc_dev, & x_read);
   10a70:	d9460104 	addi	r5,sp,6148
   10a74:	a009883a 	mov	r4,r20
   10a78:	001d1080 	call	1d108 <alt_up_accelerometer_spi_read_x_axis>
		alt_up_accelerometer_spi_read_y_axis(acc_dev, & y_read);
   10a7c:	d9460004 	addi	r5,sp,6144
   10a80:	a009883a 	mov	r4,r20
   10a84:	001d1600 	call	1d160 <alt_up_accelerometer_spi_read_y_axis>
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
   10a88:	98800317 	ldw	r2,12(r19)
		filter_x[3] = filter_x[2];
		filter_x[2] = filter_x[1];
		filter_x[1] = filter_x[0];
		filter_x[0] = x_read;

		filter_y[4] = filter_y[3];
   10a8c:	040000b4 	movhi	r16,2
   10a90:	843ad804 	addi	r16,r16,-5280
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
   10a94:	98800415 	stw	r2,16(r19)
		filter_x[3] = filter_x[2];
   10a98:	98800217 	ldw	r2,8(r19)
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
		{
			out_x += h[i]*filter_x[i];
   10a9c:	034000b4 	movhi	r13,2

		filter_y[4] = filter_y[3];
		filter_y[3] = filter_y[2];
		filter_y[2] = filter_y[1];
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;
   10aa0:	0013883a 	mov	r9,zero

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
		filter_x[3] = filter_x[2];
   10aa4:	98800315 	stw	r2,12(r19)
		filter_x[2] = filter_x[1];
   10aa8:	98800117 	ldw	r2,4(r19)
		alt_up_accelerometer_spi_read_x_axis(acc_dev, & x_read);
		alt_up_accelerometer_spi_read_y_axis(acc_dev, & y_read);
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;
   10aac:	0039883a 	mov	fp,zero
		/* <--> SENDING DATA <--> */
		alt_up_accelerometer_spi_read_x_axis(acc_dev, & x_read);
		alt_up_accelerometer_spi_read_y_axis(acc_dev, & y_read);
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
   10ab0:	002f883a 	mov	r23,zero
		out_x = 0;

		filter_x[4] = filter_x[3];
		filter_x[3] = filter_x[2];
		filter_x[2] = filter_x[1];
   10ab4:	98800215 	stw	r2,8(r19)
		filter_x[1] = filter_x[0];
   10ab8:	98800017 	ldw	r2,0(r19)
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
		{
			out_x += h[i]*filter_x[i];
   10abc:	6b754204 	addi	r13,r13,-11000
		filter_y[3] = filter_y[2];
		filter_y[2] = filter_y[1];
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
   10ac0:	03000504 	movi	r12,20
		out_x = 0;

		filter_x[4] = filter_x[3];
		filter_x[3] = filter_x[2];
		filter_x[2] = filter_x[1];
		filter_x[1] = filter_x[0];
   10ac4:	98800115 	stw	r2,4(r19)
		filter_x[0] = x_read;
   10ac8:	d8860117 	ldw	r2,6148(sp)
   10acc:	98800015 	stw	r2,0(r19)

		filter_y[4] = filter_y[3];
   10ad0:	80800317 	ldw	r2,12(r16)
   10ad4:	80800415 	stw	r2,16(r16)
		filter_y[3] = filter_y[2];
   10ad8:	80800217 	ldw	r2,8(r16)
   10adc:	80800315 	stw	r2,12(r16)
		filter_y[2] = filter_y[1];
   10ae0:	80800117 	ldw	r2,4(r16)
   10ae4:	80800215 	stw	r2,8(r16)
		filter_y[1] = filter_y[0];
   10ae8:	80800017 	ldw	r2,0(r16)
   10aec:	80800115 	stw	r2,4(r16)
		filter_y[0] = y_read;
   10af0:	d8860017 	ldw	r2,6144(sp)
   10af4:	80800015 	stw	r2,0(r16)

		for ( int i = 0; i < 5; i++ )
		{
			out_x += h[i]*filter_x[i];
   10af8:	4a45883a 	add	r2,r9,r9
   10afc:	010000b4 	movhi	r4,2
   10b00:	1345883a 	add	r2,r2,r13
   10b04:	213add04 	addi	r4,r4,-5260
   10b08:	15800017 	ldw	r22,0(r2)
   10b0c:	15400117 	ldw	r21,4(r2)
   10b10:	4905883a 	add	r2,r9,r4
   10b14:	11000017 	ldw	r4,0(r2)
   10b18:	db060815 	stw	r12,6176(sp)
   10b1c:	db460915 	stw	r13,6180(sp)
   10b20:	da460415 	stw	r9,6160(sp)
   10b24:	00121880 	call	12188 <__floatsidf>
   10b28:	b00d883a 	mov	r6,r22
   10b2c:	a80f883a 	mov	r7,r21
   10b30:	180b883a 	mov	r5,r3
   10b34:	1009883a 	mov	r4,r2
   10b38:	001189c0 	call	1189c <__muldf3>
   10b3c:	e009883a 	mov	r4,fp
   10b40:	d8c60315 	stw	r3,6156(sp)
   10b44:	d8860215 	stw	r2,6152(sp)
   10b48:	00121880 	call	12188 <__floatsidf>
   10b4c:	db860217 	ldw	r14,6152(sp)
   10b50:	d9460317 	ldw	r5,6156(sp)
   10b54:	100d883a 	mov	r6,r2
   10b58:	7009883a 	mov	r4,r14
   10b5c:	180f883a 	mov	r7,r3
   10b60:	0010ff00 	call	10ff0 <__adddf3>
   10b64:	180b883a 	mov	r5,r3
   10b68:	1009883a 	mov	r4,r2
   10b6c:	00121080 	call	12108 <__fixdfsi>
			out_y += h[i]*filter_y[i];
   10b70:	da460417 	ldw	r9,6160(sp)
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
		{
			out_x += h[i]*filter_x[i];
   10b74:	1039883a 	mov	fp,r2
			out_y += h[i]*filter_y[i];
   10b78:	4c05883a 	add	r2,r9,r16
   10b7c:	11000017 	ldw	r4,0(r2)
   10b80:	00121880 	call	12188 <__floatsidf>
   10b84:	b00d883a 	mov	r6,r22
   10b88:	a80f883a 	mov	r7,r21
   10b8c:	180b883a 	mov	r5,r3
   10b90:	1009883a 	mov	r4,r2
   10b94:	001189c0 	call	1189c <__muldf3>
   10b98:	b809883a 	mov	r4,r23
   10b9c:	102d883a 	mov	r22,r2
   10ba0:	182b883a 	mov	r21,r3
   10ba4:	00121880 	call	12188 <__floatsidf>
   10ba8:	100d883a 	mov	r6,r2
   10bac:	180f883a 	mov	r7,r3
   10bb0:	b009883a 	mov	r4,r22
   10bb4:	a80b883a 	mov	r5,r21
   10bb8:	0010ff00 	call	10ff0 <__adddf3>
   10bbc:	1009883a 	mov	r4,r2
   10bc0:	180b883a 	mov	r5,r3
   10bc4:	00121080 	call	12108 <__fixdfsi>
   10bc8:	da460417 	ldw	r9,6160(sp)
		filter_y[3] = filter_y[2];
		filter_y[2] = filter_y[1];
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
   10bcc:	db060817 	ldw	r12,6176(sp)
		{
			out_x += h[i]*filter_x[i];
			out_y += h[i]*filter_y[i];
   10bd0:	102f883a 	mov	r23,r2
   10bd4:	4a400104 	addi	r9,r9,4
		filter_y[3] = filter_y[2];
		filter_y[2] = filter_y[1];
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
   10bd8:	db460917 	ldw	r13,6180(sp)
   10bdc:	4b3fc61e 	bne	r9,r12,10af8 <_gp+0xfffea9cc>
			out_x += h[i]*filter_x[i];
			out_y += h[i]*filter_y[i];
		}

		//sprintf(accel_data_z, "%x", z_read);
		sprintf(accel_data_x, "%x", out_x);
   10be0:	014000b4 	movhi	r5,2
   10be4:	e00d883a 	mov	r6,fp
   10be8:	d9050004 	addi	r4,sp,5120
   10bec:	29753604 	addi	r5,r5,-11048
   10bf0:	0012dd40 	call	12dd4 <sprintf>
		sprintf(accel_data_y, "%x", out_y);
   10bf4:	014000b4 	movhi	r5,2
   10bf8:	b80d883a 	mov	r6,r23
   10bfc:	29753604 	addi	r5,r5,-11048
   10c00:	d9040004 	addi	r4,sp,4096
   10c04:	0012dd40 	call	12dd4 <sprintf>

		//SWITCH
		//switch_datain = IORD_ALTERA_AVALON_PIO_DATA(SWITCH_BASE);
		//output_switch( switch_datain, switch_data_old );
		//switch_data_old = switch_datain;
		switch_datain = IORD_ALTERA_AVALON_PIO_DATA(SWITCH_BASE);
   10c08:	008000b4 	movhi	r2,2
   10c0c:	10842404 	addi	r2,r2,4240
   10c10:	11800037 	ldwio	r6,0(r2)
		sprintf(switch_data, "%x", switch_datain);
   10c14:	014000b4 	movhi	r5,2
   10c18:	29753604 	addi	r5,r5,-11048
   10c1c:	d9030004 	addi	r4,sp,3072
   10c20:	0012dd40 	call	12dd4 <sprintf>

		// BUTTON
		//button_datain = IORD_ALTERA_AVALON_PIO_DATA(BUTTON_BASE);
		//output_button( button_datain, button_data_old );
		//button_data_old = button_datain;
		button_datain = IORD_ALTERA_AVALON_PIO_DATA(BUTTON_BASE);
   10c24:	00c000b4 	movhi	r3,2
   10c28:	18c42804 	addi	r3,r3,4256
   10c2c:	19800037 	ldwio	r6,0(r3)
		sprintf(button_data, "%x", button_datain);
   10c30:	014000b4 	movhi	r5,2
   10c34:	29753604 	addi	r5,r5,-11048
   10c38:	d9020004 	addi	r4,sp,2048
   10c3c:	0012dd40 	call	12dd4 <sprintf>

		print_data(accel_data_x, accel_data_y, switch_data, button_data);
   10c40:	d9c20004 	addi	r7,sp,2048
   10c44:	d9830004 	addi	r6,sp,3072
   10c48:	d9440004 	addi	r5,sp,4096
   10c4c:	d9050004 	addi	r4,sp,5120
   10c50:	001023c0 	call	1023c <print_data>
		/* <--> RECIEVING DATA <--> */

		//length = strlen( to_print );
		//temp_length = strlen( temp_data );

		strcpy(to_print, read_chars());
   10c54:	001044c0 	call	1044c <read_chars>
   10c58:	100b883a 	mov	r5,r2
   10c5c:	d809883a 	mov	r4,sp
   10c60:	00130800 	call	13080 <strcpy>

		//if ( strcmp(to_print, temp_data) != 0 ) { x = -1; };

		if ( strcmp(to_print, "!!!!!!!!!!!!!!!!!!!!") != 0 ) {
   10c64:	014000b4 	movhi	r5,2
   10c68:	29752204 	addi	r5,r5,-11128
   10c6c:	d809883a 	mov	r4,sp
   10c70:	0012fa40 	call	12fa4 <strcmp>
   10c74:	10000426 	beq	r2,zero,10c88 <main+0x2b0>
			strcpy(temp_data, to_print);
   10c78:	d80b883a 	mov	r5,sp
   10c7c:	d9010004 	addi	r4,sp,1024
   10c80:	00130800 	call	13080 <strcpy>
			x = -1;
   10c84:	047fffc4 	movi	r17,-1
		}

		alt_putstr("");
   10c88:	010000b4 	movhi	r4,2
   10c8c:	21351d04 	addi	r4,r4,-11148
   10c90:	001cee00 	call	1cee0 <alt_putstr>
   10c94:	01c000b4 	movhi	r7,2
   10c98:	018000b4 	movhi	r6,2
   10c9c:	00c000b4 	movhi	r3,2
   10ca0:	058000b4 	movhi	r22,2
   10ca4:	054000b4 	movhi	r21,2
   10ca8:	040000b4 	movhi	r16,2
		//alt_putstr(to_print);
		//alt_putstr(temp_data);

		if (count == 5)
   10cac:	01000144 	movi	r4,5
   10cb0:	00800f04 	movi	r2,60
   10cb4:	39c40804 	addi	r7,r7,4128
   10cb8:	31840c04 	addi	r6,r6,4144
   10cbc:	18c41004 	addi	r3,r3,4160
   10cc0:	b5841404 	addi	r22,r22,4176
   10cc4:	ad441804 	addi	r21,r21,4192
   10cc8:	84041c04 	addi	r16,r16,4208
   10ccc:	9100031e 	bne	r18,r4,10cdc <main+0x304>
		{
			if(x<=60) { x++; }
   10cd0:	14400416 	blt	r2,r17,10ce4 <main+0x30c>
   10cd4:	8c400044 	addi	r17,r17,1
			count = 0;
   10cd8:	0025883a 	mov	r18,zero
		}
		if (x > 60)
   10cdc:	1440090e 	bge	r2,r17,10d04 <main+0x32c>
   10ce0:	00000106 	br	10ce8 <main+0x310>
		//alt_putstr(temp_data);

		if (count == 5)
		{
			if(x<=60) { x++; }
			count = 0;
   10ce4:	0025883a 	mov	r18,zero
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   10ce8:	00801fc4 	movi	r2,127
   10cec:	38800035 	stwio	r2,0(r7)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   10cf0:	30800035 	stwio	r2,0(r6)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   10cf4:	18800035 	stwio	r2,0(r3)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   10cf8:	b0800035 	stwio	r2,0(r22)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   10cfc:	a8800035 	stwio	r2,0(r21)
   10d00:	00003f06 	br	10e00 <main+0x428>
		{
			print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
		}
		else{
			//print(getBin(to_print[x%20]), getBin(to_print[(x+1)%20]), getBin(to_print[(x+2)%20]), getBin(to_print[(x+3)%20]), getBin(to_print[(x+4)%20]), getBin(to_print[(x+5)%20]));
			print(getBin(temp_data[x%20]), getBin(temp_data[(x+1)%20]), getBin(temp_data[(x+2)%20]), getBin(temp_data[(x+3)%20]), getBin(temp_data[(x+4)%20]), getBin(temp_data[(x+5)%20]));
   10d04:	01400504 	movi	r5,20
   10d08:	8809883a 	mov	r4,r17
   10d0c:	d9c60515 	stw	r7,6164(sp)
   10d10:	d8c60715 	stw	r3,6172(sp)
   10d14:	d9860615 	stw	r6,6168(sp)
   10d18:	0010ec00 	call	10ec0 <__modsi3>
   10d1c:	d9010004 	addi	r4,sp,1024
   10d20:	2085883a 	add	r2,r4,r2
   10d24:	11000007 	ldb	r4,0(r2)
   10d28:	001054c0 	call	1054c <getBin>
   10d2c:	01400504 	movi	r5,20
   10d30:	89000044 	addi	r4,r17,1
   10d34:	d8860915 	stw	r2,6180(sp)
   10d38:	0010ec00 	call	10ec0 <__modsi3>
   10d3c:	d9010004 	addi	r4,sp,1024
   10d40:	2085883a 	add	r2,r4,r2
   10d44:	11000007 	ldb	r4,0(r2)
   10d48:	001054c0 	call	1054c <getBin>
   10d4c:	01400504 	movi	r5,20
   10d50:	89000084 	addi	r4,r17,2
   10d54:	d8860815 	stw	r2,6176(sp)
   10d58:	0010ec00 	call	10ec0 <__modsi3>
   10d5c:	d9010004 	addi	r4,sp,1024
   10d60:	2085883a 	add	r2,r4,r2
   10d64:	11000007 	ldb	r4,0(r2)
   10d68:	001054c0 	call	1054c <getBin>
   10d6c:	01400504 	movi	r5,20
   10d70:	890000c4 	addi	r4,r17,3
   10d74:	d8860315 	stw	r2,6156(sp)
   10d78:	0010ec00 	call	10ec0 <__modsi3>
   10d7c:	d9010004 	addi	r4,sp,1024
   10d80:	2085883a 	add	r2,r4,r2
   10d84:	11000007 	ldb	r4,0(r2)
   10d88:	001054c0 	call	1054c <getBin>
   10d8c:	01400504 	movi	r5,20
   10d90:	89000104 	addi	r4,r17,4
   10d94:	d8860215 	stw	r2,6152(sp)
   10d98:	0010ec00 	call	10ec0 <__modsi3>
   10d9c:	d9010004 	addi	r4,sp,1024
   10da0:	2085883a 	add	r2,r4,r2
   10da4:	11000007 	ldb	r4,0(r2)
   10da8:	001054c0 	call	1054c <getBin>
   10dac:	01400504 	movi	r5,20
   10db0:	89000144 	addi	r4,r17,5
   10db4:	d8860415 	stw	r2,6160(sp)
   10db8:	0010ec00 	call	10ec0 <__modsi3>
   10dbc:	d9010004 	addi	r4,sp,1024
   10dc0:	2085883a 	add	r2,r4,r2
   10dc4:	11000007 	ldb	r4,0(r2)
   10dc8:	001054c0 	call	1054c <getBin>
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   10dcc:	d9c60517 	ldw	r7,6164(sp)
   10dd0:	db460917 	ldw	r13,6180(sp)
   10dd4:	3b400035 	stwio	r13,0(r7)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   10dd8:	d9860617 	ldw	r6,6168(sp)
   10ddc:	db060817 	ldw	r12,6176(sp)
   10de0:	33000035 	stwio	r12,0(r6)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   10de4:	d8c60717 	ldw	r3,6172(sp)
   10de8:	dac60317 	ldw	r11,6156(sp)
   10dec:	1ac00035 	stwio	r11,0(r3)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   10df0:	da860217 	ldw	r10,6152(sp)
   10df4:	b2800035 	stwio	r10,0(r22)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   10df8:	da460417 	ldw	r9,6160(sp)
   10dfc:	aa400035 	stwio	r9,0(r21)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, let0);
   10e00:	80800035 	stwio	r2,0(r16)
   10e04:	003f1506 	br	10a5c <_gp+0xfffea930>

		}

	}
	return 0;
}
   10e08:	00800044 	movi	r2,1
   10e0c:	dfc61317 	ldw	ra,6220(sp)
   10e10:	df061217 	ldw	fp,6216(sp)
   10e14:	ddc61117 	ldw	r23,6212(sp)
   10e18:	dd861017 	ldw	r22,6208(sp)
   10e1c:	dd460f17 	ldw	r21,6204(sp)
   10e20:	dd060e17 	ldw	r20,6200(sp)
   10e24:	dcc60d17 	ldw	r19,6196(sp)
   10e28:	dc860c17 	ldw	r18,6192(sp)
   10e2c:	dc460b17 	ldw	r17,6188(sp)
   10e30:	dc060a17 	ldw	r16,6184(sp)
   10e34:	dec61404 	addi	sp,sp,6224
   10e38:	f800283a 	ret

00010e3c <__divsi3>:
   10e3c:	20001b16 	blt	r4,zero,10eac <__divsi3+0x70>
   10e40:	000f883a 	mov	r7,zero
   10e44:	28001616 	blt	r5,zero,10ea0 <__divsi3+0x64>
   10e48:	200d883a 	mov	r6,r4
   10e4c:	29001a2e 	bgeu	r5,r4,10eb8 <__divsi3+0x7c>
   10e50:	00800804 	movi	r2,32
   10e54:	00c00044 	movi	r3,1
   10e58:	00000106 	br	10e60 <__divsi3+0x24>
   10e5c:	10000d26 	beq	r2,zero,10e94 <__divsi3+0x58>
   10e60:	294b883a 	add	r5,r5,r5
   10e64:	10bfffc4 	addi	r2,r2,-1
   10e68:	18c7883a 	add	r3,r3,r3
   10e6c:	293ffb36 	bltu	r5,r4,10e5c <_gp+0xfffead30>
   10e70:	0005883a 	mov	r2,zero
   10e74:	18000726 	beq	r3,zero,10e94 <__divsi3+0x58>
   10e78:	0005883a 	mov	r2,zero
   10e7c:	31400236 	bltu	r6,r5,10e88 <__divsi3+0x4c>
   10e80:	314dc83a 	sub	r6,r6,r5
   10e84:	10c4b03a 	or	r2,r2,r3
   10e88:	1806d07a 	srli	r3,r3,1
   10e8c:	280ad07a 	srli	r5,r5,1
   10e90:	183ffa1e 	bne	r3,zero,10e7c <_gp+0xfffead50>
   10e94:	38000126 	beq	r7,zero,10e9c <__divsi3+0x60>
   10e98:	0085c83a 	sub	r2,zero,r2
   10e9c:	f800283a 	ret
   10ea0:	014bc83a 	sub	r5,zero,r5
   10ea4:	39c0005c 	xori	r7,r7,1
   10ea8:	003fe706 	br	10e48 <_gp+0xfffead1c>
   10eac:	0109c83a 	sub	r4,zero,r4
   10eb0:	01c00044 	movi	r7,1
   10eb4:	003fe306 	br	10e44 <_gp+0xfffead18>
   10eb8:	00c00044 	movi	r3,1
   10ebc:	003fee06 	br	10e78 <_gp+0xfffead4c>

00010ec0 <__modsi3>:
   10ec0:	20001716 	blt	r4,zero,10f20 <__modsi3+0x60>
   10ec4:	000f883a 	mov	r7,zero
   10ec8:	2005883a 	mov	r2,r4
   10ecc:	28001216 	blt	r5,zero,10f18 <__modsi3+0x58>
   10ed0:	2900162e 	bgeu	r5,r4,10f2c <__modsi3+0x6c>
   10ed4:	01800804 	movi	r6,32
   10ed8:	00c00044 	movi	r3,1
   10edc:	00000106 	br	10ee4 <__modsi3+0x24>
   10ee0:	30000a26 	beq	r6,zero,10f0c <__modsi3+0x4c>
   10ee4:	294b883a 	add	r5,r5,r5
   10ee8:	31bfffc4 	addi	r6,r6,-1
   10eec:	18c7883a 	add	r3,r3,r3
   10ef0:	293ffb36 	bltu	r5,r4,10ee0 <_gp+0xfffeadb4>
   10ef4:	18000526 	beq	r3,zero,10f0c <__modsi3+0x4c>
   10ef8:	1806d07a 	srli	r3,r3,1
   10efc:	11400136 	bltu	r2,r5,10f04 <__modsi3+0x44>
   10f00:	1145c83a 	sub	r2,r2,r5
   10f04:	280ad07a 	srli	r5,r5,1
   10f08:	183ffb1e 	bne	r3,zero,10ef8 <_gp+0xfffeadcc>
   10f0c:	38000126 	beq	r7,zero,10f14 <__modsi3+0x54>
   10f10:	0085c83a 	sub	r2,zero,r2
   10f14:	f800283a 	ret
   10f18:	014bc83a 	sub	r5,zero,r5
   10f1c:	003fec06 	br	10ed0 <_gp+0xfffeada4>
   10f20:	0109c83a 	sub	r4,zero,r4
   10f24:	01c00044 	movi	r7,1
   10f28:	003fe706 	br	10ec8 <_gp+0xfffead9c>
   10f2c:	00c00044 	movi	r3,1
   10f30:	003ff106 	br	10ef8 <_gp+0xfffeadcc>

00010f34 <__udivsi3>:
   10f34:	200d883a 	mov	r6,r4
   10f38:	2900152e 	bgeu	r5,r4,10f90 <__udivsi3+0x5c>
   10f3c:	28001416 	blt	r5,zero,10f90 <__udivsi3+0x5c>
   10f40:	00800804 	movi	r2,32
   10f44:	00c00044 	movi	r3,1
   10f48:	00000206 	br	10f54 <__udivsi3+0x20>
   10f4c:	10000e26 	beq	r2,zero,10f88 <__udivsi3+0x54>
   10f50:	28000516 	blt	r5,zero,10f68 <__udivsi3+0x34>
   10f54:	294b883a 	add	r5,r5,r5
   10f58:	10bfffc4 	addi	r2,r2,-1
   10f5c:	18c7883a 	add	r3,r3,r3
   10f60:	293ffa36 	bltu	r5,r4,10f4c <_gp+0xfffeae20>
   10f64:	18000826 	beq	r3,zero,10f88 <__udivsi3+0x54>
   10f68:	0005883a 	mov	r2,zero
   10f6c:	31400236 	bltu	r6,r5,10f78 <__udivsi3+0x44>
   10f70:	314dc83a 	sub	r6,r6,r5
   10f74:	10c4b03a 	or	r2,r2,r3
   10f78:	1806d07a 	srli	r3,r3,1
   10f7c:	280ad07a 	srli	r5,r5,1
   10f80:	183ffa1e 	bne	r3,zero,10f6c <_gp+0xfffeae40>
   10f84:	f800283a 	ret
   10f88:	0005883a 	mov	r2,zero
   10f8c:	f800283a 	ret
   10f90:	00c00044 	movi	r3,1
   10f94:	003ff406 	br	10f68 <_gp+0xfffeae3c>

00010f98 <__umodsi3>:
   10f98:	2005883a 	mov	r2,r4
   10f9c:	2900122e 	bgeu	r5,r4,10fe8 <__umodsi3+0x50>
   10fa0:	28001116 	blt	r5,zero,10fe8 <__umodsi3+0x50>
   10fa4:	01800804 	movi	r6,32
   10fa8:	00c00044 	movi	r3,1
   10fac:	00000206 	br	10fb8 <__umodsi3+0x20>
   10fb0:	30000c26 	beq	r6,zero,10fe4 <__umodsi3+0x4c>
   10fb4:	28000516 	blt	r5,zero,10fcc <__umodsi3+0x34>
   10fb8:	294b883a 	add	r5,r5,r5
   10fbc:	31bfffc4 	addi	r6,r6,-1
   10fc0:	18c7883a 	add	r3,r3,r3
   10fc4:	293ffa36 	bltu	r5,r4,10fb0 <_gp+0xfffeae84>
   10fc8:	18000626 	beq	r3,zero,10fe4 <__umodsi3+0x4c>
   10fcc:	1806d07a 	srli	r3,r3,1
   10fd0:	11400136 	bltu	r2,r5,10fd8 <__umodsi3+0x40>
   10fd4:	1145c83a 	sub	r2,r2,r5
   10fd8:	280ad07a 	srli	r5,r5,1
   10fdc:	183ffb1e 	bne	r3,zero,10fcc <_gp+0xfffeaea0>
   10fe0:	f800283a 	ret
   10fe4:	f800283a 	ret
   10fe8:	00c00044 	movi	r3,1
   10fec:	003ff706 	br	10fcc <_gp+0xfffeaea0>

00010ff0 <__adddf3>:
   10ff0:	02c00434 	movhi	r11,16
   10ff4:	5affffc4 	addi	r11,r11,-1
   10ff8:	2806d7fa 	srli	r3,r5,31
   10ffc:	2ad4703a 	and	r10,r5,r11
   11000:	3ad2703a 	and	r9,r7,r11
   11004:	3804d53a 	srli	r2,r7,20
   11008:	3018d77a 	srli	r12,r6,29
   1100c:	280ad53a 	srli	r5,r5,20
   11010:	501490fa 	slli	r10,r10,3
   11014:	2010d77a 	srli	r8,r4,29
   11018:	481290fa 	slli	r9,r9,3
   1101c:	380ed7fa 	srli	r7,r7,31
   11020:	defffb04 	addi	sp,sp,-20
   11024:	dc800215 	stw	r18,8(sp)
   11028:	dc400115 	stw	r17,4(sp)
   1102c:	dc000015 	stw	r16,0(sp)
   11030:	dfc00415 	stw	ra,16(sp)
   11034:	dcc00315 	stw	r19,12(sp)
   11038:	1c803fcc 	andi	r18,r3,255
   1103c:	2c01ffcc 	andi	r16,r5,2047
   11040:	5210b03a 	or	r8,r10,r8
   11044:	202290fa 	slli	r17,r4,3
   11048:	1081ffcc 	andi	r2,r2,2047
   1104c:	4b12b03a 	or	r9,r9,r12
   11050:	300c90fa 	slli	r6,r6,3
   11054:	91c07526 	beq	r18,r7,1122c <__adddf3+0x23c>
   11058:	8087c83a 	sub	r3,r16,r2
   1105c:	00c0ab0e 	bge	zero,r3,1130c <__adddf3+0x31c>
   11060:	10002a1e 	bne	r2,zero,1110c <__adddf3+0x11c>
   11064:	4984b03a 	or	r2,r9,r6
   11068:	1000961e 	bne	r2,zero,112c4 <__adddf3+0x2d4>
   1106c:	888001cc 	andi	r2,r17,7
   11070:	10000726 	beq	r2,zero,11090 <__adddf3+0xa0>
   11074:	888003cc 	andi	r2,r17,15
   11078:	00c00104 	movi	r3,4
   1107c:	10c00426 	beq	r2,r3,11090 <__adddf3+0xa0>
   11080:	88c7883a 	add	r3,r17,r3
   11084:	1c63803a 	cmpltu	r17,r3,r17
   11088:	4451883a 	add	r8,r8,r17
   1108c:	1823883a 	mov	r17,r3
   11090:	4080202c 	andhi	r2,r8,128
   11094:	10005926 	beq	r2,zero,111fc <__adddf3+0x20c>
   11098:	84000044 	addi	r16,r16,1
   1109c:	0081ffc4 	movi	r2,2047
   110a0:	8080ba26 	beq	r16,r2,1138c <__adddf3+0x39c>
   110a4:	00bfe034 	movhi	r2,65408
   110a8:	10bfffc4 	addi	r2,r2,-1
   110ac:	4090703a 	and	r8,r8,r2
   110b0:	4004977a 	slli	r2,r8,29
   110b4:	4010927a 	slli	r8,r8,9
   110b8:	8822d0fa 	srli	r17,r17,3
   110bc:	8401ffcc 	andi	r16,r16,2047
   110c0:	4010d33a 	srli	r8,r8,12
   110c4:	9007883a 	mov	r3,r18
   110c8:	1444b03a 	or	r2,r2,r17
   110cc:	8401ffcc 	andi	r16,r16,2047
   110d0:	8020953a 	slli	r16,r16,20
   110d4:	18c03fcc 	andi	r3,r3,255
   110d8:	01000434 	movhi	r4,16
   110dc:	213fffc4 	addi	r4,r4,-1
   110e0:	180697fa 	slli	r3,r3,31
   110e4:	4110703a 	and	r8,r8,r4
   110e8:	4410b03a 	or	r8,r8,r16
   110ec:	40c6b03a 	or	r3,r8,r3
   110f0:	dfc00417 	ldw	ra,16(sp)
   110f4:	dcc00317 	ldw	r19,12(sp)
   110f8:	dc800217 	ldw	r18,8(sp)
   110fc:	dc400117 	ldw	r17,4(sp)
   11100:	dc000017 	ldw	r16,0(sp)
   11104:	dec00504 	addi	sp,sp,20
   11108:	f800283a 	ret
   1110c:	0081ffc4 	movi	r2,2047
   11110:	80bfd626 	beq	r16,r2,1106c <_gp+0xfffeaf40>
   11114:	4a402034 	orhi	r9,r9,128
   11118:	00800e04 	movi	r2,56
   1111c:	10c09f16 	blt	r2,r3,1139c <__adddf3+0x3ac>
   11120:	008007c4 	movi	r2,31
   11124:	10c0c216 	blt	r2,r3,11430 <__adddf3+0x440>
   11128:	00800804 	movi	r2,32
   1112c:	10c5c83a 	sub	r2,r2,r3
   11130:	488a983a 	sll	r5,r9,r2
   11134:	30c8d83a 	srl	r4,r6,r3
   11138:	3084983a 	sll	r2,r6,r2
   1113c:	48c6d83a 	srl	r3,r9,r3
   11140:	290cb03a 	or	r6,r5,r4
   11144:	1004c03a 	cmpne	r2,r2,zero
   11148:	308cb03a 	or	r6,r6,r2
   1114c:	898dc83a 	sub	r6,r17,r6
   11150:	89a3803a 	cmpltu	r17,r17,r6
   11154:	40d1c83a 	sub	r8,r8,r3
   11158:	4451c83a 	sub	r8,r8,r17
   1115c:	3023883a 	mov	r17,r6
   11160:	4080202c 	andhi	r2,r8,128
   11164:	10002326 	beq	r2,zero,111f4 <__adddf3+0x204>
   11168:	04c02034 	movhi	r19,128
   1116c:	9cffffc4 	addi	r19,r19,-1
   11170:	44e6703a 	and	r19,r8,r19
   11174:	98007626 	beq	r19,zero,11350 <__adddf3+0x360>
   11178:	9809883a 	mov	r4,r19
   1117c:	00122640 	call	12264 <__clzsi2>
   11180:	10fffe04 	addi	r3,r2,-8
   11184:	010007c4 	movi	r4,31
   11188:	20c07716 	blt	r4,r3,11368 <__adddf3+0x378>
   1118c:	00800804 	movi	r2,32
   11190:	10c5c83a 	sub	r2,r2,r3
   11194:	8884d83a 	srl	r2,r17,r2
   11198:	98d0983a 	sll	r8,r19,r3
   1119c:	88e2983a 	sll	r17,r17,r3
   111a0:	1204b03a 	or	r2,r2,r8
   111a4:	1c007416 	blt	r3,r16,11378 <__adddf3+0x388>
   111a8:	1c21c83a 	sub	r16,r3,r16
   111ac:	82000044 	addi	r8,r16,1
   111b0:	00c007c4 	movi	r3,31
   111b4:	1a009116 	blt	r3,r8,113fc <__adddf3+0x40c>
   111b8:	00c00804 	movi	r3,32
   111bc:	1a07c83a 	sub	r3,r3,r8
   111c0:	8a08d83a 	srl	r4,r17,r8
   111c4:	88e2983a 	sll	r17,r17,r3
   111c8:	10c6983a 	sll	r3,r2,r3
   111cc:	1210d83a 	srl	r8,r2,r8
   111d0:	8804c03a 	cmpne	r2,r17,zero
   111d4:	1906b03a 	or	r3,r3,r4
   111d8:	18a2b03a 	or	r17,r3,r2
   111dc:	0021883a 	mov	r16,zero
   111e0:	003fa206 	br	1106c <_gp+0xfffeaf40>
   111e4:	1890b03a 	or	r8,r3,r2
   111e8:	40017d26 	beq	r8,zero,117e0 <__adddf3+0x7f0>
   111ec:	1011883a 	mov	r8,r2
   111f0:	1823883a 	mov	r17,r3
   111f4:	888001cc 	andi	r2,r17,7
   111f8:	103f9e1e 	bne	r2,zero,11074 <_gp+0xfffeaf48>
   111fc:	4004977a 	slli	r2,r8,29
   11200:	8822d0fa 	srli	r17,r17,3
   11204:	4010d0fa 	srli	r8,r8,3
   11208:	9007883a 	mov	r3,r18
   1120c:	1444b03a 	or	r2,r2,r17
   11210:	0101ffc4 	movi	r4,2047
   11214:	81002426 	beq	r16,r4,112a8 <__adddf3+0x2b8>
   11218:	8120703a 	and	r16,r16,r4
   1121c:	01000434 	movhi	r4,16
   11220:	213fffc4 	addi	r4,r4,-1
   11224:	4110703a 	and	r8,r8,r4
   11228:	003fa806 	br	110cc <_gp+0xfffeafa0>
   1122c:	8089c83a 	sub	r4,r16,r2
   11230:	01005e0e 	bge	zero,r4,113ac <__adddf3+0x3bc>
   11234:	10002b26 	beq	r2,zero,112e4 <__adddf3+0x2f4>
   11238:	0081ffc4 	movi	r2,2047
   1123c:	80bf8b26 	beq	r16,r2,1106c <_gp+0xfffeaf40>
   11240:	4a402034 	orhi	r9,r9,128
   11244:	00800e04 	movi	r2,56
   11248:	1100a40e 	bge	r2,r4,114dc <__adddf3+0x4ec>
   1124c:	498cb03a 	or	r6,r9,r6
   11250:	300ac03a 	cmpne	r5,r6,zero
   11254:	0013883a 	mov	r9,zero
   11258:	2c4b883a 	add	r5,r5,r17
   1125c:	2c63803a 	cmpltu	r17,r5,r17
   11260:	4a11883a 	add	r8,r9,r8
   11264:	8a11883a 	add	r8,r17,r8
   11268:	2823883a 	mov	r17,r5
   1126c:	4080202c 	andhi	r2,r8,128
   11270:	103fe026 	beq	r2,zero,111f4 <_gp+0xfffeb0c8>
   11274:	84000044 	addi	r16,r16,1
   11278:	0081ffc4 	movi	r2,2047
   1127c:	8080d226 	beq	r16,r2,115c8 <__adddf3+0x5d8>
   11280:	00bfe034 	movhi	r2,65408
   11284:	10bfffc4 	addi	r2,r2,-1
   11288:	4090703a 	and	r8,r8,r2
   1128c:	880ad07a 	srli	r5,r17,1
   11290:	400897fa 	slli	r4,r8,31
   11294:	88c0004c 	andi	r3,r17,1
   11298:	28e2b03a 	or	r17,r5,r3
   1129c:	4010d07a 	srli	r8,r8,1
   112a0:	2462b03a 	or	r17,r4,r17
   112a4:	003f7106 	br	1106c <_gp+0xfffeaf40>
   112a8:	4088b03a 	or	r4,r8,r2
   112ac:	20014526 	beq	r4,zero,117c4 <__adddf3+0x7d4>
   112b0:	01000434 	movhi	r4,16
   112b4:	42000234 	orhi	r8,r8,8
   112b8:	213fffc4 	addi	r4,r4,-1
   112bc:	4110703a 	and	r8,r8,r4
   112c0:	003f8206 	br	110cc <_gp+0xfffeafa0>
   112c4:	18ffffc4 	addi	r3,r3,-1
   112c8:	1800491e 	bne	r3,zero,113f0 <__adddf3+0x400>
   112cc:	898bc83a 	sub	r5,r17,r6
   112d0:	8963803a 	cmpltu	r17,r17,r5
   112d4:	4251c83a 	sub	r8,r8,r9
   112d8:	4451c83a 	sub	r8,r8,r17
   112dc:	2823883a 	mov	r17,r5
   112e0:	003f9f06 	br	11160 <_gp+0xfffeb034>
   112e4:	4984b03a 	or	r2,r9,r6
   112e8:	103f6026 	beq	r2,zero,1106c <_gp+0xfffeaf40>
   112ec:	213fffc4 	addi	r4,r4,-1
   112f0:	2000931e 	bne	r4,zero,11540 <__adddf3+0x550>
   112f4:	898d883a 	add	r6,r17,r6
   112f8:	3463803a 	cmpltu	r17,r6,r17
   112fc:	4251883a 	add	r8,r8,r9
   11300:	8a11883a 	add	r8,r17,r8
   11304:	3023883a 	mov	r17,r6
   11308:	003fd806 	br	1126c <_gp+0xfffeb140>
   1130c:	1800541e 	bne	r3,zero,11460 <__adddf3+0x470>
   11310:	80800044 	addi	r2,r16,1
   11314:	1081ffcc 	andi	r2,r2,2047
   11318:	00c00044 	movi	r3,1
   1131c:	1880a00e 	bge	r3,r2,115a0 <__adddf3+0x5b0>
   11320:	8989c83a 	sub	r4,r17,r6
   11324:	8905803a 	cmpltu	r2,r17,r4
   11328:	4267c83a 	sub	r19,r8,r9
   1132c:	98a7c83a 	sub	r19,r19,r2
   11330:	9880202c 	andhi	r2,r19,128
   11334:	10006326 	beq	r2,zero,114c4 <__adddf3+0x4d4>
   11338:	3463c83a 	sub	r17,r6,r17
   1133c:	4a07c83a 	sub	r3,r9,r8
   11340:	344d803a 	cmpltu	r6,r6,r17
   11344:	19a7c83a 	sub	r19,r3,r6
   11348:	3825883a 	mov	r18,r7
   1134c:	983f8a1e 	bne	r19,zero,11178 <_gp+0xfffeb04c>
   11350:	8809883a 	mov	r4,r17
   11354:	00122640 	call	12264 <__clzsi2>
   11358:	10800804 	addi	r2,r2,32
   1135c:	10fffe04 	addi	r3,r2,-8
   11360:	010007c4 	movi	r4,31
   11364:	20ff890e 	bge	r4,r3,1118c <_gp+0xfffeb060>
   11368:	10bff604 	addi	r2,r2,-40
   1136c:	8884983a 	sll	r2,r17,r2
   11370:	0023883a 	mov	r17,zero
   11374:	1c3f8c0e 	bge	r3,r16,111a8 <_gp+0xfffeb07c>
   11378:	023fe034 	movhi	r8,65408
   1137c:	423fffc4 	addi	r8,r8,-1
   11380:	80e1c83a 	sub	r16,r16,r3
   11384:	1210703a 	and	r8,r2,r8
   11388:	003f3806 	br	1106c <_gp+0xfffeaf40>
   1138c:	9007883a 	mov	r3,r18
   11390:	0011883a 	mov	r8,zero
   11394:	0005883a 	mov	r2,zero
   11398:	003f4c06 	br	110cc <_gp+0xfffeafa0>
   1139c:	498cb03a 	or	r6,r9,r6
   113a0:	300cc03a 	cmpne	r6,r6,zero
   113a4:	0007883a 	mov	r3,zero
   113a8:	003f6806 	br	1114c <_gp+0xfffeb020>
   113ac:	20009c1e 	bne	r4,zero,11620 <__adddf3+0x630>
   113b0:	80800044 	addi	r2,r16,1
   113b4:	1141ffcc 	andi	r5,r2,2047
   113b8:	01000044 	movi	r4,1
   113bc:	2140670e 	bge	r4,r5,1155c <__adddf3+0x56c>
   113c0:	0101ffc4 	movi	r4,2047
   113c4:	11007f26 	beq	r2,r4,115c4 <__adddf3+0x5d4>
   113c8:	898d883a 	add	r6,r17,r6
   113cc:	4247883a 	add	r3,r8,r9
   113d0:	3451803a 	cmpltu	r8,r6,r17
   113d4:	40d1883a 	add	r8,r8,r3
   113d8:	402297fa 	slli	r17,r8,31
   113dc:	300cd07a 	srli	r6,r6,1
   113e0:	4010d07a 	srli	r8,r8,1
   113e4:	1021883a 	mov	r16,r2
   113e8:	89a2b03a 	or	r17,r17,r6
   113ec:	003f1f06 	br	1106c <_gp+0xfffeaf40>
   113f0:	0081ffc4 	movi	r2,2047
   113f4:	80bf481e 	bne	r16,r2,11118 <_gp+0xfffeafec>
   113f8:	003f1c06 	br	1106c <_gp+0xfffeaf40>
   113fc:	843ff844 	addi	r16,r16,-31
   11400:	01000804 	movi	r4,32
   11404:	1406d83a 	srl	r3,r2,r16
   11408:	41005026 	beq	r8,r4,1154c <__adddf3+0x55c>
   1140c:	01001004 	movi	r4,64
   11410:	2211c83a 	sub	r8,r4,r8
   11414:	1204983a 	sll	r2,r2,r8
   11418:	88a2b03a 	or	r17,r17,r2
   1141c:	8822c03a 	cmpne	r17,r17,zero
   11420:	1c62b03a 	or	r17,r3,r17
   11424:	0011883a 	mov	r8,zero
   11428:	0021883a 	mov	r16,zero
   1142c:	003f7106 	br	111f4 <_gp+0xfffeb0c8>
   11430:	193ff804 	addi	r4,r3,-32
   11434:	00800804 	movi	r2,32
   11438:	4908d83a 	srl	r4,r9,r4
   1143c:	18804526 	beq	r3,r2,11554 <__adddf3+0x564>
   11440:	00801004 	movi	r2,64
   11444:	10c5c83a 	sub	r2,r2,r3
   11448:	4886983a 	sll	r3,r9,r2
   1144c:	198cb03a 	or	r6,r3,r6
   11450:	300cc03a 	cmpne	r6,r6,zero
   11454:	218cb03a 	or	r6,r4,r6
   11458:	0007883a 	mov	r3,zero
   1145c:	003f3b06 	br	1114c <_gp+0xfffeb020>
   11460:	80002a26 	beq	r16,zero,1150c <__adddf3+0x51c>
   11464:	0101ffc4 	movi	r4,2047
   11468:	11006826 	beq	r2,r4,1160c <__adddf3+0x61c>
   1146c:	00c7c83a 	sub	r3,zero,r3
   11470:	42002034 	orhi	r8,r8,128
   11474:	01000e04 	movi	r4,56
   11478:	20c07c16 	blt	r4,r3,1166c <__adddf3+0x67c>
   1147c:	010007c4 	movi	r4,31
   11480:	20c0da16 	blt	r4,r3,117ec <__adddf3+0x7fc>
   11484:	01000804 	movi	r4,32
   11488:	20c9c83a 	sub	r4,r4,r3
   1148c:	4114983a 	sll	r10,r8,r4
   11490:	88cad83a 	srl	r5,r17,r3
   11494:	8908983a 	sll	r4,r17,r4
   11498:	40c6d83a 	srl	r3,r8,r3
   1149c:	5162b03a 	or	r17,r10,r5
   114a0:	2008c03a 	cmpne	r4,r4,zero
   114a4:	8922b03a 	or	r17,r17,r4
   114a8:	3463c83a 	sub	r17,r6,r17
   114ac:	48c7c83a 	sub	r3,r9,r3
   114b0:	344d803a 	cmpltu	r6,r6,r17
   114b4:	1991c83a 	sub	r8,r3,r6
   114b8:	1021883a 	mov	r16,r2
   114bc:	3825883a 	mov	r18,r7
   114c0:	003f2706 	br	11160 <_gp+0xfffeb034>
   114c4:	24d0b03a 	or	r8,r4,r19
   114c8:	40001b1e 	bne	r8,zero,11538 <__adddf3+0x548>
   114cc:	0005883a 	mov	r2,zero
   114d0:	0007883a 	mov	r3,zero
   114d4:	0021883a 	mov	r16,zero
   114d8:	003f4d06 	br	11210 <_gp+0xfffeb0e4>
   114dc:	008007c4 	movi	r2,31
   114e0:	11003c16 	blt	r2,r4,115d4 <__adddf3+0x5e4>
   114e4:	00800804 	movi	r2,32
   114e8:	1105c83a 	sub	r2,r2,r4
   114ec:	488e983a 	sll	r7,r9,r2
   114f0:	310ad83a 	srl	r5,r6,r4
   114f4:	3084983a 	sll	r2,r6,r2
   114f8:	4912d83a 	srl	r9,r9,r4
   114fc:	394ab03a 	or	r5,r7,r5
   11500:	1004c03a 	cmpne	r2,r2,zero
   11504:	288ab03a 	or	r5,r5,r2
   11508:	003f5306 	br	11258 <_gp+0xfffeb12c>
   1150c:	4448b03a 	or	r4,r8,r17
   11510:	20003e26 	beq	r4,zero,1160c <__adddf3+0x61c>
   11514:	00c6303a 	nor	r3,zero,r3
   11518:	18003a1e 	bne	r3,zero,11604 <__adddf3+0x614>
   1151c:	3463c83a 	sub	r17,r6,r17
   11520:	4a07c83a 	sub	r3,r9,r8
   11524:	344d803a 	cmpltu	r6,r6,r17
   11528:	1991c83a 	sub	r8,r3,r6
   1152c:	1021883a 	mov	r16,r2
   11530:	3825883a 	mov	r18,r7
   11534:	003f0a06 	br	11160 <_gp+0xfffeb034>
   11538:	2023883a 	mov	r17,r4
   1153c:	003f0d06 	br	11174 <_gp+0xfffeb048>
   11540:	0081ffc4 	movi	r2,2047
   11544:	80bf3f1e 	bne	r16,r2,11244 <_gp+0xfffeb118>
   11548:	003ec806 	br	1106c <_gp+0xfffeaf40>
   1154c:	0005883a 	mov	r2,zero
   11550:	003fb106 	br	11418 <_gp+0xfffeb2ec>
   11554:	0007883a 	mov	r3,zero
   11558:	003fbc06 	br	1144c <_gp+0xfffeb320>
   1155c:	4444b03a 	or	r2,r8,r17
   11560:	8000871e 	bne	r16,zero,11780 <__adddf3+0x790>
   11564:	1000ba26 	beq	r2,zero,11850 <__adddf3+0x860>
   11568:	4984b03a 	or	r2,r9,r6
   1156c:	103ebf26 	beq	r2,zero,1106c <_gp+0xfffeaf40>
   11570:	8985883a 	add	r2,r17,r6
   11574:	4247883a 	add	r3,r8,r9
   11578:	1451803a 	cmpltu	r8,r2,r17
   1157c:	40d1883a 	add	r8,r8,r3
   11580:	40c0202c 	andhi	r3,r8,128
   11584:	1023883a 	mov	r17,r2
   11588:	183f1a26 	beq	r3,zero,111f4 <_gp+0xfffeb0c8>
   1158c:	00bfe034 	movhi	r2,65408
   11590:	10bfffc4 	addi	r2,r2,-1
   11594:	2021883a 	mov	r16,r4
   11598:	4090703a 	and	r8,r8,r2
   1159c:	003eb306 	br	1106c <_gp+0xfffeaf40>
   115a0:	4444b03a 	or	r2,r8,r17
   115a4:	8000291e 	bne	r16,zero,1164c <__adddf3+0x65c>
   115a8:	10004b1e 	bne	r2,zero,116d8 <__adddf3+0x6e8>
   115ac:	4990b03a 	or	r8,r9,r6
   115b0:	40008b26 	beq	r8,zero,117e0 <__adddf3+0x7f0>
   115b4:	4811883a 	mov	r8,r9
   115b8:	3023883a 	mov	r17,r6
   115bc:	3825883a 	mov	r18,r7
   115c0:	003eaa06 	br	1106c <_gp+0xfffeaf40>
   115c4:	1021883a 	mov	r16,r2
   115c8:	0011883a 	mov	r8,zero
   115cc:	0005883a 	mov	r2,zero
   115d0:	003f0f06 	br	11210 <_gp+0xfffeb0e4>
   115d4:	217ff804 	addi	r5,r4,-32
   115d8:	00800804 	movi	r2,32
   115dc:	494ad83a 	srl	r5,r9,r5
   115e0:	20807d26 	beq	r4,r2,117d8 <__adddf3+0x7e8>
   115e4:	00801004 	movi	r2,64
   115e8:	1109c83a 	sub	r4,r2,r4
   115ec:	4912983a 	sll	r9,r9,r4
   115f0:	498cb03a 	or	r6,r9,r6
   115f4:	300cc03a 	cmpne	r6,r6,zero
   115f8:	298ab03a 	or	r5,r5,r6
   115fc:	0013883a 	mov	r9,zero
   11600:	003f1506 	br	11258 <_gp+0xfffeb12c>
   11604:	0101ffc4 	movi	r4,2047
   11608:	113f9a1e 	bne	r2,r4,11474 <_gp+0xfffeb348>
   1160c:	4811883a 	mov	r8,r9
   11610:	3023883a 	mov	r17,r6
   11614:	1021883a 	mov	r16,r2
   11618:	3825883a 	mov	r18,r7
   1161c:	003e9306 	br	1106c <_gp+0xfffeaf40>
   11620:	8000161e 	bne	r16,zero,1167c <__adddf3+0x68c>
   11624:	444ab03a 	or	r5,r8,r17
   11628:	28005126 	beq	r5,zero,11770 <__adddf3+0x780>
   1162c:	0108303a 	nor	r4,zero,r4
   11630:	20004d1e 	bne	r4,zero,11768 <__adddf3+0x778>
   11634:	89a3883a 	add	r17,r17,r6
   11638:	4253883a 	add	r9,r8,r9
   1163c:	898d803a 	cmpltu	r6,r17,r6
   11640:	3251883a 	add	r8,r6,r9
   11644:	1021883a 	mov	r16,r2
   11648:	003f0806 	br	1126c <_gp+0xfffeb140>
   1164c:	1000301e 	bne	r2,zero,11710 <__adddf3+0x720>
   11650:	4984b03a 	or	r2,r9,r6
   11654:	10007126 	beq	r2,zero,1181c <__adddf3+0x82c>
   11658:	4811883a 	mov	r8,r9
   1165c:	3023883a 	mov	r17,r6
   11660:	3825883a 	mov	r18,r7
   11664:	0401ffc4 	movi	r16,2047
   11668:	003e8006 	br	1106c <_gp+0xfffeaf40>
   1166c:	4462b03a 	or	r17,r8,r17
   11670:	8822c03a 	cmpne	r17,r17,zero
   11674:	0007883a 	mov	r3,zero
   11678:	003f8b06 	br	114a8 <_gp+0xfffeb37c>
   1167c:	0141ffc4 	movi	r5,2047
   11680:	11403b26 	beq	r2,r5,11770 <__adddf3+0x780>
   11684:	0109c83a 	sub	r4,zero,r4
   11688:	42002034 	orhi	r8,r8,128
   1168c:	01400e04 	movi	r5,56
   11690:	29006716 	blt	r5,r4,11830 <__adddf3+0x840>
   11694:	014007c4 	movi	r5,31
   11698:	29007016 	blt	r5,r4,1185c <__adddf3+0x86c>
   1169c:	01400804 	movi	r5,32
   116a0:	290bc83a 	sub	r5,r5,r4
   116a4:	4154983a 	sll	r10,r8,r5
   116a8:	890ed83a 	srl	r7,r17,r4
   116ac:	894a983a 	sll	r5,r17,r5
   116b0:	4108d83a 	srl	r4,r8,r4
   116b4:	51e2b03a 	or	r17,r10,r7
   116b8:	280ac03a 	cmpne	r5,r5,zero
   116bc:	8962b03a 	or	r17,r17,r5
   116c0:	89a3883a 	add	r17,r17,r6
   116c4:	2253883a 	add	r9,r4,r9
   116c8:	898d803a 	cmpltu	r6,r17,r6
   116cc:	3251883a 	add	r8,r6,r9
   116d0:	1021883a 	mov	r16,r2
   116d4:	003ee506 	br	1126c <_gp+0xfffeb140>
   116d8:	4984b03a 	or	r2,r9,r6
   116dc:	103e6326 	beq	r2,zero,1106c <_gp+0xfffeaf40>
   116e0:	8987c83a 	sub	r3,r17,r6
   116e4:	88c9803a 	cmpltu	r4,r17,r3
   116e8:	4245c83a 	sub	r2,r8,r9
   116ec:	1105c83a 	sub	r2,r2,r4
   116f0:	1100202c 	andhi	r4,r2,128
   116f4:	203ebb26 	beq	r4,zero,111e4 <_gp+0xfffeb0b8>
   116f8:	3463c83a 	sub	r17,r6,r17
   116fc:	4a07c83a 	sub	r3,r9,r8
   11700:	344d803a 	cmpltu	r6,r6,r17
   11704:	1991c83a 	sub	r8,r3,r6
   11708:	3825883a 	mov	r18,r7
   1170c:	003e5706 	br	1106c <_gp+0xfffeaf40>
   11710:	4984b03a 	or	r2,r9,r6
   11714:	10002e26 	beq	r2,zero,117d0 <__adddf3+0x7e0>
   11718:	4004d0fa 	srli	r2,r8,3
   1171c:	8822d0fa 	srli	r17,r17,3
   11720:	4010977a 	slli	r8,r8,29
   11724:	10c0022c 	andhi	r3,r2,8
   11728:	4462b03a 	or	r17,r8,r17
   1172c:	18000826 	beq	r3,zero,11750 <__adddf3+0x760>
   11730:	4808d0fa 	srli	r4,r9,3
   11734:	20c0022c 	andhi	r3,r4,8
   11738:	1800051e 	bne	r3,zero,11750 <__adddf3+0x760>
   1173c:	300cd0fa 	srli	r6,r6,3
   11740:	4806977a 	slli	r3,r9,29
   11744:	2005883a 	mov	r2,r4
   11748:	3825883a 	mov	r18,r7
   1174c:	19a2b03a 	or	r17,r3,r6
   11750:	8810d77a 	srli	r8,r17,29
   11754:	100490fa 	slli	r2,r2,3
   11758:	882290fa 	slli	r17,r17,3
   1175c:	0401ffc4 	movi	r16,2047
   11760:	4090b03a 	or	r8,r8,r2
   11764:	003e4106 	br	1106c <_gp+0xfffeaf40>
   11768:	0141ffc4 	movi	r5,2047
   1176c:	117fc71e 	bne	r2,r5,1168c <_gp+0xfffeb560>
   11770:	4811883a 	mov	r8,r9
   11774:	3023883a 	mov	r17,r6
   11778:	1021883a 	mov	r16,r2
   1177c:	003e3b06 	br	1106c <_gp+0xfffeaf40>
   11780:	10002f26 	beq	r2,zero,11840 <__adddf3+0x850>
   11784:	4984b03a 	or	r2,r9,r6
   11788:	10001126 	beq	r2,zero,117d0 <__adddf3+0x7e0>
   1178c:	4004d0fa 	srli	r2,r8,3
   11790:	8822d0fa 	srli	r17,r17,3
   11794:	4010977a 	slli	r8,r8,29
   11798:	10c0022c 	andhi	r3,r2,8
   1179c:	4462b03a 	or	r17,r8,r17
   117a0:	183feb26 	beq	r3,zero,11750 <_gp+0xfffeb624>
   117a4:	4808d0fa 	srli	r4,r9,3
   117a8:	20c0022c 	andhi	r3,r4,8
   117ac:	183fe81e 	bne	r3,zero,11750 <_gp+0xfffeb624>
   117b0:	300cd0fa 	srli	r6,r6,3
   117b4:	4806977a 	slli	r3,r9,29
   117b8:	2005883a 	mov	r2,r4
   117bc:	19a2b03a 	or	r17,r3,r6
   117c0:	003fe306 	br	11750 <_gp+0xfffeb624>
   117c4:	0011883a 	mov	r8,zero
   117c8:	0005883a 	mov	r2,zero
   117cc:	003e3f06 	br	110cc <_gp+0xfffeafa0>
   117d0:	0401ffc4 	movi	r16,2047
   117d4:	003e2506 	br	1106c <_gp+0xfffeaf40>
   117d8:	0013883a 	mov	r9,zero
   117dc:	003f8406 	br	115f0 <_gp+0xfffeb4c4>
   117e0:	0005883a 	mov	r2,zero
   117e4:	0007883a 	mov	r3,zero
   117e8:	003e8906 	br	11210 <_gp+0xfffeb0e4>
   117ec:	197ff804 	addi	r5,r3,-32
   117f0:	01000804 	movi	r4,32
   117f4:	414ad83a 	srl	r5,r8,r5
   117f8:	19002426 	beq	r3,r4,1188c <__adddf3+0x89c>
   117fc:	01001004 	movi	r4,64
   11800:	20c7c83a 	sub	r3,r4,r3
   11804:	40c6983a 	sll	r3,r8,r3
   11808:	1c46b03a 	or	r3,r3,r17
   1180c:	1806c03a 	cmpne	r3,r3,zero
   11810:	28e2b03a 	or	r17,r5,r3
   11814:	0007883a 	mov	r3,zero
   11818:	003f2306 	br	114a8 <_gp+0xfffeb37c>
   1181c:	0007883a 	mov	r3,zero
   11820:	5811883a 	mov	r8,r11
   11824:	00bfffc4 	movi	r2,-1
   11828:	0401ffc4 	movi	r16,2047
   1182c:	003e7806 	br	11210 <_gp+0xfffeb0e4>
   11830:	4462b03a 	or	r17,r8,r17
   11834:	8822c03a 	cmpne	r17,r17,zero
   11838:	0009883a 	mov	r4,zero
   1183c:	003fa006 	br	116c0 <_gp+0xfffeb594>
   11840:	4811883a 	mov	r8,r9
   11844:	3023883a 	mov	r17,r6
   11848:	0401ffc4 	movi	r16,2047
   1184c:	003e0706 	br	1106c <_gp+0xfffeaf40>
   11850:	4811883a 	mov	r8,r9
   11854:	3023883a 	mov	r17,r6
   11858:	003e0406 	br	1106c <_gp+0xfffeaf40>
   1185c:	21fff804 	addi	r7,r4,-32
   11860:	01400804 	movi	r5,32
   11864:	41ced83a 	srl	r7,r8,r7
   11868:	21400a26 	beq	r4,r5,11894 <__adddf3+0x8a4>
   1186c:	01401004 	movi	r5,64
   11870:	2909c83a 	sub	r4,r5,r4
   11874:	4108983a 	sll	r4,r8,r4
   11878:	2448b03a 	or	r4,r4,r17
   1187c:	2008c03a 	cmpne	r4,r4,zero
   11880:	3922b03a 	or	r17,r7,r4
   11884:	0009883a 	mov	r4,zero
   11888:	003f8d06 	br	116c0 <_gp+0xfffeb594>
   1188c:	0007883a 	mov	r3,zero
   11890:	003fdd06 	br	11808 <_gp+0xfffeb6dc>
   11894:	0009883a 	mov	r4,zero
   11898:	003ff706 	br	11878 <_gp+0xfffeb74c>

0001189c <__muldf3>:
   1189c:	deffee04 	addi	sp,sp,-72
   118a0:	dd000c15 	stw	r20,48(sp)
   118a4:	2828d53a 	srli	r20,r5,20
   118a8:	ddc00f15 	stw	r23,60(sp)
   118ac:	282ed7fa 	srli	r23,r5,31
   118b0:	dc000815 	stw	r16,32(sp)
   118b4:	04000434 	movhi	r16,16
   118b8:	dcc00b15 	stw	r19,44(sp)
   118bc:	843fffc4 	addi	r16,r16,-1
   118c0:	dfc01115 	stw	ra,68(sp)
   118c4:	df001015 	stw	fp,64(sp)
   118c8:	dd800e15 	stw	r22,56(sp)
   118cc:	dd400d15 	stw	r21,52(sp)
   118d0:	dc800a15 	stw	r18,40(sp)
   118d4:	dc400915 	stw	r17,36(sp)
   118d8:	a501ffcc 	andi	r20,r20,2047
   118dc:	2c20703a 	and	r16,r5,r16
   118e0:	b827883a 	mov	r19,r23
   118e4:	ba403fcc 	andi	r9,r23,255
   118e8:	a0006026 	beq	r20,zero,11a6c <__muldf3+0x1d0>
   118ec:	0081ffc4 	movi	r2,2047
   118f0:	202d883a 	mov	r22,r4
   118f4:	a0803626 	beq	r20,r2,119d0 <__muldf3+0x134>
   118f8:	84000434 	orhi	r16,r16,16
   118fc:	200ad77a 	srli	r5,r4,29
   11900:	800490fa 	slli	r2,r16,3
   11904:	202c90fa 	slli	r22,r4,3
   11908:	a53f0044 	addi	r20,r20,-1023
   1190c:	28a0b03a 	or	r16,r5,r2
   11910:	002b883a 	mov	r21,zero
   11914:	000b883a 	mov	r5,zero
   11918:	3804d53a 	srli	r2,r7,20
   1191c:	3838d7fa 	srli	fp,r7,31
   11920:	04400434 	movhi	r17,16
   11924:	8c7fffc4 	addi	r17,r17,-1
   11928:	1081ffcc 	andi	r2,r2,2047
   1192c:	3025883a 	mov	r18,r6
   11930:	3c62703a 	and	r17,r7,r17
   11934:	e2803fcc 	andi	r10,fp,255
   11938:	10006d26 	beq	r2,zero,11af0 <__muldf3+0x254>
   1193c:	00c1ffc4 	movi	r3,2047
   11940:	10c06526 	beq	r2,r3,11ad8 <__muldf3+0x23c>
   11944:	8c400434 	orhi	r17,r17,16
   11948:	300ed77a 	srli	r7,r6,29
   1194c:	880690fa 	slli	r3,r17,3
   11950:	302490fa 	slli	r18,r6,3
   11954:	10bf0044 	addi	r2,r2,-1023
   11958:	38e2b03a 	or	r17,r7,r3
   1195c:	000f883a 	mov	r7,zero
   11960:	a087883a 	add	r3,r20,r2
   11964:	010003c4 	movi	r4,15
   11968:	3d44b03a 	or	r2,r7,r21
   1196c:	e5ccf03a 	xor	r6,fp,r23
   11970:	1a000044 	addi	r8,r3,1
   11974:	20809b36 	bltu	r4,r2,11be4 <__muldf3+0x348>
   11978:	100490ba 	slli	r2,r2,2
   1197c:	01000074 	movhi	r4,1
   11980:	21066404 	addi	r4,r4,6544
   11984:	1105883a 	add	r2,r2,r4
   11988:	10800017 	ldw	r2,0(r2)
   1198c:	1000683a 	jmp	r2
   11990:	00011be4 	muli	zero,zero,1135
   11994:	000119f0 	cmpltui	zero,zero,1127
   11998:	000119f0 	cmpltui	zero,zero,1127
   1199c:	000119ec 	andhi	zero,zero,1127
   119a0:	00011bc0 	call	11bc <__alt_mem_onchip_memory-0xee44>
   119a4:	00011bc0 	call	11bc <__alt_mem_onchip_memory-0xee44>
   119a8:	00011ba8 	cmpgeui	zero,zero,1134
   119ac:	000119ec 	andhi	zero,zero,1127
   119b0:	00011bc0 	call	11bc <__alt_mem_onchip_memory-0xee44>
   119b4:	00011ba8 	cmpgeui	zero,zero,1134
   119b8:	00011bc0 	call	11bc <__alt_mem_onchip_memory-0xee44>
   119bc:	000119ec 	andhi	zero,zero,1127
   119c0:	00011bd0 	cmplti	zero,zero,1135
   119c4:	00011bd0 	cmplti	zero,zero,1135
   119c8:	00011bd0 	cmplti	zero,zero,1135
   119cc:	00011f30 	cmpltui	zero,zero,1148
   119d0:	2404b03a 	or	r2,r4,r16
   119d4:	1000711e 	bne	r2,zero,11b9c <__muldf3+0x300>
   119d8:	05400204 	movi	r21,8
   119dc:	0021883a 	mov	r16,zero
   119e0:	002d883a 	mov	r22,zero
   119e4:	01400084 	movi	r5,2
   119e8:	003fcb06 	br	11918 <_gp+0xfffeb7ec>
   119ec:	500d883a 	mov	r6,r10
   119f0:	00800084 	movi	r2,2
   119f4:	38805926 	beq	r7,r2,11b5c <__muldf3+0x2c0>
   119f8:	008000c4 	movi	r2,3
   119fc:	3881bb26 	beq	r7,r2,120ec <__muldf3+0x850>
   11a00:	00800044 	movi	r2,1
   11a04:	3881961e 	bne	r7,r2,12060 <__muldf3+0x7c4>
   11a08:	3027883a 	mov	r19,r6
   11a0c:	0005883a 	mov	r2,zero
   11a10:	0021883a 	mov	r16,zero
   11a14:	002d883a 	mov	r22,zero
   11a18:	1004953a 	slli	r2,r2,20
   11a1c:	98c03fcc 	andi	r3,r19,255
   11a20:	04400434 	movhi	r17,16
   11a24:	8c7fffc4 	addi	r17,r17,-1
   11a28:	180697fa 	slli	r3,r3,31
   11a2c:	8460703a 	and	r16,r16,r17
   11a30:	80a0b03a 	or	r16,r16,r2
   11a34:	80c6b03a 	or	r3,r16,r3
   11a38:	b005883a 	mov	r2,r22
   11a3c:	dfc01117 	ldw	ra,68(sp)
   11a40:	df001017 	ldw	fp,64(sp)
   11a44:	ddc00f17 	ldw	r23,60(sp)
   11a48:	dd800e17 	ldw	r22,56(sp)
   11a4c:	dd400d17 	ldw	r21,52(sp)
   11a50:	dd000c17 	ldw	r20,48(sp)
   11a54:	dcc00b17 	ldw	r19,44(sp)
   11a58:	dc800a17 	ldw	r18,40(sp)
   11a5c:	dc400917 	ldw	r17,36(sp)
   11a60:	dc000817 	ldw	r16,32(sp)
   11a64:	dec01204 	addi	sp,sp,72
   11a68:	f800283a 	ret
   11a6c:	2404b03a 	or	r2,r4,r16
   11a70:	202b883a 	mov	r21,r4
   11a74:	10004426 	beq	r2,zero,11b88 <__muldf3+0x2ec>
   11a78:	80015126 	beq	r16,zero,11fc0 <__muldf3+0x724>
   11a7c:	8009883a 	mov	r4,r16
   11a80:	d9800715 	stw	r6,28(sp)
   11a84:	d9c00215 	stw	r7,8(sp)
   11a88:	da400415 	stw	r9,16(sp)
   11a8c:	00122640 	call	12264 <__clzsi2>
   11a90:	d9800717 	ldw	r6,28(sp)
   11a94:	d9c00217 	ldw	r7,8(sp)
   11a98:	da400417 	ldw	r9,16(sp)
   11a9c:	113ffd44 	addi	r4,r2,-11
   11aa0:	00c00704 	movi	r3,28
   11aa4:	19014216 	blt	r3,r4,11fb0 <__muldf3+0x714>
   11aa8:	00c00744 	movi	r3,29
   11aac:	15bffe04 	addi	r22,r2,-8
   11ab0:	1907c83a 	sub	r3,r3,r4
   11ab4:	85a0983a 	sll	r16,r16,r22
   11ab8:	a8c6d83a 	srl	r3,r21,r3
   11abc:	adac983a 	sll	r22,r21,r22
   11ac0:	1c20b03a 	or	r16,r3,r16
   11ac4:	1080fcc4 	addi	r2,r2,1011
   11ac8:	00a9c83a 	sub	r20,zero,r2
   11acc:	002b883a 	mov	r21,zero
   11ad0:	000b883a 	mov	r5,zero
   11ad4:	003f9006 	br	11918 <_gp+0xfffeb7ec>
   11ad8:	3446b03a 	or	r3,r6,r17
   11adc:	1800281e 	bne	r3,zero,11b80 <__muldf3+0x2e4>
   11ae0:	0023883a 	mov	r17,zero
   11ae4:	0025883a 	mov	r18,zero
   11ae8:	01c00084 	movi	r7,2
   11aec:	003f9c06 	br	11960 <_gp+0xfffeb834>
   11af0:	3446b03a 	or	r3,r6,r17
   11af4:	18001e26 	beq	r3,zero,11b70 <__muldf3+0x2d4>
   11af8:	88012126 	beq	r17,zero,11f80 <__muldf3+0x6e4>
   11afc:	8809883a 	mov	r4,r17
   11b00:	d9400215 	stw	r5,8(sp)
   11b04:	d9800715 	stw	r6,28(sp)
   11b08:	da400415 	stw	r9,16(sp)
   11b0c:	da800315 	stw	r10,12(sp)
   11b10:	00122640 	call	12264 <__clzsi2>
   11b14:	d9400217 	ldw	r5,8(sp)
   11b18:	d9800717 	ldw	r6,28(sp)
   11b1c:	da400417 	ldw	r9,16(sp)
   11b20:	da800317 	ldw	r10,12(sp)
   11b24:	113ffd44 	addi	r4,r2,-11
   11b28:	00c00704 	movi	r3,28
   11b2c:	19011016 	blt	r3,r4,11f70 <__muldf3+0x6d4>
   11b30:	00c00744 	movi	r3,29
   11b34:	14bffe04 	addi	r18,r2,-8
   11b38:	1907c83a 	sub	r3,r3,r4
   11b3c:	8ca2983a 	sll	r17,r17,r18
   11b40:	30c6d83a 	srl	r3,r6,r3
   11b44:	34a4983a 	sll	r18,r6,r18
   11b48:	1c62b03a 	or	r17,r3,r17
   11b4c:	1080fcc4 	addi	r2,r2,1011
   11b50:	0085c83a 	sub	r2,zero,r2
   11b54:	000f883a 	mov	r7,zero
   11b58:	003f8106 	br	11960 <_gp+0xfffeb834>
   11b5c:	3027883a 	mov	r19,r6
   11b60:	0081ffc4 	movi	r2,2047
   11b64:	0021883a 	mov	r16,zero
   11b68:	002d883a 	mov	r22,zero
   11b6c:	003faa06 	br	11a18 <_gp+0xfffeb8ec>
   11b70:	0023883a 	mov	r17,zero
   11b74:	0025883a 	mov	r18,zero
   11b78:	01c00044 	movi	r7,1
   11b7c:	003f7806 	br	11960 <_gp+0xfffeb834>
   11b80:	01c000c4 	movi	r7,3
   11b84:	003f7606 	br	11960 <_gp+0xfffeb834>
   11b88:	05400104 	movi	r21,4
   11b8c:	0021883a 	mov	r16,zero
   11b90:	002d883a 	mov	r22,zero
   11b94:	01400044 	movi	r5,1
   11b98:	003f5f06 	br	11918 <_gp+0xfffeb7ec>
   11b9c:	05400304 	movi	r21,12
   11ba0:	014000c4 	movi	r5,3
   11ba4:	003f5c06 	br	11918 <_gp+0xfffeb7ec>
   11ba8:	04000434 	movhi	r16,16
   11bac:	0027883a 	mov	r19,zero
   11bb0:	843fffc4 	addi	r16,r16,-1
   11bb4:	05bfffc4 	movi	r22,-1
   11bb8:	0081ffc4 	movi	r2,2047
   11bbc:	003f9606 	br	11a18 <_gp+0xfffeb8ec>
   11bc0:	8023883a 	mov	r17,r16
   11bc4:	b025883a 	mov	r18,r22
   11bc8:	280f883a 	mov	r7,r5
   11bcc:	003f8806 	br	119f0 <_gp+0xfffeb8c4>
   11bd0:	8023883a 	mov	r17,r16
   11bd4:	b025883a 	mov	r18,r22
   11bd8:	480d883a 	mov	r6,r9
   11bdc:	280f883a 	mov	r7,r5
   11be0:	003f8306 	br	119f0 <_gp+0xfffeb8c4>
   11be4:	b026d43a 	srli	r19,r22,16
   11be8:	902ed43a 	srli	r23,r18,16
   11bec:	b5bfffcc 	andi	r22,r22,65535
   11bf0:	94bfffcc 	andi	r18,r18,65535
   11bf4:	b00b883a 	mov	r5,r22
   11bf8:	9009883a 	mov	r4,r18
   11bfc:	d8c00515 	stw	r3,20(sp)
   11c00:	d9800715 	stw	r6,28(sp)
   11c04:	da000615 	stw	r8,24(sp)
   11c08:	00122c80 	call	122c8 <__mulsi3>
   11c0c:	980b883a 	mov	r5,r19
   11c10:	9009883a 	mov	r4,r18
   11c14:	1029883a 	mov	r20,r2
   11c18:	00122c80 	call	122c8 <__mulsi3>
   11c1c:	b80b883a 	mov	r5,r23
   11c20:	9809883a 	mov	r4,r19
   11c24:	102b883a 	mov	r21,r2
   11c28:	00122c80 	call	122c8 <__mulsi3>
   11c2c:	b809883a 	mov	r4,r23
   11c30:	b00b883a 	mov	r5,r22
   11c34:	1039883a 	mov	fp,r2
   11c38:	00122c80 	call	122c8 <__mulsi3>
   11c3c:	a008d43a 	srli	r4,r20,16
   11c40:	1545883a 	add	r2,r2,r21
   11c44:	d8c00517 	ldw	r3,20(sp)
   11c48:	2085883a 	add	r2,r4,r2
   11c4c:	d9800717 	ldw	r6,28(sp)
   11c50:	da000617 	ldw	r8,24(sp)
   11c54:	1540022e 	bgeu	r2,r21,11c60 <__muldf3+0x3c4>
   11c58:	01000074 	movhi	r4,1
   11c5c:	e139883a 	add	fp,fp,r4
   11c60:	100e943a 	slli	r7,r2,16
   11c64:	1004d43a 	srli	r2,r2,16
   11c68:	882ad43a 	srli	r21,r17,16
   11c6c:	a53fffcc 	andi	r20,r20,65535
   11c70:	8c7fffcc 	andi	r17,r17,65535
   11c74:	3d29883a 	add	r20,r7,r20
   11c78:	b00b883a 	mov	r5,r22
   11c7c:	8809883a 	mov	r4,r17
   11c80:	d8c00515 	stw	r3,20(sp)
   11c84:	d9800715 	stw	r6,28(sp)
   11c88:	da000615 	stw	r8,24(sp)
   11c8c:	dd000115 	stw	r20,4(sp)
   11c90:	d8800015 	stw	r2,0(sp)
   11c94:	00122c80 	call	122c8 <__mulsi3>
   11c98:	980b883a 	mov	r5,r19
   11c9c:	8809883a 	mov	r4,r17
   11ca0:	d8800215 	stw	r2,8(sp)
   11ca4:	00122c80 	call	122c8 <__mulsi3>
   11ca8:	9809883a 	mov	r4,r19
   11cac:	a80b883a 	mov	r5,r21
   11cb0:	1029883a 	mov	r20,r2
   11cb4:	00122c80 	call	122c8 <__mulsi3>
   11cb8:	b00b883a 	mov	r5,r22
   11cbc:	a809883a 	mov	r4,r21
   11cc0:	d8800415 	stw	r2,16(sp)
   11cc4:	00122c80 	call	122c8 <__mulsi3>
   11cc8:	d9c00217 	ldw	r7,8(sp)
   11ccc:	1505883a 	add	r2,r2,r20
   11cd0:	d8c00517 	ldw	r3,20(sp)
   11cd4:	3826d43a 	srli	r19,r7,16
   11cd8:	d9800717 	ldw	r6,28(sp)
   11cdc:	da000617 	ldw	r8,24(sp)
   11ce0:	9885883a 	add	r2,r19,r2
   11ce4:	da400417 	ldw	r9,16(sp)
   11ce8:	1500022e 	bgeu	r2,r20,11cf4 <__muldf3+0x458>
   11cec:	01000074 	movhi	r4,1
   11cf0:	4913883a 	add	r9,r9,r4
   11cf4:	1028d43a 	srli	r20,r2,16
   11cf8:	1004943a 	slli	r2,r2,16
   11cfc:	802cd43a 	srli	r22,r16,16
   11d00:	843fffcc 	andi	r16,r16,65535
   11d04:	3cffffcc 	andi	r19,r7,65535
   11d08:	9009883a 	mov	r4,r18
   11d0c:	800b883a 	mov	r5,r16
   11d10:	a269883a 	add	r20,r20,r9
   11d14:	d8c00515 	stw	r3,20(sp)
   11d18:	d9800715 	stw	r6,28(sp)
   11d1c:	da000615 	stw	r8,24(sp)
   11d20:	14e7883a 	add	r19,r2,r19
   11d24:	00122c80 	call	122c8 <__mulsi3>
   11d28:	9009883a 	mov	r4,r18
   11d2c:	b00b883a 	mov	r5,r22
   11d30:	d8800315 	stw	r2,12(sp)
   11d34:	00122c80 	call	122c8 <__mulsi3>
   11d38:	b809883a 	mov	r4,r23
   11d3c:	b00b883a 	mov	r5,r22
   11d40:	d8800215 	stw	r2,8(sp)
   11d44:	00122c80 	call	122c8 <__mulsi3>
   11d48:	b80b883a 	mov	r5,r23
   11d4c:	8009883a 	mov	r4,r16
   11d50:	d8800415 	stw	r2,16(sp)
   11d54:	00122c80 	call	122c8 <__mulsi3>
   11d58:	da800317 	ldw	r10,12(sp)
   11d5c:	d9c00217 	ldw	r7,8(sp)
   11d60:	d9000017 	ldw	r4,0(sp)
   11d64:	502ed43a 	srli	r23,r10,16
   11d68:	11c5883a 	add	r2,r2,r7
   11d6c:	24e5883a 	add	r18,r4,r19
   11d70:	b885883a 	add	r2,r23,r2
   11d74:	d8c00517 	ldw	r3,20(sp)
   11d78:	d9800717 	ldw	r6,28(sp)
   11d7c:	da000617 	ldw	r8,24(sp)
   11d80:	da400417 	ldw	r9,16(sp)
   11d84:	11c0022e 	bgeu	r2,r7,11d90 <__muldf3+0x4f4>
   11d88:	01000074 	movhi	r4,1
   11d8c:	4913883a 	add	r9,r9,r4
   11d90:	100ed43a 	srli	r7,r2,16
   11d94:	1004943a 	slli	r2,r2,16
   11d98:	55ffffcc 	andi	r23,r10,65535
   11d9c:	3a53883a 	add	r9,r7,r9
   11da0:	8809883a 	mov	r4,r17
   11da4:	800b883a 	mov	r5,r16
   11da8:	d8c00515 	stw	r3,20(sp)
   11dac:	d9800715 	stw	r6,28(sp)
   11db0:	da000615 	stw	r8,24(sp)
   11db4:	da400415 	stw	r9,16(sp)
   11db8:	15ef883a 	add	r23,r2,r23
   11dbc:	00122c80 	call	122c8 <__mulsi3>
   11dc0:	8809883a 	mov	r4,r17
   11dc4:	b00b883a 	mov	r5,r22
   11dc8:	d8800215 	stw	r2,8(sp)
   11dcc:	00122c80 	call	122c8 <__mulsi3>
   11dd0:	b00b883a 	mov	r5,r22
   11dd4:	a809883a 	mov	r4,r21
   11dd8:	d8800315 	stw	r2,12(sp)
   11ddc:	00122c80 	call	122c8 <__mulsi3>
   11de0:	8009883a 	mov	r4,r16
   11de4:	a80b883a 	mov	r5,r21
   11de8:	1023883a 	mov	r17,r2
   11dec:	00122c80 	call	122c8 <__mulsi3>
   11df0:	d9c00217 	ldw	r7,8(sp)
   11df4:	da800317 	ldw	r10,12(sp)
   11df8:	d8c00517 	ldw	r3,20(sp)
   11dfc:	3808d43a 	srli	r4,r7,16
   11e00:	1285883a 	add	r2,r2,r10
   11e04:	d9800717 	ldw	r6,28(sp)
   11e08:	2085883a 	add	r2,r4,r2
   11e0c:	da000617 	ldw	r8,24(sp)
   11e10:	da400417 	ldw	r9,16(sp)
   11e14:	1280022e 	bgeu	r2,r10,11e20 <__muldf3+0x584>
   11e18:	01000074 	movhi	r4,1
   11e1c:	8923883a 	add	r17,r17,r4
   11e20:	1008943a 	slli	r4,r2,16
   11e24:	39ffffcc 	andi	r7,r7,65535
   11e28:	e4b9883a 	add	fp,fp,r18
   11e2c:	21cf883a 	add	r7,r4,r7
   11e30:	e4e7803a 	cmpltu	r19,fp,r19
   11e34:	3d0f883a 	add	r7,r7,r20
   11e38:	bf39883a 	add	fp,r23,fp
   11e3c:	99c9883a 	add	r4,r19,r7
   11e40:	e5ef803a 	cmpltu	r23,fp,r23
   11e44:	490b883a 	add	r5,r9,r4
   11e48:	1004d43a 	srli	r2,r2,16
   11e4c:	b965883a 	add	r18,r23,r5
   11e50:	24c9803a 	cmpltu	r4,r4,r19
   11e54:	3d29803a 	cmpltu	r20,r7,r20
   11e58:	a128b03a 	or	r20,r20,r4
   11e5c:	95ef803a 	cmpltu	r23,r18,r23
   11e60:	2a53803a 	cmpltu	r9,r5,r9
   11e64:	a0a9883a 	add	r20,r20,r2
   11e68:	4deeb03a 	or	r23,r9,r23
   11e6c:	a5ef883a 	add	r23,r20,r23
   11e70:	bc63883a 	add	r17,r23,r17
   11e74:	e004927a 	slli	r2,fp,9
   11e78:	d9000117 	ldw	r4,4(sp)
   11e7c:	882e927a 	slli	r23,r17,9
   11e80:	9022d5fa 	srli	r17,r18,23
   11e84:	e038d5fa 	srli	fp,fp,23
   11e88:	1104b03a 	or	r2,r2,r4
   11e8c:	9024927a 	slli	r18,r18,9
   11e90:	1004c03a 	cmpne	r2,r2,zero
   11e94:	bc62b03a 	or	r17,r23,r17
   11e98:	1738b03a 	or	fp,r2,fp
   11e9c:	8880402c 	andhi	r2,r17,256
   11ea0:	e4a4b03a 	or	r18,fp,r18
   11ea4:	10000726 	beq	r2,zero,11ec4 <__muldf3+0x628>
   11ea8:	9006d07a 	srli	r3,r18,1
   11eac:	880497fa 	slli	r2,r17,31
   11eb0:	9480004c 	andi	r18,r18,1
   11eb4:	8822d07a 	srli	r17,r17,1
   11eb8:	1ca4b03a 	or	r18,r3,r18
   11ebc:	14a4b03a 	or	r18,r2,r18
   11ec0:	4007883a 	mov	r3,r8
   11ec4:	1880ffc4 	addi	r2,r3,1023
   11ec8:	0080460e 	bge	zero,r2,11fe4 <__muldf3+0x748>
   11ecc:	910001cc 	andi	r4,r18,7
   11ed0:	20000726 	beq	r4,zero,11ef0 <__muldf3+0x654>
   11ed4:	910003cc 	andi	r4,r18,15
   11ed8:	01400104 	movi	r5,4
   11edc:	21400426 	beq	r4,r5,11ef0 <__muldf3+0x654>
   11ee0:	9149883a 	add	r4,r18,r5
   11ee4:	24a5803a 	cmpltu	r18,r4,r18
   11ee8:	8ca3883a 	add	r17,r17,r18
   11eec:	2025883a 	mov	r18,r4
   11ef0:	8900402c 	andhi	r4,r17,256
   11ef4:	20000426 	beq	r4,zero,11f08 <__muldf3+0x66c>
   11ef8:	18810004 	addi	r2,r3,1024
   11efc:	00ffc034 	movhi	r3,65280
   11f00:	18ffffc4 	addi	r3,r3,-1
   11f04:	88e2703a 	and	r17,r17,r3
   11f08:	00c1ff84 	movi	r3,2046
   11f0c:	18bf1316 	blt	r3,r2,11b5c <_gp+0xfffeba30>
   11f10:	882c977a 	slli	r22,r17,29
   11f14:	9024d0fa 	srli	r18,r18,3
   11f18:	8822927a 	slli	r17,r17,9
   11f1c:	1081ffcc 	andi	r2,r2,2047
   11f20:	b4acb03a 	or	r22,r22,r18
   11f24:	8820d33a 	srli	r16,r17,12
   11f28:	3027883a 	mov	r19,r6
   11f2c:	003eba06 	br	11a18 <_gp+0xfffeb8ec>
   11f30:	8080022c 	andhi	r2,r16,8
   11f34:	10000926 	beq	r2,zero,11f5c <__muldf3+0x6c0>
   11f38:	8880022c 	andhi	r2,r17,8
   11f3c:	1000071e 	bne	r2,zero,11f5c <__muldf3+0x6c0>
   11f40:	00800434 	movhi	r2,16
   11f44:	8c000234 	orhi	r16,r17,8
   11f48:	10bfffc4 	addi	r2,r2,-1
   11f4c:	e027883a 	mov	r19,fp
   11f50:	80a0703a 	and	r16,r16,r2
   11f54:	902d883a 	mov	r22,r18
   11f58:	003f1706 	br	11bb8 <_gp+0xfffeba8c>
   11f5c:	00800434 	movhi	r2,16
   11f60:	84000234 	orhi	r16,r16,8
   11f64:	10bfffc4 	addi	r2,r2,-1
   11f68:	80a0703a 	and	r16,r16,r2
   11f6c:	003f1206 	br	11bb8 <_gp+0xfffeba8c>
   11f70:	147ff604 	addi	r17,r2,-40
   11f74:	3462983a 	sll	r17,r6,r17
   11f78:	0025883a 	mov	r18,zero
   11f7c:	003ef306 	br	11b4c <_gp+0xfffeba20>
   11f80:	3009883a 	mov	r4,r6
   11f84:	d9400215 	stw	r5,8(sp)
   11f88:	d9800715 	stw	r6,28(sp)
   11f8c:	da400415 	stw	r9,16(sp)
   11f90:	da800315 	stw	r10,12(sp)
   11f94:	00122640 	call	12264 <__clzsi2>
   11f98:	10800804 	addi	r2,r2,32
   11f9c:	da800317 	ldw	r10,12(sp)
   11fa0:	da400417 	ldw	r9,16(sp)
   11fa4:	d9800717 	ldw	r6,28(sp)
   11fa8:	d9400217 	ldw	r5,8(sp)
   11fac:	003edd06 	br	11b24 <_gp+0xfffeb9f8>
   11fb0:	143ff604 	addi	r16,r2,-40
   11fb4:	ac20983a 	sll	r16,r21,r16
   11fb8:	002d883a 	mov	r22,zero
   11fbc:	003ec106 	br	11ac4 <_gp+0xfffeb998>
   11fc0:	d9800715 	stw	r6,28(sp)
   11fc4:	d9c00215 	stw	r7,8(sp)
   11fc8:	da400415 	stw	r9,16(sp)
   11fcc:	00122640 	call	12264 <__clzsi2>
   11fd0:	10800804 	addi	r2,r2,32
   11fd4:	da400417 	ldw	r9,16(sp)
   11fd8:	d9c00217 	ldw	r7,8(sp)
   11fdc:	d9800717 	ldw	r6,28(sp)
   11fe0:	003eae06 	br	11a9c <_gp+0xfffeb970>
   11fe4:	00c00044 	movi	r3,1
   11fe8:	1887c83a 	sub	r3,r3,r2
   11fec:	01000e04 	movi	r4,56
   11ff0:	20fe8516 	blt	r4,r3,11a08 <_gp+0xfffeb8dc>
   11ff4:	010007c4 	movi	r4,31
   11ff8:	20c01b16 	blt	r4,r3,12068 <__muldf3+0x7cc>
   11ffc:	00800804 	movi	r2,32
   12000:	10c5c83a 	sub	r2,r2,r3
   12004:	888a983a 	sll	r5,r17,r2
   12008:	90c8d83a 	srl	r4,r18,r3
   1200c:	9084983a 	sll	r2,r18,r2
   12010:	88e2d83a 	srl	r17,r17,r3
   12014:	2906b03a 	or	r3,r5,r4
   12018:	1004c03a 	cmpne	r2,r2,zero
   1201c:	1886b03a 	or	r3,r3,r2
   12020:	188001cc 	andi	r2,r3,7
   12024:	10000726 	beq	r2,zero,12044 <__muldf3+0x7a8>
   12028:	188003cc 	andi	r2,r3,15
   1202c:	01000104 	movi	r4,4
   12030:	11000426 	beq	r2,r4,12044 <__muldf3+0x7a8>
   12034:	1805883a 	mov	r2,r3
   12038:	10c00104 	addi	r3,r2,4
   1203c:	1885803a 	cmpltu	r2,r3,r2
   12040:	88a3883a 	add	r17,r17,r2
   12044:	8880202c 	andhi	r2,r17,128
   12048:	10001c26 	beq	r2,zero,120bc <__muldf3+0x820>
   1204c:	3027883a 	mov	r19,r6
   12050:	00800044 	movi	r2,1
   12054:	0021883a 	mov	r16,zero
   12058:	002d883a 	mov	r22,zero
   1205c:	003e6e06 	br	11a18 <_gp+0xfffeb8ec>
   12060:	4007883a 	mov	r3,r8
   12064:	003f9706 	br	11ec4 <_gp+0xfffebd98>
   12068:	017ff844 	movi	r5,-31
   1206c:	2885c83a 	sub	r2,r5,r2
   12070:	888ad83a 	srl	r5,r17,r2
   12074:	00800804 	movi	r2,32
   12078:	18801a26 	beq	r3,r2,120e4 <__muldf3+0x848>
   1207c:	01001004 	movi	r4,64
   12080:	20c7c83a 	sub	r3,r4,r3
   12084:	88e2983a 	sll	r17,r17,r3
   12088:	8ca4b03a 	or	r18,r17,r18
   1208c:	9004c03a 	cmpne	r2,r18,zero
   12090:	2884b03a 	or	r2,r5,r2
   12094:	144001cc 	andi	r17,r2,7
   12098:	88000d1e 	bne	r17,zero,120d0 <__muldf3+0x834>
   1209c:	0021883a 	mov	r16,zero
   120a0:	102cd0fa 	srli	r22,r2,3
   120a4:	3027883a 	mov	r19,r6
   120a8:	0005883a 	mov	r2,zero
   120ac:	b46cb03a 	or	r22,r22,r17
   120b0:	003e5906 	br	11a18 <_gp+0xfffeb8ec>
   120b4:	1007883a 	mov	r3,r2
   120b8:	0023883a 	mov	r17,zero
   120bc:	8820927a 	slli	r16,r17,9
   120c0:	1805883a 	mov	r2,r3
   120c4:	8822977a 	slli	r17,r17,29
   120c8:	8020d33a 	srli	r16,r16,12
   120cc:	003ff406 	br	120a0 <_gp+0xfffebf74>
   120d0:	10c003cc 	andi	r3,r2,15
   120d4:	01000104 	movi	r4,4
   120d8:	193ff626 	beq	r3,r4,120b4 <_gp+0xfffebf88>
   120dc:	0023883a 	mov	r17,zero
   120e0:	003fd506 	br	12038 <_gp+0xfffebf0c>
   120e4:	0023883a 	mov	r17,zero
   120e8:	003fe706 	br	12088 <_gp+0xfffebf5c>
   120ec:	00800434 	movhi	r2,16
   120f0:	8c000234 	orhi	r16,r17,8
   120f4:	10bfffc4 	addi	r2,r2,-1
   120f8:	3027883a 	mov	r19,r6
   120fc:	80a0703a 	and	r16,r16,r2
   12100:	902d883a 	mov	r22,r18
   12104:	003eac06 	br	11bb8 <_gp+0xfffeba8c>

00012108 <__fixdfsi>:
   12108:	280cd53a 	srli	r6,r5,20
   1210c:	00c00434 	movhi	r3,16
   12110:	18ffffc4 	addi	r3,r3,-1
   12114:	3181ffcc 	andi	r6,r6,2047
   12118:	01c0ff84 	movi	r7,1022
   1211c:	28c6703a 	and	r3,r5,r3
   12120:	280ad7fa 	srli	r5,r5,31
   12124:	3980120e 	bge	r7,r6,12170 <__fixdfsi+0x68>
   12128:	00810744 	movi	r2,1053
   1212c:	11800c16 	blt	r2,r6,12160 <__fixdfsi+0x58>
   12130:	00810cc4 	movi	r2,1075
   12134:	1185c83a 	sub	r2,r2,r6
   12138:	01c007c4 	movi	r7,31
   1213c:	18c00434 	orhi	r3,r3,16
   12140:	38800d16 	blt	r7,r2,12178 <__fixdfsi+0x70>
   12144:	31befb44 	addi	r6,r6,-1043
   12148:	2084d83a 	srl	r2,r4,r2
   1214c:	1986983a 	sll	r3,r3,r6
   12150:	1884b03a 	or	r2,r3,r2
   12154:	28000726 	beq	r5,zero,12174 <__fixdfsi+0x6c>
   12158:	0085c83a 	sub	r2,zero,r2
   1215c:	f800283a 	ret
   12160:	00a00034 	movhi	r2,32768
   12164:	10bfffc4 	addi	r2,r2,-1
   12168:	2885883a 	add	r2,r5,r2
   1216c:	f800283a 	ret
   12170:	0005883a 	mov	r2,zero
   12174:	f800283a 	ret
   12178:	008104c4 	movi	r2,1043
   1217c:	1185c83a 	sub	r2,r2,r6
   12180:	1884d83a 	srl	r2,r3,r2
   12184:	003ff306 	br	12154 <_gp+0xfffec028>

00012188 <__floatsidf>:
   12188:	defffd04 	addi	sp,sp,-12
   1218c:	dfc00215 	stw	ra,8(sp)
   12190:	dc400115 	stw	r17,4(sp)
   12194:	dc000015 	stw	r16,0(sp)
   12198:	20002b26 	beq	r4,zero,12248 <__floatsidf+0xc0>
   1219c:	2023883a 	mov	r17,r4
   121a0:	2020d7fa 	srli	r16,r4,31
   121a4:	20002d16 	blt	r4,zero,1225c <__floatsidf+0xd4>
   121a8:	8809883a 	mov	r4,r17
   121ac:	00122640 	call	12264 <__clzsi2>
   121b0:	01410784 	movi	r5,1054
   121b4:	288bc83a 	sub	r5,r5,r2
   121b8:	01010cc4 	movi	r4,1075
   121bc:	2149c83a 	sub	r4,r4,r5
   121c0:	00c007c4 	movi	r3,31
   121c4:	1900160e 	bge	r3,r4,12220 <__floatsidf+0x98>
   121c8:	00c104c4 	movi	r3,1043
   121cc:	1947c83a 	sub	r3,r3,r5
   121d0:	88c6983a 	sll	r3,r17,r3
   121d4:	00800434 	movhi	r2,16
   121d8:	10bfffc4 	addi	r2,r2,-1
   121dc:	1886703a 	and	r3,r3,r2
   121e0:	2941ffcc 	andi	r5,r5,2047
   121e4:	800d883a 	mov	r6,r16
   121e8:	0005883a 	mov	r2,zero
   121ec:	280a953a 	slli	r5,r5,20
   121f0:	31803fcc 	andi	r6,r6,255
   121f4:	01000434 	movhi	r4,16
   121f8:	300c97fa 	slli	r6,r6,31
   121fc:	213fffc4 	addi	r4,r4,-1
   12200:	1906703a 	and	r3,r3,r4
   12204:	1946b03a 	or	r3,r3,r5
   12208:	1986b03a 	or	r3,r3,r6
   1220c:	dfc00217 	ldw	ra,8(sp)
   12210:	dc400117 	ldw	r17,4(sp)
   12214:	dc000017 	ldw	r16,0(sp)
   12218:	dec00304 	addi	sp,sp,12
   1221c:	f800283a 	ret
   12220:	00c002c4 	movi	r3,11
   12224:	1887c83a 	sub	r3,r3,r2
   12228:	88c6d83a 	srl	r3,r17,r3
   1222c:	8904983a 	sll	r2,r17,r4
   12230:	01000434 	movhi	r4,16
   12234:	213fffc4 	addi	r4,r4,-1
   12238:	2941ffcc 	andi	r5,r5,2047
   1223c:	1906703a 	and	r3,r3,r4
   12240:	800d883a 	mov	r6,r16
   12244:	003fe906 	br	121ec <_gp+0xfffec0c0>
   12248:	000d883a 	mov	r6,zero
   1224c:	000b883a 	mov	r5,zero
   12250:	0007883a 	mov	r3,zero
   12254:	0005883a 	mov	r2,zero
   12258:	003fe406 	br	121ec <_gp+0xfffec0c0>
   1225c:	0123c83a 	sub	r17,zero,r4
   12260:	003fd106 	br	121a8 <_gp+0xfffec07c>

00012264 <__clzsi2>:
   12264:	00bfffd4 	movui	r2,65535
   12268:	11000536 	bltu	r2,r4,12280 <__clzsi2+0x1c>
   1226c:	00803fc4 	movi	r2,255
   12270:	11000f36 	bltu	r2,r4,122b0 <__clzsi2+0x4c>
   12274:	00800804 	movi	r2,32
   12278:	0007883a 	mov	r3,zero
   1227c:	00000506 	br	12294 <__clzsi2+0x30>
   12280:	00804034 	movhi	r2,256
   12284:	10bfffc4 	addi	r2,r2,-1
   12288:	11000c2e 	bgeu	r2,r4,122bc <__clzsi2+0x58>
   1228c:	00800204 	movi	r2,8
   12290:	00c00604 	movi	r3,24
   12294:	20c8d83a 	srl	r4,r4,r3
   12298:	00c000b4 	movhi	r3,2
   1229c:	18f54c04 	addi	r3,r3,-10960
   122a0:	1909883a 	add	r4,r3,r4
   122a4:	20c00003 	ldbu	r3,0(r4)
   122a8:	10c5c83a 	sub	r2,r2,r3
   122ac:	f800283a 	ret
   122b0:	00800604 	movi	r2,24
   122b4:	00c00204 	movi	r3,8
   122b8:	003ff606 	br	12294 <_gp+0xfffec168>
   122bc:	00800404 	movi	r2,16
   122c0:	1007883a 	mov	r3,r2
   122c4:	003ff306 	br	12294 <_gp+0xfffec168>

000122c8 <__mulsi3>:
   122c8:	0005883a 	mov	r2,zero
   122cc:	20000726 	beq	r4,zero,122ec <__mulsi3+0x24>
   122d0:	20c0004c 	andi	r3,r4,1
   122d4:	2008d07a 	srli	r4,r4,1
   122d8:	18000126 	beq	r3,zero,122e0 <__mulsi3+0x18>
   122dc:	1145883a 	add	r2,r2,r5
   122e0:	294b883a 	add	r5,r5,r5
   122e4:	203ffa1e 	bne	r4,zero,122d0 <_gp+0xfffec1a4>
   122e8:	f800283a 	ret
   122ec:	f800283a 	ret

000122f0 <_asprintf_r>:
   122f0:	deffe304 	addi	sp,sp,-116
   122f4:	dc001a15 	stw	r16,104(sp)
   122f8:	2821883a 	mov	r16,r5
   122fc:	dfc01b15 	stw	ra,108(sp)
   12300:	d9c01c15 	stw	r7,112(sp)
   12304:	0080a204 	movi	r2,648
   12308:	d880030d 	sth	r2,12(sp)
   1230c:	d9c01c04 	addi	r7,sp,112
   12310:	00bfffc4 	movi	r2,-1
   12314:	d80b883a 	mov	r5,sp
   12318:	d8000015 	stw	zero,0(sp)
   1231c:	d8000415 	stw	zero,16(sp)
   12320:	d8000215 	stw	zero,8(sp)
   12324:	d8000515 	stw	zero,20(sp)
   12328:	d880038d 	sth	r2,14(sp)
   1232c:	00139740 	call	13974 <___svfprintf_internal_r>
   12330:	10000416 	blt	r2,zero,12344 <_asprintf_r+0x54>
   12334:	d8c00017 	ldw	r3,0(sp)
   12338:	18000005 	stb	zero,0(r3)
   1233c:	d8c00417 	ldw	r3,16(sp)
   12340:	80c00015 	stw	r3,0(r16)
   12344:	dfc01b17 	ldw	ra,108(sp)
   12348:	dc001a17 	ldw	r16,104(sp)
   1234c:	dec01d04 	addi	sp,sp,116
   12350:	f800283a 	ret

00012354 <asprintf>:
   12354:	deffe204 	addi	sp,sp,-120
   12358:	dc001a15 	stw	r16,104(sp)
   1235c:	2021883a 	mov	r16,r4
   12360:	dfc01b15 	stw	ra,108(sp)
   12364:	d9801c15 	stw	r6,112(sp)
   12368:	d9c01d15 	stw	r7,116(sp)
   1236c:	008000b4 	movhi	r2,2
   12370:	10b84e04 	addi	r2,r2,-7880
   12374:	11000017 	ldw	r4,0(r2)
   12378:	0080a204 	movi	r2,648
   1237c:	280d883a 	mov	r6,r5
   12380:	d880030d 	sth	r2,12(sp)
   12384:	d9c01c04 	addi	r7,sp,112
   12388:	00bfffc4 	movi	r2,-1
   1238c:	d80b883a 	mov	r5,sp
   12390:	d8000015 	stw	zero,0(sp)
   12394:	d8000415 	stw	zero,16(sp)
   12398:	d8000215 	stw	zero,8(sp)
   1239c:	d8000515 	stw	zero,20(sp)
   123a0:	d880038d 	sth	r2,14(sp)
   123a4:	00139740 	call	13974 <___svfprintf_internal_r>
   123a8:	10000416 	blt	r2,zero,123bc <asprintf+0x68>
   123ac:	d8c00017 	ldw	r3,0(sp)
   123b0:	18000005 	stb	zero,0(r3)
   123b4:	d8c00417 	ldw	r3,16(sp)
   123b8:	80c00015 	stw	r3,0(r16)
   123bc:	dfc01b17 	ldw	ra,108(sp)
   123c0:	dc001a17 	ldw	r16,104(sp)
   123c4:	dec01e04 	addi	sp,sp,120
   123c8:	f800283a 	ret

000123cc <malloc>:
   123cc:	008000b4 	movhi	r2,2
   123d0:	10b84e04 	addi	r2,r2,-7880
   123d4:	200b883a 	mov	r5,r4
   123d8:	11000017 	ldw	r4,0(r2)
   123dc:	00123f41 	jmpi	123f4 <_malloc_r>

000123e0 <free>:
   123e0:	008000b4 	movhi	r2,2
   123e4:	10b84e04 	addi	r2,r2,-7880
   123e8:	200b883a 	mov	r5,r4
   123ec:	11000017 	ldw	r4,0(r2)
   123f0:	00176041 	jmpi	17604 <_free_r>

000123f4 <_malloc_r>:
   123f4:	defff504 	addi	sp,sp,-44
   123f8:	dc800315 	stw	r18,12(sp)
   123fc:	dfc00a15 	stw	ra,40(sp)
   12400:	df000915 	stw	fp,36(sp)
   12404:	ddc00815 	stw	r23,32(sp)
   12408:	dd800715 	stw	r22,28(sp)
   1240c:	dd400615 	stw	r21,24(sp)
   12410:	dd000515 	stw	r20,20(sp)
   12414:	dcc00415 	stw	r19,16(sp)
   12418:	dc400215 	stw	r17,8(sp)
   1241c:	dc000115 	stw	r16,4(sp)
   12420:	288002c4 	addi	r2,r5,11
   12424:	00c00584 	movi	r3,22
   12428:	2025883a 	mov	r18,r4
   1242c:	18807f2e 	bgeu	r3,r2,1262c <_malloc_r+0x238>
   12430:	047ffe04 	movi	r17,-8
   12434:	1462703a 	and	r17,r2,r17
   12438:	8800a316 	blt	r17,zero,126c8 <_malloc_r+0x2d4>
   1243c:	8940a236 	bltu	r17,r5,126c8 <_malloc_r+0x2d4>
   12440:	001ced80 	call	1ced8 <__malloc_lock>
   12444:	00807dc4 	movi	r2,503
   12448:	1441e92e 	bgeu	r2,r17,12bf0 <_malloc_r+0x7fc>
   1244c:	8804d27a 	srli	r2,r17,9
   12450:	1000a126 	beq	r2,zero,126d8 <_malloc_r+0x2e4>
   12454:	00c00104 	movi	r3,4
   12458:	18811e36 	bltu	r3,r2,128d4 <_malloc_r+0x4e0>
   1245c:	8804d1ba 	srli	r2,r17,6
   12460:	12000e44 	addi	r8,r2,57
   12464:	11c00e04 	addi	r7,r2,56
   12468:	4209883a 	add	r4,r8,r8
   1246c:	04c000b4 	movhi	r19,2
   12470:	2109883a 	add	r4,r4,r4
   12474:	9cf70a04 	addi	r19,r19,-9176
   12478:	2109883a 	add	r4,r4,r4
   1247c:	9909883a 	add	r4,r19,r4
   12480:	24000117 	ldw	r16,4(r4)
   12484:	213ffe04 	addi	r4,r4,-8
   12488:	24009726 	beq	r4,r16,126e8 <_malloc_r+0x2f4>
   1248c:	80800117 	ldw	r2,4(r16)
   12490:	01bfff04 	movi	r6,-4
   12494:	014003c4 	movi	r5,15
   12498:	1184703a 	and	r2,r2,r6
   1249c:	1447c83a 	sub	r3,r2,r17
   124a0:	28c00716 	blt	r5,r3,124c0 <_malloc_r+0xcc>
   124a4:	1800920e 	bge	r3,zero,126f0 <_malloc_r+0x2fc>
   124a8:	84000317 	ldw	r16,12(r16)
   124ac:	24008e26 	beq	r4,r16,126e8 <_malloc_r+0x2f4>
   124b0:	80800117 	ldw	r2,4(r16)
   124b4:	1184703a 	and	r2,r2,r6
   124b8:	1447c83a 	sub	r3,r2,r17
   124bc:	28fff90e 	bge	r5,r3,124a4 <_gp+0xfffec378>
   124c0:	3809883a 	mov	r4,r7
   124c4:	018000b4 	movhi	r6,2
   124c8:	9c000417 	ldw	r16,16(r19)
   124cc:	31b70a04 	addi	r6,r6,-9176
   124d0:	32000204 	addi	r8,r6,8
   124d4:	82013426 	beq	r16,r8,129a8 <_malloc_r+0x5b4>
   124d8:	80c00117 	ldw	r3,4(r16)
   124dc:	00bfff04 	movi	r2,-4
   124e0:	188e703a 	and	r7,r3,r2
   124e4:	3c45c83a 	sub	r2,r7,r17
   124e8:	00c003c4 	movi	r3,15
   124ec:	18811f16 	blt	r3,r2,1296c <_malloc_r+0x578>
   124f0:	32000515 	stw	r8,20(r6)
   124f4:	32000415 	stw	r8,16(r6)
   124f8:	10007f0e 	bge	r2,zero,126f8 <_malloc_r+0x304>
   124fc:	00807fc4 	movi	r2,511
   12500:	11c0fd36 	bltu	r2,r7,128f8 <_malloc_r+0x504>
   12504:	3806d0fa 	srli	r3,r7,3
   12508:	01c00044 	movi	r7,1
   1250c:	30800117 	ldw	r2,4(r6)
   12510:	19400044 	addi	r5,r3,1
   12514:	294b883a 	add	r5,r5,r5
   12518:	1807d0ba 	srai	r3,r3,2
   1251c:	294b883a 	add	r5,r5,r5
   12520:	294b883a 	add	r5,r5,r5
   12524:	298b883a 	add	r5,r5,r6
   12528:	38c6983a 	sll	r3,r7,r3
   1252c:	29c00017 	ldw	r7,0(r5)
   12530:	2a7ffe04 	addi	r9,r5,-8
   12534:	1886b03a 	or	r3,r3,r2
   12538:	82400315 	stw	r9,12(r16)
   1253c:	81c00215 	stw	r7,8(r16)
   12540:	30c00115 	stw	r3,4(r6)
   12544:	2c000015 	stw	r16,0(r5)
   12548:	3c000315 	stw	r16,12(r7)
   1254c:	2005d0ba 	srai	r2,r4,2
   12550:	01400044 	movi	r5,1
   12554:	288a983a 	sll	r5,r5,r2
   12558:	19406f36 	bltu	r3,r5,12718 <_malloc_r+0x324>
   1255c:	28c4703a 	and	r2,r5,r3
   12560:	10000a1e 	bne	r2,zero,1258c <_malloc_r+0x198>
   12564:	00bfff04 	movi	r2,-4
   12568:	294b883a 	add	r5,r5,r5
   1256c:	2088703a 	and	r4,r4,r2
   12570:	28c4703a 	and	r2,r5,r3
   12574:	21000104 	addi	r4,r4,4
   12578:	1000041e 	bne	r2,zero,1258c <_malloc_r+0x198>
   1257c:	294b883a 	add	r5,r5,r5
   12580:	28c4703a 	and	r2,r5,r3
   12584:	21000104 	addi	r4,r4,4
   12588:	103ffc26 	beq	r2,zero,1257c <_gp+0xfffec450>
   1258c:	02bfff04 	movi	r10,-4
   12590:	024003c4 	movi	r9,15
   12594:	21800044 	addi	r6,r4,1
   12598:	318d883a 	add	r6,r6,r6
   1259c:	318d883a 	add	r6,r6,r6
   125a0:	318d883a 	add	r6,r6,r6
   125a4:	998d883a 	add	r6,r19,r6
   125a8:	333ffe04 	addi	r12,r6,-8
   125ac:	2017883a 	mov	r11,r4
   125b0:	31800104 	addi	r6,r6,4
   125b4:	34000017 	ldw	r16,0(r6)
   125b8:	31fffd04 	addi	r7,r6,-12
   125bc:	81c0041e 	bne	r16,r7,125d0 <_malloc_r+0x1dc>
   125c0:	0000fb06 	br	129b0 <_malloc_r+0x5bc>
   125c4:	1801030e 	bge	r3,zero,129d4 <_malloc_r+0x5e0>
   125c8:	84000317 	ldw	r16,12(r16)
   125cc:	81c0f826 	beq	r16,r7,129b0 <_malloc_r+0x5bc>
   125d0:	80800117 	ldw	r2,4(r16)
   125d4:	1284703a 	and	r2,r2,r10
   125d8:	1447c83a 	sub	r3,r2,r17
   125dc:	48fff90e 	bge	r9,r3,125c4 <_gp+0xfffec498>
   125e0:	80800317 	ldw	r2,12(r16)
   125e4:	81000217 	ldw	r4,8(r16)
   125e8:	89400054 	ori	r5,r17,1
   125ec:	81400115 	stw	r5,4(r16)
   125f0:	20800315 	stw	r2,12(r4)
   125f4:	11000215 	stw	r4,8(r2)
   125f8:	8463883a 	add	r17,r16,r17
   125fc:	9c400515 	stw	r17,20(r19)
   12600:	9c400415 	stw	r17,16(r19)
   12604:	18800054 	ori	r2,r3,1
   12608:	88800115 	stw	r2,4(r17)
   1260c:	8a000315 	stw	r8,12(r17)
   12610:	8a000215 	stw	r8,8(r17)
   12614:	88e3883a 	add	r17,r17,r3
   12618:	88c00015 	stw	r3,0(r17)
   1261c:	9009883a 	mov	r4,r18
   12620:	001cedc0 	call	1cedc <__malloc_unlock>
   12624:	80800204 	addi	r2,r16,8
   12628:	00001b06 	br	12698 <_malloc_r+0x2a4>
   1262c:	04400404 	movi	r17,16
   12630:	89402536 	bltu	r17,r5,126c8 <_malloc_r+0x2d4>
   12634:	001ced80 	call	1ced8 <__malloc_lock>
   12638:	00800184 	movi	r2,6
   1263c:	01000084 	movi	r4,2
   12640:	04c000b4 	movhi	r19,2
   12644:	1085883a 	add	r2,r2,r2
   12648:	9cf70a04 	addi	r19,r19,-9176
   1264c:	1085883a 	add	r2,r2,r2
   12650:	9885883a 	add	r2,r19,r2
   12654:	14000117 	ldw	r16,4(r2)
   12658:	10fffe04 	addi	r3,r2,-8
   1265c:	80c0d926 	beq	r16,r3,129c4 <_malloc_r+0x5d0>
   12660:	80c00117 	ldw	r3,4(r16)
   12664:	81000317 	ldw	r4,12(r16)
   12668:	00bfff04 	movi	r2,-4
   1266c:	1884703a 	and	r2,r3,r2
   12670:	81400217 	ldw	r5,8(r16)
   12674:	8085883a 	add	r2,r16,r2
   12678:	10c00117 	ldw	r3,4(r2)
   1267c:	29000315 	stw	r4,12(r5)
   12680:	21400215 	stw	r5,8(r4)
   12684:	18c00054 	ori	r3,r3,1
   12688:	10c00115 	stw	r3,4(r2)
   1268c:	9009883a 	mov	r4,r18
   12690:	001cedc0 	call	1cedc <__malloc_unlock>
   12694:	80800204 	addi	r2,r16,8
   12698:	dfc00a17 	ldw	ra,40(sp)
   1269c:	df000917 	ldw	fp,36(sp)
   126a0:	ddc00817 	ldw	r23,32(sp)
   126a4:	dd800717 	ldw	r22,28(sp)
   126a8:	dd400617 	ldw	r21,24(sp)
   126ac:	dd000517 	ldw	r20,20(sp)
   126b0:	dcc00417 	ldw	r19,16(sp)
   126b4:	dc800317 	ldw	r18,12(sp)
   126b8:	dc400217 	ldw	r17,8(sp)
   126bc:	dc000117 	ldw	r16,4(sp)
   126c0:	dec00b04 	addi	sp,sp,44
   126c4:	f800283a 	ret
   126c8:	00800304 	movi	r2,12
   126cc:	90800015 	stw	r2,0(r18)
   126d0:	0005883a 	mov	r2,zero
   126d4:	003ff006 	br	12698 <_gp+0xfffec56c>
   126d8:	01002004 	movi	r4,128
   126dc:	02001004 	movi	r8,64
   126e0:	01c00fc4 	movi	r7,63
   126e4:	003f6106 	br	1246c <_gp+0xfffec340>
   126e8:	4009883a 	mov	r4,r8
   126ec:	003f7506 	br	124c4 <_gp+0xfffec398>
   126f0:	81000317 	ldw	r4,12(r16)
   126f4:	003fde06 	br	12670 <_gp+0xfffec544>
   126f8:	81c5883a 	add	r2,r16,r7
   126fc:	11400117 	ldw	r5,4(r2)
   12700:	9009883a 	mov	r4,r18
   12704:	29400054 	ori	r5,r5,1
   12708:	11400115 	stw	r5,4(r2)
   1270c:	001cedc0 	call	1cedc <__malloc_unlock>
   12710:	80800204 	addi	r2,r16,8
   12714:	003fe006 	br	12698 <_gp+0xfffec56c>
   12718:	9c000217 	ldw	r16,8(r19)
   1271c:	00bfff04 	movi	r2,-4
   12720:	85800117 	ldw	r22,4(r16)
   12724:	b0ac703a 	and	r22,r22,r2
   12728:	b4400336 	bltu	r22,r17,12738 <_malloc_r+0x344>
   1272c:	b445c83a 	sub	r2,r22,r17
   12730:	00c003c4 	movi	r3,15
   12734:	18805d16 	blt	r3,r2,128ac <_malloc_r+0x4b8>
   12738:	05c000b4 	movhi	r23,2
   1273c:	008000b4 	movhi	r2,2
   12740:	10bacc04 	addi	r2,r2,-5328
   12744:	bdf84f04 	addi	r23,r23,-7876
   12748:	15400017 	ldw	r21,0(r2)
   1274c:	b8c00017 	ldw	r3,0(r23)
   12750:	00bfffc4 	movi	r2,-1
   12754:	858d883a 	add	r6,r16,r22
   12758:	8d6b883a 	add	r21,r17,r21
   1275c:	1880ea26 	beq	r3,r2,12b08 <_malloc_r+0x714>
   12760:	ad4403c4 	addi	r21,r21,4111
   12764:	00bc0004 	movi	r2,-4096
   12768:	a8aa703a 	and	r21,r21,r2
   1276c:	a80b883a 	mov	r5,r21
   12770:	9009883a 	mov	r4,r18
   12774:	d9800015 	stw	r6,0(sp)
   12778:	0012d280 	call	12d28 <_sbrk_r>
   1277c:	1029883a 	mov	r20,r2
   12780:	00bfffc4 	movi	r2,-1
   12784:	d9800017 	ldw	r6,0(sp)
   12788:	a080e826 	beq	r20,r2,12b2c <_malloc_r+0x738>
   1278c:	a180a636 	bltu	r20,r6,12a28 <_malloc_r+0x634>
   12790:	070000b4 	movhi	fp,2
   12794:	e73ae204 	addi	fp,fp,-5240
   12798:	e0800017 	ldw	r2,0(fp)
   1279c:	a887883a 	add	r3,r21,r2
   127a0:	e0c00015 	stw	r3,0(fp)
   127a4:	3500e626 	beq	r6,r20,12b40 <_malloc_r+0x74c>
   127a8:	b9000017 	ldw	r4,0(r23)
   127ac:	00bfffc4 	movi	r2,-1
   127b0:	2080ee26 	beq	r4,r2,12b6c <_malloc_r+0x778>
   127b4:	a185c83a 	sub	r2,r20,r6
   127b8:	10c5883a 	add	r2,r2,r3
   127bc:	e0800015 	stw	r2,0(fp)
   127c0:	a0c001cc 	andi	r3,r20,7
   127c4:	1800bc26 	beq	r3,zero,12ab8 <_malloc_r+0x6c4>
   127c8:	a0e9c83a 	sub	r20,r20,r3
   127cc:	00840204 	movi	r2,4104
   127d0:	a5000204 	addi	r20,r20,8
   127d4:	10c7c83a 	sub	r3,r2,r3
   127d8:	a545883a 	add	r2,r20,r21
   127dc:	1083ffcc 	andi	r2,r2,4095
   127e0:	18abc83a 	sub	r21,r3,r2
   127e4:	a80b883a 	mov	r5,r21
   127e8:	9009883a 	mov	r4,r18
   127ec:	0012d280 	call	12d28 <_sbrk_r>
   127f0:	00ffffc4 	movi	r3,-1
   127f4:	10c0e126 	beq	r2,r3,12b7c <_malloc_r+0x788>
   127f8:	1505c83a 	sub	r2,r2,r20
   127fc:	1545883a 	add	r2,r2,r21
   12800:	10800054 	ori	r2,r2,1
   12804:	e0c00017 	ldw	r3,0(fp)
   12808:	9d000215 	stw	r20,8(r19)
   1280c:	a0800115 	stw	r2,4(r20)
   12810:	a8c7883a 	add	r3,r21,r3
   12814:	e0c00015 	stw	r3,0(fp)
   12818:	84c00e26 	beq	r16,r19,12854 <_malloc_r+0x460>
   1281c:	018003c4 	movi	r6,15
   12820:	3580a72e 	bgeu	r6,r22,12ac0 <_malloc_r+0x6cc>
   12824:	81400117 	ldw	r5,4(r16)
   12828:	013ffe04 	movi	r4,-8
   1282c:	b0bffd04 	addi	r2,r22,-12
   12830:	1104703a 	and	r2,r2,r4
   12834:	2900004c 	andi	r4,r5,1
   12838:	2088b03a 	or	r4,r4,r2
   1283c:	81000115 	stw	r4,4(r16)
   12840:	01400144 	movi	r5,5
   12844:	8089883a 	add	r4,r16,r2
   12848:	21400115 	stw	r5,4(r4)
   1284c:	21400215 	stw	r5,8(r4)
   12850:	3080cd36 	bltu	r6,r2,12b88 <_malloc_r+0x794>
   12854:	008000b4 	movhi	r2,2
   12858:	10bacb04 	addi	r2,r2,-5332
   1285c:	11000017 	ldw	r4,0(r2)
   12860:	20c0012e 	bgeu	r4,r3,12868 <_malloc_r+0x474>
   12864:	10c00015 	stw	r3,0(r2)
   12868:	008000b4 	movhi	r2,2
   1286c:	10baca04 	addi	r2,r2,-5336
   12870:	11000017 	ldw	r4,0(r2)
   12874:	9c000217 	ldw	r16,8(r19)
   12878:	20c0012e 	bgeu	r4,r3,12880 <_malloc_r+0x48c>
   1287c:	10c00015 	stw	r3,0(r2)
   12880:	80c00117 	ldw	r3,4(r16)
   12884:	00bfff04 	movi	r2,-4
   12888:	1886703a 	and	r3,r3,r2
   1288c:	1c45c83a 	sub	r2,r3,r17
   12890:	1c400236 	bltu	r3,r17,1289c <_malloc_r+0x4a8>
   12894:	00c003c4 	movi	r3,15
   12898:	18800416 	blt	r3,r2,128ac <_malloc_r+0x4b8>
   1289c:	9009883a 	mov	r4,r18
   128a0:	001cedc0 	call	1cedc <__malloc_unlock>
   128a4:	0005883a 	mov	r2,zero
   128a8:	003f7b06 	br	12698 <_gp+0xfffec56c>
   128ac:	88c00054 	ori	r3,r17,1
   128b0:	80c00115 	stw	r3,4(r16)
   128b4:	8463883a 	add	r17,r16,r17
   128b8:	10800054 	ori	r2,r2,1
   128bc:	9c400215 	stw	r17,8(r19)
   128c0:	88800115 	stw	r2,4(r17)
   128c4:	9009883a 	mov	r4,r18
   128c8:	001cedc0 	call	1cedc <__malloc_unlock>
   128cc:	80800204 	addi	r2,r16,8
   128d0:	003f7106 	br	12698 <_gp+0xfffec56c>
   128d4:	00c00504 	movi	r3,20
   128d8:	18804a2e 	bgeu	r3,r2,12a04 <_malloc_r+0x610>
   128dc:	00c01504 	movi	r3,84
   128e0:	18806e36 	bltu	r3,r2,12a9c <_malloc_r+0x6a8>
   128e4:	8804d33a 	srli	r2,r17,12
   128e8:	12001bc4 	addi	r8,r2,111
   128ec:	11c01b84 	addi	r7,r2,110
   128f0:	4209883a 	add	r4,r8,r8
   128f4:	003edd06 	br	1246c <_gp+0xfffec340>
   128f8:	3804d27a 	srli	r2,r7,9
   128fc:	00c00104 	movi	r3,4
   12900:	1880442e 	bgeu	r3,r2,12a14 <_malloc_r+0x620>
   12904:	00c00504 	movi	r3,20
   12908:	18808136 	bltu	r3,r2,12b10 <_malloc_r+0x71c>
   1290c:	11401704 	addi	r5,r2,92
   12910:	10c016c4 	addi	r3,r2,91
   12914:	294b883a 	add	r5,r5,r5
   12918:	294b883a 	add	r5,r5,r5
   1291c:	294b883a 	add	r5,r5,r5
   12920:	994b883a 	add	r5,r19,r5
   12924:	28800017 	ldw	r2,0(r5)
   12928:	018000b4 	movhi	r6,2
   1292c:	297ffe04 	addi	r5,r5,-8
   12930:	31b70a04 	addi	r6,r6,-9176
   12934:	28806526 	beq	r5,r2,12acc <_malloc_r+0x6d8>
   12938:	01bfff04 	movi	r6,-4
   1293c:	10c00117 	ldw	r3,4(r2)
   12940:	1986703a 	and	r3,r3,r6
   12944:	38c0022e 	bgeu	r7,r3,12950 <_malloc_r+0x55c>
   12948:	10800217 	ldw	r2,8(r2)
   1294c:	28bffb1e 	bne	r5,r2,1293c <_gp+0xfffec810>
   12950:	11400317 	ldw	r5,12(r2)
   12954:	98c00117 	ldw	r3,4(r19)
   12958:	81400315 	stw	r5,12(r16)
   1295c:	80800215 	stw	r2,8(r16)
   12960:	2c000215 	stw	r16,8(r5)
   12964:	14000315 	stw	r16,12(r2)
   12968:	003ef806 	br	1254c <_gp+0xfffec420>
   1296c:	88c00054 	ori	r3,r17,1
   12970:	80c00115 	stw	r3,4(r16)
   12974:	8463883a 	add	r17,r16,r17
   12978:	34400515 	stw	r17,20(r6)
   1297c:	34400415 	stw	r17,16(r6)
   12980:	10c00054 	ori	r3,r2,1
   12984:	8a000315 	stw	r8,12(r17)
   12988:	8a000215 	stw	r8,8(r17)
   1298c:	88c00115 	stw	r3,4(r17)
   12990:	88a3883a 	add	r17,r17,r2
   12994:	88800015 	stw	r2,0(r17)
   12998:	9009883a 	mov	r4,r18
   1299c:	001cedc0 	call	1cedc <__malloc_unlock>
   129a0:	80800204 	addi	r2,r16,8
   129a4:	003f3c06 	br	12698 <_gp+0xfffec56c>
   129a8:	30c00117 	ldw	r3,4(r6)
   129ac:	003ee706 	br	1254c <_gp+0xfffec420>
   129b0:	5ac00044 	addi	r11,r11,1
   129b4:	588000cc 	andi	r2,r11,3
   129b8:	31800204 	addi	r6,r6,8
   129bc:	103efd1e 	bne	r2,zero,125b4 <_gp+0xfffec488>
   129c0:	00002406 	br	12a54 <_malloc_r+0x660>
   129c4:	14000317 	ldw	r16,12(r2)
   129c8:	143f251e 	bne	r2,r16,12660 <_gp+0xfffec534>
   129cc:	21000084 	addi	r4,r4,2
   129d0:	003ebc06 	br	124c4 <_gp+0xfffec398>
   129d4:	8085883a 	add	r2,r16,r2
   129d8:	10c00117 	ldw	r3,4(r2)
   129dc:	81000317 	ldw	r4,12(r16)
   129e0:	81400217 	ldw	r5,8(r16)
   129e4:	18c00054 	ori	r3,r3,1
   129e8:	10c00115 	stw	r3,4(r2)
   129ec:	29000315 	stw	r4,12(r5)
   129f0:	21400215 	stw	r5,8(r4)
   129f4:	9009883a 	mov	r4,r18
   129f8:	001cedc0 	call	1cedc <__malloc_unlock>
   129fc:	80800204 	addi	r2,r16,8
   12a00:	003f2506 	br	12698 <_gp+0xfffec56c>
   12a04:	12001704 	addi	r8,r2,92
   12a08:	11c016c4 	addi	r7,r2,91
   12a0c:	4209883a 	add	r4,r8,r8
   12a10:	003e9606 	br	1246c <_gp+0xfffec340>
   12a14:	3804d1ba 	srli	r2,r7,6
   12a18:	11400e44 	addi	r5,r2,57
   12a1c:	10c00e04 	addi	r3,r2,56
   12a20:	294b883a 	add	r5,r5,r5
   12a24:	003fbc06 	br	12918 <_gp+0xfffec7ec>
   12a28:	84ff5926 	beq	r16,r19,12790 <_gp+0xfffec664>
   12a2c:	008000b4 	movhi	r2,2
   12a30:	10b70a04 	addi	r2,r2,-9176
   12a34:	14000217 	ldw	r16,8(r2)
   12a38:	00bfff04 	movi	r2,-4
   12a3c:	80c00117 	ldw	r3,4(r16)
   12a40:	1886703a 	and	r3,r3,r2
   12a44:	003f9106 	br	1288c <_gp+0xfffec760>
   12a48:	60800217 	ldw	r2,8(r12)
   12a4c:	213fffc4 	addi	r4,r4,-1
   12a50:	1300651e 	bne	r2,r12,12be8 <_malloc_r+0x7f4>
   12a54:	208000cc 	andi	r2,r4,3
   12a58:	633ffe04 	addi	r12,r12,-8
   12a5c:	103ffa1e 	bne	r2,zero,12a48 <_gp+0xfffec91c>
   12a60:	98800117 	ldw	r2,4(r19)
   12a64:	0146303a 	nor	r3,zero,r5
   12a68:	1884703a 	and	r2,r3,r2
   12a6c:	98800115 	stw	r2,4(r19)
   12a70:	294b883a 	add	r5,r5,r5
   12a74:	117f2836 	bltu	r2,r5,12718 <_gp+0xfffec5ec>
   12a78:	283f2726 	beq	r5,zero,12718 <_gp+0xfffec5ec>
   12a7c:	2886703a 	and	r3,r5,r2
   12a80:	5809883a 	mov	r4,r11
   12a84:	183ec31e 	bne	r3,zero,12594 <_gp+0xfffec468>
   12a88:	294b883a 	add	r5,r5,r5
   12a8c:	2886703a 	and	r3,r5,r2
   12a90:	21000104 	addi	r4,r4,4
   12a94:	183ffc26 	beq	r3,zero,12a88 <_gp+0xfffec95c>
   12a98:	003ebe06 	br	12594 <_gp+0xfffec468>
   12a9c:	00c05504 	movi	r3,340
   12aa0:	18801236 	bltu	r3,r2,12aec <_malloc_r+0x6f8>
   12aa4:	8804d3fa 	srli	r2,r17,15
   12aa8:	12001e04 	addi	r8,r2,120
   12aac:	11c01dc4 	addi	r7,r2,119
   12ab0:	4209883a 	add	r4,r8,r8
   12ab4:	003e6d06 	br	1246c <_gp+0xfffec340>
   12ab8:	00c40004 	movi	r3,4096
   12abc:	003f4606 	br	127d8 <_gp+0xfffec6ac>
   12ac0:	00800044 	movi	r2,1
   12ac4:	a0800115 	stw	r2,4(r20)
   12ac8:	003f7406 	br	1289c <_gp+0xfffec770>
   12acc:	1805d0ba 	srai	r2,r3,2
   12ad0:	01c00044 	movi	r7,1
   12ad4:	30c00117 	ldw	r3,4(r6)
   12ad8:	388e983a 	sll	r7,r7,r2
   12adc:	2805883a 	mov	r2,r5
   12ae0:	38c6b03a 	or	r3,r7,r3
   12ae4:	30c00115 	stw	r3,4(r6)
   12ae8:	003f9b06 	br	12958 <_gp+0xfffec82c>
   12aec:	00c15504 	movi	r3,1364
   12af0:	18801a36 	bltu	r3,r2,12b5c <_malloc_r+0x768>
   12af4:	8804d4ba 	srli	r2,r17,18
   12af8:	12001f44 	addi	r8,r2,125
   12afc:	11c01f04 	addi	r7,r2,124
   12b00:	4209883a 	add	r4,r8,r8
   12b04:	003e5906 	br	1246c <_gp+0xfffec340>
   12b08:	ad400404 	addi	r21,r21,16
   12b0c:	003f1706 	br	1276c <_gp+0xfffec640>
   12b10:	00c01504 	movi	r3,84
   12b14:	18802336 	bltu	r3,r2,12ba4 <_malloc_r+0x7b0>
   12b18:	3804d33a 	srli	r2,r7,12
   12b1c:	11401bc4 	addi	r5,r2,111
   12b20:	10c01b84 	addi	r3,r2,110
   12b24:	294b883a 	add	r5,r5,r5
   12b28:	003f7b06 	br	12918 <_gp+0xfffec7ec>
   12b2c:	9c000217 	ldw	r16,8(r19)
   12b30:	00bfff04 	movi	r2,-4
   12b34:	80c00117 	ldw	r3,4(r16)
   12b38:	1886703a 	and	r3,r3,r2
   12b3c:	003f5306 	br	1288c <_gp+0xfffec760>
   12b40:	3083ffcc 	andi	r2,r6,4095
   12b44:	103f181e 	bne	r2,zero,127a8 <_gp+0xfffec67c>
   12b48:	99000217 	ldw	r4,8(r19)
   12b4c:	b545883a 	add	r2,r22,r21
   12b50:	10800054 	ori	r2,r2,1
   12b54:	20800115 	stw	r2,4(r4)
   12b58:	003f3e06 	br	12854 <_gp+0xfffec728>
   12b5c:	01003f84 	movi	r4,254
   12b60:	02001fc4 	movi	r8,127
   12b64:	01c01f84 	movi	r7,126
   12b68:	003e4006 	br	1246c <_gp+0xfffec340>
   12b6c:	008000b4 	movhi	r2,2
   12b70:	10b84f04 	addi	r2,r2,-7876
   12b74:	15000015 	stw	r20,0(r2)
   12b78:	003f1106 	br	127c0 <_gp+0xfffec694>
   12b7c:	00800044 	movi	r2,1
   12b80:	002b883a 	mov	r21,zero
   12b84:	003f1f06 	br	12804 <_gp+0xfffec6d8>
   12b88:	81400204 	addi	r5,r16,8
   12b8c:	9009883a 	mov	r4,r18
   12b90:	00176040 	call	17604 <_free_r>
   12b94:	008000b4 	movhi	r2,2
   12b98:	10bae204 	addi	r2,r2,-5240
   12b9c:	10c00017 	ldw	r3,0(r2)
   12ba0:	003f2c06 	br	12854 <_gp+0xfffec728>
   12ba4:	00c05504 	movi	r3,340
   12ba8:	18800536 	bltu	r3,r2,12bc0 <_malloc_r+0x7cc>
   12bac:	3804d3fa 	srli	r2,r7,15
   12bb0:	11401e04 	addi	r5,r2,120
   12bb4:	10c01dc4 	addi	r3,r2,119
   12bb8:	294b883a 	add	r5,r5,r5
   12bbc:	003f5606 	br	12918 <_gp+0xfffec7ec>
   12bc0:	00c15504 	movi	r3,1364
   12bc4:	18800536 	bltu	r3,r2,12bdc <_malloc_r+0x7e8>
   12bc8:	3804d4ba 	srli	r2,r7,18
   12bcc:	11401f44 	addi	r5,r2,125
   12bd0:	10c01f04 	addi	r3,r2,124
   12bd4:	294b883a 	add	r5,r5,r5
   12bd8:	003f4f06 	br	12918 <_gp+0xfffec7ec>
   12bdc:	01403f84 	movi	r5,254
   12be0:	00c01f84 	movi	r3,126
   12be4:	003f4c06 	br	12918 <_gp+0xfffec7ec>
   12be8:	98800117 	ldw	r2,4(r19)
   12bec:	003fa006 	br	12a70 <_gp+0xfffec944>
   12bf0:	8808d0fa 	srli	r4,r17,3
   12bf4:	20800044 	addi	r2,r4,1
   12bf8:	1085883a 	add	r2,r2,r2
   12bfc:	003e9006 	br	12640 <_gp+0xfffec514>

00012c00 <memset>:
   12c00:	20c000cc 	andi	r3,r4,3
   12c04:	2005883a 	mov	r2,r4
   12c08:	18004426 	beq	r3,zero,12d1c <memset+0x11c>
   12c0c:	31ffffc4 	addi	r7,r6,-1
   12c10:	30004026 	beq	r6,zero,12d14 <memset+0x114>
   12c14:	2813883a 	mov	r9,r5
   12c18:	200d883a 	mov	r6,r4
   12c1c:	2007883a 	mov	r3,r4
   12c20:	00000406 	br	12c34 <memset+0x34>
   12c24:	3a3fffc4 	addi	r8,r7,-1
   12c28:	31800044 	addi	r6,r6,1
   12c2c:	38003926 	beq	r7,zero,12d14 <memset+0x114>
   12c30:	400f883a 	mov	r7,r8
   12c34:	18c00044 	addi	r3,r3,1
   12c38:	32400005 	stb	r9,0(r6)
   12c3c:	1a0000cc 	andi	r8,r3,3
   12c40:	403ff81e 	bne	r8,zero,12c24 <_gp+0xfffecaf8>
   12c44:	010000c4 	movi	r4,3
   12c48:	21c02d2e 	bgeu	r4,r7,12d00 <memset+0x100>
   12c4c:	29003fcc 	andi	r4,r5,255
   12c50:	200c923a 	slli	r6,r4,8
   12c54:	3108b03a 	or	r4,r6,r4
   12c58:	200c943a 	slli	r6,r4,16
   12c5c:	218cb03a 	or	r6,r4,r6
   12c60:	010003c4 	movi	r4,15
   12c64:	21c0182e 	bgeu	r4,r7,12cc8 <memset+0xc8>
   12c68:	3b3ffc04 	addi	r12,r7,-16
   12c6c:	6018d13a 	srli	r12,r12,4
   12c70:	1a000104 	addi	r8,r3,4
   12c74:	1ac00204 	addi	r11,r3,8
   12c78:	6008913a 	slli	r4,r12,4
   12c7c:	1a800304 	addi	r10,r3,12
   12c80:	1813883a 	mov	r9,r3
   12c84:	21000504 	addi	r4,r4,20
   12c88:	1909883a 	add	r4,r3,r4
   12c8c:	49800015 	stw	r6,0(r9)
   12c90:	41800015 	stw	r6,0(r8)
   12c94:	59800015 	stw	r6,0(r11)
   12c98:	51800015 	stw	r6,0(r10)
   12c9c:	42000404 	addi	r8,r8,16
   12ca0:	4a400404 	addi	r9,r9,16
   12ca4:	5ac00404 	addi	r11,r11,16
   12ca8:	52800404 	addi	r10,r10,16
   12cac:	413ff71e 	bne	r8,r4,12c8c <_gp+0xfffecb60>
   12cb0:	63000044 	addi	r12,r12,1
   12cb4:	6018913a 	slli	r12,r12,4
   12cb8:	39c003cc 	andi	r7,r7,15
   12cbc:	010000c4 	movi	r4,3
   12cc0:	1b07883a 	add	r3,r3,r12
   12cc4:	21c00e2e 	bgeu	r4,r7,12d00 <memset+0x100>
   12cc8:	1813883a 	mov	r9,r3
   12ccc:	3811883a 	mov	r8,r7
   12cd0:	010000c4 	movi	r4,3
   12cd4:	49800015 	stw	r6,0(r9)
   12cd8:	423fff04 	addi	r8,r8,-4
   12cdc:	4a400104 	addi	r9,r9,4
   12ce0:	223ffc36 	bltu	r4,r8,12cd4 <_gp+0xfffecba8>
   12ce4:	393fff04 	addi	r4,r7,-4
   12ce8:	2008d0ba 	srli	r4,r4,2
   12cec:	39c000cc 	andi	r7,r7,3
   12cf0:	21000044 	addi	r4,r4,1
   12cf4:	2109883a 	add	r4,r4,r4
   12cf8:	2109883a 	add	r4,r4,r4
   12cfc:	1907883a 	add	r3,r3,r4
   12d00:	38000526 	beq	r7,zero,12d18 <memset+0x118>
   12d04:	19cf883a 	add	r7,r3,r7
   12d08:	19400005 	stb	r5,0(r3)
   12d0c:	18c00044 	addi	r3,r3,1
   12d10:	38fffd1e 	bne	r7,r3,12d08 <_gp+0xfffecbdc>
   12d14:	f800283a 	ret
   12d18:	f800283a 	ret
   12d1c:	2007883a 	mov	r3,r4
   12d20:	300f883a 	mov	r7,r6
   12d24:	003fc706 	br	12c44 <_gp+0xfffecb18>

00012d28 <_sbrk_r>:
   12d28:	defffd04 	addi	sp,sp,-12
   12d2c:	dc000015 	stw	r16,0(sp)
   12d30:	040000b4 	movhi	r16,2
   12d34:	dc400115 	stw	r17,4(sp)
   12d38:	843acd04 	addi	r16,r16,-5324
   12d3c:	2023883a 	mov	r17,r4
   12d40:	2809883a 	mov	r4,r5
   12d44:	dfc00215 	stw	ra,8(sp)
   12d48:	80000015 	stw	zero,0(r16)
   12d4c:	001cf180 	call	1cf18 <sbrk>
   12d50:	00ffffc4 	movi	r3,-1
   12d54:	10c00526 	beq	r2,r3,12d6c <_sbrk_r+0x44>
   12d58:	dfc00217 	ldw	ra,8(sp)
   12d5c:	dc400117 	ldw	r17,4(sp)
   12d60:	dc000017 	ldw	r16,0(sp)
   12d64:	dec00304 	addi	sp,sp,12
   12d68:	f800283a 	ret
   12d6c:	80c00017 	ldw	r3,0(r16)
   12d70:	183ff926 	beq	r3,zero,12d58 <_gp+0xfffecc2c>
   12d74:	88c00015 	stw	r3,0(r17)
   12d78:	003ff706 	br	12d58 <_gp+0xfffecc2c>

00012d7c <_sprintf_r>:
   12d7c:	deffe404 	addi	sp,sp,-112
   12d80:	2807883a 	mov	r3,r5
   12d84:	dfc01a15 	stw	ra,104(sp)
   12d88:	d9c01b15 	stw	r7,108(sp)
   12d8c:	00a00034 	movhi	r2,32768
   12d90:	10bfffc4 	addi	r2,r2,-1
   12d94:	02008204 	movi	r8,520
   12d98:	d8800215 	stw	r2,8(sp)
   12d9c:	d8800515 	stw	r2,20(sp)
   12da0:	d9c01b04 	addi	r7,sp,108
   12da4:	d80b883a 	mov	r5,sp
   12da8:	00bfffc4 	movi	r2,-1
   12dac:	d8c00015 	stw	r3,0(sp)
   12db0:	d8c00415 	stw	r3,16(sp)
   12db4:	da00030d 	sth	r8,12(sp)
   12db8:	d880038d 	sth	r2,14(sp)
   12dbc:	00139740 	call	13974 <___svfprintf_internal_r>
   12dc0:	d8c00017 	ldw	r3,0(sp)
   12dc4:	18000005 	stb	zero,0(r3)
   12dc8:	dfc01a17 	ldw	ra,104(sp)
   12dcc:	dec01c04 	addi	sp,sp,112
   12dd0:	f800283a 	ret

00012dd4 <sprintf>:
   12dd4:	deffe304 	addi	sp,sp,-116
   12dd8:	2007883a 	mov	r3,r4
   12ddc:	dfc01a15 	stw	ra,104(sp)
   12de0:	d9801b15 	stw	r6,108(sp)
   12de4:	d9c01c15 	stw	r7,112(sp)
   12de8:	010000b4 	movhi	r4,2
   12dec:	21384e04 	addi	r4,r4,-7880
   12df0:	21000017 	ldw	r4,0(r4)
   12df4:	00a00034 	movhi	r2,32768
   12df8:	10bfffc4 	addi	r2,r2,-1
   12dfc:	280d883a 	mov	r6,r5
   12e00:	02008204 	movi	r8,520
   12e04:	d8800215 	stw	r2,8(sp)
   12e08:	d8800515 	stw	r2,20(sp)
   12e0c:	d9c01b04 	addi	r7,sp,108
   12e10:	d80b883a 	mov	r5,sp
   12e14:	00bfffc4 	movi	r2,-1
   12e18:	d8c00015 	stw	r3,0(sp)
   12e1c:	d8c00415 	stw	r3,16(sp)
   12e20:	da00030d 	sth	r8,12(sp)
   12e24:	d880038d 	sth	r2,14(sp)
   12e28:	00139740 	call	13974 <___svfprintf_internal_r>
   12e2c:	d8c00017 	ldw	r3,0(sp)
   12e30:	18000005 	stb	zero,0(r3)
   12e34:	dfc01a17 	ldw	ra,104(sp)
   12e38:	dec01d04 	addi	sp,sp,116
   12e3c:	f800283a 	ret

00012e40 <strchr>:
   12e40:	2ac03fcc 	andi	r11,r5,255
   12e44:	2813883a 	mov	r9,r5
   12e48:	208000cc 	andi	r2,r4,3
   12e4c:	58003726 	beq	r11,zero,12f2c <strchr+0xec>
   12e50:	10000b26 	beq	r2,zero,12e80 <strchr+0x40>
   12e54:	20800003 	ldbu	r2,0(r4)
   12e58:	10003226 	beq	r2,zero,12f24 <strchr+0xe4>
   12e5c:	28c03fcc 	andi	r3,r5,255
   12e60:	5880041e 	bne	r11,r2,12e74 <strchr+0x34>
   12e64:	00004d06 	br	12f9c <strchr+0x15c>
   12e68:	20800003 	ldbu	r2,0(r4)
   12e6c:	10002d26 	beq	r2,zero,12f24 <strchr+0xe4>
   12e70:	18804a26 	beq	r3,r2,12f9c <strchr+0x15c>
   12e74:	21000044 	addi	r4,r4,1
   12e78:	208000cc 	andi	r2,r4,3
   12e7c:	103ffa1e 	bne	r2,zero,12e68 <_gp+0xfffecd3c>
   12e80:	29403fcc 	andi	r5,r5,255
   12e84:	2814923a 	slli	r10,r5,8
   12e88:	20800017 	ldw	r2,0(r4)
   12e8c:	01bfbff4 	movhi	r6,65279
   12e90:	2a8ab03a 	or	r5,r5,r10
   12e94:	2814943a 	slli	r10,r5,16
   12e98:	31bfbfc4 	addi	r6,r6,-257
   12e9c:	119b883a 	add	r13,r2,r6
   12ea0:	5154b03a 	or	r10,r10,r5
   12ea4:	008e303a 	nor	r7,zero,r2
   12ea8:	5084f03a 	xor	r2,r10,r2
   12eac:	1191883a 	add	r8,r2,r6
   12eb0:	0086303a 	nor	r3,zero,r2
   12eb4:	03202074 	movhi	r12,32897
   12eb8:	69ca703a 	and	r5,r13,r7
   12ebc:	40c4703a 	and	r2,r8,r3
   12ec0:	63202004 	addi	r12,r12,-32640
   12ec4:	2884b03a 	or	r2,r5,r2
   12ec8:	1304703a 	and	r2,r2,r12
   12ecc:	10000c1e 	bne	r2,zero,12f00 <strchr+0xc0>
   12ed0:	21000104 	addi	r4,r4,4
   12ed4:	20c00017 	ldw	r3,0(r4)
   12ed8:	50c4f03a 	xor	r2,r10,r3
   12edc:	1991883a 	add	r8,r3,r6
   12ee0:	00ca303a 	nor	r5,zero,r3
   12ee4:	118f883a 	add	r7,r2,r6
   12ee8:	0086303a 	nor	r3,zero,r2
   12eec:	414a703a 	and	r5,r8,r5
   12ef0:	38c4703a 	and	r2,r7,r3
   12ef4:	2884b03a 	or	r2,r5,r2
   12ef8:	1304703a 	and	r2,r2,r12
   12efc:	103ff426 	beq	r2,zero,12ed0 <_gp+0xfffecda4>
   12f00:	20800003 	ldbu	r2,0(r4)
   12f04:	10000726 	beq	r2,zero,12f24 <strchr+0xe4>
   12f08:	58802426 	beq	r11,r2,12f9c <strchr+0x15c>
   12f0c:	48c03fcc 	andi	r3,r9,255
   12f10:	00000106 	br	12f18 <strchr+0xd8>
   12f14:	18802126 	beq	r3,r2,12f9c <strchr+0x15c>
   12f18:	21000044 	addi	r4,r4,1
   12f1c:	20800003 	ldbu	r2,0(r4)
   12f20:	103ffc1e 	bne	r2,zero,12f14 <_gp+0xfffecde8>
   12f24:	0005883a 	mov	r2,zero
   12f28:	f800283a 	ret
   12f2c:	10000526 	beq	r2,zero,12f44 <strchr+0x104>
   12f30:	20800003 	ldbu	r2,0(r4)
   12f34:	10001926 	beq	r2,zero,12f9c <strchr+0x15c>
   12f38:	21000044 	addi	r4,r4,1
   12f3c:	208000cc 	andi	r2,r4,3
   12f40:	103ffb1e 	bne	r2,zero,12f30 <_gp+0xfffece04>
   12f44:	20800017 	ldw	r2,0(r4)
   12f48:	01bfbff4 	movhi	r6,65279
   12f4c:	31bfbfc4 	addi	r6,r6,-257
   12f50:	0086303a 	nor	r3,zero,r2
   12f54:	01602074 	movhi	r5,32897
   12f58:	1185883a 	add	r2,r2,r6
   12f5c:	29602004 	addi	r5,r5,-32640
   12f60:	10c4703a 	and	r2,r2,r3
   12f64:	1144703a 	and	r2,r2,r5
   12f68:	1000071e 	bne	r2,zero,12f88 <strchr+0x148>
   12f6c:	21000104 	addi	r4,r4,4
   12f70:	20800017 	ldw	r2,0(r4)
   12f74:	1187883a 	add	r3,r2,r6
   12f78:	0084303a 	nor	r2,zero,r2
   12f7c:	1884703a 	and	r2,r3,r2
   12f80:	1144703a 	and	r2,r2,r5
   12f84:	103ff926 	beq	r2,zero,12f6c <_gp+0xfffece40>
   12f88:	20800003 	ldbu	r2,0(r4)
   12f8c:	10000326 	beq	r2,zero,12f9c <strchr+0x15c>
   12f90:	21000044 	addi	r4,r4,1
   12f94:	20800003 	ldbu	r2,0(r4)
   12f98:	103ffd1e 	bne	r2,zero,12f90 <_gp+0xfffece64>
   12f9c:	2005883a 	mov	r2,r4
   12fa0:	f800283a 	ret

00012fa4 <strcmp>:
   12fa4:	2144b03a 	or	r2,r4,r5
   12fa8:	108000cc 	andi	r2,r2,3
   12fac:	1000171e 	bne	r2,zero,1300c <strcmp+0x68>
   12fb0:	20800017 	ldw	r2,0(r4)
   12fb4:	28c00017 	ldw	r3,0(r5)
   12fb8:	10c0141e 	bne	r2,r3,1300c <strcmp+0x68>
   12fbc:	027fbff4 	movhi	r9,65279
   12fc0:	4a7fbfc4 	addi	r9,r9,-257
   12fc4:	0086303a 	nor	r3,zero,r2
   12fc8:	02202074 	movhi	r8,32897
   12fcc:	1245883a 	add	r2,r2,r9
   12fd0:	42202004 	addi	r8,r8,-32640
   12fd4:	10c4703a 	and	r2,r2,r3
   12fd8:	1204703a 	and	r2,r2,r8
   12fdc:	10000226 	beq	r2,zero,12fe8 <strcmp+0x44>
   12fe0:	00002306 	br	13070 <strcmp+0xcc>
   12fe4:	1000221e 	bne	r2,zero,13070 <strcmp+0xcc>
   12fe8:	21000104 	addi	r4,r4,4
   12fec:	20c00017 	ldw	r3,0(r4)
   12ff0:	29400104 	addi	r5,r5,4
   12ff4:	29800017 	ldw	r6,0(r5)
   12ff8:	1a4f883a 	add	r7,r3,r9
   12ffc:	00c4303a 	nor	r2,zero,r3
   13000:	3884703a 	and	r2,r7,r2
   13004:	1204703a 	and	r2,r2,r8
   13008:	19bff626 	beq	r3,r6,12fe4 <_gp+0xfffeceb8>
   1300c:	20800003 	ldbu	r2,0(r4)
   13010:	10c03fcc 	andi	r3,r2,255
   13014:	18c0201c 	xori	r3,r3,128
   13018:	18ffe004 	addi	r3,r3,-128
   1301c:	18000c26 	beq	r3,zero,13050 <strcmp+0xac>
   13020:	29800007 	ldb	r6,0(r5)
   13024:	19800326 	beq	r3,r6,13034 <strcmp+0x90>
   13028:	00001306 	br	13078 <strcmp+0xd4>
   1302c:	29800007 	ldb	r6,0(r5)
   13030:	11800b1e 	bne	r2,r6,13060 <strcmp+0xbc>
   13034:	21000044 	addi	r4,r4,1
   13038:	20c00003 	ldbu	r3,0(r4)
   1303c:	29400044 	addi	r5,r5,1
   13040:	18803fcc 	andi	r2,r3,255
   13044:	1080201c 	xori	r2,r2,128
   13048:	10bfe004 	addi	r2,r2,-128
   1304c:	103ff71e 	bne	r2,zero,1302c <_gp+0xfffecf00>
   13050:	0007883a 	mov	r3,zero
   13054:	28800003 	ldbu	r2,0(r5)
   13058:	1885c83a 	sub	r2,r3,r2
   1305c:	f800283a 	ret
   13060:	28800003 	ldbu	r2,0(r5)
   13064:	18c03fcc 	andi	r3,r3,255
   13068:	1885c83a 	sub	r2,r3,r2
   1306c:	f800283a 	ret
   13070:	0005883a 	mov	r2,zero
   13074:	f800283a 	ret
   13078:	10c03fcc 	andi	r3,r2,255
   1307c:	003ff506 	br	13054 <_gp+0xfffecf28>

00013080 <strcpy>:
   13080:	2906b03a 	or	r3,r5,r4
   13084:	18c000cc 	andi	r3,r3,3
   13088:	2005883a 	mov	r2,r4
   1308c:	1800161e 	bne	r3,zero,130e8 <strcpy+0x68>
   13090:	29c00017 	ldw	r7,0(r5)
   13094:	02ffbff4 	movhi	r11,65279
   13098:	5affbfc4 	addi	r11,r11,-257
   1309c:	02a02074 	movhi	r10,32897
   130a0:	01c6303a 	nor	r3,zero,r7
   130a4:	3ac9883a 	add	r4,r7,r11
   130a8:	52a02004 	addi	r10,r10,-32640
   130ac:	20c6703a 	and	r3,r4,r3
   130b0:	1a86703a 	and	r3,r3,r10
   130b4:	18000c1e 	bne	r3,zero,130e8 <strcpy+0x68>
   130b8:	1011883a 	mov	r8,r2
   130bc:	41c00015 	stw	r7,0(r8)
   130c0:	29400104 	addi	r5,r5,4
   130c4:	29c00017 	ldw	r7,0(r5)
   130c8:	41800104 	addi	r6,r8,4
   130cc:	3011883a 	mov	r8,r6
   130d0:	3ad3883a 	add	r9,r7,r11
   130d4:	01c6303a 	nor	r3,zero,r7
   130d8:	48c6703a 	and	r3,r9,r3
   130dc:	1a86703a 	and	r3,r3,r10
   130e0:	183ff626 	beq	r3,zero,130bc <_gp+0xfffecf90>
   130e4:	00000106 	br	130ec <strcpy+0x6c>
   130e8:	100d883a 	mov	r6,r2
   130ec:	28c00003 	ldbu	r3,0(r5)
   130f0:	31800044 	addi	r6,r6,1
   130f4:	29400044 	addi	r5,r5,1
   130f8:	30ffffc5 	stb	r3,-1(r6)
   130fc:	18c03fcc 	andi	r3,r3,255
   13100:	18c0201c 	xori	r3,r3,128
   13104:	18ffe004 	addi	r3,r3,-128
   13108:	183ff81e 	bne	r3,zero,130ec <_gp+0xfffecfc0>
   1310c:	f800283a 	ret

00013110 <critical_factorization>:
   13110:	02c00044 	movi	r11,1
   13114:	5811883a 	mov	r8,r11
   13118:	0013883a 	mov	r9,zero
   1311c:	00bfffc4 	movi	r2,-1
   13120:	2087883a 	add	r3,r4,r2
   13124:	1a0f883a 	add	r7,r3,r8
   13128:	4a07883a 	add	r3,r9,r8
   1312c:	20d5883a 	add	r10,r4,r3
   13130:	1940102e 	bgeu	r3,r5,13174 <critical_factorization+0x64>
   13134:	52800003 	ldbu	r10,0(r10)
   13138:	39c00003 	ldbu	r7,0(r7)
   1313c:	51c0042e 	bgeu	r10,r7,13150 <critical_factorization+0x40>
   13140:	1897c83a 	sub	r11,r3,r2
   13144:	1813883a 	mov	r9,r3
   13148:	02000044 	movi	r8,1
   1314c:	003ff406 	br	13120 <_gp+0xfffecff4>
   13150:	51c00526 	beq	r10,r7,13168 <critical_factorization+0x58>
   13154:	02c00044 	movi	r11,1
   13158:	4805883a 	mov	r2,r9
   1315c:	5811883a 	mov	r8,r11
   13160:	4ad3883a 	add	r9,r9,r11
   13164:	003fee06 	br	13120 <_gp+0xfffecff4>
   13168:	42c02226 	beq	r8,r11,131f4 <critical_factorization+0xe4>
   1316c:	42000044 	addi	r8,r8,1
   13170:	003feb06 	br	13120 <_gp+0xfffecff4>
   13174:	03000044 	movi	r12,1
   13178:	32c00015 	stw	r11,0(r6)
   1317c:	6011883a 	mov	r8,r12
   13180:	0013883a 	mov	r9,zero
   13184:	02ffffc4 	movi	r11,-1
   13188:	22c7883a 	add	r3,r4,r11
   1318c:	1a0f883a 	add	r7,r3,r8
   13190:	4a07883a 	add	r3,r9,r8
   13194:	20d5883a 	add	r10,r4,r3
   13198:	1940102e 	bgeu	r3,r5,131dc <critical_factorization+0xcc>
   1319c:	52800003 	ldbu	r10,0(r10)
   131a0:	39c00003 	ldbu	r7,0(r7)
   131a4:	3a80042e 	bgeu	r7,r10,131b8 <critical_factorization+0xa8>
   131a8:	1ad9c83a 	sub	r12,r3,r11
   131ac:	1813883a 	mov	r9,r3
   131b0:	02000044 	movi	r8,1
   131b4:	003ff406 	br	13188 <_gp+0xfffed05c>
   131b8:	51c00526 	beq	r10,r7,131d0 <critical_factorization+0xc0>
   131bc:	03000044 	movi	r12,1
   131c0:	4817883a 	mov	r11,r9
   131c4:	6011883a 	mov	r8,r12
   131c8:	4b13883a 	add	r9,r9,r12
   131cc:	003fee06 	br	13188 <_gp+0xfffed05c>
   131d0:	43000c26 	beq	r8,r12,13204 <critical_factorization+0xf4>
   131d4:	42000044 	addi	r8,r8,1
   131d8:	003feb06 	br	13188 <_gp+0xfffed05c>
   131dc:	5ac00044 	addi	r11,r11,1
   131e0:	10800044 	addi	r2,r2,1
   131e4:	58800236 	bltu	r11,r2,131f0 <critical_factorization+0xe0>
   131e8:	33000015 	stw	r12,0(r6)
   131ec:	5805883a 	mov	r2,r11
   131f0:	f800283a 	ret
   131f4:	4017883a 	mov	r11,r8
   131f8:	1813883a 	mov	r9,r3
   131fc:	02000044 	movi	r8,1
   13200:	003fc706 	br	13120 <_gp+0xfffecff4>
   13204:	4019883a 	mov	r12,r8
   13208:	1813883a 	mov	r9,r3
   1320c:	02000044 	movi	r8,1
   13210:	003fdd06 	br	13188 <_gp+0xfffed05c>

00013214 <two_way_long_needle>:
   13214:	defef104 	addi	sp,sp,-1084
   13218:	dc810715 	stw	r18,1052(sp)
   1321c:	dc410615 	stw	r17,1048(sp)
   13220:	dc810004 	addi	r18,sp,1024
   13224:	3023883a 	mov	r17,r6
   13228:	2807883a 	mov	r3,r5
   1322c:	ddc10c15 	stw	r23,1072(sp)
   13230:	900d883a 	mov	r6,r18
   13234:	202f883a 	mov	r23,r4
   13238:	380b883a 	mov	r5,r7
   1323c:	8809883a 	mov	r4,r17
   13240:	dd810b15 	stw	r22,1068(sp)
   13244:	dc010515 	stw	r16,1044(sp)
   13248:	d8c10415 	stw	r3,1040(sp)
   1324c:	dfc10e15 	stw	ra,1080(sp)
   13250:	df010d15 	stw	fp,1076(sp)
   13254:	dd410a15 	stw	r21,1064(sp)
   13258:	dd010915 	stw	r20,1060(sp)
   1325c:	dcc10815 	stw	r19,1056(sp)
   13260:	382d883a 	mov	r22,r7
   13264:	00131100 	call	13110 <critical_factorization>
   13268:	d8c10417 	ldw	r3,1040(sp)
   1326c:	1021883a 	mov	r16,r2
   13270:	d805883a 	mov	r2,sp
   13274:	15800015 	stw	r22,0(r2)
   13278:	10800104 	addi	r2,r2,4
   1327c:	90bffd1e 	bne	r18,r2,13274 <_gp+0xfffed148>
   13280:	b0000b26 	beq	r22,zero,132b0 <two_way_long_needle+0x9c>
   13284:	b17fffc4 	addi	r5,r22,-1
   13288:	8809883a 	mov	r4,r17
   1328c:	8d8d883a 	add	r6,r17,r22
   13290:	20800003 	ldbu	r2,0(r4)
   13294:	21000044 	addi	r4,r4,1
   13298:	1085883a 	add	r2,r2,r2
   1329c:	1085883a 	add	r2,r2,r2
   132a0:	d885883a 	add	r2,sp,r2
   132a4:	11400015 	stw	r5,0(r2)
   132a8:	297fffc4 	addi	r5,r5,-1
   132ac:	21bff81e 	bne	r4,r6,13290 <_gp+0xfffed164>
   132b0:	d9410017 	ldw	r5,1024(sp)
   132b4:	800d883a 	mov	r6,r16
   132b8:	8809883a 	mov	r4,r17
   132bc:	894b883a 	add	r5,r17,r5
   132c0:	d8c10415 	stw	r3,1040(sp)
   132c4:	0017ad40 	call	17ad4 <memcmp>
   132c8:	d8c10417 	ldw	r3,1040(sp)
   132cc:	10006a1e 	bne	r2,zero,13478 <two_way_long_needle+0x264>
   132d0:	84bfffc4 	addi	r18,r16,-1
   132d4:	8c85883a 	add	r2,r17,r18
   132d8:	d8810215 	stw	r2,1032(sp)
   132dc:	00800044 	movi	r2,1
   132e0:	813fff84 	addi	r4,r16,-2
   132e4:	1405c83a 	sub	r2,r2,r16
   132e8:	0029883a 	mov	r20,zero
   132ec:	0039883a 	mov	fp,zero
   132f0:	b57fffc4 	addi	r21,r22,-1
   132f4:	d9010115 	stw	r4,1028(sp)
   132f8:	d8810315 	stw	r2,1036(sp)
   132fc:	00000706 	br	1331c <two_way_long_needle+0x108>
   13300:	a0000326 	beq	r20,zero,13310 <two_way_long_needle+0xfc>
   13304:	d8c10017 	ldw	r3,1024(sp)
   13308:	10c0012e 	bgeu	r2,r3,13310 <two_way_long_needle+0xfc>
   1330c:	b0c5c83a 	sub	r2,r22,r3
   13310:	e0b9883a 	add	fp,fp,r2
   13314:	0029883a 	mov	r20,zero
   13318:	9807883a 	mov	r3,r19
   1331c:	e5a7883a 	add	r19,fp,r22
   13320:	98cdc83a 	sub	r6,r19,r3
   13324:	000b883a 	mov	r5,zero
   13328:	b8c9883a 	add	r4,r23,r3
   1332c:	00179f00 	call	179f0 <memchr>
   13330:	1000441e 	bne	r2,zero,13444 <two_way_long_needle+0x230>
   13334:	98004326 	beq	r19,zero,13444 <two_way_long_needle+0x230>
   13338:	bcc5883a 	add	r2,r23,r19
   1333c:	10bfffc3 	ldbu	r2,-1(r2)
   13340:	1085883a 	add	r2,r2,r2
   13344:	1085883a 	add	r2,r2,r2
   13348:	d885883a 	add	r2,sp,r2
   1334c:	10800017 	ldw	r2,0(r2)
   13350:	103feb1e 	bne	r2,zero,13300 <_gp+0xfffed1d4>
   13354:	a015883a 	mov	r10,r20
   13358:	a400012e 	bgeu	r20,r16,13360 <two_way_long_needle+0x14c>
   1335c:	8015883a 	mov	r10,r16
   13360:	5540152e 	bgeu	r10,r21,133b8 <two_way_long_needle+0x1a4>
   13364:	bf05883a 	add	r2,r23,fp
   13368:	8a87883a 	add	r3,r17,r10
   1336c:	1285883a 	add	r2,r2,r10
   13370:	18c00003 	ldbu	r3,0(r3)
   13374:	10800003 	ldbu	r2,0(r2)
   13378:	18802d1e 	bne	r3,r2,13430 <two_way_long_needle+0x21c>
   1337c:	e1400044 	addi	r5,fp,1
   13380:	50800044 	addi	r2,r10,1
   13384:	2a8b883a 	add	r5,r5,r10
   13388:	888d883a 	add	r6,r17,r2
   1338c:	b94b883a 	add	r5,r23,r5
   13390:	00000706 	br	133b0 <two_way_long_needle+0x19c>
   13394:	31000003 	ldbu	r4,0(r6)
   13398:	28c00003 	ldbu	r3,0(r5)
   1339c:	31800044 	addi	r6,r6,1
   133a0:	21003fcc 	andi	r4,r4,255
   133a4:	29400044 	addi	r5,r5,1
   133a8:	20c0211e 	bne	r4,r3,13430 <two_way_long_needle+0x21c>
   133ac:	10800044 	addi	r2,r2,1
   133b0:	1015883a 	mov	r10,r2
   133b4:	157ff736 	bltu	r2,r21,13394 <_gp+0xfffed268>
   133b8:	900d883a 	mov	r6,r18
   133bc:	a4007d2e 	bgeu	r20,r16,135b4 <two_way_long_needle+0x3a0>
   133c0:	d9410217 	ldw	r5,1032(sp)
   133c4:	bf05883a 	add	r2,r23,fp
   133c8:	1485883a 	add	r2,r2,r18
   133cc:	28c00003 	ldbu	r3,0(r5)
   133d0:	10800003 	ldbu	r2,0(r2)
   133d4:	1880771e 	bne	r3,r2,135b4 <two_way_long_needle+0x3a0>
   133d8:	d8c10117 	ldw	r3,1028(sp)
   133dc:	a2ffffc4 	addi	r11,r20,-1
   133e0:	8ad7883a 	add	r11,r17,r11
   133e4:	e0cb883a 	add	r5,fp,r3
   133e8:	88c5883a 	add	r2,r17,r3
   133ec:	b94b883a 	add	r5,r23,r5
   133f0:	00000706 	br	13410 <two_way_long_needle+0x1fc>
   133f4:	11000003 	ldbu	r4,0(r2)
   133f8:	28c00003 	ldbu	r3,0(r5)
   133fc:	10bfffc4 	addi	r2,r2,-1
   13400:	21003fcc 	andi	r4,r4,255
   13404:	297fffc4 	addi	r5,r5,-1
   13408:	20c0031e 	bne	r4,r3,13418 <two_way_long_needle+0x204>
   1340c:	500d883a 	mov	r6,r10
   13410:	32bfffc4 	addi	r10,r6,-1
   13414:	58bff71e 	bne	r11,r2,133f4 <_gp+0xfffed2c8>
   13418:	a2400044 	addi	r9,r20,1
   1341c:	32406736 	bltu	r6,r9,135bc <two_way_long_needle+0x3a8>
   13420:	da410017 	ldw	r9,1024(sp)
   13424:	e279883a 	add	fp,fp,r9
   13428:	b269c83a 	sub	r20,r22,r9
   1342c:	003fba06 	br	13318 <_gp+0xfffed1ec>
   13430:	d8c10317 	ldw	r3,1036(sp)
   13434:	0029883a 	mov	r20,zero
   13438:	1f39883a 	add	fp,r3,fp
   1343c:	e2b9883a 	add	fp,fp,r10
   13440:	003fb506 	br	13318 <_gp+0xfffed1ec>
   13444:	0005883a 	mov	r2,zero
   13448:	dfc10e17 	ldw	ra,1080(sp)
   1344c:	df010d17 	ldw	fp,1076(sp)
   13450:	ddc10c17 	ldw	r23,1072(sp)
   13454:	dd810b17 	ldw	r22,1068(sp)
   13458:	dd410a17 	ldw	r21,1064(sp)
   1345c:	dd010917 	ldw	r20,1060(sp)
   13460:	dcc10817 	ldw	r19,1056(sp)
   13464:	dc810717 	ldw	r18,1052(sp)
   13468:	dc410617 	ldw	r17,1048(sp)
   1346c:	dc010517 	ldw	r16,1044(sp)
   13470:	dec10f04 	addi	sp,sp,1084
   13474:	f800283a 	ret
   13478:	b405c83a 	sub	r2,r22,r16
   1347c:	14004b36 	bltu	r2,r16,135ac <two_way_long_needle+0x398>
   13480:	10800044 	addi	r2,r2,1
   13484:	84bfffc4 	addi	r18,r16,-1
   13488:	d8810015 	stw	r2,1024(sp)
   1348c:	00800044 	movi	r2,1
   13490:	8c89883a 	add	r4,r17,r18
   13494:	817fff84 	addi	r5,r16,-2
   13498:	1405c83a 	sub	r2,r2,r16
   1349c:	0029883a 	mov	r20,zero
   134a0:	b73fffc4 	addi	fp,r22,-1
   134a4:	d9010215 	stw	r4,1032(sp)
   134a8:	d9410115 	stw	r5,1028(sp)
   134ac:	8d7fffc4 	addi	r21,r17,-1
   134b0:	d8810315 	stw	r2,1036(sp)
   134b4:	a5a7883a 	add	r19,r20,r22
   134b8:	98cdc83a 	sub	r6,r19,r3
   134bc:	000b883a 	mov	r5,zero
   134c0:	b8c9883a 	add	r4,r23,r3
   134c4:	00179f00 	call	179f0 <memchr>
   134c8:	103fde1e 	bne	r2,zero,13444 <_gp+0xfffed318>
   134cc:	983fdd26 	beq	r19,zero,13444 <_gp+0xfffed318>
   134d0:	bcc5883a 	add	r2,r23,r19
   134d4:	10bfffc3 	ldbu	r2,-1(r2)
   134d8:	1085883a 	add	r2,r2,r2
   134dc:	1085883a 	add	r2,r2,r2
   134e0:	d885883a 	add	r2,sp,r2
   134e4:	10800017 	ldw	r2,0(r2)
   134e8:	1000291e 	bne	r2,zero,13590 <two_way_long_needle+0x37c>
   134ec:	bd05883a 	add	r2,r23,r20
   134f0:	8700142e 	bgeu	r16,fp,13544 <two_way_long_needle+0x330>
   134f4:	8c07883a 	add	r3,r17,r16
   134f8:	140b883a 	add	r5,r2,r16
   134fc:	19000003 	ldbu	r4,0(r3)
   13500:	28c00003 	ldbu	r3,0(r5)
   13504:	800d883a 	mov	r6,r16
   13508:	20c0241e 	bne	r4,r3,1359c <two_way_long_needle+0x388>
   1350c:	81400044 	addi	r5,r16,1
   13510:	a155883a 	add	r10,r20,r5
   13514:	ba95883a 	add	r10,r23,r10
   13518:	894b883a 	add	r5,r17,r5
   1351c:	800d883a 	mov	r6,r16
   13520:	00000606 	br	1353c <two_way_long_needle+0x328>
   13524:	29000003 	ldbu	r4,0(r5)
   13528:	50c00003 	ldbu	r3,0(r10)
   1352c:	29400044 	addi	r5,r5,1
   13530:	21003fcc 	andi	r4,r4,255
   13534:	52800044 	addi	r10,r10,1
   13538:	20c0181e 	bne	r4,r3,1359c <two_way_long_needle+0x388>
   1353c:	31800044 	addi	r6,r6,1
   13540:	373ff836 	bltu	r6,fp,13524 <_gp+0xfffed3f8>
   13544:	00ffffc4 	movi	r3,-1
   13548:	90ffbf26 	beq	r18,r3,13448 <_gp+0xfffed31c>
   1354c:	d9410217 	ldw	r5,1032(sp)
   13550:	1487883a 	add	r3,r2,r18
   13554:	18c00003 	ldbu	r3,0(r3)
   13558:	29000003 	ldbu	r4,0(r5)
   1355c:	20c00b1e 	bne	r4,r3,1358c <two_way_long_needle+0x378>
   13560:	d8c10117 	ldw	r3,1028(sp)
   13564:	a0cd883a 	add	r6,r20,r3
   13568:	b98d883a 	add	r6,r23,r6
   1356c:	88c7883a 	add	r3,r17,r3
   13570:	1d7fb526 	beq	r3,r21,13448 <_gp+0xfffed31c>
   13574:	19400003 	ldbu	r5,0(r3)
   13578:	31000003 	ldbu	r4,0(r6)
   1357c:	18ffffc4 	addi	r3,r3,-1
   13580:	29403fcc 	andi	r5,r5,255
   13584:	31bfffc4 	addi	r6,r6,-1
   13588:	293ff926 	beq	r5,r4,13570 <_gp+0xfffed444>
   1358c:	d8810017 	ldw	r2,1024(sp)
   13590:	a0a9883a 	add	r20,r20,r2
   13594:	9807883a 	mov	r3,r19
   13598:	003fc606 	br	134b4 <_gp+0xfffed388>
   1359c:	d8c10317 	ldw	r3,1036(sp)
   135a0:	1d11883a 	add	r8,r3,r20
   135a4:	41a9883a 	add	r20,r8,r6
   135a8:	003ffa06 	br	13594 <_gp+0xfffed468>
   135ac:	8005883a 	mov	r2,r16
   135b0:	003fb306 	br	13480 <_gp+0xfffed354>
   135b4:	800d883a 	mov	r6,r16
   135b8:	003f9706 	br	13418 <_gp+0xfffed2ec>
   135bc:	bf05883a 	add	r2,r23,fp
   135c0:	003fa106 	br	13448 <_gp+0xfffed31c>

000135c4 <strstr>:
   135c4:	21800007 	ldb	r6,0(r4)
   135c8:	30009226 	beq	r6,zero,13814 <strstr+0x250>
   135cc:	28c00007 	ldb	r3,0(r5)
   135d0:	18000f26 	beq	r3,zero,13610 <strstr+0x4c>
   135d4:	280f883a 	mov	r7,r5
   135d8:	2011883a 	mov	r8,r4
   135dc:	02400044 	movi	r9,1
   135e0:	00000206 	br	135ec <strstr+0x28>
   135e4:	38c00007 	ldb	r3,0(r7)
   135e8:	18000826 	beq	r3,zero,1360c <strstr+0x48>
   135ec:	42000044 	addi	r8,r8,1
   135f0:	1987003a 	cmpeq	r3,r3,r6
   135f4:	41800007 	ldb	r6,0(r8)
   135f8:	39c00044 	addi	r7,r7,1
   135fc:	48d2703a 	and	r9,r9,r3
   13600:	303ff81e 	bne	r6,zero,135e4 <_gp+0xfffed4b8>
   13604:	38800007 	ldb	r2,0(r7)
   13608:	1000841e 	bne	r2,zero,1381c <strstr+0x258>
   1360c:	48000226 	beq	r9,zero,13618 <strstr+0x54>
   13610:	2005883a 	mov	r2,r4
   13614:	f800283a 	ret
   13618:	defff104 	addi	sp,sp,-60
   1361c:	ddc00c15 	stw	r23,48(sp)
   13620:	dd800b15 	stw	r22,44(sp)
   13624:	dd400a15 	stw	r21,40(sp)
   13628:	dc000515 	stw	r16,20(sp)
   1362c:	dfc00e15 	stw	ra,56(sp)
   13630:	df000d15 	stw	fp,52(sp)
   13634:	dd000915 	stw	r20,36(sp)
   13638:	dcc00815 	stw	r19,32(sp)
   1363c:	dc800715 	stw	r18,28(sp)
   13640:	dc400615 	stw	r17,24(sp)
   13644:	282d883a 	mov	r22,r5
   13648:	29400007 	ldb	r5,0(r5)
   1364c:	202b883a 	mov	r21,r4
   13650:	21000044 	addi	r4,r4,1
   13654:	3da1c83a 	sub	r16,r7,r22
   13658:	0012e400 	call	12e40 <strchr>
   1365c:	102f883a 	mov	r23,r2
   13660:	10007526 	beq	r2,zero,13838 <strstr+0x274>
   13664:	00c00044 	movi	r3,1
   13668:	80c00a26 	beq	r16,r3,13694 <strstr+0xd0>
   1366c:	ac09883a 	add	r4,r21,r16
   13670:	20800136 	bltu	r4,r2,13678 <strstr+0xb4>
   13674:	2087c83a 	sub	r3,r4,r2
   13678:	008007c4 	movi	r2,31
   1367c:	1400112e 	bgeu	r2,r16,136c4 <strstr+0x100>
   13680:	800f883a 	mov	r7,r16
   13684:	b00d883a 	mov	r6,r22
   13688:	180b883a 	mov	r5,r3
   1368c:	b809883a 	mov	r4,r23
   13690:	00132140 	call	13214 <two_way_long_needle>
   13694:	dfc00e17 	ldw	ra,56(sp)
   13698:	df000d17 	ldw	fp,52(sp)
   1369c:	ddc00c17 	ldw	r23,48(sp)
   136a0:	dd800b17 	ldw	r22,44(sp)
   136a4:	dd400a17 	ldw	r21,40(sp)
   136a8:	dd000917 	ldw	r20,36(sp)
   136ac:	dcc00817 	ldw	r19,32(sp)
   136b0:	dc800717 	ldw	r18,28(sp)
   136b4:	dc400617 	ldw	r17,24(sp)
   136b8:	dc000517 	ldw	r16,20(sp)
   136bc:	dec00f04 	addi	sp,sp,60
   136c0:	f800283a 	ret
   136c4:	d80d883a 	mov	r6,sp
   136c8:	800b883a 	mov	r5,r16
   136cc:	b009883a 	mov	r4,r22
   136d0:	d8c00415 	stw	r3,16(sp)
   136d4:	00131100 	call	13110 <critical_factorization>
   136d8:	d9400017 	ldw	r5,0(sp)
   136dc:	100d883a 	mov	r6,r2
   136e0:	b009883a 	mov	r4,r22
   136e4:	b14b883a 	add	r5,r22,r5
   136e8:	1039883a 	mov	fp,r2
   136ec:	0017ad40 	call	17ad4 <memcmp>
   136f0:	d8c00417 	ldw	r3,16(sp)
   136f4:	1000521e 	bne	r2,zero,13840 <strstr+0x27c>
   136f8:	e47fffc4 	addi	r17,fp,-1
   136fc:	04c00044 	movi	r19,1
   13700:	b445883a 	add	r2,r22,r17
   13704:	9f27c83a 	sub	r19,r19,fp
   13708:	0029883a 	mov	r20,zero
   1370c:	002b883a 	mov	r21,zero
   13710:	d8800215 	stw	r2,8(sp)
   13714:	e4bfff84 	addi	r18,fp,-2
   13718:	dcc00115 	stw	r19,4(sp)
   1371c:	8567883a 	add	r19,r16,r21
   13720:	98cdc83a 	sub	r6,r19,r3
   13724:	000b883a 	mov	r5,zero
   13728:	b8c9883a 	add	r4,r23,r3
   1372c:	00179f00 	call	179f0 <memchr>
   13730:	1000411e 	bne	r2,zero,13838 <strstr+0x274>
   13734:	98004026 	beq	r19,zero,13838 <strstr+0x274>
   13738:	e00b883a 	mov	r5,fp
   1373c:	e500012e 	bgeu	fp,r20,13744 <strstr+0x180>
   13740:	a00b883a 	mov	r5,r20
   13744:	2c00152e 	bgeu	r5,r16,1379c <strstr+0x1d8>
   13748:	b947883a 	add	r3,r23,r5
   1374c:	1d47883a 	add	r3,r3,r21
   13750:	b145883a 	add	r2,r22,r5
   13754:	18c00003 	ldbu	r3,0(r3)
   13758:	10800003 	ldbu	r2,0(r2)
   1375c:	1880311e 	bne	r3,r2,13824 <strstr+0x260>
   13760:	a8800044 	addi	r2,r21,1
   13764:	28c00044 	addi	r3,r5,1
   13768:	1145883a 	add	r2,r2,r5
   1376c:	b0c9883a 	add	r4,r22,r3
   13770:	b885883a 	add	r2,r23,r2
   13774:	00000706 	br	13794 <strstr+0x1d0>
   13778:	21c00003 	ldbu	r7,0(r4)
   1377c:	11800003 	ldbu	r6,0(r2)
   13780:	21000044 	addi	r4,r4,1
   13784:	39c03fcc 	andi	r7,r7,255
   13788:	10800044 	addi	r2,r2,1
   1378c:	3980251e 	bne	r7,r6,13824 <strstr+0x260>
   13790:	18c00044 	addi	r3,r3,1
   13794:	180b883a 	mov	r5,r3
   13798:	1c3ff736 	bltu	r3,r16,13778 <_gp+0xfffed64c>
   1379c:	880d883a 	mov	r6,r17
   137a0:	a700702e 	bgeu	r20,fp,13964 <strstr+0x3a0>
   137a4:	d9000217 	ldw	r4,8(sp)
   137a8:	bd45883a 	add	r2,r23,r21
   137ac:	1445883a 	add	r2,r2,r17
   137b0:	20c00003 	ldbu	r3,0(r4)
   137b4:	10800003 	ldbu	r2,0(r2)
   137b8:	18806a1e 	bne	r3,r2,13964 <strstr+0x3a0>
   137bc:	954b883a 	add	r5,r18,r21
   137c0:	a2bfffc4 	addi	r10,r20,-1
   137c4:	b485883a 	add	r2,r22,r18
   137c8:	b94b883a 	add	r5,r23,r5
   137cc:	b295883a 	add	r10,r22,r10
   137d0:	00000706 	br	137f0 <strstr+0x22c>
   137d4:	11000003 	ldbu	r4,0(r2)
   137d8:	28c00003 	ldbu	r3,0(r5)
   137dc:	10bfffc4 	addi	r2,r2,-1
   137e0:	21003fcc 	andi	r4,r4,255
   137e4:	297fffc4 	addi	r5,r5,-1
   137e8:	20c0031e 	bne	r4,r3,137f8 <strstr+0x234>
   137ec:	380d883a 	mov	r6,r7
   137f0:	31ffffc4 	addi	r7,r6,-1
   137f4:	12bff71e 	bne	r2,r10,137d4 <_gp+0xfffed6a8>
   137f8:	a2000044 	addi	r8,r20,1
   137fc:	32005b36 	bltu	r6,r8,1396c <strstr+0x3a8>
   13800:	da000017 	ldw	r8,0(sp)
   13804:	aa2b883a 	add	r21,r21,r8
   13808:	8229c83a 	sub	r20,r16,r8
   1380c:	9807883a 	mov	r3,r19
   13810:	003fc206 	br	1371c <_gp+0xfffed5f0>
   13814:	28800007 	ldb	r2,0(r5)
   13818:	103f7d26 	beq	r2,zero,13610 <_gp+0xfffed4e4>
   1381c:	0005883a 	mov	r2,zero
   13820:	f800283a 	ret
   13824:	d8c00117 	ldw	r3,4(sp)
   13828:	0029883a 	mov	r20,zero
   1382c:	1d6b883a 	add	r21,r3,r21
   13830:	a96b883a 	add	r21,r21,r5
   13834:	003ff506 	br	1380c <_gp+0xfffed6e0>
   13838:	0005883a 	mov	r2,zero
   1383c:	003f9506 	br	13694 <_gp+0xfffed568>
   13840:	8705c83a 	sub	r2,r16,fp
   13844:	1700012e 	bgeu	r2,fp,1384c <strstr+0x288>
   13848:	e005883a 	mov	r2,fp
   1384c:	10800044 	addi	r2,r2,1
   13850:	e4bfffc4 	addi	r18,fp,-1
   13854:	05000044 	movi	r20,1
   13858:	a729c83a 	sub	r20,r20,fp
   1385c:	d8800015 	stw	r2,0(sp)
   13860:	b48b883a 	add	r5,r22,r18
   13864:	e0bfff84 	addi	r2,fp,-2
   13868:	dd000215 	stw	r20,8(sp)
   1386c:	002b883a 	mov	r21,zero
   13870:	e4400044 	addi	r17,fp,1
   13874:	d9400315 	stw	r5,12(sp)
   13878:	d8800115 	stw	r2,4(sp)
   1387c:	b53fffc4 	addi	r20,r22,-1
   13880:	8567883a 	add	r19,r16,r21
   13884:	98cdc83a 	sub	r6,r19,r3
   13888:	000b883a 	mov	r5,zero
   1388c:	b8c9883a 	add	r4,r23,r3
   13890:	00179f00 	call	179f0 <memchr>
   13894:	103fe81e 	bne	r2,zero,13838 <_gp+0xfffed70c>
   13898:	983fe726 	beq	r19,zero,13838 <_gp+0xfffed70c>
   1389c:	e400132e 	bgeu	fp,r16,138ec <strstr+0x328>
   138a0:	bf07883a 	add	r3,r23,fp
   138a4:	1d47883a 	add	r3,r3,r21
   138a8:	b705883a 	add	r2,r22,fp
   138ac:	18c00003 	ldbu	r3,0(r3)
   138b0:	10800003 	ldbu	r2,0(r2)
   138b4:	1880241e 	bne	r3,r2,13948 <strstr+0x384>
   138b8:	ac45883a 	add	r2,r21,r17
   138bc:	b44b883a 	add	r5,r22,r17
   138c0:	b885883a 	add	r2,r23,r2
   138c4:	e009883a 	mov	r4,fp
   138c8:	00000606 	br	138e4 <strstr+0x320>
   138cc:	29800003 	ldbu	r6,0(r5)
   138d0:	10c00003 	ldbu	r3,0(r2)
   138d4:	29400044 	addi	r5,r5,1
   138d8:	31803fcc 	andi	r6,r6,255
   138dc:	10800044 	addi	r2,r2,1
   138e0:	30c01a1e 	bne	r6,r3,1394c <strstr+0x388>
   138e4:	21000044 	addi	r4,r4,1
   138e8:	243ff836 	bltu	r4,r16,138cc <_gp+0xfffed7a0>
   138ec:	00bfffc4 	movi	r2,-1
   138f0:	bd49883a 	add	r4,r23,r21
   138f4:	90801926 	beq	r18,r2,1395c <strstr+0x398>
   138f8:	d9400317 	ldw	r5,12(sp)
   138fc:	2485883a 	add	r2,r4,r18
   13900:	10800003 	ldbu	r2,0(r2)
   13904:	28c00003 	ldbu	r3,0(r5)
   13908:	18800b1e 	bne	r3,r2,13938 <strstr+0x374>
   1390c:	d8c00117 	ldw	r3,4(sp)
   13910:	a8c5883a 	add	r2,r21,r3
   13914:	b885883a 	add	r2,r23,r2
   13918:	b0c7883a 	add	r3,r22,r3
   1391c:	1d000f26 	beq	r3,r20,1395c <strstr+0x398>
   13920:	19800003 	ldbu	r6,0(r3)
   13924:	11400003 	ldbu	r5,0(r2)
   13928:	18ffffc4 	addi	r3,r3,-1
   1392c:	31803fcc 	andi	r6,r6,255
   13930:	10bfffc4 	addi	r2,r2,-1
   13934:	317ff926 	beq	r6,r5,1391c <_gp+0xfffed7f0>
   13938:	d8800017 	ldw	r2,0(sp)
   1393c:	a8ab883a 	add	r21,r21,r2
   13940:	9807883a 	mov	r3,r19
   13944:	003fce06 	br	13880 <_gp+0xfffed754>
   13948:	e009883a 	mov	r4,fp
   1394c:	d8c00217 	ldw	r3,8(sp)
   13950:	1d4f883a 	add	r7,r3,r21
   13954:	392b883a 	add	r21,r7,r4
   13958:	003ff906 	br	13940 <_gp+0xfffed814>
   1395c:	2005883a 	mov	r2,r4
   13960:	003f4c06 	br	13694 <_gp+0xfffed568>
   13964:	e00d883a 	mov	r6,fp
   13968:	003fa306 	br	137f8 <_gp+0xfffed6cc>
   1396c:	bd45883a 	add	r2,r23,r21
   13970:	003f4806 	br	13694 <_gp+0xfffed568>

00013974 <___svfprintf_internal_r>:
   13974:	deffb704 	addi	sp,sp,-292
   13978:	dfc04815 	stw	ra,288(sp)
   1397c:	ddc04615 	stw	r23,280(sp)
   13980:	d9402d15 	stw	r5,180(sp)
   13984:	d9003915 	stw	r4,228(sp)
   13988:	302f883a 	mov	r23,r6
   1398c:	d9c02e15 	stw	r7,184(sp)
   13990:	df004715 	stw	fp,284(sp)
   13994:	dd804515 	stw	r22,276(sp)
   13998:	dd404415 	stw	r21,272(sp)
   1399c:	dd004315 	stw	r20,268(sp)
   139a0:	dcc04215 	stw	r19,264(sp)
   139a4:	dc804115 	stw	r18,260(sp)
   139a8:	dc404015 	stw	r17,256(sp)
   139ac:	dc003f15 	stw	r16,252(sp)
   139b0:	00179c00 	call	179c0 <_localeconv_r>
   139b4:	10800017 	ldw	r2,0(r2)
   139b8:	1009883a 	mov	r4,r2
   139bc:	d8803415 	stw	r2,208(sp)
   139c0:	0018dc40 	call	18dc4 <strlen>
   139c4:	d8c02d17 	ldw	r3,180(sp)
   139c8:	d8803815 	stw	r2,224(sp)
   139cc:	1880030b 	ldhu	r2,12(r3)
   139d0:	1080200c 	andi	r2,r2,128
   139d4:	10000226 	beq	r2,zero,139e0 <___svfprintf_internal_r+0x6c>
   139d8:	18800417 	ldw	r2,16(r3)
   139dc:	1006b126 	beq	r2,zero,154a4 <___svfprintf_internal_r+0x1b30>
   139e0:	dcc03917 	ldw	r19,228(sp)
   139e4:	d8c00404 	addi	r3,sp,16
   139e8:	054000b4 	movhi	r21,2
   139ec:	d9001e04 	addi	r4,sp,120
   139f0:	ad759d84 	addi	r21,r21,-10634
   139f4:	d8c01e15 	stw	r3,120(sp)
   139f8:	d8002015 	stw	zero,128(sp)
   139fc:	d8001f15 	stw	zero,124(sp)
   13a00:	d8003315 	stw	zero,204(sp)
   13a04:	d8003615 	stw	zero,216(sp)
   13a08:	d8003715 	stw	zero,220(sp)
   13a0c:	1811883a 	mov	r8,r3
   13a10:	d8003a15 	stw	zero,232(sp)
   13a14:	d8003b15 	stw	zero,236(sp)
   13a18:	d8002f15 	stw	zero,188(sp)
   13a1c:	d9002815 	stw	r4,160(sp)
   13a20:	b8800007 	ldb	r2,0(r23)
   13a24:	10027726 	beq	r2,zero,14404 <___svfprintf_internal_r+0xa90>
   13a28:	00c00944 	movi	r3,37
   13a2c:	b823883a 	mov	r17,r23
   13a30:	10c0021e 	bne	r2,r3,13a3c <___svfprintf_internal_r+0xc8>
   13a34:	00001406 	br	13a88 <___svfprintf_internal_r+0x114>
   13a38:	10c00326 	beq	r2,r3,13a48 <___svfprintf_internal_r+0xd4>
   13a3c:	8c400044 	addi	r17,r17,1
   13a40:	88800007 	ldb	r2,0(r17)
   13a44:	103ffc1e 	bne	r2,zero,13a38 <_gp+0xfffed90c>
   13a48:	8de1c83a 	sub	r16,r17,r23
   13a4c:	80000e26 	beq	r16,zero,13a88 <___svfprintf_internal_r+0x114>
   13a50:	d8c02017 	ldw	r3,128(sp)
   13a54:	d8801f17 	ldw	r2,124(sp)
   13a58:	45c00015 	stw	r23,0(r8)
   13a5c:	1c07883a 	add	r3,r3,r16
   13a60:	10800044 	addi	r2,r2,1
   13a64:	d8c02015 	stw	r3,128(sp)
   13a68:	44000115 	stw	r16,4(r8)
   13a6c:	d8801f15 	stw	r2,124(sp)
   13a70:	00c001c4 	movi	r3,7
   13a74:	18809916 	blt	r3,r2,13cdc <___svfprintf_internal_r+0x368>
   13a78:	42000204 	addi	r8,r8,8
   13a7c:	d9402f17 	ldw	r5,188(sp)
   13a80:	2c0b883a 	add	r5,r5,r16
   13a84:	d9402f15 	stw	r5,188(sp)
   13a88:	88800007 	ldb	r2,0(r17)
   13a8c:	10009a26 	beq	r2,zero,13cf8 <___svfprintf_internal_r+0x384>
   13a90:	8dc00044 	addi	r23,r17,1
   13a94:	8c400047 	ldb	r17,1(r17)
   13a98:	0021883a 	mov	r16,zero
   13a9c:	00bfffc4 	movi	r2,-1
   13aa0:	0025883a 	mov	r18,zero
   13aa4:	dc002905 	stb	r16,164(sp)
   13aa8:	d8002785 	stb	zero,158(sp)
   13aac:	d8002b05 	stb	zero,172(sp)
   13ab0:	d8802a15 	stw	r2,168(sp)
   13ab4:	d8003115 	stw	zero,196(sp)
   13ab8:	05001604 	movi	r20,88
   13abc:	05800244 	movi	r22,9
   13ac0:	4039883a 	mov	fp,r8
   13ac4:	9021883a 	mov	r16,r18
   13ac8:	bdc00044 	addi	r23,r23,1
   13acc:	88bff804 	addi	r2,r17,-32
   13ad0:	a0831e36 	bltu	r20,r2,1474c <___svfprintf_internal_r+0xdd8>
   13ad4:	100490ba 	slli	r2,r2,2
   13ad8:	00c00074 	movhi	r3,1
   13adc:	18cebb04 	addi	r3,r3,15084
   13ae0:	10c5883a 	add	r2,r2,r3
   13ae4:	10800017 	ldw	r2,0(r2)
   13ae8:	1000683a 	jmp	r2
   13aec:	00014694 	movui	zero,1306
   13af0:	0001474c 	andi	zero,zero,1309
   13af4:	0001474c 	andi	zero,zero,1309
   13af8:	00014688 	cmpgei	zero,zero,1306
   13afc:	0001474c 	andi	zero,zero,1309
   13b00:	0001474c 	andi	zero,zero,1309
   13b04:	0001474c 	andi	zero,zero,1309
   13b08:	0001474c 	andi	zero,zero,1309
   13b0c:	0001474c 	andi	zero,zero,1309
   13b10:	0001474c 	andi	zero,zero,1309
   13b14:	00013d54 	movui	zero,1269
   13b18:	00014598 	cmpnei	zero,zero,1302
   13b1c:	0001474c 	andi	zero,zero,1309
   13b20:	00013c60 	cmpeqi	zero,zero,1265
   13b24:	00013d78 	rdprs	zero,zero,1269
   13b28:	0001474c 	andi	zero,zero,1309
   13b2c:	00013e04 	movi	zero,1272
   13b30:	00013dc8 	cmpgei	zero,zero,1271
   13b34:	00013dc8 	cmpgei	zero,zero,1271
   13b38:	00013dc8 	cmpgei	zero,zero,1271
   13b3c:	00013dc8 	cmpgei	zero,zero,1271
   13b40:	00013dc8 	cmpgei	zero,zero,1271
   13b44:	00013dc8 	cmpgei	zero,zero,1271
   13b48:	00013dc8 	cmpgei	zero,zero,1271
   13b4c:	00013dc8 	cmpgei	zero,zero,1271
   13b50:	00013dc8 	cmpgei	zero,zero,1271
   13b54:	0001474c 	andi	zero,zero,1309
   13b58:	0001474c 	andi	zero,zero,1309
   13b5c:	0001474c 	andi	zero,zero,1309
   13b60:	0001474c 	andi	zero,zero,1309
   13b64:	0001474c 	andi	zero,zero,1309
   13b68:	0001474c 	andi	zero,zero,1309
   13b6c:	0001474c 	andi	zero,zero,1309
   13b70:	0001474c 	andi	zero,zero,1309
   13b74:	0001474c 	andi	zero,zero,1309
   13b78:	0001474c 	andi	zero,zero,1309
   13b7c:	00013ec8 	cmpgei	zero,zero,1275
   13b80:	00013e10 	cmplti	zero,zero,1272
   13b84:	0001474c 	andi	zero,zero,1309
   13b88:	00013e10 	cmplti	zero,zero,1272
   13b8c:	0001474c 	andi	zero,zero,1309
   13b90:	0001474c 	andi	zero,zero,1309
   13b94:	0001474c 	andi	zero,zero,1309
   13b98:	0001474c 	andi	zero,zero,1309
   13b9c:	00013ebc 	xorhi	zero,zero,1274
   13ba0:	0001474c 	andi	zero,zero,1309
   13ba4:	0001474c 	andi	zero,zero,1309
   13ba8:	00013f90 	cmplti	zero,zero,1278
   13bac:	0001474c 	andi	zero,zero,1309
   13bb0:	0001474c 	andi	zero,zero,1309
   13bb4:	0001474c 	andi	zero,zero,1309
   13bb8:	0001474c 	andi	zero,zero,1309
   13bbc:	0001474c 	andi	zero,zero,1309
   13bc0:	0001440c 	andi	zero,zero,1296
   13bc4:	0001474c 	andi	zero,zero,1309
   13bc8:	0001474c 	andi	zero,zero,1309
   13bcc:	00014478 	rdprs	zero,zero,1297
   13bd0:	0001474c 	andi	zero,zero,1309
   13bd4:	0001474c 	andi	zero,zero,1309
   13bd8:	0001474c 	andi	zero,zero,1309
   13bdc:	0001474c 	andi	zero,zero,1309
   13be0:	0001474c 	andi	zero,zero,1309
   13be4:	0001474c 	andi	zero,zero,1309
   13be8:	0001474c 	andi	zero,zero,1309
   13bec:	0001474c 	andi	zero,zero,1309
   13bf0:	0001474c 	andi	zero,zero,1309
   13bf4:	0001474c 	andi	zero,zero,1309
   13bf8:	00014534 	movhi	zero,1300
   13bfc:	000146b4 	movhi	zero,1306
   13c00:	00013e10 	cmplti	zero,zero,1272
   13c04:	00013e10 	cmplti	zero,zero,1272
   13c08:	00013e10 	cmplti	zero,zero,1272
   13c0c:	00014728 	cmpgeui	zero,zero,1308
   13c10:	000146b4 	movhi	zero,1306
   13c14:	0001474c 	andi	zero,zero,1309
   13c18:	0001474c 	andi	zero,zero,1309
   13c1c:	000146d4 	movui	zero,1307
   13c20:	0001474c 	andi	zero,zero,1309
   13c24:	000146e8 	cmpgeui	zero,zero,1307
   13c28:	00014578 	rdprs	zero,zero,1301
   13c2c:	00013c6c 	andhi	zero,zero,1265
   13c30:	000145b0 	cmpltui	zero,zero,1302
   13c34:	0001474c 	andi	zero,zero,1309
   13c38:	000145bc 	xorhi	zero,zero,1302
   13c3c:	0001474c 	andi	zero,zero,1309
   13c40:	00014620 	cmpeqi	zero,zero,1304
   13c44:	0001474c 	andi	zero,zero,1309
   13c48:	0001474c 	andi	zero,zero,1309
   13c4c:	00014640 	call	1464 <__alt_mem_onchip_memory-0xeb9c>
   13c50:	d8c03117 	ldw	r3,196(sp)
   13c54:	d8802e15 	stw	r2,184(sp)
   13c58:	00c7c83a 	sub	r3,zero,r3
   13c5c:	d8c03115 	stw	r3,196(sp)
   13c60:	84000114 	ori	r16,r16,4
   13c64:	bc400007 	ldb	r17,0(r23)
   13c68:	003f9706 	br	13ac8 <_gp+0xfffed99c>
   13c6c:	00800c04 	movi	r2,48
   13c70:	d8802705 	stb	r2,156(sp)
   13c74:	00801e04 	movi	r2,120
   13c78:	d8802745 	stb	r2,157(sp)
   13c7c:	d9002a17 	ldw	r4,168(sp)
   13c80:	d8802e17 	ldw	r2,184(sp)
   13c84:	d8002785 	stb	zero,158(sp)
   13c88:	e011883a 	mov	r8,fp
   13c8c:	10c00104 	addi	r3,r2,4
   13c90:	15000017 	ldw	r20,0(r2)
   13c94:	002d883a 	mov	r22,zero
   13c98:	80800094 	ori	r2,r16,2
   13c9c:	2002b616 	blt	r4,zero,14778 <___svfprintf_internal_r+0xe04>
   13ca0:	00bfdfc4 	movi	r2,-129
   13ca4:	80a4703a 	and	r18,r16,r2
   13ca8:	d8c02e15 	stw	r3,184(sp)
   13cac:	94800094 	ori	r18,r18,2
   13cb0:	a002a01e 	bne	r20,zero,14734 <___svfprintf_internal_r+0xdc0>
   13cb4:	014000b4 	movhi	r5,2
   13cb8:	29759604 	addi	r5,r5,-10664
   13cbc:	d9403a15 	stw	r5,232(sp)
   13cc0:	04401e04 	movi	r17,120
   13cc4:	d8c02a17 	ldw	r3,168(sp)
   13cc8:	0039883a 	mov	fp,zero
   13ccc:	1801e626 	beq	r3,zero,14468 <___svfprintf_internal_r+0xaf4>
   13cd0:	0029883a 	mov	r20,zero
   13cd4:	002d883a 	mov	r22,zero
   13cd8:	00020506 	br	144f0 <___svfprintf_internal_r+0xb7c>
   13cdc:	d9402d17 	ldw	r5,180(sp)
   13ce0:	d9801e04 	addi	r6,sp,120
   13ce4:	9809883a 	mov	r4,r19
   13ce8:	0018e5c0 	call	18e5c <__ssprint_r>
   13cec:	1000081e 	bne	r2,zero,13d10 <___svfprintf_internal_r+0x39c>
   13cf0:	da000404 	addi	r8,sp,16
   13cf4:	003f6106 	br	13a7c <_gp+0xfffed950>
   13cf8:	d8802017 	ldw	r2,128(sp)
   13cfc:	10000426 	beq	r2,zero,13d10 <___svfprintf_internal_r+0x39c>
   13d00:	d9402d17 	ldw	r5,180(sp)
   13d04:	d9003917 	ldw	r4,228(sp)
   13d08:	d9801e04 	addi	r6,sp,120
   13d0c:	0018e5c0 	call	18e5c <__ssprint_r>
   13d10:	d8802d17 	ldw	r2,180(sp)
   13d14:	10c0030b 	ldhu	r3,12(r2)
   13d18:	d8802f17 	ldw	r2,188(sp)
   13d1c:	18c0100c 	andi	r3,r3,64
   13d20:	1806251e 	bne	r3,zero,155b8 <___svfprintf_internal_r+0x1c44>
   13d24:	dfc04817 	ldw	ra,288(sp)
   13d28:	df004717 	ldw	fp,284(sp)
   13d2c:	ddc04617 	ldw	r23,280(sp)
   13d30:	dd804517 	ldw	r22,276(sp)
   13d34:	dd404417 	ldw	r21,272(sp)
   13d38:	dd004317 	ldw	r20,268(sp)
   13d3c:	dcc04217 	ldw	r19,264(sp)
   13d40:	dc804117 	ldw	r18,260(sp)
   13d44:	dc404017 	ldw	r17,256(sp)
   13d48:	dc003f17 	ldw	r16,252(sp)
   13d4c:	dec04904 	addi	sp,sp,292
   13d50:	f800283a 	ret
   13d54:	d9002e17 	ldw	r4,184(sp)
   13d58:	d9402e17 	ldw	r5,184(sp)
   13d5c:	21000017 	ldw	r4,0(r4)
   13d60:	28800104 	addi	r2,r5,4
   13d64:	d9003115 	stw	r4,196(sp)
   13d68:	203fb916 	blt	r4,zero,13c50 <_gp+0xfffedb24>
   13d6c:	d8802e15 	stw	r2,184(sp)
   13d70:	bc400007 	ldb	r17,0(r23)
   13d74:	003f5406 	br	13ac8 <_gp+0xfffed99c>
   13d78:	bc400007 	ldb	r17,0(r23)
   13d7c:	01000a84 	movi	r4,42
   13d80:	b8c00044 	addi	r3,r23,1
   13d84:	89076926 	beq	r17,r4,15b2c <___svfprintf_internal_r+0x21b8>
   13d88:	8cbff404 	addi	r18,r17,-48
   13d8c:	b486b936 	bltu	r22,r18,15874 <___svfprintf_internal_r+0x1f00>
   13d90:	0009883a 	mov	r4,zero
   13d94:	1823883a 	mov	r17,r3
   13d98:	01400284 	movi	r5,10
   13d9c:	00122c80 	call	122c8 <__mulsi3>
   13da0:	88c00007 	ldb	r3,0(r17)
   13da4:	1489883a 	add	r4,r2,r18
   13da8:	8dc00044 	addi	r23,r17,1
   13dac:	1cbff404 	addi	r18,r3,-48
   13db0:	b823883a 	mov	r17,r23
   13db4:	b4bff82e 	bgeu	r22,r18,13d98 <_gp+0xfffedc6c>
   13db8:	1823883a 	mov	r17,r3
   13dbc:	20060416 	blt	r4,zero,155d0 <___svfprintf_internal_r+0x1c5c>
   13dc0:	d9002a15 	stw	r4,168(sp)
   13dc4:	003f4106 	br	13acc <_gp+0xfffed9a0>
   13dc8:	8cbff404 	addi	r18,r17,-48
   13dcc:	d8003115 	stw	zero,196(sp)
   13dd0:	0009883a 	mov	r4,zero
   13dd4:	b823883a 	mov	r17,r23
   13dd8:	01400284 	movi	r5,10
   13ddc:	00122c80 	call	122c8 <__mulsi3>
   13de0:	88c00007 	ldb	r3,0(r17)
   13de4:	9089883a 	add	r4,r18,r2
   13de8:	bdc00044 	addi	r23,r23,1
   13dec:	1cbff404 	addi	r18,r3,-48
   13df0:	b823883a 	mov	r17,r23
   13df4:	b4bff82e 	bgeu	r22,r18,13dd8 <_gp+0xfffedcac>
   13df8:	1823883a 	mov	r17,r3
   13dfc:	d9003115 	stw	r4,196(sp)
   13e00:	003f3206 	br	13acc <_gp+0xfffed9a0>
   13e04:	84002014 	ori	r16,r16,128
   13e08:	bc400007 	ldb	r17,0(r23)
   13e0c:	003f2e06 	br	13ac8 <_gp+0xfffed99c>
   13e10:	8025883a 	mov	r18,r16
   13e14:	dc002903 	ldbu	r16,164(sp)
   13e18:	e011883a 	mov	r8,fp
   13e1c:	84003fcc 	andi	r16,r16,255
   13e20:	8007721e 	bne	r16,zero,15bec <___svfprintf_internal_r+0x2278>
   13e24:	9080020c 	andi	r2,r18,8
   13e28:	1004a526 	beq	r2,zero,150c0 <___svfprintf_internal_r+0x174c>
   13e2c:	d9002e17 	ldw	r4,184(sp)
   13e30:	d9402e17 	ldw	r5,184(sp)
   13e34:	d8802e17 	ldw	r2,184(sp)
   13e38:	21000017 	ldw	r4,0(r4)
   13e3c:	29400117 	ldw	r5,4(r5)
   13e40:	10800204 	addi	r2,r2,8
   13e44:	d9003615 	stw	r4,216(sp)
   13e48:	d9403715 	stw	r5,220(sp)
   13e4c:	d8802e15 	stw	r2,184(sp)
   13e50:	d9003617 	ldw	r4,216(sp)
   13e54:	d9403717 	ldw	r5,220(sp)
   13e58:	da003e15 	stw	r8,248(sp)
   13e5c:	04000044 	movi	r16,1
   13e60:	0018d500 	call	18d50 <__fpclassifyd>
   13e64:	da003e17 	ldw	r8,248(sp)
   13e68:	1404731e 	bne	r2,r16,15038 <___svfprintf_internal_r+0x16c4>
   13e6c:	d9003617 	ldw	r4,216(sp)
   13e70:	d9403717 	ldw	r5,220(sp)
   13e74:	000d883a 	mov	r6,zero
   13e78:	000f883a 	mov	r7,zero
   13e7c:	001c25c0 	call	1c25c <__ledf2>
   13e80:	da003e17 	ldw	r8,248(sp)
   13e84:	10061b16 	blt	r2,zero,156f4 <___svfprintf_internal_r+0x1d80>
   13e88:	df002783 	ldbu	fp,158(sp)
   13e8c:	008011c4 	movi	r2,71
   13e90:	1445810e 	bge	r2,r17,15498 <___svfprintf_internal_r+0x1b24>
   13e94:	040000b4 	movhi	r16,2
   13e98:	84358e04 	addi	r16,r16,-10696
   13e9c:	00c000c4 	movi	r3,3
   13ea0:	00bfdfc4 	movi	r2,-129
   13ea4:	d8c02915 	stw	r3,164(sp)
   13ea8:	90a4703a 	and	r18,r18,r2
   13eac:	d8c02b15 	stw	r3,172(sp)
   13eb0:	d8002a15 	stw	zero,168(sp)
   13eb4:	d8003215 	stw	zero,200(sp)
   13eb8:	00006c06 	br	1406c <___svfprintf_internal_r+0x6f8>
   13ebc:	84000214 	ori	r16,r16,8
   13ec0:	bc400007 	ldb	r17,0(r23)
   13ec4:	003f0006 	br	13ac8 <_gp+0xfffed99c>
   13ec8:	8025883a 	mov	r18,r16
   13ecc:	dc002903 	ldbu	r16,164(sp)
   13ed0:	e011883a 	mov	r8,fp
   13ed4:	84003fcc 	andi	r16,r16,255
   13ed8:	80073f1e 	bne	r16,zero,15bd8 <___svfprintf_internal_r+0x2264>
   13edc:	94800414 	ori	r18,r18,16
   13ee0:	9080080c 	andi	r2,r18,32
   13ee4:	1003bb26 	beq	r2,zero,14dd4 <___svfprintf_internal_r+0x1460>
   13ee8:	d9002e17 	ldw	r4,184(sp)
   13eec:	20800117 	ldw	r2,4(r4)
   13ef0:	25000017 	ldw	r20,0(r4)
   13ef4:	21000204 	addi	r4,r4,8
   13ef8:	d9002e15 	stw	r4,184(sp)
   13efc:	102d883a 	mov	r22,r2
   13f00:	1003bd16 	blt	r2,zero,14df8 <___svfprintf_internal_r+0x1484>
   13f04:	d9002a17 	ldw	r4,168(sp)
   13f08:	df002783 	ldbu	fp,158(sp)
   13f0c:	2003d016 	blt	r4,zero,14e50 <___svfprintf_internal_r+0x14dc>
   13f10:	00ffdfc4 	movi	r3,-129
   13f14:	a584b03a 	or	r2,r20,r22
   13f18:	90e4703a 	and	r18,r18,r3
   13f1c:	10015026 	beq	r2,zero,14460 <___svfprintf_internal_r+0xaec>
   13f20:	b0037026 	beq	r22,zero,14ce4 <___svfprintf_internal_r+0x1370>
   13f24:	dc402915 	stw	r17,164(sp)
   13f28:	dc001e04 	addi	r16,sp,120
   13f2c:	b023883a 	mov	r17,r22
   13f30:	402d883a 	mov	r22,r8
   13f34:	a009883a 	mov	r4,r20
   13f38:	880b883a 	mov	r5,r17
   13f3c:	01800284 	movi	r6,10
   13f40:	000f883a 	mov	r7,zero
   13f44:	001b1640 	call	1b164 <__umoddi3>
   13f48:	10800c04 	addi	r2,r2,48
   13f4c:	843fffc4 	addi	r16,r16,-1
   13f50:	a009883a 	mov	r4,r20
   13f54:	880b883a 	mov	r5,r17
   13f58:	80800005 	stb	r2,0(r16)
   13f5c:	01800284 	movi	r6,10
   13f60:	000f883a 	mov	r7,zero
   13f64:	001ab680 	call	1ab68 <__udivdi3>
   13f68:	1029883a 	mov	r20,r2
   13f6c:	10c4b03a 	or	r2,r2,r3
   13f70:	1823883a 	mov	r17,r3
   13f74:	103fef1e 	bne	r2,zero,13f34 <_gp+0xfffede08>
   13f78:	d8c02817 	ldw	r3,160(sp)
   13f7c:	dc402917 	ldw	r17,164(sp)
   13f80:	b011883a 	mov	r8,r22
   13f84:	1c07c83a 	sub	r3,r3,r16
   13f88:	d8c02b15 	stw	r3,172(sp)
   13f8c:	00003106 	br	14054 <___svfprintf_internal_r+0x6e0>
   13f90:	8025883a 	mov	r18,r16
   13f94:	dc002903 	ldbu	r16,164(sp)
   13f98:	e011883a 	mov	r8,fp
   13f9c:	84003fcc 	andi	r16,r16,255
   13fa0:	80070a1e 	bne	r16,zero,15bcc <___svfprintf_internal_r+0x2258>
   13fa4:	94800414 	ori	r18,r18,16
   13fa8:	9080080c 	andi	r2,r18,32
   13fac:	1002f626 	beq	r2,zero,14b88 <___svfprintf_internal_r+0x1214>
   13fb0:	d9002e17 	ldw	r4,184(sp)
   13fb4:	d9402a17 	ldw	r5,168(sp)
   13fb8:	d8002785 	stb	zero,158(sp)
   13fbc:	20800204 	addi	r2,r4,8
   13fc0:	25000017 	ldw	r20,0(r4)
   13fc4:	25800117 	ldw	r22,4(r4)
   13fc8:	28043716 	blt	r5,zero,150a8 <___svfprintf_internal_r+0x1734>
   13fcc:	013fdfc4 	movi	r4,-129
   13fd0:	a586b03a 	or	r3,r20,r22
   13fd4:	d8802e15 	stw	r2,184(sp)
   13fd8:	9124703a 	and	r18,r18,r4
   13fdc:	1802f71e 	bne	r3,zero,14bbc <___svfprintf_internal_r+0x1248>
   13fe0:	d9402a17 	ldw	r5,168(sp)
   13fe4:	0039883a 	mov	fp,zero
   13fe8:	2806df26 	beq	r5,zero,15b68 <___svfprintf_internal_r+0x21f4>
   13fec:	0029883a 	mov	r20,zero
   13ff0:	002d883a 	mov	r22,zero
   13ff4:	dc001e04 	addi	r16,sp,120
   13ff8:	a006d0fa 	srli	r3,r20,3
   13ffc:	b008977a 	slli	r4,r22,29
   14000:	b02cd0fa 	srli	r22,r22,3
   14004:	a50001cc 	andi	r20,r20,7
   14008:	a0800c04 	addi	r2,r20,48
   1400c:	843fffc4 	addi	r16,r16,-1
   14010:	20e8b03a 	or	r20,r4,r3
   14014:	80800005 	stb	r2,0(r16)
   14018:	a586b03a 	or	r3,r20,r22
   1401c:	183ff61e 	bne	r3,zero,13ff8 <_gp+0xfffedecc>
   14020:	90c0004c 	andi	r3,r18,1
   14024:	18013f26 	beq	r3,zero,14524 <___svfprintf_internal_r+0xbb0>
   14028:	10803fcc 	andi	r2,r2,255
   1402c:	1080201c 	xori	r2,r2,128
   14030:	10bfe004 	addi	r2,r2,-128
   14034:	00c00c04 	movi	r3,48
   14038:	10c13a26 	beq	r2,r3,14524 <___svfprintf_internal_r+0xbb0>
   1403c:	80ffffc5 	stb	r3,-1(r16)
   14040:	d8c02817 	ldw	r3,160(sp)
   14044:	80bfffc4 	addi	r2,r16,-1
   14048:	1021883a 	mov	r16,r2
   1404c:	1887c83a 	sub	r3,r3,r2
   14050:	d8c02b15 	stw	r3,172(sp)
   14054:	d8802b17 	ldw	r2,172(sp)
   14058:	d9002a17 	ldw	r4,168(sp)
   1405c:	1100010e 	bge	r2,r4,14064 <___svfprintf_internal_r+0x6f0>
   14060:	2005883a 	mov	r2,r4
   14064:	d8802915 	stw	r2,164(sp)
   14068:	d8003215 	stw	zero,200(sp)
   1406c:	e7003fcc 	andi	fp,fp,255
   14070:	e700201c 	xori	fp,fp,128
   14074:	e73fe004 	addi	fp,fp,-128
   14078:	e0000326 	beq	fp,zero,14088 <___svfprintf_internal_r+0x714>
   1407c:	d8c02917 	ldw	r3,164(sp)
   14080:	18c00044 	addi	r3,r3,1
   14084:	d8c02915 	stw	r3,164(sp)
   14088:	90c0008c 	andi	r3,r18,2
   1408c:	d8c02c15 	stw	r3,176(sp)
   14090:	18000326 	beq	r3,zero,140a0 <___svfprintf_internal_r+0x72c>
   14094:	d8c02917 	ldw	r3,164(sp)
   14098:	18c00084 	addi	r3,r3,2
   1409c:	d8c02915 	stw	r3,164(sp)
   140a0:	90c0210c 	andi	r3,r18,132
   140a4:	d8c03015 	stw	r3,192(sp)
   140a8:	1801c31e 	bne	r3,zero,147b8 <___svfprintf_internal_r+0xe44>
   140ac:	d9003117 	ldw	r4,196(sp)
   140b0:	d8c02917 	ldw	r3,164(sp)
   140b4:	20e9c83a 	sub	r20,r4,r3
   140b8:	0501bf0e 	bge	zero,r20,147b8 <___svfprintf_internal_r+0xe44>
   140bc:	02400404 	movi	r9,16
   140c0:	d8c02017 	ldw	r3,128(sp)
   140c4:	d8801f17 	ldw	r2,124(sp)
   140c8:	4d053d0e 	bge	r9,r20,155c0 <___svfprintf_internal_r+0x1c4c>
   140cc:	014000b4 	movhi	r5,2
   140d0:	2975a184 	addi	r5,r5,-10618
   140d4:	dc403c15 	stw	r17,240(sp)
   140d8:	d9403515 	stw	r5,212(sp)
   140dc:	a023883a 	mov	r17,r20
   140e0:	482d883a 	mov	r22,r9
   140e4:	9029883a 	mov	r20,r18
   140e8:	070001c4 	movi	fp,7
   140ec:	8025883a 	mov	r18,r16
   140f0:	dc002d17 	ldw	r16,180(sp)
   140f4:	00000306 	br	14104 <___svfprintf_internal_r+0x790>
   140f8:	8c7ffc04 	addi	r17,r17,-16
   140fc:	42000204 	addi	r8,r8,8
   14100:	b440130e 	bge	r22,r17,14150 <___svfprintf_internal_r+0x7dc>
   14104:	010000b4 	movhi	r4,2
   14108:	18c00404 	addi	r3,r3,16
   1410c:	10800044 	addi	r2,r2,1
   14110:	2135a184 	addi	r4,r4,-10618
   14114:	41000015 	stw	r4,0(r8)
   14118:	45800115 	stw	r22,4(r8)
   1411c:	d8c02015 	stw	r3,128(sp)
   14120:	d8801f15 	stw	r2,124(sp)
   14124:	e0bff40e 	bge	fp,r2,140f8 <_gp+0xfffedfcc>
   14128:	d9801e04 	addi	r6,sp,120
   1412c:	800b883a 	mov	r5,r16
   14130:	9809883a 	mov	r4,r19
   14134:	0018e5c0 	call	18e5c <__ssprint_r>
   14138:	103ef51e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   1413c:	8c7ffc04 	addi	r17,r17,-16
   14140:	d8c02017 	ldw	r3,128(sp)
   14144:	d8801f17 	ldw	r2,124(sp)
   14148:	da000404 	addi	r8,sp,16
   1414c:	b47fed16 	blt	r22,r17,14104 <_gp+0xfffedfd8>
   14150:	9021883a 	mov	r16,r18
   14154:	a025883a 	mov	r18,r20
   14158:	8829883a 	mov	r20,r17
   1415c:	dc403c17 	ldw	r17,240(sp)
   14160:	d9403517 	ldw	r5,212(sp)
   14164:	a0c7883a 	add	r3,r20,r3
   14168:	10800044 	addi	r2,r2,1
   1416c:	41400015 	stw	r5,0(r8)
   14170:	45000115 	stw	r20,4(r8)
   14174:	d8c02015 	stw	r3,128(sp)
   14178:	d8801f15 	stw	r2,124(sp)
   1417c:	010001c4 	movi	r4,7
   14180:	2082c116 	blt	r4,r2,14c88 <___svfprintf_internal_r+0x1314>
   14184:	df002787 	ldb	fp,158(sp)
   14188:	42000204 	addi	r8,r8,8
   1418c:	e0000c26 	beq	fp,zero,141c0 <___svfprintf_internal_r+0x84c>
   14190:	d8801f17 	ldw	r2,124(sp)
   14194:	d9002784 	addi	r4,sp,158
   14198:	18c00044 	addi	r3,r3,1
   1419c:	10800044 	addi	r2,r2,1
   141a0:	41000015 	stw	r4,0(r8)
   141a4:	01000044 	movi	r4,1
   141a8:	41000115 	stw	r4,4(r8)
   141ac:	d8c02015 	stw	r3,128(sp)
   141b0:	d8801f15 	stw	r2,124(sp)
   141b4:	010001c4 	movi	r4,7
   141b8:	20825a16 	blt	r4,r2,14b24 <___svfprintf_internal_r+0x11b0>
   141bc:	42000204 	addi	r8,r8,8
   141c0:	d8802c17 	ldw	r2,176(sp)
   141c4:	10000c26 	beq	r2,zero,141f8 <___svfprintf_internal_r+0x884>
   141c8:	d8801f17 	ldw	r2,124(sp)
   141cc:	d9002704 	addi	r4,sp,156
   141d0:	18c00084 	addi	r3,r3,2
   141d4:	10800044 	addi	r2,r2,1
   141d8:	41000015 	stw	r4,0(r8)
   141dc:	01000084 	movi	r4,2
   141e0:	41000115 	stw	r4,4(r8)
   141e4:	d8c02015 	stw	r3,128(sp)
   141e8:	d8801f15 	stw	r2,124(sp)
   141ec:	010001c4 	movi	r4,7
   141f0:	20825416 	blt	r4,r2,14b44 <___svfprintf_internal_r+0x11d0>
   141f4:	42000204 	addi	r8,r8,8
   141f8:	d9003017 	ldw	r4,192(sp)
   141fc:	00802004 	movi	r2,128
   14200:	2081b926 	beq	r4,r2,148e8 <___svfprintf_internal_r+0xf74>
   14204:	d9402a17 	ldw	r5,168(sp)
   14208:	d8802b17 	ldw	r2,172(sp)
   1420c:	28adc83a 	sub	r22,r5,r2
   14210:	05802f0e 	bge	zero,r22,142d0 <___svfprintf_internal_r+0x95c>
   14214:	07000404 	movi	fp,16
   14218:	d8801f17 	ldw	r2,124(sp)
   1421c:	e583e20e 	bge	fp,r22,151a8 <___svfprintf_internal_r+0x1834>
   14220:	014000b4 	movhi	r5,2
   14224:	29759d84 	addi	r5,r5,-10634
   14228:	dc402a15 	stw	r17,168(sp)
   1422c:	d9402c15 	stw	r5,176(sp)
   14230:	b023883a 	mov	r17,r22
   14234:	050001c4 	movi	r20,7
   14238:	902d883a 	mov	r22,r18
   1423c:	8025883a 	mov	r18,r16
   14240:	dc002d17 	ldw	r16,180(sp)
   14244:	00000306 	br	14254 <___svfprintf_internal_r+0x8e0>
   14248:	8c7ffc04 	addi	r17,r17,-16
   1424c:	42000204 	addi	r8,r8,8
   14250:	e440110e 	bge	fp,r17,14298 <___svfprintf_internal_r+0x924>
   14254:	18c00404 	addi	r3,r3,16
   14258:	10800044 	addi	r2,r2,1
   1425c:	45400015 	stw	r21,0(r8)
   14260:	47000115 	stw	fp,4(r8)
   14264:	d8c02015 	stw	r3,128(sp)
   14268:	d8801f15 	stw	r2,124(sp)
   1426c:	a0bff60e 	bge	r20,r2,14248 <_gp+0xfffee11c>
   14270:	d9801e04 	addi	r6,sp,120
   14274:	800b883a 	mov	r5,r16
   14278:	9809883a 	mov	r4,r19
   1427c:	0018e5c0 	call	18e5c <__ssprint_r>
   14280:	103ea31e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14284:	8c7ffc04 	addi	r17,r17,-16
   14288:	d8c02017 	ldw	r3,128(sp)
   1428c:	d8801f17 	ldw	r2,124(sp)
   14290:	da000404 	addi	r8,sp,16
   14294:	e47fef16 	blt	fp,r17,14254 <_gp+0xfffee128>
   14298:	9021883a 	mov	r16,r18
   1429c:	b025883a 	mov	r18,r22
   142a0:	882d883a 	mov	r22,r17
   142a4:	dc402a17 	ldw	r17,168(sp)
   142a8:	d9002c17 	ldw	r4,176(sp)
   142ac:	1d87883a 	add	r3,r3,r22
   142b0:	10800044 	addi	r2,r2,1
   142b4:	41000015 	stw	r4,0(r8)
   142b8:	45800115 	stw	r22,4(r8)
   142bc:	d8c02015 	stw	r3,128(sp)
   142c0:	d8801f15 	stw	r2,124(sp)
   142c4:	010001c4 	movi	r4,7
   142c8:	20820e16 	blt	r4,r2,14b04 <___svfprintf_internal_r+0x1190>
   142cc:	42000204 	addi	r8,r8,8
   142d0:	9080400c 	andi	r2,r18,256
   142d4:	10013a1e 	bne	r2,zero,147c0 <___svfprintf_internal_r+0xe4c>
   142d8:	d9402b17 	ldw	r5,172(sp)
   142dc:	d8801f17 	ldw	r2,124(sp)
   142e0:	44000015 	stw	r16,0(r8)
   142e4:	1947883a 	add	r3,r3,r5
   142e8:	10800044 	addi	r2,r2,1
   142ec:	41400115 	stw	r5,4(r8)
   142f0:	d8c02015 	stw	r3,128(sp)
   142f4:	d8801f15 	stw	r2,124(sp)
   142f8:	010001c4 	movi	r4,7
   142fc:	2081f316 	blt	r4,r2,14acc <___svfprintf_internal_r+0x1158>
   14300:	42000204 	addi	r8,r8,8
   14304:	9480010c 	andi	r18,r18,4
   14308:	90003226 	beq	r18,zero,143d4 <___svfprintf_internal_r+0xa60>
   1430c:	d9403117 	ldw	r5,196(sp)
   14310:	d8802917 	ldw	r2,164(sp)
   14314:	28a1c83a 	sub	r16,r5,r2
   14318:	04002e0e 	bge	zero,r16,143d4 <___svfprintf_internal_r+0xa60>
   1431c:	04400404 	movi	r17,16
   14320:	d8801f17 	ldw	r2,124(sp)
   14324:	8c04db0e 	bge	r17,r16,15694 <___svfprintf_internal_r+0x1d20>
   14328:	014000b4 	movhi	r5,2
   1432c:	2975a184 	addi	r5,r5,-10618
   14330:	d9403515 	stw	r5,212(sp)
   14334:	048001c4 	movi	r18,7
   14338:	dd002d17 	ldw	r20,180(sp)
   1433c:	00000306 	br	1434c <___svfprintf_internal_r+0x9d8>
   14340:	843ffc04 	addi	r16,r16,-16
   14344:	42000204 	addi	r8,r8,8
   14348:	8c00130e 	bge	r17,r16,14398 <___svfprintf_internal_r+0xa24>
   1434c:	010000b4 	movhi	r4,2
   14350:	18c00404 	addi	r3,r3,16
   14354:	10800044 	addi	r2,r2,1
   14358:	2135a184 	addi	r4,r4,-10618
   1435c:	41000015 	stw	r4,0(r8)
   14360:	44400115 	stw	r17,4(r8)
   14364:	d8c02015 	stw	r3,128(sp)
   14368:	d8801f15 	stw	r2,124(sp)
   1436c:	90bff40e 	bge	r18,r2,14340 <_gp+0xfffee214>
   14370:	d9801e04 	addi	r6,sp,120
   14374:	a00b883a 	mov	r5,r20
   14378:	9809883a 	mov	r4,r19
   1437c:	0018e5c0 	call	18e5c <__ssprint_r>
   14380:	103e631e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14384:	843ffc04 	addi	r16,r16,-16
   14388:	d8c02017 	ldw	r3,128(sp)
   1438c:	d8801f17 	ldw	r2,124(sp)
   14390:	da000404 	addi	r8,sp,16
   14394:	8c3fed16 	blt	r17,r16,1434c <_gp+0xfffee220>
   14398:	d9403517 	ldw	r5,212(sp)
   1439c:	1c07883a 	add	r3,r3,r16
   143a0:	10800044 	addi	r2,r2,1
   143a4:	41400015 	stw	r5,0(r8)
   143a8:	44000115 	stw	r16,4(r8)
   143ac:	d8c02015 	stw	r3,128(sp)
   143b0:	d8801f15 	stw	r2,124(sp)
   143b4:	010001c4 	movi	r4,7
   143b8:	2080060e 	bge	r4,r2,143d4 <___svfprintf_internal_r+0xa60>
   143bc:	d9402d17 	ldw	r5,180(sp)
   143c0:	d9801e04 	addi	r6,sp,120
   143c4:	9809883a 	mov	r4,r19
   143c8:	0018e5c0 	call	18e5c <__ssprint_r>
   143cc:	103e501e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   143d0:	d8c02017 	ldw	r3,128(sp)
   143d4:	d8803117 	ldw	r2,196(sp)
   143d8:	d9002917 	ldw	r4,164(sp)
   143dc:	1100010e 	bge	r2,r4,143e4 <___svfprintf_internal_r+0xa70>
   143e0:	2005883a 	mov	r2,r4
   143e4:	d9402f17 	ldw	r5,188(sp)
   143e8:	288b883a 	add	r5,r5,r2
   143ec:	d9402f15 	stw	r5,188(sp)
   143f0:	1801be1e 	bne	r3,zero,14aec <___svfprintf_internal_r+0x1178>
   143f4:	b8800007 	ldb	r2,0(r23)
   143f8:	d8001f15 	stw	zero,124(sp)
   143fc:	da000404 	addi	r8,sp,16
   14400:	103d891e 	bne	r2,zero,13a28 <_gp+0xfffed8fc>
   14404:	b823883a 	mov	r17,r23
   14408:	003d9f06 	br	13a88 <_gp+0xfffed95c>
   1440c:	8025883a 	mov	r18,r16
   14410:	dc002903 	ldbu	r16,164(sp)
   14414:	e011883a 	mov	r8,fp
   14418:	84003fcc 	andi	r16,r16,255
   1441c:	8005e61e 	bne	r16,zero,15bb8 <___svfprintf_internal_r+0x2244>
   14420:	94800414 	ori	r18,r18,16
   14424:	9080080c 	andi	r2,r18,32
   14428:	10022026 	beq	r2,zero,14cac <___svfprintf_internal_r+0x1338>
   1442c:	d9002e17 	ldw	r4,184(sp)
   14430:	d9402a17 	ldw	r5,168(sp)
   14434:	d8002785 	stb	zero,158(sp)
   14438:	20c00204 	addi	r3,r4,8
   1443c:	25000017 	ldw	r20,0(r4)
   14440:	25800117 	ldw	r22,4(r4)
   14444:	2803ad16 	blt	r5,zero,152fc <___svfprintf_internal_r+0x1988>
   14448:	013fdfc4 	movi	r4,-129
   1444c:	a584b03a 	or	r2,r20,r22
   14450:	d8c02e15 	stw	r3,184(sp)
   14454:	9124703a 	and	r18,r18,r4
   14458:	0039883a 	mov	fp,zero
   1445c:	103eb01e 	bne	r2,zero,13f20 <_gp+0xfffeddf4>
   14460:	d8802a17 	ldw	r2,168(sp)
   14464:	1002e71e 	bne	r2,zero,15004 <___svfprintf_internal_r+0x1690>
   14468:	d8002a15 	stw	zero,168(sp)
   1446c:	d8002b15 	stw	zero,172(sp)
   14470:	dc001e04 	addi	r16,sp,120
   14474:	003ef706 	br	14054 <_gp+0xfffedf28>
   14478:	8025883a 	mov	r18,r16
   1447c:	dc002903 	ldbu	r16,164(sp)
   14480:	e011883a 	mov	r8,fp
   14484:	84003fcc 	andi	r16,r16,255
   14488:	8005c81e 	bne	r16,zero,15bac <___svfprintf_internal_r+0x2238>
   1448c:	010000b4 	movhi	r4,2
   14490:	21359104 	addi	r4,r4,-10684
   14494:	d9003a15 	stw	r4,232(sp)
   14498:	9080080c 	andi	r2,r18,32
   1449c:	10007226 	beq	r2,zero,14668 <___svfprintf_internal_r+0xcf4>
   144a0:	d9402e17 	ldw	r5,184(sp)
   144a4:	2d000017 	ldw	r20,0(r5)
   144a8:	2d800117 	ldw	r22,4(r5)
   144ac:	29400204 	addi	r5,r5,8
   144b0:	d9402e15 	stw	r5,184(sp)
   144b4:	9080004c 	andi	r2,r18,1
   144b8:	1001aa26 	beq	r2,zero,14b64 <___svfprintf_internal_r+0x11f0>
   144bc:	a584b03a 	or	r2,r20,r22
   144c0:	10032526 	beq	r2,zero,15158 <___svfprintf_internal_r+0x17e4>
   144c4:	d8c02a17 	ldw	r3,168(sp)
   144c8:	00800c04 	movi	r2,48
   144cc:	d8802705 	stb	r2,156(sp)
   144d0:	dc402745 	stb	r17,157(sp)
   144d4:	d8002785 	stb	zero,158(sp)
   144d8:	90800094 	ori	r2,r18,2
   144dc:	1804a316 	blt	r3,zero,1576c <___svfprintf_internal_r+0x1df8>
   144e0:	00bfdfc4 	movi	r2,-129
   144e4:	90a4703a 	and	r18,r18,r2
   144e8:	94800094 	ori	r18,r18,2
   144ec:	0039883a 	mov	fp,zero
   144f0:	d9003a17 	ldw	r4,232(sp)
   144f4:	dc001e04 	addi	r16,sp,120
   144f8:	a08003cc 	andi	r2,r20,15
   144fc:	b006973a 	slli	r3,r22,28
   14500:	2085883a 	add	r2,r4,r2
   14504:	a028d13a 	srli	r20,r20,4
   14508:	10800003 	ldbu	r2,0(r2)
   1450c:	b02cd13a 	srli	r22,r22,4
   14510:	843fffc4 	addi	r16,r16,-1
   14514:	1d28b03a 	or	r20,r3,r20
   14518:	80800005 	stb	r2,0(r16)
   1451c:	a584b03a 	or	r2,r20,r22
   14520:	103ff51e 	bne	r2,zero,144f8 <_gp+0xfffee3cc>
   14524:	d8c02817 	ldw	r3,160(sp)
   14528:	1c07c83a 	sub	r3,r3,r16
   1452c:	d8c02b15 	stw	r3,172(sp)
   14530:	003ec806 	br	14054 <_gp+0xfffedf28>
   14534:	d8c02e17 	ldw	r3,184(sp)
   14538:	d9002e17 	ldw	r4,184(sp)
   1453c:	8025883a 	mov	r18,r16
   14540:	18800017 	ldw	r2,0(r3)
   14544:	21000104 	addi	r4,r4,4
   14548:	00c00044 	movi	r3,1
   1454c:	e011883a 	mov	r8,fp
   14550:	d8c02915 	stw	r3,164(sp)
   14554:	d8002785 	stb	zero,158(sp)
   14558:	d8801405 	stb	r2,80(sp)
   1455c:	d9002e15 	stw	r4,184(sp)
   14560:	d8c02b15 	stw	r3,172(sp)
   14564:	d8002a15 	stw	zero,168(sp)
   14568:	d8003215 	stw	zero,200(sp)
   1456c:	dc001404 	addi	r16,sp,80
   14570:	0039883a 	mov	fp,zero
   14574:	003ec406 	br	14088 <_gp+0xfffedf5c>
   14578:	8025883a 	mov	r18,r16
   1457c:	dc002903 	ldbu	r16,164(sp)
   14580:	e011883a 	mov	r8,fp
   14584:	84003fcc 	andi	r16,r16,255
   14588:	803e8726 	beq	r16,zero,13fa8 <_gp+0xfffede7c>
   1458c:	d8c02b03 	ldbu	r3,172(sp)
   14590:	d8c02785 	stb	r3,158(sp)
   14594:	003e8406 	br	13fa8 <_gp+0xfffede7c>
   14598:	00c00044 	movi	r3,1
   1459c:	d8c02905 	stb	r3,164(sp)
   145a0:	00c00ac4 	movi	r3,43
   145a4:	d8c02b05 	stb	r3,172(sp)
   145a8:	bc400007 	ldb	r17,0(r23)
   145ac:	003d4606 	br	13ac8 <_gp+0xfffed99c>
   145b0:	84000814 	ori	r16,r16,32
   145b4:	bc400007 	ldb	r17,0(r23)
   145b8:	003d4306 	br	13ac8 <_gp+0xfffed99c>
   145bc:	d8802e17 	ldw	r2,184(sp)
   145c0:	8025883a 	mov	r18,r16
   145c4:	d8002785 	stb	zero,158(sp)
   145c8:	14000017 	ldw	r16,0(r2)
   145cc:	e011883a 	mov	r8,fp
   145d0:	15000104 	addi	r20,r2,4
   145d4:	80042126 	beq	r16,zero,1565c <___svfprintf_internal_r+0x1ce8>
   145d8:	d8c02a17 	ldw	r3,168(sp)
   145dc:	1803ee16 	blt	r3,zero,15598 <___svfprintf_internal_r+0x1c24>
   145e0:	180d883a 	mov	r6,r3
   145e4:	000b883a 	mov	r5,zero
   145e8:	8009883a 	mov	r4,r16
   145ec:	df003e15 	stw	fp,248(sp)
   145f0:	00179f00 	call	179f0 <memchr>
   145f4:	da003e17 	ldw	r8,248(sp)
   145f8:	10046a26 	beq	r2,zero,157a4 <___svfprintf_internal_r+0x1e30>
   145fc:	1405c83a 	sub	r2,r2,r16
   14600:	d8802b15 	stw	r2,172(sp)
   14604:	1003ea16 	blt	r2,zero,155b0 <___svfprintf_internal_r+0x1c3c>
   14608:	df002783 	ldbu	fp,158(sp)
   1460c:	d8802915 	stw	r2,164(sp)
   14610:	dd002e15 	stw	r20,184(sp)
   14614:	d8002a15 	stw	zero,168(sp)
   14618:	d8003215 	stw	zero,200(sp)
   1461c:	003e9306 	br	1406c <_gp+0xfffedf40>
   14620:	8025883a 	mov	r18,r16
   14624:	dc002903 	ldbu	r16,164(sp)
   14628:	e011883a 	mov	r8,fp
   1462c:	84003fcc 	andi	r16,r16,255
   14630:	803f7c26 	beq	r16,zero,14424 <_gp+0xfffee2f8>
   14634:	d8c02b03 	ldbu	r3,172(sp)
   14638:	d8c02785 	stb	r3,158(sp)
   1463c:	003f7906 	br	14424 <_gp+0xfffee2f8>
   14640:	8025883a 	mov	r18,r16
   14644:	dc002903 	ldbu	r16,164(sp)
   14648:	e011883a 	mov	r8,fp
   1464c:	84003fcc 	andi	r16,r16,255
   14650:	8005741e 	bne	r16,zero,15c24 <___svfprintf_internal_r+0x22b0>
   14654:	010000b4 	movhi	r4,2
   14658:	21359604 	addi	r4,r4,-10664
   1465c:	d9003a15 	stw	r4,232(sp)
   14660:	9080080c 	andi	r2,r18,32
   14664:	103f8e1e 	bne	r2,zero,144a0 <_gp+0xfffee374>
   14668:	9080040c 	andi	r2,r18,16
   1466c:	1002a726 	beq	r2,zero,1510c <___svfprintf_internal_r+0x1798>
   14670:	d8802e17 	ldw	r2,184(sp)
   14674:	002d883a 	mov	r22,zero
   14678:	15000017 	ldw	r20,0(r2)
   1467c:	10800104 	addi	r2,r2,4
   14680:	d8802e15 	stw	r2,184(sp)
   14684:	003f8b06 	br	144b4 <_gp+0xfffee388>
   14688:	84000054 	ori	r16,r16,1
   1468c:	bc400007 	ldb	r17,0(r23)
   14690:	003d0d06 	br	13ac8 <_gp+0xfffed99c>
   14694:	d8802b07 	ldb	r2,172(sp)
   14698:	1002a41e 	bne	r2,zero,1512c <___svfprintf_internal_r+0x17b8>
   1469c:	00c00044 	movi	r3,1
   146a0:	d8c02905 	stb	r3,164(sp)
   146a4:	00c00804 	movi	r3,32
   146a8:	d8c02b05 	stb	r3,172(sp)
   146ac:	bc400007 	ldb	r17,0(r23)
   146b0:	003d0506 	br	13ac8 <_gp+0xfffed99c>
   146b4:	8025883a 	mov	r18,r16
   146b8:	dc002903 	ldbu	r16,164(sp)
   146bc:	e011883a 	mov	r8,fp
   146c0:	84003fcc 	andi	r16,r16,255
   146c4:	803e0626 	beq	r16,zero,13ee0 <_gp+0xfffeddb4>
   146c8:	d8c02b03 	ldbu	r3,172(sp)
   146cc:	d8c02785 	stb	r3,158(sp)
   146d0:	003e0306 	br	13ee0 <_gp+0xfffeddb4>
   146d4:	bc400007 	ldb	r17,0(r23)
   146d8:	00801b04 	movi	r2,108
   146dc:	88830a26 	beq	r17,r2,15308 <___svfprintf_internal_r+0x1994>
   146e0:	84000414 	ori	r16,r16,16
   146e4:	003cf806 	br	13ac8 <_gp+0xfffed99c>
   146e8:	8025883a 	mov	r18,r16
   146ec:	dc002903 	ldbu	r16,164(sp)
   146f0:	e011883a 	mov	r8,fp
   146f4:	84003fcc 	andi	r16,r16,255
   146f8:	8005471e 	bne	r16,zero,15c18 <___svfprintf_internal_r+0x22a4>
   146fc:	9080080c 	andi	r2,r18,32
   14700:	10028c26 	beq	r2,zero,15134 <___svfprintf_internal_r+0x17c0>
   14704:	d9002e17 	ldw	r4,184(sp)
   14708:	d9402f17 	ldw	r5,188(sp)
   1470c:	20800017 	ldw	r2,0(r4)
   14710:	2807d7fa 	srai	r3,r5,31
   14714:	21000104 	addi	r4,r4,4
   14718:	d9002e15 	stw	r4,184(sp)
   1471c:	11400015 	stw	r5,0(r2)
   14720:	10c00115 	stw	r3,4(r2)
   14724:	003cbe06 	br	13a20 <_gp+0xfffed8f4>
   14728:	84001014 	ori	r16,r16,64
   1472c:	bc400007 	ldb	r17,0(r23)
   14730:	003ce506 	br	13ac8 <_gp+0xfffed99c>
   14734:	010000b4 	movhi	r4,2
   14738:	21359604 	addi	r4,r4,-10664
   1473c:	0039883a 	mov	fp,zero
   14740:	d9003a15 	stw	r4,232(sp)
   14744:	04401e04 	movi	r17,120
   14748:	003f6906 	br	144f0 <_gp+0xfffee3c4>
   1474c:	8025883a 	mov	r18,r16
   14750:	dc002903 	ldbu	r16,164(sp)
   14754:	e011883a 	mov	r8,fp
   14758:	84003fcc 	andi	r16,r16,255
   1475c:	8005261e 	bne	r16,zero,15bf8 <___svfprintf_internal_r+0x2284>
   14760:	883d6526 	beq	r17,zero,13cf8 <_gp+0xfffedbcc>
   14764:	00c00044 	movi	r3,1
   14768:	d8c02915 	stw	r3,164(sp)
   1476c:	dc401405 	stb	r17,80(sp)
   14770:	d8002785 	stb	zero,158(sp)
   14774:	003f7a06 	br	14560 <_gp+0xfffee434>
   14778:	010000b4 	movhi	r4,2
   1477c:	21359604 	addi	r4,r4,-10664
   14780:	d9003a15 	stw	r4,232(sp)
   14784:	d8c02e15 	stw	r3,184(sp)
   14788:	1025883a 	mov	r18,r2
   1478c:	04401e04 	movi	r17,120
   14790:	a584b03a 	or	r2,r20,r22
   14794:	1000fa1e 	bne	r2,zero,14b80 <___svfprintf_internal_r+0x120c>
   14798:	0039883a 	mov	fp,zero
   1479c:	00800084 	movi	r2,2
   147a0:	10803fcc 	andi	r2,r2,255
   147a4:	00c00044 	movi	r3,1
   147a8:	10c21626 	beq	r2,r3,15004 <___svfprintf_internal_r+0x1690>
   147ac:	00c00084 	movi	r3,2
   147b0:	10fe0e1e 	bne	r2,r3,13fec <_gp+0xfffedec0>
   147b4:	003d4606 	br	13cd0 <_gp+0xfffedba4>
   147b8:	d8c02017 	ldw	r3,128(sp)
   147bc:	003e7306 	br	1418c <_gp+0xfffee060>
   147c0:	00801944 	movi	r2,101
   147c4:	14407c0e 	bge	r2,r17,149b8 <___svfprintf_internal_r+0x1044>
   147c8:	d9003617 	ldw	r4,216(sp)
   147cc:	d9403717 	ldw	r5,220(sp)
   147d0:	000d883a 	mov	r6,zero
   147d4:	000f883a 	mov	r7,zero
   147d8:	d8c03d15 	stw	r3,244(sp)
   147dc:	da003e15 	stw	r8,248(sp)
   147e0:	001c0f80 	call	1c0f8 <__eqdf2>
   147e4:	d8c03d17 	ldw	r3,244(sp)
   147e8:	da003e17 	ldw	r8,248(sp)
   147ec:	1000f51e 	bne	r2,zero,14bc4 <___svfprintf_internal_r+0x1250>
   147f0:	d8801f17 	ldw	r2,124(sp)
   147f4:	010000b4 	movhi	r4,2
   147f8:	21359d04 	addi	r4,r4,-10636
   147fc:	18c00044 	addi	r3,r3,1
   14800:	10800044 	addi	r2,r2,1
   14804:	41000015 	stw	r4,0(r8)
   14808:	01000044 	movi	r4,1
   1480c:	41000115 	stw	r4,4(r8)
   14810:	d8c02015 	stw	r3,128(sp)
   14814:	d8801f15 	stw	r2,124(sp)
   14818:	010001c4 	movi	r4,7
   1481c:	20826616 	blt	r4,r2,151b8 <___svfprintf_internal_r+0x1844>
   14820:	42000204 	addi	r8,r8,8
   14824:	d8802617 	ldw	r2,152(sp)
   14828:	d9403317 	ldw	r5,204(sp)
   1482c:	11400216 	blt	r2,r5,14838 <___svfprintf_internal_r+0xec4>
   14830:	9080004c 	andi	r2,r18,1
   14834:	103eb326 	beq	r2,zero,14304 <_gp+0xfffee1d8>
   14838:	d8803817 	ldw	r2,224(sp)
   1483c:	d9003417 	ldw	r4,208(sp)
   14840:	d9403817 	ldw	r5,224(sp)
   14844:	1887883a 	add	r3,r3,r2
   14848:	d8801f17 	ldw	r2,124(sp)
   1484c:	41000015 	stw	r4,0(r8)
   14850:	41400115 	stw	r5,4(r8)
   14854:	10800044 	addi	r2,r2,1
   14858:	d8c02015 	stw	r3,128(sp)
   1485c:	d8801f15 	stw	r2,124(sp)
   14860:	010001c4 	movi	r4,7
   14864:	2082af16 	blt	r4,r2,15324 <___svfprintf_internal_r+0x19b0>
   14868:	42000204 	addi	r8,r8,8
   1486c:	d8803317 	ldw	r2,204(sp)
   14870:	143fffc4 	addi	r16,r2,-1
   14874:	043ea30e 	bge	zero,r16,14304 <_gp+0xfffee1d8>
   14878:	04400404 	movi	r17,16
   1487c:	d8801f17 	ldw	r2,124(sp)
   14880:	8c00860e 	bge	r17,r16,14a9c <___svfprintf_internal_r+0x1128>
   14884:	014000b4 	movhi	r5,2
   14888:	29759d84 	addi	r5,r5,-10634
   1488c:	d9402c15 	stw	r5,176(sp)
   14890:	058001c4 	movi	r22,7
   14894:	dd002d17 	ldw	r20,180(sp)
   14898:	00000306 	br	148a8 <___svfprintf_internal_r+0xf34>
   1489c:	42000204 	addi	r8,r8,8
   148a0:	843ffc04 	addi	r16,r16,-16
   148a4:	8c00800e 	bge	r17,r16,14aa8 <___svfprintf_internal_r+0x1134>
   148a8:	18c00404 	addi	r3,r3,16
   148ac:	10800044 	addi	r2,r2,1
   148b0:	45400015 	stw	r21,0(r8)
   148b4:	44400115 	stw	r17,4(r8)
   148b8:	d8c02015 	stw	r3,128(sp)
   148bc:	d8801f15 	stw	r2,124(sp)
   148c0:	b0bff60e 	bge	r22,r2,1489c <_gp+0xfffee770>
   148c4:	d9801e04 	addi	r6,sp,120
   148c8:	a00b883a 	mov	r5,r20
   148cc:	9809883a 	mov	r4,r19
   148d0:	0018e5c0 	call	18e5c <__ssprint_r>
   148d4:	103d0e1e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   148d8:	d8c02017 	ldw	r3,128(sp)
   148dc:	d8801f17 	ldw	r2,124(sp)
   148e0:	da000404 	addi	r8,sp,16
   148e4:	003fee06 	br	148a0 <_gp+0xfffee774>
   148e8:	d9403117 	ldw	r5,196(sp)
   148ec:	d8802917 	ldw	r2,164(sp)
   148f0:	28adc83a 	sub	r22,r5,r2
   148f4:	05be430e 	bge	zero,r22,14204 <_gp+0xfffee0d8>
   148f8:	07000404 	movi	fp,16
   148fc:	d8801f17 	ldw	r2,124(sp)
   14900:	e583a20e 	bge	fp,r22,1578c <___svfprintf_internal_r+0x1e18>
   14904:	014000b4 	movhi	r5,2
   14908:	29759d84 	addi	r5,r5,-10634
   1490c:	dc403015 	stw	r17,192(sp)
   14910:	d9402c15 	stw	r5,176(sp)
   14914:	b023883a 	mov	r17,r22
   14918:	050001c4 	movi	r20,7
   1491c:	902d883a 	mov	r22,r18
   14920:	8025883a 	mov	r18,r16
   14924:	dc002d17 	ldw	r16,180(sp)
   14928:	00000306 	br	14938 <___svfprintf_internal_r+0xfc4>
   1492c:	8c7ffc04 	addi	r17,r17,-16
   14930:	42000204 	addi	r8,r8,8
   14934:	e440110e 	bge	fp,r17,1497c <___svfprintf_internal_r+0x1008>
   14938:	18c00404 	addi	r3,r3,16
   1493c:	10800044 	addi	r2,r2,1
   14940:	45400015 	stw	r21,0(r8)
   14944:	47000115 	stw	fp,4(r8)
   14948:	d8c02015 	stw	r3,128(sp)
   1494c:	d8801f15 	stw	r2,124(sp)
   14950:	a0bff60e 	bge	r20,r2,1492c <_gp+0xfffee800>
   14954:	d9801e04 	addi	r6,sp,120
   14958:	800b883a 	mov	r5,r16
   1495c:	9809883a 	mov	r4,r19
   14960:	0018e5c0 	call	18e5c <__ssprint_r>
   14964:	103cea1e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14968:	8c7ffc04 	addi	r17,r17,-16
   1496c:	d8c02017 	ldw	r3,128(sp)
   14970:	d8801f17 	ldw	r2,124(sp)
   14974:	da000404 	addi	r8,sp,16
   14978:	e47fef16 	blt	fp,r17,14938 <_gp+0xfffee80c>
   1497c:	9021883a 	mov	r16,r18
   14980:	b025883a 	mov	r18,r22
   14984:	882d883a 	mov	r22,r17
   14988:	dc403017 	ldw	r17,192(sp)
   1498c:	d9002c17 	ldw	r4,176(sp)
   14990:	1d87883a 	add	r3,r3,r22
   14994:	10800044 	addi	r2,r2,1
   14998:	41000015 	stw	r4,0(r8)
   1499c:	45800115 	stw	r22,4(r8)
   149a0:	d8c02015 	stw	r3,128(sp)
   149a4:	d8801f15 	stw	r2,124(sp)
   149a8:	010001c4 	movi	r4,7
   149ac:	20819a16 	blt	r4,r2,15018 <___svfprintf_internal_r+0x16a4>
   149b0:	42000204 	addi	r8,r8,8
   149b4:	003e1306 	br	14204 <_gp+0xfffee0d8>
   149b8:	d9403317 	ldw	r5,204(sp)
   149bc:	00800044 	movi	r2,1
   149c0:	18c00044 	addi	r3,r3,1
   149c4:	1141710e 	bge	r2,r5,14f8c <___svfprintf_internal_r+0x1618>
   149c8:	dc401f17 	ldw	r17,124(sp)
   149cc:	00800044 	movi	r2,1
   149d0:	40800115 	stw	r2,4(r8)
   149d4:	8c400044 	addi	r17,r17,1
   149d8:	44000015 	stw	r16,0(r8)
   149dc:	d8c02015 	stw	r3,128(sp)
   149e0:	dc401f15 	stw	r17,124(sp)
   149e4:	008001c4 	movi	r2,7
   149e8:	14417416 	blt	r2,r17,14fbc <___svfprintf_internal_r+0x1648>
   149ec:	42000204 	addi	r8,r8,8
   149f0:	d8803817 	ldw	r2,224(sp)
   149f4:	d9003417 	ldw	r4,208(sp)
   149f8:	8c400044 	addi	r17,r17,1
   149fc:	10c7883a 	add	r3,r2,r3
   14a00:	40800115 	stw	r2,4(r8)
   14a04:	41000015 	stw	r4,0(r8)
   14a08:	d8c02015 	stw	r3,128(sp)
   14a0c:	dc401f15 	stw	r17,124(sp)
   14a10:	008001c4 	movi	r2,7
   14a14:	14417216 	blt	r2,r17,14fe0 <___svfprintf_internal_r+0x166c>
   14a18:	45800204 	addi	r22,r8,8
   14a1c:	d9003617 	ldw	r4,216(sp)
   14a20:	d9403717 	ldw	r5,220(sp)
   14a24:	000d883a 	mov	r6,zero
   14a28:	000f883a 	mov	r7,zero
   14a2c:	d8c03d15 	stw	r3,244(sp)
   14a30:	001c0f80 	call	1c0f8 <__eqdf2>
   14a34:	d8c03d17 	ldw	r3,244(sp)
   14a38:	1000b326 	beq	r2,zero,14d08 <___svfprintf_internal_r+0x1394>
   14a3c:	d9403317 	ldw	r5,204(sp)
   14a40:	84000044 	addi	r16,r16,1
   14a44:	8c400044 	addi	r17,r17,1
   14a48:	28bfffc4 	addi	r2,r5,-1
   14a4c:	1887883a 	add	r3,r3,r2
   14a50:	b0800115 	stw	r2,4(r22)
   14a54:	b4000015 	stw	r16,0(r22)
   14a58:	d8c02015 	stw	r3,128(sp)
   14a5c:	dc401f15 	stw	r17,124(sp)
   14a60:	008001c4 	movi	r2,7
   14a64:	1440d216 	blt	r2,r17,14db0 <___svfprintf_internal_r+0x143c>
   14a68:	b5800204 	addi	r22,r22,8
   14a6c:	d9003b17 	ldw	r4,236(sp)
   14a70:	df0022c4 	addi	fp,sp,139
   14a74:	8c400044 	addi	r17,r17,1
   14a78:	20c7883a 	add	r3,r4,r3
   14a7c:	b7000015 	stw	fp,0(r22)
   14a80:	b1000115 	stw	r4,4(r22)
   14a84:	d8c02015 	stw	r3,128(sp)
   14a88:	dc401f15 	stw	r17,124(sp)
   14a8c:	008001c4 	movi	r2,7
   14a90:	14400e16 	blt	r2,r17,14acc <___svfprintf_internal_r+0x1158>
   14a94:	b2000204 	addi	r8,r22,8
   14a98:	003e1a06 	br	14304 <_gp+0xfffee1d8>
   14a9c:	010000b4 	movhi	r4,2
   14aa0:	21359d84 	addi	r4,r4,-10634
   14aa4:	d9002c15 	stw	r4,176(sp)
   14aa8:	d9002c17 	ldw	r4,176(sp)
   14aac:	1c07883a 	add	r3,r3,r16
   14ab0:	44000115 	stw	r16,4(r8)
   14ab4:	41000015 	stw	r4,0(r8)
   14ab8:	10800044 	addi	r2,r2,1
   14abc:	d8c02015 	stw	r3,128(sp)
   14ac0:	d8801f15 	stw	r2,124(sp)
   14ac4:	010001c4 	movi	r4,7
   14ac8:	20be0d0e 	bge	r4,r2,14300 <_gp+0xfffee1d4>
   14acc:	d9402d17 	ldw	r5,180(sp)
   14ad0:	d9801e04 	addi	r6,sp,120
   14ad4:	9809883a 	mov	r4,r19
   14ad8:	0018e5c0 	call	18e5c <__ssprint_r>
   14adc:	103c8c1e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14ae0:	d8c02017 	ldw	r3,128(sp)
   14ae4:	da000404 	addi	r8,sp,16
   14ae8:	003e0606 	br	14304 <_gp+0xfffee1d8>
   14aec:	d9402d17 	ldw	r5,180(sp)
   14af0:	d9801e04 	addi	r6,sp,120
   14af4:	9809883a 	mov	r4,r19
   14af8:	0018e5c0 	call	18e5c <__ssprint_r>
   14afc:	103e3d26 	beq	r2,zero,143f4 <_gp+0xfffee2c8>
   14b00:	003c8306 	br	13d10 <_gp+0xfffedbe4>
   14b04:	d9402d17 	ldw	r5,180(sp)
   14b08:	d9801e04 	addi	r6,sp,120
   14b0c:	9809883a 	mov	r4,r19
   14b10:	0018e5c0 	call	18e5c <__ssprint_r>
   14b14:	103c7e1e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14b18:	d8c02017 	ldw	r3,128(sp)
   14b1c:	da000404 	addi	r8,sp,16
   14b20:	003deb06 	br	142d0 <_gp+0xfffee1a4>
   14b24:	d9402d17 	ldw	r5,180(sp)
   14b28:	d9801e04 	addi	r6,sp,120
   14b2c:	9809883a 	mov	r4,r19
   14b30:	0018e5c0 	call	18e5c <__ssprint_r>
   14b34:	103c761e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14b38:	d8c02017 	ldw	r3,128(sp)
   14b3c:	da000404 	addi	r8,sp,16
   14b40:	003d9f06 	br	141c0 <_gp+0xfffee094>
   14b44:	d9402d17 	ldw	r5,180(sp)
   14b48:	d9801e04 	addi	r6,sp,120
   14b4c:	9809883a 	mov	r4,r19
   14b50:	0018e5c0 	call	18e5c <__ssprint_r>
   14b54:	103c6e1e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14b58:	d8c02017 	ldw	r3,128(sp)
   14b5c:	da000404 	addi	r8,sp,16
   14b60:	003da506 	br	141f8 <_gp+0xfffee0cc>
   14b64:	d9402a17 	ldw	r5,168(sp)
   14b68:	d8002785 	stb	zero,158(sp)
   14b6c:	283f0816 	blt	r5,zero,14790 <_gp+0xfffee664>
   14b70:	00ffdfc4 	movi	r3,-129
   14b74:	a584b03a 	or	r2,r20,r22
   14b78:	90e4703a 	and	r18,r18,r3
   14b7c:	103c5126 	beq	r2,zero,13cc4 <_gp+0xfffedb98>
   14b80:	0039883a 	mov	fp,zero
   14b84:	003e5a06 	br	144f0 <_gp+0xfffee3c4>
   14b88:	9080040c 	andi	r2,r18,16
   14b8c:	10013d26 	beq	r2,zero,15084 <___svfprintf_internal_r+0x1710>
   14b90:	d8c02e17 	ldw	r3,184(sp)
   14b94:	d9002a17 	ldw	r4,168(sp)
   14b98:	d8002785 	stb	zero,158(sp)
   14b9c:	18800104 	addi	r2,r3,4
   14ba0:	1d000017 	ldw	r20,0(r3)
   14ba4:	002d883a 	mov	r22,zero
   14ba8:	20013f16 	blt	r4,zero,150a8 <___svfprintf_internal_r+0x1734>
   14bac:	00ffdfc4 	movi	r3,-129
   14bb0:	d8802e15 	stw	r2,184(sp)
   14bb4:	90e4703a 	and	r18,r18,r3
   14bb8:	a03d0926 	beq	r20,zero,13fe0 <_gp+0xfffedeb4>
   14bbc:	0039883a 	mov	fp,zero
   14bc0:	003d0c06 	br	13ff4 <_gp+0xfffedec8>
   14bc4:	dc402617 	ldw	r17,152(sp)
   14bc8:	0441830e 	bge	zero,r17,151d8 <___svfprintf_internal_r+0x1864>
   14bcc:	dc403217 	ldw	r17,200(sp)
   14bd0:	d8803317 	ldw	r2,204(sp)
   14bd4:	1440010e 	bge	r2,r17,14bdc <___svfprintf_internal_r+0x1268>
   14bd8:	1023883a 	mov	r17,r2
   14bdc:	04400a0e 	bge	zero,r17,14c08 <___svfprintf_internal_r+0x1294>
   14be0:	d8801f17 	ldw	r2,124(sp)
   14be4:	1c47883a 	add	r3,r3,r17
   14be8:	44000015 	stw	r16,0(r8)
   14bec:	10800044 	addi	r2,r2,1
   14bf0:	44400115 	stw	r17,4(r8)
   14bf4:	d8c02015 	stw	r3,128(sp)
   14bf8:	d8801f15 	stw	r2,124(sp)
   14bfc:	010001c4 	movi	r4,7
   14c00:	20827516 	blt	r4,r2,155d8 <___svfprintf_internal_r+0x1c64>
   14c04:	42000204 	addi	r8,r8,8
   14c08:	88027b16 	blt	r17,zero,155f8 <___svfprintf_internal_r+0x1c84>
   14c0c:	d9003217 	ldw	r4,200(sp)
   14c10:	2463c83a 	sub	r17,r4,r17
   14c14:	0440990e 	bge	zero,r17,14e7c <___svfprintf_internal_r+0x1508>
   14c18:	05800404 	movi	r22,16
   14c1c:	d8801f17 	ldw	r2,124(sp)
   14c20:	b441530e 	bge	r22,r17,15170 <___svfprintf_internal_r+0x17fc>
   14c24:	010000b4 	movhi	r4,2
   14c28:	21359d84 	addi	r4,r4,-10634
   14c2c:	d9002c15 	stw	r4,176(sp)
   14c30:	070001c4 	movi	fp,7
   14c34:	dd002d17 	ldw	r20,180(sp)
   14c38:	00000306 	br	14c48 <___svfprintf_internal_r+0x12d4>
   14c3c:	42000204 	addi	r8,r8,8
   14c40:	8c7ffc04 	addi	r17,r17,-16
   14c44:	b4414d0e 	bge	r22,r17,1517c <___svfprintf_internal_r+0x1808>
   14c48:	18c00404 	addi	r3,r3,16
   14c4c:	10800044 	addi	r2,r2,1
   14c50:	45400015 	stw	r21,0(r8)
   14c54:	45800115 	stw	r22,4(r8)
   14c58:	d8c02015 	stw	r3,128(sp)
   14c5c:	d8801f15 	stw	r2,124(sp)
   14c60:	e0bff60e 	bge	fp,r2,14c3c <_gp+0xfffeeb10>
   14c64:	d9801e04 	addi	r6,sp,120
   14c68:	a00b883a 	mov	r5,r20
   14c6c:	9809883a 	mov	r4,r19
   14c70:	0018e5c0 	call	18e5c <__ssprint_r>
   14c74:	103c261e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14c78:	d8c02017 	ldw	r3,128(sp)
   14c7c:	d8801f17 	ldw	r2,124(sp)
   14c80:	da000404 	addi	r8,sp,16
   14c84:	003fee06 	br	14c40 <_gp+0xfffeeb14>
   14c88:	d9402d17 	ldw	r5,180(sp)
   14c8c:	d9801e04 	addi	r6,sp,120
   14c90:	9809883a 	mov	r4,r19
   14c94:	0018e5c0 	call	18e5c <__ssprint_r>
   14c98:	103c1d1e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14c9c:	d8c02017 	ldw	r3,128(sp)
   14ca0:	df002787 	ldb	fp,158(sp)
   14ca4:	da000404 	addi	r8,sp,16
   14ca8:	003d3806 	br	1418c <_gp+0xfffee060>
   14cac:	9080040c 	andi	r2,r18,16
   14cb0:	10005c26 	beq	r2,zero,14e24 <___svfprintf_internal_r+0x14b0>
   14cb4:	d8c02e17 	ldw	r3,184(sp)
   14cb8:	d9002a17 	ldw	r4,168(sp)
   14cbc:	d8002785 	stb	zero,158(sp)
   14cc0:	18800104 	addi	r2,r3,4
   14cc4:	1d000017 	ldw	r20,0(r3)
   14cc8:	002d883a 	mov	r22,zero
   14ccc:	20005e16 	blt	r4,zero,14e48 <___svfprintf_internal_r+0x14d4>
   14cd0:	00ffdfc4 	movi	r3,-129
   14cd4:	d8802e15 	stw	r2,184(sp)
   14cd8:	90e4703a 	and	r18,r18,r3
   14cdc:	0039883a 	mov	fp,zero
   14ce0:	a03ddf26 	beq	r20,zero,14460 <_gp+0xfffee334>
   14ce4:	00800244 	movi	r2,9
   14ce8:	153c8e36 	bltu	r2,r20,13f24 <_gp+0xfffeddf8>
   14cec:	a5000c04 	addi	r20,r20,48
   14cf0:	dc001dc4 	addi	r16,sp,119
   14cf4:	dd001dc5 	stb	r20,119(sp)
   14cf8:	d8c02817 	ldw	r3,160(sp)
   14cfc:	1c07c83a 	sub	r3,r3,r16
   14d00:	d8c02b15 	stw	r3,172(sp)
   14d04:	003cd306 	br	14054 <_gp+0xfffedf28>
   14d08:	d8803317 	ldw	r2,204(sp)
   14d0c:	143fffc4 	addi	r16,r2,-1
   14d10:	043f560e 	bge	zero,r16,14a6c <_gp+0xfffee940>
   14d14:	07000404 	movi	fp,16
   14d18:	e403530e 	bge	fp,r16,15a68 <___svfprintf_internal_r+0x20f4>
   14d1c:	014000b4 	movhi	r5,2
   14d20:	29759d84 	addi	r5,r5,-10634
   14d24:	d9402c15 	stw	r5,176(sp)
   14d28:	01c001c4 	movi	r7,7
   14d2c:	dd002d17 	ldw	r20,180(sp)
   14d30:	00000306 	br	14d40 <___svfprintf_internal_r+0x13cc>
   14d34:	843ffc04 	addi	r16,r16,-16
   14d38:	b5800204 	addi	r22,r22,8
   14d3c:	e400130e 	bge	fp,r16,14d8c <___svfprintf_internal_r+0x1418>
   14d40:	18c00404 	addi	r3,r3,16
   14d44:	8c400044 	addi	r17,r17,1
   14d48:	b5400015 	stw	r21,0(r22)
   14d4c:	b7000115 	stw	fp,4(r22)
   14d50:	d8c02015 	stw	r3,128(sp)
   14d54:	dc401f15 	stw	r17,124(sp)
   14d58:	3c7ff60e 	bge	r7,r17,14d34 <_gp+0xfffeec08>
   14d5c:	d9801e04 	addi	r6,sp,120
   14d60:	a00b883a 	mov	r5,r20
   14d64:	9809883a 	mov	r4,r19
   14d68:	d9c03d15 	stw	r7,244(sp)
   14d6c:	0018e5c0 	call	18e5c <__ssprint_r>
   14d70:	d9c03d17 	ldw	r7,244(sp)
   14d74:	103be61e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14d78:	843ffc04 	addi	r16,r16,-16
   14d7c:	d8c02017 	ldw	r3,128(sp)
   14d80:	dc401f17 	ldw	r17,124(sp)
   14d84:	dd800404 	addi	r22,sp,16
   14d88:	e43fed16 	blt	fp,r16,14d40 <_gp+0xfffeec14>
   14d8c:	d8802c17 	ldw	r2,176(sp)
   14d90:	1c07883a 	add	r3,r3,r16
   14d94:	8c400044 	addi	r17,r17,1
   14d98:	b0800015 	stw	r2,0(r22)
   14d9c:	b4000115 	stw	r16,4(r22)
   14da0:	d8c02015 	stw	r3,128(sp)
   14da4:	dc401f15 	stw	r17,124(sp)
   14da8:	008001c4 	movi	r2,7
   14dac:	147f2e0e 	bge	r2,r17,14a68 <_gp+0xfffee93c>
   14db0:	d9402d17 	ldw	r5,180(sp)
   14db4:	d9801e04 	addi	r6,sp,120
   14db8:	9809883a 	mov	r4,r19
   14dbc:	0018e5c0 	call	18e5c <__ssprint_r>
   14dc0:	103bd31e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14dc4:	d8c02017 	ldw	r3,128(sp)
   14dc8:	dc401f17 	ldw	r17,124(sp)
   14dcc:	dd800404 	addi	r22,sp,16
   14dd0:	003f2606 	br	14a6c <_gp+0xfffee940>
   14dd4:	9080040c 	andi	r2,r18,16
   14dd8:	1000c326 	beq	r2,zero,150e8 <___svfprintf_internal_r+0x1774>
   14ddc:	d9402e17 	ldw	r5,184(sp)
   14de0:	2d000017 	ldw	r20,0(r5)
   14de4:	29400104 	addi	r5,r5,4
   14de8:	d9402e15 	stw	r5,184(sp)
   14dec:	a02dd7fa 	srai	r22,r20,31
   14df0:	b005883a 	mov	r2,r22
   14df4:	103c430e 	bge	r2,zero,13f04 <_gp+0xfffeddd8>
   14df8:	d9402a17 	ldw	r5,168(sp)
   14dfc:	0529c83a 	sub	r20,zero,r20
   14e00:	07000b44 	movi	fp,45
   14e04:	a004c03a 	cmpne	r2,r20,zero
   14e08:	05adc83a 	sub	r22,zero,r22
   14e0c:	df002785 	stb	fp,158(sp)
   14e10:	b0adc83a 	sub	r22,r22,r2
   14e14:	28022e16 	blt	r5,zero,156d0 <___svfprintf_internal_r+0x1d5c>
   14e18:	00bfdfc4 	movi	r2,-129
   14e1c:	90a4703a 	and	r18,r18,r2
   14e20:	003c3f06 	br	13f20 <_gp+0xfffeddf4>
   14e24:	9080100c 	andi	r2,r18,64
   14e28:	d8002785 	stb	zero,158(sp)
   14e2c:	10012526 	beq	r2,zero,152c4 <___svfprintf_internal_r+0x1950>
   14e30:	d9402e17 	ldw	r5,184(sp)
   14e34:	d8c02a17 	ldw	r3,168(sp)
   14e38:	002d883a 	mov	r22,zero
   14e3c:	28800104 	addi	r2,r5,4
   14e40:	2d00000b 	ldhu	r20,0(r5)
   14e44:	183fa20e 	bge	r3,zero,14cd0 <_gp+0xfffeeba4>
   14e48:	d8802e15 	stw	r2,184(sp)
   14e4c:	0039883a 	mov	fp,zero
   14e50:	a584b03a 	or	r2,r20,r22
   14e54:	103c321e 	bne	r2,zero,13f20 <_gp+0xfffeddf4>
   14e58:	00800044 	movi	r2,1
   14e5c:	003e5006 	br	147a0 <_gp+0xfffee674>
   14e60:	d9402d17 	ldw	r5,180(sp)
   14e64:	d9801e04 	addi	r6,sp,120
   14e68:	9809883a 	mov	r4,r19
   14e6c:	0018e5c0 	call	18e5c <__ssprint_r>
   14e70:	103ba71e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14e74:	d8c02017 	ldw	r3,128(sp)
   14e78:	da000404 	addi	r8,sp,16
   14e7c:	d9003217 	ldw	r4,200(sp)
   14e80:	d8802617 	ldw	r2,152(sp)
   14e84:	d9403317 	ldw	r5,204(sp)
   14e88:	8123883a 	add	r17,r16,r4
   14e8c:	11400216 	blt	r2,r5,14e98 <___svfprintf_internal_r+0x1524>
   14e90:	9100004c 	andi	r4,r18,1
   14e94:	20000d26 	beq	r4,zero,14ecc <___svfprintf_internal_r+0x1558>
   14e98:	d9003817 	ldw	r4,224(sp)
   14e9c:	d9403417 	ldw	r5,208(sp)
   14ea0:	1907883a 	add	r3,r3,r4
   14ea4:	d9001f17 	ldw	r4,124(sp)
   14ea8:	41400015 	stw	r5,0(r8)
   14eac:	d9403817 	ldw	r5,224(sp)
   14eb0:	21000044 	addi	r4,r4,1
   14eb4:	d8c02015 	stw	r3,128(sp)
   14eb8:	41400115 	stw	r5,4(r8)
   14ebc:	d9001f15 	stw	r4,124(sp)
   14ec0:	014001c4 	movi	r5,7
   14ec4:	2901dc16 	blt	r5,r4,15638 <___svfprintf_internal_r+0x1cc4>
   14ec8:	42000204 	addi	r8,r8,8
   14ecc:	d9003317 	ldw	r4,204(sp)
   14ed0:	8121883a 	add	r16,r16,r4
   14ed4:	2085c83a 	sub	r2,r4,r2
   14ed8:	8461c83a 	sub	r16,r16,r17
   14edc:	1400010e 	bge	r2,r16,14ee4 <___svfprintf_internal_r+0x1570>
   14ee0:	1021883a 	mov	r16,r2
   14ee4:	04000a0e 	bge	zero,r16,14f10 <___svfprintf_internal_r+0x159c>
   14ee8:	d9001f17 	ldw	r4,124(sp)
   14eec:	1c07883a 	add	r3,r3,r16
   14ef0:	44400015 	stw	r17,0(r8)
   14ef4:	21000044 	addi	r4,r4,1
   14ef8:	44000115 	stw	r16,4(r8)
   14efc:	d8c02015 	stw	r3,128(sp)
   14f00:	d9001f15 	stw	r4,124(sp)
   14f04:	014001c4 	movi	r5,7
   14f08:	2901e616 	blt	r5,r4,156a4 <___svfprintf_internal_r+0x1d30>
   14f0c:	42000204 	addi	r8,r8,8
   14f10:	8001f616 	blt	r16,zero,156ec <___svfprintf_internal_r+0x1d78>
   14f14:	1421c83a 	sub	r16,r2,r16
   14f18:	043cfa0e 	bge	zero,r16,14304 <_gp+0xfffee1d8>
   14f1c:	04400404 	movi	r17,16
   14f20:	d8801f17 	ldw	r2,124(sp)
   14f24:	8c3edd0e 	bge	r17,r16,14a9c <_gp+0xfffee970>
   14f28:	014000b4 	movhi	r5,2
   14f2c:	29759d84 	addi	r5,r5,-10634
   14f30:	d9402c15 	stw	r5,176(sp)
   14f34:	058001c4 	movi	r22,7
   14f38:	dd002d17 	ldw	r20,180(sp)
   14f3c:	00000306 	br	14f4c <___svfprintf_internal_r+0x15d8>
   14f40:	42000204 	addi	r8,r8,8
   14f44:	843ffc04 	addi	r16,r16,-16
   14f48:	8c3ed70e 	bge	r17,r16,14aa8 <_gp+0xfffee97c>
   14f4c:	18c00404 	addi	r3,r3,16
   14f50:	10800044 	addi	r2,r2,1
   14f54:	45400015 	stw	r21,0(r8)
   14f58:	44400115 	stw	r17,4(r8)
   14f5c:	d8c02015 	stw	r3,128(sp)
   14f60:	d8801f15 	stw	r2,124(sp)
   14f64:	b0bff60e 	bge	r22,r2,14f40 <_gp+0xfffeee14>
   14f68:	d9801e04 	addi	r6,sp,120
   14f6c:	a00b883a 	mov	r5,r20
   14f70:	9809883a 	mov	r4,r19
   14f74:	0018e5c0 	call	18e5c <__ssprint_r>
   14f78:	103b651e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14f7c:	d8c02017 	ldw	r3,128(sp)
   14f80:	d8801f17 	ldw	r2,124(sp)
   14f84:	da000404 	addi	r8,sp,16
   14f88:	003fee06 	br	14f44 <_gp+0xfffeee18>
   14f8c:	9088703a 	and	r4,r18,r2
   14f90:	203e8d1e 	bne	r4,zero,149c8 <_gp+0xfffee89c>
   14f94:	dc401f17 	ldw	r17,124(sp)
   14f98:	40800115 	stw	r2,4(r8)
   14f9c:	44000015 	stw	r16,0(r8)
   14fa0:	8c400044 	addi	r17,r17,1
   14fa4:	d8c02015 	stw	r3,128(sp)
   14fa8:	dc401f15 	stw	r17,124(sp)
   14fac:	008001c4 	movi	r2,7
   14fb0:	147f7f16 	blt	r2,r17,14db0 <_gp+0xfffeec84>
   14fb4:	45800204 	addi	r22,r8,8
   14fb8:	003eac06 	br	14a6c <_gp+0xfffee940>
   14fbc:	d9402d17 	ldw	r5,180(sp)
   14fc0:	d9801e04 	addi	r6,sp,120
   14fc4:	9809883a 	mov	r4,r19
   14fc8:	0018e5c0 	call	18e5c <__ssprint_r>
   14fcc:	103b501e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14fd0:	d8c02017 	ldw	r3,128(sp)
   14fd4:	dc401f17 	ldw	r17,124(sp)
   14fd8:	da000404 	addi	r8,sp,16
   14fdc:	003e8406 	br	149f0 <_gp+0xfffee8c4>
   14fe0:	d9402d17 	ldw	r5,180(sp)
   14fe4:	d9801e04 	addi	r6,sp,120
   14fe8:	9809883a 	mov	r4,r19
   14fec:	0018e5c0 	call	18e5c <__ssprint_r>
   14ff0:	103b471e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   14ff4:	d8c02017 	ldw	r3,128(sp)
   14ff8:	dc401f17 	ldw	r17,124(sp)
   14ffc:	dd800404 	addi	r22,sp,16
   15000:	003e8606 	br	14a1c <_gp+0xfffee8f0>
   15004:	0029883a 	mov	r20,zero
   15008:	a5000c04 	addi	r20,r20,48
   1500c:	dc001dc4 	addi	r16,sp,119
   15010:	dd001dc5 	stb	r20,119(sp)
   15014:	003f3806 	br	14cf8 <_gp+0xfffeebcc>
   15018:	d9402d17 	ldw	r5,180(sp)
   1501c:	d9801e04 	addi	r6,sp,120
   15020:	9809883a 	mov	r4,r19
   15024:	0018e5c0 	call	18e5c <__ssprint_r>
   15028:	103b391e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   1502c:	d8c02017 	ldw	r3,128(sp)
   15030:	da000404 	addi	r8,sp,16
   15034:	003c7306 	br	14204 <_gp+0xfffee0d8>
   15038:	d9003617 	ldw	r4,216(sp)
   1503c:	d9403717 	ldw	r5,220(sp)
   15040:	da003e15 	stw	r8,248(sp)
   15044:	0018d500 	call	18d50 <__fpclassifyd>
   15048:	da003e17 	ldw	r8,248(sp)
   1504c:	1000bd1e 	bne	r2,zero,15344 <___svfprintf_internal_r+0x19d0>
   15050:	008011c4 	movi	r2,71
   15054:	14411e0e 	bge	r2,r17,154d0 <___svfprintf_internal_r+0x1b5c>
   15058:	040000b4 	movhi	r16,2
   1505c:	84359004 	addi	r16,r16,-10688
   15060:	00c000c4 	movi	r3,3
   15064:	00bfdfc4 	movi	r2,-129
   15068:	d8c02915 	stw	r3,164(sp)
   1506c:	90a4703a 	and	r18,r18,r2
   15070:	df002783 	ldbu	fp,158(sp)
   15074:	d8c02b15 	stw	r3,172(sp)
   15078:	d8002a15 	stw	zero,168(sp)
   1507c:	d8003215 	stw	zero,200(sp)
   15080:	003bfa06 	br	1406c <_gp+0xfffedf40>
   15084:	9080100c 	andi	r2,r18,64
   15088:	d8002785 	stb	zero,158(sp)
   1508c:	10009426 	beq	r2,zero,152e0 <___svfprintf_internal_r+0x196c>
   15090:	d9402e17 	ldw	r5,184(sp)
   15094:	d8c02a17 	ldw	r3,168(sp)
   15098:	002d883a 	mov	r22,zero
   1509c:	28800104 	addi	r2,r5,4
   150a0:	2d00000b 	ldhu	r20,0(r5)
   150a4:	183ec10e 	bge	r3,zero,14bac <_gp+0xfffeea80>
   150a8:	a586b03a 	or	r3,r20,r22
   150ac:	d8802e15 	stw	r2,184(sp)
   150b0:	183ec21e 	bne	r3,zero,14bbc <_gp+0xfffeea90>
   150b4:	0039883a 	mov	fp,zero
   150b8:	0005883a 	mov	r2,zero
   150bc:	003db806 	br	147a0 <_gp+0xfffee674>
   150c0:	d8c02e17 	ldw	r3,184(sp)
   150c4:	d9002e17 	ldw	r4,184(sp)
   150c8:	d9402e17 	ldw	r5,184(sp)
   150cc:	18c00017 	ldw	r3,0(r3)
   150d0:	21000117 	ldw	r4,4(r4)
   150d4:	29400204 	addi	r5,r5,8
   150d8:	d8c03615 	stw	r3,216(sp)
   150dc:	d9003715 	stw	r4,220(sp)
   150e0:	d9402e15 	stw	r5,184(sp)
   150e4:	003b5a06 	br	13e50 <_gp+0xfffedd24>
   150e8:	9080100c 	andi	r2,r18,64
   150ec:	10010726 	beq	r2,zero,1550c <___svfprintf_internal_r+0x1b98>
   150f0:	d8802e17 	ldw	r2,184(sp)
   150f4:	1500000f 	ldh	r20,0(r2)
   150f8:	10800104 	addi	r2,r2,4
   150fc:	d8802e15 	stw	r2,184(sp)
   15100:	a02dd7fa 	srai	r22,r20,31
   15104:	b005883a 	mov	r2,r22
   15108:	003b7d06 	br	13f00 <_gp+0xfffeddd4>
   1510c:	9080100c 	andi	r2,r18,64
   15110:	10010526 	beq	r2,zero,15528 <___svfprintf_internal_r+0x1bb4>
   15114:	d8c02e17 	ldw	r3,184(sp)
   15118:	002d883a 	mov	r22,zero
   1511c:	1d00000b 	ldhu	r20,0(r3)
   15120:	18c00104 	addi	r3,r3,4
   15124:	d8c02e15 	stw	r3,184(sp)
   15128:	003ce206 	br	144b4 <_gp+0xfffee388>
   1512c:	bc400007 	ldb	r17,0(r23)
   15130:	003a6506 	br	13ac8 <_gp+0xfffed99c>
   15134:	9080040c 	andi	r2,r18,16
   15138:	10010126 	beq	r2,zero,15540 <___svfprintf_internal_r+0x1bcc>
   1513c:	d8c02e17 	ldw	r3,184(sp)
   15140:	d9002f17 	ldw	r4,188(sp)
   15144:	18800017 	ldw	r2,0(r3)
   15148:	18c00104 	addi	r3,r3,4
   1514c:	d8c02e15 	stw	r3,184(sp)
   15150:	11000015 	stw	r4,0(r2)
   15154:	003a3206 	br	13a20 <_gp+0xfffed8f4>
   15158:	d9002a17 	ldw	r4,168(sp)
   1515c:	d8002785 	stb	zero,158(sp)
   15160:	203d8d16 	blt	r4,zero,14798 <_gp+0xfffee66c>
   15164:	00bfdfc4 	movi	r2,-129
   15168:	90a4703a 	and	r18,r18,r2
   1516c:	003ad506 	br	13cc4 <_gp+0xfffedb98>
   15170:	014000b4 	movhi	r5,2
   15174:	29759d84 	addi	r5,r5,-10634
   15178:	d9402c15 	stw	r5,176(sp)
   1517c:	d9402c17 	ldw	r5,176(sp)
   15180:	1c47883a 	add	r3,r3,r17
   15184:	10800044 	addi	r2,r2,1
   15188:	41400015 	stw	r5,0(r8)
   1518c:	44400115 	stw	r17,4(r8)
   15190:	d8c02015 	stw	r3,128(sp)
   15194:	d8801f15 	stw	r2,124(sp)
   15198:	010001c4 	movi	r4,7
   1519c:	20bf3016 	blt	r4,r2,14e60 <_gp+0xfffeed34>
   151a0:	42000204 	addi	r8,r8,8
   151a4:	003f3506 	br	14e7c <_gp+0xfffeed50>
   151a8:	010000b4 	movhi	r4,2
   151ac:	21359d84 	addi	r4,r4,-10634
   151b0:	d9002c15 	stw	r4,176(sp)
   151b4:	003c3c06 	br	142a8 <_gp+0xfffee17c>
   151b8:	d9402d17 	ldw	r5,180(sp)
   151bc:	d9801e04 	addi	r6,sp,120
   151c0:	9809883a 	mov	r4,r19
   151c4:	0018e5c0 	call	18e5c <__ssprint_r>
   151c8:	103ad11e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   151cc:	d8c02017 	ldw	r3,128(sp)
   151d0:	da000404 	addi	r8,sp,16
   151d4:	003d9306 	br	14824 <_gp+0xfffee6f8>
   151d8:	d8801f17 	ldw	r2,124(sp)
   151dc:	014000b4 	movhi	r5,2
   151e0:	01000044 	movi	r4,1
   151e4:	18c00044 	addi	r3,r3,1
   151e8:	10800044 	addi	r2,r2,1
   151ec:	29759d04 	addi	r5,r5,-10636
   151f0:	41000115 	stw	r4,4(r8)
   151f4:	41400015 	stw	r5,0(r8)
   151f8:	d8c02015 	stw	r3,128(sp)
   151fc:	d8801f15 	stw	r2,124(sp)
   15200:	010001c4 	movi	r4,7
   15204:	2080b516 	blt	r4,r2,154dc <___svfprintf_internal_r+0x1b68>
   15208:	42000204 	addi	r8,r8,8
   1520c:	8800041e 	bne	r17,zero,15220 <___svfprintf_internal_r+0x18ac>
   15210:	d8803317 	ldw	r2,204(sp)
   15214:	1000021e 	bne	r2,zero,15220 <___svfprintf_internal_r+0x18ac>
   15218:	9080004c 	andi	r2,r18,1
   1521c:	103c3926 	beq	r2,zero,14304 <_gp+0xfffee1d8>
   15220:	d9003817 	ldw	r4,224(sp)
   15224:	d8801f17 	ldw	r2,124(sp)
   15228:	d9403417 	ldw	r5,208(sp)
   1522c:	20c7883a 	add	r3,r4,r3
   15230:	10800044 	addi	r2,r2,1
   15234:	41000115 	stw	r4,4(r8)
   15238:	41400015 	stw	r5,0(r8)
   1523c:	d8c02015 	stw	r3,128(sp)
   15240:	d8801f15 	stw	r2,124(sp)
   15244:	010001c4 	movi	r4,7
   15248:	20818016 	blt	r4,r2,1584c <___svfprintf_internal_r+0x1ed8>
   1524c:	42000204 	addi	r8,r8,8
   15250:	0463c83a 	sub	r17,zero,r17
   15254:	0440cb0e 	bge	zero,r17,15584 <___svfprintf_internal_r+0x1c10>
   15258:	05800404 	movi	r22,16
   1525c:	b440e80e 	bge	r22,r17,15600 <___svfprintf_internal_r+0x1c8c>
   15260:	014000b4 	movhi	r5,2
   15264:	29759d84 	addi	r5,r5,-10634
   15268:	d9402c15 	stw	r5,176(sp)
   1526c:	070001c4 	movi	fp,7
   15270:	dd002d17 	ldw	r20,180(sp)
   15274:	00000306 	br	15284 <___svfprintf_internal_r+0x1910>
   15278:	42000204 	addi	r8,r8,8
   1527c:	8c7ffc04 	addi	r17,r17,-16
   15280:	b440e20e 	bge	r22,r17,1560c <___svfprintf_internal_r+0x1c98>
   15284:	18c00404 	addi	r3,r3,16
   15288:	10800044 	addi	r2,r2,1
   1528c:	45400015 	stw	r21,0(r8)
   15290:	45800115 	stw	r22,4(r8)
   15294:	d8c02015 	stw	r3,128(sp)
   15298:	d8801f15 	stw	r2,124(sp)
   1529c:	e0bff60e 	bge	fp,r2,15278 <_gp+0xfffef14c>
   152a0:	d9801e04 	addi	r6,sp,120
   152a4:	a00b883a 	mov	r5,r20
   152a8:	9809883a 	mov	r4,r19
   152ac:	0018e5c0 	call	18e5c <__ssprint_r>
   152b0:	103a971e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   152b4:	d8c02017 	ldw	r3,128(sp)
   152b8:	d8801f17 	ldw	r2,124(sp)
   152bc:	da000404 	addi	r8,sp,16
   152c0:	003fee06 	br	1527c <_gp+0xfffef150>
   152c4:	d9002e17 	ldw	r4,184(sp)
   152c8:	d9402a17 	ldw	r5,168(sp)
   152cc:	002d883a 	mov	r22,zero
   152d0:	20800104 	addi	r2,r4,4
   152d4:	25000017 	ldw	r20,0(r4)
   152d8:	283e7d0e 	bge	r5,zero,14cd0 <_gp+0xfffeeba4>
   152dc:	003eda06 	br	14e48 <_gp+0xfffeed1c>
   152e0:	d9002e17 	ldw	r4,184(sp)
   152e4:	d9402a17 	ldw	r5,168(sp)
   152e8:	002d883a 	mov	r22,zero
   152ec:	20800104 	addi	r2,r4,4
   152f0:	25000017 	ldw	r20,0(r4)
   152f4:	283e2d0e 	bge	r5,zero,14bac <_gp+0xfffeea80>
   152f8:	003f6b06 	br	150a8 <_gp+0xfffeef7c>
   152fc:	d8c02e15 	stw	r3,184(sp)
   15300:	0039883a 	mov	fp,zero
   15304:	003ed206 	br	14e50 <_gp+0xfffeed24>
   15308:	bc400043 	ldbu	r17,1(r23)
   1530c:	84000814 	ori	r16,r16,32
   15310:	bdc00044 	addi	r23,r23,1
   15314:	8c403fcc 	andi	r17,r17,255
   15318:	8c40201c 	xori	r17,r17,128
   1531c:	8c7fe004 	addi	r17,r17,-128
   15320:	0039e906 	br	13ac8 <_gp+0xfffed99c>
   15324:	d9402d17 	ldw	r5,180(sp)
   15328:	d9801e04 	addi	r6,sp,120
   1532c:	9809883a 	mov	r4,r19
   15330:	0018e5c0 	call	18e5c <__ssprint_r>
   15334:	103a761e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   15338:	d8c02017 	ldw	r3,128(sp)
   1533c:	da000404 	addi	r8,sp,16
   15340:	003d4a06 	br	1486c <_gp+0xfffee740>
   15344:	d9002a17 	ldw	r4,168(sp)
   15348:	05bff7c4 	movi	r22,-33
   1534c:	00bfffc4 	movi	r2,-1
   15350:	8dac703a 	and	r22,r17,r22
   15354:	20806a26 	beq	r4,r2,15500 <___svfprintf_internal_r+0x1b8c>
   15358:	008011c4 	movi	r2,71
   1535c:	b0813726 	beq	r22,r2,1583c <___svfprintf_internal_r+0x1ec8>
   15360:	d9003717 	ldw	r4,220(sp)
   15364:	90c04014 	ori	r3,r18,256
   15368:	d8c02c15 	stw	r3,176(sp)
   1536c:	20015d16 	blt	r4,zero,158e4 <___svfprintf_internal_r+0x1f70>
   15370:	dd003717 	ldw	r20,220(sp)
   15374:	d8002905 	stb	zero,164(sp)
   15378:	00801984 	movi	r2,102
   1537c:	88814026 	beq	r17,r2,15880 <___svfprintf_internal_r+0x1f0c>
   15380:	00801184 	movi	r2,70
   15384:	88817126 	beq	r17,r2,1594c <___svfprintf_internal_r+0x1fd8>
   15388:	00801144 	movi	r2,69
   1538c:	b0816226 	beq	r22,r2,15918 <___svfprintf_internal_r+0x1fa4>
   15390:	d8c02a17 	ldw	r3,168(sp)
   15394:	d8802104 	addi	r2,sp,132
   15398:	d8800315 	stw	r2,12(sp)
   1539c:	d9403617 	ldw	r5,216(sp)
   153a0:	d8802504 	addi	r2,sp,148
   153a4:	d8800215 	stw	r2,8(sp)
   153a8:	d8802604 	addi	r2,sp,152
   153ac:	d8c00015 	stw	r3,0(sp)
   153b0:	d8800115 	stw	r2,4(sp)
   153b4:	01c00084 	movi	r7,2
   153b8:	a00d883a 	mov	r6,r20
   153bc:	9809883a 	mov	r4,r19
   153c0:	d8c03d15 	stw	r3,244(sp)
   153c4:	da003e15 	stw	r8,248(sp)
   153c8:	0015e580 	call	15e58 <_dtoa_r>
   153cc:	1021883a 	mov	r16,r2
   153d0:	008019c4 	movi	r2,103
   153d4:	d8c03d17 	ldw	r3,244(sp)
   153d8:	da003e17 	ldw	r8,248(sp)
   153dc:	8880e726 	beq	r17,r2,1577c <___svfprintf_internal_r+0x1e08>
   153e0:	008011c4 	movi	r2,71
   153e4:	8880d426 	beq	r17,r2,15738 <___svfprintf_internal_r+0x1dc4>
   153e8:	80f9883a 	add	fp,r16,r3
   153ec:	d9003617 	ldw	r4,216(sp)
   153f0:	000d883a 	mov	r6,zero
   153f4:	000f883a 	mov	r7,zero
   153f8:	a00b883a 	mov	r5,r20
   153fc:	da003e15 	stw	r8,248(sp)
   15400:	001c0f80 	call	1c0f8 <__eqdf2>
   15404:	da003e17 	ldw	r8,248(sp)
   15408:	1000e426 	beq	r2,zero,1579c <___svfprintf_internal_r+0x1e28>
   1540c:	d8802117 	ldw	r2,132(sp)
   15410:	1700062e 	bgeu	r2,fp,1542c <___svfprintf_internal_r+0x1ab8>
   15414:	01000c04 	movi	r4,48
   15418:	10c00044 	addi	r3,r2,1
   1541c:	d8c02115 	stw	r3,132(sp)
   15420:	11000005 	stb	r4,0(r2)
   15424:	d8802117 	ldw	r2,132(sp)
   15428:	173ffb36 	bltu	r2,fp,15418 <_gp+0xfffef2ec>
   1542c:	1405c83a 	sub	r2,r2,r16
   15430:	d8803315 	stw	r2,204(sp)
   15434:	008011c4 	movi	r2,71
   15438:	b080c526 	beq	r22,r2,15750 <___svfprintf_internal_r+0x1ddc>
   1543c:	00801944 	movi	r2,101
   15440:	1441d80e 	bge	r2,r17,15ba4 <___svfprintf_internal_r+0x2230>
   15444:	d8c02617 	ldw	r3,152(sp)
   15448:	00801984 	movi	r2,102
   1544c:	d8c03215 	stw	r3,200(sp)
   15450:	88813426 	beq	r17,r2,15924 <___svfprintf_internal_r+0x1fb0>
   15454:	d8c03217 	ldw	r3,200(sp)
   15458:	d9003317 	ldw	r4,204(sp)
   1545c:	19012516 	blt	r3,r4,158f4 <___svfprintf_internal_r+0x1f80>
   15460:	9480004c 	andi	r18,r18,1
   15464:	9001841e 	bne	r18,zero,15a78 <___svfprintf_internal_r+0x2104>
   15468:	1805883a 	mov	r2,r3
   1546c:	1801cb16 	blt	r3,zero,15b9c <___svfprintf_internal_r+0x2228>
   15470:	d8c03217 	ldw	r3,200(sp)
   15474:	044019c4 	movi	r17,103
   15478:	d8c02b15 	stw	r3,172(sp)
   1547c:	df002907 	ldb	fp,164(sp)
   15480:	e000a61e 	bne	fp,zero,1571c <___svfprintf_internal_r+0x1da8>
   15484:	df002783 	ldbu	fp,158(sp)
   15488:	d8802915 	stw	r2,164(sp)
   1548c:	dc802c17 	ldw	r18,176(sp)
   15490:	d8002a15 	stw	zero,168(sp)
   15494:	003af506 	br	1406c <_gp+0xfffedf40>
   15498:	040000b4 	movhi	r16,2
   1549c:	84358d04 	addi	r16,r16,-10700
   154a0:	003a7e06 	br	13e9c <_gp+0xfffedd70>
   154a4:	d9003917 	ldw	r4,228(sp)
   154a8:	04001004 	movi	r16,64
   154ac:	800b883a 	mov	r5,r16
   154b0:	00123f40 	call	123f4 <_malloc_r>
   154b4:	d9002d17 	ldw	r4,180(sp)
   154b8:	20800015 	stw	r2,0(r4)
   154bc:	20800415 	stw	r2,16(r4)
   154c0:	1001d026 	beq	r2,zero,15c04 <___svfprintf_internal_r+0x2290>
   154c4:	d8802d17 	ldw	r2,180(sp)
   154c8:	14000515 	stw	r16,20(r2)
   154cc:	00394406 	br	139e0 <_gp+0xfffed8b4>
   154d0:	040000b4 	movhi	r16,2
   154d4:	84358f04 	addi	r16,r16,-10692
   154d8:	003ee106 	br	15060 <_gp+0xfffeef34>
   154dc:	d9402d17 	ldw	r5,180(sp)
   154e0:	d9801e04 	addi	r6,sp,120
   154e4:	9809883a 	mov	r4,r19
   154e8:	0018e5c0 	call	18e5c <__ssprint_r>
   154ec:	103a081e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   154f0:	dc402617 	ldw	r17,152(sp)
   154f4:	d8c02017 	ldw	r3,128(sp)
   154f8:	da000404 	addi	r8,sp,16
   154fc:	003f4306 	br	1520c <_gp+0xfffef0e0>
   15500:	01400184 	movi	r5,6
   15504:	d9402a15 	stw	r5,168(sp)
   15508:	003f9506 	br	15360 <_gp+0xfffef234>
   1550c:	d8c02e17 	ldw	r3,184(sp)
   15510:	1d000017 	ldw	r20,0(r3)
   15514:	18c00104 	addi	r3,r3,4
   15518:	d8c02e15 	stw	r3,184(sp)
   1551c:	a02dd7fa 	srai	r22,r20,31
   15520:	b005883a 	mov	r2,r22
   15524:	003a7606 	br	13f00 <_gp+0xfffeddd4>
   15528:	d9002e17 	ldw	r4,184(sp)
   1552c:	002d883a 	mov	r22,zero
   15530:	25000017 	ldw	r20,0(r4)
   15534:	21000104 	addi	r4,r4,4
   15538:	d9002e15 	stw	r4,184(sp)
   1553c:	003bdd06 	br	144b4 <_gp+0xfffee388>
   15540:	9480100c 	andi	r18,r18,64
   15544:	90006e26 	beq	r18,zero,15700 <___svfprintf_internal_r+0x1d8c>
   15548:	d9402e17 	ldw	r5,184(sp)
   1554c:	d8c02f17 	ldw	r3,188(sp)
   15550:	28800017 	ldw	r2,0(r5)
   15554:	29400104 	addi	r5,r5,4
   15558:	d9402e15 	stw	r5,184(sp)
   1555c:	10c0000d 	sth	r3,0(r2)
   15560:	00392f06 	br	13a20 <_gp+0xfffed8f4>
   15564:	d9402d17 	ldw	r5,180(sp)
   15568:	d9801e04 	addi	r6,sp,120
   1556c:	9809883a 	mov	r4,r19
   15570:	0018e5c0 	call	18e5c <__ssprint_r>
   15574:	1039e61e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   15578:	d8c02017 	ldw	r3,128(sp)
   1557c:	d8801f17 	ldw	r2,124(sp)
   15580:	da000404 	addi	r8,sp,16
   15584:	d9403317 	ldw	r5,204(sp)
   15588:	10800044 	addi	r2,r2,1
   1558c:	44000015 	stw	r16,0(r8)
   15590:	28c7883a 	add	r3,r5,r3
   15594:	003b5506 	br	142ec <_gp+0xfffee1c0>
   15598:	8009883a 	mov	r4,r16
   1559c:	df003e15 	stw	fp,248(sp)
   155a0:	0018dc40 	call	18dc4 <strlen>
   155a4:	d8802b15 	stw	r2,172(sp)
   155a8:	da003e17 	ldw	r8,248(sp)
   155ac:	103c160e 	bge	r2,zero,14608 <_gp+0xfffee4dc>
   155b0:	0005883a 	mov	r2,zero
   155b4:	003c1406 	br	14608 <_gp+0xfffee4dc>
   155b8:	00bfffc4 	movi	r2,-1
   155bc:	0039d906 	br	13d24 <_gp+0xfffedbf8>
   155c0:	010000b4 	movhi	r4,2
   155c4:	2135a184 	addi	r4,r4,-10618
   155c8:	d9003515 	stw	r4,212(sp)
   155cc:	003ae406 	br	14160 <_gp+0xfffee034>
   155d0:	013fffc4 	movi	r4,-1
   155d4:	0039fa06 	br	13dc0 <_gp+0xfffedc94>
   155d8:	d9402d17 	ldw	r5,180(sp)
   155dc:	d9801e04 	addi	r6,sp,120
   155e0:	9809883a 	mov	r4,r19
   155e4:	0018e5c0 	call	18e5c <__ssprint_r>
   155e8:	1039c91e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   155ec:	d8c02017 	ldw	r3,128(sp)
   155f0:	da000404 	addi	r8,sp,16
   155f4:	003d8406 	br	14c08 <_gp+0xfffeeadc>
   155f8:	0023883a 	mov	r17,zero
   155fc:	003d8306 	br	14c0c <_gp+0xfffeeae0>
   15600:	010000b4 	movhi	r4,2
   15604:	21359d84 	addi	r4,r4,-10634
   15608:	d9002c15 	stw	r4,176(sp)
   1560c:	d9002c17 	ldw	r4,176(sp)
   15610:	1c47883a 	add	r3,r3,r17
   15614:	10800044 	addi	r2,r2,1
   15618:	41000015 	stw	r4,0(r8)
   1561c:	44400115 	stw	r17,4(r8)
   15620:	d8c02015 	stw	r3,128(sp)
   15624:	d8801f15 	stw	r2,124(sp)
   15628:	010001c4 	movi	r4,7
   1562c:	20bfcd16 	blt	r4,r2,15564 <_gp+0xfffef438>
   15630:	42000204 	addi	r8,r8,8
   15634:	003fd306 	br	15584 <_gp+0xfffef458>
   15638:	d9402d17 	ldw	r5,180(sp)
   1563c:	d9801e04 	addi	r6,sp,120
   15640:	9809883a 	mov	r4,r19
   15644:	0018e5c0 	call	18e5c <__ssprint_r>
   15648:	1039b11e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   1564c:	d8802617 	ldw	r2,152(sp)
   15650:	d8c02017 	ldw	r3,128(sp)
   15654:	da000404 	addi	r8,sp,16
   15658:	003e1c06 	br	14ecc <_gp+0xfffeeda0>
   1565c:	d8802a17 	ldw	r2,168(sp)
   15660:	00c00184 	movi	r3,6
   15664:	1880012e 	bgeu	r3,r2,1566c <___svfprintf_internal_r+0x1cf8>
   15668:	1805883a 	mov	r2,r3
   1566c:	d8802b15 	stw	r2,172(sp)
   15670:	1000f316 	blt	r2,zero,15a40 <___svfprintf_internal_r+0x20cc>
   15674:	040000b4 	movhi	r16,2
   15678:	d8802915 	stw	r2,164(sp)
   1567c:	dd002e15 	stw	r20,184(sp)
   15680:	d8002a15 	stw	zero,168(sp)
   15684:	d8003215 	stw	zero,200(sp)
   15688:	84359b04 	addi	r16,r16,-10644
   1568c:	0039883a 	mov	fp,zero
   15690:	003a7d06 	br	14088 <_gp+0xfffedf5c>
   15694:	010000b4 	movhi	r4,2
   15698:	2135a184 	addi	r4,r4,-10618
   1569c:	d9003515 	stw	r4,212(sp)
   156a0:	003b3d06 	br	14398 <_gp+0xfffee26c>
   156a4:	d9402d17 	ldw	r5,180(sp)
   156a8:	d9801e04 	addi	r6,sp,120
   156ac:	9809883a 	mov	r4,r19
   156b0:	0018e5c0 	call	18e5c <__ssprint_r>
   156b4:	1039961e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   156b8:	d8802617 	ldw	r2,152(sp)
   156bc:	d9403317 	ldw	r5,204(sp)
   156c0:	d8c02017 	ldw	r3,128(sp)
   156c4:	da000404 	addi	r8,sp,16
   156c8:	2885c83a 	sub	r2,r5,r2
   156cc:	003e1006 	br	14f10 <_gp+0xfffeede4>
   156d0:	00800044 	movi	r2,1
   156d4:	10803fcc 	andi	r2,r2,255
   156d8:	00c00044 	movi	r3,1
   156dc:	10fa1026 	beq	r2,r3,13f20 <_gp+0xfffeddf4>
   156e0:	00c00084 	movi	r3,2
   156e4:	10fb8226 	beq	r2,r3,144f0 <_gp+0xfffee3c4>
   156e8:	003a4206 	br	13ff4 <_gp+0xfffedec8>
   156ec:	0021883a 	mov	r16,zero
   156f0:	003e0806 	br	14f14 <_gp+0xfffeede8>
   156f4:	07000b44 	movi	fp,45
   156f8:	df002785 	stb	fp,158(sp)
   156fc:	0039e306 	br	13e8c <_gp+0xfffedd60>
   15700:	d9002e17 	ldw	r4,184(sp)
   15704:	d9402f17 	ldw	r5,188(sp)
   15708:	20800017 	ldw	r2,0(r4)
   1570c:	21000104 	addi	r4,r4,4
   15710:	d9002e15 	stw	r4,184(sp)
   15714:	11400015 	stw	r5,0(r2)
   15718:	0038c106 	br	13a20 <_gp+0xfffed8f4>
   1571c:	00c00b44 	movi	r3,45
   15720:	d8c02785 	stb	r3,158(sp)
   15724:	d8802915 	stw	r2,164(sp)
   15728:	dc802c17 	ldw	r18,176(sp)
   1572c:	d8002a15 	stw	zero,168(sp)
   15730:	07000b44 	movi	fp,45
   15734:	003a5106 	br	1407c <_gp+0xfffedf50>
   15738:	9080004c 	andi	r2,r18,1
   1573c:	1000941e 	bne	r2,zero,15990 <___svfprintf_internal_r+0x201c>
   15740:	d8802117 	ldw	r2,132(sp)
   15744:	1405c83a 	sub	r2,r2,r16
   15748:	d8803315 	stw	r2,204(sp)
   1574c:	b441151e 	bne	r22,r17,15ba4 <___svfprintf_internal_r+0x2230>
   15750:	dd802617 	ldw	r22,152(sp)
   15754:	00bfff44 	movi	r2,-3
   15758:	b0801a16 	blt	r22,r2,157c4 <___svfprintf_internal_r+0x1e50>
   1575c:	d9402a17 	ldw	r5,168(sp)
   15760:	2d801816 	blt	r5,r22,157c4 <___svfprintf_internal_r+0x1e50>
   15764:	dd803215 	stw	r22,200(sp)
   15768:	003f3a06 	br	15454 <_gp+0xfffef328>
   1576c:	1025883a 	mov	r18,r2
   15770:	0039883a 	mov	fp,zero
   15774:	00800084 	movi	r2,2
   15778:	003fd606 	br	156d4 <_gp+0xfffef5a8>
   1577c:	9080004c 	andi	r2,r18,1
   15780:	103f191e 	bne	r2,zero,153e8 <_gp+0xfffef2bc>
   15784:	d8802117 	ldw	r2,132(sp)
   15788:	003f2806 	br	1542c <_gp+0xfffef300>
   1578c:	010000b4 	movhi	r4,2
   15790:	21359d84 	addi	r4,r4,-10634
   15794:	d9002c15 	stw	r4,176(sp)
   15798:	003c7c06 	br	1498c <_gp+0xfffee860>
   1579c:	e005883a 	mov	r2,fp
   157a0:	003f2206 	br	1542c <_gp+0xfffef300>
   157a4:	d9002a17 	ldw	r4,168(sp)
   157a8:	df002783 	ldbu	fp,158(sp)
   157ac:	dd002e15 	stw	r20,184(sp)
   157b0:	d9002915 	stw	r4,164(sp)
   157b4:	d9002b15 	stw	r4,172(sp)
   157b8:	d8002a15 	stw	zero,168(sp)
   157bc:	d8003215 	stw	zero,200(sp)
   157c0:	003a2a06 	br	1406c <_gp+0xfffedf40>
   157c4:	8c7fff84 	addi	r17,r17,-2
   157c8:	b5bfffc4 	addi	r22,r22,-1
   157cc:	dd802615 	stw	r22,152(sp)
   157d0:	dc4022c5 	stb	r17,139(sp)
   157d4:	b000c316 	blt	r22,zero,15ae4 <___svfprintf_internal_r+0x2170>
   157d8:	00800ac4 	movi	r2,43
   157dc:	d8802305 	stb	r2,140(sp)
   157e0:	00800244 	movi	r2,9
   157e4:	15806e16 	blt	r2,r22,159a0 <___svfprintf_internal_r+0x202c>
   157e8:	00800c04 	movi	r2,48
   157ec:	b5800c04 	addi	r22,r22,48
   157f0:	d8802345 	stb	r2,141(sp)
   157f4:	dd802385 	stb	r22,142(sp)
   157f8:	d88023c4 	addi	r2,sp,143
   157fc:	df0022c4 	addi	fp,sp,139
   15800:	d8c03317 	ldw	r3,204(sp)
   15804:	1739c83a 	sub	fp,r2,fp
   15808:	d9003317 	ldw	r4,204(sp)
   1580c:	e0c7883a 	add	r3,fp,r3
   15810:	df003b15 	stw	fp,236(sp)
   15814:	d8c02b15 	stw	r3,172(sp)
   15818:	00800044 	movi	r2,1
   1581c:	1100b70e 	bge	r2,r4,15afc <___svfprintf_internal_r+0x2188>
   15820:	d8c02b17 	ldw	r3,172(sp)
   15824:	18c00044 	addi	r3,r3,1
   15828:	d8c02b15 	stw	r3,172(sp)
   1582c:	1805883a 	mov	r2,r3
   15830:	1800b016 	blt	r3,zero,15af4 <___svfprintf_internal_r+0x2180>
   15834:	d8003215 	stw	zero,200(sp)
   15838:	003f1006 	br	1547c <_gp+0xfffef350>
   1583c:	d8802a17 	ldw	r2,168(sp)
   15840:	103ec71e 	bne	r2,zero,15360 <_gp+0xfffef234>
   15844:	dc002a15 	stw	r16,168(sp)
   15848:	003ec506 	br	15360 <_gp+0xfffef234>
   1584c:	d9402d17 	ldw	r5,180(sp)
   15850:	d9801e04 	addi	r6,sp,120
   15854:	9809883a 	mov	r4,r19
   15858:	0018e5c0 	call	18e5c <__ssprint_r>
   1585c:	10392c1e 	bne	r2,zero,13d10 <_gp+0xfffedbe4>
   15860:	dc402617 	ldw	r17,152(sp)
   15864:	d8c02017 	ldw	r3,128(sp)
   15868:	d8801f17 	ldw	r2,124(sp)
   1586c:	da000404 	addi	r8,sp,16
   15870:	003e7706 	br	15250 <_gp+0xfffef124>
   15874:	182f883a 	mov	r23,r3
   15878:	d8002a15 	stw	zero,168(sp)
   1587c:	00389306 	br	13acc <_gp+0xfffed9a0>
   15880:	d8c02a17 	ldw	r3,168(sp)
   15884:	d8802104 	addi	r2,sp,132
   15888:	d8800315 	stw	r2,12(sp)
   1588c:	d9403617 	ldw	r5,216(sp)
   15890:	d8802504 	addi	r2,sp,148
   15894:	d8800215 	stw	r2,8(sp)
   15898:	d8802604 	addi	r2,sp,152
   1589c:	d8c00015 	stw	r3,0(sp)
   158a0:	9809883a 	mov	r4,r19
   158a4:	d8800115 	stw	r2,4(sp)
   158a8:	01c000c4 	movi	r7,3
   158ac:	a00d883a 	mov	r6,r20
   158b0:	da003e15 	stw	r8,248(sp)
   158b4:	0015e580 	call	15e58 <_dtoa_r>
   158b8:	d9002a17 	ldw	r4,168(sp)
   158bc:	da003e17 	ldw	r8,248(sp)
   158c0:	1021883a 	mov	r16,r2
   158c4:	1139883a 	add	fp,r2,r4
   158c8:	2007883a 	mov	r3,r4
   158cc:	81000007 	ldb	r4,0(r16)
   158d0:	00800c04 	movi	r2,48
   158d4:	20806f26 	beq	r4,r2,15a94 <___svfprintf_internal_r+0x2120>
   158d8:	d8c02617 	ldw	r3,152(sp)
   158dc:	e0f9883a 	add	fp,fp,r3
   158e0:	003ec206 	br	153ec <_gp+0xfffef2c0>
   158e4:	00c00b44 	movi	r3,45
   158e8:	2520003c 	xorhi	r20,r4,32768
   158ec:	d8c02905 	stb	r3,164(sp)
   158f0:	003ea106 	br	15378 <_gp+0xfffef24c>
   158f4:	d8c03217 	ldw	r3,200(sp)
   158f8:	00c0890e 	bge	zero,r3,15b20 <___svfprintf_internal_r+0x21ac>
   158fc:	00800044 	movi	r2,1
   15900:	d9003317 	ldw	r4,204(sp)
   15904:	1105883a 	add	r2,r2,r4
   15908:	d8802b15 	stw	r2,172(sp)
   1590c:	10005f16 	blt	r2,zero,15a8c <___svfprintf_internal_r+0x2118>
   15910:	044019c4 	movi	r17,103
   15914:	003ed906 	br	1547c <_gp+0xfffef350>
   15918:	d9002a17 	ldw	r4,168(sp)
   1591c:	20c00044 	addi	r3,r4,1
   15920:	003e9c06 	br	15394 <_gp+0xfffef268>
   15924:	d9002a17 	ldw	r4,168(sp)
   15928:	00c0680e 	bge	zero,r3,15acc <___svfprintf_internal_r+0x2158>
   1592c:	2000461e 	bne	r4,zero,15a48 <___svfprintf_internal_r+0x20d4>
   15930:	9480004c 	andi	r18,r18,1
   15934:	9000441e 	bne	r18,zero,15a48 <___svfprintf_internal_r+0x20d4>
   15938:	1805883a 	mov	r2,r3
   1593c:	1800a116 	blt	r3,zero,15bc4 <___svfprintf_internal_r+0x2250>
   15940:	d8c03217 	ldw	r3,200(sp)
   15944:	d8c02b15 	stw	r3,172(sp)
   15948:	003ecc06 	br	1547c <_gp+0xfffef350>
   1594c:	d9402a17 	ldw	r5,168(sp)
   15950:	d8802104 	addi	r2,sp,132
   15954:	d8800315 	stw	r2,12(sp)
   15958:	d9400015 	stw	r5,0(sp)
   1595c:	d8802504 	addi	r2,sp,148
   15960:	d9403617 	ldw	r5,216(sp)
   15964:	d8800215 	stw	r2,8(sp)
   15968:	d8802604 	addi	r2,sp,152
   1596c:	d8800115 	stw	r2,4(sp)
   15970:	01c000c4 	movi	r7,3
   15974:	a00d883a 	mov	r6,r20
   15978:	9809883a 	mov	r4,r19
   1597c:	da003e15 	stw	r8,248(sp)
   15980:	0015e580 	call	15e58 <_dtoa_r>
   15984:	d8c02a17 	ldw	r3,168(sp)
   15988:	da003e17 	ldw	r8,248(sp)
   1598c:	1021883a 	mov	r16,r2
   15990:	00801184 	movi	r2,70
   15994:	80f9883a 	add	fp,r16,r3
   15998:	88bfcc26 	beq	r17,r2,158cc <_gp+0xfffef7a0>
   1599c:	003e9306 	br	153ec <_gp+0xfffef2c0>
   159a0:	df0022c4 	addi	fp,sp,139
   159a4:	dc002a15 	stw	r16,168(sp)
   159a8:	9829883a 	mov	r20,r19
   159ac:	e021883a 	mov	r16,fp
   159b0:	4027883a 	mov	r19,r8
   159b4:	b009883a 	mov	r4,r22
   159b8:	01400284 	movi	r5,10
   159bc:	0010ec00 	call	10ec0 <__modsi3>
   159c0:	10800c04 	addi	r2,r2,48
   159c4:	843fffc4 	addi	r16,r16,-1
   159c8:	b009883a 	mov	r4,r22
   159cc:	01400284 	movi	r5,10
   159d0:	80800005 	stb	r2,0(r16)
   159d4:	0010e3c0 	call	10e3c <__divsi3>
   159d8:	102d883a 	mov	r22,r2
   159dc:	00800244 	movi	r2,9
   159e0:	15bff416 	blt	r2,r22,159b4 <_gp+0xfffef888>
   159e4:	9811883a 	mov	r8,r19
   159e8:	b0800c04 	addi	r2,r22,48
   159ec:	a027883a 	mov	r19,r20
   159f0:	8029883a 	mov	r20,r16
   159f4:	a17fffc4 	addi	r5,r20,-1
   159f8:	a0bfffc5 	stb	r2,-1(r20)
   159fc:	dc002a17 	ldw	r16,168(sp)
   15a00:	2f00782e 	bgeu	r5,fp,15be4 <___svfprintf_internal_r+0x2270>
   15a04:	d9c02384 	addi	r7,sp,142
   15a08:	3d0fc83a 	sub	r7,r7,r20
   15a0c:	d9002344 	addi	r4,sp,141
   15a10:	e1cf883a 	add	r7,fp,r7
   15a14:	00000106 	br	15a1c <___svfprintf_internal_r+0x20a8>
   15a18:	28800003 	ldbu	r2,0(r5)
   15a1c:	20800005 	stb	r2,0(r4)
   15a20:	21000044 	addi	r4,r4,1
   15a24:	29400044 	addi	r5,r5,1
   15a28:	21fffb1e 	bne	r4,r7,15a18 <_gp+0xfffef8ec>
   15a2c:	d8802304 	addi	r2,sp,140
   15a30:	1505c83a 	sub	r2,r2,r20
   15a34:	d8c02344 	addi	r3,sp,141
   15a38:	1885883a 	add	r2,r3,r2
   15a3c:	003f7006 	br	15800 <_gp+0xfffef6d4>
   15a40:	0005883a 	mov	r2,zero
   15a44:	003f0b06 	br	15674 <_gp+0xfffef548>
   15a48:	d9002a17 	ldw	r4,168(sp)
   15a4c:	d8c03217 	ldw	r3,200(sp)
   15a50:	20800044 	addi	r2,r4,1
   15a54:	1885883a 	add	r2,r3,r2
   15a58:	d8802b15 	stw	r2,172(sp)
   15a5c:	103e870e 	bge	r2,zero,1547c <_gp+0xfffef350>
   15a60:	0005883a 	mov	r2,zero
   15a64:	003e8506 	br	1547c <_gp+0xfffef350>
   15a68:	010000b4 	movhi	r4,2
   15a6c:	21359d84 	addi	r4,r4,-10634
   15a70:	d9002c15 	stw	r4,176(sp)
   15a74:	003cc506 	br	14d8c <_gp+0xfffeec60>
   15a78:	d8c03217 	ldw	r3,200(sp)
   15a7c:	18c00044 	addi	r3,r3,1
   15a80:	d8c02b15 	stw	r3,172(sp)
   15a84:	1805883a 	mov	r2,r3
   15a88:	183fa10e 	bge	r3,zero,15910 <_gp+0xfffef7e4>
   15a8c:	0005883a 	mov	r2,zero
   15a90:	003f9f06 	br	15910 <_gp+0xfffef7e4>
   15a94:	d9003617 	ldw	r4,216(sp)
   15a98:	000d883a 	mov	r6,zero
   15a9c:	000f883a 	mov	r7,zero
   15aa0:	a00b883a 	mov	r5,r20
   15aa4:	d8c03d15 	stw	r3,244(sp)
   15aa8:	da003e15 	stw	r8,248(sp)
   15aac:	001c0f80 	call	1c0f8 <__eqdf2>
   15ab0:	d8c03d17 	ldw	r3,244(sp)
   15ab4:	da003e17 	ldw	r8,248(sp)
   15ab8:	103f8726 	beq	r2,zero,158d8 <_gp+0xfffef7ac>
   15abc:	00800044 	movi	r2,1
   15ac0:	10c7c83a 	sub	r3,r2,r3
   15ac4:	d8c02615 	stw	r3,152(sp)
   15ac8:	003f8406 	br	158dc <_gp+0xfffef7b0>
   15acc:	20000e1e 	bne	r4,zero,15b08 <___svfprintf_internal_r+0x2194>
   15ad0:	9480004c 	andi	r18,r18,1
   15ad4:	90000c1e 	bne	r18,zero,15b08 <___svfprintf_internal_r+0x2194>
   15ad8:	00800044 	movi	r2,1
   15adc:	d8802b15 	stw	r2,172(sp)
   15ae0:	003e6606 	br	1547c <_gp+0xfffef350>
   15ae4:	00800b44 	movi	r2,45
   15ae8:	05adc83a 	sub	r22,zero,r22
   15aec:	d8802305 	stb	r2,140(sp)
   15af0:	003f3b06 	br	157e0 <_gp+0xfffef6b4>
   15af4:	0005883a 	mov	r2,zero
   15af8:	003f4e06 	br	15834 <_gp+0xfffef708>
   15afc:	90a4703a 	and	r18,r18,r2
   15b00:	903f4a26 	beq	r18,zero,1582c <_gp+0xfffef700>
   15b04:	003f4606 	br	15820 <_gp+0xfffef6f4>
   15b08:	d8c02a17 	ldw	r3,168(sp)
   15b0c:	18c00084 	addi	r3,r3,2
   15b10:	d8c02b15 	stw	r3,172(sp)
   15b14:	1805883a 	mov	r2,r3
   15b18:	183e580e 	bge	r3,zero,1547c <_gp+0xfffef350>
   15b1c:	003fd006 	br	15a60 <_gp+0xfffef934>
   15b20:	00800084 	movi	r2,2
   15b24:	10c5c83a 	sub	r2,r2,r3
   15b28:	003f7506 	br	15900 <_gp+0xfffef7d4>
   15b2c:	d9402e17 	ldw	r5,184(sp)
   15b30:	d9002e17 	ldw	r4,184(sp)
   15b34:	bc400043 	ldbu	r17,1(r23)
   15b38:	29400017 	ldw	r5,0(r5)
   15b3c:	20800104 	addi	r2,r4,4
   15b40:	d8802e15 	stw	r2,184(sp)
   15b44:	d9402a15 	stw	r5,168(sp)
   15b48:	182f883a 	mov	r23,r3
   15b4c:	283df10e 	bge	r5,zero,15314 <_gp+0xfffef1e8>
   15b50:	8c403fcc 	andi	r17,r17,255
   15b54:	017fffc4 	movi	r5,-1
   15b58:	8c40201c 	xori	r17,r17,128
   15b5c:	d9402a15 	stw	r5,168(sp)
   15b60:	8c7fe004 	addi	r17,r17,-128
   15b64:	0037d806 	br	13ac8 <_gp+0xfffed99c>
   15b68:	9080004c 	andi	r2,r18,1
   15b6c:	0039883a 	mov	fp,zero
   15b70:	10000726 	beq	r2,zero,15b90 <___svfprintf_internal_r+0x221c>
   15b74:	d8c02817 	ldw	r3,160(sp)
   15b78:	dc001dc4 	addi	r16,sp,119
   15b7c:	00800c04 	movi	r2,48
   15b80:	1c07c83a 	sub	r3,r3,r16
   15b84:	d8801dc5 	stb	r2,119(sp)
   15b88:	d8c02b15 	stw	r3,172(sp)
   15b8c:	00393106 	br	14054 <_gp+0xfffedf28>
   15b90:	d8002b15 	stw	zero,172(sp)
   15b94:	dc001e04 	addi	r16,sp,120
   15b98:	00392e06 	br	14054 <_gp+0xfffedf28>
   15b9c:	0005883a 	mov	r2,zero
   15ba0:	003e3306 	br	15470 <_gp+0xfffef344>
   15ba4:	dd802617 	ldw	r22,152(sp)
   15ba8:	003f0706 	br	157c8 <_gp+0xfffef69c>
   15bac:	d8c02b03 	ldbu	r3,172(sp)
   15bb0:	d8c02785 	stb	r3,158(sp)
   15bb4:	003a3506 	br	1448c <_gp+0xfffee360>
   15bb8:	d8c02b03 	ldbu	r3,172(sp)
   15bbc:	d8c02785 	stb	r3,158(sp)
   15bc0:	003a1706 	br	14420 <_gp+0xfffee2f4>
   15bc4:	0005883a 	mov	r2,zero
   15bc8:	003f5d06 	br	15940 <_gp+0xfffef814>
   15bcc:	d8c02b03 	ldbu	r3,172(sp)
   15bd0:	d8c02785 	stb	r3,158(sp)
   15bd4:	0038f306 	br	13fa4 <_gp+0xfffede78>
   15bd8:	d8c02b03 	ldbu	r3,172(sp)
   15bdc:	d8c02785 	stb	r3,158(sp)
   15be0:	0038be06 	br	13edc <_gp+0xfffeddb0>
   15be4:	d8802344 	addi	r2,sp,141
   15be8:	003f0506 	br	15800 <_gp+0xfffef6d4>
   15bec:	d8c02b03 	ldbu	r3,172(sp)
   15bf0:	d8c02785 	stb	r3,158(sp)
   15bf4:	00388b06 	br	13e24 <_gp+0xfffedcf8>
   15bf8:	d8c02b03 	ldbu	r3,172(sp)
   15bfc:	d8c02785 	stb	r3,158(sp)
   15c00:	003ad706 	br	14760 <_gp+0xfffee634>
   15c04:	d9403917 	ldw	r5,228(sp)
   15c08:	00800304 	movi	r2,12
   15c0c:	28800015 	stw	r2,0(r5)
   15c10:	00bfffc4 	movi	r2,-1
   15c14:	00384306 	br	13d24 <_gp+0xfffedbf8>
   15c18:	d8c02b03 	ldbu	r3,172(sp)
   15c1c:	d8c02785 	stb	r3,158(sp)
   15c20:	003ab606 	br	146fc <_gp+0xfffee5d0>
   15c24:	d8c02b03 	ldbu	r3,172(sp)
   15c28:	d8c02785 	stb	r3,158(sp)
   15c2c:	003a8906 	br	14654 <_gp+0xfffee528>

00015c30 <quorem>:
   15c30:	defff204 	addi	sp,sp,-56
   15c34:	ddc00b15 	stw	r23,44(sp)
   15c38:	20800417 	ldw	r2,16(r4)
   15c3c:	2dc00417 	ldw	r23,16(r5)
   15c40:	dfc00d15 	stw	ra,52(sp)
   15c44:	df000c15 	stw	fp,48(sp)
   15c48:	dd800a15 	stw	r22,40(sp)
   15c4c:	dd400915 	stw	r21,36(sp)
   15c50:	dd000815 	stw	r20,32(sp)
   15c54:	dcc00715 	stw	r19,28(sp)
   15c58:	dc800615 	stw	r18,24(sp)
   15c5c:	dc400515 	stw	r17,20(sp)
   15c60:	dc000415 	stw	r16,16(sp)
   15c64:	15c07a16 	blt	r2,r23,15e50 <quorem+0x220>
   15c68:	bdffffc4 	addi	r23,r23,-1
   15c6c:	bde9883a 	add	r20,r23,r23
   15c70:	28c00504 	addi	r3,r5,20
   15c74:	a529883a 	add	r20,r20,r20
   15c78:	1d39883a 	add	fp,r3,r20
   15c7c:	24c00504 	addi	r19,r4,20
   15c80:	d9400215 	stw	r5,8(sp)
   15c84:	9d29883a 	add	r20,r19,r20
   15c88:	e1400017 	ldw	r5,0(fp)
   15c8c:	d9000015 	stw	r4,0(sp)
   15c90:	a1000017 	ldw	r4,0(r20)
   15c94:	29400044 	addi	r5,r5,1
   15c98:	d8c00115 	stw	r3,4(sp)
   15c9c:	dd000315 	stw	r20,12(sp)
   15ca0:	0010f340 	call	10f34 <__udivsi3>
   15ca4:	1025883a 	mov	r18,r2
   15ca8:	10003026 	beq	r2,zero,15d6c <quorem+0x13c>
   15cac:	dc400117 	ldw	r17,4(sp)
   15cb0:	9829883a 	mov	r20,r19
   15cb4:	002d883a 	mov	r22,zero
   15cb8:	0021883a 	mov	r16,zero
   15cbc:	8d400017 	ldw	r21,0(r17)
   15cc0:	900b883a 	mov	r5,r18
   15cc4:	8c400104 	addi	r17,r17,4
   15cc8:	a93fffcc 	andi	r4,r21,65535
   15ccc:	00122c80 	call	122c8 <__mulsi3>
   15cd0:	a808d43a 	srli	r4,r21,16
   15cd4:	900b883a 	mov	r5,r18
   15cd8:	15ad883a 	add	r22,r2,r22
   15cdc:	00122c80 	call	122c8 <__mulsi3>
   15ce0:	a1000017 	ldw	r4,0(r20)
   15ce4:	b00cd43a 	srli	r6,r22,16
   15ce8:	b0ffffcc 	andi	r3,r22,65535
   15cec:	217fffcc 	andi	r5,r4,65535
   15cf0:	2c21883a 	add	r16,r5,r16
   15cf4:	80c7c83a 	sub	r3,r16,r3
   15cf8:	2008d43a 	srli	r4,r4,16
   15cfc:	1185883a 	add	r2,r2,r6
   15d00:	1821d43a 	srai	r16,r3,16
   15d04:	117fffcc 	andi	r5,r2,65535
   15d08:	2149c83a 	sub	r4,r4,r5
   15d0c:	2421883a 	add	r16,r4,r16
   15d10:	8008943a 	slli	r4,r16,16
   15d14:	18ffffcc 	andi	r3,r3,65535
   15d18:	102cd43a 	srli	r22,r2,16
   15d1c:	20c8b03a 	or	r4,r4,r3
   15d20:	a1000015 	stw	r4,0(r20)
   15d24:	8021d43a 	srai	r16,r16,16
   15d28:	a5000104 	addi	r20,r20,4
   15d2c:	e47fe32e 	bgeu	fp,r17,15cbc <_gp+0xfffefb90>
   15d30:	d8c00317 	ldw	r3,12(sp)
   15d34:	18800017 	ldw	r2,0(r3)
   15d38:	10000c1e 	bne	r2,zero,15d6c <quorem+0x13c>
   15d3c:	18bfff04 	addi	r2,r3,-4
   15d40:	9880082e 	bgeu	r19,r2,15d64 <quorem+0x134>
   15d44:	18ffff17 	ldw	r3,-4(r3)
   15d48:	18000326 	beq	r3,zero,15d58 <quorem+0x128>
   15d4c:	00000506 	br	15d64 <quorem+0x134>
   15d50:	10c00017 	ldw	r3,0(r2)
   15d54:	1800031e 	bne	r3,zero,15d64 <quorem+0x134>
   15d58:	10bfff04 	addi	r2,r2,-4
   15d5c:	bdffffc4 	addi	r23,r23,-1
   15d60:	98bffb36 	bltu	r19,r2,15d50 <_gp+0xfffefc24>
   15d64:	d8c00017 	ldw	r3,0(sp)
   15d68:	1dc00415 	stw	r23,16(r3)
   15d6c:	d9400217 	ldw	r5,8(sp)
   15d70:	d9000017 	ldw	r4,0(sp)
   15d74:	001861c0 	call	1861c <__mcmp>
   15d78:	10002816 	blt	r2,zero,15e1c <quorem+0x1ec>
   15d7c:	dc400117 	ldw	r17,4(sp)
   15d80:	94800044 	addi	r18,r18,1
   15d84:	980d883a 	mov	r6,r19
   15d88:	0007883a 	mov	r3,zero
   15d8c:	31000017 	ldw	r4,0(r6)
   15d90:	89400017 	ldw	r5,0(r17)
   15d94:	31800104 	addi	r6,r6,4
   15d98:	20bfffcc 	andi	r2,r4,65535
   15d9c:	10c7883a 	add	r3,r2,r3
   15da0:	28bfffcc 	andi	r2,r5,65535
   15da4:	1885c83a 	sub	r2,r3,r2
   15da8:	280ad43a 	srli	r5,r5,16
   15dac:	2008d43a 	srli	r4,r4,16
   15db0:	1007d43a 	srai	r3,r2,16
   15db4:	10bfffcc 	andi	r2,r2,65535
   15db8:	2149c83a 	sub	r4,r4,r5
   15dbc:	20c9883a 	add	r4,r4,r3
   15dc0:	200a943a 	slli	r5,r4,16
   15dc4:	8c400104 	addi	r17,r17,4
   15dc8:	2007d43a 	srai	r3,r4,16
   15dcc:	2884b03a 	or	r2,r5,r2
   15dd0:	30bfff15 	stw	r2,-4(r6)
   15dd4:	e47fed2e 	bgeu	fp,r17,15d8c <_gp+0xfffefc60>
   15dd8:	bdc5883a 	add	r2,r23,r23
   15ddc:	1085883a 	add	r2,r2,r2
   15de0:	9887883a 	add	r3,r19,r2
   15de4:	18800017 	ldw	r2,0(r3)
   15de8:	10000c1e 	bne	r2,zero,15e1c <quorem+0x1ec>
   15dec:	18bfff04 	addi	r2,r3,-4
   15df0:	9880082e 	bgeu	r19,r2,15e14 <quorem+0x1e4>
   15df4:	18ffff17 	ldw	r3,-4(r3)
   15df8:	18000326 	beq	r3,zero,15e08 <quorem+0x1d8>
   15dfc:	00000506 	br	15e14 <quorem+0x1e4>
   15e00:	10c00017 	ldw	r3,0(r2)
   15e04:	1800031e 	bne	r3,zero,15e14 <quorem+0x1e4>
   15e08:	10bfff04 	addi	r2,r2,-4
   15e0c:	bdffffc4 	addi	r23,r23,-1
   15e10:	98bffb36 	bltu	r19,r2,15e00 <_gp+0xfffefcd4>
   15e14:	d8c00017 	ldw	r3,0(sp)
   15e18:	1dc00415 	stw	r23,16(r3)
   15e1c:	9005883a 	mov	r2,r18
   15e20:	dfc00d17 	ldw	ra,52(sp)
   15e24:	df000c17 	ldw	fp,48(sp)
   15e28:	ddc00b17 	ldw	r23,44(sp)
   15e2c:	dd800a17 	ldw	r22,40(sp)
   15e30:	dd400917 	ldw	r21,36(sp)
   15e34:	dd000817 	ldw	r20,32(sp)
   15e38:	dcc00717 	ldw	r19,28(sp)
   15e3c:	dc800617 	ldw	r18,24(sp)
   15e40:	dc400517 	ldw	r17,20(sp)
   15e44:	dc000417 	ldw	r16,16(sp)
   15e48:	dec00e04 	addi	sp,sp,56
   15e4c:	f800283a 	ret
   15e50:	0005883a 	mov	r2,zero
   15e54:	003ff206 	br	15e20 <_gp+0xfffefcf4>

00015e58 <_dtoa_r>:
   15e58:	20801017 	ldw	r2,64(r4)
   15e5c:	deffde04 	addi	sp,sp,-136
   15e60:	df002015 	stw	fp,128(sp)
   15e64:	dcc01b15 	stw	r19,108(sp)
   15e68:	dc801a15 	stw	r18,104(sp)
   15e6c:	dc401915 	stw	r17,100(sp)
   15e70:	dc001815 	stw	r16,96(sp)
   15e74:	dfc02115 	stw	ra,132(sp)
   15e78:	ddc01f15 	stw	r23,124(sp)
   15e7c:	dd801e15 	stw	r22,120(sp)
   15e80:	dd401d15 	stw	r21,116(sp)
   15e84:	dd001c15 	stw	r20,112(sp)
   15e88:	d9c00315 	stw	r7,12(sp)
   15e8c:	2039883a 	mov	fp,r4
   15e90:	3023883a 	mov	r17,r6
   15e94:	2825883a 	mov	r18,r5
   15e98:	dc002417 	ldw	r16,144(sp)
   15e9c:	3027883a 	mov	r19,r6
   15ea0:	10000826 	beq	r2,zero,15ec4 <_dtoa_r+0x6c>
   15ea4:	21801117 	ldw	r6,68(r4)
   15ea8:	00c00044 	movi	r3,1
   15eac:	100b883a 	mov	r5,r2
   15eb0:	1986983a 	sll	r3,r3,r6
   15eb4:	11800115 	stw	r6,4(r2)
   15eb8:	10c00215 	stw	r3,8(r2)
   15ebc:	0017d400 	call	17d40 <_Bfree>
   15ec0:	e0001015 	stw	zero,64(fp)
   15ec4:	88002e16 	blt	r17,zero,15f80 <_dtoa_r+0x128>
   15ec8:	80000015 	stw	zero,0(r16)
   15ecc:	889ffc2c 	andhi	r2,r17,32752
   15ed0:	00dffc34 	movhi	r3,32752
   15ed4:	10c01c26 	beq	r2,r3,15f48 <_dtoa_r+0xf0>
   15ed8:	000d883a 	mov	r6,zero
   15edc:	000f883a 	mov	r7,zero
   15ee0:	9009883a 	mov	r4,r18
   15ee4:	980b883a 	mov	r5,r19
   15ee8:	001c0f80 	call	1c0f8 <__eqdf2>
   15eec:	10002b1e 	bne	r2,zero,15f9c <_dtoa_r+0x144>
   15ef0:	d9c02317 	ldw	r7,140(sp)
   15ef4:	00800044 	movi	r2,1
   15ef8:	38800015 	stw	r2,0(r7)
   15efc:	d8802517 	ldw	r2,148(sp)
   15f00:	10019e26 	beq	r2,zero,1657c <_dtoa_r+0x724>
   15f04:	d8c02517 	ldw	r3,148(sp)
   15f08:	008000b4 	movhi	r2,2
   15f0c:	10b59d44 	addi	r2,r2,-10635
   15f10:	18800015 	stw	r2,0(r3)
   15f14:	10bfffc4 	addi	r2,r2,-1
   15f18:	dfc02117 	ldw	ra,132(sp)
   15f1c:	df002017 	ldw	fp,128(sp)
   15f20:	ddc01f17 	ldw	r23,124(sp)
   15f24:	dd801e17 	ldw	r22,120(sp)
   15f28:	dd401d17 	ldw	r21,116(sp)
   15f2c:	dd001c17 	ldw	r20,112(sp)
   15f30:	dcc01b17 	ldw	r19,108(sp)
   15f34:	dc801a17 	ldw	r18,104(sp)
   15f38:	dc401917 	ldw	r17,100(sp)
   15f3c:	dc001817 	ldw	r16,96(sp)
   15f40:	dec02204 	addi	sp,sp,136
   15f44:	f800283a 	ret
   15f48:	d8c02317 	ldw	r3,140(sp)
   15f4c:	0089c3c4 	movi	r2,9999
   15f50:	18800015 	stw	r2,0(r3)
   15f54:	90017726 	beq	r18,zero,16534 <_dtoa_r+0x6dc>
   15f58:	008000b4 	movhi	r2,2
   15f5c:	10b5a904 	addi	r2,r2,-10588
   15f60:	d9002517 	ldw	r4,148(sp)
   15f64:	203fec26 	beq	r4,zero,15f18 <_gp+0xfffefdec>
   15f68:	10c000c7 	ldb	r3,3(r2)
   15f6c:	1801781e 	bne	r3,zero,16550 <_dtoa_r+0x6f8>
   15f70:	10c000c4 	addi	r3,r2,3
   15f74:	d9802517 	ldw	r6,148(sp)
   15f78:	30c00015 	stw	r3,0(r6)
   15f7c:	003fe606 	br	15f18 <_gp+0xfffefdec>
   15f80:	04e00034 	movhi	r19,32768
   15f84:	9cffffc4 	addi	r19,r19,-1
   15f88:	00800044 	movi	r2,1
   15f8c:	8ce6703a 	and	r19,r17,r19
   15f90:	80800015 	stw	r2,0(r16)
   15f94:	9823883a 	mov	r17,r19
   15f98:	003fcc06 	br	15ecc <_gp+0xfffefda0>
   15f9c:	d8800204 	addi	r2,sp,8
   15fa0:	d8800015 	stw	r2,0(sp)
   15fa4:	d9c00104 	addi	r7,sp,4
   15fa8:	900b883a 	mov	r5,r18
   15fac:	980d883a 	mov	r6,r19
   15fb0:	e009883a 	mov	r4,fp
   15fb4:	8820d53a 	srli	r16,r17,20
   15fb8:	00189e80 	call	189e8 <__d2b>
   15fbc:	d8800915 	stw	r2,36(sp)
   15fc0:	8001651e 	bne	r16,zero,16558 <_dtoa_r+0x700>
   15fc4:	dd800217 	ldw	r22,8(sp)
   15fc8:	dc000117 	ldw	r16,4(sp)
   15fcc:	00800804 	movi	r2,32
   15fd0:	b421883a 	add	r16,r22,r16
   15fd4:	80c10c84 	addi	r3,r16,1074
   15fd8:	10c2d10e 	bge	r2,r3,16b20 <_dtoa_r+0xcc8>
   15fdc:	00801004 	movi	r2,64
   15fe0:	81010484 	addi	r4,r16,1042
   15fe4:	10c7c83a 	sub	r3,r2,r3
   15fe8:	9108d83a 	srl	r4,r18,r4
   15fec:	88e2983a 	sll	r17,r17,r3
   15ff0:	2448b03a 	or	r4,r4,r17
   15ff4:	001cc4c0 	call	1cc4c <__floatunsidf>
   15ff8:	017f8434 	movhi	r5,65040
   15ffc:	01800044 	movi	r6,1
   16000:	1009883a 	mov	r4,r2
   16004:	194b883a 	add	r5,r3,r5
   16008:	843fffc4 	addi	r16,r16,-1
   1600c:	d9801115 	stw	r6,68(sp)
   16010:	000d883a 	mov	r6,zero
   16014:	01cffe34 	movhi	r7,16376
   16018:	001c3500 	call	1c350 <__subdf3>
   1601c:	0198dbf4 	movhi	r6,25455
   16020:	01cff4f4 	movhi	r7,16339
   16024:	3190d844 	addi	r6,r6,17249
   16028:	39e1e9c4 	addi	r7,r7,-30809
   1602c:	1009883a 	mov	r4,r2
   16030:	180b883a 	mov	r5,r3
   16034:	001189c0 	call	1189c <__muldf3>
   16038:	01a2d874 	movhi	r6,35681
   1603c:	01cff1f4 	movhi	r7,16327
   16040:	31b22cc4 	addi	r6,r6,-14157
   16044:	39e28a04 	addi	r7,r7,-30168
   16048:	180b883a 	mov	r5,r3
   1604c:	1009883a 	mov	r4,r2
   16050:	0010ff00 	call	10ff0 <__adddf3>
   16054:	8009883a 	mov	r4,r16
   16058:	1029883a 	mov	r20,r2
   1605c:	1823883a 	mov	r17,r3
   16060:	00121880 	call	12188 <__floatsidf>
   16064:	019427f4 	movhi	r6,20639
   16068:	01cff4f4 	movhi	r7,16339
   1606c:	319e7ec4 	addi	r6,r6,31227
   16070:	39d104c4 	addi	r7,r7,17427
   16074:	1009883a 	mov	r4,r2
   16078:	180b883a 	mov	r5,r3
   1607c:	001189c0 	call	1189c <__muldf3>
   16080:	100d883a 	mov	r6,r2
   16084:	180f883a 	mov	r7,r3
   16088:	a009883a 	mov	r4,r20
   1608c:	880b883a 	mov	r5,r17
   16090:	0010ff00 	call	10ff0 <__adddf3>
   16094:	1009883a 	mov	r4,r2
   16098:	180b883a 	mov	r5,r3
   1609c:	1029883a 	mov	r20,r2
   160a0:	1823883a 	mov	r17,r3
   160a4:	00121080 	call	12108 <__fixdfsi>
   160a8:	000d883a 	mov	r6,zero
   160ac:	000f883a 	mov	r7,zero
   160b0:	a009883a 	mov	r4,r20
   160b4:	880b883a 	mov	r5,r17
   160b8:	d8800515 	stw	r2,20(sp)
   160bc:	001c25c0 	call	1c25c <__ledf2>
   160c0:	10028716 	blt	r2,zero,16ae0 <_dtoa_r+0xc88>
   160c4:	d8c00517 	ldw	r3,20(sp)
   160c8:	00800584 	movi	r2,22
   160cc:	10c27536 	bltu	r2,r3,16aa4 <_dtoa_r+0xc4c>
   160d0:	180490fa 	slli	r2,r3,3
   160d4:	00c000b4 	movhi	r3,2
   160d8:	18f5c404 	addi	r3,r3,-10480
   160dc:	1885883a 	add	r2,r3,r2
   160e0:	11000017 	ldw	r4,0(r2)
   160e4:	11400117 	ldw	r5,4(r2)
   160e8:	900d883a 	mov	r6,r18
   160ec:	980f883a 	mov	r7,r19
   160f0:	001c1800 	call	1c180 <__gedf2>
   160f4:	00828d0e 	bge	zero,r2,16b2c <_dtoa_r+0xcd4>
   160f8:	d9000517 	ldw	r4,20(sp)
   160fc:	d8000e15 	stw	zero,56(sp)
   16100:	213fffc4 	addi	r4,r4,-1
   16104:	d9000515 	stw	r4,20(sp)
   16108:	b42dc83a 	sub	r22,r22,r16
   1610c:	b5bfffc4 	addi	r22,r22,-1
   16110:	b0026f16 	blt	r22,zero,16ad0 <_dtoa_r+0xc78>
   16114:	d8000815 	stw	zero,32(sp)
   16118:	d9c00517 	ldw	r7,20(sp)
   1611c:	38026416 	blt	r7,zero,16ab0 <_dtoa_r+0xc58>
   16120:	b1ed883a 	add	r22,r22,r7
   16124:	d9c00d15 	stw	r7,52(sp)
   16128:	d8000a15 	stw	zero,40(sp)
   1612c:	d9800317 	ldw	r6,12(sp)
   16130:	00800244 	movi	r2,9
   16134:	11811436 	bltu	r2,r6,16588 <_dtoa_r+0x730>
   16138:	00800144 	movi	r2,5
   1613c:	1184e10e 	bge	r2,r6,174c4 <_dtoa_r+0x166c>
   16140:	31bfff04 	addi	r6,r6,-4
   16144:	d9800315 	stw	r6,12(sp)
   16148:	0023883a 	mov	r17,zero
   1614c:	d9800317 	ldw	r6,12(sp)
   16150:	008000c4 	movi	r2,3
   16154:	30836726 	beq	r6,r2,16ef4 <_dtoa_r+0x109c>
   16158:	1183410e 	bge	r2,r6,16e60 <_dtoa_r+0x1008>
   1615c:	d9c00317 	ldw	r7,12(sp)
   16160:	00800104 	movi	r2,4
   16164:	38827c26 	beq	r7,r2,16b58 <_dtoa_r+0xd00>
   16168:	00800144 	movi	r2,5
   1616c:	3884c41e 	bne	r7,r2,17480 <_dtoa_r+0x1628>
   16170:	00800044 	movi	r2,1
   16174:	d8800b15 	stw	r2,44(sp)
   16178:	d8c00517 	ldw	r3,20(sp)
   1617c:	d9002217 	ldw	r4,136(sp)
   16180:	1907883a 	add	r3,r3,r4
   16184:	19800044 	addi	r6,r3,1
   16188:	d8c00c15 	stw	r3,48(sp)
   1618c:	d9800615 	stw	r6,24(sp)
   16190:	0183a40e 	bge	zero,r6,17024 <_dtoa_r+0x11cc>
   16194:	d9800617 	ldw	r6,24(sp)
   16198:	3021883a 	mov	r16,r6
   1619c:	e0001115 	stw	zero,68(fp)
   161a0:	008005c4 	movi	r2,23
   161a4:	1184c92e 	bgeu	r2,r6,174cc <_dtoa_r+0x1674>
   161a8:	00c00044 	movi	r3,1
   161ac:	00800104 	movi	r2,4
   161b0:	1085883a 	add	r2,r2,r2
   161b4:	11000504 	addi	r4,r2,20
   161b8:	180b883a 	mov	r5,r3
   161bc:	18c00044 	addi	r3,r3,1
   161c0:	313ffb2e 	bgeu	r6,r4,161b0 <_gp+0xffff0084>
   161c4:	e1401115 	stw	r5,68(fp)
   161c8:	e009883a 	mov	r4,fp
   161cc:	0017c980 	call	17c98 <_Balloc>
   161d0:	d8800715 	stw	r2,28(sp)
   161d4:	e0801015 	stw	r2,64(fp)
   161d8:	00800384 	movi	r2,14
   161dc:	1400f736 	bltu	r2,r16,165bc <_dtoa_r+0x764>
   161e0:	8800f626 	beq	r17,zero,165bc <_dtoa_r+0x764>
   161e4:	d9c00517 	ldw	r7,20(sp)
   161e8:	01c39a0e 	bge	zero,r7,17054 <_dtoa_r+0x11fc>
   161ec:	388003cc 	andi	r2,r7,15
   161f0:	100490fa 	slli	r2,r2,3
   161f4:	382bd13a 	srai	r21,r7,4
   161f8:	00c000b4 	movhi	r3,2
   161fc:	18f5c404 	addi	r3,r3,-10480
   16200:	1885883a 	add	r2,r3,r2
   16204:	a8c0040c 	andi	r3,r21,16
   16208:	12400017 	ldw	r9,0(r2)
   1620c:	12000117 	ldw	r8,4(r2)
   16210:	18037926 	beq	r3,zero,16ff8 <_dtoa_r+0x11a0>
   16214:	008000b4 	movhi	r2,2
   16218:	10b5ba04 	addi	r2,r2,-10520
   1621c:	11800817 	ldw	r6,32(r2)
   16220:	11c00917 	ldw	r7,36(r2)
   16224:	9009883a 	mov	r4,r18
   16228:	980b883a 	mov	r5,r19
   1622c:	da001715 	stw	r8,92(sp)
   16230:	da401615 	stw	r9,88(sp)
   16234:	001b7280 	call	1b728 <__divdf3>
   16238:	da001717 	ldw	r8,92(sp)
   1623c:	da401617 	ldw	r9,88(sp)
   16240:	ad4003cc 	andi	r21,r21,15
   16244:	040000c4 	movi	r16,3
   16248:	1023883a 	mov	r17,r2
   1624c:	1829883a 	mov	r20,r3
   16250:	a8001126 	beq	r21,zero,16298 <_dtoa_r+0x440>
   16254:	05c000b4 	movhi	r23,2
   16258:	bdf5ba04 	addi	r23,r23,-10520
   1625c:	4805883a 	mov	r2,r9
   16260:	4007883a 	mov	r3,r8
   16264:	a980004c 	andi	r6,r21,1
   16268:	1009883a 	mov	r4,r2
   1626c:	a82bd07a 	srai	r21,r21,1
   16270:	180b883a 	mov	r5,r3
   16274:	30000426 	beq	r6,zero,16288 <_dtoa_r+0x430>
   16278:	b9800017 	ldw	r6,0(r23)
   1627c:	b9c00117 	ldw	r7,4(r23)
   16280:	84000044 	addi	r16,r16,1
   16284:	001189c0 	call	1189c <__muldf3>
   16288:	bdc00204 	addi	r23,r23,8
   1628c:	a83ff51e 	bne	r21,zero,16264 <_gp+0xffff0138>
   16290:	1013883a 	mov	r9,r2
   16294:	1811883a 	mov	r8,r3
   16298:	480d883a 	mov	r6,r9
   1629c:	400f883a 	mov	r7,r8
   162a0:	8809883a 	mov	r4,r17
   162a4:	a00b883a 	mov	r5,r20
   162a8:	001b7280 	call	1b728 <__divdf3>
   162ac:	d8800f15 	stw	r2,60(sp)
   162b0:	d8c01015 	stw	r3,64(sp)
   162b4:	d8c00e17 	ldw	r3,56(sp)
   162b8:	18000626 	beq	r3,zero,162d4 <_dtoa_r+0x47c>
   162bc:	d9000f17 	ldw	r4,60(sp)
   162c0:	d9401017 	ldw	r5,64(sp)
   162c4:	000d883a 	mov	r6,zero
   162c8:	01cffc34 	movhi	r7,16368
   162cc:	001c25c0 	call	1c25c <__ledf2>
   162d0:	10040b16 	blt	r2,zero,17300 <_dtoa_r+0x14a8>
   162d4:	8009883a 	mov	r4,r16
   162d8:	00121880 	call	12188 <__floatsidf>
   162dc:	d9800f17 	ldw	r6,60(sp)
   162e0:	d9c01017 	ldw	r7,64(sp)
   162e4:	1009883a 	mov	r4,r2
   162e8:	180b883a 	mov	r5,r3
   162ec:	001189c0 	call	1189c <__muldf3>
   162f0:	000d883a 	mov	r6,zero
   162f4:	01d00734 	movhi	r7,16412
   162f8:	1009883a 	mov	r4,r2
   162fc:	180b883a 	mov	r5,r3
   16300:	0010ff00 	call	10ff0 <__adddf3>
   16304:	1021883a 	mov	r16,r2
   16308:	d8800617 	ldw	r2,24(sp)
   1630c:	047f3034 	movhi	r17,64704
   16310:	1c63883a 	add	r17,r3,r17
   16314:	10031826 	beq	r2,zero,16f78 <_dtoa_r+0x1120>
   16318:	d8c00517 	ldw	r3,20(sp)
   1631c:	db000617 	ldw	r12,24(sp)
   16320:	d8c01315 	stw	r3,76(sp)
   16324:	d9000b17 	ldw	r4,44(sp)
   16328:	20038f26 	beq	r4,zero,17168 <_dtoa_r+0x1310>
   1632c:	60bfffc4 	addi	r2,r12,-1
   16330:	100490fa 	slli	r2,r2,3
   16334:	00c000b4 	movhi	r3,2
   16338:	18f5c404 	addi	r3,r3,-10480
   1633c:	1885883a 	add	r2,r3,r2
   16340:	11800017 	ldw	r6,0(r2)
   16344:	11c00117 	ldw	r7,4(r2)
   16348:	d8800717 	ldw	r2,28(sp)
   1634c:	0009883a 	mov	r4,zero
   16350:	014ff834 	movhi	r5,16352
   16354:	db001615 	stw	r12,88(sp)
   16358:	15c00044 	addi	r23,r2,1
   1635c:	001b7280 	call	1b728 <__divdf3>
   16360:	800d883a 	mov	r6,r16
   16364:	880f883a 	mov	r7,r17
   16368:	1009883a 	mov	r4,r2
   1636c:	180b883a 	mov	r5,r3
   16370:	001c3500 	call	1c350 <__subdf3>
   16374:	d9401017 	ldw	r5,64(sp)
   16378:	d9000f17 	ldw	r4,60(sp)
   1637c:	102b883a 	mov	r21,r2
   16380:	d8c01215 	stw	r3,72(sp)
   16384:	00121080 	call	12108 <__fixdfsi>
   16388:	1009883a 	mov	r4,r2
   1638c:	1029883a 	mov	r20,r2
   16390:	00121880 	call	12188 <__floatsidf>
   16394:	d9000f17 	ldw	r4,60(sp)
   16398:	d9401017 	ldw	r5,64(sp)
   1639c:	100d883a 	mov	r6,r2
   163a0:	180f883a 	mov	r7,r3
   163a4:	001c3500 	call	1c350 <__subdf3>
   163a8:	1823883a 	mov	r17,r3
   163ac:	d8c00717 	ldw	r3,28(sp)
   163b0:	d9401217 	ldw	r5,72(sp)
   163b4:	a2000c04 	addi	r8,r20,48
   163b8:	1021883a 	mov	r16,r2
   163bc:	1a000005 	stb	r8,0(r3)
   163c0:	800d883a 	mov	r6,r16
   163c4:	880f883a 	mov	r7,r17
   163c8:	a809883a 	mov	r4,r21
   163cc:	4029883a 	mov	r20,r8
   163d0:	001c1800 	call	1c180 <__gedf2>
   163d4:	00841d16 	blt	zero,r2,1744c <_dtoa_r+0x15f4>
   163d8:	800d883a 	mov	r6,r16
   163dc:	880f883a 	mov	r7,r17
   163e0:	0009883a 	mov	r4,zero
   163e4:	014ffc34 	movhi	r5,16368
   163e8:	001c3500 	call	1c350 <__subdf3>
   163ec:	d9401217 	ldw	r5,72(sp)
   163f0:	100d883a 	mov	r6,r2
   163f4:	180f883a 	mov	r7,r3
   163f8:	a809883a 	mov	r4,r21
   163fc:	001c1800 	call	1c180 <__gedf2>
   16400:	db001617 	ldw	r12,88(sp)
   16404:	00840e16 	blt	zero,r2,17440 <_dtoa_r+0x15e8>
   16408:	00800044 	movi	r2,1
   1640c:	13006b0e 	bge	r2,r12,165bc <_dtoa_r+0x764>
   16410:	d9000717 	ldw	r4,28(sp)
   16414:	dd800f15 	stw	r22,60(sp)
   16418:	dcc01015 	stw	r19,64(sp)
   1641c:	2319883a 	add	r12,r4,r12
   16420:	dcc01217 	ldw	r19,72(sp)
   16424:	602d883a 	mov	r22,r12
   16428:	dc801215 	stw	r18,72(sp)
   1642c:	b825883a 	mov	r18,r23
   16430:	00000906 	br	16458 <_dtoa_r+0x600>
   16434:	001c3500 	call	1c350 <__subdf3>
   16438:	a80d883a 	mov	r6,r21
   1643c:	980f883a 	mov	r7,r19
   16440:	1009883a 	mov	r4,r2
   16444:	180b883a 	mov	r5,r3
   16448:	001c25c0 	call	1c25c <__ledf2>
   1644c:	1003e816 	blt	r2,zero,173f0 <_dtoa_r+0x1598>
   16450:	b825883a 	mov	r18,r23
   16454:	bd83e926 	beq	r23,r22,173fc <_dtoa_r+0x15a4>
   16458:	a809883a 	mov	r4,r21
   1645c:	980b883a 	mov	r5,r19
   16460:	000d883a 	mov	r6,zero
   16464:	01d00934 	movhi	r7,16420
   16468:	001189c0 	call	1189c <__muldf3>
   1646c:	000d883a 	mov	r6,zero
   16470:	01d00934 	movhi	r7,16420
   16474:	8009883a 	mov	r4,r16
   16478:	880b883a 	mov	r5,r17
   1647c:	102b883a 	mov	r21,r2
   16480:	1827883a 	mov	r19,r3
   16484:	001189c0 	call	1189c <__muldf3>
   16488:	180b883a 	mov	r5,r3
   1648c:	1009883a 	mov	r4,r2
   16490:	1821883a 	mov	r16,r3
   16494:	1023883a 	mov	r17,r2
   16498:	00121080 	call	12108 <__fixdfsi>
   1649c:	1009883a 	mov	r4,r2
   164a0:	1029883a 	mov	r20,r2
   164a4:	00121880 	call	12188 <__floatsidf>
   164a8:	8809883a 	mov	r4,r17
   164ac:	800b883a 	mov	r5,r16
   164b0:	100d883a 	mov	r6,r2
   164b4:	180f883a 	mov	r7,r3
   164b8:	001c3500 	call	1c350 <__subdf3>
   164bc:	a5000c04 	addi	r20,r20,48
   164c0:	a80d883a 	mov	r6,r21
   164c4:	980f883a 	mov	r7,r19
   164c8:	1009883a 	mov	r4,r2
   164cc:	180b883a 	mov	r5,r3
   164d0:	95000005 	stb	r20,0(r18)
   164d4:	1021883a 	mov	r16,r2
   164d8:	1823883a 	mov	r17,r3
   164dc:	001c25c0 	call	1c25c <__ledf2>
   164e0:	bdc00044 	addi	r23,r23,1
   164e4:	800d883a 	mov	r6,r16
   164e8:	880f883a 	mov	r7,r17
   164ec:	0009883a 	mov	r4,zero
   164f0:	014ffc34 	movhi	r5,16368
   164f4:	103fcf0e 	bge	r2,zero,16434 <_gp+0xffff0308>
   164f8:	d8c01317 	ldw	r3,76(sp)
   164fc:	d8c00515 	stw	r3,20(sp)
   16500:	d9400917 	ldw	r5,36(sp)
   16504:	e009883a 	mov	r4,fp
   16508:	0017d400 	call	17d40 <_Bfree>
   1650c:	d9000517 	ldw	r4,20(sp)
   16510:	d9802317 	ldw	r6,140(sp)
   16514:	d9c02517 	ldw	r7,148(sp)
   16518:	b8000005 	stb	zero,0(r23)
   1651c:	20800044 	addi	r2,r4,1
   16520:	30800015 	stw	r2,0(r6)
   16524:	3802aa26 	beq	r7,zero,16fd0 <_dtoa_r+0x1178>
   16528:	3dc00015 	stw	r23,0(r7)
   1652c:	d8800717 	ldw	r2,28(sp)
   16530:	003e7906 	br	15f18 <_gp+0xfffefdec>
   16534:	00800434 	movhi	r2,16
   16538:	10bfffc4 	addi	r2,r2,-1
   1653c:	88a2703a 	and	r17,r17,r2
   16540:	883e851e 	bne	r17,zero,15f58 <_gp+0xfffefe2c>
   16544:	008000b4 	movhi	r2,2
   16548:	10b5a604 	addi	r2,r2,-10600
   1654c:	003e8406 	br	15f60 <_gp+0xfffefe34>
   16550:	10c00204 	addi	r3,r2,8
   16554:	003e8706 	br	15f74 <_gp+0xfffefe48>
   16558:	01400434 	movhi	r5,16
   1655c:	297fffc4 	addi	r5,r5,-1
   16560:	994a703a 	and	r5,r19,r5
   16564:	9009883a 	mov	r4,r18
   16568:	843f0044 	addi	r16,r16,-1023
   1656c:	294ffc34 	orhi	r5,r5,16368
   16570:	dd800217 	ldw	r22,8(sp)
   16574:	d8001115 	stw	zero,68(sp)
   16578:	003ea506 	br	16010 <_gp+0xfffefee4>
   1657c:	008000b4 	movhi	r2,2
   16580:	10b59d04 	addi	r2,r2,-10636
   16584:	003e6406 	br	15f18 <_gp+0xfffefdec>
   16588:	e0001115 	stw	zero,68(fp)
   1658c:	000b883a 	mov	r5,zero
   16590:	e009883a 	mov	r4,fp
   16594:	0017c980 	call	17c98 <_Balloc>
   16598:	01bfffc4 	movi	r6,-1
   1659c:	01c00044 	movi	r7,1
   165a0:	d8800715 	stw	r2,28(sp)
   165a4:	d9800c15 	stw	r6,48(sp)
   165a8:	e0801015 	stw	r2,64(fp)
   165ac:	d8000315 	stw	zero,12(sp)
   165b0:	d9c00b15 	stw	r7,44(sp)
   165b4:	d9800615 	stw	r6,24(sp)
   165b8:	d8002215 	stw	zero,136(sp)
   165bc:	d8800117 	ldw	r2,4(sp)
   165c0:	10008916 	blt	r2,zero,167e8 <_dtoa_r+0x990>
   165c4:	d9000517 	ldw	r4,20(sp)
   165c8:	00c00384 	movi	r3,14
   165cc:	19008616 	blt	r3,r4,167e8 <_dtoa_r+0x990>
   165d0:	200490fa 	slli	r2,r4,3
   165d4:	00c000b4 	movhi	r3,2
   165d8:	d9802217 	ldw	r6,136(sp)
   165dc:	18f5c404 	addi	r3,r3,-10480
   165e0:	1885883a 	add	r2,r3,r2
   165e4:	14000017 	ldw	r16,0(r2)
   165e8:	14400117 	ldw	r17,4(r2)
   165ec:	30016316 	blt	r6,zero,16b7c <_dtoa_r+0xd24>
   165f0:	800d883a 	mov	r6,r16
   165f4:	880f883a 	mov	r7,r17
   165f8:	9009883a 	mov	r4,r18
   165fc:	980b883a 	mov	r5,r19
   16600:	001b7280 	call	1b728 <__divdf3>
   16604:	180b883a 	mov	r5,r3
   16608:	1009883a 	mov	r4,r2
   1660c:	00121080 	call	12108 <__fixdfsi>
   16610:	1009883a 	mov	r4,r2
   16614:	102b883a 	mov	r21,r2
   16618:	00121880 	call	12188 <__floatsidf>
   1661c:	800d883a 	mov	r6,r16
   16620:	880f883a 	mov	r7,r17
   16624:	1009883a 	mov	r4,r2
   16628:	180b883a 	mov	r5,r3
   1662c:	001189c0 	call	1189c <__muldf3>
   16630:	100d883a 	mov	r6,r2
   16634:	180f883a 	mov	r7,r3
   16638:	9009883a 	mov	r4,r18
   1663c:	980b883a 	mov	r5,r19
   16640:	001c3500 	call	1c350 <__subdf3>
   16644:	d9c00717 	ldw	r7,28(sp)
   16648:	1009883a 	mov	r4,r2
   1664c:	a8800c04 	addi	r2,r21,48
   16650:	38800005 	stb	r2,0(r7)
   16654:	3dc00044 	addi	r23,r7,1
   16658:	d9c00617 	ldw	r7,24(sp)
   1665c:	01800044 	movi	r6,1
   16660:	180b883a 	mov	r5,r3
   16664:	2005883a 	mov	r2,r4
   16668:	39803826 	beq	r7,r6,1674c <_dtoa_r+0x8f4>
   1666c:	000d883a 	mov	r6,zero
   16670:	01d00934 	movhi	r7,16420
   16674:	001189c0 	call	1189c <__muldf3>
   16678:	000d883a 	mov	r6,zero
   1667c:	000f883a 	mov	r7,zero
   16680:	1009883a 	mov	r4,r2
   16684:	180b883a 	mov	r5,r3
   16688:	1025883a 	mov	r18,r2
   1668c:	1827883a 	mov	r19,r3
   16690:	001c0f80 	call	1c0f8 <__eqdf2>
   16694:	103f9a26 	beq	r2,zero,16500 <_gp+0xffff03d4>
   16698:	d9c00617 	ldw	r7,24(sp)
   1669c:	d8c00717 	ldw	r3,28(sp)
   166a0:	b829883a 	mov	r20,r23
   166a4:	38bfffc4 	addi	r2,r7,-1
   166a8:	18ad883a 	add	r22,r3,r2
   166ac:	00000a06 	br	166d8 <_dtoa_r+0x880>
   166b0:	001189c0 	call	1189c <__muldf3>
   166b4:	000d883a 	mov	r6,zero
   166b8:	000f883a 	mov	r7,zero
   166bc:	1009883a 	mov	r4,r2
   166c0:	180b883a 	mov	r5,r3
   166c4:	1025883a 	mov	r18,r2
   166c8:	1827883a 	mov	r19,r3
   166cc:	b829883a 	mov	r20,r23
   166d0:	001c0f80 	call	1c0f8 <__eqdf2>
   166d4:	103f8a26 	beq	r2,zero,16500 <_gp+0xffff03d4>
   166d8:	800d883a 	mov	r6,r16
   166dc:	880f883a 	mov	r7,r17
   166e0:	9009883a 	mov	r4,r18
   166e4:	980b883a 	mov	r5,r19
   166e8:	001b7280 	call	1b728 <__divdf3>
   166ec:	180b883a 	mov	r5,r3
   166f0:	1009883a 	mov	r4,r2
   166f4:	00121080 	call	12108 <__fixdfsi>
   166f8:	1009883a 	mov	r4,r2
   166fc:	102b883a 	mov	r21,r2
   16700:	00121880 	call	12188 <__floatsidf>
   16704:	800d883a 	mov	r6,r16
   16708:	880f883a 	mov	r7,r17
   1670c:	1009883a 	mov	r4,r2
   16710:	180b883a 	mov	r5,r3
   16714:	001189c0 	call	1189c <__muldf3>
   16718:	100d883a 	mov	r6,r2
   1671c:	180f883a 	mov	r7,r3
   16720:	9009883a 	mov	r4,r18
   16724:	980b883a 	mov	r5,r19
   16728:	001c3500 	call	1c350 <__subdf3>
   1672c:	aa000c04 	addi	r8,r21,48
   16730:	a2000005 	stb	r8,0(r20)
   16734:	000d883a 	mov	r6,zero
   16738:	01d00934 	movhi	r7,16420
   1673c:	1009883a 	mov	r4,r2
   16740:	180b883a 	mov	r5,r3
   16744:	a5c00044 	addi	r23,r20,1
   16748:	b53fd91e 	bne	r22,r20,166b0 <_gp+0xffff0584>
   1674c:	100d883a 	mov	r6,r2
   16750:	180f883a 	mov	r7,r3
   16754:	1009883a 	mov	r4,r2
   16758:	180b883a 	mov	r5,r3
   1675c:	0010ff00 	call	10ff0 <__adddf3>
   16760:	100d883a 	mov	r6,r2
   16764:	180f883a 	mov	r7,r3
   16768:	8009883a 	mov	r4,r16
   1676c:	880b883a 	mov	r5,r17
   16770:	1027883a 	mov	r19,r2
   16774:	1825883a 	mov	r18,r3
   16778:	001c25c0 	call	1c25c <__ledf2>
   1677c:	10000816 	blt	r2,zero,167a0 <_dtoa_r+0x948>
   16780:	980d883a 	mov	r6,r19
   16784:	900f883a 	mov	r7,r18
   16788:	8009883a 	mov	r4,r16
   1678c:	880b883a 	mov	r5,r17
   16790:	001c0f80 	call	1c0f8 <__eqdf2>
   16794:	103f5a1e 	bne	r2,zero,16500 <_gp+0xffff03d4>
   16798:	ad40004c 	andi	r21,r21,1
   1679c:	a83f5826 	beq	r21,zero,16500 <_gp+0xffff03d4>
   167a0:	bd3fffc3 	ldbu	r20,-1(r23)
   167a4:	b8bfffc4 	addi	r2,r23,-1
   167a8:	1007883a 	mov	r3,r2
   167ac:	01400e44 	movi	r5,57
   167b0:	d9800717 	ldw	r6,28(sp)
   167b4:	00000506 	br	167cc <_dtoa_r+0x974>
   167b8:	18ffffc4 	addi	r3,r3,-1
   167bc:	11824726 	beq	r2,r6,170dc <_dtoa_r+0x1284>
   167c0:	1d000003 	ldbu	r20,0(r3)
   167c4:	102f883a 	mov	r23,r2
   167c8:	10bfffc4 	addi	r2,r2,-1
   167cc:	a1003fcc 	andi	r4,r20,255
   167d0:	2100201c 	xori	r4,r4,128
   167d4:	213fe004 	addi	r4,r4,-128
   167d8:	217ff726 	beq	r4,r5,167b8 <_gp+0xffff068c>
   167dc:	a2000044 	addi	r8,r20,1
   167e0:	12000005 	stb	r8,0(r2)
   167e4:	003f4606 	br	16500 <_gp+0xffff03d4>
   167e8:	d9000b17 	ldw	r4,44(sp)
   167ec:	2000c826 	beq	r4,zero,16b10 <_dtoa_r+0xcb8>
   167f0:	d9800317 	ldw	r6,12(sp)
   167f4:	00c00044 	movi	r3,1
   167f8:	1980f90e 	bge	r3,r6,16be0 <_dtoa_r+0xd88>
   167fc:	d8800617 	ldw	r2,24(sp)
   16800:	d8c00a17 	ldw	r3,40(sp)
   16804:	157fffc4 	addi	r21,r2,-1
   16808:	1d41f316 	blt	r3,r21,16fd8 <_dtoa_r+0x1180>
   1680c:	1d6bc83a 	sub	r21,r3,r21
   16810:	d9c00617 	ldw	r7,24(sp)
   16814:	3802aa16 	blt	r7,zero,172c0 <_dtoa_r+0x1468>
   16818:	dd000817 	ldw	r20,32(sp)
   1681c:	d8800617 	ldw	r2,24(sp)
   16820:	d8c00817 	ldw	r3,32(sp)
   16824:	01400044 	movi	r5,1
   16828:	e009883a 	mov	r4,fp
   1682c:	1887883a 	add	r3,r3,r2
   16830:	d8c00815 	stw	r3,32(sp)
   16834:	b0ad883a 	add	r22,r22,r2
   16838:	00180cc0 	call	180cc <__i2b>
   1683c:	1023883a 	mov	r17,r2
   16840:	a0000826 	beq	r20,zero,16864 <_dtoa_r+0xa0c>
   16844:	0580070e 	bge	zero,r22,16864 <_dtoa_r+0xa0c>
   16848:	a005883a 	mov	r2,r20
   1684c:	b500b916 	blt	r22,r20,16b34 <_dtoa_r+0xcdc>
   16850:	d9000817 	ldw	r4,32(sp)
   16854:	a0a9c83a 	sub	r20,r20,r2
   16858:	b0adc83a 	sub	r22,r22,r2
   1685c:	2089c83a 	sub	r4,r4,r2
   16860:	d9000815 	stw	r4,32(sp)
   16864:	d9800a17 	ldw	r6,40(sp)
   16868:	0181810e 	bge	zero,r6,16e70 <_dtoa_r+0x1018>
   1686c:	d9c00b17 	ldw	r7,44(sp)
   16870:	3800b326 	beq	r7,zero,16b40 <_dtoa_r+0xce8>
   16874:	a800b226 	beq	r21,zero,16b40 <_dtoa_r+0xce8>
   16878:	880b883a 	mov	r5,r17
   1687c:	a80d883a 	mov	r6,r21
   16880:	e009883a 	mov	r4,fp
   16884:	00183940 	call	18394 <__pow5mult>
   16888:	d9800917 	ldw	r6,36(sp)
   1688c:	100b883a 	mov	r5,r2
   16890:	e009883a 	mov	r4,fp
   16894:	1023883a 	mov	r17,r2
   16898:	00181080 	call	18108 <__multiply>
   1689c:	1021883a 	mov	r16,r2
   168a0:	d8800a17 	ldw	r2,40(sp)
   168a4:	d9400917 	ldw	r5,36(sp)
   168a8:	e009883a 	mov	r4,fp
   168ac:	1545c83a 	sub	r2,r2,r21
   168b0:	d8800a15 	stw	r2,40(sp)
   168b4:	0017d400 	call	17d40 <_Bfree>
   168b8:	d8c00a17 	ldw	r3,40(sp)
   168bc:	18009f1e 	bne	r3,zero,16b3c <_dtoa_r+0xce4>
   168c0:	05c00044 	movi	r23,1
   168c4:	e009883a 	mov	r4,fp
   168c8:	b80b883a 	mov	r5,r23
   168cc:	00180cc0 	call	180cc <__i2b>
   168d0:	d9000d17 	ldw	r4,52(sp)
   168d4:	102b883a 	mov	r21,r2
   168d8:	2000ce26 	beq	r4,zero,16c14 <_dtoa_r+0xdbc>
   168dc:	200d883a 	mov	r6,r4
   168e0:	100b883a 	mov	r5,r2
   168e4:	e009883a 	mov	r4,fp
   168e8:	00183940 	call	18394 <__pow5mult>
   168ec:	d9800317 	ldw	r6,12(sp)
   168f0:	102b883a 	mov	r21,r2
   168f4:	b981810e 	bge	r23,r6,16efc <_dtoa_r+0x10a4>
   168f8:	0027883a 	mov	r19,zero
   168fc:	a8800417 	ldw	r2,16(r21)
   16900:	05c00804 	movi	r23,32
   16904:	10800104 	addi	r2,r2,4
   16908:	1085883a 	add	r2,r2,r2
   1690c:	1085883a 	add	r2,r2,r2
   16910:	a885883a 	add	r2,r21,r2
   16914:	11000017 	ldw	r4,0(r2)
   16918:	0017fb40 	call	17fb4 <__hi0bits>
   1691c:	b885c83a 	sub	r2,r23,r2
   16920:	1585883a 	add	r2,r2,r22
   16924:	108007cc 	andi	r2,r2,31
   16928:	1000b326 	beq	r2,zero,16bf8 <_dtoa_r+0xda0>
   1692c:	00c00804 	movi	r3,32
   16930:	1887c83a 	sub	r3,r3,r2
   16934:	01000104 	movi	r4,4
   16938:	20c2cd0e 	bge	r4,r3,17470 <_dtoa_r+0x1618>
   1693c:	00c00704 	movi	r3,28
   16940:	1885c83a 	sub	r2,r3,r2
   16944:	d8c00817 	ldw	r3,32(sp)
   16948:	a0a9883a 	add	r20,r20,r2
   1694c:	b0ad883a 	add	r22,r22,r2
   16950:	1887883a 	add	r3,r3,r2
   16954:	d8c00815 	stw	r3,32(sp)
   16958:	d9800817 	ldw	r6,32(sp)
   1695c:	0180040e 	bge	zero,r6,16970 <_dtoa_r+0xb18>
   16960:	800b883a 	mov	r5,r16
   16964:	e009883a 	mov	r4,fp
   16968:	00184d40 	call	184d4 <__lshift>
   1696c:	1021883a 	mov	r16,r2
   16970:	0580050e 	bge	zero,r22,16988 <_dtoa_r+0xb30>
   16974:	a80b883a 	mov	r5,r21
   16978:	b00d883a 	mov	r6,r22
   1697c:	e009883a 	mov	r4,fp
   16980:	00184d40 	call	184d4 <__lshift>
   16984:	102b883a 	mov	r21,r2
   16988:	d9c00e17 	ldw	r7,56(sp)
   1698c:	3801211e 	bne	r7,zero,16e14 <_dtoa_r+0xfbc>
   16990:	d9800617 	ldw	r6,24(sp)
   16994:	0181380e 	bge	zero,r6,16e78 <_dtoa_r+0x1020>
   16998:	d8c00b17 	ldw	r3,44(sp)
   1699c:	1800ab1e 	bne	r3,zero,16c4c <_dtoa_r+0xdf4>
   169a0:	dc800717 	ldw	r18,28(sp)
   169a4:	dcc00617 	ldw	r19,24(sp)
   169a8:	9029883a 	mov	r20,r18
   169ac:	00000206 	br	169b8 <_dtoa_r+0xb60>
   169b0:	0017d680 	call	17d68 <__multadd>
   169b4:	1021883a 	mov	r16,r2
   169b8:	a80b883a 	mov	r5,r21
   169bc:	8009883a 	mov	r4,r16
   169c0:	0015c300 	call	15c30 <quorem>
   169c4:	10800c04 	addi	r2,r2,48
   169c8:	90800005 	stb	r2,0(r18)
   169cc:	94800044 	addi	r18,r18,1
   169d0:	9507c83a 	sub	r3,r18,r20
   169d4:	000f883a 	mov	r7,zero
   169d8:	01800284 	movi	r6,10
   169dc:	800b883a 	mov	r5,r16
   169e0:	e009883a 	mov	r4,fp
   169e4:	1cfff216 	blt	r3,r19,169b0 <_gp+0xffff0884>
   169e8:	1011883a 	mov	r8,r2
   169ec:	d8800617 	ldw	r2,24(sp)
   169f0:	0082370e 	bge	zero,r2,172d0 <_dtoa_r+0x1478>
   169f4:	d9000717 	ldw	r4,28(sp)
   169f8:	0025883a 	mov	r18,zero
   169fc:	20af883a 	add	r23,r4,r2
   16a00:	01800044 	movi	r6,1
   16a04:	800b883a 	mov	r5,r16
   16a08:	e009883a 	mov	r4,fp
   16a0c:	da001715 	stw	r8,92(sp)
   16a10:	00184d40 	call	184d4 <__lshift>
   16a14:	a80b883a 	mov	r5,r21
   16a18:	1009883a 	mov	r4,r2
   16a1c:	d8800915 	stw	r2,36(sp)
   16a20:	001861c0 	call	1861c <__mcmp>
   16a24:	da001717 	ldw	r8,92(sp)
   16a28:	0081800e 	bge	zero,r2,1702c <_dtoa_r+0x11d4>
   16a2c:	b93fffc3 	ldbu	r4,-1(r23)
   16a30:	b8bfffc4 	addi	r2,r23,-1
   16a34:	1007883a 	mov	r3,r2
   16a38:	01800e44 	movi	r6,57
   16a3c:	d9c00717 	ldw	r7,28(sp)
   16a40:	00000506 	br	16a58 <_dtoa_r+0xc00>
   16a44:	18ffffc4 	addi	r3,r3,-1
   16a48:	11c12326 	beq	r2,r7,16ed8 <_dtoa_r+0x1080>
   16a4c:	19000003 	ldbu	r4,0(r3)
   16a50:	102f883a 	mov	r23,r2
   16a54:	10bfffc4 	addi	r2,r2,-1
   16a58:	21403fcc 	andi	r5,r4,255
   16a5c:	2940201c 	xori	r5,r5,128
   16a60:	297fe004 	addi	r5,r5,-128
   16a64:	29bff726 	beq	r5,r6,16a44 <_gp+0xffff0918>
   16a68:	21000044 	addi	r4,r4,1
   16a6c:	11000005 	stb	r4,0(r2)
   16a70:	a80b883a 	mov	r5,r21
   16a74:	e009883a 	mov	r4,fp
   16a78:	0017d400 	call	17d40 <_Bfree>
   16a7c:	883ea026 	beq	r17,zero,16500 <_gp+0xffff03d4>
   16a80:	90000426 	beq	r18,zero,16a94 <_dtoa_r+0xc3c>
   16a84:	94400326 	beq	r18,r17,16a94 <_dtoa_r+0xc3c>
   16a88:	900b883a 	mov	r5,r18
   16a8c:	e009883a 	mov	r4,fp
   16a90:	0017d400 	call	17d40 <_Bfree>
   16a94:	880b883a 	mov	r5,r17
   16a98:	e009883a 	mov	r4,fp
   16a9c:	0017d400 	call	17d40 <_Bfree>
   16aa0:	003e9706 	br	16500 <_gp+0xffff03d4>
   16aa4:	01800044 	movi	r6,1
   16aa8:	d9800e15 	stw	r6,56(sp)
   16aac:	003d9606 	br	16108 <_gp+0xfffeffdc>
   16ab0:	d8800817 	ldw	r2,32(sp)
   16ab4:	d8c00517 	ldw	r3,20(sp)
   16ab8:	d8000d15 	stw	zero,52(sp)
   16abc:	10c5c83a 	sub	r2,r2,r3
   16ac0:	00c9c83a 	sub	r4,zero,r3
   16ac4:	d8800815 	stw	r2,32(sp)
   16ac8:	d9000a15 	stw	r4,40(sp)
   16acc:	003d9706 	br	1612c <_gp+0xffff0000>
   16ad0:	05adc83a 	sub	r22,zero,r22
   16ad4:	dd800815 	stw	r22,32(sp)
   16ad8:	002d883a 	mov	r22,zero
   16adc:	003d8e06 	br	16118 <_gp+0xfffeffec>
   16ae0:	d9000517 	ldw	r4,20(sp)
   16ae4:	00121880 	call	12188 <__floatsidf>
   16ae8:	100d883a 	mov	r6,r2
   16aec:	180f883a 	mov	r7,r3
   16af0:	a009883a 	mov	r4,r20
   16af4:	880b883a 	mov	r5,r17
   16af8:	001c0f80 	call	1c0f8 <__eqdf2>
   16afc:	103d7126 	beq	r2,zero,160c4 <_gp+0xfffeff98>
   16b00:	d9c00517 	ldw	r7,20(sp)
   16b04:	39ffffc4 	addi	r7,r7,-1
   16b08:	d9c00515 	stw	r7,20(sp)
   16b0c:	003d6d06 	br	160c4 <_gp+0xfffeff98>
   16b10:	dd400a17 	ldw	r21,40(sp)
   16b14:	dd000817 	ldw	r20,32(sp)
   16b18:	0023883a 	mov	r17,zero
   16b1c:	003f4806 	br	16840 <_gp+0xffff0714>
   16b20:	10e3c83a 	sub	r17,r2,r3
   16b24:	9448983a 	sll	r4,r18,r17
   16b28:	003d3206 	br	15ff4 <_gp+0xfffefec8>
   16b2c:	d8000e15 	stw	zero,56(sp)
   16b30:	003d7506 	br	16108 <_gp+0xfffeffdc>
   16b34:	b005883a 	mov	r2,r22
   16b38:	003f4506 	br	16850 <_gp+0xffff0724>
   16b3c:	dc000915 	stw	r16,36(sp)
   16b40:	d9800a17 	ldw	r6,40(sp)
   16b44:	d9400917 	ldw	r5,36(sp)
   16b48:	e009883a 	mov	r4,fp
   16b4c:	00183940 	call	18394 <__pow5mult>
   16b50:	1021883a 	mov	r16,r2
   16b54:	003f5a06 	br	168c0 <_gp+0xffff0794>
   16b58:	01c00044 	movi	r7,1
   16b5c:	d9c00b15 	stw	r7,44(sp)
   16b60:	d8802217 	ldw	r2,136(sp)
   16b64:	0081280e 	bge	zero,r2,17008 <_dtoa_r+0x11b0>
   16b68:	100d883a 	mov	r6,r2
   16b6c:	1021883a 	mov	r16,r2
   16b70:	d8800c15 	stw	r2,48(sp)
   16b74:	d8800615 	stw	r2,24(sp)
   16b78:	003d8806 	br	1619c <_gp+0xffff0070>
   16b7c:	d8800617 	ldw	r2,24(sp)
   16b80:	00be9b16 	blt	zero,r2,165f0 <_gp+0xffff04c4>
   16b84:	10010f1e 	bne	r2,zero,16fc4 <_dtoa_r+0x116c>
   16b88:	880b883a 	mov	r5,r17
   16b8c:	000d883a 	mov	r6,zero
   16b90:	01d00534 	movhi	r7,16404
   16b94:	8009883a 	mov	r4,r16
   16b98:	001189c0 	call	1189c <__muldf3>
   16b9c:	900d883a 	mov	r6,r18
   16ba0:	980f883a 	mov	r7,r19
   16ba4:	1009883a 	mov	r4,r2
   16ba8:	180b883a 	mov	r5,r3
   16bac:	001c1800 	call	1c180 <__gedf2>
   16bb0:	002b883a 	mov	r21,zero
   16bb4:	0023883a 	mov	r17,zero
   16bb8:	1000bf16 	blt	r2,zero,16eb8 <_dtoa_r+0x1060>
   16bbc:	d9802217 	ldw	r6,136(sp)
   16bc0:	ddc00717 	ldw	r23,28(sp)
   16bc4:	018c303a 	nor	r6,zero,r6
   16bc8:	d9800515 	stw	r6,20(sp)
   16bcc:	a80b883a 	mov	r5,r21
   16bd0:	e009883a 	mov	r4,fp
   16bd4:	0017d400 	call	17d40 <_Bfree>
   16bd8:	883e4926 	beq	r17,zero,16500 <_gp+0xffff03d4>
   16bdc:	003fad06 	br	16a94 <_gp+0xffff0968>
   16be0:	d9c01117 	ldw	r7,68(sp)
   16be4:	3801bc26 	beq	r7,zero,172d8 <_dtoa_r+0x1480>
   16be8:	10810cc4 	addi	r2,r2,1075
   16bec:	dd400a17 	ldw	r21,40(sp)
   16bf0:	dd000817 	ldw	r20,32(sp)
   16bf4:	003f0a06 	br	16820 <_gp+0xffff06f4>
   16bf8:	00800704 	movi	r2,28
   16bfc:	d9000817 	ldw	r4,32(sp)
   16c00:	a0a9883a 	add	r20,r20,r2
   16c04:	b0ad883a 	add	r22,r22,r2
   16c08:	2089883a 	add	r4,r4,r2
   16c0c:	d9000815 	stw	r4,32(sp)
   16c10:	003f5106 	br	16958 <_gp+0xffff082c>
   16c14:	d8c00317 	ldw	r3,12(sp)
   16c18:	b8c1fc0e 	bge	r23,r3,1740c <_dtoa_r+0x15b4>
   16c1c:	0027883a 	mov	r19,zero
   16c20:	b805883a 	mov	r2,r23
   16c24:	003f3e06 	br	16920 <_gp+0xffff07f4>
   16c28:	880b883a 	mov	r5,r17
   16c2c:	e009883a 	mov	r4,fp
   16c30:	000f883a 	mov	r7,zero
   16c34:	01800284 	movi	r6,10
   16c38:	0017d680 	call	17d68 <__multadd>
   16c3c:	d9000c17 	ldw	r4,48(sp)
   16c40:	1023883a 	mov	r17,r2
   16c44:	0102040e 	bge	zero,r4,17458 <_dtoa_r+0x1600>
   16c48:	d9000615 	stw	r4,24(sp)
   16c4c:	0500050e 	bge	zero,r20,16c64 <_dtoa_r+0xe0c>
   16c50:	880b883a 	mov	r5,r17
   16c54:	a00d883a 	mov	r6,r20
   16c58:	e009883a 	mov	r4,fp
   16c5c:	00184d40 	call	184d4 <__lshift>
   16c60:	1023883a 	mov	r17,r2
   16c64:	9801241e 	bne	r19,zero,170f8 <_dtoa_r+0x12a0>
   16c68:	8829883a 	mov	r20,r17
   16c6c:	d9000617 	ldw	r4,24(sp)
   16c70:	dcc00717 	ldw	r19,28(sp)
   16c74:	9480004c 	andi	r18,r18,1
   16c78:	20bfffc4 	addi	r2,r4,-1
   16c7c:	9885883a 	add	r2,r19,r2
   16c80:	d8800415 	stw	r2,16(sp)
   16c84:	dc800615 	stw	r18,24(sp)
   16c88:	a80b883a 	mov	r5,r21
   16c8c:	8009883a 	mov	r4,r16
   16c90:	0015c300 	call	15c30 <quorem>
   16c94:	880b883a 	mov	r5,r17
   16c98:	8009883a 	mov	r4,r16
   16c9c:	102f883a 	mov	r23,r2
   16ca0:	001861c0 	call	1861c <__mcmp>
   16ca4:	a80b883a 	mov	r5,r21
   16ca8:	a00d883a 	mov	r6,r20
   16cac:	e009883a 	mov	r4,fp
   16cb0:	102d883a 	mov	r22,r2
   16cb4:	001867c0 	call	1867c <__mdiff>
   16cb8:	1007883a 	mov	r3,r2
   16cbc:	10800317 	ldw	r2,12(r2)
   16cc0:	bc800c04 	addi	r18,r23,48
   16cc4:	180b883a 	mov	r5,r3
   16cc8:	10004e1e 	bne	r2,zero,16e04 <_dtoa_r+0xfac>
   16ccc:	8009883a 	mov	r4,r16
   16cd0:	d8c01615 	stw	r3,88(sp)
   16cd4:	001861c0 	call	1861c <__mcmp>
   16cd8:	d8c01617 	ldw	r3,88(sp)
   16cdc:	e009883a 	mov	r4,fp
   16ce0:	d8801615 	stw	r2,88(sp)
   16ce4:	180b883a 	mov	r5,r3
   16ce8:	0017d400 	call	17d40 <_Bfree>
   16cec:	d8801617 	ldw	r2,88(sp)
   16cf0:	1000041e 	bne	r2,zero,16d04 <_dtoa_r+0xeac>
   16cf4:	d9800317 	ldw	r6,12(sp)
   16cf8:	3000021e 	bne	r6,zero,16d04 <_dtoa_r+0xeac>
   16cfc:	d8c00617 	ldw	r3,24(sp)
   16d00:	18003726 	beq	r3,zero,16de0 <_dtoa_r+0xf88>
   16d04:	b0002016 	blt	r22,zero,16d88 <_dtoa_r+0xf30>
   16d08:	b000041e 	bne	r22,zero,16d1c <_dtoa_r+0xec4>
   16d0c:	d9000317 	ldw	r4,12(sp)
   16d10:	2000021e 	bne	r4,zero,16d1c <_dtoa_r+0xec4>
   16d14:	d8c00617 	ldw	r3,24(sp)
   16d18:	18001b26 	beq	r3,zero,16d88 <_dtoa_r+0xf30>
   16d1c:	00810716 	blt	zero,r2,1713c <_dtoa_r+0x12e4>
   16d20:	d8c00417 	ldw	r3,16(sp)
   16d24:	9d800044 	addi	r22,r19,1
   16d28:	9c800005 	stb	r18,0(r19)
   16d2c:	b02f883a 	mov	r23,r22
   16d30:	98c10626 	beq	r19,r3,1714c <_dtoa_r+0x12f4>
   16d34:	800b883a 	mov	r5,r16
   16d38:	000f883a 	mov	r7,zero
   16d3c:	01800284 	movi	r6,10
   16d40:	e009883a 	mov	r4,fp
   16d44:	0017d680 	call	17d68 <__multadd>
   16d48:	1021883a 	mov	r16,r2
   16d4c:	000f883a 	mov	r7,zero
   16d50:	01800284 	movi	r6,10
   16d54:	880b883a 	mov	r5,r17
   16d58:	e009883a 	mov	r4,fp
   16d5c:	8d002526 	beq	r17,r20,16df4 <_dtoa_r+0xf9c>
   16d60:	0017d680 	call	17d68 <__multadd>
   16d64:	a00b883a 	mov	r5,r20
   16d68:	000f883a 	mov	r7,zero
   16d6c:	01800284 	movi	r6,10
   16d70:	e009883a 	mov	r4,fp
   16d74:	1023883a 	mov	r17,r2
   16d78:	0017d680 	call	17d68 <__multadd>
   16d7c:	1029883a 	mov	r20,r2
   16d80:	b027883a 	mov	r19,r22
   16d84:	003fc006 	br	16c88 <_gp+0xffff0b5c>
   16d88:	9011883a 	mov	r8,r18
   16d8c:	00800e0e 	bge	zero,r2,16dc8 <_dtoa_r+0xf70>
   16d90:	800b883a 	mov	r5,r16
   16d94:	01800044 	movi	r6,1
   16d98:	e009883a 	mov	r4,fp
   16d9c:	da001715 	stw	r8,92(sp)
   16da0:	00184d40 	call	184d4 <__lshift>
   16da4:	a80b883a 	mov	r5,r21
   16da8:	1009883a 	mov	r4,r2
   16dac:	1021883a 	mov	r16,r2
   16db0:	001861c0 	call	1861c <__mcmp>
   16db4:	da001717 	ldw	r8,92(sp)
   16db8:	0081960e 	bge	zero,r2,17414 <_dtoa_r+0x15bc>
   16dbc:	00800e44 	movi	r2,57
   16dc0:	40817026 	beq	r8,r2,17384 <_dtoa_r+0x152c>
   16dc4:	ba000c44 	addi	r8,r23,49
   16dc8:	8825883a 	mov	r18,r17
   16dcc:	9dc00044 	addi	r23,r19,1
   16dd0:	9a000005 	stb	r8,0(r19)
   16dd4:	a023883a 	mov	r17,r20
   16dd8:	dc000915 	stw	r16,36(sp)
   16ddc:	003f2406 	br	16a70 <_gp+0xffff0944>
   16de0:	00800e44 	movi	r2,57
   16de4:	9011883a 	mov	r8,r18
   16de8:	90816626 	beq	r18,r2,17384 <_dtoa_r+0x152c>
   16dec:	05bff516 	blt	zero,r22,16dc4 <_gp+0xffff0c98>
   16df0:	003ff506 	br	16dc8 <_gp+0xffff0c9c>
   16df4:	0017d680 	call	17d68 <__multadd>
   16df8:	1023883a 	mov	r17,r2
   16dfc:	1029883a 	mov	r20,r2
   16e00:	003fdf06 	br	16d80 <_gp+0xffff0c54>
   16e04:	e009883a 	mov	r4,fp
   16e08:	0017d400 	call	17d40 <_Bfree>
   16e0c:	00800044 	movi	r2,1
   16e10:	003fbc06 	br	16d04 <_gp+0xffff0bd8>
   16e14:	a80b883a 	mov	r5,r21
   16e18:	8009883a 	mov	r4,r16
   16e1c:	001861c0 	call	1861c <__mcmp>
   16e20:	103edb0e 	bge	r2,zero,16990 <_gp+0xffff0864>
   16e24:	800b883a 	mov	r5,r16
   16e28:	000f883a 	mov	r7,zero
   16e2c:	01800284 	movi	r6,10
   16e30:	e009883a 	mov	r4,fp
   16e34:	0017d680 	call	17d68 <__multadd>
   16e38:	1021883a 	mov	r16,r2
   16e3c:	d8800517 	ldw	r2,20(sp)
   16e40:	d8c00b17 	ldw	r3,44(sp)
   16e44:	10bfffc4 	addi	r2,r2,-1
   16e48:	d8800515 	stw	r2,20(sp)
   16e4c:	183f761e 	bne	r3,zero,16c28 <_gp+0xffff0afc>
   16e50:	d9000c17 	ldw	r4,48(sp)
   16e54:	0101730e 	bge	zero,r4,17424 <_dtoa_r+0x15cc>
   16e58:	d9000615 	stw	r4,24(sp)
   16e5c:	003ed006 	br	169a0 <_gp+0xffff0874>
   16e60:	00800084 	movi	r2,2
   16e64:	3081861e 	bne	r6,r2,17480 <_dtoa_r+0x1628>
   16e68:	d8000b15 	stw	zero,44(sp)
   16e6c:	003f3c06 	br	16b60 <_gp+0xffff0a34>
   16e70:	dc000917 	ldw	r16,36(sp)
   16e74:	003e9206 	br	168c0 <_gp+0xffff0794>
   16e78:	d9c00317 	ldw	r7,12(sp)
   16e7c:	00800084 	movi	r2,2
   16e80:	11fec50e 	bge	r2,r7,16998 <_gp+0xffff086c>
   16e84:	d9000617 	ldw	r4,24(sp)
   16e88:	20013c1e 	bne	r4,zero,1737c <_dtoa_r+0x1524>
   16e8c:	a80b883a 	mov	r5,r21
   16e90:	000f883a 	mov	r7,zero
   16e94:	01800144 	movi	r6,5
   16e98:	e009883a 	mov	r4,fp
   16e9c:	0017d680 	call	17d68 <__multadd>
   16ea0:	100b883a 	mov	r5,r2
   16ea4:	8009883a 	mov	r4,r16
   16ea8:	102b883a 	mov	r21,r2
   16eac:	001861c0 	call	1861c <__mcmp>
   16eb0:	dc000915 	stw	r16,36(sp)
   16eb4:	00bf410e 	bge	zero,r2,16bbc <_gp+0xffff0a90>
   16eb8:	d9c00717 	ldw	r7,28(sp)
   16ebc:	00800c44 	movi	r2,49
   16ec0:	38800005 	stb	r2,0(r7)
   16ec4:	d8800517 	ldw	r2,20(sp)
   16ec8:	3dc00044 	addi	r23,r7,1
   16ecc:	10800044 	addi	r2,r2,1
   16ed0:	d8800515 	stw	r2,20(sp)
   16ed4:	003f3d06 	br	16bcc <_gp+0xffff0aa0>
   16ed8:	d9800517 	ldw	r6,20(sp)
   16edc:	d9c00717 	ldw	r7,28(sp)
   16ee0:	00800c44 	movi	r2,49
   16ee4:	31800044 	addi	r6,r6,1
   16ee8:	d9800515 	stw	r6,20(sp)
   16eec:	38800005 	stb	r2,0(r7)
   16ef0:	003edf06 	br	16a70 <_gp+0xffff0944>
   16ef4:	d8000b15 	stw	zero,44(sp)
   16ef8:	003c9f06 	br	16178 <_gp+0xffff004c>
   16efc:	903e7e1e 	bne	r18,zero,168f8 <_gp+0xffff07cc>
   16f00:	00800434 	movhi	r2,16
   16f04:	10bfffc4 	addi	r2,r2,-1
   16f08:	9884703a 	and	r2,r19,r2
   16f0c:	1000ea1e 	bne	r2,zero,172b8 <_dtoa_r+0x1460>
   16f10:	9cdffc2c 	andhi	r19,r19,32752
   16f14:	9800e826 	beq	r19,zero,172b8 <_dtoa_r+0x1460>
   16f18:	d9c00817 	ldw	r7,32(sp)
   16f1c:	b5800044 	addi	r22,r22,1
   16f20:	04c00044 	movi	r19,1
   16f24:	39c00044 	addi	r7,r7,1
   16f28:	d9c00815 	stw	r7,32(sp)
   16f2c:	d8800d17 	ldw	r2,52(sp)
   16f30:	103e721e 	bne	r2,zero,168fc <_gp+0xffff07d0>
   16f34:	00800044 	movi	r2,1
   16f38:	003e7906 	br	16920 <_gp+0xffff07f4>
   16f3c:	8009883a 	mov	r4,r16
   16f40:	00121880 	call	12188 <__floatsidf>
   16f44:	d9800f17 	ldw	r6,60(sp)
   16f48:	d9c01017 	ldw	r7,64(sp)
   16f4c:	1009883a 	mov	r4,r2
   16f50:	180b883a 	mov	r5,r3
   16f54:	001189c0 	call	1189c <__muldf3>
   16f58:	000d883a 	mov	r6,zero
   16f5c:	01d00734 	movhi	r7,16412
   16f60:	1009883a 	mov	r4,r2
   16f64:	180b883a 	mov	r5,r3
   16f68:	0010ff00 	call	10ff0 <__adddf3>
   16f6c:	047f3034 	movhi	r17,64704
   16f70:	1021883a 	mov	r16,r2
   16f74:	1c63883a 	add	r17,r3,r17
   16f78:	d9000f17 	ldw	r4,60(sp)
   16f7c:	d9401017 	ldw	r5,64(sp)
   16f80:	000d883a 	mov	r6,zero
   16f84:	01d00534 	movhi	r7,16404
   16f88:	001c3500 	call	1c350 <__subdf3>
   16f8c:	800d883a 	mov	r6,r16
   16f90:	880f883a 	mov	r7,r17
   16f94:	1009883a 	mov	r4,r2
   16f98:	180b883a 	mov	r5,r3
   16f9c:	102b883a 	mov	r21,r2
   16fa0:	1829883a 	mov	r20,r3
   16fa4:	001c1800 	call	1c180 <__gedf2>
   16fa8:	00806c16 	blt	zero,r2,1715c <_dtoa_r+0x1304>
   16fac:	89e0003c 	xorhi	r7,r17,32768
   16fb0:	800d883a 	mov	r6,r16
   16fb4:	a809883a 	mov	r4,r21
   16fb8:	a00b883a 	mov	r5,r20
   16fbc:	001c25c0 	call	1c25c <__ledf2>
   16fc0:	103d7e0e 	bge	r2,zero,165bc <_gp+0xffff0490>
   16fc4:	002b883a 	mov	r21,zero
   16fc8:	0023883a 	mov	r17,zero
   16fcc:	003efb06 	br	16bbc <_gp+0xffff0a90>
   16fd0:	d8800717 	ldw	r2,28(sp)
   16fd4:	003bd006 	br	15f18 <_gp+0xfffefdec>
   16fd8:	d9000a17 	ldw	r4,40(sp)
   16fdc:	d9800d17 	ldw	r6,52(sp)
   16fe0:	dd400a15 	stw	r21,40(sp)
   16fe4:	a905c83a 	sub	r2,r21,r4
   16fe8:	308d883a 	add	r6,r6,r2
   16fec:	d9800d15 	stw	r6,52(sp)
   16ff0:	002b883a 	mov	r21,zero
   16ff4:	003e0606 	br	16810 <_gp+0xffff06e4>
   16ff8:	9023883a 	mov	r17,r18
   16ffc:	9829883a 	mov	r20,r19
   17000:	04000084 	movi	r16,2
   17004:	003c9206 	br	16250 <_gp+0xffff0124>
   17008:	04000044 	movi	r16,1
   1700c:	dc000c15 	stw	r16,48(sp)
   17010:	dc000615 	stw	r16,24(sp)
   17014:	dc002215 	stw	r16,136(sp)
   17018:	e0001115 	stw	zero,68(fp)
   1701c:	000b883a 	mov	r5,zero
   17020:	003c6906 	br	161c8 <_gp+0xffff009c>
   17024:	3021883a 	mov	r16,r6
   17028:	003ffb06 	br	17018 <_gp+0xffff0eec>
   1702c:	1000021e 	bne	r2,zero,17038 <_dtoa_r+0x11e0>
   17030:	4200004c 	andi	r8,r8,1
   17034:	403e7d1e 	bne	r8,zero,16a2c <_gp+0xffff0900>
   17038:	01000c04 	movi	r4,48
   1703c:	00000106 	br	17044 <_dtoa_r+0x11ec>
   17040:	102f883a 	mov	r23,r2
   17044:	b8bfffc4 	addi	r2,r23,-1
   17048:	10c00007 	ldb	r3,0(r2)
   1704c:	193ffc26 	beq	r3,r4,17040 <_gp+0xffff0f14>
   17050:	003e8706 	br	16a70 <_gp+0xffff0944>
   17054:	d8800517 	ldw	r2,20(sp)
   17058:	00a3c83a 	sub	r17,zero,r2
   1705c:	8800a426 	beq	r17,zero,172f0 <_dtoa_r+0x1498>
   17060:	888003cc 	andi	r2,r17,15
   17064:	100490fa 	slli	r2,r2,3
   17068:	00c000b4 	movhi	r3,2
   1706c:	18f5c404 	addi	r3,r3,-10480
   17070:	1885883a 	add	r2,r3,r2
   17074:	11800017 	ldw	r6,0(r2)
   17078:	11c00117 	ldw	r7,4(r2)
   1707c:	9009883a 	mov	r4,r18
   17080:	980b883a 	mov	r5,r19
   17084:	8823d13a 	srai	r17,r17,4
   17088:	001189c0 	call	1189c <__muldf3>
   1708c:	d8800f15 	stw	r2,60(sp)
   17090:	d8c01015 	stw	r3,64(sp)
   17094:	8800e826 	beq	r17,zero,17438 <_dtoa_r+0x15e0>
   17098:	050000b4 	movhi	r20,2
   1709c:	a535ba04 	addi	r20,r20,-10520
   170a0:	04000084 	movi	r16,2
   170a4:	8980004c 	andi	r6,r17,1
   170a8:	1009883a 	mov	r4,r2
   170ac:	8823d07a 	srai	r17,r17,1
   170b0:	180b883a 	mov	r5,r3
   170b4:	30000426 	beq	r6,zero,170c8 <_dtoa_r+0x1270>
   170b8:	a1800017 	ldw	r6,0(r20)
   170bc:	a1c00117 	ldw	r7,4(r20)
   170c0:	84000044 	addi	r16,r16,1
   170c4:	001189c0 	call	1189c <__muldf3>
   170c8:	a5000204 	addi	r20,r20,8
   170cc:	883ff51e 	bne	r17,zero,170a4 <_gp+0xffff0f78>
   170d0:	d8800f15 	stw	r2,60(sp)
   170d4:	d8c01015 	stw	r3,64(sp)
   170d8:	003c7606 	br	162b4 <_gp+0xffff0188>
   170dc:	00c00c04 	movi	r3,48
   170e0:	10c00005 	stb	r3,0(r2)
   170e4:	d8c00517 	ldw	r3,20(sp)
   170e8:	bd3fffc3 	ldbu	r20,-1(r23)
   170ec:	18c00044 	addi	r3,r3,1
   170f0:	d8c00515 	stw	r3,20(sp)
   170f4:	003db906 	br	167dc <_gp+0xffff06b0>
   170f8:	89400117 	ldw	r5,4(r17)
   170fc:	e009883a 	mov	r4,fp
   17100:	0017c980 	call	17c98 <_Balloc>
   17104:	89800417 	ldw	r6,16(r17)
   17108:	89400304 	addi	r5,r17,12
   1710c:	11000304 	addi	r4,r2,12
   17110:	31800084 	addi	r6,r6,2
   17114:	318d883a 	add	r6,r6,r6
   17118:	318d883a 	add	r6,r6,r6
   1711c:	1027883a 	mov	r19,r2
   17120:	0017b500 	call	17b50 <memcpy>
   17124:	01800044 	movi	r6,1
   17128:	980b883a 	mov	r5,r19
   1712c:	e009883a 	mov	r4,fp
   17130:	00184d40 	call	184d4 <__lshift>
   17134:	1029883a 	mov	r20,r2
   17138:	003ecc06 	br	16c6c <_gp+0xffff0b40>
   1713c:	00800e44 	movi	r2,57
   17140:	90809026 	beq	r18,r2,17384 <_dtoa_r+0x152c>
   17144:	92000044 	addi	r8,r18,1
   17148:	003f1f06 	br	16dc8 <_gp+0xffff0c9c>
   1714c:	9011883a 	mov	r8,r18
   17150:	8825883a 	mov	r18,r17
   17154:	a023883a 	mov	r17,r20
   17158:	003e2906 	br	16a00 <_gp+0xffff08d4>
   1715c:	002b883a 	mov	r21,zero
   17160:	0023883a 	mov	r17,zero
   17164:	003f5406 	br	16eb8 <_gp+0xffff0d8c>
   17168:	61bfffc4 	addi	r6,r12,-1
   1716c:	300490fa 	slli	r2,r6,3
   17170:	00c000b4 	movhi	r3,2
   17174:	18f5c404 	addi	r3,r3,-10480
   17178:	1885883a 	add	r2,r3,r2
   1717c:	11000017 	ldw	r4,0(r2)
   17180:	11400117 	ldw	r5,4(r2)
   17184:	d8800717 	ldw	r2,28(sp)
   17188:	880f883a 	mov	r7,r17
   1718c:	d9801215 	stw	r6,72(sp)
   17190:	800d883a 	mov	r6,r16
   17194:	db001615 	stw	r12,88(sp)
   17198:	15c00044 	addi	r23,r2,1
   1719c:	001189c0 	call	1189c <__muldf3>
   171a0:	d9401017 	ldw	r5,64(sp)
   171a4:	d9000f17 	ldw	r4,60(sp)
   171a8:	d8c01515 	stw	r3,84(sp)
   171ac:	d8801415 	stw	r2,80(sp)
   171b0:	00121080 	call	12108 <__fixdfsi>
   171b4:	1009883a 	mov	r4,r2
   171b8:	1021883a 	mov	r16,r2
   171bc:	00121880 	call	12188 <__floatsidf>
   171c0:	d9000f17 	ldw	r4,60(sp)
   171c4:	d9401017 	ldw	r5,64(sp)
   171c8:	100d883a 	mov	r6,r2
   171cc:	180f883a 	mov	r7,r3
   171d0:	001c3500 	call	1c350 <__subdf3>
   171d4:	1829883a 	mov	r20,r3
   171d8:	d8c00717 	ldw	r3,28(sp)
   171dc:	84000c04 	addi	r16,r16,48
   171e0:	1023883a 	mov	r17,r2
   171e4:	1c000005 	stb	r16,0(r3)
   171e8:	db001617 	ldw	r12,88(sp)
   171ec:	00800044 	movi	r2,1
   171f0:	60802226 	beq	r12,r2,1727c <_dtoa_r+0x1424>
   171f4:	d9c00717 	ldw	r7,28(sp)
   171f8:	8805883a 	mov	r2,r17
   171fc:	b82b883a 	mov	r21,r23
   17200:	3b19883a 	add	r12,r7,r12
   17204:	6023883a 	mov	r17,r12
   17208:	a007883a 	mov	r3,r20
   1720c:	dc800f15 	stw	r18,60(sp)
   17210:	000d883a 	mov	r6,zero
   17214:	01d00934 	movhi	r7,16420
   17218:	1009883a 	mov	r4,r2
   1721c:	180b883a 	mov	r5,r3
   17220:	001189c0 	call	1189c <__muldf3>
   17224:	180b883a 	mov	r5,r3
   17228:	1009883a 	mov	r4,r2
   1722c:	1829883a 	mov	r20,r3
   17230:	1025883a 	mov	r18,r2
   17234:	00121080 	call	12108 <__fixdfsi>
   17238:	1009883a 	mov	r4,r2
   1723c:	1021883a 	mov	r16,r2
   17240:	00121880 	call	12188 <__floatsidf>
   17244:	100d883a 	mov	r6,r2
   17248:	180f883a 	mov	r7,r3
   1724c:	9009883a 	mov	r4,r18
   17250:	a00b883a 	mov	r5,r20
   17254:	84000c04 	addi	r16,r16,48
   17258:	001c3500 	call	1c350 <__subdf3>
   1725c:	ad400044 	addi	r21,r21,1
   17260:	ac3fffc5 	stb	r16,-1(r21)
   17264:	ac7fea1e 	bne	r21,r17,17210 <_gp+0xffff10e4>
   17268:	1023883a 	mov	r17,r2
   1726c:	d8801217 	ldw	r2,72(sp)
   17270:	dc800f17 	ldw	r18,60(sp)
   17274:	1829883a 	mov	r20,r3
   17278:	b8af883a 	add	r23,r23,r2
   1727c:	d9001417 	ldw	r4,80(sp)
   17280:	d9401517 	ldw	r5,84(sp)
   17284:	000d883a 	mov	r6,zero
   17288:	01cff834 	movhi	r7,16352
   1728c:	0010ff00 	call	10ff0 <__adddf3>
   17290:	880d883a 	mov	r6,r17
   17294:	a00f883a 	mov	r7,r20
   17298:	1009883a 	mov	r4,r2
   1729c:	180b883a 	mov	r5,r3
   172a0:	001c25c0 	call	1c25c <__ledf2>
   172a4:	10003e0e 	bge	r2,zero,173a0 <_dtoa_r+0x1548>
   172a8:	d9001317 	ldw	r4,76(sp)
   172ac:	bd3fffc3 	ldbu	r20,-1(r23)
   172b0:	d9000515 	stw	r4,20(sp)
   172b4:	003d3b06 	br	167a4 <_gp+0xffff0678>
   172b8:	0027883a 	mov	r19,zero
   172bc:	003f1b06 	br	16f2c <_gp+0xffff0e00>
   172c0:	d8800817 	ldw	r2,32(sp)
   172c4:	11e9c83a 	sub	r20,r2,r7
   172c8:	0005883a 	mov	r2,zero
   172cc:	003d5406 	br	16820 <_gp+0xffff06f4>
   172d0:	00800044 	movi	r2,1
   172d4:	003dc706 	br	169f4 <_gp+0xffff08c8>
   172d8:	d8c00217 	ldw	r3,8(sp)
   172dc:	00800d84 	movi	r2,54
   172e0:	dd400a17 	ldw	r21,40(sp)
   172e4:	10c5c83a 	sub	r2,r2,r3
   172e8:	dd000817 	ldw	r20,32(sp)
   172ec:	003d4c06 	br	16820 <_gp+0xffff06f4>
   172f0:	dc800f15 	stw	r18,60(sp)
   172f4:	dcc01015 	stw	r19,64(sp)
   172f8:	04000084 	movi	r16,2
   172fc:	003bed06 	br	162b4 <_gp+0xffff0188>
   17300:	d9000617 	ldw	r4,24(sp)
   17304:	203f0d26 	beq	r4,zero,16f3c <_gp+0xffff0e10>
   17308:	d9800c17 	ldw	r6,48(sp)
   1730c:	01bcab0e 	bge	zero,r6,165bc <_gp+0xffff0490>
   17310:	d9401017 	ldw	r5,64(sp)
   17314:	d9000f17 	ldw	r4,60(sp)
   17318:	000d883a 	mov	r6,zero
   1731c:	01d00934 	movhi	r7,16420
   17320:	001189c0 	call	1189c <__muldf3>
   17324:	81000044 	addi	r4,r16,1
   17328:	d8800f15 	stw	r2,60(sp)
   1732c:	d8c01015 	stw	r3,64(sp)
   17330:	00121880 	call	12188 <__floatsidf>
   17334:	d9800f17 	ldw	r6,60(sp)
   17338:	d9c01017 	ldw	r7,64(sp)
   1733c:	1009883a 	mov	r4,r2
   17340:	180b883a 	mov	r5,r3
   17344:	001189c0 	call	1189c <__muldf3>
   17348:	01d00734 	movhi	r7,16412
   1734c:	000d883a 	mov	r6,zero
   17350:	1009883a 	mov	r4,r2
   17354:	180b883a 	mov	r5,r3
   17358:	0010ff00 	call	10ff0 <__adddf3>
   1735c:	d9c00517 	ldw	r7,20(sp)
   17360:	047f3034 	movhi	r17,64704
   17364:	1021883a 	mov	r16,r2
   17368:	39ffffc4 	addi	r7,r7,-1
   1736c:	d9c01315 	stw	r7,76(sp)
   17370:	1c63883a 	add	r17,r3,r17
   17374:	db000c17 	ldw	r12,48(sp)
   17378:	003bea06 	br	16324 <_gp+0xffff01f8>
   1737c:	dc000915 	stw	r16,36(sp)
   17380:	003e0e06 	br	16bbc <_gp+0xffff0a90>
   17384:	01000e44 	movi	r4,57
   17388:	8825883a 	mov	r18,r17
   1738c:	9dc00044 	addi	r23,r19,1
   17390:	99000005 	stb	r4,0(r19)
   17394:	a023883a 	mov	r17,r20
   17398:	dc000915 	stw	r16,36(sp)
   1739c:	003da406 	br	16a30 <_gp+0xffff0904>
   173a0:	d9801417 	ldw	r6,80(sp)
   173a4:	d9c01517 	ldw	r7,84(sp)
   173a8:	0009883a 	mov	r4,zero
   173ac:	014ff834 	movhi	r5,16352
   173b0:	001c3500 	call	1c350 <__subdf3>
   173b4:	880d883a 	mov	r6,r17
   173b8:	a00f883a 	mov	r7,r20
   173bc:	1009883a 	mov	r4,r2
   173c0:	180b883a 	mov	r5,r3
   173c4:	001c1800 	call	1c180 <__gedf2>
   173c8:	00bc7c0e 	bge	zero,r2,165bc <_gp+0xffff0490>
   173cc:	01000c04 	movi	r4,48
   173d0:	00000106 	br	173d8 <_dtoa_r+0x1580>
   173d4:	102f883a 	mov	r23,r2
   173d8:	b8bfffc4 	addi	r2,r23,-1
   173dc:	10c00007 	ldb	r3,0(r2)
   173e0:	193ffc26 	beq	r3,r4,173d4 <_gp+0xffff12a8>
   173e4:	d9801317 	ldw	r6,76(sp)
   173e8:	d9800515 	stw	r6,20(sp)
   173ec:	003c4406 	br	16500 <_gp+0xffff03d4>
   173f0:	d9801317 	ldw	r6,76(sp)
   173f4:	d9800515 	stw	r6,20(sp)
   173f8:	003cea06 	br	167a4 <_gp+0xffff0678>
   173fc:	dd800f17 	ldw	r22,60(sp)
   17400:	dcc01017 	ldw	r19,64(sp)
   17404:	dc801217 	ldw	r18,72(sp)
   17408:	003c6c06 	br	165bc <_gp+0xffff0490>
   1740c:	903e031e 	bne	r18,zero,16c1c <_gp+0xffff0af0>
   17410:	003ebb06 	br	16f00 <_gp+0xffff0dd4>
   17414:	103e6c1e 	bne	r2,zero,16dc8 <_gp+0xffff0c9c>
   17418:	4080004c 	andi	r2,r8,1
   1741c:	103e6a26 	beq	r2,zero,16dc8 <_gp+0xffff0c9c>
   17420:	003e6606 	br	16dbc <_gp+0xffff0c90>
   17424:	d8c00317 	ldw	r3,12(sp)
   17428:	00800084 	movi	r2,2
   1742c:	10c02916 	blt	r2,r3,174d4 <_dtoa_r+0x167c>
   17430:	d9000c17 	ldw	r4,48(sp)
   17434:	003e8806 	br	16e58 <_gp+0xffff0d2c>
   17438:	04000084 	movi	r16,2
   1743c:	003b9d06 	br	162b4 <_gp+0xffff0188>
   17440:	d9001317 	ldw	r4,76(sp)
   17444:	d9000515 	stw	r4,20(sp)
   17448:	003cd606 	br	167a4 <_gp+0xffff0678>
   1744c:	d8801317 	ldw	r2,76(sp)
   17450:	d8800515 	stw	r2,20(sp)
   17454:	003c2a06 	br	16500 <_gp+0xffff03d4>
   17458:	d9800317 	ldw	r6,12(sp)
   1745c:	00800084 	movi	r2,2
   17460:	11801516 	blt	r2,r6,174b8 <_dtoa_r+0x1660>
   17464:	d9c00c17 	ldw	r7,48(sp)
   17468:	d9c00615 	stw	r7,24(sp)
   1746c:	003df706 	br	16c4c <_gp+0xffff0b20>
   17470:	193d3926 	beq	r3,r4,16958 <_gp+0xffff082c>
   17474:	00c00f04 	movi	r3,60
   17478:	1885c83a 	sub	r2,r3,r2
   1747c:	003ddf06 	br	16bfc <_gp+0xffff0ad0>
   17480:	e009883a 	mov	r4,fp
   17484:	e0001115 	stw	zero,68(fp)
   17488:	000b883a 	mov	r5,zero
   1748c:	0017c980 	call	17c98 <_Balloc>
   17490:	d8800715 	stw	r2,28(sp)
   17494:	d8c00717 	ldw	r3,28(sp)
   17498:	00bfffc4 	movi	r2,-1
   1749c:	01000044 	movi	r4,1
   174a0:	d8800c15 	stw	r2,48(sp)
   174a4:	e0c01015 	stw	r3,64(fp)
   174a8:	d9000b15 	stw	r4,44(sp)
   174ac:	d8800615 	stw	r2,24(sp)
   174b0:	d8002215 	stw	zero,136(sp)
   174b4:	003c4106 	br	165bc <_gp+0xffff0490>
   174b8:	d8c00c17 	ldw	r3,48(sp)
   174bc:	d8c00615 	stw	r3,24(sp)
   174c0:	003e7006 	br	16e84 <_gp+0xffff0d58>
   174c4:	04400044 	movi	r17,1
   174c8:	003b2006 	br	1614c <_gp+0xffff0020>
   174cc:	000b883a 	mov	r5,zero
   174d0:	003b3d06 	br	161c8 <_gp+0xffff009c>
   174d4:	d8800c17 	ldw	r2,48(sp)
   174d8:	d8800615 	stw	r2,24(sp)
   174dc:	003e6906 	br	16e84 <_gp+0xffff0d58>

000174e0 <_malloc_trim_r>:
   174e0:	defffb04 	addi	sp,sp,-20
   174e4:	dcc00315 	stw	r19,12(sp)
   174e8:	04c000b4 	movhi	r19,2
   174ec:	dc800215 	stw	r18,8(sp)
   174f0:	dc400115 	stw	r17,4(sp)
   174f4:	dc000015 	stw	r16,0(sp)
   174f8:	dfc00415 	stw	ra,16(sp)
   174fc:	2821883a 	mov	r16,r5
   17500:	9cf70a04 	addi	r19,r19,-9176
   17504:	2025883a 	mov	r18,r4
   17508:	001ced80 	call	1ced8 <__malloc_lock>
   1750c:	98800217 	ldw	r2,8(r19)
   17510:	14400117 	ldw	r17,4(r2)
   17514:	00bfff04 	movi	r2,-4
   17518:	88a2703a 	and	r17,r17,r2
   1751c:	8c21c83a 	sub	r16,r17,r16
   17520:	8403fbc4 	addi	r16,r16,4079
   17524:	8020d33a 	srli	r16,r16,12
   17528:	0083ffc4 	movi	r2,4095
   1752c:	843fffc4 	addi	r16,r16,-1
   17530:	8020933a 	slli	r16,r16,12
   17534:	1400060e 	bge	r2,r16,17550 <_malloc_trim_r+0x70>
   17538:	000b883a 	mov	r5,zero
   1753c:	9009883a 	mov	r4,r18
   17540:	0012d280 	call	12d28 <_sbrk_r>
   17544:	98c00217 	ldw	r3,8(r19)
   17548:	1c47883a 	add	r3,r3,r17
   1754c:	10c00a26 	beq	r2,r3,17578 <_malloc_trim_r+0x98>
   17550:	9009883a 	mov	r4,r18
   17554:	001cedc0 	call	1cedc <__malloc_unlock>
   17558:	0005883a 	mov	r2,zero
   1755c:	dfc00417 	ldw	ra,16(sp)
   17560:	dcc00317 	ldw	r19,12(sp)
   17564:	dc800217 	ldw	r18,8(sp)
   17568:	dc400117 	ldw	r17,4(sp)
   1756c:	dc000017 	ldw	r16,0(sp)
   17570:	dec00504 	addi	sp,sp,20
   17574:	f800283a 	ret
   17578:	040bc83a 	sub	r5,zero,r16
   1757c:	9009883a 	mov	r4,r18
   17580:	0012d280 	call	12d28 <_sbrk_r>
   17584:	00ffffc4 	movi	r3,-1
   17588:	10c00d26 	beq	r2,r3,175c0 <_malloc_trim_r+0xe0>
   1758c:	00c000b4 	movhi	r3,2
   17590:	18fae204 	addi	r3,r3,-5240
   17594:	18800017 	ldw	r2,0(r3)
   17598:	99000217 	ldw	r4,8(r19)
   1759c:	8c23c83a 	sub	r17,r17,r16
   175a0:	8c400054 	ori	r17,r17,1
   175a4:	1421c83a 	sub	r16,r2,r16
   175a8:	24400115 	stw	r17,4(r4)
   175ac:	9009883a 	mov	r4,r18
   175b0:	1c000015 	stw	r16,0(r3)
   175b4:	001cedc0 	call	1cedc <__malloc_unlock>
   175b8:	00800044 	movi	r2,1
   175bc:	003fe706 	br	1755c <_gp+0xffff1430>
   175c0:	000b883a 	mov	r5,zero
   175c4:	9009883a 	mov	r4,r18
   175c8:	0012d280 	call	12d28 <_sbrk_r>
   175cc:	99000217 	ldw	r4,8(r19)
   175d0:	014003c4 	movi	r5,15
   175d4:	1107c83a 	sub	r3,r2,r4
   175d8:	28ffdd0e 	bge	r5,r3,17550 <_gp+0xffff1424>
   175dc:	014000b4 	movhi	r5,2
   175e0:	29784f04 	addi	r5,r5,-7876
   175e4:	29400017 	ldw	r5,0(r5)
   175e8:	18c00054 	ori	r3,r3,1
   175ec:	20c00115 	stw	r3,4(r4)
   175f0:	00c000b4 	movhi	r3,2
   175f4:	1145c83a 	sub	r2,r2,r5
   175f8:	18fae204 	addi	r3,r3,-5240
   175fc:	18800015 	stw	r2,0(r3)
   17600:	003fd306 	br	17550 <_gp+0xffff1424>

00017604 <_free_r>:
   17604:	28004126 	beq	r5,zero,1770c <_free_r+0x108>
   17608:	defffd04 	addi	sp,sp,-12
   1760c:	dc400115 	stw	r17,4(sp)
   17610:	dc000015 	stw	r16,0(sp)
   17614:	2023883a 	mov	r17,r4
   17618:	2821883a 	mov	r16,r5
   1761c:	dfc00215 	stw	ra,8(sp)
   17620:	001ced80 	call	1ced8 <__malloc_lock>
   17624:	81ffff17 	ldw	r7,-4(r16)
   17628:	00bfff84 	movi	r2,-2
   1762c:	010000b4 	movhi	r4,2
   17630:	81bffe04 	addi	r6,r16,-8
   17634:	3884703a 	and	r2,r7,r2
   17638:	21370a04 	addi	r4,r4,-9176
   1763c:	308b883a 	add	r5,r6,r2
   17640:	2a400117 	ldw	r9,4(r5)
   17644:	22000217 	ldw	r8,8(r4)
   17648:	00ffff04 	movi	r3,-4
   1764c:	48c6703a 	and	r3,r9,r3
   17650:	2a005726 	beq	r5,r8,177b0 <_free_r+0x1ac>
   17654:	28c00115 	stw	r3,4(r5)
   17658:	39c0004c 	andi	r7,r7,1
   1765c:	3800091e 	bne	r7,zero,17684 <_free_r+0x80>
   17660:	823ffe17 	ldw	r8,-8(r16)
   17664:	22400204 	addi	r9,r4,8
   17668:	320dc83a 	sub	r6,r6,r8
   1766c:	31c00217 	ldw	r7,8(r6)
   17670:	1205883a 	add	r2,r2,r8
   17674:	3a406526 	beq	r7,r9,1780c <_free_r+0x208>
   17678:	32000317 	ldw	r8,12(r6)
   1767c:	3a000315 	stw	r8,12(r7)
   17680:	41c00215 	stw	r7,8(r8)
   17684:	28cf883a 	add	r7,r5,r3
   17688:	39c00117 	ldw	r7,4(r7)
   1768c:	39c0004c 	andi	r7,r7,1
   17690:	38003a26 	beq	r7,zero,1777c <_free_r+0x178>
   17694:	10c00054 	ori	r3,r2,1
   17698:	30c00115 	stw	r3,4(r6)
   1769c:	3087883a 	add	r3,r6,r2
   176a0:	18800015 	stw	r2,0(r3)
   176a4:	00c07fc4 	movi	r3,511
   176a8:	18801936 	bltu	r3,r2,17710 <_free_r+0x10c>
   176ac:	1004d0fa 	srli	r2,r2,3
   176b0:	01c00044 	movi	r7,1
   176b4:	21400117 	ldw	r5,4(r4)
   176b8:	10c00044 	addi	r3,r2,1
   176bc:	18c7883a 	add	r3,r3,r3
   176c0:	1005d0ba 	srai	r2,r2,2
   176c4:	18c7883a 	add	r3,r3,r3
   176c8:	18c7883a 	add	r3,r3,r3
   176cc:	1907883a 	add	r3,r3,r4
   176d0:	3884983a 	sll	r2,r7,r2
   176d4:	19c00017 	ldw	r7,0(r3)
   176d8:	1a3ffe04 	addi	r8,r3,-8
   176dc:	1144b03a 	or	r2,r2,r5
   176e0:	32000315 	stw	r8,12(r6)
   176e4:	31c00215 	stw	r7,8(r6)
   176e8:	20800115 	stw	r2,4(r4)
   176ec:	19800015 	stw	r6,0(r3)
   176f0:	39800315 	stw	r6,12(r7)
   176f4:	8809883a 	mov	r4,r17
   176f8:	dfc00217 	ldw	ra,8(sp)
   176fc:	dc400117 	ldw	r17,4(sp)
   17700:	dc000017 	ldw	r16,0(sp)
   17704:	dec00304 	addi	sp,sp,12
   17708:	001cedc1 	jmpi	1cedc <__malloc_unlock>
   1770c:	f800283a 	ret
   17710:	100ad27a 	srli	r5,r2,9
   17714:	00c00104 	movi	r3,4
   17718:	19404a36 	bltu	r3,r5,17844 <_free_r+0x240>
   1771c:	100ad1ba 	srli	r5,r2,6
   17720:	28c00e44 	addi	r3,r5,57
   17724:	18c7883a 	add	r3,r3,r3
   17728:	29400e04 	addi	r5,r5,56
   1772c:	18c7883a 	add	r3,r3,r3
   17730:	18c7883a 	add	r3,r3,r3
   17734:	1909883a 	add	r4,r3,r4
   17738:	20c00017 	ldw	r3,0(r4)
   1773c:	01c000b4 	movhi	r7,2
   17740:	213ffe04 	addi	r4,r4,-8
   17744:	39f70a04 	addi	r7,r7,-9176
   17748:	20c04426 	beq	r4,r3,1785c <_free_r+0x258>
   1774c:	01ffff04 	movi	r7,-4
   17750:	19400117 	ldw	r5,4(r3)
   17754:	29ca703a 	and	r5,r5,r7
   17758:	1140022e 	bgeu	r2,r5,17764 <_free_r+0x160>
   1775c:	18c00217 	ldw	r3,8(r3)
   17760:	20fffb1e 	bne	r4,r3,17750 <_gp+0xffff1624>
   17764:	19000317 	ldw	r4,12(r3)
   17768:	31000315 	stw	r4,12(r6)
   1776c:	30c00215 	stw	r3,8(r6)
   17770:	21800215 	stw	r6,8(r4)
   17774:	19800315 	stw	r6,12(r3)
   17778:	003fde06 	br	176f4 <_gp+0xffff15c8>
   1777c:	29c00217 	ldw	r7,8(r5)
   17780:	10c5883a 	add	r2,r2,r3
   17784:	00c000b4 	movhi	r3,2
   17788:	18f70c04 	addi	r3,r3,-9168
   1778c:	38c03b26 	beq	r7,r3,1787c <_free_r+0x278>
   17790:	2a000317 	ldw	r8,12(r5)
   17794:	11400054 	ori	r5,r2,1
   17798:	3087883a 	add	r3,r6,r2
   1779c:	3a000315 	stw	r8,12(r7)
   177a0:	41c00215 	stw	r7,8(r8)
   177a4:	31400115 	stw	r5,4(r6)
   177a8:	18800015 	stw	r2,0(r3)
   177ac:	003fbd06 	br	176a4 <_gp+0xffff1578>
   177b0:	39c0004c 	andi	r7,r7,1
   177b4:	10c5883a 	add	r2,r2,r3
   177b8:	3800071e 	bne	r7,zero,177d8 <_free_r+0x1d4>
   177bc:	81fffe17 	ldw	r7,-8(r16)
   177c0:	31cdc83a 	sub	r6,r6,r7
   177c4:	30c00317 	ldw	r3,12(r6)
   177c8:	31400217 	ldw	r5,8(r6)
   177cc:	11c5883a 	add	r2,r2,r7
   177d0:	28c00315 	stw	r3,12(r5)
   177d4:	19400215 	stw	r5,8(r3)
   177d8:	10c00054 	ori	r3,r2,1
   177dc:	30c00115 	stw	r3,4(r6)
   177e0:	00c000b4 	movhi	r3,2
   177e4:	18f85004 	addi	r3,r3,-7872
   177e8:	18c00017 	ldw	r3,0(r3)
   177ec:	21800215 	stw	r6,8(r4)
   177f0:	10ffc036 	bltu	r2,r3,176f4 <_gp+0xffff15c8>
   177f4:	008000b4 	movhi	r2,2
   177f8:	10bacc04 	addi	r2,r2,-5328
   177fc:	11400017 	ldw	r5,0(r2)
   17800:	8809883a 	mov	r4,r17
   17804:	00174e00 	call	174e0 <_malloc_trim_r>
   17808:	003fba06 	br	176f4 <_gp+0xffff15c8>
   1780c:	28c9883a 	add	r4,r5,r3
   17810:	21000117 	ldw	r4,4(r4)
   17814:	2100004c 	andi	r4,r4,1
   17818:	2000391e 	bne	r4,zero,17900 <_free_r+0x2fc>
   1781c:	29c00217 	ldw	r7,8(r5)
   17820:	29000317 	ldw	r4,12(r5)
   17824:	1885883a 	add	r2,r3,r2
   17828:	10c00054 	ori	r3,r2,1
   1782c:	39000315 	stw	r4,12(r7)
   17830:	21c00215 	stw	r7,8(r4)
   17834:	30c00115 	stw	r3,4(r6)
   17838:	308d883a 	add	r6,r6,r2
   1783c:	30800015 	stw	r2,0(r6)
   17840:	003fac06 	br	176f4 <_gp+0xffff15c8>
   17844:	00c00504 	movi	r3,20
   17848:	19401536 	bltu	r3,r5,178a0 <_free_r+0x29c>
   1784c:	28c01704 	addi	r3,r5,92
   17850:	18c7883a 	add	r3,r3,r3
   17854:	294016c4 	addi	r5,r5,91
   17858:	003fb406 	br	1772c <_gp+0xffff1600>
   1785c:	280bd0ba 	srai	r5,r5,2
   17860:	00c00044 	movi	r3,1
   17864:	38800117 	ldw	r2,4(r7)
   17868:	194a983a 	sll	r5,r3,r5
   1786c:	2007883a 	mov	r3,r4
   17870:	2884b03a 	or	r2,r5,r2
   17874:	38800115 	stw	r2,4(r7)
   17878:	003fbb06 	br	17768 <_gp+0xffff163c>
   1787c:	21800515 	stw	r6,20(r4)
   17880:	21800415 	stw	r6,16(r4)
   17884:	10c00054 	ori	r3,r2,1
   17888:	31c00315 	stw	r7,12(r6)
   1788c:	31c00215 	stw	r7,8(r6)
   17890:	30c00115 	stw	r3,4(r6)
   17894:	308d883a 	add	r6,r6,r2
   17898:	30800015 	stw	r2,0(r6)
   1789c:	003f9506 	br	176f4 <_gp+0xffff15c8>
   178a0:	00c01504 	movi	r3,84
   178a4:	19400536 	bltu	r3,r5,178bc <_free_r+0x2b8>
   178a8:	100ad33a 	srli	r5,r2,12
   178ac:	28c01bc4 	addi	r3,r5,111
   178b0:	18c7883a 	add	r3,r3,r3
   178b4:	29401b84 	addi	r5,r5,110
   178b8:	003f9c06 	br	1772c <_gp+0xffff1600>
   178bc:	00c05504 	movi	r3,340
   178c0:	19400536 	bltu	r3,r5,178d8 <_free_r+0x2d4>
   178c4:	100ad3fa 	srli	r5,r2,15
   178c8:	28c01e04 	addi	r3,r5,120
   178cc:	18c7883a 	add	r3,r3,r3
   178d0:	29401dc4 	addi	r5,r5,119
   178d4:	003f9506 	br	1772c <_gp+0xffff1600>
   178d8:	00c15504 	movi	r3,1364
   178dc:	19400536 	bltu	r3,r5,178f4 <_free_r+0x2f0>
   178e0:	100ad4ba 	srli	r5,r2,18
   178e4:	28c01f44 	addi	r3,r5,125
   178e8:	18c7883a 	add	r3,r3,r3
   178ec:	29401f04 	addi	r5,r5,124
   178f0:	003f8e06 	br	1772c <_gp+0xffff1600>
   178f4:	00c03f84 	movi	r3,254
   178f8:	01401f84 	movi	r5,126
   178fc:	003f8b06 	br	1772c <_gp+0xffff1600>
   17900:	10c00054 	ori	r3,r2,1
   17904:	30c00115 	stw	r3,4(r6)
   17908:	308d883a 	add	r6,r6,r2
   1790c:	30800015 	stw	r2,0(r6)
   17910:	003f7806 	br	176f4 <_gp+0xffff15c8>

00017914 <_setlocale_r>:
   17914:	30001b26 	beq	r6,zero,17984 <_setlocale_r+0x70>
   17918:	014000b4 	movhi	r5,2
   1791c:	defffe04 	addi	sp,sp,-8
   17920:	2975aa04 	addi	r5,r5,-10584
   17924:	3009883a 	mov	r4,r6
   17928:	dc000015 	stw	r16,0(sp)
   1792c:	dfc00115 	stw	ra,4(sp)
   17930:	3021883a 	mov	r16,r6
   17934:	0012fa40 	call	12fa4 <strcmp>
   17938:	1000061e 	bne	r2,zero,17954 <_setlocale_r+0x40>
   1793c:	008000b4 	movhi	r2,2
   17940:	10b58c04 	addi	r2,r2,-10704
   17944:	dfc00117 	ldw	ra,4(sp)
   17948:	dc000017 	ldw	r16,0(sp)
   1794c:	dec00204 	addi	sp,sp,8
   17950:	f800283a 	ret
   17954:	014000b4 	movhi	r5,2
   17958:	29758c04 	addi	r5,r5,-10704
   1795c:	8009883a 	mov	r4,r16
   17960:	0012fa40 	call	12fa4 <strcmp>
   17964:	103ff526 	beq	r2,zero,1793c <_gp+0xffff1810>
   17968:	014000b4 	movhi	r5,2
   1796c:	29751d04 	addi	r5,r5,-11148
   17970:	8009883a 	mov	r4,r16
   17974:	0012fa40 	call	12fa4 <strcmp>
   17978:	103ff026 	beq	r2,zero,1793c <_gp+0xffff1810>
   1797c:	0005883a 	mov	r2,zero
   17980:	003ff006 	br	17944 <_gp+0xffff1818>
   17984:	008000b4 	movhi	r2,2
   17988:	10b58c04 	addi	r2,r2,-10704
   1798c:	f800283a 	ret

00017990 <__locale_charset>:
   17990:	008000b4 	movhi	r2,2
   17994:	10b81404 	addi	r2,r2,-8112
   17998:	f800283a 	ret

0001799c <__locale_mb_cur_max>:
   1799c:	008000b4 	movhi	r2,2
   179a0:	10b85104 	addi	r2,r2,-7868
   179a4:	10800017 	ldw	r2,0(r2)
   179a8:	f800283a 	ret

000179ac <__locale_msgcharset>:
   179ac:	008000b4 	movhi	r2,2
   179b0:	10b80c04 	addi	r2,r2,-8144
   179b4:	f800283a 	ret

000179b8 <__locale_cjk_lang>:
   179b8:	0005883a 	mov	r2,zero
   179bc:	f800283a 	ret

000179c0 <_localeconv_r>:
   179c0:	008000b4 	movhi	r2,2
   179c4:	10b81c04 	addi	r2,r2,-8080
   179c8:	f800283a 	ret

000179cc <setlocale>:
   179cc:	008000b4 	movhi	r2,2
   179d0:	10b84e04 	addi	r2,r2,-7880
   179d4:	280d883a 	mov	r6,r5
   179d8:	200b883a 	mov	r5,r4
   179dc:	11000017 	ldw	r4,0(r2)
   179e0:	00179141 	jmpi	17914 <_setlocale_r>

000179e4 <localeconv>:
   179e4:	008000b4 	movhi	r2,2
   179e8:	10b81c04 	addi	r2,r2,-8080
   179ec:	f800283a 	ret

000179f0 <memchr>:
   179f0:	208000cc 	andi	r2,r4,3
   179f4:	280f883a 	mov	r7,r5
   179f8:	10003426 	beq	r2,zero,17acc <memchr+0xdc>
   179fc:	30bfffc4 	addi	r2,r6,-1
   17a00:	30001a26 	beq	r6,zero,17a6c <memchr+0x7c>
   17a04:	20c00003 	ldbu	r3,0(r4)
   17a08:	29803fcc 	andi	r6,r5,255
   17a0c:	30c0051e 	bne	r6,r3,17a24 <memchr+0x34>
   17a10:	00001806 	br	17a74 <memchr+0x84>
   17a14:	10001526 	beq	r2,zero,17a6c <memchr+0x7c>
   17a18:	20c00003 	ldbu	r3,0(r4)
   17a1c:	10bfffc4 	addi	r2,r2,-1
   17a20:	30c01426 	beq	r6,r3,17a74 <memchr+0x84>
   17a24:	21000044 	addi	r4,r4,1
   17a28:	20c000cc 	andi	r3,r4,3
   17a2c:	183ff91e 	bne	r3,zero,17a14 <_gp+0xffff18e8>
   17a30:	020000c4 	movi	r8,3
   17a34:	40801136 	bltu	r8,r2,17a7c <memchr+0x8c>
   17a38:	10000c26 	beq	r2,zero,17a6c <memchr+0x7c>
   17a3c:	20c00003 	ldbu	r3,0(r4)
   17a40:	29403fcc 	andi	r5,r5,255
   17a44:	28c00b26 	beq	r5,r3,17a74 <memchr+0x84>
   17a48:	20c00044 	addi	r3,r4,1
   17a4c:	39803fcc 	andi	r6,r7,255
   17a50:	2089883a 	add	r4,r4,r2
   17a54:	00000306 	br	17a64 <memchr+0x74>
   17a58:	18c00044 	addi	r3,r3,1
   17a5c:	197fffc3 	ldbu	r5,-1(r3)
   17a60:	31400526 	beq	r6,r5,17a78 <memchr+0x88>
   17a64:	1805883a 	mov	r2,r3
   17a68:	20fffb1e 	bne	r4,r3,17a58 <_gp+0xffff192c>
   17a6c:	0005883a 	mov	r2,zero
   17a70:	f800283a 	ret
   17a74:	2005883a 	mov	r2,r4
   17a78:	f800283a 	ret
   17a7c:	28c03fcc 	andi	r3,r5,255
   17a80:	1812923a 	slli	r9,r3,8
   17a84:	02ffbff4 	movhi	r11,65279
   17a88:	02a02074 	movhi	r10,32897
   17a8c:	48d2b03a 	or	r9,r9,r3
   17a90:	4806943a 	slli	r3,r9,16
   17a94:	5affbfc4 	addi	r11,r11,-257
   17a98:	52a02004 	addi	r10,r10,-32640
   17a9c:	48d2b03a 	or	r9,r9,r3
   17aa0:	20c00017 	ldw	r3,0(r4)
   17aa4:	48c6f03a 	xor	r3,r9,r3
   17aa8:	1acd883a 	add	r6,r3,r11
   17aac:	00c6303a 	nor	r3,zero,r3
   17ab0:	30c6703a 	and	r3,r6,r3
   17ab4:	1a86703a 	and	r3,r3,r10
   17ab8:	183fe01e 	bne	r3,zero,17a3c <_gp+0xffff1910>
   17abc:	10bfff04 	addi	r2,r2,-4
   17ac0:	21000104 	addi	r4,r4,4
   17ac4:	40bff636 	bltu	r8,r2,17aa0 <_gp+0xffff1974>
   17ac8:	003fdb06 	br	17a38 <_gp+0xffff190c>
   17acc:	3005883a 	mov	r2,r6
   17ad0:	003fd706 	br	17a30 <_gp+0xffff1904>

00017ad4 <memcmp>:
   17ad4:	01c000c4 	movi	r7,3
   17ad8:	3980192e 	bgeu	r7,r6,17b40 <memcmp+0x6c>
   17adc:	2144b03a 	or	r2,r4,r5
   17ae0:	11c4703a 	and	r2,r2,r7
   17ae4:	10000f26 	beq	r2,zero,17b24 <memcmp+0x50>
   17ae8:	20800003 	ldbu	r2,0(r4)
   17aec:	28c00003 	ldbu	r3,0(r5)
   17af0:	10c0151e 	bne	r2,r3,17b48 <memcmp+0x74>
   17af4:	31bfff84 	addi	r6,r6,-2
   17af8:	01ffffc4 	movi	r7,-1
   17afc:	00000406 	br	17b10 <memcmp+0x3c>
   17b00:	20800003 	ldbu	r2,0(r4)
   17b04:	28c00003 	ldbu	r3,0(r5)
   17b08:	31bfffc4 	addi	r6,r6,-1
   17b0c:	10c00e1e 	bne	r2,r3,17b48 <memcmp+0x74>
   17b10:	21000044 	addi	r4,r4,1
   17b14:	29400044 	addi	r5,r5,1
   17b18:	31fff91e 	bne	r6,r7,17b00 <_gp+0xffff19d4>
   17b1c:	0005883a 	mov	r2,zero
   17b20:	f800283a 	ret
   17b24:	20c00017 	ldw	r3,0(r4)
   17b28:	28800017 	ldw	r2,0(r5)
   17b2c:	18bfee1e 	bne	r3,r2,17ae8 <_gp+0xffff19bc>
   17b30:	31bfff04 	addi	r6,r6,-4
   17b34:	21000104 	addi	r4,r4,4
   17b38:	29400104 	addi	r5,r5,4
   17b3c:	39bff936 	bltu	r7,r6,17b24 <_gp+0xffff19f8>
   17b40:	303fe91e 	bne	r6,zero,17ae8 <_gp+0xffff19bc>
   17b44:	003ff506 	br	17b1c <_gp+0xffff19f0>
   17b48:	10c5c83a 	sub	r2,r2,r3
   17b4c:	f800283a 	ret

00017b50 <memcpy>:
   17b50:	defffd04 	addi	sp,sp,-12
   17b54:	dfc00215 	stw	ra,8(sp)
   17b58:	dc400115 	stw	r17,4(sp)
   17b5c:	dc000015 	stw	r16,0(sp)
   17b60:	00c003c4 	movi	r3,15
   17b64:	2005883a 	mov	r2,r4
   17b68:	1980452e 	bgeu	r3,r6,17c80 <memcpy+0x130>
   17b6c:	2906b03a 	or	r3,r5,r4
   17b70:	18c000cc 	andi	r3,r3,3
   17b74:	1800441e 	bne	r3,zero,17c88 <memcpy+0x138>
   17b78:	347ffc04 	addi	r17,r6,-16
   17b7c:	8822d13a 	srli	r17,r17,4
   17b80:	28c00104 	addi	r3,r5,4
   17b84:	23400104 	addi	r13,r4,4
   17b88:	8820913a 	slli	r16,r17,4
   17b8c:	2b000204 	addi	r12,r5,8
   17b90:	22c00204 	addi	r11,r4,8
   17b94:	84000504 	addi	r16,r16,20
   17b98:	2a800304 	addi	r10,r5,12
   17b9c:	22400304 	addi	r9,r4,12
   17ba0:	2c21883a 	add	r16,r5,r16
   17ba4:	2811883a 	mov	r8,r5
   17ba8:	200f883a 	mov	r7,r4
   17bac:	41000017 	ldw	r4,0(r8)
   17bb0:	1fc00017 	ldw	ra,0(r3)
   17bb4:	63c00017 	ldw	r15,0(r12)
   17bb8:	39000015 	stw	r4,0(r7)
   17bbc:	53800017 	ldw	r14,0(r10)
   17bc0:	6fc00015 	stw	ra,0(r13)
   17bc4:	5bc00015 	stw	r15,0(r11)
   17bc8:	4b800015 	stw	r14,0(r9)
   17bcc:	18c00404 	addi	r3,r3,16
   17bd0:	39c00404 	addi	r7,r7,16
   17bd4:	42000404 	addi	r8,r8,16
   17bd8:	6b400404 	addi	r13,r13,16
   17bdc:	63000404 	addi	r12,r12,16
   17be0:	5ac00404 	addi	r11,r11,16
   17be4:	52800404 	addi	r10,r10,16
   17be8:	4a400404 	addi	r9,r9,16
   17bec:	1c3fef1e 	bne	r3,r16,17bac <_gp+0xffff1a80>
   17bf0:	89c00044 	addi	r7,r17,1
   17bf4:	380e913a 	slli	r7,r7,4
   17bf8:	310003cc 	andi	r4,r6,15
   17bfc:	02c000c4 	movi	r11,3
   17c00:	11c7883a 	add	r3,r2,r7
   17c04:	29cb883a 	add	r5,r5,r7
   17c08:	5900212e 	bgeu	r11,r4,17c90 <memcpy+0x140>
   17c0c:	1813883a 	mov	r9,r3
   17c10:	2811883a 	mov	r8,r5
   17c14:	200f883a 	mov	r7,r4
   17c18:	42800017 	ldw	r10,0(r8)
   17c1c:	4a400104 	addi	r9,r9,4
   17c20:	39ffff04 	addi	r7,r7,-4
   17c24:	4abfff15 	stw	r10,-4(r9)
   17c28:	42000104 	addi	r8,r8,4
   17c2c:	59fffa36 	bltu	r11,r7,17c18 <_gp+0xffff1aec>
   17c30:	213fff04 	addi	r4,r4,-4
   17c34:	2008d0ba 	srli	r4,r4,2
   17c38:	318000cc 	andi	r6,r6,3
   17c3c:	21000044 	addi	r4,r4,1
   17c40:	2109883a 	add	r4,r4,r4
   17c44:	2109883a 	add	r4,r4,r4
   17c48:	1907883a 	add	r3,r3,r4
   17c4c:	290b883a 	add	r5,r5,r4
   17c50:	30000626 	beq	r6,zero,17c6c <memcpy+0x11c>
   17c54:	198d883a 	add	r6,r3,r6
   17c58:	29c00003 	ldbu	r7,0(r5)
   17c5c:	18c00044 	addi	r3,r3,1
   17c60:	29400044 	addi	r5,r5,1
   17c64:	19ffffc5 	stb	r7,-1(r3)
   17c68:	19bffb1e 	bne	r3,r6,17c58 <_gp+0xffff1b2c>
   17c6c:	dfc00217 	ldw	ra,8(sp)
   17c70:	dc400117 	ldw	r17,4(sp)
   17c74:	dc000017 	ldw	r16,0(sp)
   17c78:	dec00304 	addi	sp,sp,12
   17c7c:	f800283a 	ret
   17c80:	2007883a 	mov	r3,r4
   17c84:	003ff206 	br	17c50 <_gp+0xffff1b24>
   17c88:	2007883a 	mov	r3,r4
   17c8c:	003ff106 	br	17c54 <_gp+0xffff1b28>
   17c90:	200d883a 	mov	r6,r4
   17c94:	003fee06 	br	17c50 <_gp+0xffff1b24>

00017c98 <_Balloc>:
   17c98:	20801317 	ldw	r2,76(r4)
   17c9c:	defffc04 	addi	sp,sp,-16
   17ca0:	dc400115 	stw	r17,4(sp)
   17ca4:	dc000015 	stw	r16,0(sp)
   17ca8:	dfc00315 	stw	ra,12(sp)
   17cac:	dc800215 	stw	r18,8(sp)
   17cb0:	2023883a 	mov	r17,r4
   17cb4:	2821883a 	mov	r16,r5
   17cb8:	10000f26 	beq	r2,zero,17cf8 <_Balloc+0x60>
   17cbc:	8407883a 	add	r3,r16,r16
   17cc0:	18c7883a 	add	r3,r3,r3
   17cc4:	10c7883a 	add	r3,r2,r3
   17cc8:	18800017 	ldw	r2,0(r3)
   17ccc:	10001126 	beq	r2,zero,17d14 <_Balloc+0x7c>
   17cd0:	11000017 	ldw	r4,0(r2)
   17cd4:	19000015 	stw	r4,0(r3)
   17cd8:	10000415 	stw	zero,16(r2)
   17cdc:	10000315 	stw	zero,12(r2)
   17ce0:	dfc00317 	ldw	ra,12(sp)
   17ce4:	dc800217 	ldw	r18,8(sp)
   17ce8:	dc400117 	ldw	r17,4(sp)
   17cec:	dc000017 	ldw	r16,0(sp)
   17cf0:	dec00404 	addi	sp,sp,16
   17cf4:	f800283a 	ret
   17cf8:	01800844 	movi	r6,33
   17cfc:	01400104 	movi	r5,4
   17d00:	001a3cc0 	call	1a3cc <_calloc_r>
   17d04:	88801315 	stw	r2,76(r17)
   17d08:	103fec1e 	bne	r2,zero,17cbc <_gp+0xffff1b90>
   17d0c:	0005883a 	mov	r2,zero
   17d10:	003ff306 	br	17ce0 <_gp+0xffff1bb4>
   17d14:	01400044 	movi	r5,1
   17d18:	2c24983a 	sll	r18,r5,r16
   17d1c:	8809883a 	mov	r4,r17
   17d20:	91800144 	addi	r6,r18,5
   17d24:	318d883a 	add	r6,r6,r6
   17d28:	318d883a 	add	r6,r6,r6
   17d2c:	001a3cc0 	call	1a3cc <_calloc_r>
   17d30:	103ff626 	beq	r2,zero,17d0c <_gp+0xffff1be0>
   17d34:	14000115 	stw	r16,4(r2)
   17d38:	14800215 	stw	r18,8(r2)
   17d3c:	003fe606 	br	17cd8 <_gp+0xffff1bac>

00017d40 <_Bfree>:
   17d40:	28000826 	beq	r5,zero,17d64 <_Bfree+0x24>
   17d44:	28c00117 	ldw	r3,4(r5)
   17d48:	20801317 	ldw	r2,76(r4)
   17d4c:	18c7883a 	add	r3,r3,r3
   17d50:	18c7883a 	add	r3,r3,r3
   17d54:	10c5883a 	add	r2,r2,r3
   17d58:	10c00017 	ldw	r3,0(r2)
   17d5c:	28c00015 	stw	r3,0(r5)
   17d60:	11400015 	stw	r5,0(r2)
   17d64:	f800283a 	ret

00017d68 <__multadd>:
   17d68:	defff704 	addi	sp,sp,-36
   17d6c:	dc800215 	stw	r18,8(sp)
   17d70:	2c800417 	ldw	r18,16(r5)
   17d74:	dd800615 	stw	r22,24(sp)
   17d78:	dd400515 	stw	r21,20(sp)
   17d7c:	dd000415 	stw	r20,16(sp)
   17d80:	dcc00315 	stw	r19,12(sp)
   17d84:	dc400115 	stw	r17,4(sp)
   17d88:	dc000015 	stw	r16,0(sp)
   17d8c:	dfc00815 	stw	ra,32(sp)
   17d90:	ddc00715 	stw	r23,28(sp)
   17d94:	2827883a 	mov	r19,r5
   17d98:	2029883a 	mov	r20,r4
   17d9c:	3023883a 	mov	r17,r6
   17da0:	3821883a 	mov	r16,r7
   17da4:	2d400504 	addi	r21,r5,20
   17da8:	002d883a 	mov	r22,zero
   17dac:	adc00017 	ldw	r23,0(r21)
   17db0:	880b883a 	mov	r5,r17
   17db4:	ad400104 	addi	r21,r21,4
   17db8:	b93fffcc 	andi	r4,r23,65535
   17dbc:	00122c80 	call	122c8 <__mulsi3>
   17dc0:	b808d43a 	srli	r4,r23,16
   17dc4:	880b883a 	mov	r5,r17
   17dc8:	1421883a 	add	r16,r2,r16
   17dcc:	00122c80 	call	122c8 <__mulsi3>
   17dd0:	800ed43a 	srli	r7,r16,16
   17dd4:	80ffffcc 	andi	r3,r16,65535
   17dd8:	b5800044 	addi	r22,r22,1
   17ddc:	11c5883a 	add	r2,r2,r7
   17de0:	100e943a 	slli	r7,r2,16
   17de4:	1020d43a 	srli	r16,r2,16
   17de8:	38c7883a 	add	r3,r7,r3
   17dec:	a8ffff15 	stw	r3,-4(r21)
   17df0:	b4bfee16 	blt	r22,r18,17dac <_gp+0xffff1c80>
   17df4:	80000926 	beq	r16,zero,17e1c <__multadd+0xb4>
   17df8:	98800217 	ldw	r2,8(r19)
   17dfc:	9080130e 	bge	r18,r2,17e4c <__multadd+0xe4>
   17e00:	90800144 	addi	r2,r18,5
   17e04:	1085883a 	add	r2,r2,r2
   17e08:	1085883a 	add	r2,r2,r2
   17e0c:	9885883a 	add	r2,r19,r2
   17e10:	14000015 	stw	r16,0(r2)
   17e14:	94800044 	addi	r18,r18,1
   17e18:	9c800415 	stw	r18,16(r19)
   17e1c:	9805883a 	mov	r2,r19
   17e20:	dfc00817 	ldw	ra,32(sp)
   17e24:	ddc00717 	ldw	r23,28(sp)
   17e28:	dd800617 	ldw	r22,24(sp)
   17e2c:	dd400517 	ldw	r21,20(sp)
   17e30:	dd000417 	ldw	r20,16(sp)
   17e34:	dcc00317 	ldw	r19,12(sp)
   17e38:	dc800217 	ldw	r18,8(sp)
   17e3c:	dc400117 	ldw	r17,4(sp)
   17e40:	dc000017 	ldw	r16,0(sp)
   17e44:	dec00904 	addi	sp,sp,36
   17e48:	f800283a 	ret
   17e4c:	99400117 	ldw	r5,4(r19)
   17e50:	a009883a 	mov	r4,r20
   17e54:	29400044 	addi	r5,r5,1
   17e58:	0017c980 	call	17c98 <_Balloc>
   17e5c:	99800417 	ldw	r6,16(r19)
   17e60:	99400304 	addi	r5,r19,12
   17e64:	11000304 	addi	r4,r2,12
   17e68:	31800084 	addi	r6,r6,2
   17e6c:	318d883a 	add	r6,r6,r6
   17e70:	318d883a 	add	r6,r6,r6
   17e74:	1023883a 	mov	r17,r2
   17e78:	0017b500 	call	17b50 <memcpy>
   17e7c:	98000a26 	beq	r19,zero,17ea8 <__multadd+0x140>
   17e80:	98c00117 	ldw	r3,4(r19)
   17e84:	a0801317 	ldw	r2,76(r20)
   17e88:	18c7883a 	add	r3,r3,r3
   17e8c:	18c7883a 	add	r3,r3,r3
   17e90:	10c5883a 	add	r2,r2,r3
   17e94:	10c00017 	ldw	r3,0(r2)
   17e98:	98c00015 	stw	r3,0(r19)
   17e9c:	14c00015 	stw	r19,0(r2)
   17ea0:	8827883a 	mov	r19,r17
   17ea4:	003fd606 	br	17e00 <_gp+0xffff1cd4>
   17ea8:	8827883a 	mov	r19,r17
   17eac:	003fd406 	br	17e00 <_gp+0xffff1cd4>

00017eb0 <__s2b>:
   17eb0:	defff904 	addi	sp,sp,-28
   17eb4:	dc400115 	stw	r17,4(sp)
   17eb8:	dc000015 	stw	r16,0(sp)
   17ebc:	2023883a 	mov	r17,r4
   17ec0:	2821883a 	mov	r16,r5
   17ec4:	39000204 	addi	r4,r7,8
   17ec8:	01400244 	movi	r5,9
   17ecc:	dcc00315 	stw	r19,12(sp)
   17ed0:	dc800215 	stw	r18,8(sp)
   17ed4:	dfc00615 	stw	ra,24(sp)
   17ed8:	dd400515 	stw	r21,20(sp)
   17edc:	dd000415 	stw	r20,16(sp)
   17ee0:	3825883a 	mov	r18,r7
   17ee4:	3027883a 	mov	r19,r6
   17ee8:	0010e3c0 	call	10e3c <__divsi3>
   17eec:	00c00044 	movi	r3,1
   17ef0:	000b883a 	mov	r5,zero
   17ef4:	1880030e 	bge	r3,r2,17f04 <__s2b+0x54>
   17ef8:	18c7883a 	add	r3,r3,r3
   17efc:	29400044 	addi	r5,r5,1
   17f00:	18bffd16 	blt	r3,r2,17ef8 <_gp+0xffff1dcc>
   17f04:	8809883a 	mov	r4,r17
   17f08:	0017c980 	call	17c98 <_Balloc>
   17f0c:	d8c00717 	ldw	r3,28(sp)
   17f10:	10c00515 	stw	r3,20(r2)
   17f14:	00c00044 	movi	r3,1
   17f18:	10c00415 	stw	r3,16(r2)
   17f1c:	00c00244 	movi	r3,9
   17f20:	1cc0210e 	bge	r3,r19,17fa8 <__s2b+0xf8>
   17f24:	80eb883a 	add	r21,r16,r3
   17f28:	a829883a 	mov	r20,r21
   17f2c:	84e1883a 	add	r16,r16,r19
   17f30:	a1c00007 	ldb	r7,0(r20)
   17f34:	01800284 	movi	r6,10
   17f38:	a5000044 	addi	r20,r20,1
   17f3c:	100b883a 	mov	r5,r2
   17f40:	39fff404 	addi	r7,r7,-48
   17f44:	8809883a 	mov	r4,r17
   17f48:	0017d680 	call	17d68 <__multadd>
   17f4c:	a43ff81e 	bne	r20,r16,17f30 <_gp+0xffff1e04>
   17f50:	ace1883a 	add	r16,r21,r19
   17f54:	843ffe04 	addi	r16,r16,-8
   17f58:	9c800a0e 	bge	r19,r18,17f84 <__s2b+0xd4>
   17f5c:	94e5c83a 	sub	r18,r18,r19
   17f60:	84a5883a 	add	r18,r16,r18
   17f64:	81c00007 	ldb	r7,0(r16)
   17f68:	01800284 	movi	r6,10
   17f6c:	84000044 	addi	r16,r16,1
   17f70:	100b883a 	mov	r5,r2
   17f74:	39fff404 	addi	r7,r7,-48
   17f78:	8809883a 	mov	r4,r17
   17f7c:	0017d680 	call	17d68 <__multadd>
   17f80:	84bff81e 	bne	r16,r18,17f64 <_gp+0xffff1e38>
   17f84:	dfc00617 	ldw	ra,24(sp)
   17f88:	dd400517 	ldw	r21,20(sp)
   17f8c:	dd000417 	ldw	r20,16(sp)
   17f90:	dcc00317 	ldw	r19,12(sp)
   17f94:	dc800217 	ldw	r18,8(sp)
   17f98:	dc400117 	ldw	r17,4(sp)
   17f9c:	dc000017 	ldw	r16,0(sp)
   17fa0:	dec00704 	addi	sp,sp,28
   17fa4:	f800283a 	ret
   17fa8:	84000284 	addi	r16,r16,10
   17fac:	1827883a 	mov	r19,r3
   17fb0:	003fe906 	br	17f58 <_gp+0xffff1e2c>

00017fb4 <__hi0bits>:
   17fb4:	20bfffec 	andhi	r2,r4,65535
   17fb8:	1000141e 	bne	r2,zero,1800c <__hi0bits+0x58>
   17fbc:	2008943a 	slli	r4,r4,16
   17fc0:	00800404 	movi	r2,16
   17fc4:	20ffc02c 	andhi	r3,r4,65280
   17fc8:	1800021e 	bne	r3,zero,17fd4 <__hi0bits+0x20>
   17fcc:	2008923a 	slli	r4,r4,8
   17fd0:	10800204 	addi	r2,r2,8
   17fd4:	20fc002c 	andhi	r3,r4,61440
   17fd8:	1800021e 	bne	r3,zero,17fe4 <__hi0bits+0x30>
   17fdc:	2008913a 	slli	r4,r4,4
   17fe0:	10800104 	addi	r2,r2,4
   17fe4:	20f0002c 	andhi	r3,r4,49152
   17fe8:	1800031e 	bne	r3,zero,17ff8 <__hi0bits+0x44>
   17fec:	2109883a 	add	r4,r4,r4
   17ff0:	10800084 	addi	r2,r2,2
   17ff4:	2109883a 	add	r4,r4,r4
   17ff8:	20000316 	blt	r4,zero,18008 <__hi0bits+0x54>
   17ffc:	2110002c 	andhi	r4,r4,16384
   18000:	2000041e 	bne	r4,zero,18014 <__hi0bits+0x60>
   18004:	00800804 	movi	r2,32
   18008:	f800283a 	ret
   1800c:	0005883a 	mov	r2,zero
   18010:	003fec06 	br	17fc4 <_gp+0xffff1e98>
   18014:	10800044 	addi	r2,r2,1
   18018:	f800283a 	ret

0001801c <__lo0bits>:
   1801c:	20c00017 	ldw	r3,0(r4)
   18020:	188001cc 	andi	r2,r3,7
   18024:	10000826 	beq	r2,zero,18048 <__lo0bits+0x2c>
   18028:	1880004c 	andi	r2,r3,1
   1802c:	1000211e 	bne	r2,zero,180b4 <__lo0bits+0x98>
   18030:	1880008c 	andi	r2,r3,2
   18034:	1000211e 	bne	r2,zero,180bc <__lo0bits+0xa0>
   18038:	1806d0ba 	srli	r3,r3,2
   1803c:	00800084 	movi	r2,2
   18040:	20c00015 	stw	r3,0(r4)
   18044:	f800283a 	ret
   18048:	18bfffcc 	andi	r2,r3,65535
   1804c:	10001326 	beq	r2,zero,1809c <__lo0bits+0x80>
   18050:	0005883a 	mov	r2,zero
   18054:	19403fcc 	andi	r5,r3,255
   18058:	2800021e 	bne	r5,zero,18064 <__lo0bits+0x48>
   1805c:	1806d23a 	srli	r3,r3,8
   18060:	10800204 	addi	r2,r2,8
   18064:	194003cc 	andi	r5,r3,15
   18068:	2800021e 	bne	r5,zero,18074 <__lo0bits+0x58>
   1806c:	1806d13a 	srli	r3,r3,4
   18070:	10800104 	addi	r2,r2,4
   18074:	194000cc 	andi	r5,r3,3
   18078:	2800021e 	bne	r5,zero,18084 <__lo0bits+0x68>
   1807c:	1806d0ba 	srli	r3,r3,2
   18080:	10800084 	addi	r2,r2,2
   18084:	1940004c 	andi	r5,r3,1
   18088:	2800081e 	bne	r5,zero,180ac <__lo0bits+0x90>
   1808c:	1806d07a 	srli	r3,r3,1
   18090:	1800051e 	bne	r3,zero,180a8 <__lo0bits+0x8c>
   18094:	00800804 	movi	r2,32
   18098:	f800283a 	ret
   1809c:	1806d43a 	srli	r3,r3,16
   180a0:	00800404 	movi	r2,16
   180a4:	003feb06 	br	18054 <_gp+0xffff1f28>
   180a8:	10800044 	addi	r2,r2,1
   180ac:	20c00015 	stw	r3,0(r4)
   180b0:	f800283a 	ret
   180b4:	0005883a 	mov	r2,zero
   180b8:	f800283a 	ret
   180bc:	1806d07a 	srli	r3,r3,1
   180c0:	00800044 	movi	r2,1
   180c4:	20c00015 	stw	r3,0(r4)
   180c8:	f800283a 	ret

000180cc <__i2b>:
   180cc:	defffd04 	addi	sp,sp,-12
   180d0:	dc000015 	stw	r16,0(sp)
   180d4:	04000044 	movi	r16,1
   180d8:	dc400115 	stw	r17,4(sp)
   180dc:	2823883a 	mov	r17,r5
   180e0:	800b883a 	mov	r5,r16
   180e4:	dfc00215 	stw	ra,8(sp)
   180e8:	0017c980 	call	17c98 <_Balloc>
   180ec:	14400515 	stw	r17,20(r2)
   180f0:	14000415 	stw	r16,16(r2)
   180f4:	dfc00217 	ldw	ra,8(sp)
   180f8:	dc400117 	ldw	r17,4(sp)
   180fc:	dc000017 	ldw	r16,0(sp)
   18100:	dec00304 	addi	sp,sp,12
   18104:	f800283a 	ret

00018108 <__multiply>:
   18108:	deffef04 	addi	sp,sp,-68
   1810c:	dc400815 	stw	r17,32(sp)
   18110:	dc000715 	stw	r16,28(sp)
   18114:	34400417 	ldw	r17,16(r6)
   18118:	2c000417 	ldw	r16,16(r5)
   1811c:	dd800d15 	stw	r22,52(sp)
   18120:	dc800915 	stw	r18,36(sp)
   18124:	dfc01015 	stw	ra,64(sp)
   18128:	df000f15 	stw	fp,60(sp)
   1812c:	ddc00e15 	stw	r23,56(sp)
   18130:	dd400c15 	stw	r21,48(sp)
   18134:	dd000b15 	stw	r20,44(sp)
   18138:	dcc00a15 	stw	r19,40(sp)
   1813c:	2825883a 	mov	r18,r5
   18140:	302d883a 	mov	r22,r6
   18144:	8440050e 	bge	r16,r17,1815c <__multiply+0x54>
   18148:	8007883a 	mov	r3,r16
   1814c:	3025883a 	mov	r18,r6
   18150:	8821883a 	mov	r16,r17
   18154:	282d883a 	mov	r22,r5
   18158:	1823883a 	mov	r17,r3
   1815c:	90800217 	ldw	r2,8(r18)
   18160:	8447883a 	add	r3,r16,r17
   18164:	d8c00215 	stw	r3,8(sp)
   18168:	91400117 	ldw	r5,4(r18)
   1816c:	10c0010e 	bge	r2,r3,18174 <__multiply+0x6c>
   18170:	29400044 	addi	r5,r5,1
   18174:	0017c980 	call	17c98 <_Balloc>
   18178:	d8c00217 	ldw	r3,8(sp)
   1817c:	d8800615 	stw	r2,24(sp)
   18180:	18eb883a 	add	r21,r3,r3
   18184:	ad6b883a 	add	r21,r21,r21
   18188:	10c00504 	addi	r3,r2,20
   1818c:	1d6b883a 	add	r21,r3,r21
   18190:	d8c00115 	stw	r3,4(sp)
   18194:	dd400315 	stw	r21,12(sp)
   18198:	1805883a 	mov	r2,r3
   1819c:	1d40042e 	bgeu	r3,r21,181b0 <__multiply+0xa8>
   181a0:	d8c00317 	ldw	r3,12(sp)
   181a4:	10000015 	stw	zero,0(r2)
   181a8:	10800104 	addi	r2,r2,4
   181ac:	10fffc36 	bltu	r2,r3,181a0 <_gp+0xffff2074>
   181b0:	8c63883a 	add	r17,r17,r17
   181b4:	b5800504 	addi	r22,r22,20
   181b8:	8c63883a 	add	r17,r17,r17
   181bc:	94800504 	addi	r18,r18,20
   181c0:	8421883a 	add	r16,r16,r16
   181c4:	b463883a 	add	r17,r22,r17
   181c8:	8421883a 	add	r16,r16,r16
   181cc:	dd800015 	stw	r22,0(sp)
   181d0:	dc800415 	stw	r18,16(sp)
   181d4:	dc400515 	stw	r17,20(sp)
   181d8:	9429883a 	add	r20,r18,r16
   181dc:	b4404f2e 	bgeu	r22,r17,1831c <__multiply+0x214>
   181e0:	d8c00017 	ldw	r3,0(sp)
   181e4:	1c800017 	ldw	r18,0(r3)
   181e8:	947fffcc 	andi	r17,r18,65535
   181ec:	88001e26 	beq	r17,zero,18268 <__multiply+0x160>
   181f0:	dd800117 	ldw	r22,4(sp)
   181f4:	dd400417 	ldw	r21,16(sp)
   181f8:	0027883a 	mov	r19,zero
   181fc:	ac800017 	ldw	r18,0(r21)
   18200:	b4000017 	ldw	r16,0(r22)
   18204:	880b883a 	mov	r5,r17
   18208:	913fffcc 	andi	r4,r18,65535
   1820c:	00122c80 	call	122c8 <__mulsi3>
   18210:	9008d43a 	srli	r4,r18,16
   18214:	84bfffcc 	andi	r18,r16,65535
   18218:	1485883a 	add	r2,r2,r18
   1821c:	14e5883a 	add	r18,r2,r19
   18220:	8020d43a 	srli	r16,r16,16
   18224:	9026d43a 	srli	r19,r18,16
   18228:	880b883a 	mov	r5,r17
   1822c:	00122c80 	call	122c8 <__mulsi3>
   18230:	1405883a 	add	r2,r2,r16
   18234:	14e1883a 	add	r16,r2,r19
   18238:	90ffffcc 	andi	r3,r18,65535
   1823c:	8024943a 	slli	r18,r16,16
   18240:	ad400104 	addi	r21,r21,4
   18244:	b005883a 	mov	r2,r22
   18248:	90c6b03a 	or	r3,r18,r3
   1824c:	b0c00015 	stw	r3,0(r22)
   18250:	8026d43a 	srli	r19,r16,16
   18254:	b5800104 	addi	r22,r22,4
   18258:	ad3fe836 	bltu	r21,r20,181fc <_gp+0xffff20d0>
   1825c:	d8c00017 	ldw	r3,0(sp)
   18260:	14c00115 	stw	r19,4(r2)
   18264:	1c800017 	ldw	r18,0(r3)
   18268:	9024d43a 	srli	r18,r18,16
   1826c:	90002226 	beq	r18,zero,182f8 <__multiply+0x1f0>
   18270:	d8c00117 	ldw	r3,4(sp)
   18274:	dd800417 	ldw	r22,16(sp)
   18278:	002f883a 	mov	r23,zero
   1827c:	1f000017 	ldw	fp,0(r3)
   18280:	1823883a 	mov	r17,r3
   18284:	182b883a 	mov	r21,r3
   18288:	e021883a 	mov	r16,fp
   1828c:	00000106 	br	18294 <__multiply+0x18c>
   18290:	982b883a 	mov	r21,r19
   18294:	b100000b 	ldhu	r4,0(r22)
   18298:	8020d43a 	srli	r16,r16,16
   1829c:	900b883a 	mov	r5,r18
   182a0:	00122c80 	call	122c8 <__mulsi3>
   182a4:	1405883a 	add	r2,r2,r16
   182a8:	15ef883a 	add	r23,r2,r23
   182ac:	b804943a 	slli	r2,r23,16
   182b0:	e0ffffcc 	andi	r3,fp,65535
   182b4:	8c400104 	addi	r17,r17,4
   182b8:	10c6b03a 	or	r3,r2,r3
   182bc:	88ffff15 	stw	r3,-4(r17)
   182c0:	b5800104 	addi	r22,r22,4
   182c4:	b13fff17 	ldw	r4,-4(r22)
   182c8:	acc00104 	addi	r19,r21,4
   182cc:	900b883a 	mov	r5,r18
   182d0:	2008d43a 	srli	r4,r4,16
   182d4:	9c000017 	ldw	r16,0(r19)
   182d8:	00122c80 	call	122c8 <__mulsi3>
   182dc:	b806d43a 	srli	r3,r23,16
   182e0:	813fffcc 	andi	r4,r16,65535
   182e4:	1105883a 	add	r2,r2,r4
   182e8:	10f9883a 	add	fp,r2,r3
   182ec:	e02ed43a 	srli	r23,fp,16
   182f0:	b53fe736 	bltu	r22,r20,18290 <_gp+0xffff2164>
   182f4:	af000115 	stw	fp,4(r21)
   182f8:	d8c00017 	ldw	r3,0(sp)
   182fc:	d9000517 	ldw	r4,20(sp)
   18300:	18c00104 	addi	r3,r3,4
   18304:	d8c00015 	stw	r3,0(sp)
   18308:	d8c00117 	ldw	r3,4(sp)
   1830c:	18c00104 	addi	r3,r3,4
   18310:	d8c00115 	stw	r3,4(sp)
   18314:	d8c00017 	ldw	r3,0(sp)
   18318:	193fb136 	bltu	r3,r4,181e0 <_gp+0xffff20b4>
   1831c:	d8c00217 	ldw	r3,8(sp)
   18320:	00c00c0e 	bge	zero,r3,18354 <__multiply+0x24c>
   18324:	d8c00317 	ldw	r3,12(sp)
   18328:	18bfff17 	ldw	r2,-4(r3)
   1832c:	1d7fff04 	addi	r21,r3,-4
   18330:	10000326 	beq	r2,zero,18340 <__multiply+0x238>
   18334:	00000706 	br	18354 <__multiply+0x24c>
   18338:	a8800017 	ldw	r2,0(r21)
   1833c:	1000051e 	bne	r2,zero,18354 <__multiply+0x24c>
   18340:	d8c00217 	ldw	r3,8(sp)
   18344:	ad7fff04 	addi	r21,r21,-4
   18348:	18ffffc4 	addi	r3,r3,-1
   1834c:	d8c00215 	stw	r3,8(sp)
   18350:	183ff91e 	bne	r3,zero,18338 <_gp+0xffff220c>
   18354:	d8c00617 	ldw	r3,24(sp)
   18358:	d9000217 	ldw	r4,8(sp)
   1835c:	1805883a 	mov	r2,r3
   18360:	19000415 	stw	r4,16(r3)
   18364:	dfc01017 	ldw	ra,64(sp)
   18368:	df000f17 	ldw	fp,60(sp)
   1836c:	ddc00e17 	ldw	r23,56(sp)
   18370:	dd800d17 	ldw	r22,52(sp)
   18374:	dd400c17 	ldw	r21,48(sp)
   18378:	dd000b17 	ldw	r20,44(sp)
   1837c:	dcc00a17 	ldw	r19,40(sp)
   18380:	dc800917 	ldw	r18,36(sp)
   18384:	dc400817 	ldw	r17,32(sp)
   18388:	dc000717 	ldw	r16,28(sp)
   1838c:	dec01104 	addi	sp,sp,68
   18390:	f800283a 	ret

00018394 <__pow5mult>:
   18394:	defffa04 	addi	sp,sp,-24
   18398:	dcc00315 	stw	r19,12(sp)
   1839c:	dc000015 	stw	r16,0(sp)
   183a0:	dfc00515 	stw	ra,20(sp)
   183a4:	dd000415 	stw	r20,16(sp)
   183a8:	dc800215 	stw	r18,8(sp)
   183ac:	dc400115 	stw	r17,4(sp)
   183b0:	308000cc 	andi	r2,r6,3
   183b4:	3021883a 	mov	r16,r6
   183b8:	2027883a 	mov	r19,r4
   183bc:	10002f1e 	bne	r2,zero,1847c <__pow5mult+0xe8>
   183c0:	2825883a 	mov	r18,r5
   183c4:	8021d0ba 	srai	r16,r16,2
   183c8:	80001a26 	beq	r16,zero,18434 <__pow5mult+0xa0>
   183cc:	9c401217 	ldw	r17,72(r19)
   183d0:	8800061e 	bne	r17,zero,183ec <__pow5mult+0x58>
   183d4:	00003406 	br	184a8 <__pow5mult+0x114>
   183d8:	8021d07a 	srai	r16,r16,1
   183dc:	80001526 	beq	r16,zero,18434 <__pow5mult+0xa0>
   183e0:	88800017 	ldw	r2,0(r17)
   183e4:	10001c26 	beq	r2,zero,18458 <__pow5mult+0xc4>
   183e8:	1023883a 	mov	r17,r2
   183ec:	8080004c 	andi	r2,r16,1
   183f0:	103ff926 	beq	r2,zero,183d8 <_gp+0xffff22ac>
   183f4:	880d883a 	mov	r6,r17
   183f8:	900b883a 	mov	r5,r18
   183fc:	9809883a 	mov	r4,r19
   18400:	00181080 	call	18108 <__multiply>
   18404:	90001b26 	beq	r18,zero,18474 <__pow5mult+0xe0>
   18408:	91000117 	ldw	r4,4(r18)
   1840c:	98c01317 	ldw	r3,76(r19)
   18410:	8021d07a 	srai	r16,r16,1
   18414:	2109883a 	add	r4,r4,r4
   18418:	2109883a 	add	r4,r4,r4
   1841c:	1907883a 	add	r3,r3,r4
   18420:	19000017 	ldw	r4,0(r3)
   18424:	91000015 	stw	r4,0(r18)
   18428:	1c800015 	stw	r18,0(r3)
   1842c:	1025883a 	mov	r18,r2
   18430:	803feb1e 	bne	r16,zero,183e0 <_gp+0xffff22b4>
   18434:	9005883a 	mov	r2,r18
   18438:	dfc00517 	ldw	ra,20(sp)
   1843c:	dd000417 	ldw	r20,16(sp)
   18440:	dcc00317 	ldw	r19,12(sp)
   18444:	dc800217 	ldw	r18,8(sp)
   18448:	dc400117 	ldw	r17,4(sp)
   1844c:	dc000017 	ldw	r16,0(sp)
   18450:	dec00604 	addi	sp,sp,24
   18454:	f800283a 	ret
   18458:	880d883a 	mov	r6,r17
   1845c:	880b883a 	mov	r5,r17
   18460:	9809883a 	mov	r4,r19
   18464:	00181080 	call	18108 <__multiply>
   18468:	88800015 	stw	r2,0(r17)
   1846c:	10000015 	stw	zero,0(r2)
   18470:	003fdd06 	br	183e8 <_gp+0xffff22bc>
   18474:	1025883a 	mov	r18,r2
   18478:	003fd706 	br	183d8 <_gp+0xffff22ac>
   1847c:	10bfffc4 	addi	r2,r2,-1
   18480:	1085883a 	add	r2,r2,r2
   18484:	00c000b4 	movhi	r3,2
   18488:	18f5ad04 	addi	r3,r3,-10572
   1848c:	1085883a 	add	r2,r2,r2
   18490:	1885883a 	add	r2,r3,r2
   18494:	11800017 	ldw	r6,0(r2)
   18498:	000f883a 	mov	r7,zero
   1849c:	0017d680 	call	17d68 <__multadd>
   184a0:	1025883a 	mov	r18,r2
   184a4:	003fc706 	br	183c4 <_gp+0xffff2298>
   184a8:	05000044 	movi	r20,1
   184ac:	a00b883a 	mov	r5,r20
   184b0:	9809883a 	mov	r4,r19
   184b4:	0017c980 	call	17c98 <_Balloc>
   184b8:	1023883a 	mov	r17,r2
   184bc:	00809c44 	movi	r2,625
   184c0:	88800515 	stw	r2,20(r17)
   184c4:	8d000415 	stw	r20,16(r17)
   184c8:	9c401215 	stw	r17,72(r19)
   184cc:	88000015 	stw	zero,0(r17)
   184d0:	003fc606 	br	183ec <_gp+0xffff22c0>

000184d4 <__lshift>:
   184d4:	defff904 	addi	sp,sp,-28
   184d8:	dd400515 	stw	r21,20(sp)
   184dc:	dcc00315 	stw	r19,12(sp)
   184e0:	302bd17a 	srai	r21,r6,5
   184e4:	2cc00417 	ldw	r19,16(r5)
   184e8:	28800217 	ldw	r2,8(r5)
   184ec:	dd000415 	stw	r20,16(sp)
   184f0:	ace7883a 	add	r19,r21,r19
   184f4:	dc800215 	stw	r18,8(sp)
   184f8:	dc400115 	stw	r17,4(sp)
   184fc:	dc000015 	stw	r16,0(sp)
   18500:	dfc00615 	stw	ra,24(sp)
   18504:	9c000044 	addi	r16,r19,1
   18508:	2823883a 	mov	r17,r5
   1850c:	3029883a 	mov	r20,r6
   18510:	2025883a 	mov	r18,r4
   18514:	29400117 	ldw	r5,4(r5)
   18518:	1400030e 	bge	r2,r16,18528 <__lshift+0x54>
   1851c:	1085883a 	add	r2,r2,r2
   18520:	29400044 	addi	r5,r5,1
   18524:	143ffd16 	blt	r2,r16,1851c <_gp+0xffff23f0>
   18528:	9009883a 	mov	r4,r18
   1852c:	0017c980 	call	17c98 <_Balloc>
   18530:	10c00504 	addi	r3,r2,20
   18534:	0540070e 	bge	zero,r21,18554 <__lshift+0x80>
   18538:	ad6b883a 	add	r21,r21,r21
   1853c:	ad6b883a 	add	r21,r21,r21
   18540:	1809883a 	mov	r4,r3
   18544:	1d47883a 	add	r3,r3,r21
   18548:	20000015 	stw	zero,0(r4)
   1854c:	21000104 	addi	r4,r4,4
   18550:	193ffd1e 	bne	r3,r4,18548 <_gp+0xffff241c>
   18554:	8a000417 	ldw	r8,16(r17)
   18558:	89000504 	addi	r4,r17,20
   1855c:	a18007cc 	andi	r6,r20,31
   18560:	4211883a 	add	r8,r8,r8
   18564:	4211883a 	add	r8,r8,r8
   18568:	2211883a 	add	r8,r4,r8
   1856c:	30002326 	beq	r6,zero,185fc <__lshift+0x128>
   18570:	02400804 	movi	r9,32
   18574:	4993c83a 	sub	r9,r9,r6
   18578:	000b883a 	mov	r5,zero
   1857c:	21c00017 	ldw	r7,0(r4)
   18580:	1815883a 	mov	r10,r3
   18584:	18c00104 	addi	r3,r3,4
   18588:	398e983a 	sll	r7,r7,r6
   1858c:	21000104 	addi	r4,r4,4
   18590:	394ab03a 	or	r5,r7,r5
   18594:	197fff15 	stw	r5,-4(r3)
   18598:	217fff17 	ldw	r5,-4(r4)
   1859c:	2a4ad83a 	srl	r5,r5,r9
   185a0:	223ff636 	bltu	r4,r8,1857c <_gp+0xffff2450>
   185a4:	51400115 	stw	r5,4(r10)
   185a8:	28001a1e 	bne	r5,zero,18614 <__lshift+0x140>
   185ac:	843fffc4 	addi	r16,r16,-1
   185b0:	14000415 	stw	r16,16(r2)
   185b4:	88000826 	beq	r17,zero,185d8 <__lshift+0x104>
   185b8:	89000117 	ldw	r4,4(r17)
   185bc:	90c01317 	ldw	r3,76(r18)
   185c0:	2109883a 	add	r4,r4,r4
   185c4:	2109883a 	add	r4,r4,r4
   185c8:	1907883a 	add	r3,r3,r4
   185cc:	19000017 	ldw	r4,0(r3)
   185d0:	89000015 	stw	r4,0(r17)
   185d4:	1c400015 	stw	r17,0(r3)
   185d8:	dfc00617 	ldw	ra,24(sp)
   185dc:	dd400517 	ldw	r21,20(sp)
   185e0:	dd000417 	ldw	r20,16(sp)
   185e4:	dcc00317 	ldw	r19,12(sp)
   185e8:	dc800217 	ldw	r18,8(sp)
   185ec:	dc400117 	ldw	r17,4(sp)
   185f0:	dc000017 	ldw	r16,0(sp)
   185f4:	dec00704 	addi	sp,sp,28
   185f8:	f800283a 	ret
   185fc:	21400017 	ldw	r5,0(r4)
   18600:	18c00104 	addi	r3,r3,4
   18604:	21000104 	addi	r4,r4,4
   18608:	197fff15 	stw	r5,-4(r3)
   1860c:	223ffb36 	bltu	r4,r8,185fc <_gp+0xffff24d0>
   18610:	003fe606 	br	185ac <_gp+0xffff2480>
   18614:	9c000084 	addi	r16,r19,2
   18618:	003fe406 	br	185ac <_gp+0xffff2480>

0001861c <__mcmp>:
   1861c:	20800417 	ldw	r2,16(r4)
   18620:	28c00417 	ldw	r3,16(r5)
   18624:	10c5c83a 	sub	r2,r2,r3
   18628:	1000111e 	bne	r2,zero,18670 <__mcmp+0x54>
   1862c:	18c7883a 	add	r3,r3,r3
   18630:	18c7883a 	add	r3,r3,r3
   18634:	21000504 	addi	r4,r4,20
   18638:	29400504 	addi	r5,r5,20
   1863c:	20c5883a 	add	r2,r4,r3
   18640:	28cb883a 	add	r5,r5,r3
   18644:	00000106 	br	1864c <__mcmp+0x30>
   18648:	20800a2e 	bgeu	r4,r2,18674 <__mcmp+0x58>
   1864c:	10bfff04 	addi	r2,r2,-4
   18650:	297fff04 	addi	r5,r5,-4
   18654:	11800017 	ldw	r6,0(r2)
   18658:	28c00017 	ldw	r3,0(r5)
   1865c:	30fffa26 	beq	r6,r3,18648 <_gp+0xffff251c>
   18660:	30c00236 	bltu	r6,r3,1866c <__mcmp+0x50>
   18664:	00800044 	movi	r2,1
   18668:	f800283a 	ret
   1866c:	00bfffc4 	movi	r2,-1
   18670:	f800283a 	ret
   18674:	0005883a 	mov	r2,zero
   18678:	f800283a 	ret

0001867c <__mdiff>:
   1867c:	28c00417 	ldw	r3,16(r5)
   18680:	30800417 	ldw	r2,16(r6)
   18684:	defffa04 	addi	sp,sp,-24
   18688:	dcc00315 	stw	r19,12(sp)
   1868c:	dc800215 	stw	r18,8(sp)
   18690:	dfc00515 	stw	ra,20(sp)
   18694:	dd000415 	stw	r20,16(sp)
   18698:	dc400115 	stw	r17,4(sp)
   1869c:	dc000015 	stw	r16,0(sp)
   186a0:	1887c83a 	sub	r3,r3,r2
   186a4:	2825883a 	mov	r18,r5
   186a8:	3027883a 	mov	r19,r6
   186ac:	1800141e 	bne	r3,zero,18700 <__mdiff+0x84>
   186b0:	1085883a 	add	r2,r2,r2
   186b4:	1085883a 	add	r2,r2,r2
   186b8:	2a000504 	addi	r8,r5,20
   186bc:	34000504 	addi	r16,r6,20
   186c0:	4087883a 	add	r3,r8,r2
   186c4:	8085883a 	add	r2,r16,r2
   186c8:	00000106 	br	186d0 <__mdiff+0x54>
   186cc:	40c0592e 	bgeu	r8,r3,18834 <__mdiff+0x1b8>
   186d0:	18ffff04 	addi	r3,r3,-4
   186d4:	10bfff04 	addi	r2,r2,-4
   186d8:	19c00017 	ldw	r7,0(r3)
   186dc:	11400017 	ldw	r5,0(r2)
   186e0:	397ffa26 	beq	r7,r5,186cc <_gp+0xffff25a0>
   186e4:	3940592e 	bgeu	r7,r5,1884c <__mdiff+0x1d0>
   186e8:	9005883a 	mov	r2,r18
   186ec:	4023883a 	mov	r17,r8
   186f0:	9825883a 	mov	r18,r19
   186f4:	05000044 	movi	r20,1
   186f8:	1027883a 	mov	r19,r2
   186fc:	00000406 	br	18710 <__mdiff+0x94>
   18700:	18005616 	blt	r3,zero,1885c <__mdiff+0x1e0>
   18704:	34400504 	addi	r17,r6,20
   18708:	2c000504 	addi	r16,r5,20
   1870c:	0029883a 	mov	r20,zero
   18710:	91400117 	ldw	r5,4(r18)
   18714:	0017c980 	call	17c98 <_Balloc>
   18718:	92400417 	ldw	r9,16(r18)
   1871c:	9b000417 	ldw	r12,16(r19)
   18720:	12c00504 	addi	r11,r2,20
   18724:	4a51883a 	add	r8,r9,r9
   18728:	6319883a 	add	r12,r12,r12
   1872c:	4211883a 	add	r8,r8,r8
   18730:	6319883a 	add	r12,r12,r12
   18734:	15000315 	stw	r20,12(r2)
   18738:	8211883a 	add	r8,r16,r8
   1873c:	8b19883a 	add	r12,r17,r12
   18740:	0007883a 	mov	r3,zero
   18744:	81400017 	ldw	r5,0(r16)
   18748:	89c00017 	ldw	r7,0(r17)
   1874c:	59800104 	addi	r6,r11,4
   18750:	293fffcc 	andi	r4,r5,65535
   18754:	20c7883a 	add	r3,r4,r3
   18758:	393fffcc 	andi	r4,r7,65535
   1875c:	1909c83a 	sub	r4,r3,r4
   18760:	280ad43a 	srli	r5,r5,16
   18764:	380ed43a 	srli	r7,r7,16
   18768:	2007d43a 	srai	r3,r4,16
   1876c:	213fffcc 	andi	r4,r4,65535
   18770:	29cbc83a 	sub	r5,r5,r7
   18774:	28c7883a 	add	r3,r5,r3
   18778:	180a943a 	slli	r5,r3,16
   1877c:	8c400104 	addi	r17,r17,4
   18780:	84000104 	addi	r16,r16,4
   18784:	2908b03a 	or	r4,r5,r4
   18788:	59000015 	stw	r4,0(r11)
   1878c:	1807d43a 	srai	r3,r3,16
   18790:	3015883a 	mov	r10,r6
   18794:	3017883a 	mov	r11,r6
   18798:	8b3fea36 	bltu	r17,r12,18744 <_gp+0xffff2618>
   1879c:	8200162e 	bgeu	r16,r8,187f8 <__mdiff+0x17c>
   187a0:	8017883a 	mov	r11,r16
   187a4:	59400017 	ldw	r5,0(r11)
   187a8:	31800104 	addi	r6,r6,4
   187ac:	5ac00104 	addi	r11,r11,4
   187b0:	293fffcc 	andi	r4,r5,65535
   187b4:	20c7883a 	add	r3,r4,r3
   187b8:	280ed43a 	srli	r7,r5,16
   187bc:	180bd43a 	srai	r5,r3,16
   187c0:	193fffcc 	andi	r4,r3,65535
   187c4:	3947883a 	add	r3,r7,r5
   187c8:	180a943a 	slli	r5,r3,16
   187cc:	1807d43a 	srai	r3,r3,16
   187d0:	2908b03a 	or	r4,r5,r4
   187d4:	313fff15 	stw	r4,-4(r6)
   187d8:	5a3ff236 	bltu	r11,r8,187a4 <_gp+0xffff2678>
   187dc:	0406303a 	nor	r3,zero,r16
   187e0:	1a07883a 	add	r3,r3,r8
   187e4:	1806d0ba 	srli	r3,r3,2
   187e8:	18c00044 	addi	r3,r3,1
   187ec:	18c7883a 	add	r3,r3,r3
   187f0:	18c7883a 	add	r3,r3,r3
   187f4:	50d5883a 	add	r10,r10,r3
   187f8:	50ffff04 	addi	r3,r10,-4
   187fc:	2000041e 	bne	r4,zero,18810 <__mdiff+0x194>
   18800:	18ffff04 	addi	r3,r3,-4
   18804:	19000017 	ldw	r4,0(r3)
   18808:	4a7fffc4 	addi	r9,r9,-1
   1880c:	203ffc26 	beq	r4,zero,18800 <_gp+0xffff26d4>
   18810:	12400415 	stw	r9,16(r2)
   18814:	dfc00517 	ldw	ra,20(sp)
   18818:	dd000417 	ldw	r20,16(sp)
   1881c:	dcc00317 	ldw	r19,12(sp)
   18820:	dc800217 	ldw	r18,8(sp)
   18824:	dc400117 	ldw	r17,4(sp)
   18828:	dc000017 	ldw	r16,0(sp)
   1882c:	dec00604 	addi	sp,sp,24
   18830:	f800283a 	ret
   18834:	000b883a 	mov	r5,zero
   18838:	0017c980 	call	17c98 <_Balloc>
   1883c:	00c00044 	movi	r3,1
   18840:	10c00415 	stw	r3,16(r2)
   18844:	10000515 	stw	zero,20(r2)
   18848:	003ff206 	br	18814 <_gp+0xffff26e8>
   1884c:	8023883a 	mov	r17,r16
   18850:	0029883a 	mov	r20,zero
   18854:	4021883a 	mov	r16,r8
   18858:	003fad06 	br	18710 <_gp+0xffff25e4>
   1885c:	9005883a 	mov	r2,r18
   18860:	94400504 	addi	r17,r18,20
   18864:	9c000504 	addi	r16,r19,20
   18868:	9825883a 	mov	r18,r19
   1886c:	05000044 	movi	r20,1
   18870:	1027883a 	mov	r19,r2
   18874:	003fa606 	br	18710 <_gp+0xffff25e4>

00018878 <__ulp>:
   18878:	295ffc2c 	andhi	r5,r5,32752
   1887c:	00bf3034 	movhi	r2,64704
   18880:	2887883a 	add	r3,r5,r2
   18884:	00c0020e 	bge	zero,r3,18890 <__ulp+0x18>
   18888:	0005883a 	mov	r2,zero
   1888c:	f800283a 	ret
   18890:	00c7c83a 	sub	r3,zero,r3
   18894:	1807d53a 	srai	r3,r3,20
   18898:	008004c4 	movi	r2,19
   1889c:	10c00b0e 	bge	r2,r3,188cc <__ulp+0x54>
   188a0:	18bffb04 	addi	r2,r3,-20
   188a4:	01000784 	movi	r4,30
   188a8:	0007883a 	mov	r3,zero
   188ac:	20800516 	blt	r4,r2,188c4 <__ulp+0x4c>
   188b0:	010007c4 	movi	r4,31
   188b4:	2089c83a 	sub	r4,r4,r2
   188b8:	00800044 	movi	r2,1
   188bc:	1104983a 	sll	r2,r2,r4
   188c0:	f800283a 	ret
   188c4:	00800044 	movi	r2,1
   188c8:	f800283a 	ret
   188cc:	01400234 	movhi	r5,8
   188d0:	28c7d83a 	sra	r3,r5,r3
   188d4:	0005883a 	mov	r2,zero
   188d8:	f800283a 	ret

000188dc <__b2d>:
   188dc:	defffa04 	addi	sp,sp,-24
   188e0:	dc000015 	stw	r16,0(sp)
   188e4:	24000417 	ldw	r16,16(r4)
   188e8:	dc400115 	stw	r17,4(sp)
   188ec:	24400504 	addi	r17,r4,20
   188f0:	8421883a 	add	r16,r16,r16
   188f4:	8421883a 	add	r16,r16,r16
   188f8:	8c21883a 	add	r16,r17,r16
   188fc:	dc800215 	stw	r18,8(sp)
   18900:	84bfff17 	ldw	r18,-4(r16)
   18904:	dd000415 	stw	r20,16(sp)
   18908:	dcc00315 	stw	r19,12(sp)
   1890c:	9009883a 	mov	r4,r18
   18910:	2829883a 	mov	r20,r5
   18914:	dfc00515 	stw	ra,20(sp)
   18918:	0017fb40 	call	17fb4 <__hi0bits>
   1891c:	00c00804 	movi	r3,32
   18920:	1889c83a 	sub	r4,r3,r2
   18924:	a1000015 	stw	r4,0(r20)
   18928:	01000284 	movi	r4,10
   1892c:	84ffff04 	addi	r19,r16,-4
   18930:	20801216 	blt	r4,r2,1897c <__b2d+0xa0>
   18934:	018002c4 	movi	r6,11
   18938:	308dc83a 	sub	r6,r6,r2
   1893c:	9186d83a 	srl	r3,r18,r6
   18940:	18cffc34 	orhi	r3,r3,16368
   18944:	8cc0212e 	bgeu	r17,r19,189cc <__b2d+0xf0>
   18948:	813ffe17 	ldw	r4,-8(r16)
   1894c:	218cd83a 	srl	r6,r4,r6
   18950:	10800544 	addi	r2,r2,21
   18954:	9084983a 	sll	r2,r18,r2
   18958:	1184b03a 	or	r2,r2,r6
   1895c:	dfc00517 	ldw	ra,20(sp)
   18960:	dd000417 	ldw	r20,16(sp)
   18964:	dcc00317 	ldw	r19,12(sp)
   18968:	dc800217 	ldw	r18,8(sp)
   1896c:	dc400117 	ldw	r17,4(sp)
   18970:	dc000017 	ldw	r16,0(sp)
   18974:	dec00604 	addi	sp,sp,24
   18978:	f800283a 	ret
   1897c:	8cc00f2e 	bgeu	r17,r19,189bc <__b2d+0xe0>
   18980:	117ffd44 	addi	r5,r2,-11
   18984:	80bffe17 	ldw	r2,-8(r16)
   18988:	28000e26 	beq	r5,zero,189c4 <__b2d+0xe8>
   1898c:	1949c83a 	sub	r4,r3,r5
   18990:	9164983a 	sll	r18,r18,r5
   18994:	1106d83a 	srl	r3,r2,r4
   18998:	81bffe04 	addi	r6,r16,-8
   1899c:	948ffc34 	orhi	r18,r18,16368
   189a0:	90c6b03a 	or	r3,r18,r3
   189a4:	89800e2e 	bgeu	r17,r6,189e0 <__b2d+0x104>
   189a8:	81bffd17 	ldw	r6,-12(r16)
   189ac:	1144983a 	sll	r2,r2,r5
   189b0:	310ad83a 	srl	r5,r6,r4
   189b4:	2884b03a 	or	r2,r5,r2
   189b8:	003fe806 	br	1895c <_gp+0xffff2830>
   189bc:	10bffd44 	addi	r2,r2,-11
   189c0:	1000041e 	bne	r2,zero,189d4 <__b2d+0xf8>
   189c4:	90cffc34 	orhi	r3,r18,16368
   189c8:	003fe406 	br	1895c <_gp+0xffff2830>
   189cc:	000d883a 	mov	r6,zero
   189d0:	003fdf06 	br	18950 <_gp+0xffff2824>
   189d4:	90a4983a 	sll	r18,r18,r2
   189d8:	0005883a 	mov	r2,zero
   189dc:	003ff906 	br	189c4 <_gp+0xffff2898>
   189e0:	1144983a 	sll	r2,r2,r5
   189e4:	003fdd06 	br	1895c <_gp+0xffff2830>

000189e8 <__d2b>:
   189e8:	defff804 	addi	sp,sp,-32
   189ec:	dc000215 	stw	r16,8(sp)
   189f0:	3021883a 	mov	r16,r6
   189f4:	dc400315 	stw	r17,12(sp)
   189f8:	8022907a 	slli	r17,r16,1
   189fc:	dd000615 	stw	r20,24(sp)
   18a00:	2829883a 	mov	r20,r5
   18a04:	01400044 	movi	r5,1
   18a08:	dcc00515 	stw	r19,20(sp)
   18a0c:	dc800415 	stw	r18,16(sp)
   18a10:	dfc00715 	stw	ra,28(sp)
   18a14:	3825883a 	mov	r18,r7
   18a18:	8822d57a 	srli	r17,r17,21
   18a1c:	0017c980 	call	17c98 <_Balloc>
   18a20:	1027883a 	mov	r19,r2
   18a24:	00800434 	movhi	r2,16
   18a28:	10bfffc4 	addi	r2,r2,-1
   18a2c:	808c703a 	and	r6,r16,r2
   18a30:	88000126 	beq	r17,zero,18a38 <__d2b+0x50>
   18a34:	31800434 	orhi	r6,r6,16
   18a38:	d9800015 	stw	r6,0(sp)
   18a3c:	a0002426 	beq	r20,zero,18ad0 <__d2b+0xe8>
   18a40:	d9000104 	addi	r4,sp,4
   18a44:	dd000115 	stw	r20,4(sp)
   18a48:	001801c0 	call	1801c <__lo0bits>
   18a4c:	d8c00017 	ldw	r3,0(sp)
   18a50:	10002f1e 	bne	r2,zero,18b10 <__d2b+0x128>
   18a54:	d9000117 	ldw	r4,4(sp)
   18a58:	99000515 	stw	r4,20(r19)
   18a5c:	1821003a 	cmpeq	r16,r3,zero
   18a60:	01000084 	movi	r4,2
   18a64:	2421c83a 	sub	r16,r4,r16
   18a68:	98c00615 	stw	r3,24(r19)
   18a6c:	9c000415 	stw	r16,16(r19)
   18a70:	88001f1e 	bne	r17,zero,18af0 <__d2b+0x108>
   18a74:	10bef384 	addi	r2,r2,-1074
   18a78:	90800015 	stw	r2,0(r18)
   18a7c:	00900034 	movhi	r2,16384
   18a80:	10bfffc4 	addi	r2,r2,-1
   18a84:	8085883a 	add	r2,r16,r2
   18a88:	1085883a 	add	r2,r2,r2
   18a8c:	1085883a 	add	r2,r2,r2
   18a90:	9885883a 	add	r2,r19,r2
   18a94:	11000517 	ldw	r4,20(r2)
   18a98:	8020917a 	slli	r16,r16,5
   18a9c:	0017fb40 	call	17fb4 <__hi0bits>
   18aa0:	d8c00817 	ldw	r3,32(sp)
   18aa4:	8085c83a 	sub	r2,r16,r2
   18aa8:	18800015 	stw	r2,0(r3)
   18aac:	9805883a 	mov	r2,r19
   18ab0:	dfc00717 	ldw	ra,28(sp)
   18ab4:	dd000617 	ldw	r20,24(sp)
   18ab8:	dcc00517 	ldw	r19,20(sp)
   18abc:	dc800417 	ldw	r18,16(sp)
   18ac0:	dc400317 	ldw	r17,12(sp)
   18ac4:	dc000217 	ldw	r16,8(sp)
   18ac8:	dec00804 	addi	sp,sp,32
   18acc:	f800283a 	ret
   18ad0:	d809883a 	mov	r4,sp
   18ad4:	001801c0 	call	1801c <__lo0bits>
   18ad8:	d8c00017 	ldw	r3,0(sp)
   18adc:	04000044 	movi	r16,1
   18ae0:	9c000415 	stw	r16,16(r19)
   18ae4:	98c00515 	stw	r3,20(r19)
   18ae8:	10800804 	addi	r2,r2,32
   18aec:	883fe126 	beq	r17,zero,18a74 <_gp+0xffff2948>
   18af0:	00c00d44 	movi	r3,53
   18af4:	8c7ef344 	addi	r17,r17,-1075
   18af8:	88a3883a 	add	r17,r17,r2
   18afc:	1885c83a 	sub	r2,r3,r2
   18b00:	d8c00817 	ldw	r3,32(sp)
   18b04:	94400015 	stw	r17,0(r18)
   18b08:	18800015 	stw	r2,0(r3)
   18b0c:	003fe706 	br	18aac <_gp+0xffff2980>
   18b10:	01000804 	movi	r4,32
   18b14:	2089c83a 	sub	r4,r4,r2
   18b18:	1908983a 	sll	r4,r3,r4
   18b1c:	d9400117 	ldw	r5,4(sp)
   18b20:	1886d83a 	srl	r3,r3,r2
   18b24:	2148b03a 	or	r4,r4,r5
   18b28:	99000515 	stw	r4,20(r19)
   18b2c:	d8c00015 	stw	r3,0(sp)
   18b30:	003fca06 	br	18a5c <_gp+0xffff2930>

00018b34 <__ratio>:
   18b34:	defff904 	addi	sp,sp,-28
   18b38:	dc400315 	stw	r17,12(sp)
   18b3c:	2823883a 	mov	r17,r5
   18b40:	d9400104 	addi	r5,sp,4
   18b44:	dfc00615 	stw	ra,24(sp)
   18b48:	dcc00515 	stw	r19,20(sp)
   18b4c:	dc800415 	stw	r18,16(sp)
   18b50:	2027883a 	mov	r19,r4
   18b54:	dc000215 	stw	r16,8(sp)
   18b58:	00188dc0 	call	188dc <__b2d>
   18b5c:	d80b883a 	mov	r5,sp
   18b60:	8809883a 	mov	r4,r17
   18b64:	1025883a 	mov	r18,r2
   18b68:	1821883a 	mov	r16,r3
   18b6c:	00188dc0 	call	188dc <__b2d>
   18b70:	8a000417 	ldw	r8,16(r17)
   18b74:	99000417 	ldw	r4,16(r19)
   18b78:	d9400117 	ldw	r5,4(sp)
   18b7c:	2209c83a 	sub	r4,r4,r8
   18b80:	2010917a 	slli	r8,r4,5
   18b84:	d9000017 	ldw	r4,0(sp)
   18b88:	2909c83a 	sub	r4,r5,r4
   18b8c:	4109883a 	add	r4,r8,r4
   18b90:	01000e0e 	bge	zero,r4,18bcc <__ratio+0x98>
   18b94:	2008953a 	slli	r4,r4,20
   18b98:	2421883a 	add	r16,r4,r16
   18b9c:	100d883a 	mov	r6,r2
   18ba0:	180f883a 	mov	r7,r3
   18ba4:	9009883a 	mov	r4,r18
   18ba8:	800b883a 	mov	r5,r16
   18bac:	001b7280 	call	1b728 <__divdf3>
   18bb0:	dfc00617 	ldw	ra,24(sp)
   18bb4:	dcc00517 	ldw	r19,20(sp)
   18bb8:	dc800417 	ldw	r18,16(sp)
   18bbc:	dc400317 	ldw	r17,12(sp)
   18bc0:	dc000217 	ldw	r16,8(sp)
   18bc4:	dec00704 	addi	sp,sp,28
   18bc8:	f800283a 	ret
   18bcc:	2008953a 	slli	r4,r4,20
   18bd0:	1907c83a 	sub	r3,r3,r4
   18bd4:	003ff106 	br	18b9c <_gp+0xffff2a70>

00018bd8 <_mprec_log10>:
   18bd8:	defffe04 	addi	sp,sp,-8
   18bdc:	dc000015 	stw	r16,0(sp)
   18be0:	dfc00115 	stw	ra,4(sp)
   18be4:	008005c4 	movi	r2,23
   18be8:	2021883a 	mov	r16,r4
   18bec:	11000d0e 	bge	r2,r4,18c24 <_mprec_log10+0x4c>
   18bf0:	0005883a 	mov	r2,zero
   18bf4:	00cffc34 	movhi	r3,16368
   18bf8:	843fffc4 	addi	r16,r16,-1
   18bfc:	000d883a 	mov	r6,zero
   18c00:	01d00934 	movhi	r7,16420
   18c04:	1009883a 	mov	r4,r2
   18c08:	180b883a 	mov	r5,r3
   18c0c:	001189c0 	call	1189c <__muldf3>
   18c10:	803ff91e 	bne	r16,zero,18bf8 <_gp+0xffff2acc>
   18c14:	dfc00117 	ldw	ra,4(sp)
   18c18:	dc000017 	ldw	r16,0(sp)
   18c1c:	dec00204 	addi	sp,sp,8
   18c20:	f800283a 	ret
   18c24:	202090fa 	slli	r16,r4,3
   18c28:	008000b4 	movhi	r2,2
   18c2c:	10b5c404 	addi	r2,r2,-10480
   18c30:	1421883a 	add	r16,r2,r16
   18c34:	80800017 	ldw	r2,0(r16)
   18c38:	80c00117 	ldw	r3,4(r16)
   18c3c:	dfc00117 	ldw	ra,4(sp)
   18c40:	dc000017 	ldw	r16,0(sp)
   18c44:	dec00204 	addi	sp,sp,8
   18c48:	f800283a 	ret

00018c4c <__copybits>:
   18c4c:	297fffc4 	addi	r5,r5,-1
   18c50:	280fd17a 	srai	r7,r5,5
   18c54:	30c00417 	ldw	r3,16(r6)
   18c58:	30800504 	addi	r2,r6,20
   18c5c:	39c00044 	addi	r7,r7,1
   18c60:	18c7883a 	add	r3,r3,r3
   18c64:	39cf883a 	add	r7,r7,r7
   18c68:	18c7883a 	add	r3,r3,r3
   18c6c:	39cf883a 	add	r7,r7,r7
   18c70:	10c7883a 	add	r3,r2,r3
   18c74:	21cf883a 	add	r7,r4,r7
   18c78:	10c00d2e 	bgeu	r2,r3,18cb0 <__copybits+0x64>
   18c7c:	200b883a 	mov	r5,r4
   18c80:	12000017 	ldw	r8,0(r2)
   18c84:	29400104 	addi	r5,r5,4
   18c88:	10800104 	addi	r2,r2,4
   18c8c:	2a3fff15 	stw	r8,-4(r5)
   18c90:	10fffb36 	bltu	r2,r3,18c80 <_gp+0xffff2b54>
   18c94:	1985c83a 	sub	r2,r3,r6
   18c98:	10bffac4 	addi	r2,r2,-21
   18c9c:	1004d0ba 	srli	r2,r2,2
   18ca0:	10800044 	addi	r2,r2,1
   18ca4:	1085883a 	add	r2,r2,r2
   18ca8:	1085883a 	add	r2,r2,r2
   18cac:	2089883a 	add	r4,r4,r2
   18cb0:	21c0032e 	bgeu	r4,r7,18cc0 <__copybits+0x74>
   18cb4:	20000015 	stw	zero,0(r4)
   18cb8:	21000104 	addi	r4,r4,4
   18cbc:	21fffd36 	bltu	r4,r7,18cb4 <_gp+0xffff2b88>
   18cc0:	f800283a 	ret

00018cc4 <__any_on>:
   18cc4:	20c00417 	ldw	r3,16(r4)
   18cc8:	2805d17a 	srai	r2,r5,5
   18ccc:	21000504 	addi	r4,r4,20
   18cd0:	18800d0e 	bge	r3,r2,18d08 <__any_on+0x44>
   18cd4:	18c7883a 	add	r3,r3,r3
   18cd8:	18c7883a 	add	r3,r3,r3
   18cdc:	20c7883a 	add	r3,r4,r3
   18ce0:	20c0192e 	bgeu	r4,r3,18d48 <__any_on+0x84>
   18ce4:	18bfff17 	ldw	r2,-4(r3)
   18ce8:	18ffff04 	addi	r3,r3,-4
   18cec:	1000041e 	bne	r2,zero,18d00 <__any_on+0x3c>
   18cf0:	20c0142e 	bgeu	r4,r3,18d44 <__any_on+0x80>
   18cf4:	18ffff04 	addi	r3,r3,-4
   18cf8:	19400017 	ldw	r5,0(r3)
   18cfc:	283ffc26 	beq	r5,zero,18cf0 <_gp+0xffff2bc4>
   18d00:	00800044 	movi	r2,1
   18d04:	f800283a 	ret
   18d08:	10c00a0e 	bge	r2,r3,18d34 <__any_on+0x70>
   18d0c:	1085883a 	add	r2,r2,r2
   18d10:	1085883a 	add	r2,r2,r2
   18d14:	294007cc 	andi	r5,r5,31
   18d18:	2087883a 	add	r3,r4,r2
   18d1c:	283ff026 	beq	r5,zero,18ce0 <_gp+0xffff2bb4>
   18d20:	19800017 	ldw	r6,0(r3)
   18d24:	3144d83a 	srl	r2,r6,r5
   18d28:	114a983a 	sll	r5,r2,r5
   18d2c:	317ff41e 	bne	r6,r5,18d00 <_gp+0xffff2bd4>
   18d30:	003feb06 	br	18ce0 <_gp+0xffff2bb4>
   18d34:	1085883a 	add	r2,r2,r2
   18d38:	1085883a 	add	r2,r2,r2
   18d3c:	2087883a 	add	r3,r4,r2
   18d40:	003fe706 	br	18ce0 <_gp+0xffff2bb4>
   18d44:	f800283a 	ret
   18d48:	0005883a 	mov	r2,zero
   18d4c:	f800283a 	ret

00018d50 <__fpclassifyd>:
   18d50:	00a00034 	movhi	r2,32768
   18d54:	10bfffc4 	addi	r2,r2,-1
   18d58:	2884703a 	and	r2,r5,r2
   18d5c:	10000726 	beq	r2,zero,18d7c <__fpclassifyd+0x2c>
   18d60:	00fffc34 	movhi	r3,65520
   18d64:	019ff834 	movhi	r6,32736
   18d68:	28c7883a 	add	r3,r5,r3
   18d6c:	31bfffc4 	addi	r6,r6,-1
   18d70:	30c00536 	bltu	r6,r3,18d88 <__fpclassifyd+0x38>
   18d74:	00800104 	movi	r2,4
   18d78:	f800283a 	ret
   18d7c:	2000021e 	bne	r4,zero,18d88 <__fpclassifyd+0x38>
   18d80:	00800084 	movi	r2,2
   18d84:	f800283a 	ret
   18d88:	00dffc34 	movhi	r3,32752
   18d8c:	019ff834 	movhi	r6,32736
   18d90:	28cb883a 	add	r5,r5,r3
   18d94:	31bfffc4 	addi	r6,r6,-1
   18d98:	317ff62e 	bgeu	r6,r5,18d74 <_gp+0xffff2c48>
   18d9c:	01400434 	movhi	r5,16
   18da0:	297fffc4 	addi	r5,r5,-1
   18da4:	28800236 	bltu	r5,r2,18db0 <__fpclassifyd+0x60>
   18da8:	008000c4 	movi	r2,3
   18dac:	f800283a 	ret
   18db0:	10c00226 	beq	r2,r3,18dbc <__fpclassifyd+0x6c>
   18db4:	0005883a 	mov	r2,zero
   18db8:	f800283a 	ret
   18dbc:	2005003a 	cmpeq	r2,r4,zero
   18dc0:	f800283a 	ret

00018dc4 <strlen>:
   18dc4:	208000cc 	andi	r2,r4,3
   18dc8:	10002026 	beq	r2,zero,18e4c <strlen+0x88>
   18dcc:	20800007 	ldb	r2,0(r4)
   18dd0:	10002026 	beq	r2,zero,18e54 <strlen+0x90>
   18dd4:	2005883a 	mov	r2,r4
   18dd8:	00000206 	br	18de4 <strlen+0x20>
   18ddc:	10c00007 	ldb	r3,0(r2)
   18de0:	18001826 	beq	r3,zero,18e44 <strlen+0x80>
   18de4:	10800044 	addi	r2,r2,1
   18de8:	10c000cc 	andi	r3,r2,3
   18dec:	183ffb1e 	bne	r3,zero,18ddc <_gp+0xffff2cb0>
   18df0:	10c00017 	ldw	r3,0(r2)
   18df4:	01ffbff4 	movhi	r7,65279
   18df8:	39ffbfc4 	addi	r7,r7,-257
   18dfc:	00ca303a 	nor	r5,zero,r3
   18e00:	01a02074 	movhi	r6,32897
   18e04:	19c7883a 	add	r3,r3,r7
   18e08:	31a02004 	addi	r6,r6,-32640
   18e0c:	1946703a 	and	r3,r3,r5
   18e10:	1986703a 	and	r3,r3,r6
   18e14:	1800091e 	bne	r3,zero,18e3c <strlen+0x78>
   18e18:	10800104 	addi	r2,r2,4
   18e1c:	10c00017 	ldw	r3,0(r2)
   18e20:	19cb883a 	add	r5,r3,r7
   18e24:	00c6303a 	nor	r3,zero,r3
   18e28:	28c6703a 	and	r3,r5,r3
   18e2c:	1986703a 	and	r3,r3,r6
   18e30:	183ff926 	beq	r3,zero,18e18 <_gp+0xffff2cec>
   18e34:	00000106 	br	18e3c <strlen+0x78>
   18e38:	10800044 	addi	r2,r2,1
   18e3c:	10c00007 	ldb	r3,0(r2)
   18e40:	183ffd1e 	bne	r3,zero,18e38 <_gp+0xffff2d0c>
   18e44:	1105c83a 	sub	r2,r2,r4
   18e48:	f800283a 	ret
   18e4c:	2005883a 	mov	r2,r4
   18e50:	003fe706 	br	18df0 <_gp+0xffff2cc4>
   18e54:	0005883a 	mov	r2,zero
   18e58:	f800283a 	ret

00018e5c <__ssprint_r>:
   18e5c:	30800217 	ldw	r2,8(r6)
   18e60:	defff604 	addi	sp,sp,-40
   18e64:	dc800215 	stw	r18,8(sp)
   18e68:	dfc00915 	stw	ra,36(sp)
   18e6c:	df000815 	stw	fp,32(sp)
   18e70:	ddc00715 	stw	r23,28(sp)
   18e74:	dd800615 	stw	r22,24(sp)
   18e78:	dd400515 	stw	r21,20(sp)
   18e7c:	dd000415 	stw	r20,16(sp)
   18e80:	dcc00315 	stw	r19,12(sp)
   18e84:	dc400115 	stw	r17,4(sp)
   18e88:	dc000015 	stw	r16,0(sp)
   18e8c:	3025883a 	mov	r18,r6
   18e90:	10005826 	beq	r2,zero,18ff4 <__ssprint_r+0x198>
   18e94:	2027883a 	mov	r19,r4
   18e98:	35c00017 	ldw	r23,0(r6)
   18e9c:	29000017 	ldw	r4,0(r5)
   18ea0:	28800217 	ldw	r2,8(r5)
   18ea4:	2823883a 	mov	r17,r5
   18ea8:	0039883a 	mov	fp,zero
   18eac:	0021883a 	mov	r16,zero
   18eb0:	80003926 	beq	r16,zero,18f98 <__ssprint_r+0x13c>
   18eb4:	102b883a 	mov	r21,r2
   18eb8:	102d883a 	mov	r22,r2
   18ebc:	80803a36 	bltu	r16,r2,18fa8 <__ssprint_r+0x14c>
   18ec0:	88c0030b 	ldhu	r3,12(r17)
   18ec4:	1881200c 	andi	r2,r3,1152
   18ec8:	10002626 	beq	r2,zero,18f64 <__ssprint_r+0x108>
   18ecc:	88800517 	ldw	r2,20(r17)
   18ed0:	89400417 	ldw	r5,16(r17)
   18ed4:	81800044 	addi	r6,r16,1
   18ed8:	108f883a 	add	r7,r2,r2
   18edc:	3885883a 	add	r2,r7,r2
   18ee0:	100ed7fa 	srli	r7,r2,31
   18ee4:	216dc83a 	sub	r22,r4,r5
   18ee8:	3589883a 	add	r4,r6,r22
   18eec:	3885883a 	add	r2,r7,r2
   18ef0:	102bd07a 	srai	r21,r2,1
   18ef4:	a80d883a 	mov	r6,r21
   18ef8:	a900022e 	bgeu	r21,r4,18f04 <__ssprint_r+0xa8>
   18efc:	202b883a 	mov	r21,r4
   18f00:	200d883a 	mov	r6,r4
   18f04:	18c1000c 	andi	r3,r3,1024
   18f08:	18002a26 	beq	r3,zero,18fb4 <__ssprint_r+0x158>
   18f0c:	300b883a 	mov	r5,r6
   18f10:	9809883a 	mov	r4,r19
   18f14:	00123f40 	call	123f4 <_malloc_r>
   18f18:	1029883a 	mov	r20,r2
   18f1c:	10002c26 	beq	r2,zero,18fd0 <__ssprint_r+0x174>
   18f20:	89400417 	ldw	r5,16(r17)
   18f24:	b00d883a 	mov	r6,r22
   18f28:	1009883a 	mov	r4,r2
   18f2c:	0017b500 	call	17b50 <memcpy>
   18f30:	8880030b 	ldhu	r2,12(r17)
   18f34:	00fedfc4 	movi	r3,-1153
   18f38:	10c4703a 	and	r2,r2,r3
   18f3c:	10802014 	ori	r2,r2,128
   18f40:	8880030d 	sth	r2,12(r17)
   18f44:	a589883a 	add	r4,r20,r22
   18f48:	adadc83a 	sub	r22,r21,r22
   18f4c:	8d400515 	stw	r21,20(r17)
   18f50:	8d800215 	stw	r22,8(r17)
   18f54:	8d000415 	stw	r20,16(r17)
   18f58:	89000015 	stw	r4,0(r17)
   18f5c:	802b883a 	mov	r21,r16
   18f60:	802d883a 	mov	r22,r16
   18f64:	b00d883a 	mov	r6,r22
   18f68:	e00b883a 	mov	r5,fp
   18f6c:	001a4a80 	call	1a4a8 <memmove>
   18f70:	88800217 	ldw	r2,8(r17)
   18f74:	89000017 	ldw	r4,0(r17)
   18f78:	90c00217 	ldw	r3,8(r18)
   18f7c:	1545c83a 	sub	r2,r2,r21
   18f80:	2589883a 	add	r4,r4,r22
   18f84:	88800215 	stw	r2,8(r17)
   18f88:	89000015 	stw	r4,0(r17)
   18f8c:	1c21c83a 	sub	r16,r3,r16
   18f90:	94000215 	stw	r16,8(r18)
   18f94:	80001726 	beq	r16,zero,18ff4 <__ssprint_r+0x198>
   18f98:	bf000017 	ldw	fp,0(r23)
   18f9c:	bc000117 	ldw	r16,4(r23)
   18fa0:	bdc00204 	addi	r23,r23,8
   18fa4:	003fc206 	br	18eb0 <_gp+0xffff2d84>
   18fa8:	802b883a 	mov	r21,r16
   18fac:	802d883a 	mov	r22,r16
   18fb0:	003fec06 	br	18f64 <_gp+0xffff2e38>
   18fb4:	9809883a 	mov	r4,r19
   18fb8:	001a6040 	call	1a604 <_realloc_r>
   18fbc:	1029883a 	mov	r20,r2
   18fc0:	103fe01e 	bne	r2,zero,18f44 <_gp+0xffff2e18>
   18fc4:	89400417 	ldw	r5,16(r17)
   18fc8:	9809883a 	mov	r4,r19
   18fcc:	00176040 	call	17604 <_free_r>
   18fd0:	88c0030b 	ldhu	r3,12(r17)
   18fd4:	00800304 	movi	r2,12
   18fd8:	98800015 	stw	r2,0(r19)
   18fdc:	18c01014 	ori	r3,r3,64
   18fe0:	88c0030d 	sth	r3,12(r17)
   18fe4:	00bfffc4 	movi	r2,-1
   18fe8:	90000215 	stw	zero,8(r18)
   18fec:	90000115 	stw	zero,4(r18)
   18ff0:	00000206 	br	18ffc <__ssprint_r+0x1a0>
   18ff4:	90000115 	stw	zero,4(r18)
   18ff8:	0005883a 	mov	r2,zero
   18ffc:	dfc00917 	ldw	ra,36(sp)
   19000:	df000817 	ldw	fp,32(sp)
   19004:	ddc00717 	ldw	r23,28(sp)
   19008:	dd800617 	ldw	r22,24(sp)
   1900c:	dd400517 	ldw	r21,20(sp)
   19010:	dd000417 	ldw	r20,16(sp)
   19014:	dcc00317 	ldw	r19,12(sp)
   19018:	dc800217 	ldw	r18,8(sp)
   1901c:	dc400117 	ldw	r17,4(sp)
   19020:	dc000017 	ldw	r16,0(sp)
   19024:	dec00a04 	addi	sp,sp,40
   19028:	f800283a 	ret

0001902c <___svfiprintf_internal_r>:
   1902c:	2880030b 	ldhu	r2,12(r5)
   19030:	deffc804 	addi	sp,sp,-224
   19034:	dcc03115 	stw	r19,196(sp)
   19038:	dfc03715 	stw	ra,220(sp)
   1903c:	df003615 	stw	fp,216(sp)
   19040:	ddc03515 	stw	r23,212(sp)
   19044:	dd803415 	stw	r22,208(sp)
   19048:	dd403315 	stw	r21,204(sp)
   1904c:	dd003215 	stw	r20,200(sp)
   19050:	dc803015 	stw	r18,192(sp)
   19054:	dc402f15 	stw	r17,188(sp)
   19058:	dc002e15 	stw	r16,184(sp)
   1905c:	d9402315 	stw	r5,140(sp)
   19060:	d9002715 	stw	r4,156(sp)
   19064:	1080200c 	andi	r2,r2,128
   19068:	d9c02415 	stw	r7,144(sp)
   1906c:	3027883a 	mov	r19,r6
   19070:	10000226 	beq	r2,zero,1907c <___svfiprintf_internal_r+0x50>
   19074:	28800417 	ldw	r2,16(r5)
   19078:	10046d26 	beq	r2,zero,1a230 <___svfiprintf_internal_r+0x1204>
   1907c:	d8801a04 	addi	r2,sp,104
   19080:	d8c019c4 	addi	r3,sp,103
   19084:	058000b4 	movhi	r22,2
   19088:	10c9c83a 	sub	r4,r2,r3
   1908c:	b5b5f604 	addi	r22,r22,-10280
   19090:	d8801e15 	stw	r2,120(sp)
   19094:	d8c01f15 	stw	r3,124(sp)
   19098:	dec01a15 	stw	sp,104(sp)
   1909c:	d8001c15 	stw	zero,112(sp)
   190a0:	d8001b15 	stw	zero,108(sp)
   190a4:	d811883a 	mov	r8,sp
   190a8:	d8002915 	stw	zero,164(sp)
   190ac:	d8002615 	stw	zero,152(sp)
   190b0:	d9002c15 	stw	r4,176(sp)
   190b4:	98800007 	ldb	r2,0(r19)
   190b8:	10031426 	beq	r2,zero,19d0c <___svfiprintf_internal_r+0xce0>
   190bc:	00c00944 	movi	r3,37
   190c0:	9825883a 	mov	r18,r19
   190c4:	10c0021e 	bne	r2,r3,190d0 <___svfiprintf_internal_r+0xa4>
   190c8:	00001406 	br	1911c <___svfiprintf_internal_r+0xf0>
   190cc:	10c00326 	beq	r2,r3,190dc <___svfiprintf_internal_r+0xb0>
   190d0:	94800044 	addi	r18,r18,1
   190d4:	90800007 	ldb	r2,0(r18)
   190d8:	103ffc1e 	bne	r2,zero,190cc <_gp+0xffff2fa0>
   190dc:	94e1c83a 	sub	r16,r18,r19
   190e0:	80000e26 	beq	r16,zero,1911c <___svfiprintf_internal_r+0xf0>
   190e4:	d8c01c17 	ldw	r3,112(sp)
   190e8:	d8801b17 	ldw	r2,108(sp)
   190ec:	44c00015 	stw	r19,0(r8)
   190f0:	1c07883a 	add	r3,r3,r16
   190f4:	10800044 	addi	r2,r2,1
   190f8:	d8c01c15 	stw	r3,112(sp)
   190fc:	44000115 	stw	r16,4(r8)
   19100:	d8801b15 	stw	r2,108(sp)
   19104:	00c001c4 	movi	r3,7
   19108:	18835c16 	blt	r3,r2,19e7c <___svfiprintf_internal_r+0xe50>
   1910c:	42000204 	addi	r8,r8,8
   19110:	d9402617 	ldw	r5,152(sp)
   19114:	2c0b883a 	add	r5,r5,r16
   19118:	d9402615 	stw	r5,152(sp)
   1911c:	90800007 	ldb	r2,0(r18)
   19120:	1002fc26 	beq	r2,zero,19d14 <___svfiprintf_internal_r+0xce8>
   19124:	0023883a 	mov	r17,zero
   19128:	00bfffc4 	movi	r2,-1
   1912c:	0021883a 	mov	r16,zero
   19130:	94c00044 	addi	r19,r18,1
   19134:	90c00047 	ldb	r3,1(r18)
   19138:	dc402105 	stb	r17,132(sp)
   1913c:	d8001d85 	stb	zero,118(sp)
   19140:	002b883a 	mov	r21,zero
   19144:	d8802015 	stw	r2,128(sp)
   19148:	d8002515 	stw	zero,148(sp)
   1914c:	04801604 	movi	r18,88
   19150:	05000244 	movi	r20,9
   19154:	402f883a 	mov	r23,r8
   19158:	8023883a 	mov	r17,r16
   1915c:	9cc00044 	addi	r19,r19,1
   19160:	18bff804 	addi	r2,r3,-32
   19164:	9081fb36 	bltu	r18,r2,19954 <___svfiprintf_internal_r+0x928>
   19168:	100490ba 	slli	r2,r2,2
   1916c:	010000b4 	movhi	r4,2
   19170:	21246004 	addi	r4,r4,-28288
   19174:	1105883a 	add	r2,r2,r4
   19178:	10800017 	ldw	r2,0(r2)
   1917c:	1000683a 	jmp	r2
   19180:	00019380 	call	1938 <__alt_mem_onchip_memory-0xe6c8>
   19184:	00019954 	movui	zero,1637
   19188:	00019954 	movui	zero,1637
   1918c:	00019374 	movhi	zero,1613
   19190:	00019954 	movui	zero,1637
   19194:	00019954 	movui	zero,1637
   19198:	00019954 	movui	zero,1637
   1919c:	00019954 	movui	zero,1637
   191a0:	00019954 	movui	zero,1637
   191a4:	00019954 	movui	zero,1637
   191a8:	000192e4 	muli	zero,zero,1611
   191ac:	000194e0 	cmpeqi	zero,zero,1619
   191b0:	00019954 	movui	zero,1637
   191b4:	0001930c 	andi	zero,zero,1612
   191b8:	00019990 	cmplti	zero,zero,1638
   191bc:	00019954 	movui	zero,1637
   191c0:	00019984 	movi	zero,1638
   191c4:	00019918 	cmpnei	zero,zero,1636
   191c8:	00019918 	cmpnei	zero,zero,1636
   191cc:	00019918 	cmpnei	zero,zero,1636
   191d0:	00019918 	cmpnei	zero,zero,1636
   191d4:	00019918 	cmpnei	zero,zero,1636
   191d8:	00019918 	cmpnei	zero,zero,1636
   191dc:	00019918 	cmpnei	zero,zero,1636
   191e0:	00019918 	cmpnei	zero,zero,1636
   191e4:	00019918 	cmpnei	zero,zero,1636
   191e8:	00019954 	movui	zero,1637
   191ec:	00019954 	movui	zero,1637
   191f0:	00019954 	movui	zero,1637
   191f4:	00019954 	movui	zero,1637
   191f8:	00019954 	movui	zero,1637
   191fc:	00019954 	movui	zero,1637
   19200:	00019954 	movui	zero,1637
   19204:	00019954 	movui	zero,1637
   19208:	00019954 	movui	zero,1637
   1920c:	00019954 	movui	zero,1637
   19210:	0001989c 	xori	zero,zero,1634
   19214:	00019954 	movui	zero,1637
   19218:	00019954 	movui	zero,1637
   1921c:	00019954 	movui	zero,1637
   19220:	00019954 	movui	zero,1637
   19224:	00019954 	movui	zero,1637
   19228:	00019954 	movui	zero,1637
   1922c:	00019954 	movui	zero,1637
   19230:	00019954 	movui	zero,1637
   19234:	00019954 	movui	zero,1637
   19238:	00019954 	movui	zero,1637
   1923c:	00019a4c 	andi	zero,zero,1641
   19240:	00019954 	movui	zero,1637
   19244:	00019954 	movui	zero,1637
   19248:	00019954 	movui	zero,1637
   1924c:	00019954 	movui	zero,1637
   19250:	00019954 	movui	zero,1637
   19254:	000199d8 	cmpnei	zero,zero,1639
   19258:	00019954 	movui	zero,1637
   1925c:	00019954 	movui	zero,1637
   19260:	000196d8 	cmpnei	zero,zero,1627
   19264:	00019954 	movui	zero,1637
   19268:	00019954 	movui	zero,1637
   1926c:	00019954 	movui	zero,1637
   19270:	00019954 	movui	zero,1637
   19274:	00019954 	movui	zero,1637
   19278:	00019954 	movui	zero,1637
   1927c:	00019954 	movui	zero,1637
   19280:	00019954 	movui	zero,1637
   19284:	00019954 	movui	zero,1637
   19288:	00019954 	movui	zero,1637
   1928c:	000195a4 	muli	zero,zero,1622
   19290:	00019788 	cmpgei	zero,zero,1630
   19294:	00019954 	movui	zero,1637
   19298:	00019954 	movui	zero,1637
   1929c:	00019954 	movui	zero,1637
   192a0:	0001977c 	xorhi	zero,zero,1629
   192a4:	00019788 	cmpgei	zero,zero,1630
   192a8:	00019954 	movui	zero,1637
   192ac:	00019954 	movui	zero,1637
   192b0:	00019768 	cmpgeui	zero,zero,1629
   192b4:	00019954 	movui	zero,1637
   192b8:	00019728 	cmpgeui	zero,zero,1628
   192bc:	000194f4 	movhi	zero,1619
   192c0:	00019318 	cmpnei	zero,zero,1612
   192c4:	00019890 	cmplti	zero,zero,1634
   192c8:	00019954 	movui	zero,1637
   192cc:	0001983c 	xorhi	zero,zero,1632
   192d0:	00019954 	movui	zero,1637
   192d4:	00019458 	cmpnei	zero,zero,1617
   192d8:	00019954 	movui	zero,1637
   192dc:	00019954 	movui	zero,1637
   192e0:	000193a4 	muli	zero,zero,1614
   192e4:	d9002417 	ldw	r4,144(sp)
   192e8:	d9402417 	ldw	r5,144(sp)
   192ec:	21000017 	ldw	r4,0(r4)
   192f0:	28800104 	addi	r2,r5,4
   192f4:	d9002515 	stw	r4,148(sp)
   192f8:	20032b0e 	bge	r4,zero,19fa8 <___svfiprintf_internal_r+0xf7c>
   192fc:	d8c02517 	ldw	r3,148(sp)
   19300:	d8802415 	stw	r2,144(sp)
   19304:	00c7c83a 	sub	r3,zero,r3
   19308:	d8c02515 	stw	r3,148(sp)
   1930c:	8c400114 	ori	r17,r17,4
   19310:	98c00007 	ldb	r3,0(r19)
   19314:	003f9106 	br	1915c <_gp+0xffff3030>
   19318:	00800c04 	movi	r2,48
   1931c:	d9402417 	ldw	r5,144(sp)
   19320:	d9002017 	ldw	r4,128(sp)
   19324:	d8801d05 	stb	r2,116(sp)
   19328:	00801e04 	movi	r2,120
   1932c:	d8801d45 	stb	r2,117(sp)
   19330:	d8001d85 	stb	zero,118(sp)
   19334:	b811883a 	mov	r8,r23
   19338:	28c00104 	addi	r3,r5,4
   1933c:	2c800017 	ldw	r18,0(r5)
   19340:	0029883a 	mov	r20,zero
   19344:	88800094 	ori	r2,r17,2
   19348:	20036316 	blt	r4,zero,1a0d8 <___svfiprintf_internal_r+0x10ac>
   1934c:	00bfdfc4 	movi	r2,-129
   19350:	88a0703a 	and	r16,r17,r2
   19354:	d8c02415 	stw	r3,144(sp)
   19358:	84000094 	ori	r16,r16,2
   1935c:	90031c26 	beq	r18,zero,19fd0 <___svfiprintf_internal_r+0xfa4>
   19360:	014000b4 	movhi	r5,2
   19364:	29759604 	addi	r5,r5,-10664
   19368:	002b883a 	mov	r21,zero
   1936c:	d9402915 	stw	r5,164(sp)
   19370:	00002906 	br	19418 <___svfiprintf_internal_r+0x3ec>
   19374:	8c400054 	ori	r17,r17,1
   19378:	98c00007 	ldb	r3,0(r19)
   1937c:	003f7706 	br	1915c <_gp+0xffff3030>
   19380:	a8803fcc 	andi	r2,r21,255
   19384:	1080201c 	xori	r2,r2,128
   19388:	10bfe004 	addi	r2,r2,-128
   1938c:	10032a1e 	bne	r2,zero,1a038 <___svfiprintf_internal_r+0x100c>
   19390:	00c00044 	movi	r3,1
   19394:	d8c02105 	stb	r3,132(sp)
   19398:	05400804 	movi	r21,32
   1939c:	98c00007 	ldb	r3,0(r19)
   193a0:	003f6e06 	br	1915c <_gp+0xffff3030>
   193a4:	8821883a 	mov	r16,r17
   193a8:	dc402103 	ldbu	r17,132(sp)
   193ac:	b811883a 	mov	r8,r23
   193b0:	8c403fcc 	andi	r17,r17,255
   193b4:	8803f01e 	bne	r17,zero,1a378 <___svfiprintf_internal_r+0x134c>
   193b8:	008000b4 	movhi	r2,2
   193bc:	10b59604 	addi	r2,r2,-10664
   193c0:	d8802915 	stw	r2,164(sp)
   193c4:	8080080c 	andi	r2,r16,32
   193c8:	1000cd26 	beq	r2,zero,19700 <___svfiprintf_internal_r+0x6d4>
   193cc:	d9002417 	ldw	r4,144(sp)
   193d0:	24800017 	ldw	r18,0(r4)
   193d4:	25000117 	ldw	r20,4(r4)
   193d8:	21000204 	addi	r4,r4,8
   193dc:	d9002415 	stw	r4,144(sp)
   193e0:	8080004c 	andi	r2,r16,1
   193e4:	1002c726 	beq	r2,zero,19f04 <___svfiprintf_internal_r+0xed8>
   193e8:	9504b03a 	or	r2,r18,r20
   193ec:	1003061e 	bne	r2,zero,1a008 <___svfiprintf_internal_r+0xfdc>
   193f0:	d9002017 	ldw	r4,128(sp)
   193f4:	d8001d85 	stb	zero,118(sp)
   193f8:	20033e16 	blt	r4,zero,1a0f4 <___svfiprintf_internal_r+0x10c8>
   193fc:	00bfdfc4 	movi	r2,-129
   19400:	80a0703a 	and	r16,r16,r2
   19404:	d9402017 	ldw	r5,128(sp)
   19408:	002b883a 	mov	r21,zero
   1940c:	28002826 	beq	r5,zero,194b0 <___svfiprintf_internal_r+0x484>
   19410:	0025883a 	mov	r18,zero
   19414:	0029883a 	mov	r20,zero
   19418:	d9002917 	ldw	r4,164(sp)
   1941c:	dc401a04 	addi	r17,sp,104
   19420:	908003cc 	andi	r2,r18,15
   19424:	a006973a 	slli	r3,r20,28
   19428:	2085883a 	add	r2,r4,r2
   1942c:	9024d13a 	srli	r18,r18,4
   19430:	10800003 	ldbu	r2,0(r2)
   19434:	a028d13a 	srli	r20,r20,4
   19438:	8c7fffc4 	addi	r17,r17,-1
   1943c:	1ca4b03a 	or	r18,r3,r18
   19440:	88800005 	stb	r2,0(r17)
   19444:	9504b03a 	or	r2,r18,r20
   19448:	103ff51e 	bne	r2,zero,19420 <_gp+0xffff32f4>
   1944c:	d8801e17 	ldw	r2,120(sp)
   19450:	1469c83a 	sub	r20,r2,r17
   19454:	00001906 	br	194bc <___svfiprintf_internal_r+0x490>
   19458:	8821883a 	mov	r16,r17
   1945c:	dc402103 	ldbu	r17,132(sp)
   19460:	b811883a 	mov	r8,r23
   19464:	8c403fcc 	andi	r17,r17,255
   19468:	8803d01e 	bne	r17,zero,1a3ac <___svfiprintf_internal_r+0x1380>
   1946c:	8080080c 	andi	r2,r16,32
   19470:	10016126 	beq	r2,zero,199f8 <___svfiprintf_internal_r+0x9cc>
   19474:	d9002417 	ldw	r4,144(sp)
   19478:	d9402017 	ldw	r5,128(sp)
   1947c:	d8001d85 	stb	zero,118(sp)
   19480:	20c00204 	addi	r3,r4,8
   19484:	24800017 	ldw	r18,0(r4)
   19488:	25000117 	ldw	r20,4(r4)
   1948c:	28030f16 	blt	r5,zero,1a0cc <___svfiprintf_internal_r+0x10a0>
   19490:	013fdfc4 	movi	r4,-129
   19494:	9504b03a 	or	r2,r18,r20
   19498:	d8c02415 	stw	r3,144(sp)
   1949c:	8120703a 	and	r16,r16,r4
   194a0:	002b883a 	mov	r21,zero
   194a4:	1000cd1e 	bne	r2,zero,197dc <___svfiprintf_internal_r+0x7b0>
   194a8:	d8c02017 	ldw	r3,128(sp)
   194ac:	1803141e 	bne	r3,zero,1a100 <___svfiprintf_internal_r+0x10d4>
   194b0:	d8002015 	stw	zero,128(sp)
   194b4:	0029883a 	mov	r20,zero
   194b8:	dc401a04 	addi	r17,sp,104
   194bc:	dc802017 	ldw	r18,128(sp)
   194c0:	9500010e 	bge	r18,r20,194c8 <___svfiprintf_internal_r+0x49c>
   194c4:	a025883a 	mov	r18,r20
   194c8:	ad403fcc 	andi	r21,r21,255
   194cc:	ad40201c 	xori	r21,r21,128
   194d0:	ad7fe004 	addi	r21,r21,-128
   194d4:	a8003f26 	beq	r21,zero,195d4 <___svfiprintf_internal_r+0x5a8>
   194d8:	94800044 	addi	r18,r18,1
   194dc:	00003d06 	br	195d4 <___svfiprintf_internal_r+0x5a8>
   194e0:	00c00044 	movi	r3,1
   194e4:	d8c02105 	stb	r3,132(sp)
   194e8:	05400ac4 	movi	r21,43
   194ec:	98c00007 	ldb	r3,0(r19)
   194f0:	003f1a06 	br	1915c <_gp+0xffff3030>
   194f4:	8821883a 	mov	r16,r17
   194f8:	dc402103 	ldbu	r17,132(sp)
   194fc:	b811883a 	mov	r8,r23
   19500:	8c403fcc 	andi	r17,r17,255
   19504:	8803a71e 	bne	r17,zero,1a3a4 <___svfiprintf_internal_r+0x1378>
   19508:	8080080c 	andi	r2,r16,32
   1950c:	10015726 	beq	r2,zero,19a6c <___svfiprintf_internal_r+0xa40>
   19510:	d8c02417 	ldw	r3,144(sp)
   19514:	d9002017 	ldw	r4,128(sp)
   19518:	d8001d85 	stb	zero,118(sp)
   1951c:	18800204 	addi	r2,r3,8
   19520:	1c800017 	ldw	r18,0(r3)
   19524:	1d000117 	ldw	r20,4(r3)
   19528:	2002db16 	blt	r4,zero,1a098 <___svfiprintf_internal_r+0x106c>
   1952c:	013fdfc4 	movi	r4,-129
   19530:	9506b03a 	or	r3,r18,r20
   19534:	d8802415 	stw	r2,144(sp)
   19538:	8120703a 	and	r16,r16,r4
   1953c:	18015826 	beq	r3,zero,19aa0 <___svfiprintf_internal_r+0xa74>
   19540:	002b883a 	mov	r21,zero
   19544:	dc401a04 	addi	r17,sp,104
   19548:	9006d0fa 	srli	r3,r18,3
   1954c:	a008977a 	slli	r4,r20,29
   19550:	a028d0fa 	srli	r20,r20,3
   19554:	948001cc 	andi	r18,r18,7
   19558:	90800c04 	addi	r2,r18,48
   1955c:	8c7fffc4 	addi	r17,r17,-1
   19560:	20e4b03a 	or	r18,r4,r3
   19564:	88800005 	stb	r2,0(r17)
   19568:	9506b03a 	or	r3,r18,r20
   1956c:	183ff61e 	bne	r3,zero,19548 <_gp+0xffff341c>
   19570:	80c0004c 	andi	r3,r16,1
   19574:	18028926 	beq	r3,zero,19f9c <___svfiprintf_internal_r+0xf70>
   19578:	10803fcc 	andi	r2,r2,255
   1957c:	1080201c 	xori	r2,r2,128
   19580:	10bfe004 	addi	r2,r2,-128
   19584:	00c00c04 	movi	r3,48
   19588:	10ffb026 	beq	r2,r3,1944c <_gp+0xffff3320>
   1958c:	88ffffc5 	stb	r3,-1(r17)
   19590:	d8c01e17 	ldw	r3,120(sp)
   19594:	88bfffc4 	addi	r2,r17,-1
   19598:	1023883a 	mov	r17,r2
   1959c:	18a9c83a 	sub	r20,r3,r2
   195a0:	003fc606 	br	194bc <_gp+0xffff3390>
   195a4:	d8c02417 	ldw	r3,144(sp)
   195a8:	04800044 	movi	r18,1
   195ac:	8821883a 	mov	r16,r17
   195b0:	18800017 	ldw	r2,0(r3)
   195b4:	18c00104 	addi	r3,r3,4
   195b8:	b811883a 	mov	r8,r23
   195bc:	d8001d85 	stb	zero,118(sp)
   195c0:	d8801005 	stb	r2,64(sp)
   195c4:	d8c02415 	stw	r3,144(sp)
   195c8:	9029883a 	mov	r20,r18
   195cc:	dc401004 	addi	r17,sp,64
   195d0:	d8002015 	stw	zero,128(sp)
   195d4:	80c0008c 	andi	r3,r16,2
   195d8:	d8c02115 	stw	r3,132(sp)
   195dc:	18000126 	beq	r3,zero,195e4 <___svfiprintf_internal_r+0x5b8>
   195e0:	94800084 	addi	r18,r18,2
   195e4:	80c0210c 	andi	r3,r16,132
   195e8:	d8c02215 	stw	r3,136(sp)
   195ec:	1801321e 	bne	r3,zero,19ab8 <___svfiprintf_internal_r+0xa8c>
   195f0:	d9002517 	ldw	r4,148(sp)
   195f4:	24b9c83a 	sub	fp,r4,r18
   195f8:	07012f0e 	bge	zero,fp,19ab8 <___svfiprintf_internal_r+0xa8c>
   195fc:	02400404 	movi	r9,16
   19600:	d8c01c17 	ldw	r3,112(sp)
   19604:	d8801b17 	ldw	r2,108(sp)
   19608:	4f03250e 	bge	r9,fp,1a2a0 <___svfiprintf_internal_r+0x1274>
   1960c:	010000b4 	movhi	r4,2
   19610:	2135fa04 	addi	r4,r4,-10264
   19614:	dc002a15 	stw	r16,168(sp)
   19618:	dc402b15 	stw	r17,172(sp)
   1961c:	d9002815 	stw	r4,160(sp)
   19620:	e023883a 	mov	r17,fp
   19624:	482f883a 	mov	r23,r9
   19628:	9839883a 	mov	fp,r19
   1962c:	054001c4 	movi	r21,7
   19630:	9027883a 	mov	r19,r18
   19634:	dc002717 	ldw	r16,156(sp)
   19638:	dc802317 	ldw	r18,140(sp)
   1963c:	00000306 	br	1964c <___svfiprintf_internal_r+0x620>
   19640:	8c7ffc04 	addi	r17,r17,-16
   19644:	42000204 	addi	r8,r8,8
   19648:	bc40130e 	bge	r23,r17,19698 <___svfiprintf_internal_r+0x66c>
   1964c:	014000b4 	movhi	r5,2
   19650:	18c00404 	addi	r3,r3,16
   19654:	10800044 	addi	r2,r2,1
   19658:	2975fa04 	addi	r5,r5,-10264
   1965c:	41400015 	stw	r5,0(r8)
   19660:	45c00115 	stw	r23,4(r8)
   19664:	d8c01c15 	stw	r3,112(sp)
   19668:	d8801b15 	stw	r2,108(sp)
   1966c:	a8bff40e 	bge	r21,r2,19640 <_gp+0xffff3514>
   19670:	d9801a04 	addi	r6,sp,104
   19674:	900b883a 	mov	r5,r18
   19678:	8009883a 	mov	r4,r16
   1967c:	0018e5c0 	call	18e5c <__ssprint_r>
   19680:	1001aa1e 	bne	r2,zero,19d2c <___svfiprintf_internal_r+0xd00>
   19684:	8c7ffc04 	addi	r17,r17,-16
   19688:	d8c01c17 	ldw	r3,112(sp)
   1968c:	d8801b17 	ldw	r2,108(sp)
   19690:	d811883a 	mov	r8,sp
   19694:	bc7fed16 	blt	r23,r17,1964c <_gp+0xffff3520>
   19698:	9825883a 	mov	r18,r19
   1969c:	dc002a17 	ldw	r16,168(sp)
   196a0:	e027883a 	mov	r19,fp
   196a4:	8839883a 	mov	fp,r17
   196a8:	dc402b17 	ldw	r17,172(sp)
   196ac:	d9002817 	ldw	r4,160(sp)
   196b0:	e0c7883a 	add	r3,fp,r3
   196b4:	10800044 	addi	r2,r2,1
   196b8:	41000015 	stw	r4,0(r8)
   196bc:	47000115 	stw	fp,4(r8)
   196c0:	d8c01c15 	stw	r3,112(sp)
   196c4:	d8801b15 	stw	r2,108(sp)
   196c8:	010001c4 	movi	r4,7
   196cc:	20821616 	blt	r4,r2,19f28 <___svfiprintf_internal_r+0xefc>
   196d0:	42000204 	addi	r8,r8,8
   196d4:	0000fa06 	br	19ac0 <___svfiprintf_internal_r+0xa94>
   196d8:	8821883a 	mov	r16,r17
   196dc:	dc402103 	ldbu	r17,132(sp)
   196e0:	b811883a 	mov	r8,r23
   196e4:	8c403fcc 	andi	r17,r17,255
   196e8:	8803361e 	bne	r17,zero,1a3c4 <___svfiprintf_internal_r+0x1398>
   196ec:	014000b4 	movhi	r5,2
   196f0:	29759104 	addi	r5,r5,-10684
   196f4:	d9402915 	stw	r5,164(sp)
   196f8:	8080080c 	andi	r2,r16,32
   196fc:	103f331e 	bne	r2,zero,193cc <_gp+0xffff32a0>
   19700:	8080040c 	andi	r2,r16,16
   19704:	1002551e 	bne	r2,zero,1a05c <___svfiprintf_internal_r+0x1030>
   19708:	8080100c 	andi	r2,r16,64
   1970c:	1002a626 	beq	r2,zero,1a1a8 <___svfiprintf_internal_r+0x117c>
   19710:	d8802417 	ldw	r2,144(sp)
   19714:	0029883a 	mov	r20,zero
   19718:	1480000b 	ldhu	r18,0(r2)
   1971c:	10800104 	addi	r2,r2,4
   19720:	d8802415 	stw	r2,144(sp)
   19724:	003f2e06 	br	193e0 <_gp+0xffff32b4>
   19728:	8821883a 	mov	r16,r17
   1972c:	dc402103 	ldbu	r17,132(sp)
   19730:	b811883a 	mov	r8,r23
   19734:	8c403fcc 	andi	r17,r17,255
   19738:	88030b1e 	bne	r17,zero,1a368 <___svfiprintf_internal_r+0x133c>
   1973c:	8080080c 	andi	r2,r16,32
   19740:	1002271e 	bne	r2,zero,19fe0 <___svfiprintf_internal_r+0xfb4>
   19744:	8080040c 	andi	r2,r16,16
   19748:	10028e26 	beq	r2,zero,1a184 <___svfiprintf_internal_r+0x1158>
   1974c:	d8c02417 	ldw	r3,144(sp)
   19750:	d9002617 	ldw	r4,152(sp)
   19754:	18800017 	ldw	r2,0(r3)
   19758:	18c00104 	addi	r3,r3,4
   1975c:	d8c02415 	stw	r3,144(sp)
   19760:	11000015 	stw	r4,0(r2)
   19764:	003e5306 	br	190b4 <_gp+0xffff2f88>
   19768:	98c00007 	ldb	r3,0(r19)
   1976c:	01401b04 	movi	r5,108
   19770:	19424f26 	beq	r3,r5,1a0b0 <___svfiprintf_internal_r+0x1084>
   19774:	8c400414 	ori	r17,r17,16
   19778:	003e7806 	br	1915c <_gp+0xffff3030>
   1977c:	8c401014 	ori	r17,r17,64
   19780:	98c00007 	ldb	r3,0(r19)
   19784:	003e7506 	br	1915c <_gp+0xffff3030>
   19788:	8821883a 	mov	r16,r17
   1978c:	dc402103 	ldbu	r17,132(sp)
   19790:	b811883a 	mov	r8,r23
   19794:	8c403fcc 	andi	r17,r17,255
   19798:	8802fe1e 	bne	r17,zero,1a394 <___svfiprintf_internal_r+0x1368>
   1979c:	8080080c 	andi	r2,r16,32
   197a0:	10004626 	beq	r2,zero,198bc <___svfiprintf_internal_r+0x890>
   197a4:	d9002417 	ldw	r4,144(sp)
   197a8:	20800117 	ldw	r2,4(r4)
   197ac:	24800017 	ldw	r18,0(r4)
   197b0:	21000204 	addi	r4,r4,8
   197b4:	d9002415 	stw	r4,144(sp)
   197b8:	1029883a 	mov	r20,r2
   197bc:	10004a16 	blt	r2,zero,198e8 <___svfiprintf_internal_r+0x8bc>
   197c0:	d9002017 	ldw	r4,128(sp)
   197c4:	dd401d83 	ldbu	r21,118(sp)
   197c8:	2001eb16 	blt	r4,zero,19f78 <___svfiprintf_internal_r+0xf4c>
   197cc:	00ffdfc4 	movi	r3,-129
   197d0:	9504b03a 	or	r2,r18,r20
   197d4:	80e0703a 	and	r16,r16,r3
   197d8:	103f3326 	beq	r2,zero,194a8 <_gp+0xffff337c>
   197dc:	a0009426 	beq	r20,zero,19a30 <___svfiprintf_internal_r+0xa04>
   197e0:	dc401a04 	addi	r17,sp,104
   197e4:	402f883a 	mov	r23,r8
   197e8:	9009883a 	mov	r4,r18
   197ec:	a00b883a 	mov	r5,r20
   197f0:	01800284 	movi	r6,10
   197f4:	000f883a 	mov	r7,zero
   197f8:	001b1640 	call	1b164 <__umoddi3>
   197fc:	10800c04 	addi	r2,r2,48
   19800:	8c7fffc4 	addi	r17,r17,-1
   19804:	9009883a 	mov	r4,r18
   19808:	a00b883a 	mov	r5,r20
   1980c:	88800005 	stb	r2,0(r17)
   19810:	01800284 	movi	r6,10
   19814:	000f883a 	mov	r7,zero
   19818:	001ab680 	call	1ab68 <__udivdi3>
   1981c:	1025883a 	mov	r18,r2
   19820:	10c4b03a 	or	r2,r2,r3
   19824:	1829883a 	mov	r20,r3
   19828:	103fef1e 	bne	r2,zero,197e8 <_gp+0xffff36bc>
   1982c:	d9001e17 	ldw	r4,120(sp)
   19830:	b811883a 	mov	r8,r23
   19834:	2469c83a 	sub	r20,r4,r17
   19838:	003f2006 	br	194bc <_gp+0xffff3390>
   1983c:	d8802417 	ldw	r2,144(sp)
   19840:	8821883a 	mov	r16,r17
   19844:	d8001d85 	stb	zero,118(sp)
   19848:	14400017 	ldw	r17,0(r2)
   1984c:	b811883a 	mov	r8,r23
   19850:	15c00104 	addi	r23,r2,4
   19854:	88026c26 	beq	r17,zero,1a208 <___svfiprintf_internal_r+0x11dc>
   19858:	d8c02017 	ldw	r3,128(sp)
   1985c:	18025f16 	blt	r3,zero,1a1dc <___svfiprintf_internal_r+0x11b0>
   19860:	180d883a 	mov	r6,r3
   19864:	000b883a 	mov	r5,zero
   19868:	8809883a 	mov	r4,r17
   1986c:	da002d15 	stw	r8,180(sp)
   19870:	00179f00 	call	179f0 <memchr>
   19874:	da002d17 	ldw	r8,180(sp)
   19878:	1002a526 	beq	r2,zero,1a310 <___svfiprintf_internal_r+0x12e4>
   1987c:	1469c83a 	sub	r20,r2,r17
   19880:	dd401d83 	ldbu	r21,118(sp)
   19884:	ddc02415 	stw	r23,144(sp)
   19888:	d8002015 	stw	zero,128(sp)
   1988c:	003f0b06 	br	194bc <_gp+0xffff3390>
   19890:	8c400814 	ori	r17,r17,32
   19894:	98c00007 	ldb	r3,0(r19)
   19898:	003e3006 	br	1915c <_gp+0xffff3030>
   1989c:	8821883a 	mov	r16,r17
   198a0:	dc402103 	ldbu	r17,132(sp)
   198a4:	b811883a 	mov	r8,r23
   198a8:	8c403fcc 	andi	r17,r17,255
   198ac:	8802b01e 	bne	r17,zero,1a370 <___svfiprintf_internal_r+0x1344>
   198b0:	84000414 	ori	r16,r16,16
   198b4:	8080080c 	andi	r2,r16,32
   198b8:	103fba1e 	bne	r2,zero,197a4 <_gp+0xffff3678>
   198bc:	8080040c 	andi	r2,r16,16
   198c0:	1001df1e 	bne	r2,zero,1a040 <___svfiprintf_internal_r+0x1014>
   198c4:	8080100c 	andi	r2,r16,64
   198c8:	10023d26 	beq	r2,zero,1a1c0 <___svfiprintf_internal_r+0x1194>
   198cc:	d8802417 	ldw	r2,144(sp)
   198d0:	1480000f 	ldh	r18,0(r2)
   198d4:	10800104 	addi	r2,r2,4
   198d8:	d8802415 	stw	r2,144(sp)
   198dc:	9029d7fa 	srai	r20,r18,31
   198e0:	a005883a 	mov	r2,r20
   198e4:	103fb60e 	bge	r2,zero,197c0 <_gp+0xffff3694>
   198e8:	d9402017 	ldw	r5,128(sp)
   198ec:	04a5c83a 	sub	r18,zero,r18
   198f0:	05400b44 	movi	r21,45
   198f4:	9004c03a 	cmpne	r2,r18,zero
   198f8:	0529c83a 	sub	r20,zero,r20
   198fc:	dd401d85 	stb	r21,118(sp)
   19900:	a0a9c83a 	sub	r20,r20,r2
   19904:	28026c16 	blt	r5,zero,1a2b8 <___svfiprintf_internal_r+0x128c>
   19908:	00bfdfc4 	movi	r2,-129
   1990c:	80a0703a 	and	r16,r16,r2
   19910:	a03fb31e 	bne	r20,zero,197e0 <_gp+0xffff36b4>
   19914:	00004606 	br	19a30 <___svfiprintf_internal_r+0xa04>
   19918:	9839883a 	mov	fp,r19
   1991c:	d8002515 	stw	zero,148(sp)
   19920:	1c3ff404 	addi	r16,r3,-48
   19924:	0009883a 	mov	r4,zero
   19928:	01400284 	movi	r5,10
   1992c:	00122c80 	call	122c8 <__mulsi3>
   19930:	e0c00007 	ldb	r3,0(fp)
   19934:	8089883a 	add	r4,r16,r2
   19938:	9cc00044 	addi	r19,r19,1
   1993c:	1c3ff404 	addi	r16,r3,-48
   19940:	9839883a 	mov	fp,r19
   19944:	a43ff82e 	bgeu	r20,r16,19928 <_gp+0xffff37fc>
   19948:	d9002515 	stw	r4,148(sp)
   1994c:	18bff804 	addi	r2,r3,-32
   19950:	90be052e 	bgeu	r18,r2,19168 <_gp+0xffff303c>
   19954:	8821883a 	mov	r16,r17
   19958:	dc402103 	ldbu	r17,132(sp)
   1995c:	b811883a 	mov	r8,r23
   19960:	8c403fcc 	andi	r17,r17,255
   19964:	88028d1e 	bne	r17,zero,1a39c <___svfiprintf_internal_r+0x1370>
   19968:	1800ea26 	beq	r3,zero,19d14 <___svfiprintf_internal_r+0xce8>
   1996c:	04800044 	movi	r18,1
   19970:	d8c01005 	stb	r3,64(sp)
   19974:	d8001d85 	stb	zero,118(sp)
   19978:	9029883a 	mov	r20,r18
   1997c:	dc401004 	addi	r17,sp,64
   19980:	003f1306 	br	195d0 <_gp+0xffff34a4>
   19984:	8c402014 	ori	r17,r17,128
   19988:	98c00007 	ldb	r3,0(r19)
   1998c:	003df306 	br	1915c <_gp+0xffff3030>
   19990:	98c00007 	ldb	r3,0(r19)
   19994:	01000a84 	movi	r4,42
   19998:	9f000044 	addi	fp,r19,1
   1999c:	19026326 	beq	r3,r4,1a32c <___svfiprintf_internal_r+0x1300>
   199a0:	1c3ff404 	addi	r16,r3,-48
   199a4:	0009883a 	mov	r4,zero
   199a8:	a4025636 	bltu	r20,r16,1a304 <___svfiprintf_internal_r+0x12d8>
   199ac:	01400284 	movi	r5,10
   199b0:	00122c80 	call	122c8 <__mulsi3>
   199b4:	e0c00007 	ldb	r3,0(fp)
   199b8:	1409883a 	add	r4,r2,r16
   199bc:	e4c00044 	addi	r19,fp,1
   199c0:	1c3ff404 	addi	r16,r3,-48
   199c4:	9839883a 	mov	fp,r19
   199c8:	a43ff82e 	bgeu	r20,r16,199ac <_gp+0xffff3880>
   199cc:	20020c16 	blt	r4,zero,1a200 <___svfiprintf_internal_r+0x11d4>
   199d0:	d9002015 	stw	r4,128(sp)
   199d4:	003de206 	br	19160 <_gp+0xffff3034>
   199d8:	8821883a 	mov	r16,r17
   199dc:	dc402103 	ldbu	r17,132(sp)
   199e0:	b811883a 	mov	r8,r23
   199e4:	8c403fcc 	andi	r17,r17,255
   199e8:	8802721e 	bne	r17,zero,1a3b4 <___svfiprintf_internal_r+0x1388>
   199ec:	84000414 	ori	r16,r16,16
   199f0:	8080080c 	andi	r2,r16,32
   199f4:	103e9f1e 	bne	r2,zero,19474 <_gp+0xffff3348>
   199f8:	8080040c 	andi	r2,r16,16
   199fc:	10015326 	beq	r2,zero,19f4c <___svfiprintf_internal_r+0xf20>
   19a00:	d8c02417 	ldw	r3,144(sp)
   19a04:	d9002017 	ldw	r4,128(sp)
   19a08:	d8001d85 	stb	zero,118(sp)
   19a0c:	18800104 	addi	r2,r3,4
   19a10:	1c800017 	ldw	r18,0(r3)
   19a14:	0029883a 	mov	r20,zero
   19a18:	20015516 	blt	r4,zero,19f70 <___svfiprintf_internal_r+0xf44>
   19a1c:	00ffdfc4 	movi	r3,-129
   19a20:	d8802415 	stw	r2,144(sp)
   19a24:	80e0703a 	and	r16,r16,r3
   19a28:	002b883a 	mov	r21,zero
   19a2c:	903e9e26 	beq	r18,zero,194a8 <_gp+0xffff337c>
   19a30:	00800244 	movi	r2,9
   19a34:	14bf6a36 	bltu	r2,r18,197e0 <_gp+0xffff36b4>
   19a38:	94800c04 	addi	r18,r18,48
   19a3c:	dc8019c5 	stb	r18,103(sp)
   19a40:	dd002c17 	ldw	r20,176(sp)
   19a44:	dc4019c4 	addi	r17,sp,103
   19a48:	003e9c06 	br	194bc <_gp+0xffff3390>
   19a4c:	8821883a 	mov	r16,r17
   19a50:	dc402103 	ldbu	r17,132(sp)
   19a54:	b811883a 	mov	r8,r23
   19a58:	8c403fcc 	andi	r17,r17,255
   19a5c:	8802571e 	bne	r17,zero,1a3bc <___svfiprintf_internal_r+0x1390>
   19a60:	84000414 	ori	r16,r16,16
   19a64:	8080080c 	andi	r2,r16,32
   19a68:	103ea91e 	bne	r2,zero,19510 <_gp+0xffff33e4>
   19a6c:	8080040c 	andi	r2,r16,16
   19a70:	10018026 	beq	r2,zero,1a074 <___svfiprintf_internal_r+0x1048>
   19a74:	d9402417 	ldw	r5,144(sp)
   19a78:	d8c02017 	ldw	r3,128(sp)
   19a7c:	d8001d85 	stb	zero,118(sp)
   19a80:	28800104 	addi	r2,r5,4
   19a84:	2c800017 	ldw	r18,0(r5)
   19a88:	0029883a 	mov	r20,zero
   19a8c:	18018216 	blt	r3,zero,1a098 <___svfiprintf_internal_r+0x106c>
   19a90:	00ffdfc4 	movi	r3,-129
   19a94:	d8802415 	stw	r2,144(sp)
   19a98:	80e0703a 	and	r16,r16,r3
   19a9c:	903ea81e 	bne	r18,zero,19540 <_gp+0xffff3414>
   19aa0:	d8802017 	ldw	r2,128(sp)
   19aa4:	002b883a 	mov	r21,zero
   19aa8:	1001f226 	beq	r2,zero,1a274 <___svfiprintf_internal_r+0x1248>
   19aac:	0025883a 	mov	r18,zero
   19ab0:	0029883a 	mov	r20,zero
   19ab4:	003ea306 	br	19544 <_gp+0xffff3418>
   19ab8:	d8c01c17 	ldw	r3,112(sp)
   19abc:	d8801b17 	ldw	r2,108(sp)
   19ac0:	d9001d87 	ldb	r4,118(sp)
   19ac4:	20000b26 	beq	r4,zero,19af4 <___svfiprintf_internal_r+0xac8>
   19ac8:	d9001d84 	addi	r4,sp,118
   19acc:	18c00044 	addi	r3,r3,1
   19ad0:	10800044 	addi	r2,r2,1
   19ad4:	41000015 	stw	r4,0(r8)
   19ad8:	01000044 	movi	r4,1
   19adc:	41000115 	stw	r4,4(r8)
   19ae0:	d8c01c15 	stw	r3,112(sp)
   19ae4:	d8801b15 	stw	r2,108(sp)
   19ae8:	010001c4 	movi	r4,7
   19aec:	2080f316 	blt	r4,r2,19ebc <___svfiprintf_internal_r+0xe90>
   19af0:	42000204 	addi	r8,r8,8
   19af4:	d9402117 	ldw	r5,132(sp)
   19af8:	28000b26 	beq	r5,zero,19b28 <___svfiprintf_internal_r+0xafc>
   19afc:	d9001d04 	addi	r4,sp,116
   19b00:	18c00084 	addi	r3,r3,2
   19b04:	10800044 	addi	r2,r2,1
   19b08:	41000015 	stw	r4,0(r8)
   19b0c:	01000084 	movi	r4,2
   19b10:	41000115 	stw	r4,4(r8)
   19b14:	d8c01c15 	stw	r3,112(sp)
   19b18:	d8801b15 	stw	r2,108(sp)
   19b1c:	010001c4 	movi	r4,7
   19b20:	2080ef16 	blt	r4,r2,19ee0 <___svfiprintf_internal_r+0xeb4>
   19b24:	42000204 	addi	r8,r8,8
   19b28:	d9402217 	ldw	r5,136(sp)
   19b2c:	01002004 	movi	r4,128
   19b30:	29008f26 	beq	r5,r4,19d70 <___svfiprintf_internal_r+0xd44>
   19b34:	d9002017 	ldw	r4,128(sp)
   19b38:	252fc83a 	sub	r23,r4,r20
   19b3c:	05c0310e 	bge	zero,r23,19c04 <___svfiprintf_internal_r+0xbd8>
   19b40:	07000404 	movi	fp,16
   19b44:	e5c17d0e 	bge	fp,r23,1a13c <___svfiprintf_internal_r+0x1110>
   19b48:	010000b4 	movhi	r4,2
   19b4c:	2135f604 	addi	r4,r4,-10280
   19b50:	dc002015 	stw	r16,128(sp)
   19b54:	dc402215 	stw	r17,136(sp)
   19b58:	d9002115 	stw	r4,132(sp)
   19b5c:	b823883a 	mov	r17,r23
   19b60:	054001c4 	movi	r21,7
   19b64:	982f883a 	mov	r23,r19
   19b68:	dc002717 	ldw	r16,156(sp)
   19b6c:	9027883a 	mov	r19,r18
   19b70:	dc802317 	ldw	r18,140(sp)
   19b74:	00000306 	br	19b84 <___svfiprintf_internal_r+0xb58>
   19b78:	8c7ffc04 	addi	r17,r17,-16
   19b7c:	42000204 	addi	r8,r8,8
   19b80:	e440110e 	bge	fp,r17,19bc8 <___svfiprintf_internal_r+0xb9c>
   19b84:	18c00404 	addi	r3,r3,16
   19b88:	10800044 	addi	r2,r2,1
   19b8c:	45800015 	stw	r22,0(r8)
   19b90:	47000115 	stw	fp,4(r8)
   19b94:	d8c01c15 	stw	r3,112(sp)
   19b98:	d8801b15 	stw	r2,108(sp)
   19b9c:	a8bff60e 	bge	r21,r2,19b78 <_gp+0xffff3a4c>
   19ba0:	d9801a04 	addi	r6,sp,104
   19ba4:	900b883a 	mov	r5,r18
   19ba8:	8009883a 	mov	r4,r16
   19bac:	0018e5c0 	call	18e5c <__ssprint_r>
   19bb0:	10005e1e 	bne	r2,zero,19d2c <___svfiprintf_internal_r+0xd00>
   19bb4:	8c7ffc04 	addi	r17,r17,-16
   19bb8:	d8c01c17 	ldw	r3,112(sp)
   19bbc:	d8801b17 	ldw	r2,108(sp)
   19bc0:	d811883a 	mov	r8,sp
   19bc4:	e47fef16 	blt	fp,r17,19b84 <_gp+0xffff3a58>
   19bc8:	9825883a 	mov	r18,r19
   19bcc:	dc002017 	ldw	r16,128(sp)
   19bd0:	b827883a 	mov	r19,r23
   19bd4:	882f883a 	mov	r23,r17
   19bd8:	dc402217 	ldw	r17,136(sp)
   19bdc:	d9402117 	ldw	r5,132(sp)
   19be0:	1dc7883a 	add	r3,r3,r23
   19be4:	10800044 	addi	r2,r2,1
   19be8:	41400015 	stw	r5,0(r8)
   19bec:	45c00115 	stw	r23,4(r8)
   19bf0:	d8c01c15 	stw	r3,112(sp)
   19bf4:	d8801b15 	stw	r2,108(sp)
   19bf8:	010001c4 	movi	r4,7
   19bfc:	2080a616 	blt	r4,r2,19e98 <___svfiprintf_internal_r+0xe6c>
   19c00:	42000204 	addi	r8,r8,8
   19c04:	a0c7883a 	add	r3,r20,r3
   19c08:	10800044 	addi	r2,r2,1
   19c0c:	44400015 	stw	r17,0(r8)
   19c10:	45000115 	stw	r20,4(r8)
   19c14:	d8c01c15 	stw	r3,112(sp)
   19c18:	d8801b15 	stw	r2,108(sp)
   19c1c:	010001c4 	movi	r4,7
   19c20:	20808816 	blt	r4,r2,19e44 <___svfiprintf_internal_r+0xe18>
   19c24:	42000204 	addi	r8,r8,8
   19c28:	8400010c 	andi	r16,r16,4
   19c2c:	80002c26 	beq	r16,zero,19ce0 <___svfiprintf_internal_r+0xcb4>
   19c30:	d8802517 	ldw	r2,148(sp)
   19c34:	14a1c83a 	sub	r16,r2,r18
   19c38:	0400290e 	bge	zero,r16,19ce0 <___svfiprintf_internal_r+0xcb4>
   19c3c:	04400404 	movi	r17,16
   19c40:	d8801b17 	ldw	r2,108(sp)
   19c44:	8c01a70e 	bge	r17,r16,1a2e4 <___svfiprintf_internal_r+0x12b8>
   19c48:	014000b4 	movhi	r5,2
   19c4c:	2975fa04 	addi	r5,r5,-10264
   19c50:	d9402815 	stw	r5,160(sp)
   19c54:	050001c4 	movi	r20,7
   19c58:	dd402717 	ldw	r21,156(sp)
   19c5c:	ddc02317 	ldw	r23,140(sp)
   19c60:	00000306 	br	19c70 <___svfiprintf_internal_r+0xc44>
   19c64:	843ffc04 	addi	r16,r16,-16
   19c68:	42000204 	addi	r8,r8,8
   19c6c:	8c00130e 	bge	r17,r16,19cbc <___svfiprintf_internal_r+0xc90>
   19c70:	010000b4 	movhi	r4,2
   19c74:	18c00404 	addi	r3,r3,16
   19c78:	10800044 	addi	r2,r2,1
   19c7c:	2135fa04 	addi	r4,r4,-10264
   19c80:	41000015 	stw	r4,0(r8)
   19c84:	44400115 	stw	r17,4(r8)
   19c88:	d8c01c15 	stw	r3,112(sp)
   19c8c:	d8801b15 	stw	r2,108(sp)
   19c90:	a0bff40e 	bge	r20,r2,19c64 <_gp+0xffff3b38>
   19c94:	d9801a04 	addi	r6,sp,104
   19c98:	b80b883a 	mov	r5,r23
   19c9c:	a809883a 	mov	r4,r21
   19ca0:	0018e5c0 	call	18e5c <__ssprint_r>
   19ca4:	1000211e 	bne	r2,zero,19d2c <___svfiprintf_internal_r+0xd00>
   19ca8:	843ffc04 	addi	r16,r16,-16
   19cac:	d8c01c17 	ldw	r3,112(sp)
   19cb0:	d8801b17 	ldw	r2,108(sp)
   19cb4:	d811883a 	mov	r8,sp
   19cb8:	8c3fed16 	blt	r17,r16,19c70 <_gp+0xffff3b44>
   19cbc:	d9402817 	ldw	r5,160(sp)
   19cc0:	1c07883a 	add	r3,r3,r16
   19cc4:	10800044 	addi	r2,r2,1
   19cc8:	41400015 	stw	r5,0(r8)
   19ccc:	44000115 	stw	r16,4(r8)
   19cd0:	d8c01c15 	stw	r3,112(sp)
   19cd4:	d8801b15 	stw	r2,108(sp)
   19cd8:	010001c4 	movi	r4,7
   19cdc:	2080b516 	blt	r4,r2,19fb4 <___svfiprintf_internal_r+0xf88>
   19ce0:	d8802517 	ldw	r2,148(sp)
   19ce4:	1480010e 	bge	r2,r18,19cec <___svfiprintf_internal_r+0xcc0>
   19ce8:	9005883a 	mov	r2,r18
   19cec:	d9002617 	ldw	r4,152(sp)
   19cf0:	2089883a 	add	r4,r4,r2
   19cf4:	d9002615 	stw	r4,152(sp)
   19cf8:	18005a1e 	bne	r3,zero,19e64 <___svfiprintf_internal_r+0xe38>
   19cfc:	98800007 	ldb	r2,0(r19)
   19d00:	d8001b15 	stw	zero,108(sp)
   19d04:	d811883a 	mov	r8,sp
   19d08:	103cec1e 	bne	r2,zero,190bc <_gp+0xffff2f90>
   19d0c:	9825883a 	mov	r18,r19
   19d10:	003d0206 	br	1911c <_gp+0xffff2ff0>
   19d14:	d8801c17 	ldw	r2,112(sp)
   19d18:	10000426 	beq	r2,zero,19d2c <___svfiprintf_internal_r+0xd00>
   19d1c:	d9402317 	ldw	r5,140(sp)
   19d20:	d9002717 	ldw	r4,156(sp)
   19d24:	d9801a04 	addi	r6,sp,104
   19d28:	0018e5c0 	call	18e5c <__ssprint_r>
   19d2c:	d9402317 	ldw	r5,140(sp)
   19d30:	d8802617 	ldw	r2,152(sp)
   19d34:	28c0030b 	ldhu	r3,12(r5)
   19d38:	18c0100c 	andi	r3,r3,64
   19d3c:	18015c1e 	bne	r3,zero,1a2b0 <___svfiprintf_internal_r+0x1284>
   19d40:	dfc03717 	ldw	ra,220(sp)
   19d44:	df003617 	ldw	fp,216(sp)
   19d48:	ddc03517 	ldw	r23,212(sp)
   19d4c:	dd803417 	ldw	r22,208(sp)
   19d50:	dd403317 	ldw	r21,204(sp)
   19d54:	dd003217 	ldw	r20,200(sp)
   19d58:	dcc03117 	ldw	r19,196(sp)
   19d5c:	dc803017 	ldw	r18,192(sp)
   19d60:	dc402f17 	ldw	r17,188(sp)
   19d64:	dc002e17 	ldw	r16,184(sp)
   19d68:	dec03804 	addi	sp,sp,224
   19d6c:	f800283a 	ret
   19d70:	d9002517 	ldw	r4,148(sp)
   19d74:	24afc83a 	sub	r23,r4,r18
   19d78:	05ff6e0e 	bge	zero,r23,19b34 <_gp+0xffff3a08>
   19d7c:	07000404 	movi	fp,16
   19d80:	e5c15c0e 	bge	fp,r23,1a2f4 <___svfiprintf_internal_r+0x12c8>
   19d84:	010000b4 	movhi	r4,2
   19d88:	2135f604 	addi	r4,r4,-10280
   19d8c:	dc002215 	stw	r16,136(sp)
   19d90:	dc402815 	stw	r17,160(sp)
   19d94:	d9002115 	stw	r4,132(sp)
   19d98:	b823883a 	mov	r17,r23
   19d9c:	054001c4 	movi	r21,7
   19da0:	982f883a 	mov	r23,r19
   19da4:	dc002717 	ldw	r16,156(sp)
   19da8:	9027883a 	mov	r19,r18
   19dac:	dc802317 	ldw	r18,140(sp)
   19db0:	00000306 	br	19dc0 <___svfiprintf_internal_r+0xd94>
   19db4:	8c7ffc04 	addi	r17,r17,-16
   19db8:	42000204 	addi	r8,r8,8
   19dbc:	e440110e 	bge	fp,r17,19e04 <___svfiprintf_internal_r+0xdd8>
   19dc0:	18c00404 	addi	r3,r3,16
   19dc4:	10800044 	addi	r2,r2,1
   19dc8:	45800015 	stw	r22,0(r8)
   19dcc:	47000115 	stw	fp,4(r8)
   19dd0:	d8c01c15 	stw	r3,112(sp)
   19dd4:	d8801b15 	stw	r2,108(sp)
   19dd8:	a8bff60e 	bge	r21,r2,19db4 <_gp+0xffff3c88>
   19ddc:	d9801a04 	addi	r6,sp,104
   19de0:	900b883a 	mov	r5,r18
   19de4:	8009883a 	mov	r4,r16
   19de8:	0018e5c0 	call	18e5c <__ssprint_r>
   19dec:	103fcf1e 	bne	r2,zero,19d2c <_gp+0xffff3c00>
   19df0:	8c7ffc04 	addi	r17,r17,-16
   19df4:	d8c01c17 	ldw	r3,112(sp)
   19df8:	d8801b17 	ldw	r2,108(sp)
   19dfc:	d811883a 	mov	r8,sp
   19e00:	e47fef16 	blt	fp,r17,19dc0 <_gp+0xffff3c94>
   19e04:	9825883a 	mov	r18,r19
   19e08:	dc002217 	ldw	r16,136(sp)
   19e0c:	b827883a 	mov	r19,r23
   19e10:	882f883a 	mov	r23,r17
   19e14:	dc402817 	ldw	r17,160(sp)
   19e18:	d9402117 	ldw	r5,132(sp)
   19e1c:	1dc7883a 	add	r3,r3,r23
   19e20:	10800044 	addi	r2,r2,1
   19e24:	41400015 	stw	r5,0(r8)
   19e28:	45c00115 	stw	r23,4(r8)
   19e2c:	d8c01c15 	stw	r3,112(sp)
   19e30:	d8801b15 	stw	r2,108(sp)
   19e34:	010001c4 	movi	r4,7
   19e38:	2080b716 	blt	r4,r2,1a118 <___svfiprintf_internal_r+0x10ec>
   19e3c:	42000204 	addi	r8,r8,8
   19e40:	003f3c06 	br	19b34 <_gp+0xffff3a08>
   19e44:	d9402317 	ldw	r5,140(sp)
   19e48:	d9002717 	ldw	r4,156(sp)
   19e4c:	d9801a04 	addi	r6,sp,104
   19e50:	0018e5c0 	call	18e5c <__ssprint_r>
   19e54:	103fb51e 	bne	r2,zero,19d2c <_gp+0xffff3c00>
   19e58:	d8c01c17 	ldw	r3,112(sp)
   19e5c:	d811883a 	mov	r8,sp
   19e60:	003f7106 	br	19c28 <_gp+0xffff3afc>
   19e64:	d9402317 	ldw	r5,140(sp)
   19e68:	d9002717 	ldw	r4,156(sp)
   19e6c:	d9801a04 	addi	r6,sp,104
   19e70:	0018e5c0 	call	18e5c <__ssprint_r>
   19e74:	103fa126 	beq	r2,zero,19cfc <_gp+0xffff3bd0>
   19e78:	003fac06 	br	19d2c <_gp+0xffff3c00>
   19e7c:	d9402317 	ldw	r5,140(sp)
   19e80:	d9002717 	ldw	r4,156(sp)
   19e84:	d9801a04 	addi	r6,sp,104
   19e88:	0018e5c0 	call	18e5c <__ssprint_r>
   19e8c:	103fa71e 	bne	r2,zero,19d2c <_gp+0xffff3c00>
   19e90:	d811883a 	mov	r8,sp
   19e94:	003c9e06 	br	19110 <_gp+0xffff2fe4>
   19e98:	d9402317 	ldw	r5,140(sp)
   19e9c:	d9002717 	ldw	r4,156(sp)
   19ea0:	d9801a04 	addi	r6,sp,104
   19ea4:	0018e5c0 	call	18e5c <__ssprint_r>
   19ea8:	103fa01e 	bne	r2,zero,19d2c <_gp+0xffff3c00>
   19eac:	d8c01c17 	ldw	r3,112(sp)
   19eb0:	d8801b17 	ldw	r2,108(sp)
   19eb4:	d811883a 	mov	r8,sp
   19eb8:	003f5206 	br	19c04 <_gp+0xffff3ad8>
   19ebc:	d9402317 	ldw	r5,140(sp)
   19ec0:	d9002717 	ldw	r4,156(sp)
   19ec4:	d9801a04 	addi	r6,sp,104
   19ec8:	0018e5c0 	call	18e5c <__ssprint_r>
   19ecc:	103f971e 	bne	r2,zero,19d2c <_gp+0xffff3c00>
   19ed0:	d8c01c17 	ldw	r3,112(sp)
   19ed4:	d8801b17 	ldw	r2,108(sp)
   19ed8:	d811883a 	mov	r8,sp
   19edc:	003f0506 	br	19af4 <_gp+0xffff39c8>
   19ee0:	d9402317 	ldw	r5,140(sp)
   19ee4:	d9002717 	ldw	r4,156(sp)
   19ee8:	d9801a04 	addi	r6,sp,104
   19eec:	0018e5c0 	call	18e5c <__ssprint_r>
   19ef0:	103f8e1e 	bne	r2,zero,19d2c <_gp+0xffff3c00>
   19ef4:	d8c01c17 	ldw	r3,112(sp)
   19ef8:	d8801b17 	ldw	r2,108(sp)
   19efc:	d811883a 	mov	r8,sp
   19f00:	003f0906 	br	19b28 <_gp+0xffff39fc>
   19f04:	d9402017 	ldw	r5,128(sp)
   19f08:	d8001d85 	stb	zero,118(sp)
   19f0c:	28007716 	blt	r5,zero,1a0ec <___svfiprintf_internal_r+0x10c0>
   19f10:	00ffdfc4 	movi	r3,-129
   19f14:	9504b03a 	or	r2,r18,r20
   19f18:	80e0703a 	and	r16,r16,r3
   19f1c:	103d3926 	beq	r2,zero,19404 <_gp+0xffff32d8>
   19f20:	002b883a 	mov	r21,zero
   19f24:	003d3c06 	br	19418 <_gp+0xffff32ec>
   19f28:	d9402317 	ldw	r5,140(sp)
   19f2c:	d9002717 	ldw	r4,156(sp)
   19f30:	d9801a04 	addi	r6,sp,104
   19f34:	0018e5c0 	call	18e5c <__ssprint_r>
   19f38:	103f7c1e 	bne	r2,zero,19d2c <_gp+0xffff3c00>
   19f3c:	d8c01c17 	ldw	r3,112(sp)
   19f40:	d8801b17 	ldw	r2,108(sp)
   19f44:	d811883a 	mov	r8,sp
   19f48:	003edd06 	br	19ac0 <_gp+0xffff3994>
   19f4c:	8080100c 	andi	r2,r16,64
   19f50:	d8001d85 	stb	zero,118(sp)
   19f54:	10008426 	beq	r2,zero,1a168 <___svfiprintf_internal_r+0x113c>
   19f58:	d9402417 	ldw	r5,144(sp)
   19f5c:	d8c02017 	ldw	r3,128(sp)
   19f60:	0029883a 	mov	r20,zero
   19f64:	28800104 	addi	r2,r5,4
   19f68:	2c80000b 	ldhu	r18,0(r5)
   19f6c:	183eab0e 	bge	r3,zero,19a1c <_gp+0xffff38f0>
   19f70:	d8802415 	stw	r2,144(sp)
   19f74:	002b883a 	mov	r21,zero
   19f78:	9504b03a 	or	r2,r18,r20
   19f7c:	103e171e 	bne	r2,zero,197dc <_gp+0xffff36b0>
   19f80:	00800044 	movi	r2,1
   19f84:	10803fcc 	andi	r2,r2,255
   19f88:	00c00044 	movi	r3,1
   19f8c:	10c05c26 	beq	r2,r3,1a100 <___svfiprintf_internal_r+0x10d4>
   19f90:	00c00084 	movi	r3,2
   19f94:	10fd1e26 	beq	r2,r3,19410 <_gp+0xffff32e4>
   19f98:	003ec406 	br	19aac <_gp+0xffff3980>
   19f9c:	d9401e17 	ldw	r5,120(sp)
   19fa0:	2c69c83a 	sub	r20,r5,r17
   19fa4:	003d4506 	br	194bc <_gp+0xffff3390>
   19fa8:	d8802415 	stw	r2,144(sp)
   19fac:	98c00007 	ldb	r3,0(r19)
   19fb0:	003c6a06 	br	1915c <_gp+0xffff3030>
   19fb4:	d9402317 	ldw	r5,140(sp)
   19fb8:	d9002717 	ldw	r4,156(sp)
   19fbc:	d9801a04 	addi	r6,sp,104
   19fc0:	0018e5c0 	call	18e5c <__ssprint_r>
   19fc4:	103f591e 	bne	r2,zero,19d2c <_gp+0xffff3c00>
   19fc8:	d8c01c17 	ldw	r3,112(sp)
   19fcc:	003f4406 	br	19ce0 <_gp+0xffff3bb4>
   19fd0:	014000b4 	movhi	r5,2
   19fd4:	29759604 	addi	r5,r5,-10664
   19fd8:	d9402915 	stw	r5,164(sp)
   19fdc:	003d0906 	br	19404 <_gp+0xffff32d8>
   19fe0:	d8c02417 	ldw	r3,144(sp)
   19fe4:	d9002617 	ldw	r4,152(sp)
   19fe8:	d9402417 	ldw	r5,144(sp)
   19fec:	18800017 	ldw	r2,0(r3)
   19ff0:	2007d7fa 	srai	r3,r4,31
   19ff4:	29400104 	addi	r5,r5,4
   19ff8:	d9402415 	stw	r5,144(sp)
   19ffc:	11000015 	stw	r4,0(r2)
   1a000:	10c00115 	stw	r3,4(r2)
   1a004:	003c2b06 	br	190b4 <_gp+0xffff2f88>
   1a008:	d8c01d45 	stb	r3,117(sp)
   1a00c:	d8c02017 	ldw	r3,128(sp)
   1a010:	00800c04 	movi	r2,48
   1a014:	d8801d05 	stb	r2,116(sp)
   1a018:	d8001d85 	stb	zero,118(sp)
   1a01c:	80800094 	ori	r2,r16,2
   1a020:	1800ac16 	blt	r3,zero,1a2d4 <___svfiprintf_internal_r+0x12a8>
   1a024:	00bfdfc4 	movi	r2,-129
   1a028:	80a0703a 	and	r16,r16,r2
   1a02c:	84000094 	ori	r16,r16,2
   1a030:	002b883a 	mov	r21,zero
   1a034:	003cf806 	br	19418 <_gp+0xffff32ec>
   1a038:	98c00007 	ldb	r3,0(r19)
   1a03c:	003c4706 	br	1915c <_gp+0xffff3030>
   1a040:	d9402417 	ldw	r5,144(sp)
   1a044:	2c800017 	ldw	r18,0(r5)
   1a048:	29400104 	addi	r5,r5,4
   1a04c:	d9402415 	stw	r5,144(sp)
   1a050:	9029d7fa 	srai	r20,r18,31
   1a054:	a005883a 	mov	r2,r20
   1a058:	003dd806 	br	197bc <_gp+0xffff3690>
   1a05c:	d9402417 	ldw	r5,144(sp)
   1a060:	0029883a 	mov	r20,zero
   1a064:	2c800017 	ldw	r18,0(r5)
   1a068:	29400104 	addi	r5,r5,4
   1a06c:	d9402415 	stw	r5,144(sp)
   1a070:	003cdb06 	br	193e0 <_gp+0xffff32b4>
   1a074:	8080100c 	andi	r2,r16,64
   1a078:	d8001d85 	stb	zero,118(sp)
   1a07c:	10003326 	beq	r2,zero,1a14c <___svfiprintf_internal_r+0x1120>
   1a080:	d9002417 	ldw	r4,144(sp)
   1a084:	d9402017 	ldw	r5,128(sp)
   1a088:	0029883a 	mov	r20,zero
   1a08c:	20800104 	addi	r2,r4,4
   1a090:	2480000b 	ldhu	r18,0(r4)
   1a094:	283e7e0e 	bge	r5,zero,19a90 <_gp+0xffff3964>
   1a098:	9506b03a 	or	r3,r18,r20
   1a09c:	d8802415 	stw	r2,144(sp)
   1a0a0:	183d271e 	bne	r3,zero,19540 <_gp+0xffff3414>
   1a0a4:	002b883a 	mov	r21,zero
   1a0a8:	0005883a 	mov	r2,zero
   1a0ac:	003fb506 	br	19f84 <_gp+0xffff3e58>
   1a0b0:	98c00043 	ldbu	r3,1(r19)
   1a0b4:	8c400814 	ori	r17,r17,32
   1a0b8:	9cc00044 	addi	r19,r19,1
   1a0bc:	18c03fcc 	andi	r3,r3,255
   1a0c0:	18c0201c 	xori	r3,r3,128
   1a0c4:	18ffe004 	addi	r3,r3,-128
   1a0c8:	003c2406 	br	1915c <_gp+0xffff3030>
   1a0cc:	d8c02415 	stw	r3,144(sp)
   1a0d0:	002b883a 	mov	r21,zero
   1a0d4:	003fa806 	br	19f78 <_gp+0xffff3e4c>
   1a0d8:	010000b4 	movhi	r4,2
   1a0dc:	21359604 	addi	r4,r4,-10664
   1a0e0:	d9002915 	stw	r4,164(sp)
   1a0e4:	d8c02415 	stw	r3,144(sp)
   1a0e8:	1021883a 	mov	r16,r2
   1a0ec:	9504b03a 	or	r2,r18,r20
   1a0f0:	103f8b1e 	bne	r2,zero,19f20 <_gp+0xffff3df4>
   1a0f4:	002b883a 	mov	r21,zero
   1a0f8:	00800084 	movi	r2,2
   1a0fc:	003fa106 	br	19f84 <_gp+0xffff3e58>
   1a100:	0025883a 	mov	r18,zero
   1a104:	94800c04 	addi	r18,r18,48
   1a108:	dc8019c5 	stb	r18,103(sp)
   1a10c:	dd002c17 	ldw	r20,176(sp)
   1a110:	dc4019c4 	addi	r17,sp,103
   1a114:	003ce906 	br	194bc <_gp+0xffff3390>
   1a118:	d9402317 	ldw	r5,140(sp)
   1a11c:	d9002717 	ldw	r4,156(sp)
   1a120:	d9801a04 	addi	r6,sp,104
   1a124:	0018e5c0 	call	18e5c <__ssprint_r>
   1a128:	103f001e 	bne	r2,zero,19d2c <_gp+0xffff3c00>
   1a12c:	d8c01c17 	ldw	r3,112(sp)
   1a130:	d8801b17 	ldw	r2,108(sp)
   1a134:	d811883a 	mov	r8,sp
   1a138:	003e7e06 	br	19b34 <_gp+0xffff3a08>
   1a13c:	014000b4 	movhi	r5,2
   1a140:	2975f604 	addi	r5,r5,-10280
   1a144:	d9402115 	stw	r5,132(sp)
   1a148:	003ea406 	br	19bdc <_gp+0xffff3ab0>
   1a14c:	d8c02417 	ldw	r3,144(sp)
   1a150:	d9002017 	ldw	r4,128(sp)
   1a154:	0029883a 	mov	r20,zero
   1a158:	18800104 	addi	r2,r3,4
   1a15c:	1c800017 	ldw	r18,0(r3)
   1a160:	203e4b0e 	bge	r4,zero,19a90 <_gp+0xffff3964>
   1a164:	003fcc06 	br	1a098 <_gp+0xffff3f6c>
   1a168:	d9002417 	ldw	r4,144(sp)
   1a16c:	d9402017 	ldw	r5,128(sp)
   1a170:	0029883a 	mov	r20,zero
   1a174:	20800104 	addi	r2,r4,4
   1a178:	24800017 	ldw	r18,0(r4)
   1a17c:	283e270e 	bge	r5,zero,19a1c <_gp+0xffff38f0>
   1a180:	003f7b06 	br	19f70 <_gp+0xffff3e44>
   1a184:	8400100c 	andi	r16,r16,64
   1a188:	80003326 	beq	r16,zero,1a258 <___svfiprintf_internal_r+0x122c>
   1a18c:	d9402417 	ldw	r5,144(sp)
   1a190:	d8c02617 	ldw	r3,152(sp)
   1a194:	28800017 	ldw	r2,0(r5)
   1a198:	29400104 	addi	r5,r5,4
   1a19c:	d9402415 	stw	r5,144(sp)
   1a1a0:	10c0000d 	sth	r3,0(r2)
   1a1a4:	003bc306 	br	190b4 <_gp+0xffff2f88>
   1a1a8:	d9002417 	ldw	r4,144(sp)
   1a1ac:	0029883a 	mov	r20,zero
   1a1b0:	24800017 	ldw	r18,0(r4)
   1a1b4:	21000104 	addi	r4,r4,4
   1a1b8:	d9002415 	stw	r4,144(sp)
   1a1bc:	003c8806 	br	193e0 <_gp+0xffff32b4>
   1a1c0:	d8c02417 	ldw	r3,144(sp)
   1a1c4:	1c800017 	ldw	r18,0(r3)
   1a1c8:	18c00104 	addi	r3,r3,4
   1a1cc:	d8c02415 	stw	r3,144(sp)
   1a1d0:	9029d7fa 	srai	r20,r18,31
   1a1d4:	a005883a 	mov	r2,r20
   1a1d8:	003d7806 	br	197bc <_gp+0xffff3690>
   1a1dc:	8809883a 	mov	r4,r17
   1a1e0:	da002d15 	stw	r8,180(sp)
   1a1e4:	0018dc40 	call	18dc4 <strlen>
   1a1e8:	1029883a 	mov	r20,r2
   1a1ec:	dd401d83 	ldbu	r21,118(sp)
   1a1f0:	ddc02415 	stw	r23,144(sp)
   1a1f4:	d8002015 	stw	zero,128(sp)
   1a1f8:	da002d17 	ldw	r8,180(sp)
   1a1fc:	003caf06 	br	194bc <_gp+0xffff3390>
   1a200:	013fffc4 	movi	r4,-1
   1a204:	003df206 	br	199d0 <_gp+0xffff38a4>
   1a208:	dd002017 	ldw	r20,128(sp)
   1a20c:	00800184 	movi	r2,6
   1a210:	1500012e 	bgeu	r2,r20,1a218 <___svfiprintf_internal_r+0x11ec>
   1a214:	1029883a 	mov	r20,r2
   1a218:	a025883a 	mov	r18,r20
   1a21c:	a0004116 	blt	r20,zero,1a324 <___svfiprintf_internal_r+0x12f8>
   1a220:	044000b4 	movhi	r17,2
   1a224:	ddc02415 	stw	r23,144(sp)
   1a228:	8c759b04 	addi	r17,r17,-10644
   1a22c:	003ce806 	br	195d0 <_gp+0xffff34a4>
   1a230:	04001004 	movi	r16,64
   1a234:	800b883a 	mov	r5,r16
   1a238:	00123f40 	call	123f4 <_malloc_r>
   1a23c:	d8c02317 	ldw	r3,140(sp)
   1a240:	18800015 	stw	r2,0(r3)
   1a244:	18800415 	stw	r2,16(r3)
   1a248:	10004d26 	beq	r2,zero,1a380 <___svfiprintf_internal_r+0x1354>
   1a24c:	d9402317 	ldw	r5,140(sp)
   1a250:	2c000515 	stw	r16,20(r5)
   1a254:	003b8906 	br	1907c <_gp+0xffff2f50>
   1a258:	d9002417 	ldw	r4,144(sp)
   1a25c:	d9402617 	ldw	r5,152(sp)
   1a260:	20800017 	ldw	r2,0(r4)
   1a264:	21000104 	addi	r4,r4,4
   1a268:	d9002415 	stw	r4,144(sp)
   1a26c:	11400015 	stw	r5,0(r2)
   1a270:	003b9006 	br	190b4 <_gp+0xffff2f88>
   1a274:	8080004c 	andi	r2,r16,1
   1a278:	002b883a 	mov	r21,zero
   1a27c:	10000526 	beq	r2,zero,1a294 <___svfiprintf_internal_r+0x1268>
   1a280:	00800c04 	movi	r2,48
   1a284:	d88019c5 	stb	r2,103(sp)
   1a288:	dd002c17 	ldw	r20,176(sp)
   1a28c:	dc4019c4 	addi	r17,sp,103
   1a290:	003c8a06 	br	194bc <_gp+0xffff3390>
   1a294:	0029883a 	mov	r20,zero
   1a298:	dc401a04 	addi	r17,sp,104
   1a29c:	003c8706 	br	194bc <_gp+0xffff3390>
   1a2a0:	014000b4 	movhi	r5,2
   1a2a4:	2975fa04 	addi	r5,r5,-10264
   1a2a8:	d9402815 	stw	r5,160(sp)
   1a2ac:	003cff06 	br	196ac <_gp+0xffff3580>
   1a2b0:	00bfffc4 	movi	r2,-1
   1a2b4:	003ea206 	br	19d40 <_gp+0xffff3c14>
   1a2b8:	00800044 	movi	r2,1
   1a2bc:	10803fcc 	andi	r2,r2,255
   1a2c0:	00c00044 	movi	r3,1
   1a2c4:	10fd4526 	beq	r2,r3,197dc <_gp+0xffff36b0>
   1a2c8:	00c00084 	movi	r3,2
   1a2cc:	10fc5226 	beq	r2,r3,19418 <_gp+0xffff32ec>
   1a2d0:	003c9c06 	br	19544 <_gp+0xffff3418>
   1a2d4:	1021883a 	mov	r16,r2
   1a2d8:	002b883a 	mov	r21,zero
   1a2dc:	00800084 	movi	r2,2
   1a2e0:	003ff606 	br	1a2bc <_gp+0xffff4190>
   1a2e4:	010000b4 	movhi	r4,2
   1a2e8:	2135fa04 	addi	r4,r4,-10264
   1a2ec:	d9002815 	stw	r4,160(sp)
   1a2f0:	003e7206 	br	19cbc <_gp+0xffff3b90>
   1a2f4:	014000b4 	movhi	r5,2
   1a2f8:	2975f604 	addi	r5,r5,-10280
   1a2fc:	d9402115 	stw	r5,132(sp)
   1a300:	003ec506 	br	19e18 <_gp+0xffff3cec>
   1a304:	e027883a 	mov	r19,fp
   1a308:	d8002015 	stw	zero,128(sp)
   1a30c:	003b9406 	br	19160 <_gp+0xffff3034>
   1a310:	dd002017 	ldw	r20,128(sp)
   1a314:	dd401d83 	ldbu	r21,118(sp)
   1a318:	ddc02415 	stw	r23,144(sp)
   1a31c:	d8002015 	stw	zero,128(sp)
   1a320:	003c6606 	br	194bc <_gp+0xffff3390>
   1a324:	0025883a 	mov	r18,zero
   1a328:	003fbd06 	br	1a220 <_gp+0xffff40f4>
   1a32c:	d9402417 	ldw	r5,144(sp)
   1a330:	d8c02417 	ldw	r3,144(sp)
   1a334:	29400017 	ldw	r5,0(r5)
   1a338:	19000104 	addi	r4,r3,4
   1a33c:	d9002415 	stw	r4,144(sp)
   1a340:	d9402015 	stw	r5,128(sp)
   1a344:	98c00043 	ldbu	r3,1(r19)
   1a348:	e027883a 	mov	r19,fp
   1a34c:	283f5b0e 	bge	r5,zero,1a0bc <_gp+0xffff3f90>
   1a350:	18c03fcc 	andi	r3,r3,255
   1a354:	013fffc4 	movi	r4,-1
   1a358:	18c0201c 	xori	r3,r3,128
   1a35c:	d9002015 	stw	r4,128(sp)
   1a360:	18ffe004 	addi	r3,r3,-128
   1a364:	003b7d06 	br	1915c <_gp+0xffff3030>
   1a368:	dd401d85 	stb	r21,118(sp)
   1a36c:	003cf306 	br	1973c <_gp+0xffff3610>
   1a370:	dd401d85 	stb	r21,118(sp)
   1a374:	003d4e06 	br	198b0 <_gp+0xffff3784>
   1a378:	dd401d85 	stb	r21,118(sp)
   1a37c:	003c0e06 	br	193b8 <_gp+0xffff328c>
   1a380:	d9002717 	ldw	r4,156(sp)
   1a384:	00800304 	movi	r2,12
   1a388:	20800015 	stw	r2,0(r4)
   1a38c:	00bfffc4 	movi	r2,-1
   1a390:	003e6b06 	br	19d40 <_gp+0xffff3c14>
   1a394:	dd401d85 	stb	r21,118(sp)
   1a398:	003d0006 	br	1979c <_gp+0xffff3670>
   1a39c:	dd401d85 	stb	r21,118(sp)
   1a3a0:	003d7106 	br	19968 <_gp+0xffff383c>
   1a3a4:	dd401d85 	stb	r21,118(sp)
   1a3a8:	003c5706 	br	19508 <_gp+0xffff33dc>
   1a3ac:	dd401d85 	stb	r21,118(sp)
   1a3b0:	003c2e06 	br	1946c <_gp+0xffff3340>
   1a3b4:	dd401d85 	stb	r21,118(sp)
   1a3b8:	003d8c06 	br	199ec <_gp+0xffff38c0>
   1a3bc:	dd401d85 	stb	r21,118(sp)
   1a3c0:	003da706 	br	19a60 <_gp+0xffff3934>
   1a3c4:	dd401d85 	stb	r21,118(sp)
   1a3c8:	003cc806 	br	196ec <_gp+0xffff35c0>

0001a3cc <_calloc_r>:
   1a3cc:	defffe04 	addi	sp,sp,-8
   1a3d0:	2805883a 	mov	r2,r5
   1a3d4:	dc000015 	stw	r16,0(sp)
   1a3d8:	300b883a 	mov	r5,r6
   1a3dc:	2021883a 	mov	r16,r4
   1a3e0:	1009883a 	mov	r4,r2
   1a3e4:	dfc00115 	stw	ra,4(sp)
   1a3e8:	00122c80 	call	122c8 <__mulsi3>
   1a3ec:	100b883a 	mov	r5,r2
   1a3f0:	8009883a 	mov	r4,r16
   1a3f4:	00123f40 	call	123f4 <_malloc_r>
   1a3f8:	10002926 	beq	r2,zero,1a4a0 <_calloc_r+0xd4>
   1a3fc:	11bfff17 	ldw	r6,-4(r2)
   1a400:	1021883a 	mov	r16,r2
   1a404:	00bfff04 	movi	r2,-4
   1a408:	308c703a 	and	r6,r6,r2
   1a40c:	00c00904 	movi	r3,36
   1a410:	308d883a 	add	r6,r6,r2
   1a414:	19801636 	bltu	r3,r6,1a470 <_calloc_r+0xa4>
   1a418:	008004c4 	movi	r2,19
   1a41c:	11800b2e 	bgeu	r2,r6,1a44c <_calloc_r+0x80>
   1a420:	80000015 	stw	zero,0(r16)
   1a424:	80000115 	stw	zero,4(r16)
   1a428:	008006c4 	movi	r2,27
   1a42c:	11801a2e 	bgeu	r2,r6,1a498 <_calloc_r+0xcc>
   1a430:	80000215 	stw	zero,8(r16)
   1a434:	80000315 	stw	zero,12(r16)
   1a438:	30c0151e 	bne	r6,r3,1a490 <_calloc_r+0xc4>
   1a43c:	80000415 	stw	zero,16(r16)
   1a440:	80800604 	addi	r2,r16,24
   1a444:	80000515 	stw	zero,20(r16)
   1a448:	00000106 	br	1a450 <_calloc_r+0x84>
   1a44c:	8005883a 	mov	r2,r16
   1a450:	10000015 	stw	zero,0(r2)
   1a454:	10000115 	stw	zero,4(r2)
   1a458:	10000215 	stw	zero,8(r2)
   1a45c:	8005883a 	mov	r2,r16
   1a460:	dfc00117 	ldw	ra,4(sp)
   1a464:	dc000017 	ldw	r16,0(sp)
   1a468:	dec00204 	addi	sp,sp,8
   1a46c:	f800283a 	ret
   1a470:	000b883a 	mov	r5,zero
   1a474:	8009883a 	mov	r4,r16
   1a478:	0012c000 	call	12c00 <memset>
   1a47c:	8005883a 	mov	r2,r16
   1a480:	dfc00117 	ldw	ra,4(sp)
   1a484:	dc000017 	ldw	r16,0(sp)
   1a488:	dec00204 	addi	sp,sp,8
   1a48c:	f800283a 	ret
   1a490:	80800404 	addi	r2,r16,16
   1a494:	003fee06 	br	1a450 <_gp+0xffff4324>
   1a498:	80800204 	addi	r2,r16,8
   1a49c:	003fec06 	br	1a450 <_gp+0xffff4324>
   1a4a0:	0005883a 	mov	r2,zero
   1a4a4:	003fee06 	br	1a460 <_gp+0xffff4334>

0001a4a8 <memmove>:
   1a4a8:	2005883a 	mov	r2,r4
   1a4ac:	29000b2e 	bgeu	r5,r4,1a4dc <memmove+0x34>
   1a4b0:	298f883a 	add	r7,r5,r6
   1a4b4:	21c0092e 	bgeu	r4,r7,1a4dc <memmove+0x34>
   1a4b8:	2187883a 	add	r3,r4,r6
   1a4bc:	198bc83a 	sub	r5,r3,r6
   1a4c0:	30004826 	beq	r6,zero,1a5e4 <memmove+0x13c>
   1a4c4:	39ffffc4 	addi	r7,r7,-1
   1a4c8:	39000003 	ldbu	r4,0(r7)
   1a4cc:	18ffffc4 	addi	r3,r3,-1
   1a4d0:	19000005 	stb	r4,0(r3)
   1a4d4:	28fffb1e 	bne	r5,r3,1a4c4 <_gp+0xffff4398>
   1a4d8:	f800283a 	ret
   1a4dc:	00c003c4 	movi	r3,15
   1a4e0:	1980412e 	bgeu	r3,r6,1a5e8 <memmove+0x140>
   1a4e4:	2886b03a 	or	r3,r5,r2
   1a4e8:	18c000cc 	andi	r3,r3,3
   1a4ec:	1800401e 	bne	r3,zero,1a5f0 <memmove+0x148>
   1a4f0:	33fffc04 	addi	r15,r6,-16
   1a4f4:	781ed13a 	srli	r15,r15,4
   1a4f8:	28c00104 	addi	r3,r5,4
   1a4fc:	13400104 	addi	r13,r2,4
   1a500:	781c913a 	slli	r14,r15,4
   1a504:	2b000204 	addi	r12,r5,8
   1a508:	12c00204 	addi	r11,r2,8
   1a50c:	73800504 	addi	r14,r14,20
   1a510:	2a800304 	addi	r10,r5,12
   1a514:	12400304 	addi	r9,r2,12
   1a518:	2b9d883a 	add	r14,r5,r14
   1a51c:	2811883a 	mov	r8,r5
   1a520:	100f883a 	mov	r7,r2
   1a524:	41000017 	ldw	r4,0(r8)
   1a528:	39c00404 	addi	r7,r7,16
   1a52c:	18c00404 	addi	r3,r3,16
   1a530:	393ffc15 	stw	r4,-16(r7)
   1a534:	193ffc17 	ldw	r4,-16(r3)
   1a538:	6b400404 	addi	r13,r13,16
   1a53c:	5ac00404 	addi	r11,r11,16
   1a540:	693ffc15 	stw	r4,-16(r13)
   1a544:	61000017 	ldw	r4,0(r12)
   1a548:	4a400404 	addi	r9,r9,16
   1a54c:	42000404 	addi	r8,r8,16
   1a550:	593ffc15 	stw	r4,-16(r11)
   1a554:	51000017 	ldw	r4,0(r10)
   1a558:	63000404 	addi	r12,r12,16
   1a55c:	52800404 	addi	r10,r10,16
   1a560:	493ffc15 	stw	r4,-16(r9)
   1a564:	1bbfef1e 	bne	r3,r14,1a524 <_gp+0xffff43f8>
   1a568:	79000044 	addi	r4,r15,1
   1a56c:	2008913a 	slli	r4,r4,4
   1a570:	328003cc 	andi	r10,r6,15
   1a574:	02c000c4 	movi	r11,3
   1a578:	1107883a 	add	r3,r2,r4
   1a57c:	290b883a 	add	r5,r5,r4
   1a580:	5a801e2e 	bgeu	r11,r10,1a5fc <memmove+0x154>
   1a584:	1813883a 	mov	r9,r3
   1a588:	2811883a 	mov	r8,r5
   1a58c:	500f883a 	mov	r7,r10
   1a590:	41000017 	ldw	r4,0(r8)
   1a594:	4a400104 	addi	r9,r9,4
   1a598:	39ffff04 	addi	r7,r7,-4
   1a59c:	493fff15 	stw	r4,-4(r9)
   1a5a0:	42000104 	addi	r8,r8,4
   1a5a4:	59fffa36 	bltu	r11,r7,1a590 <_gp+0xffff4464>
   1a5a8:	513fff04 	addi	r4,r10,-4
   1a5ac:	2008d0ba 	srli	r4,r4,2
   1a5b0:	318000cc 	andi	r6,r6,3
   1a5b4:	21000044 	addi	r4,r4,1
   1a5b8:	2109883a 	add	r4,r4,r4
   1a5bc:	2109883a 	add	r4,r4,r4
   1a5c0:	1907883a 	add	r3,r3,r4
   1a5c4:	290b883a 	add	r5,r5,r4
   1a5c8:	30000b26 	beq	r6,zero,1a5f8 <memmove+0x150>
   1a5cc:	198d883a 	add	r6,r3,r6
   1a5d0:	29c00003 	ldbu	r7,0(r5)
   1a5d4:	18c00044 	addi	r3,r3,1
   1a5d8:	29400044 	addi	r5,r5,1
   1a5dc:	19ffffc5 	stb	r7,-1(r3)
   1a5e0:	19bffb1e 	bne	r3,r6,1a5d0 <_gp+0xffff44a4>
   1a5e4:	f800283a 	ret
   1a5e8:	1007883a 	mov	r3,r2
   1a5ec:	003ff606 	br	1a5c8 <_gp+0xffff449c>
   1a5f0:	1007883a 	mov	r3,r2
   1a5f4:	003ff506 	br	1a5cc <_gp+0xffff44a0>
   1a5f8:	f800283a 	ret
   1a5fc:	500d883a 	mov	r6,r10
   1a600:	003ff106 	br	1a5c8 <_gp+0xffff449c>

0001a604 <_realloc_r>:
   1a604:	defff604 	addi	sp,sp,-40
   1a608:	dc800215 	stw	r18,8(sp)
   1a60c:	dfc00915 	stw	ra,36(sp)
   1a610:	df000815 	stw	fp,32(sp)
   1a614:	ddc00715 	stw	r23,28(sp)
   1a618:	dd800615 	stw	r22,24(sp)
   1a61c:	dd400515 	stw	r21,20(sp)
   1a620:	dd000415 	stw	r20,16(sp)
   1a624:	dcc00315 	stw	r19,12(sp)
   1a628:	dc400115 	stw	r17,4(sp)
   1a62c:	dc000015 	stw	r16,0(sp)
   1a630:	3025883a 	mov	r18,r6
   1a634:	2800b726 	beq	r5,zero,1a914 <_realloc_r+0x310>
   1a638:	282b883a 	mov	r21,r5
   1a63c:	2029883a 	mov	r20,r4
   1a640:	001ced80 	call	1ced8 <__malloc_lock>
   1a644:	a8bfff17 	ldw	r2,-4(r21)
   1a648:	043fff04 	movi	r16,-4
   1a64c:	90c002c4 	addi	r3,r18,11
   1a650:	01000584 	movi	r4,22
   1a654:	acfffe04 	addi	r19,r21,-8
   1a658:	1420703a 	and	r16,r2,r16
   1a65c:	20c0332e 	bgeu	r4,r3,1a72c <_realloc_r+0x128>
   1a660:	047ffe04 	movi	r17,-8
   1a664:	1c62703a 	and	r17,r3,r17
   1a668:	8807883a 	mov	r3,r17
   1a66c:	88005816 	blt	r17,zero,1a7d0 <_realloc_r+0x1cc>
   1a670:	8c805736 	bltu	r17,r18,1a7d0 <_realloc_r+0x1cc>
   1a674:	80c0300e 	bge	r16,r3,1a738 <_realloc_r+0x134>
   1a678:	070000b4 	movhi	fp,2
   1a67c:	e7370a04 	addi	fp,fp,-9176
   1a680:	e1c00217 	ldw	r7,8(fp)
   1a684:	9c09883a 	add	r4,r19,r16
   1a688:	22000117 	ldw	r8,4(r4)
   1a68c:	21c06326 	beq	r4,r7,1a81c <_realloc_r+0x218>
   1a690:	017fff84 	movi	r5,-2
   1a694:	414a703a 	and	r5,r8,r5
   1a698:	214b883a 	add	r5,r4,r5
   1a69c:	29800117 	ldw	r6,4(r5)
   1a6a0:	3180004c 	andi	r6,r6,1
   1a6a4:	30003f26 	beq	r6,zero,1a7a4 <_realloc_r+0x1a0>
   1a6a8:	1080004c 	andi	r2,r2,1
   1a6ac:	10008326 	beq	r2,zero,1a8bc <_realloc_r+0x2b8>
   1a6b0:	900b883a 	mov	r5,r18
   1a6b4:	a009883a 	mov	r4,r20
   1a6b8:	00123f40 	call	123f4 <_malloc_r>
   1a6bc:	1025883a 	mov	r18,r2
   1a6c0:	10011e26 	beq	r2,zero,1ab3c <_realloc_r+0x538>
   1a6c4:	a93fff17 	ldw	r4,-4(r21)
   1a6c8:	10fffe04 	addi	r3,r2,-8
   1a6cc:	00bfff84 	movi	r2,-2
   1a6d0:	2084703a 	and	r2,r4,r2
   1a6d4:	9885883a 	add	r2,r19,r2
   1a6d8:	1880ee26 	beq	r3,r2,1aa94 <_realloc_r+0x490>
   1a6dc:	81bfff04 	addi	r6,r16,-4
   1a6e0:	00800904 	movi	r2,36
   1a6e4:	1180b836 	bltu	r2,r6,1a9c8 <_realloc_r+0x3c4>
   1a6e8:	00c004c4 	movi	r3,19
   1a6ec:	19809636 	bltu	r3,r6,1a948 <_realloc_r+0x344>
   1a6f0:	9005883a 	mov	r2,r18
   1a6f4:	a807883a 	mov	r3,r21
   1a6f8:	19000017 	ldw	r4,0(r3)
   1a6fc:	11000015 	stw	r4,0(r2)
   1a700:	19000117 	ldw	r4,4(r3)
   1a704:	11000115 	stw	r4,4(r2)
   1a708:	18c00217 	ldw	r3,8(r3)
   1a70c:	10c00215 	stw	r3,8(r2)
   1a710:	a80b883a 	mov	r5,r21
   1a714:	a009883a 	mov	r4,r20
   1a718:	00176040 	call	17604 <_free_r>
   1a71c:	a009883a 	mov	r4,r20
   1a720:	001cedc0 	call	1cedc <__malloc_unlock>
   1a724:	9005883a 	mov	r2,r18
   1a728:	00001206 	br	1a774 <_realloc_r+0x170>
   1a72c:	00c00404 	movi	r3,16
   1a730:	1823883a 	mov	r17,r3
   1a734:	003fce06 	br	1a670 <_gp+0xffff4544>
   1a738:	a825883a 	mov	r18,r21
   1a73c:	8445c83a 	sub	r2,r16,r17
   1a740:	00c003c4 	movi	r3,15
   1a744:	18802636 	bltu	r3,r2,1a7e0 <_realloc_r+0x1dc>
   1a748:	99800117 	ldw	r6,4(r19)
   1a74c:	9c07883a 	add	r3,r19,r16
   1a750:	3180004c 	andi	r6,r6,1
   1a754:	3420b03a 	or	r16,r6,r16
   1a758:	9c000115 	stw	r16,4(r19)
   1a75c:	18800117 	ldw	r2,4(r3)
   1a760:	10800054 	ori	r2,r2,1
   1a764:	18800115 	stw	r2,4(r3)
   1a768:	a009883a 	mov	r4,r20
   1a76c:	001cedc0 	call	1cedc <__malloc_unlock>
   1a770:	9005883a 	mov	r2,r18
   1a774:	dfc00917 	ldw	ra,36(sp)
   1a778:	df000817 	ldw	fp,32(sp)
   1a77c:	ddc00717 	ldw	r23,28(sp)
   1a780:	dd800617 	ldw	r22,24(sp)
   1a784:	dd400517 	ldw	r21,20(sp)
   1a788:	dd000417 	ldw	r20,16(sp)
   1a78c:	dcc00317 	ldw	r19,12(sp)
   1a790:	dc800217 	ldw	r18,8(sp)
   1a794:	dc400117 	ldw	r17,4(sp)
   1a798:	dc000017 	ldw	r16,0(sp)
   1a79c:	dec00a04 	addi	sp,sp,40
   1a7a0:	f800283a 	ret
   1a7a4:	017fff04 	movi	r5,-4
   1a7a8:	414a703a 	and	r5,r8,r5
   1a7ac:	814d883a 	add	r6,r16,r5
   1a7b0:	30c01f16 	blt	r6,r3,1a830 <_realloc_r+0x22c>
   1a7b4:	20800317 	ldw	r2,12(r4)
   1a7b8:	20c00217 	ldw	r3,8(r4)
   1a7bc:	a825883a 	mov	r18,r21
   1a7c0:	3021883a 	mov	r16,r6
   1a7c4:	18800315 	stw	r2,12(r3)
   1a7c8:	10c00215 	stw	r3,8(r2)
   1a7cc:	003fdb06 	br	1a73c <_gp+0xffff4610>
   1a7d0:	00800304 	movi	r2,12
   1a7d4:	a0800015 	stw	r2,0(r20)
   1a7d8:	0005883a 	mov	r2,zero
   1a7dc:	003fe506 	br	1a774 <_gp+0xffff4648>
   1a7e0:	98c00117 	ldw	r3,4(r19)
   1a7e4:	9c4b883a 	add	r5,r19,r17
   1a7e8:	11000054 	ori	r4,r2,1
   1a7ec:	18c0004c 	andi	r3,r3,1
   1a7f0:	1c62b03a 	or	r17,r3,r17
   1a7f4:	9c400115 	stw	r17,4(r19)
   1a7f8:	29000115 	stw	r4,4(r5)
   1a7fc:	2885883a 	add	r2,r5,r2
   1a800:	10c00117 	ldw	r3,4(r2)
   1a804:	29400204 	addi	r5,r5,8
   1a808:	a009883a 	mov	r4,r20
   1a80c:	18c00054 	ori	r3,r3,1
   1a810:	10c00115 	stw	r3,4(r2)
   1a814:	00176040 	call	17604 <_free_r>
   1a818:	003fd306 	br	1a768 <_gp+0xffff463c>
   1a81c:	017fff04 	movi	r5,-4
   1a820:	414a703a 	and	r5,r8,r5
   1a824:	89800404 	addi	r6,r17,16
   1a828:	8151883a 	add	r8,r16,r5
   1a82c:	4180590e 	bge	r8,r6,1a994 <_realloc_r+0x390>
   1a830:	1080004c 	andi	r2,r2,1
   1a834:	103f9e1e 	bne	r2,zero,1a6b0 <_gp+0xffff4584>
   1a838:	adbffe17 	ldw	r22,-8(r21)
   1a83c:	00bfff04 	movi	r2,-4
   1a840:	9dadc83a 	sub	r22,r19,r22
   1a844:	b1800117 	ldw	r6,4(r22)
   1a848:	3084703a 	and	r2,r6,r2
   1a84c:	20002026 	beq	r4,zero,1a8d0 <_realloc_r+0x2cc>
   1a850:	80af883a 	add	r23,r16,r2
   1a854:	b96f883a 	add	r23,r23,r5
   1a858:	21c05f26 	beq	r4,r7,1a9d8 <_realloc_r+0x3d4>
   1a85c:	b8c01c16 	blt	r23,r3,1a8d0 <_realloc_r+0x2cc>
   1a860:	20800317 	ldw	r2,12(r4)
   1a864:	20c00217 	ldw	r3,8(r4)
   1a868:	81bfff04 	addi	r6,r16,-4
   1a86c:	01000904 	movi	r4,36
   1a870:	18800315 	stw	r2,12(r3)
   1a874:	10c00215 	stw	r3,8(r2)
   1a878:	b0c00217 	ldw	r3,8(r22)
   1a87c:	b0800317 	ldw	r2,12(r22)
   1a880:	b4800204 	addi	r18,r22,8
   1a884:	18800315 	stw	r2,12(r3)
   1a888:	10c00215 	stw	r3,8(r2)
   1a88c:	21801b36 	bltu	r4,r6,1a8fc <_realloc_r+0x2f8>
   1a890:	008004c4 	movi	r2,19
   1a894:	1180352e 	bgeu	r2,r6,1a96c <_realloc_r+0x368>
   1a898:	a8800017 	ldw	r2,0(r21)
   1a89c:	b0800215 	stw	r2,8(r22)
   1a8a0:	a8800117 	ldw	r2,4(r21)
   1a8a4:	b0800315 	stw	r2,12(r22)
   1a8a8:	008006c4 	movi	r2,27
   1a8ac:	11807f36 	bltu	r2,r6,1aaac <_realloc_r+0x4a8>
   1a8b0:	b0800404 	addi	r2,r22,16
   1a8b4:	ad400204 	addi	r21,r21,8
   1a8b8:	00002d06 	br	1a970 <_realloc_r+0x36c>
   1a8bc:	adbffe17 	ldw	r22,-8(r21)
   1a8c0:	00bfff04 	movi	r2,-4
   1a8c4:	9dadc83a 	sub	r22,r19,r22
   1a8c8:	b1000117 	ldw	r4,4(r22)
   1a8cc:	2084703a 	and	r2,r4,r2
   1a8d0:	b03f7726 	beq	r22,zero,1a6b0 <_gp+0xffff4584>
   1a8d4:	80af883a 	add	r23,r16,r2
   1a8d8:	b8ff7516 	blt	r23,r3,1a6b0 <_gp+0xffff4584>
   1a8dc:	b0800317 	ldw	r2,12(r22)
   1a8e0:	b0c00217 	ldw	r3,8(r22)
   1a8e4:	81bfff04 	addi	r6,r16,-4
   1a8e8:	01000904 	movi	r4,36
   1a8ec:	18800315 	stw	r2,12(r3)
   1a8f0:	10c00215 	stw	r3,8(r2)
   1a8f4:	b4800204 	addi	r18,r22,8
   1a8f8:	21bfe52e 	bgeu	r4,r6,1a890 <_gp+0xffff4764>
   1a8fc:	a80b883a 	mov	r5,r21
   1a900:	9009883a 	mov	r4,r18
   1a904:	001a4a80 	call	1a4a8 <memmove>
   1a908:	b821883a 	mov	r16,r23
   1a90c:	b027883a 	mov	r19,r22
   1a910:	003f8a06 	br	1a73c <_gp+0xffff4610>
   1a914:	300b883a 	mov	r5,r6
   1a918:	dfc00917 	ldw	ra,36(sp)
   1a91c:	df000817 	ldw	fp,32(sp)
   1a920:	ddc00717 	ldw	r23,28(sp)
   1a924:	dd800617 	ldw	r22,24(sp)
   1a928:	dd400517 	ldw	r21,20(sp)
   1a92c:	dd000417 	ldw	r20,16(sp)
   1a930:	dcc00317 	ldw	r19,12(sp)
   1a934:	dc800217 	ldw	r18,8(sp)
   1a938:	dc400117 	ldw	r17,4(sp)
   1a93c:	dc000017 	ldw	r16,0(sp)
   1a940:	dec00a04 	addi	sp,sp,40
   1a944:	00123f41 	jmpi	123f4 <_malloc_r>
   1a948:	a8c00017 	ldw	r3,0(r21)
   1a94c:	90c00015 	stw	r3,0(r18)
   1a950:	a8c00117 	ldw	r3,4(r21)
   1a954:	90c00115 	stw	r3,4(r18)
   1a958:	00c006c4 	movi	r3,27
   1a95c:	19804536 	bltu	r3,r6,1aa74 <_realloc_r+0x470>
   1a960:	90800204 	addi	r2,r18,8
   1a964:	a8c00204 	addi	r3,r21,8
   1a968:	003f6306 	br	1a6f8 <_gp+0xffff45cc>
   1a96c:	9005883a 	mov	r2,r18
   1a970:	a8c00017 	ldw	r3,0(r21)
   1a974:	b821883a 	mov	r16,r23
   1a978:	b027883a 	mov	r19,r22
   1a97c:	10c00015 	stw	r3,0(r2)
   1a980:	a8c00117 	ldw	r3,4(r21)
   1a984:	10c00115 	stw	r3,4(r2)
   1a988:	a8c00217 	ldw	r3,8(r21)
   1a98c:	10c00215 	stw	r3,8(r2)
   1a990:	003f6a06 	br	1a73c <_gp+0xffff4610>
   1a994:	9c67883a 	add	r19,r19,r17
   1a998:	4445c83a 	sub	r2,r8,r17
   1a99c:	e4c00215 	stw	r19,8(fp)
   1a9a0:	10800054 	ori	r2,r2,1
   1a9a4:	98800115 	stw	r2,4(r19)
   1a9a8:	a8bfff17 	ldw	r2,-4(r21)
   1a9ac:	a009883a 	mov	r4,r20
   1a9b0:	1080004c 	andi	r2,r2,1
   1a9b4:	1462b03a 	or	r17,r2,r17
   1a9b8:	ac7fff15 	stw	r17,-4(r21)
   1a9bc:	001cedc0 	call	1cedc <__malloc_unlock>
   1a9c0:	a805883a 	mov	r2,r21
   1a9c4:	003f6b06 	br	1a774 <_gp+0xffff4648>
   1a9c8:	a80b883a 	mov	r5,r21
   1a9cc:	9009883a 	mov	r4,r18
   1a9d0:	001a4a80 	call	1a4a8 <memmove>
   1a9d4:	003f4e06 	br	1a710 <_gp+0xffff45e4>
   1a9d8:	89000404 	addi	r4,r17,16
   1a9dc:	b93fbc16 	blt	r23,r4,1a8d0 <_gp+0xffff47a4>
   1a9e0:	b0800317 	ldw	r2,12(r22)
   1a9e4:	b0c00217 	ldw	r3,8(r22)
   1a9e8:	81bfff04 	addi	r6,r16,-4
   1a9ec:	01000904 	movi	r4,36
   1a9f0:	18800315 	stw	r2,12(r3)
   1a9f4:	10c00215 	stw	r3,8(r2)
   1a9f8:	b4800204 	addi	r18,r22,8
   1a9fc:	21804336 	bltu	r4,r6,1ab0c <_realloc_r+0x508>
   1aa00:	008004c4 	movi	r2,19
   1aa04:	11803f2e 	bgeu	r2,r6,1ab04 <_realloc_r+0x500>
   1aa08:	a8800017 	ldw	r2,0(r21)
   1aa0c:	b0800215 	stw	r2,8(r22)
   1aa10:	a8800117 	ldw	r2,4(r21)
   1aa14:	b0800315 	stw	r2,12(r22)
   1aa18:	008006c4 	movi	r2,27
   1aa1c:	11803f36 	bltu	r2,r6,1ab1c <_realloc_r+0x518>
   1aa20:	b0800404 	addi	r2,r22,16
   1aa24:	ad400204 	addi	r21,r21,8
   1aa28:	a8c00017 	ldw	r3,0(r21)
   1aa2c:	10c00015 	stw	r3,0(r2)
   1aa30:	a8c00117 	ldw	r3,4(r21)
   1aa34:	10c00115 	stw	r3,4(r2)
   1aa38:	a8c00217 	ldw	r3,8(r21)
   1aa3c:	10c00215 	stw	r3,8(r2)
   1aa40:	b447883a 	add	r3,r22,r17
   1aa44:	bc45c83a 	sub	r2,r23,r17
   1aa48:	e0c00215 	stw	r3,8(fp)
   1aa4c:	10800054 	ori	r2,r2,1
   1aa50:	18800115 	stw	r2,4(r3)
   1aa54:	b0800117 	ldw	r2,4(r22)
   1aa58:	a009883a 	mov	r4,r20
   1aa5c:	1080004c 	andi	r2,r2,1
   1aa60:	1462b03a 	or	r17,r2,r17
   1aa64:	b4400115 	stw	r17,4(r22)
   1aa68:	001cedc0 	call	1cedc <__malloc_unlock>
   1aa6c:	9005883a 	mov	r2,r18
   1aa70:	003f4006 	br	1a774 <_gp+0xffff4648>
   1aa74:	a8c00217 	ldw	r3,8(r21)
   1aa78:	90c00215 	stw	r3,8(r18)
   1aa7c:	a8c00317 	ldw	r3,12(r21)
   1aa80:	90c00315 	stw	r3,12(r18)
   1aa84:	30801126 	beq	r6,r2,1aacc <_realloc_r+0x4c8>
   1aa88:	90800404 	addi	r2,r18,16
   1aa8c:	a8c00404 	addi	r3,r21,16
   1aa90:	003f1906 	br	1a6f8 <_gp+0xffff45cc>
   1aa94:	90ffff17 	ldw	r3,-4(r18)
   1aa98:	00bfff04 	movi	r2,-4
   1aa9c:	a825883a 	mov	r18,r21
   1aaa0:	1884703a 	and	r2,r3,r2
   1aaa4:	80a1883a 	add	r16,r16,r2
   1aaa8:	003f2406 	br	1a73c <_gp+0xffff4610>
   1aaac:	a8800217 	ldw	r2,8(r21)
   1aab0:	b0800415 	stw	r2,16(r22)
   1aab4:	a8800317 	ldw	r2,12(r21)
   1aab8:	b0800515 	stw	r2,20(r22)
   1aabc:	31000a26 	beq	r6,r4,1aae8 <_realloc_r+0x4e4>
   1aac0:	b0800604 	addi	r2,r22,24
   1aac4:	ad400404 	addi	r21,r21,16
   1aac8:	003fa906 	br	1a970 <_gp+0xffff4844>
   1aacc:	a9000417 	ldw	r4,16(r21)
   1aad0:	90800604 	addi	r2,r18,24
   1aad4:	a8c00604 	addi	r3,r21,24
   1aad8:	91000415 	stw	r4,16(r18)
   1aadc:	a9000517 	ldw	r4,20(r21)
   1aae0:	91000515 	stw	r4,20(r18)
   1aae4:	003f0406 	br	1a6f8 <_gp+0xffff45cc>
   1aae8:	a8c00417 	ldw	r3,16(r21)
   1aaec:	ad400604 	addi	r21,r21,24
   1aaf0:	b0800804 	addi	r2,r22,32
   1aaf4:	b0c00615 	stw	r3,24(r22)
   1aaf8:	a8ffff17 	ldw	r3,-4(r21)
   1aafc:	b0c00715 	stw	r3,28(r22)
   1ab00:	003f9b06 	br	1a970 <_gp+0xffff4844>
   1ab04:	9005883a 	mov	r2,r18
   1ab08:	003fc706 	br	1aa28 <_gp+0xffff48fc>
   1ab0c:	a80b883a 	mov	r5,r21
   1ab10:	9009883a 	mov	r4,r18
   1ab14:	001a4a80 	call	1a4a8 <memmove>
   1ab18:	003fc906 	br	1aa40 <_gp+0xffff4914>
   1ab1c:	a8800217 	ldw	r2,8(r21)
   1ab20:	b0800415 	stw	r2,16(r22)
   1ab24:	a8800317 	ldw	r2,12(r21)
   1ab28:	b0800515 	stw	r2,20(r22)
   1ab2c:	31000726 	beq	r6,r4,1ab4c <_realloc_r+0x548>
   1ab30:	b0800604 	addi	r2,r22,24
   1ab34:	ad400404 	addi	r21,r21,16
   1ab38:	003fbb06 	br	1aa28 <_gp+0xffff48fc>
   1ab3c:	a009883a 	mov	r4,r20
   1ab40:	001cedc0 	call	1cedc <__malloc_unlock>
   1ab44:	0005883a 	mov	r2,zero
   1ab48:	003f0a06 	br	1a774 <_gp+0xffff4648>
   1ab4c:	a8c00417 	ldw	r3,16(r21)
   1ab50:	ad400604 	addi	r21,r21,24
   1ab54:	b0800804 	addi	r2,r22,32
   1ab58:	b0c00615 	stw	r3,24(r22)
   1ab5c:	a8ffff17 	ldw	r3,-4(r21)
   1ab60:	b0c00715 	stw	r3,28(r22)
   1ab64:	003fb006 	br	1aa28 <_gp+0xffff48fc>

0001ab68 <__udivdi3>:
   1ab68:	defff404 	addi	sp,sp,-48
   1ab6c:	dcc00515 	stw	r19,20(sp)
   1ab70:	dc000215 	stw	r16,8(sp)
   1ab74:	dfc00b15 	stw	ra,44(sp)
   1ab78:	df000a15 	stw	fp,40(sp)
   1ab7c:	ddc00915 	stw	r23,36(sp)
   1ab80:	dd800815 	stw	r22,32(sp)
   1ab84:	dd400715 	stw	r21,28(sp)
   1ab88:	dd000615 	stw	r20,24(sp)
   1ab8c:	dc800415 	stw	r18,16(sp)
   1ab90:	dc400315 	stw	r17,12(sp)
   1ab94:	2027883a 	mov	r19,r4
   1ab98:	2821883a 	mov	r16,r5
   1ab9c:	3800461e 	bne	r7,zero,1acb8 <__udivdi3+0x150>
   1aba0:	3023883a 	mov	r17,r6
   1aba4:	2025883a 	mov	r18,r4
   1aba8:	2980572e 	bgeu	r5,r6,1ad08 <__udivdi3+0x1a0>
   1abac:	00bfffd4 	movui	r2,65535
   1abb0:	282d883a 	mov	r22,r5
   1abb4:	1180b236 	bltu	r2,r6,1ae80 <__udivdi3+0x318>
   1abb8:	00803fc4 	movi	r2,255
   1abbc:	1185803a 	cmpltu	r2,r2,r6
   1abc0:	100490fa 	slli	r2,r2,3
   1abc4:	3086d83a 	srl	r3,r6,r2
   1abc8:	010000b4 	movhi	r4,2
   1abcc:	21354c04 	addi	r4,r4,-10960
   1abd0:	20c7883a 	add	r3,r4,r3
   1abd4:	18c00003 	ldbu	r3,0(r3)
   1abd8:	1885883a 	add	r2,r3,r2
   1abdc:	00c00804 	movi	r3,32
   1abe0:	1887c83a 	sub	r3,r3,r2
   1abe4:	18000526 	beq	r3,zero,1abfc <__udivdi3+0x94>
   1abe8:	80e0983a 	sll	r16,r16,r3
   1abec:	9884d83a 	srl	r2,r19,r2
   1abf0:	30e2983a 	sll	r17,r6,r3
   1abf4:	98e4983a 	sll	r18,r19,r3
   1abf8:	142cb03a 	or	r22,r2,r16
   1abfc:	882ad43a 	srli	r21,r17,16
   1ac00:	b009883a 	mov	r4,r22
   1ac04:	8d3fffcc 	andi	r20,r17,65535
   1ac08:	a80b883a 	mov	r5,r21
   1ac0c:	0010f980 	call	10f98 <__umodsi3>
   1ac10:	b009883a 	mov	r4,r22
   1ac14:	a80b883a 	mov	r5,r21
   1ac18:	1027883a 	mov	r19,r2
   1ac1c:	0010f340 	call	10f34 <__udivsi3>
   1ac20:	100b883a 	mov	r5,r2
   1ac24:	a009883a 	mov	r4,r20
   1ac28:	102d883a 	mov	r22,r2
   1ac2c:	00122c80 	call	122c8 <__mulsi3>
   1ac30:	9826943a 	slli	r19,r19,16
   1ac34:	9006d43a 	srli	r3,r18,16
   1ac38:	1cc6b03a 	or	r3,r3,r19
   1ac3c:	1880052e 	bgeu	r3,r2,1ac54 <__udivdi3+0xec>
   1ac40:	1c47883a 	add	r3,r3,r17
   1ac44:	b13fffc4 	addi	r4,r22,-1
   1ac48:	1c400136 	bltu	r3,r17,1ac50 <__udivdi3+0xe8>
   1ac4c:	18814236 	bltu	r3,r2,1b158 <__udivdi3+0x5f0>
   1ac50:	202d883a 	mov	r22,r4
   1ac54:	18a1c83a 	sub	r16,r3,r2
   1ac58:	8009883a 	mov	r4,r16
   1ac5c:	a80b883a 	mov	r5,r21
   1ac60:	0010f980 	call	10f98 <__umodsi3>
   1ac64:	1027883a 	mov	r19,r2
   1ac68:	8009883a 	mov	r4,r16
   1ac6c:	a80b883a 	mov	r5,r21
   1ac70:	9826943a 	slli	r19,r19,16
   1ac74:	0010f340 	call	10f34 <__udivsi3>
   1ac78:	100b883a 	mov	r5,r2
   1ac7c:	a009883a 	mov	r4,r20
   1ac80:	94bfffcc 	andi	r18,r18,65535
   1ac84:	1021883a 	mov	r16,r2
   1ac88:	94e4b03a 	or	r18,r18,r19
   1ac8c:	00122c80 	call	122c8 <__mulsi3>
   1ac90:	9080052e 	bgeu	r18,r2,1aca8 <__udivdi3+0x140>
   1ac94:	8ca5883a 	add	r18,r17,r18
   1ac98:	80ffffc4 	addi	r3,r16,-1
   1ac9c:	94410c36 	bltu	r18,r17,1b0d0 <__udivdi3+0x568>
   1aca0:	90810b2e 	bgeu	r18,r2,1b0d0 <__udivdi3+0x568>
   1aca4:	843fff84 	addi	r16,r16,-2
   1aca8:	b004943a 	slli	r2,r22,16
   1acac:	0007883a 	mov	r3,zero
   1acb0:	1404b03a 	or	r2,r2,r16
   1acb4:	00005e06 	br	1ae30 <__udivdi3+0x2c8>
   1acb8:	29c05b36 	bltu	r5,r7,1ae28 <__udivdi3+0x2c0>
   1acbc:	00bfffd4 	movui	r2,65535
   1acc0:	11c0672e 	bgeu	r2,r7,1ae60 <__udivdi3+0x2f8>
   1acc4:	00804034 	movhi	r2,256
   1acc8:	10bfffc4 	addi	r2,r2,-1
   1accc:	11c10a36 	bltu	r2,r7,1b0f8 <__udivdi3+0x590>
   1acd0:	00800404 	movi	r2,16
   1acd4:	3886d83a 	srl	r3,r7,r2
   1acd8:	010000b4 	movhi	r4,2
   1acdc:	21354c04 	addi	r4,r4,-10960
   1ace0:	20c7883a 	add	r3,r4,r3
   1ace4:	18c00003 	ldbu	r3,0(r3)
   1ace8:	05c00804 	movi	r23,32
   1acec:	1885883a 	add	r2,r3,r2
   1acf0:	b8afc83a 	sub	r23,r23,r2
   1acf4:	b800671e 	bne	r23,zero,1ae94 <__udivdi3+0x32c>
   1acf8:	3c010536 	bltu	r7,r16,1b110 <__udivdi3+0x5a8>
   1acfc:	9985403a 	cmpgeu	r2,r19,r6
   1ad00:	0007883a 	mov	r3,zero
   1ad04:	00004a06 	br	1ae30 <__udivdi3+0x2c8>
   1ad08:	3000041e 	bne	r6,zero,1ad1c <__udivdi3+0x1b4>
   1ad0c:	000b883a 	mov	r5,zero
   1ad10:	01000044 	movi	r4,1
   1ad14:	0010f340 	call	10f34 <__udivsi3>
   1ad18:	1023883a 	mov	r17,r2
   1ad1c:	00bfffd4 	movui	r2,65535
   1ad20:	1440532e 	bgeu	r2,r17,1ae70 <__udivdi3+0x308>
   1ad24:	00804034 	movhi	r2,256
   1ad28:	10bfffc4 	addi	r2,r2,-1
   1ad2c:	1440f436 	bltu	r2,r17,1b100 <__udivdi3+0x598>
   1ad30:	00800404 	movi	r2,16
   1ad34:	8886d83a 	srl	r3,r17,r2
   1ad38:	010000b4 	movhi	r4,2
   1ad3c:	21354c04 	addi	r4,r4,-10960
   1ad40:	20c7883a 	add	r3,r4,r3
   1ad44:	18c00003 	ldbu	r3,0(r3)
   1ad48:	1885883a 	add	r2,r3,r2
   1ad4c:	00c00804 	movi	r3,32
   1ad50:	1887c83a 	sub	r3,r3,r2
   1ad54:	1800a51e 	bne	r3,zero,1afec <__udivdi3+0x484>
   1ad58:	882ad43a 	srli	r21,r17,16
   1ad5c:	8461c83a 	sub	r16,r16,r17
   1ad60:	8d3fffcc 	andi	r20,r17,65535
   1ad64:	00c00044 	movi	r3,1
   1ad68:	a80b883a 	mov	r5,r21
   1ad6c:	8009883a 	mov	r4,r16
   1ad70:	d8c00115 	stw	r3,4(sp)
   1ad74:	0010f980 	call	10f98 <__umodsi3>
   1ad78:	a80b883a 	mov	r5,r21
   1ad7c:	8009883a 	mov	r4,r16
   1ad80:	1027883a 	mov	r19,r2
   1ad84:	0010f340 	call	10f34 <__udivsi3>
   1ad88:	a00b883a 	mov	r5,r20
   1ad8c:	1009883a 	mov	r4,r2
   1ad90:	102d883a 	mov	r22,r2
   1ad94:	00122c80 	call	122c8 <__mulsi3>
   1ad98:	9826943a 	slli	r19,r19,16
   1ad9c:	900ed43a 	srli	r7,r18,16
   1ada0:	d8c00117 	ldw	r3,4(sp)
   1ada4:	3cceb03a 	or	r7,r7,r19
   1ada8:	3880052e 	bgeu	r7,r2,1adc0 <__udivdi3+0x258>
   1adac:	3c4f883a 	add	r7,r7,r17
   1adb0:	b13fffc4 	addi	r4,r22,-1
   1adb4:	3c400136 	bltu	r7,r17,1adbc <__udivdi3+0x254>
   1adb8:	3880e436 	bltu	r7,r2,1b14c <__udivdi3+0x5e4>
   1adbc:	202d883a 	mov	r22,r4
   1adc0:	38a1c83a 	sub	r16,r7,r2
   1adc4:	8009883a 	mov	r4,r16
   1adc8:	a80b883a 	mov	r5,r21
   1adcc:	d8c00115 	stw	r3,4(sp)
   1add0:	0010f980 	call	10f98 <__umodsi3>
   1add4:	1027883a 	mov	r19,r2
   1add8:	8009883a 	mov	r4,r16
   1addc:	a80b883a 	mov	r5,r21
   1ade0:	9826943a 	slli	r19,r19,16
   1ade4:	0010f340 	call	10f34 <__udivsi3>
   1ade8:	a00b883a 	mov	r5,r20
   1adec:	1009883a 	mov	r4,r2
   1adf0:	94bfffcc 	andi	r18,r18,65535
   1adf4:	1021883a 	mov	r16,r2
   1adf8:	94e4b03a 	or	r18,r18,r19
   1adfc:	00122c80 	call	122c8 <__mulsi3>
   1ae00:	d8c00117 	ldw	r3,4(sp)
   1ae04:	9080052e 	bgeu	r18,r2,1ae1c <__udivdi3+0x2b4>
   1ae08:	8ca5883a 	add	r18,r17,r18
   1ae0c:	813fffc4 	addi	r4,r16,-1
   1ae10:	9440ad36 	bltu	r18,r17,1b0c8 <__udivdi3+0x560>
   1ae14:	9080ac2e 	bgeu	r18,r2,1b0c8 <__udivdi3+0x560>
   1ae18:	843fff84 	addi	r16,r16,-2
   1ae1c:	b004943a 	slli	r2,r22,16
   1ae20:	1404b03a 	or	r2,r2,r16
   1ae24:	00000206 	br	1ae30 <__udivdi3+0x2c8>
   1ae28:	0007883a 	mov	r3,zero
   1ae2c:	0005883a 	mov	r2,zero
   1ae30:	dfc00b17 	ldw	ra,44(sp)
   1ae34:	df000a17 	ldw	fp,40(sp)
   1ae38:	ddc00917 	ldw	r23,36(sp)
   1ae3c:	dd800817 	ldw	r22,32(sp)
   1ae40:	dd400717 	ldw	r21,28(sp)
   1ae44:	dd000617 	ldw	r20,24(sp)
   1ae48:	dcc00517 	ldw	r19,20(sp)
   1ae4c:	dc800417 	ldw	r18,16(sp)
   1ae50:	dc400317 	ldw	r17,12(sp)
   1ae54:	dc000217 	ldw	r16,8(sp)
   1ae58:	dec00c04 	addi	sp,sp,48
   1ae5c:	f800283a 	ret
   1ae60:	00803fc4 	movi	r2,255
   1ae64:	11c5803a 	cmpltu	r2,r2,r7
   1ae68:	100490fa 	slli	r2,r2,3
   1ae6c:	003f9906 	br	1acd4 <_gp+0xffff4ba8>
   1ae70:	00803fc4 	movi	r2,255
   1ae74:	1445803a 	cmpltu	r2,r2,r17
   1ae78:	100490fa 	slli	r2,r2,3
   1ae7c:	003fad06 	br	1ad34 <_gp+0xffff4c08>
   1ae80:	00804034 	movhi	r2,256
   1ae84:	10bfffc4 	addi	r2,r2,-1
   1ae88:	11809f36 	bltu	r2,r6,1b108 <__udivdi3+0x5a0>
   1ae8c:	00800404 	movi	r2,16
   1ae90:	003f4c06 	br	1abc4 <_gp+0xffff4a98>
   1ae94:	3dce983a 	sll	r7,r7,r23
   1ae98:	30b8d83a 	srl	fp,r6,r2
   1ae9c:	80a2d83a 	srl	r17,r16,r2
   1aea0:	35cc983a 	sll	r6,r6,r23
   1aea4:	3f38b03a 	or	fp,r7,fp
   1aea8:	e024d43a 	srli	r18,fp,16
   1aeac:	9884d83a 	srl	r2,r19,r2
   1aeb0:	85e0983a 	sll	r16,r16,r23
   1aeb4:	8809883a 	mov	r4,r17
   1aeb8:	900b883a 	mov	r5,r18
   1aebc:	d9800015 	stw	r6,0(sp)
   1aec0:	1420b03a 	or	r16,r2,r16
   1aec4:	0010f980 	call	10f98 <__umodsi3>
   1aec8:	900b883a 	mov	r5,r18
   1aecc:	8809883a 	mov	r4,r17
   1aed0:	1029883a 	mov	r20,r2
   1aed4:	e5bfffcc 	andi	r22,fp,65535
   1aed8:	0010f340 	call	10f34 <__udivsi3>
   1aedc:	100b883a 	mov	r5,r2
   1aee0:	b009883a 	mov	r4,r22
   1aee4:	102b883a 	mov	r21,r2
   1aee8:	00122c80 	call	122c8 <__mulsi3>
   1aeec:	a028943a 	slli	r20,r20,16
   1aef0:	8006d43a 	srli	r3,r16,16
   1aef4:	1d06b03a 	or	r3,r3,r20
   1aef8:	1880042e 	bgeu	r3,r2,1af0c <__udivdi3+0x3a4>
   1aefc:	1f07883a 	add	r3,r3,fp
   1af00:	a93fffc4 	addi	r4,r21,-1
   1af04:	1f00892e 	bgeu	r3,fp,1b12c <__udivdi3+0x5c4>
   1af08:	202b883a 	mov	r21,r4
   1af0c:	18a3c83a 	sub	r17,r3,r2
   1af10:	8809883a 	mov	r4,r17
   1af14:	900b883a 	mov	r5,r18
   1af18:	0010f980 	call	10f98 <__umodsi3>
   1af1c:	1029883a 	mov	r20,r2
   1af20:	8809883a 	mov	r4,r17
   1af24:	900b883a 	mov	r5,r18
   1af28:	a028943a 	slli	r20,r20,16
   1af2c:	0010f340 	call	10f34 <__udivsi3>
   1af30:	100b883a 	mov	r5,r2
   1af34:	b009883a 	mov	r4,r22
   1af38:	843fffcc 	andi	r16,r16,65535
   1af3c:	1023883a 	mov	r17,r2
   1af40:	8520b03a 	or	r16,r16,r20
   1af44:	00122c80 	call	122c8 <__mulsi3>
   1af48:	8080042e 	bgeu	r16,r2,1af5c <__udivdi3+0x3f4>
   1af4c:	8721883a 	add	r16,r16,fp
   1af50:	88ffffc4 	addi	r3,r17,-1
   1af54:	8700712e 	bgeu	r16,fp,1b11c <__udivdi3+0x5b4>
   1af58:	1823883a 	mov	r17,r3
   1af5c:	a80e943a 	slli	r7,r21,16
   1af60:	d8c00017 	ldw	r3,0(sp)
   1af64:	80a1c83a 	sub	r16,r16,r2
   1af68:	3c64b03a 	or	r18,r7,r17
   1af6c:	1d3fffcc 	andi	r20,r3,65535
   1af70:	9022d43a 	srli	r17,r18,16
   1af74:	95bfffcc 	andi	r22,r18,65535
   1af78:	a00b883a 	mov	r5,r20
   1af7c:	b009883a 	mov	r4,r22
   1af80:	182ad43a 	srli	r21,r3,16
   1af84:	00122c80 	call	122c8 <__mulsi3>
   1af88:	a00b883a 	mov	r5,r20
   1af8c:	8809883a 	mov	r4,r17
   1af90:	1039883a 	mov	fp,r2
   1af94:	00122c80 	call	122c8 <__mulsi3>
   1af98:	8809883a 	mov	r4,r17
   1af9c:	a80b883a 	mov	r5,r21
   1afa0:	1029883a 	mov	r20,r2
   1afa4:	00122c80 	call	122c8 <__mulsi3>
   1afa8:	a80b883a 	mov	r5,r21
   1afac:	b009883a 	mov	r4,r22
   1afb0:	1023883a 	mov	r17,r2
   1afb4:	00122c80 	call	122c8 <__mulsi3>
   1afb8:	e006d43a 	srli	r3,fp,16
   1afbc:	1505883a 	add	r2,r2,r20
   1afc0:	1887883a 	add	r3,r3,r2
   1afc4:	1d00022e 	bgeu	r3,r20,1afd0 <__udivdi3+0x468>
   1afc8:	00800074 	movhi	r2,1
   1afcc:	88a3883a 	add	r17,r17,r2
   1afd0:	1804d43a 	srli	r2,r3,16
   1afd4:	1463883a 	add	r17,r2,r17
   1afd8:	84404436 	bltu	r16,r17,1b0ec <__udivdi3+0x584>
   1afdc:	84403e26 	beq	r16,r17,1b0d8 <__udivdi3+0x570>
   1afe0:	9005883a 	mov	r2,r18
   1afe4:	0007883a 	mov	r3,zero
   1afe8:	003f9106 	br	1ae30 <_gp+0xffff4d04>
   1afec:	88e2983a 	sll	r17,r17,r3
   1aff0:	80aed83a 	srl	r23,r16,r2
   1aff4:	80e0983a 	sll	r16,r16,r3
   1aff8:	882ad43a 	srli	r21,r17,16
   1affc:	9884d83a 	srl	r2,r19,r2
   1b000:	b809883a 	mov	r4,r23
   1b004:	a80b883a 	mov	r5,r21
   1b008:	98e4983a 	sll	r18,r19,r3
   1b00c:	142cb03a 	or	r22,r2,r16
   1b010:	0010f980 	call	10f98 <__umodsi3>
   1b014:	b809883a 	mov	r4,r23
   1b018:	a80b883a 	mov	r5,r21
   1b01c:	1027883a 	mov	r19,r2
   1b020:	8d3fffcc 	andi	r20,r17,65535
   1b024:	0010f340 	call	10f34 <__udivsi3>
   1b028:	a009883a 	mov	r4,r20
   1b02c:	100b883a 	mov	r5,r2
   1b030:	102f883a 	mov	r23,r2
   1b034:	00122c80 	call	122c8 <__mulsi3>
   1b038:	9826943a 	slli	r19,r19,16
   1b03c:	b008d43a 	srli	r4,r22,16
   1b040:	24c8b03a 	or	r4,r4,r19
   1b044:	2080062e 	bgeu	r4,r2,1b060 <__udivdi3+0x4f8>
   1b048:	2449883a 	add	r4,r4,r17
   1b04c:	b8ffffc4 	addi	r3,r23,-1
   1b050:	24403c36 	bltu	r4,r17,1b144 <__udivdi3+0x5dc>
   1b054:	20803b2e 	bgeu	r4,r2,1b144 <__udivdi3+0x5dc>
   1b058:	bdffff84 	addi	r23,r23,-2
   1b05c:	2449883a 	add	r4,r4,r17
   1b060:	20a1c83a 	sub	r16,r4,r2
   1b064:	a80b883a 	mov	r5,r21
   1b068:	8009883a 	mov	r4,r16
   1b06c:	0010f980 	call	10f98 <__umodsi3>
   1b070:	a80b883a 	mov	r5,r21
   1b074:	8009883a 	mov	r4,r16
   1b078:	1027883a 	mov	r19,r2
   1b07c:	0010f340 	call	10f34 <__udivsi3>
   1b080:	a009883a 	mov	r4,r20
   1b084:	100b883a 	mov	r5,r2
   1b088:	9826943a 	slli	r19,r19,16
   1b08c:	1039883a 	mov	fp,r2
   1b090:	00122c80 	call	122c8 <__mulsi3>
   1b094:	b13fffcc 	andi	r4,r22,65535
   1b098:	24c8b03a 	or	r4,r4,r19
   1b09c:	2080062e 	bgeu	r4,r2,1b0b8 <__udivdi3+0x550>
   1b0a0:	2449883a 	add	r4,r4,r17
   1b0a4:	e0ffffc4 	addi	r3,fp,-1
   1b0a8:	24402436 	bltu	r4,r17,1b13c <__udivdi3+0x5d4>
   1b0ac:	2080232e 	bgeu	r4,r2,1b13c <__udivdi3+0x5d4>
   1b0b0:	e73fff84 	addi	fp,fp,-2
   1b0b4:	2449883a 	add	r4,r4,r17
   1b0b8:	b82e943a 	slli	r23,r23,16
   1b0bc:	20a1c83a 	sub	r16,r4,r2
   1b0c0:	bf06b03a 	or	r3,r23,fp
   1b0c4:	003f2806 	br	1ad68 <_gp+0xffff4c3c>
   1b0c8:	2021883a 	mov	r16,r4
   1b0cc:	003f5306 	br	1ae1c <_gp+0xffff4cf0>
   1b0d0:	1821883a 	mov	r16,r3
   1b0d4:	003ef406 	br	1aca8 <_gp+0xffff4b7c>
   1b0d8:	1806943a 	slli	r3,r3,16
   1b0dc:	9de6983a 	sll	r19,r19,r23
   1b0e0:	e73fffcc 	andi	fp,fp,65535
   1b0e4:	1f07883a 	add	r3,r3,fp
   1b0e8:	98ffbd2e 	bgeu	r19,r3,1afe0 <_gp+0xffff4eb4>
   1b0ec:	90bfffc4 	addi	r2,r18,-1
   1b0f0:	0007883a 	mov	r3,zero
   1b0f4:	003f4e06 	br	1ae30 <_gp+0xffff4d04>
   1b0f8:	00800604 	movi	r2,24
   1b0fc:	003ef506 	br	1acd4 <_gp+0xffff4ba8>
   1b100:	00800604 	movi	r2,24
   1b104:	003f0b06 	br	1ad34 <_gp+0xffff4c08>
   1b108:	00800604 	movi	r2,24
   1b10c:	003ead06 	br	1abc4 <_gp+0xffff4a98>
   1b110:	0007883a 	mov	r3,zero
   1b114:	00800044 	movi	r2,1
   1b118:	003f4506 	br	1ae30 <_gp+0xffff4d04>
   1b11c:	80bf8e2e 	bgeu	r16,r2,1af58 <_gp+0xffff4e2c>
   1b120:	8c7fff84 	addi	r17,r17,-2
   1b124:	8721883a 	add	r16,r16,fp
   1b128:	003f8c06 	br	1af5c <_gp+0xffff4e30>
   1b12c:	18bf762e 	bgeu	r3,r2,1af08 <_gp+0xffff4ddc>
   1b130:	ad7fff84 	addi	r21,r21,-2
   1b134:	1f07883a 	add	r3,r3,fp
   1b138:	003f7406 	br	1af0c <_gp+0xffff4de0>
   1b13c:	1839883a 	mov	fp,r3
   1b140:	003fdd06 	br	1b0b8 <_gp+0xffff4f8c>
   1b144:	182f883a 	mov	r23,r3
   1b148:	003fc506 	br	1b060 <_gp+0xffff4f34>
   1b14c:	b5bfff84 	addi	r22,r22,-2
   1b150:	3c4f883a 	add	r7,r7,r17
   1b154:	003f1a06 	br	1adc0 <_gp+0xffff4c94>
   1b158:	b5bfff84 	addi	r22,r22,-2
   1b15c:	1c47883a 	add	r3,r3,r17
   1b160:	003ebc06 	br	1ac54 <_gp+0xffff4b28>

0001b164 <__umoddi3>:
   1b164:	defff304 	addi	sp,sp,-52
   1b168:	df000b15 	stw	fp,44(sp)
   1b16c:	dc400415 	stw	r17,16(sp)
   1b170:	dc000315 	stw	r16,12(sp)
   1b174:	dfc00c15 	stw	ra,48(sp)
   1b178:	ddc00a15 	stw	r23,40(sp)
   1b17c:	dd800915 	stw	r22,36(sp)
   1b180:	dd400815 	stw	r21,32(sp)
   1b184:	dd000715 	stw	r20,28(sp)
   1b188:	dcc00615 	stw	r19,24(sp)
   1b18c:	dc800515 	stw	r18,20(sp)
   1b190:	2021883a 	mov	r16,r4
   1b194:	2823883a 	mov	r17,r5
   1b198:	2839883a 	mov	fp,r5
   1b19c:	3800401e 	bne	r7,zero,1b2a0 <__umoddi3+0x13c>
   1b1a0:	3027883a 	mov	r19,r6
   1b1a4:	2029883a 	mov	r20,r4
   1b1a8:	2980552e 	bgeu	r5,r6,1b300 <__umoddi3+0x19c>
   1b1ac:	00bfffd4 	movui	r2,65535
   1b1b0:	1180a236 	bltu	r2,r6,1b43c <__umoddi3+0x2d8>
   1b1b4:	01003fc4 	movi	r4,255
   1b1b8:	2189803a 	cmpltu	r4,r4,r6
   1b1bc:	200890fa 	slli	r4,r4,3
   1b1c0:	3104d83a 	srl	r2,r6,r4
   1b1c4:	00c000b4 	movhi	r3,2
   1b1c8:	18f54c04 	addi	r3,r3,-10960
   1b1cc:	1885883a 	add	r2,r3,r2
   1b1d0:	10c00003 	ldbu	r3,0(r2)
   1b1d4:	00800804 	movi	r2,32
   1b1d8:	1909883a 	add	r4,r3,r4
   1b1dc:	1125c83a 	sub	r18,r2,r4
   1b1e0:	90000526 	beq	r18,zero,1b1f8 <__umoddi3+0x94>
   1b1e4:	8ca2983a 	sll	r17,r17,r18
   1b1e8:	8108d83a 	srl	r4,r16,r4
   1b1ec:	34a6983a 	sll	r19,r6,r18
   1b1f0:	84a8983a 	sll	r20,r16,r18
   1b1f4:	2478b03a 	or	fp,r4,r17
   1b1f8:	982cd43a 	srli	r22,r19,16
   1b1fc:	e009883a 	mov	r4,fp
   1b200:	9dffffcc 	andi	r23,r19,65535
   1b204:	b00b883a 	mov	r5,r22
   1b208:	0010f980 	call	10f98 <__umodsi3>
   1b20c:	b00b883a 	mov	r5,r22
   1b210:	e009883a 	mov	r4,fp
   1b214:	102b883a 	mov	r21,r2
   1b218:	0010f340 	call	10f34 <__udivsi3>
   1b21c:	100b883a 	mov	r5,r2
   1b220:	b809883a 	mov	r4,r23
   1b224:	00122c80 	call	122c8 <__mulsi3>
   1b228:	a82a943a 	slli	r21,r21,16
   1b22c:	a006d43a 	srli	r3,r20,16
   1b230:	1d46b03a 	or	r3,r3,r21
   1b234:	1880032e 	bgeu	r3,r2,1b244 <__umoddi3+0xe0>
   1b238:	1cc7883a 	add	r3,r3,r19
   1b23c:	1cc00136 	bltu	r3,r19,1b244 <__umoddi3+0xe0>
   1b240:	18813136 	bltu	r3,r2,1b708 <__umoddi3+0x5a4>
   1b244:	18a1c83a 	sub	r16,r3,r2
   1b248:	b00b883a 	mov	r5,r22
   1b24c:	8009883a 	mov	r4,r16
   1b250:	0010f980 	call	10f98 <__umodsi3>
   1b254:	b00b883a 	mov	r5,r22
   1b258:	8009883a 	mov	r4,r16
   1b25c:	1023883a 	mov	r17,r2
   1b260:	0010f340 	call	10f34 <__udivsi3>
   1b264:	100b883a 	mov	r5,r2
   1b268:	b809883a 	mov	r4,r23
   1b26c:	8822943a 	slli	r17,r17,16
   1b270:	00122c80 	call	122c8 <__mulsi3>
   1b274:	a0ffffcc 	andi	r3,r20,65535
   1b278:	1c46b03a 	or	r3,r3,r17
   1b27c:	1880042e 	bgeu	r3,r2,1b290 <__umoddi3+0x12c>
   1b280:	1cc7883a 	add	r3,r3,r19
   1b284:	1cc00236 	bltu	r3,r19,1b290 <__umoddi3+0x12c>
   1b288:	1880012e 	bgeu	r3,r2,1b290 <__umoddi3+0x12c>
   1b28c:	1cc7883a 	add	r3,r3,r19
   1b290:	1885c83a 	sub	r2,r3,r2
   1b294:	1484d83a 	srl	r2,r2,r18
   1b298:	0007883a 	mov	r3,zero
   1b29c:	00005306 	br	1b3ec <__umoddi3+0x288>
   1b2a0:	29c05036 	bltu	r5,r7,1b3e4 <__umoddi3+0x280>
   1b2a4:	00bfffd4 	movui	r2,65535
   1b2a8:	11c05c2e 	bgeu	r2,r7,1b41c <__umoddi3+0x2b8>
   1b2ac:	00804034 	movhi	r2,256
   1b2b0:	10bfffc4 	addi	r2,r2,-1
   1b2b4:	11c10636 	bltu	r2,r7,1b6d0 <__umoddi3+0x56c>
   1b2b8:	01000404 	movi	r4,16
   1b2bc:	3904d83a 	srl	r2,r7,r4
   1b2c0:	00c000b4 	movhi	r3,2
   1b2c4:	18f54c04 	addi	r3,r3,-10960
   1b2c8:	1885883a 	add	r2,r3,r2
   1b2cc:	14c00003 	ldbu	r19,0(r2)
   1b2d0:	00c00804 	movi	r3,32
   1b2d4:	9927883a 	add	r19,r19,r4
   1b2d8:	1ce9c83a 	sub	r20,r3,r19
   1b2dc:	a0005c1e 	bne	r20,zero,1b450 <__umoddi3+0x2ec>
   1b2e0:	3c400136 	bltu	r7,r17,1b2e8 <__umoddi3+0x184>
   1b2e4:	81810a36 	bltu	r16,r6,1b710 <__umoddi3+0x5ac>
   1b2e8:	8185c83a 	sub	r2,r16,r6
   1b2ec:	89e3c83a 	sub	r17,r17,r7
   1b2f0:	8089803a 	cmpltu	r4,r16,r2
   1b2f4:	8939c83a 	sub	fp,r17,r4
   1b2f8:	e007883a 	mov	r3,fp
   1b2fc:	00003b06 	br	1b3ec <__umoddi3+0x288>
   1b300:	3000041e 	bne	r6,zero,1b314 <__umoddi3+0x1b0>
   1b304:	000b883a 	mov	r5,zero
   1b308:	01000044 	movi	r4,1
   1b30c:	0010f340 	call	10f34 <__udivsi3>
   1b310:	1027883a 	mov	r19,r2
   1b314:	00bfffd4 	movui	r2,65535
   1b318:	14c0442e 	bgeu	r2,r19,1b42c <__umoddi3+0x2c8>
   1b31c:	00804034 	movhi	r2,256
   1b320:	10bfffc4 	addi	r2,r2,-1
   1b324:	14c0ec36 	bltu	r2,r19,1b6d8 <__umoddi3+0x574>
   1b328:	00800404 	movi	r2,16
   1b32c:	9886d83a 	srl	r3,r19,r2
   1b330:	010000b4 	movhi	r4,2
   1b334:	21354c04 	addi	r4,r4,-10960
   1b338:	20c7883a 	add	r3,r4,r3
   1b33c:	18c00003 	ldbu	r3,0(r3)
   1b340:	1887883a 	add	r3,r3,r2
   1b344:	00800804 	movi	r2,32
   1b348:	10e5c83a 	sub	r18,r2,r3
   1b34c:	9000ab1e 	bne	r18,zero,1b5fc <__umoddi3+0x498>
   1b350:	982cd43a 	srli	r22,r19,16
   1b354:	8ce3c83a 	sub	r17,r17,r19
   1b358:	9dffffcc 	andi	r23,r19,65535
   1b35c:	b00b883a 	mov	r5,r22
   1b360:	8809883a 	mov	r4,r17
   1b364:	0010f980 	call	10f98 <__umodsi3>
   1b368:	b00b883a 	mov	r5,r22
   1b36c:	8809883a 	mov	r4,r17
   1b370:	102b883a 	mov	r21,r2
   1b374:	0010f340 	call	10f34 <__udivsi3>
   1b378:	b80b883a 	mov	r5,r23
   1b37c:	1009883a 	mov	r4,r2
   1b380:	00122c80 	call	122c8 <__mulsi3>
   1b384:	a82a943a 	slli	r21,r21,16
   1b388:	a006d43a 	srli	r3,r20,16
   1b38c:	1d46b03a 	or	r3,r3,r21
   1b390:	1880042e 	bgeu	r3,r2,1b3a4 <__umoddi3+0x240>
   1b394:	1cc7883a 	add	r3,r3,r19
   1b398:	1cc00236 	bltu	r3,r19,1b3a4 <__umoddi3+0x240>
   1b39c:	1880012e 	bgeu	r3,r2,1b3a4 <__umoddi3+0x240>
   1b3a0:	1cc7883a 	add	r3,r3,r19
   1b3a4:	18a1c83a 	sub	r16,r3,r2
   1b3a8:	b00b883a 	mov	r5,r22
   1b3ac:	8009883a 	mov	r4,r16
   1b3b0:	0010f980 	call	10f98 <__umodsi3>
   1b3b4:	1023883a 	mov	r17,r2
   1b3b8:	b00b883a 	mov	r5,r22
   1b3bc:	8009883a 	mov	r4,r16
   1b3c0:	0010f340 	call	10f34 <__udivsi3>
   1b3c4:	8822943a 	slli	r17,r17,16
   1b3c8:	b80b883a 	mov	r5,r23
   1b3cc:	1009883a 	mov	r4,r2
   1b3d0:	00122c80 	call	122c8 <__mulsi3>
   1b3d4:	a53fffcc 	andi	r20,r20,65535
   1b3d8:	a446b03a 	or	r3,r20,r17
   1b3dc:	18bfac2e 	bgeu	r3,r2,1b290 <_gp+0xffff5164>
   1b3e0:	003fa706 	br	1b280 <_gp+0xffff5154>
   1b3e4:	2005883a 	mov	r2,r4
   1b3e8:	2807883a 	mov	r3,r5
   1b3ec:	dfc00c17 	ldw	ra,48(sp)
   1b3f0:	df000b17 	ldw	fp,44(sp)
   1b3f4:	ddc00a17 	ldw	r23,40(sp)
   1b3f8:	dd800917 	ldw	r22,36(sp)
   1b3fc:	dd400817 	ldw	r21,32(sp)
   1b400:	dd000717 	ldw	r20,28(sp)
   1b404:	dcc00617 	ldw	r19,24(sp)
   1b408:	dc800517 	ldw	r18,20(sp)
   1b40c:	dc400417 	ldw	r17,16(sp)
   1b410:	dc000317 	ldw	r16,12(sp)
   1b414:	dec00d04 	addi	sp,sp,52
   1b418:	f800283a 	ret
   1b41c:	04c03fc4 	movi	r19,255
   1b420:	99c9803a 	cmpltu	r4,r19,r7
   1b424:	200890fa 	slli	r4,r4,3
   1b428:	003fa406 	br	1b2bc <_gp+0xffff5190>
   1b42c:	00803fc4 	movi	r2,255
   1b430:	14c5803a 	cmpltu	r2,r2,r19
   1b434:	100490fa 	slli	r2,r2,3
   1b438:	003fbc06 	br	1b32c <_gp+0xffff5200>
   1b43c:	00804034 	movhi	r2,256
   1b440:	10bfffc4 	addi	r2,r2,-1
   1b444:	1180a636 	bltu	r2,r6,1b6e0 <__umoddi3+0x57c>
   1b448:	01000404 	movi	r4,16
   1b44c:	003f5c06 	br	1b1c0 <_gp+0xffff5094>
   1b450:	3d0e983a 	sll	r7,r7,r20
   1b454:	34ead83a 	srl	r21,r6,r19
   1b458:	8cc6d83a 	srl	r3,r17,r19
   1b45c:	8d10983a 	sll	r8,r17,r20
   1b460:	3d6ab03a 	or	r21,r7,r21
   1b464:	a82cd43a 	srli	r22,r21,16
   1b468:	84e2d83a 	srl	r17,r16,r19
   1b46c:	1809883a 	mov	r4,r3
   1b470:	b00b883a 	mov	r5,r22
   1b474:	8a22b03a 	or	r17,r17,r8
   1b478:	3524983a 	sll	r18,r6,r20
   1b47c:	dc400015 	stw	r17,0(sp)
   1b480:	d8c00115 	stw	r3,4(sp)
   1b484:	0010f980 	call	10f98 <__umodsi3>
   1b488:	d8c00117 	ldw	r3,4(sp)
   1b48c:	b00b883a 	mov	r5,r22
   1b490:	1039883a 	mov	fp,r2
   1b494:	1809883a 	mov	r4,r3
   1b498:	0010f340 	call	10f34 <__udivsi3>
   1b49c:	adffffcc 	andi	r23,r21,65535
   1b4a0:	100b883a 	mov	r5,r2
   1b4a4:	b809883a 	mov	r4,r23
   1b4a8:	1023883a 	mov	r17,r2
   1b4ac:	00122c80 	call	122c8 <__mulsi3>
   1b4b0:	d9400017 	ldw	r5,0(sp)
   1b4b4:	e008943a 	slli	r4,fp,16
   1b4b8:	8520983a 	sll	r16,r16,r20
   1b4bc:	2806d43a 	srli	r3,r5,16
   1b4c0:	1906b03a 	or	r3,r3,r4
   1b4c4:	1880042e 	bgeu	r3,r2,1b4d8 <__umoddi3+0x374>
   1b4c8:	1d47883a 	add	r3,r3,r21
   1b4cc:	893fffc4 	addi	r4,r17,-1
   1b4d0:	1d40892e 	bgeu	r3,r21,1b6f8 <__umoddi3+0x594>
   1b4d4:	2023883a 	mov	r17,r4
   1b4d8:	18b9c83a 	sub	fp,r3,r2
   1b4dc:	b00b883a 	mov	r5,r22
   1b4e0:	e009883a 	mov	r4,fp
   1b4e4:	0010f980 	call	10f98 <__umodsi3>
   1b4e8:	b00b883a 	mov	r5,r22
   1b4ec:	e009883a 	mov	r4,fp
   1b4f0:	d8800215 	stw	r2,8(sp)
   1b4f4:	0010f340 	call	10f34 <__udivsi3>
   1b4f8:	100b883a 	mov	r5,r2
   1b4fc:	b809883a 	mov	r4,r23
   1b500:	102d883a 	mov	r22,r2
   1b504:	00122c80 	call	122c8 <__mulsi3>
   1b508:	d9800217 	ldw	r6,8(sp)
   1b50c:	d8c00017 	ldw	r3,0(sp)
   1b510:	300c943a 	slli	r6,r6,16
   1b514:	1a3fffcc 	andi	r8,r3,65535
   1b518:	4190b03a 	or	r8,r8,r6
   1b51c:	4080042e 	bgeu	r8,r2,1b530 <__umoddi3+0x3cc>
   1b520:	4551883a 	add	r8,r8,r21
   1b524:	b0ffffc4 	addi	r3,r22,-1
   1b528:	45406f2e 	bgeu	r8,r21,1b6e8 <__umoddi3+0x584>
   1b52c:	182d883a 	mov	r22,r3
   1b530:	880e943a 	slli	r7,r17,16
   1b534:	9006d43a 	srli	r3,r18,16
   1b538:	91bfffcc 	andi	r6,r18,65535
   1b53c:	3dacb03a 	or	r22,r7,r22
   1b540:	b02ed43a 	srli	r23,r22,16
   1b544:	b5bfffcc 	andi	r22,r22,65535
   1b548:	300b883a 	mov	r5,r6
   1b54c:	b009883a 	mov	r4,r22
   1b550:	40a3c83a 	sub	r17,r8,r2
   1b554:	d8c00115 	stw	r3,4(sp)
   1b558:	d9800215 	stw	r6,8(sp)
   1b55c:	00122c80 	call	122c8 <__mulsi3>
   1b560:	d9800217 	ldw	r6,8(sp)
   1b564:	b809883a 	mov	r4,r23
   1b568:	1039883a 	mov	fp,r2
   1b56c:	300b883a 	mov	r5,r6
   1b570:	00122c80 	call	122c8 <__mulsi3>
   1b574:	d8c00117 	ldw	r3,4(sp)
   1b578:	b809883a 	mov	r4,r23
   1b57c:	d8800215 	stw	r2,8(sp)
   1b580:	180b883a 	mov	r5,r3
   1b584:	00122c80 	call	122c8 <__mulsi3>
   1b588:	d8c00117 	ldw	r3,4(sp)
   1b58c:	b009883a 	mov	r4,r22
   1b590:	102f883a 	mov	r23,r2
   1b594:	180b883a 	mov	r5,r3
   1b598:	00122c80 	call	122c8 <__mulsi3>
   1b59c:	d9800217 	ldw	r6,8(sp)
   1b5a0:	e006d43a 	srli	r3,fp,16
   1b5a4:	1185883a 	add	r2,r2,r6
   1b5a8:	1885883a 	add	r2,r3,r2
   1b5ac:	1180022e 	bgeu	r2,r6,1b5b8 <__umoddi3+0x454>
   1b5b0:	00c00074 	movhi	r3,1
   1b5b4:	b8ef883a 	add	r23,r23,r3
   1b5b8:	1006d43a 	srli	r3,r2,16
   1b5bc:	1004943a 	slli	r2,r2,16
   1b5c0:	e73fffcc 	andi	fp,fp,65535
   1b5c4:	1dc7883a 	add	r3,r3,r23
   1b5c8:	1739883a 	add	fp,r2,fp
   1b5cc:	88c03a36 	bltu	r17,r3,1b6b8 <__umoddi3+0x554>
   1b5d0:	88c05126 	beq	r17,r3,1b718 <__umoddi3+0x5b4>
   1b5d4:	88c9c83a 	sub	r4,r17,r3
   1b5d8:	e00f883a 	mov	r7,fp
   1b5dc:	81cfc83a 	sub	r7,r16,r7
   1b5e0:	81c7803a 	cmpltu	r3,r16,r7
   1b5e4:	20c7c83a 	sub	r3,r4,r3
   1b5e8:	1cc4983a 	sll	r2,r3,r19
   1b5ec:	3d0ed83a 	srl	r7,r7,r20
   1b5f0:	1d06d83a 	srl	r3,r3,r20
   1b5f4:	11c4b03a 	or	r2,r2,r7
   1b5f8:	003f7c06 	br	1b3ec <_gp+0xffff52c0>
   1b5fc:	9ca6983a 	sll	r19,r19,r18
   1b600:	88f8d83a 	srl	fp,r17,r3
   1b604:	80c4d83a 	srl	r2,r16,r3
   1b608:	982cd43a 	srli	r22,r19,16
   1b60c:	8ca2983a 	sll	r17,r17,r18
   1b610:	e009883a 	mov	r4,fp
   1b614:	b00b883a 	mov	r5,r22
   1b618:	146ab03a 	or	r21,r2,r17
   1b61c:	0010f980 	call	10f98 <__umodsi3>
   1b620:	b00b883a 	mov	r5,r22
   1b624:	e009883a 	mov	r4,fp
   1b628:	1029883a 	mov	r20,r2
   1b62c:	9dffffcc 	andi	r23,r19,65535
   1b630:	0010f340 	call	10f34 <__udivsi3>
   1b634:	b809883a 	mov	r4,r23
   1b638:	100b883a 	mov	r5,r2
   1b63c:	00122c80 	call	122c8 <__mulsi3>
   1b640:	a008943a 	slli	r4,r20,16
   1b644:	a806d43a 	srli	r3,r21,16
   1b648:	84a8983a 	sll	r20,r16,r18
   1b64c:	1906b03a 	or	r3,r3,r4
   1b650:	1880042e 	bgeu	r3,r2,1b664 <__umoddi3+0x500>
   1b654:	1cc7883a 	add	r3,r3,r19
   1b658:	1cc00236 	bltu	r3,r19,1b664 <__umoddi3+0x500>
   1b65c:	1880012e 	bgeu	r3,r2,1b664 <__umoddi3+0x500>
   1b660:	1cc7883a 	add	r3,r3,r19
   1b664:	18a3c83a 	sub	r17,r3,r2
   1b668:	b00b883a 	mov	r5,r22
   1b66c:	8809883a 	mov	r4,r17
   1b670:	0010f980 	call	10f98 <__umodsi3>
   1b674:	b00b883a 	mov	r5,r22
   1b678:	8809883a 	mov	r4,r17
   1b67c:	1021883a 	mov	r16,r2
   1b680:	0010f340 	call	10f34 <__udivsi3>
   1b684:	100b883a 	mov	r5,r2
   1b688:	b809883a 	mov	r4,r23
   1b68c:	8020943a 	slli	r16,r16,16
   1b690:	00122c80 	call	122c8 <__mulsi3>
   1b694:	a8ffffcc 	andi	r3,r21,65535
   1b698:	1c06b03a 	or	r3,r3,r16
   1b69c:	1880042e 	bgeu	r3,r2,1b6b0 <__umoddi3+0x54c>
   1b6a0:	1cc7883a 	add	r3,r3,r19
   1b6a4:	1cc00236 	bltu	r3,r19,1b6b0 <__umoddi3+0x54c>
   1b6a8:	1880012e 	bgeu	r3,r2,1b6b0 <__umoddi3+0x54c>
   1b6ac:	1cc7883a 	add	r3,r3,r19
   1b6b0:	18a3c83a 	sub	r17,r3,r2
   1b6b4:	003f2906 	br	1b35c <_gp+0xffff5230>
   1b6b8:	e48fc83a 	sub	r7,fp,r18
   1b6bc:	1d49c83a 	sub	r4,r3,r21
   1b6c0:	e1f9803a 	cmpltu	fp,fp,r7
   1b6c4:	2739c83a 	sub	fp,r4,fp
   1b6c8:	8f09c83a 	sub	r4,r17,fp
   1b6cc:	003fc306 	br	1b5dc <_gp+0xffff54b0>
   1b6d0:	01000604 	movi	r4,24
   1b6d4:	003ef906 	br	1b2bc <_gp+0xffff5190>
   1b6d8:	00800604 	movi	r2,24
   1b6dc:	003f1306 	br	1b32c <_gp+0xffff5200>
   1b6e0:	01000604 	movi	r4,24
   1b6e4:	003eb606 	br	1b1c0 <_gp+0xffff5094>
   1b6e8:	40bf902e 	bgeu	r8,r2,1b52c <_gp+0xffff5400>
   1b6ec:	b5bfff84 	addi	r22,r22,-2
   1b6f0:	4551883a 	add	r8,r8,r21
   1b6f4:	003f8e06 	br	1b530 <_gp+0xffff5404>
   1b6f8:	18bf762e 	bgeu	r3,r2,1b4d4 <_gp+0xffff53a8>
   1b6fc:	8c7fff84 	addi	r17,r17,-2
   1b700:	1d47883a 	add	r3,r3,r21
   1b704:	003f7406 	br	1b4d8 <_gp+0xffff53ac>
   1b708:	1cc7883a 	add	r3,r3,r19
   1b70c:	003ecd06 	br	1b244 <_gp+0xffff5118>
   1b710:	8005883a 	mov	r2,r16
   1b714:	003ef806 	br	1b2f8 <_gp+0xffff51cc>
   1b718:	873fe736 	bltu	r16,fp,1b6b8 <_gp+0xffff558c>
   1b71c:	e00f883a 	mov	r7,fp
   1b720:	0009883a 	mov	r4,zero
   1b724:	003fad06 	br	1b5dc <_gp+0xffff54b0>

0001b728 <__divdf3>:
   1b728:	defff004 	addi	sp,sp,-64
   1b72c:	dc800815 	stw	r18,32(sp)
   1b730:	2824d53a 	srli	r18,r5,20
   1b734:	dd800c15 	stw	r22,48(sp)
   1b738:	282cd7fa 	srli	r22,r5,31
   1b73c:	dc000615 	stw	r16,24(sp)
   1b740:	04000434 	movhi	r16,16
   1b744:	843fffc4 	addi	r16,r16,-1
   1b748:	dfc00f15 	stw	ra,60(sp)
   1b74c:	df000e15 	stw	fp,56(sp)
   1b750:	ddc00d15 	stw	r23,52(sp)
   1b754:	dd400b15 	stw	r21,44(sp)
   1b758:	dd000a15 	stw	r20,40(sp)
   1b75c:	dcc00915 	stw	r19,36(sp)
   1b760:	dc400715 	stw	r17,28(sp)
   1b764:	9481ffcc 	andi	r18,r18,2047
   1b768:	2c20703a 	and	r16,r5,r16
   1b76c:	b2003fcc 	andi	r8,r22,255
   1b770:	90006126 	beq	r18,zero,1b8f8 <__divdf3+0x1d0>
   1b774:	0081ffc4 	movi	r2,2047
   1b778:	202b883a 	mov	r21,r4
   1b77c:	90803726 	beq	r18,r2,1b85c <__divdf3+0x134>
   1b780:	80800434 	orhi	r2,r16,16
   1b784:	100490fa 	slli	r2,r2,3
   1b788:	2020d77a 	srli	r16,r4,29
   1b78c:	202a90fa 	slli	r21,r4,3
   1b790:	94bf0044 	addi	r18,r18,-1023
   1b794:	80a0b03a 	or	r16,r16,r2
   1b798:	0013883a 	mov	r9,zero
   1b79c:	000b883a 	mov	r5,zero
   1b7a0:	3806d53a 	srli	r3,r7,20
   1b7a4:	382ed7fa 	srli	r23,r7,31
   1b7a8:	04400434 	movhi	r17,16
   1b7ac:	8c7fffc4 	addi	r17,r17,-1
   1b7b0:	18c1ffcc 	andi	r3,r3,2047
   1b7b4:	3029883a 	mov	r20,r6
   1b7b8:	3c62703a 	and	r17,r7,r17
   1b7bc:	bf003fcc 	andi	fp,r23,255
   1b7c0:	18006e26 	beq	r3,zero,1b97c <__divdf3+0x254>
   1b7c4:	0081ffc4 	movi	r2,2047
   1b7c8:	18806626 	beq	r3,r2,1b964 <__divdf3+0x23c>
   1b7cc:	88800434 	orhi	r2,r17,16
   1b7d0:	100490fa 	slli	r2,r2,3
   1b7d4:	3022d77a 	srli	r17,r6,29
   1b7d8:	302890fa 	slli	r20,r6,3
   1b7dc:	18ff0044 	addi	r3,r3,-1023
   1b7e0:	88a2b03a 	or	r17,r17,r2
   1b7e4:	000f883a 	mov	r7,zero
   1b7e8:	b5e6f03a 	xor	r19,r22,r23
   1b7ec:	3a4cb03a 	or	r6,r7,r9
   1b7f0:	008003c4 	movi	r2,15
   1b7f4:	9809883a 	mov	r4,r19
   1b7f8:	90c7c83a 	sub	r3,r18,r3
   1b7fc:	9cc03fcc 	andi	r19,r19,255
   1b800:	11809636 	bltu	r2,r6,1ba5c <__divdf3+0x334>
   1b804:	300c90ba 	slli	r6,r6,2
   1b808:	008000b4 	movhi	r2,2
   1b80c:	10ae0704 	addi	r2,r2,-18404
   1b810:	308d883a 	add	r6,r6,r2
   1b814:	30800017 	ldw	r2,0(r6)
   1b818:	1000683a 	jmp	r2
   1b81c:	0001ba5c 	xori	zero,zero,1769
   1b820:	0001b894 	movui	zero,1762
   1b824:	0001ba4c 	andi	zero,zero,1769
   1b828:	0001b888 	cmpgei	zero,zero,1762
   1b82c:	0001ba4c 	andi	zero,zero,1769
   1b830:	0001ba20 	cmpeqi	zero,zero,1768
   1b834:	0001ba4c 	andi	zero,zero,1769
   1b838:	0001b888 	cmpgei	zero,zero,1762
   1b83c:	0001b894 	movui	zero,1762
   1b840:	0001b894 	movui	zero,1762
   1b844:	0001ba20 	cmpeqi	zero,zero,1768
   1b848:	0001b888 	cmpgei	zero,zero,1762
   1b84c:	0001b878 	rdprs	zero,zero,1761
   1b850:	0001b878 	rdprs	zero,zero,1761
   1b854:	0001b878 	rdprs	zero,zero,1761
   1b858:	0001bde4 	muli	zero,zero,1783
   1b85c:	2404b03a 	or	r2,r4,r16
   1b860:	10006c1e 	bne	r2,zero,1ba14 <__divdf3+0x2ec>
   1b864:	02400204 	movi	r9,8
   1b868:	0021883a 	mov	r16,zero
   1b86c:	002b883a 	mov	r21,zero
   1b870:	01400084 	movi	r5,2
   1b874:	003fca06 	br	1b7a0 <_gp+0xffff5674>
   1b878:	8023883a 	mov	r17,r16
   1b87c:	a829883a 	mov	r20,r21
   1b880:	4039883a 	mov	fp,r8
   1b884:	280f883a 	mov	r7,r5
   1b888:	00800084 	movi	r2,2
   1b88c:	3881601e 	bne	r7,r2,1be10 <__divdf3+0x6e8>
   1b890:	e027883a 	mov	r19,fp
   1b894:	9900004c 	andi	r4,r19,1
   1b898:	0081ffc4 	movi	r2,2047
   1b89c:	0021883a 	mov	r16,zero
   1b8a0:	002b883a 	mov	r21,zero
   1b8a4:	1004953a 	slli	r2,r2,20
   1b8a8:	20c03fcc 	andi	r3,r4,255
   1b8ac:	01400434 	movhi	r5,16
   1b8b0:	297fffc4 	addi	r5,r5,-1
   1b8b4:	180697fa 	slli	r3,r3,31
   1b8b8:	8160703a 	and	r16,r16,r5
   1b8bc:	80a0b03a 	or	r16,r16,r2
   1b8c0:	80c6b03a 	or	r3,r16,r3
   1b8c4:	a805883a 	mov	r2,r21
   1b8c8:	dfc00f17 	ldw	ra,60(sp)
   1b8cc:	df000e17 	ldw	fp,56(sp)
   1b8d0:	ddc00d17 	ldw	r23,52(sp)
   1b8d4:	dd800c17 	ldw	r22,48(sp)
   1b8d8:	dd400b17 	ldw	r21,44(sp)
   1b8dc:	dd000a17 	ldw	r20,40(sp)
   1b8e0:	dcc00917 	ldw	r19,36(sp)
   1b8e4:	dc800817 	ldw	r18,32(sp)
   1b8e8:	dc400717 	ldw	r17,28(sp)
   1b8ec:	dc000617 	ldw	r16,24(sp)
   1b8f0:	dec01004 	addi	sp,sp,64
   1b8f4:	f800283a 	ret
   1b8f8:	2404b03a 	or	r2,r4,r16
   1b8fc:	2023883a 	mov	r17,r4
   1b900:	10003f26 	beq	r2,zero,1ba00 <__divdf3+0x2d8>
   1b904:	80015e26 	beq	r16,zero,1be80 <__divdf3+0x758>
   1b908:	8009883a 	mov	r4,r16
   1b90c:	d9800215 	stw	r6,8(sp)
   1b910:	d9c00515 	stw	r7,20(sp)
   1b914:	da000415 	stw	r8,16(sp)
   1b918:	00122640 	call	12264 <__clzsi2>
   1b91c:	d9800217 	ldw	r6,8(sp)
   1b920:	d9c00517 	ldw	r7,20(sp)
   1b924:	da000417 	ldw	r8,16(sp)
   1b928:	113ffd44 	addi	r4,r2,-11
   1b92c:	00c00704 	movi	r3,28
   1b930:	19014f16 	blt	r3,r4,1be70 <__divdf3+0x748>
   1b934:	00c00744 	movi	r3,29
   1b938:	157ffe04 	addi	r21,r2,-8
   1b93c:	1907c83a 	sub	r3,r3,r4
   1b940:	8560983a 	sll	r16,r16,r21
   1b944:	88c6d83a 	srl	r3,r17,r3
   1b948:	8d6a983a 	sll	r21,r17,r21
   1b94c:	1c20b03a 	or	r16,r3,r16
   1b950:	1080fcc4 	addi	r2,r2,1011
   1b954:	00a5c83a 	sub	r18,zero,r2
   1b958:	0013883a 	mov	r9,zero
   1b95c:	000b883a 	mov	r5,zero
   1b960:	003f8f06 	br	1b7a0 <_gp+0xffff5674>
   1b964:	3444b03a 	or	r2,r6,r17
   1b968:	1000231e 	bne	r2,zero,1b9f8 <__divdf3+0x2d0>
   1b96c:	0023883a 	mov	r17,zero
   1b970:	0029883a 	mov	r20,zero
   1b974:	01c00084 	movi	r7,2
   1b978:	003f9b06 	br	1b7e8 <_gp+0xffff56bc>
   1b97c:	3444b03a 	or	r2,r6,r17
   1b980:	10001926 	beq	r2,zero,1b9e8 <__divdf3+0x2c0>
   1b984:	88014b26 	beq	r17,zero,1beb4 <__divdf3+0x78c>
   1b988:	8809883a 	mov	r4,r17
   1b98c:	d9400115 	stw	r5,4(sp)
   1b990:	d9800215 	stw	r6,8(sp)
   1b994:	da000415 	stw	r8,16(sp)
   1b998:	da400315 	stw	r9,12(sp)
   1b99c:	00122640 	call	12264 <__clzsi2>
   1b9a0:	d9400117 	ldw	r5,4(sp)
   1b9a4:	d9800217 	ldw	r6,8(sp)
   1b9a8:	da000417 	ldw	r8,16(sp)
   1b9ac:	da400317 	ldw	r9,12(sp)
   1b9b0:	113ffd44 	addi	r4,r2,-11
   1b9b4:	00c00704 	movi	r3,28
   1b9b8:	19013a16 	blt	r3,r4,1bea4 <__divdf3+0x77c>
   1b9bc:	00c00744 	movi	r3,29
   1b9c0:	153ffe04 	addi	r20,r2,-8
   1b9c4:	1907c83a 	sub	r3,r3,r4
   1b9c8:	8d22983a 	sll	r17,r17,r20
   1b9cc:	30c6d83a 	srl	r3,r6,r3
   1b9d0:	3528983a 	sll	r20,r6,r20
   1b9d4:	1c62b03a 	or	r17,r3,r17
   1b9d8:	1080fcc4 	addi	r2,r2,1011
   1b9dc:	0087c83a 	sub	r3,zero,r2
   1b9e0:	000f883a 	mov	r7,zero
   1b9e4:	003f8006 	br	1b7e8 <_gp+0xffff56bc>
   1b9e8:	0023883a 	mov	r17,zero
   1b9ec:	0029883a 	mov	r20,zero
   1b9f0:	01c00044 	movi	r7,1
   1b9f4:	003f7c06 	br	1b7e8 <_gp+0xffff56bc>
   1b9f8:	01c000c4 	movi	r7,3
   1b9fc:	003f7a06 	br	1b7e8 <_gp+0xffff56bc>
   1ba00:	02400104 	movi	r9,4
   1ba04:	0021883a 	mov	r16,zero
   1ba08:	002b883a 	mov	r21,zero
   1ba0c:	01400044 	movi	r5,1
   1ba10:	003f6306 	br	1b7a0 <_gp+0xffff5674>
   1ba14:	02400304 	movi	r9,12
   1ba18:	014000c4 	movi	r5,3
   1ba1c:	003f6006 	br	1b7a0 <_gp+0xffff5674>
   1ba20:	04000434 	movhi	r16,16
   1ba24:	0009883a 	mov	r4,zero
   1ba28:	843fffc4 	addi	r16,r16,-1
   1ba2c:	057fffc4 	movi	r21,-1
   1ba30:	0081ffc4 	movi	r2,2047
   1ba34:	003f9b06 	br	1b8a4 <_gp+0xffff5778>
   1ba38:	00c00044 	movi	r3,1
   1ba3c:	1887c83a 	sub	r3,r3,r2
   1ba40:	01000e04 	movi	r4,56
   1ba44:	20c1530e 	bge	r4,r3,1bf94 <__divdf3+0x86c>
   1ba48:	9900004c 	andi	r4,r19,1
   1ba4c:	0005883a 	mov	r2,zero
   1ba50:	0021883a 	mov	r16,zero
   1ba54:	002b883a 	mov	r21,zero
   1ba58:	003f9206 	br	1b8a4 <_gp+0xffff5778>
   1ba5c:	8c012e36 	bltu	r17,r16,1bf18 <__divdf3+0x7f0>
   1ba60:	84412c26 	beq	r16,r17,1bf14 <__divdf3+0x7ec>
   1ba64:	a82f883a 	mov	r23,r21
   1ba68:	18ffffc4 	addi	r3,r3,-1
   1ba6c:	002b883a 	mov	r21,zero
   1ba70:	a004d63a 	srli	r2,r20,24
   1ba74:	8822923a 	slli	r17,r17,8
   1ba78:	a028923a 	slli	r20,r20,8
   1ba7c:	8009883a 	mov	r4,r16
   1ba80:	88acb03a 	or	r22,r17,r2
   1ba84:	dd000015 	stw	r20,0(sp)
   1ba88:	b028d43a 	srli	r20,r22,16
   1ba8c:	d8c00215 	stw	r3,8(sp)
   1ba90:	b4bfffcc 	andi	r18,r22,65535
   1ba94:	a00b883a 	mov	r5,r20
   1ba98:	0010f340 	call	10f34 <__udivsi3>
   1ba9c:	100b883a 	mov	r5,r2
   1baa0:	9009883a 	mov	r4,r18
   1baa4:	1023883a 	mov	r17,r2
   1baa8:	00122c80 	call	122c8 <__mulsi3>
   1baac:	8009883a 	mov	r4,r16
   1bab0:	a00b883a 	mov	r5,r20
   1bab4:	1039883a 	mov	fp,r2
   1bab8:	0010f980 	call	10f98 <__umodsi3>
   1babc:	1004943a 	slli	r2,r2,16
   1bac0:	b808d43a 	srli	r4,r23,16
   1bac4:	d8c00217 	ldw	r3,8(sp)
   1bac8:	2084b03a 	or	r2,r4,r2
   1bacc:	1700062e 	bgeu	r2,fp,1bae8 <__divdf3+0x3c0>
   1bad0:	1585883a 	add	r2,r2,r22
   1bad4:	893fffc4 	addi	r4,r17,-1
   1bad8:	15811d36 	bltu	r2,r22,1bf50 <__divdf3+0x828>
   1badc:	17011c2e 	bgeu	r2,fp,1bf50 <__divdf3+0x828>
   1bae0:	8c7fff84 	addi	r17,r17,-2
   1bae4:	1585883a 	add	r2,r2,r22
   1bae8:	1739c83a 	sub	fp,r2,fp
   1baec:	a00b883a 	mov	r5,r20
   1baf0:	e009883a 	mov	r4,fp
   1baf4:	d8c00215 	stw	r3,8(sp)
   1baf8:	0010f340 	call	10f34 <__udivsi3>
   1bafc:	100b883a 	mov	r5,r2
   1bb00:	9009883a 	mov	r4,r18
   1bb04:	1021883a 	mov	r16,r2
   1bb08:	00122c80 	call	122c8 <__mulsi3>
   1bb0c:	a00b883a 	mov	r5,r20
   1bb10:	e009883a 	mov	r4,fp
   1bb14:	d8800415 	stw	r2,16(sp)
   1bb18:	0010f980 	call	10f98 <__umodsi3>
   1bb1c:	1004943a 	slli	r2,r2,16
   1bb20:	da000417 	ldw	r8,16(sp)
   1bb24:	bdffffcc 	andi	r23,r23,65535
   1bb28:	b884b03a 	or	r2,r23,r2
   1bb2c:	d8c00217 	ldw	r3,8(sp)
   1bb30:	1200062e 	bgeu	r2,r8,1bb4c <__divdf3+0x424>
   1bb34:	1585883a 	add	r2,r2,r22
   1bb38:	813fffc4 	addi	r4,r16,-1
   1bb3c:	15810236 	bltu	r2,r22,1bf48 <__divdf3+0x820>
   1bb40:	1201012e 	bgeu	r2,r8,1bf48 <__divdf3+0x820>
   1bb44:	843fff84 	addi	r16,r16,-2
   1bb48:	1585883a 	add	r2,r2,r22
   1bb4c:	8822943a 	slli	r17,r17,16
   1bb50:	d9800017 	ldw	r6,0(sp)
   1bb54:	1211c83a 	sub	r8,r2,r8
   1bb58:	8c22b03a 	or	r17,r17,r16
   1bb5c:	373fffcc 	andi	fp,r6,65535
   1bb60:	8abfffcc 	andi	r10,r17,65535
   1bb64:	8820d43a 	srli	r16,r17,16
   1bb68:	5009883a 	mov	r4,r10
   1bb6c:	e00b883a 	mov	r5,fp
   1bb70:	302ed43a 	srli	r23,r6,16
   1bb74:	d8c00215 	stw	r3,8(sp)
   1bb78:	da000415 	stw	r8,16(sp)
   1bb7c:	da800115 	stw	r10,4(sp)
   1bb80:	00122c80 	call	122c8 <__mulsi3>
   1bb84:	800b883a 	mov	r5,r16
   1bb88:	e009883a 	mov	r4,fp
   1bb8c:	d8800515 	stw	r2,20(sp)
   1bb90:	00122c80 	call	122c8 <__mulsi3>
   1bb94:	8009883a 	mov	r4,r16
   1bb98:	b80b883a 	mov	r5,r23
   1bb9c:	d8800315 	stw	r2,12(sp)
   1bba0:	00122c80 	call	122c8 <__mulsi3>
   1bba4:	da800117 	ldw	r10,4(sp)
   1bba8:	b80b883a 	mov	r5,r23
   1bbac:	1021883a 	mov	r16,r2
   1bbb0:	5009883a 	mov	r4,r10
   1bbb4:	00122c80 	call	122c8 <__mulsi3>
   1bbb8:	d9c00517 	ldw	r7,20(sp)
   1bbbc:	da400317 	ldw	r9,12(sp)
   1bbc0:	d8c00217 	ldw	r3,8(sp)
   1bbc4:	3808d43a 	srli	r4,r7,16
   1bbc8:	1245883a 	add	r2,r2,r9
   1bbcc:	da000417 	ldw	r8,16(sp)
   1bbd0:	2085883a 	add	r2,r4,r2
   1bbd4:	1240022e 	bgeu	r2,r9,1bbe0 <__divdf3+0x4b8>
   1bbd8:	01000074 	movhi	r4,1
   1bbdc:	8121883a 	add	r16,r16,r4
   1bbe0:	1008d43a 	srli	r4,r2,16
   1bbe4:	1004943a 	slli	r2,r2,16
   1bbe8:	39ffffcc 	andi	r7,r7,65535
   1bbec:	2409883a 	add	r4,r4,r16
   1bbf0:	11c5883a 	add	r2,r2,r7
   1bbf4:	4100bb36 	bltu	r8,r4,1bee4 <__divdf3+0x7bc>
   1bbf8:	4100d726 	beq	r8,r4,1bf58 <__divdf3+0x830>
   1bbfc:	4109c83a 	sub	r4,r8,r4
   1bc00:	a8a1c83a 	sub	r16,r21,r2
   1bc04:	ac2b803a 	cmpltu	r21,r21,r16
   1bc08:	256bc83a 	sub	r21,r4,r21
   1bc0c:	b540d926 	beq	r22,r21,1bf74 <__divdf3+0x84c>
   1bc10:	a00b883a 	mov	r5,r20
   1bc14:	a809883a 	mov	r4,r21
   1bc18:	d8c00215 	stw	r3,8(sp)
   1bc1c:	0010f340 	call	10f34 <__udivsi3>
   1bc20:	100b883a 	mov	r5,r2
   1bc24:	9009883a 	mov	r4,r18
   1bc28:	d8800515 	stw	r2,20(sp)
   1bc2c:	00122c80 	call	122c8 <__mulsi3>
   1bc30:	a809883a 	mov	r4,r21
   1bc34:	a00b883a 	mov	r5,r20
   1bc38:	d8800415 	stw	r2,16(sp)
   1bc3c:	0010f980 	call	10f98 <__umodsi3>
   1bc40:	1004943a 	slli	r2,r2,16
   1bc44:	8008d43a 	srli	r4,r16,16
   1bc48:	da000417 	ldw	r8,16(sp)
   1bc4c:	d8c00217 	ldw	r3,8(sp)
   1bc50:	2084b03a 	or	r2,r4,r2
   1bc54:	d9c00517 	ldw	r7,20(sp)
   1bc58:	1200062e 	bgeu	r2,r8,1bc74 <__divdf3+0x54c>
   1bc5c:	1585883a 	add	r2,r2,r22
   1bc60:	393fffc4 	addi	r4,r7,-1
   1bc64:	1580c536 	bltu	r2,r22,1bf7c <__divdf3+0x854>
   1bc68:	1200c42e 	bgeu	r2,r8,1bf7c <__divdf3+0x854>
   1bc6c:	39ffff84 	addi	r7,r7,-2
   1bc70:	1585883a 	add	r2,r2,r22
   1bc74:	122bc83a 	sub	r21,r2,r8
   1bc78:	a00b883a 	mov	r5,r20
   1bc7c:	a809883a 	mov	r4,r21
   1bc80:	d8c00215 	stw	r3,8(sp)
   1bc84:	d9c00515 	stw	r7,20(sp)
   1bc88:	0010f340 	call	10f34 <__udivsi3>
   1bc8c:	9009883a 	mov	r4,r18
   1bc90:	100b883a 	mov	r5,r2
   1bc94:	d8800415 	stw	r2,16(sp)
   1bc98:	00122c80 	call	122c8 <__mulsi3>
   1bc9c:	a809883a 	mov	r4,r21
   1bca0:	a00b883a 	mov	r5,r20
   1bca4:	1025883a 	mov	r18,r2
   1bca8:	0010f980 	call	10f98 <__umodsi3>
   1bcac:	1004943a 	slli	r2,r2,16
   1bcb0:	813fffcc 	andi	r4,r16,65535
   1bcb4:	d8c00217 	ldw	r3,8(sp)
   1bcb8:	20a0b03a 	or	r16,r4,r2
   1bcbc:	d9c00517 	ldw	r7,20(sp)
   1bcc0:	da000417 	ldw	r8,16(sp)
   1bcc4:	8480062e 	bgeu	r16,r18,1bce0 <__divdf3+0x5b8>
   1bcc8:	85a1883a 	add	r16,r16,r22
   1bccc:	40bfffc4 	addi	r2,r8,-1
   1bcd0:	8580ac36 	bltu	r16,r22,1bf84 <__divdf3+0x85c>
   1bcd4:	8480ab2e 	bgeu	r16,r18,1bf84 <__divdf3+0x85c>
   1bcd8:	423fff84 	addi	r8,r8,-2
   1bcdc:	85a1883a 	add	r16,r16,r22
   1bce0:	3804943a 	slli	r2,r7,16
   1bce4:	84a1c83a 	sub	r16,r16,r18
   1bce8:	e009883a 	mov	r4,fp
   1bcec:	1228b03a 	or	r20,r2,r8
   1bcf0:	a1ffffcc 	andi	r7,r20,65535
   1bcf4:	a024d43a 	srli	r18,r20,16
   1bcf8:	380b883a 	mov	r5,r7
   1bcfc:	d8c00215 	stw	r3,8(sp)
   1bd00:	d9c00515 	stw	r7,20(sp)
   1bd04:	00122c80 	call	122c8 <__mulsi3>
   1bd08:	900b883a 	mov	r5,r18
   1bd0c:	e009883a 	mov	r4,fp
   1bd10:	102b883a 	mov	r21,r2
   1bd14:	00122c80 	call	122c8 <__mulsi3>
   1bd18:	900b883a 	mov	r5,r18
   1bd1c:	b809883a 	mov	r4,r23
   1bd20:	1039883a 	mov	fp,r2
   1bd24:	00122c80 	call	122c8 <__mulsi3>
   1bd28:	d9c00517 	ldw	r7,20(sp)
   1bd2c:	b80b883a 	mov	r5,r23
   1bd30:	1025883a 	mov	r18,r2
   1bd34:	3809883a 	mov	r4,r7
   1bd38:	00122c80 	call	122c8 <__mulsi3>
   1bd3c:	a808d43a 	srli	r4,r21,16
   1bd40:	1705883a 	add	r2,r2,fp
   1bd44:	d8c00217 	ldw	r3,8(sp)
   1bd48:	2085883a 	add	r2,r4,r2
   1bd4c:	1700022e 	bgeu	r2,fp,1bd58 <__divdf3+0x630>
   1bd50:	01000074 	movhi	r4,1
   1bd54:	9125883a 	add	r18,r18,r4
   1bd58:	1008d43a 	srli	r4,r2,16
   1bd5c:	1004943a 	slli	r2,r2,16
   1bd60:	ad7fffcc 	andi	r21,r21,65535
   1bd64:	2489883a 	add	r4,r4,r18
   1bd68:	1545883a 	add	r2,r2,r21
   1bd6c:	81003836 	bltu	r16,r4,1be50 <__divdf3+0x728>
   1bd70:	81003626 	beq	r16,r4,1be4c <__divdf3+0x724>
   1bd74:	a5000054 	ori	r20,r20,1
   1bd78:	1880ffc4 	addi	r2,r3,1023
   1bd7c:	00bf2e0e 	bge	zero,r2,1ba38 <_gp+0xffff590c>
   1bd80:	a10001cc 	andi	r4,r20,7
   1bd84:	20000726 	beq	r4,zero,1bda4 <__divdf3+0x67c>
   1bd88:	a10003cc 	andi	r4,r20,15
   1bd8c:	01400104 	movi	r5,4
   1bd90:	21400426 	beq	r4,r5,1bda4 <__divdf3+0x67c>
   1bd94:	a149883a 	add	r4,r20,r5
   1bd98:	2529803a 	cmpltu	r20,r4,r20
   1bd9c:	8d23883a 	add	r17,r17,r20
   1bda0:	2029883a 	mov	r20,r4
   1bda4:	8900402c 	andhi	r4,r17,256
   1bda8:	20000426 	beq	r4,zero,1bdbc <__divdf3+0x694>
   1bdac:	18810004 	addi	r2,r3,1024
   1bdb0:	00ffc034 	movhi	r3,65280
   1bdb4:	18ffffc4 	addi	r3,r3,-1
   1bdb8:	88e2703a 	and	r17,r17,r3
   1bdbc:	00c1ff84 	movi	r3,2046
   1bdc0:	18beb416 	blt	r3,r2,1b894 <_gp+0xffff5768>
   1bdc4:	a028d0fa 	srli	r20,r20,3
   1bdc8:	882a977a 	slli	r21,r17,29
   1bdcc:	8820927a 	slli	r16,r17,9
   1bdd0:	1081ffcc 	andi	r2,r2,2047
   1bdd4:	ad2ab03a 	or	r21,r21,r20
   1bdd8:	8020d33a 	srli	r16,r16,12
   1bddc:	9900004c 	andi	r4,r19,1
   1bde0:	003eb006 	br	1b8a4 <_gp+0xffff5778>
   1bde4:	8080022c 	andhi	r2,r16,8
   1bde8:	10001226 	beq	r2,zero,1be34 <__divdf3+0x70c>
   1bdec:	8880022c 	andhi	r2,r17,8
   1bdf0:	1000101e 	bne	r2,zero,1be34 <__divdf3+0x70c>
   1bdf4:	00800434 	movhi	r2,16
   1bdf8:	8c000234 	orhi	r16,r17,8
   1bdfc:	10bfffc4 	addi	r2,r2,-1
   1be00:	b809883a 	mov	r4,r23
   1be04:	80a0703a 	and	r16,r16,r2
   1be08:	a02b883a 	mov	r21,r20
   1be0c:	003f0806 	br	1ba30 <_gp+0xffff5904>
   1be10:	008000c4 	movi	r2,3
   1be14:	3880b126 	beq	r7,r2,1c0dc <__divdf3+0x9b4>
   1be18:	00800044 	movi	r2,1
   1be1c:	38805b1e 	bne	r7,r2,1bf8c <__divdf3+0x864>
   1be20:	e009883a 	mov	r4,fp
   1be24:	0005883a 	mov	r2,zero
   1be28:	0021883a 	mov	r16,zero
   1be2c:	002b883a 	mov	r21,zero
   1be30:	003e9c06 	br	1b8a4 <_gp+0xffff5778>
   1be34:	00800434 	movhi	r2,16
   1be38:	84000234 	orhi	r16,r16,8
   1be3c:	10bfffc4 	addi	r2,r2,-1
   1be40:	b009883a 	mov	r4,r22
   1be44:	80a0703a 	and	r16,r16,r2
   1be48:	003ef906 	br	1ba30 <_gp+0xffff5904>
   1be4c:	103fca26 	beq	r2,zero,1bd78 <_gp+0xffff5c4c>
   1be50:	b421883a 	add	r16,r22,r16
   1be54:	a17fffc4 	addi	r5,r20,-1
   1be58:	8580422e 	bgeu	r16,r22,1bf64 <__divdf3+0x83c>
   1be5c:	2829883a 	mov	r20,r5
   1be60:	813fc41e 	bne	r16,r4,1bd74 <_gp+0xffff5c48>
   1be64:	d9800017 	ldw	r6,0(sp)
   1be68:	30bfc21e 	bne	r6,r2,1bd74 <_gp+0xffff5c48>
   1be6c:	003fc206 	br	1bd78 <_gp+0xffff5c4c>
   1be70:	143ff604 	addi	r16,r2,-40
   1be74:	8c20983a 	sll	r16,r17,r16
   1be78:	002b883a 	mov	r21,zero
   1be7c:	003eb406 	br	1b950 <_gp+0xffff5824>
   1be80:	d9800215 	stw	r6,8(sp)
   1be84:	d9c00515 	stw	r7,20(sp)
   1be88:	da000415 	stw	r8,16(sp)
   1be8c:	00122640 	call	12264 <__clzsi2>
   1be90:	10800804 	addi	r2,r2,32
   1be94:	da000417 	ldw	r8,16(sp)
   1be98:	d9c00517 	ldw	r7,20(sp)
   1be9c:	d9800217 	ldw	r6,8(sp)
   1bea0:	003ea106 	br	1b928 <_gp+0xffff57fc>
   1bea4:	147ff604 	addi	r17,r2,-40
   1bea8:	3462983a 	sll	r17,r6,r17
   1beac:	0029883a 	mov	r20,zero
   1beb0:	003ec906 	br	1b9d8 <_gp+0xffff58ac>
   1beb4:	3009883a 	mov	r4,r6
   1beb8:	d9400115 	stw	r5,4(sp)
   1bebc:	d9800215 	stw	r6,8(sp)
   1bec0:	da000415 	stw	r8,16(sp)
   1bec4:	da400315 	stw	r9,12(sp)
   1bec8:	00122640 	call	12264 <__clzsi2>
   1becc:	10800804 	addi	r2,r2,32
   1bed0:	da400317 	ldw	r9,12(sp)
   1bed4:	da000417 	ldw	r8,16(sp)
   1bed8:	d9800217 	ldw	r6,8(sp)
   1bedc:	d9400117 	ldw	r5,4(sp)
   1bee0:	003eb306 	br	1b9b0 <_gp+0xffff5884>
   1bee4:	d9800017 	ldw	r6,0(sp)
   1bee8:	a9ab883a 	add	r21,r21,r6
   1beec:	a98b803a 	cmpltu	r5,r21,r6
   1bef0:	2d8b883a 	add	r5,r5,r22
   1bef4:	2a11883a 	add	r8,r5,r8
   1bef8:	897fffc4 	addi	r5,r17,-1
   1befc:	b2000c2e 	bgeu	r22,r8,1bf30 <__divdf3+0x808>
   1bf00:	41003f36 	bltu	r8,r4,1c000 <__divdf3+0x8d8>
   1bf04:	22006c26 	beq	r4,r8,1c0b8 <__divdf3+0x990>
   1bf08:	4109c83a 	sub	r4,r8,r4
   1bf0c:	2823883a 	mov	r17,r5
   1bf10:	003f3b06 	br	1bc00 <_gp+0xffff5ad4>
   1bf14:	ad3ed336 	bltu	r21,r20,1ba64 <_gp+0xffff5938>
   1bf18:	a804d07a 	srli	r2,r21,1
   1bf1c:	802e97fa 	slli	r23,r16,31
   1bf20:	a82a97fa 	slli	r21,r21,31
   1bf24:	8020d07a 	srli	r16,r16,1
   1bf28:	b8aeb03a 	or	r23,r23,r2
   1bf2c:	003ed006 	br	1ba70 <_gp+0xffff5944>
   1bf30:	b23ff51e 	bne	r22,r8,1bf08 <_gp+0xffff5ddc>
   1bf34:	d9800017 	ldw	r6,0(sp)
   1bf38:	a9bff12e 	bgeu	r21,r6,1bf00 <_gp+0xffff5dd4>
   1bf3c:	b109c83a 	sub	r4,r22,r4
   1bf40:	2823883a 	mov	r17,r5
   1bf44:	003f2e06 	br	1bc00 <_gp+0xffff5ad4>
   1bf48:	2021883a 	mov	r16,r4
   1bf4c:	003eff06 	br	1bb4c <_gp+0xffff5a20>
   1bf50:	2023883a 	mov	r17,r4
   1bf54:	003ee406 	br	1bae8 <_gp+0xffff59bc>
   1bf58:	a8bfe236 	bltu	r21,r2,1bee4 <_gp+0xffff5db8>
   1bf5c:	0009883a 	mov	r4,zero
   1bf60:	003f2706 	br	1bc00 <_gp+0xffff5ad4>
   1bf64:	81002d36 	bltu	r16,r4,1c01c <__divdf3+0x8f4>
   1bf68:	24005626 	beq	r4,r16,1c0c4 <__divdf3+0x99c>
   1bf6c:	2829883a 	mov	r20,r5
   1bf70:	003f8006 	br	1bd74 <_gp+0xffff5c48>
   1bf74:	053fffc4 	movi	r20,-1
   1bf78:	003f7f06 	br	1bd78 <_gp+0xffff5c4c>
   1bf7c:	200f883a 	mov	r7,r4
   1bf80:	003f3c06 	br	1bc74 <_gp+0xffff5b48>
   1bf84:	1011883a 	mov	r8,r2
   1bf88:	003f5506 	br	1bce0 <_gp+0xffff5bb4>
   1bf8c:	e027883a 	mov	r19,fp
   1bf90:	003f7906 	br	1bd78 <_gp+0xffff5c4c>
   1bf94:	010007c4 	movi	r4,31
   1bf98:	20c02816 	blt	r4,r3,1c03c <__divdf3+0x914>
   1bf9c:	00800804 	movi	r2,32
   1bfa0:	10c5c83a 	sub	r2,r2,r3
   1bfa4:	888a983a 	sll	r5,r17,r2
   1bfa8:	a0c8d83a 	srl	r4,r20,r3
   1bfac:	a084983a 	sll	r2,r20,r2
   1bfb0:	88e2d83a 	srl	r17,r17,r3
   1bfb4:	2906b03a 	or	r3,r5,r4
   1bfb8:	1004c03a 	cmpne	r2,r2,zero
   1bfbc:	1886b03a 	or	r3,r3,r2
   1bfc0:	188001cc 	andi	r2,r3,7
   1bfc4:	10000726 	beq	r2,zero,1bfe4 <__divdf3+0x8bc>
   1bfc8:	188003cc 	andi	r2,r3,15
   1bfcc:	01000104 	movi	r4,4
   1bfd0:	11000426 	beq	r2,r4,1bfe4 <__divdf3+0x8bc>
   1bfd4:	1805883a 	mov	r2,r3
   1bfd8:	10c00104 	addi	r3,r2,4
   1bfdc:	1885803a 	cmpltu	r2,r3,r2
   1bfe0:	88a3883a 	add	r17,r17,r2
   1bfe4:	8880202c 	andhi	r2,r17,128
   1bfe8:	10002926 	beq	r2,zero,1c090 <__divdf3+0x968>
   1bfec:	9900004c 	andi	r4,r19,1
   1bff0:	00800044 	movi	r2,1
   1bff4:	0021883a 	mov	r16,zero
   1bff8:	002b883a 	mov	r21,zero
   1bffc:	003e2906 	br	1b8a4 <_gp+0xffff5778>
   1c000:	d9800017 	ldw	r6,0(sp)
   1c004:	8c7fff84 	addi	r17,r17,-2
   1c008:	a9ab883a 	add	r21,r21,r6
   1c00c:	a98b803a 	cmpltu	r5,r21,r6
   1c010:	2d8b883a 	add	r5,r5,r22
   1c014:	2a11883a 	add	r8,r5,r8
   1c018:	003ef806 	br	1bbfc <_gp+0xffff5ad0>
   1c01c:	d9800017 	ldw	r6,0(sp)
   1c020:	318f883a 	add	r7,r6,r6
   1c024:	398b803a 	cmpltu	r5,r7,r6
   1c028:	2d8d883a 	add	r6,r5,r22
   1c02c:	81a1883a 	add	r16,r16,r6
   1c030:	a17fff84 	addi	r5,r20,-2
   1c034:	d9c00015 	stw	r7,0(sp)
   1c038:	003f8806 	br	1be5c <_gp+0xffff5d30>
   1c03c:	013ff844 	movi	r4,-31
   1c040:	2085c83a 	sub	r2,r4,r2
   1c044:	8888d83a 	srl	r4,r17,r2
   1c048:	00800804 	movi	r2,32
   1c04c:	18802126 	beq	r3,r2,1c0d4 <__divdf3+0x9ac>
   1c050:	04001004 	movi	r16,64
   1c054:	80c7c83a 	sub	r3,r16,r3
   1c058:	88e0983a 	sll	r16,r17,r3
   1c05c:	8504b03a 	or	r2,r16,r20
   1c060:	1004c03a 	cmpne	r2,r2,zero
   1c064:	2084b03a 	or	r2,r4,r2
   1c068:	144001cc 	andi	r17,r2,7
   1c06c:	88000d1e 	bne	r17,zero,1c0a4 <__divdf3+0x97c>
   1c070:	0021883a 	mov	r16,zero
   1c074:	102ad0fa 	srli	r21,r2,3
   1c078:	9900004c 	andi	r4,r19,1
   1c07c:	0005883a 	mov	r2,zero
   1c080:	ac6ab03a 	or	r21,r21,r17
   1c084:	003e0706 	br	1b8a4 <_gp+0xffff5778>
   1c088:	1007883a 	mov	r3,r2
   1c08c:	0023883a 	mov	r17,zero
   1c090:	8820927a 	slli	r16,r17,9
   1c094:	1805883a 	mov	r2,r3
   1c098:	8822977a 	slli	r17,r17,29
   1c09c:	8020d33a 	srli	r16,r16,12
   1c0a0:	003ff406 	br	1c074 <_gp+0xffff5f48>
   1c0a4:	10c003cc 	andi	r3,r2,15
   1c0a8:	01000104 	movi	r4,4
   1c0ac:	193ff626 	beq	r3,r4,1c088 <_gp+0xffff5f5c>
   1c0b0:	0023883a 	mov	r17,zero
   1c0b4:	003fc806 	br	1bfd8 <_gp+0xffff5eac>
   1c0b8:	a8bfd136 	bltu	r21,r2,1c000 <_gp+0xffff5ed4>
   1c0bc:	2823883a 	mov	r17,r5
   1c0c0:	003fa606 	br	1bf5c <_gp+0xffff5e30>
   1c0c4:	d9800017 	ldw	r6,0(sp)
   1c0c8:	30bfd436 	bltu	r6,r2,1c01c <_gp+0xffff5ef0>
   1c0cc:	2829883a 	mov	r20,r5
   1c0d0:	003f6406 	br	1be64 <_gp+0xffff5d38>
   1c0d4:	0021883a 	mov	r16,zero
   1c0d8:	003fe006 	br	1c05c <_gp+0xffff5f30>
   1c0dc:	00800434 	movhi	r2,16
   1c0e0:	8c000234 	orhi	r16,r17,8
   1c0e4:	10bfffc4 	addi	r2,r2,-1
   1c0e8:	e009883a 	mov	r4,fp
   1c0ec:	80a0703a 	and	r16,r16,r2
   1c0f0:	a02b883a 	mov	r21,r20
   1c0f4:	003e4e06 	br	1ba30 <_gp+0xffff5904>

0001c0f8 <__eqdf2>:
   1c0f8:	2804d53a 	srli	r2,r5,20
   1c0fc:	3806d53a 	srli	r3,r7,20
   1c100:	02000434 	movhi	r8,16
   1c104:	423fffc4 	addi	r8,r8,-1
   1c108:	1081ffcc 	andi	r2,r2,2047
   1c10c:	0281ffc4 	movi	r10,2047
   1c110:	2a12703a 	and	r9,r5,r8
   1c114:	18c1ffcc 	andi	r3,r3,2047
   1c118:	3a10703a 	and	r8,r7,r8
   1c11c:	280ad7fa 	srli	r5,r5,31
   1c120:	380ed7fa 	srli	r7,r7,31
   1c124:	12801026 	beq	r2,r10,1c168 <__eqdf2+0x70>
   1c128:	0281ffc4 	movi	r10,2047
   1c12c:	1a800a26 	beq	r3,r10,1c158 <__eqdf2+0x60>
   1c130:	10c00226 	beq	r2,r3,1c13c <__eqdf2+0x44>
   1c134:	00800044 	movi	r2,1
   1c138:	f800283a 	ret
   1c13c:	4a3ffd1e 	bne	r9,r8,1c134 <_gp+0xffff6008>
   1c140:	21bffc1e 	bne	r4,r6,1c134 <_gp+0xffff6008>
   1c144:	29c00c26 	beq	r5,r7,1c178 <__eqdf2+0x80>
   1c148:	103ffa1e 	bne	r2,zero,1c134 <_gp+0xffff6008>
   1c14c:	2244b03a 	or	r2,r4,r9
   1c150:	1004c03a 	cmpne	r2,r2,zero
   1c154:	f800283a 	ret
   1c158:	3214b03a 	or	r10,r6,r8
   1c15c:	503ff426 	beq	r10,zero,1c130 <_gp+0xffff6004>
   1c160:	00800044 	movi	r2,1
   1c164:	f800283a 	ret
   1c168:	2254b03a 	or	r10,r4,r9
   1c16c:	503fee26 	beq	r10,zero,1c128 <_gp+0xffff5ffc>
   1c170:	00800044 	movi	r2,1
   1c174:	f800283a 	ret
   1c178:	0005883a 	mov	r2,zero
   1c17c:	f800283a 	ret

0001c180 <__gedf2>:
   1c180:	2804d53a 	srli	r2,r5,20
   1c184:	3806d53a 	srli	r3,r7,20
   1c188:	02000434 	movhi	r8,16
   1c18c:	423fffc4 	addi	r8,r8,-1
   1c190:	1081ffcc 	andi	r2,r2,2047
   1c194:	0241ffc4 	movi	r9,2047
   1c198:	2a14703a 	and	r10,r5,r8
   1c19c:	18c1ffcc 	andi	r3,r3,2047
   1c1a0:	3a10703a 	and	r8,r7,r8
   1c1a4:	280ad7fa 	srli	r5,r5,31
   1c1a8:	380ed7fa 	srli	r7,r7,31
   1c1ac:	12401d26 	beq	r2,r9,1c224 <__gedf2+0xa4>
   1c1b0:	0241ffc4 	movi	r9,2047
   1c1b4:	1a401226 	beq	r3,r9,1c200 <__gedf2+0x80>
   1c1b8:	1000081e 	bne	r2,zero,1c1dc <__gedf2+0x5c>
   1c1bc:	2296b03a 	or	r11,r4,r10
   1c1c0:	5813003a 	cmpeq	r9,r11,zero
   1c1c4:	1800091e 	bne	r3,zero,1c1ec <__gedf2+0x6c>
   1c1c8:	3218b03a 	or	r12,r6,r8
   1c1cc:	6000071e 	bne	r12,zero,1c1ec <__gedf2+0x6c>
   1c1d0:	0005883a 	mov	r2,zero
   1c1d4:	5800101e 	bne	r11,zero,1c218 <__gedf2+0x98>
   1c1d8:	f800283a 	ret
   1c1dc:	18000c1e 	bne	r3,zero,1c210 <__gedf2+0x90>
   1c1e0:	3212b03a 	or	r9,r6,r8
   1c1e4:	48000c26 	beq	r9,zero,1c218 <__gedf2+0x98>
   1c1e8:	0013883a 	mov	r9,zero
   1c1ec:	39c03fcc 	andi	r7,r7,255
   1c1f0:	48000826 	beq	r9,zero,1c214 <__gedf2+0x94>
   1c1f4:	38000926 	beq	r7,zero,1c21c <__gedf2+0x9c>
   1c1f8:	00800044 	movi	r2,1
   1c1fc:	f800283a 	ret
   1c200:	3212b03a 	or	r9,r6,r8
   1c204:	483fec26 	beq	r9,zero,1c1b8 <_gp+0xffff608c>
   1c208:	00bfff84 	movi	r2,-2
   1c20c:	f800283a 	ret
   1c210:	39c03fcc 	andi	r7,r7,255
   1c214:	29c00626 	beq	r5,r7,1c230 <__gedf2+0xb0>
   1c218:	283ff726 	beq	r5,zero,1c1f8 <_gp+0xffff60cc>
   1c21c:	00bfffc4 	movi	r2,-1
   1c220:	f800283a 	ret
   1c224:	2292b03a 	or	r9,r4,r10
   1c228:	483fe126 	beq	r9,zero,1c1b0 <_gp+0xffff6084>
   1c22c:	003ff606 	br	1c208 <_gp+0xffff60dc>
   1c230:	18bff916 	blt	r3,r2,1c218 <_gp+0xffff60ec>
   1c234:	10c00316 	blt	r2,r3,1c244 <__gedf2+0xc4>
   1c238:	42bff736 	bltu	r8,r10,1c218 <_gp+0xffff60ec>
   1c23c:	52000326 	beq	r10,r8,1c24c <__gedf2+0xcc>
   1c240:	5200042e 	bgeu	r10,r8,1c254 <__gedf2+0xd4>
   1c244:	283fec1e 	bne	r5,zero,1c1f8 <_gp+0xffff60cc>
   1c248:	003ff406 	br	1c21c <_gp+0xffff60f0>
   1c24c:	313ff236 	bltu	r6,r4,1c218 <_gp+0xffff60ec>
   1c250:	21bffc36 	bltu	r4,r6,1c244 <_gp+0xffff6118>
   1c254:	0005883a 	mov	r2,zero
   1c258:	f800283a 	ret

0001c25c <__ledf2>:
   1c25c:	2804d53a 	srli	r2,r5,20
   1c260:	3810d53a 	srli	r8,r7,20
   1c264:	00c00434 	movhi	r3,16
   1c268:	18ffffc4 	addi	r3,r3,-1
   1c26c:	1081ffcc 	andi	r2,r2,2047
   1c270:	0241ffc4 	movi	r9,2047
   1c274:	28d4703a 	and	r10,r5,r3
   1c278:	4201ffcc 	andi	r8,r8,2047
   1c27c:	38c6703a 	and	r3,r7,r3
   1c280:	280ad7fa 	srli	r5,r5,31
   1c284:	380ed7fa 	srli	r7,r7,31
   1c288:	12401f26 	beq	r2,r9,1c308 <__ledf2+0xac>
   1c28c:	0241ffc4 	movi	r9,2047
   1c290:	42401426 	beq	r8,r9,1c2e4 <__ledf2+0x88>
   1c294:	1000091e 	bne	r2,zero,1c2bc <__ledf2+0x60>
   1c298:	2296b03a 	or	r11,r4,r10
   1c29c:	5813003a 	cmpeq	r9,r11,zero
   1c2a0:	29403fcc 	andi	r5,r5,255
   1c2a4:	40000a1e 	bne	r8,zero,1c2d0 <__ledf2+0x74>
   1c2a8:	30d8b03a 	or	r12,r6,r3
   1c2ac:	6000081e 	bne	r12,zero,1c2d0 <__ledf2+0x74>
   1c2b0:	0005883a 	mov	r2,zero
   1c2b4:	5800111e 	bne	r11,zero,1c2fc <__ledf2+0xa0>
   1c2b8:	f800283a 	ret
   1c2bc:	29403fcc 	andi	r5,r5,255
   1c2c0:	40000c1e 	bne	r8,zero,1c2f4 <__ledf2+0x98>
   1c2c4:	30d2b03a 	or	r9,r6,r3
   1c2c8:	48000c26 	beq	r9,zero,1c2fc <__ledf2+0xa0>
   1c2cc:	0013883a 	mov	r9,zero
   1c2d0:	39c03fcc 	andi	r7,r7,255
   1c2d4:	48000826 	beq	r9,zero,1c2f8 <__ledf2+0x9c>
   1c2d8:	38001126 	beq	r7,zero,1c320 <__ledf2+0xc4>
   1c2dc:	00800044 	movi	r2,1
   1c2e0:	f800283a 	ret
   1c2e4:	30d2b03a 	or	r9,r6,r3
   1c2e8:	483fea26 	beq	r9,zero,1c294 <_gp+0xffff6168>
   1c2ec:	00800084 	movi	r2,2
   1c2f0:	f800283a 	ret
   1c2f4:	39c03fcc 	andi	r7,r7,255
   1c2f8:	39400726 	beq	r7,r5,1c318 <__ledf2+0xbc>
   1c2fc:	2800081e 	bne	r5,zero,1c320 <__ledf2+0xc4>
   1c300:	00800044 	movi	r2,1
   1c304:	f800283a 	ret
   1c308:	2292b03a 	or	r9,r4,r10
   1c30c:	483fdf26 	beq	r9,zero,1c28c <_gp+0xffff6160>
   1c310:	00800084 	movi	r2,2
   1c314:	f800283a 	ret
   1c318:	4080030e 	bge	r8,r2,1c328 <__ledf2+0xcc>
   1c31c:	383fef26 	beq	r7,zero,1c2dc <_gp+0xffff61b0>
   1c320:	00bfffc4 	movi	r2,-1
   1c324:	f800283a 	ret
   1c328:	123feb16 	blt	r2,r8,1c2d8 <_gp+0xffff61ac>
   1c32c:	1abff336 	bltu	r3,r10,1c2fc <_gp+0xffff61d0>
   1c330:	50c00326 	beq	r10,r3,1c340 <__ledf2+0xe4>
   1c334:	50c0042e 	bgeu	r10,r3,1c348 <__ledf2+0xec>
   1c338:	283fe81e 	bne	r5,zero,1c2dc <_gp+0xffff61b0>
   1c33c:	003ff806 	br	1c320 <_gp+0xffff61f4>
   1c340:	313fee36 	bltu	r6,r4,1c2fc <_gp+0xffff61d0>
   1c344:	21bffc36 	bltu	r4,r6,1c338 <_gp+0xffff620c>
   1c348:	0005883a 	mov	r2,zero
   1c34c:	f800283a 	ret

0001c350 <__subdf3>:
   1c350:	02000434 	movhi	r8,16
   1c354:	423fffc4 	addi	r8,r8,-1
   1c358:	defffb04 	addi	sp,sp,-20
   1c35c:	2a14703a 	and	r10,r5,r8
   1c360:	3812d53a 	srli	r9,r7,20
   1c364:	3a10703a 	and	r8,r7,r8
   1c368:	2006d77a 	srli	r3,r4,29
   1c36c:	3004d77a 	srli	r2,r6,29
   1c370:	dc000015 	stw	r16,0(sp)
   1c374:	501490fa 	slli	r10,r10,3
   1c378:	2820d53a 	srli	r16,r5,20
   1c37c:	401090fa 	slli	r8,r8,3
   1c380:	dc800215 	stw	r18,8(sp)
   1c384:	dc400115 	stw	r17,4(sp)
   1c388:	dfc00415 	stw	ra,16(sp)
   1c38c:	202290fa 	slli	r17,r4,3
   1c390:	dcc00315 	stw	r19,12(sp)
   1c394:	4a41ffcc 	andi	r9,r9,2047
   1c398:	0101ffc4 	movi	r4,2047
   1c39c:	2824d7fa 	srli	r18,r5,31
   1c3a0:	8401ffcc 	andi	r16,r16,2047
   1c3a4:	50c6b03a 	or	r3,r10,r3
   1c3a8:	380ed7fa 	srli	r7,r7,31
   1c3ac:	408ab03a 	or	r5,r8,r2
   1c3b0:	300c90fa 	slli	r6,r6,3
   1c3b4:	49009626 	beq	r9,r4,1c610 <__subdf3+0x2c0>
   1c3b8:	39c0005c 	xori	r7,r7,1
   1c3bc:	8245c83a 	sub	r2,r16,r9
   1c3c0:	3c807426 	beq	r7,r18,1c594 <__subdf3+0x244>
   1c3c4:	0080af0e 	bge	zero,r2,1c684 <__subdf3+0x334>
   1c3c8:	48002a1e 	bne	r9,zero,1c474 <__subdf3+0x124>
   1c3cc:	2988b03a 	or	r4,r5,r6
   1c3d0:	20009a1e 	bne	r4,zero,1c63c <__subdf3+0x2ec>
   1c3d4:	888001cc 	andi	r2,r17,7
   1c3d8:	10000726 	beq	r2,zero,1c3f8 <__subdf3+0xa8>
   1c3dc:	888003cc 	andi	r2,r17,15
   1c3e0:	01000104 	movi	r4,4
   1c3e4:	11000426 	beq	r2,r4,1c3f8 <__subdf3+0xa8>
   1c3e8:	890b883a 	add	r5,r17,r4
   1c3ec:	2c63803a 	cmpltu	r17,r5,r17
   1c3f0:	1c47883a 	add	r3,r3,r17
   1c3f4:	2823883a 	mov	r17,r5
   1c3f8:	1880202c 	andhi	r2,r3,128
   1c3fc:	10005926 	beq	r2,zero,1c564 <__subdf3+0x214>
   1c400:	84000044 	addi	r16,r16,1
   1c404:	0081ffc4 	movi	r2,2047
   1c408:	8080be26 	beq	r16,r2,1c704 <__subdf3+0x3b4>
   1c40c:	017fe034 	movhi	r5,65408
   1c410:	297fffc4 	addi	r5,r5,-1
   1c414:	1946703a 	and	r3,r3,r5
   1c418:	1804977a 	slli	r2,r3,29
   1c41c:	1806927a 	slli	r3,r3,9
   1c420:	8822d0fa 	srli	r17,r17,3
   1c424:	8401ffcc 	andi	r16,r16,2047
   1c428:	180ad33a 	srli	r5,r3,12
   1c42c:	9100004c 	andi	r4,r18,1
   1c430:	1444b03a 	or	r2,r2,r17
   1c434:	80c1ffcc 	andi	r3,r16,2047
   1c438:	1820953a 	slli	r16,r3,20
   1c43c:	20c03fcc 	andi	r3,r4,255
   1c440:	180897fa 	slli	r4,r3,31
   1c444:	00c00434 	movhi	r3,16
   1c448:	18ffffc4 	addi	r3,r3,-1
   1c44c:	28c6703a 	and	r3,r5,r3
   1c450:	1c06b03a 	or	r3,r3,r16
   1c454:	1906b03a 	or	r3,r3,r4
   1c458:	dfc00417 	ldw	ra,16(sp)
   1c45c:	dcc00317 	ldw	r19,12(sp)
   1c460:	dc800217 	ldw	r18,8(sp)
   1c464:	dc400117 	ldw	r17,4(sp)
   1c468:	dc000017 	ldw	r16,0(sp)
   1c46c:	dec00504 	addi	sp,sp,20
   1c470:	f800283a 	ret
   1c474:	0101ffc4 	movi	r4,2047
   1c478:	813fd626 	beq	r16,r4,1c3d4 <_gp+0xffff62a8>
   1c47c:	29402034 	orhi	r5,r5,128
   1c480:	01000e04 	movi	r4,56
   1c484:	2080a316 	blt	r4,r2,1c714 <__subdf3+0x3c4>
   1c488:	010007c4 	movi	r4,31
   1c48c:	2080c616 	blt	r4,r2,1c7a8 <__subdf3+0x458>
   1c490:	01000804 	movi	r4,32
   1c494:	2089c83a 	sub	r4,r4,r2
   1c498:	2910983a 	sll	r8,r5,r4
   1c49c:	308ed83a 	srl	r7,r6,r2
   1c4a0:	3108983a 	sll	r4,r6,r4
   1c4a4:	2884d83a 	srl	r2,r5,r2
   1c4a8:	41ccb03a 	or	r6,r8,r7
   1c4ac:	2008c03a 	cmpne	r4,r4,zero
   1c4b0:	310cb03a 	or	r6,r6,r4
   1c4b4:	898dc83a 	sub	r6,r17,r6
   1c4b8:	89a3803a 	cmpltu	r17,r17,r6
   1c4bc:	1887c83a 	sub	r3,r3,r2
   1c4c0:	1c47c83a 	sub	r3,r3,r17
   1c4c4:	3023883a 	mov	r17,r6
   1c4c8:	1880202c 	andhi	r2,r3,128
   1c4cc:	10002326 	beq	r2,zero,1c55c <__subdf3+0x20c>
   1c4d0:	04c02034 	movhi	r19,128
   1c4d4:	9cffffc4 	addi	r19,r19,-1
   1c4d8:	1ce6703a 	and	r19,r3,r19
   1c4dc:	98007a26 	beq	r19,zero,1c6c8 <__subdf3+0x378>
   1c4e0:	9809883a 	mov	r4,r19
   1c4e4:	00122640 	call	12264 <__clzsi2>
   1c4e8:	113ffe04 	addi	r4,r2,-8
   1c4ec:	00c007c4 	movi	r3,31
   1c4f0:	19007b16 	blt	r3,r4,1c6e0 <__subdf3+0x390>
   1c4f4:	00800804 	movi	r2,32
   1c4f8:	1105c83a 	sub	r2,r2,r4
   1c4fc:	8884d83a 	srl	r2,r17,r2
   1c500:	9906983a 	sll	r3,r19,r4
   1c504:	8922983a 	sll	r17,r17,r4
   1c508:	10c4b03a 	or	r2,r2,r3
   1c50c:	24007816 	blt	r4,r16,1c6f0 <__subdf3+0x3a0>
   1c510:	2421c83a 	sub	r16,r4,r16
   1c514:	80c00044 	addi	r3,r16,1
   1c518:	010007c4 	movi	r4,31
   1c51c:	20c09516 	blt	r4,r3,1c774 <__subdf3+0x424>
   1c520:	01400804 	movi	r5,32
   1c524:	28cbc83a 	sub	r5,r5,r3
   1c528:	88c8d83a 	srl	r4,r17,r3
   1c52c:	8962983a 	sll	r17,r17,r5
   1c530:	114a983a 	sll	r5,r2,r5
   1c534:	10c6d83a 	srl	r3,r2,r3
   1c538:	8804c03a 	cmpne	r2,r17,zero
   1c53c:	290ab03a 	or	r5,r5,r4
   1c540:	28a2b03a 	or	r17,r5,r2
   1c544:	0021883a 	mov	r16,zero
   1c548:	003fa206 	br	1c3d4 <_gp+0xffff62a8>
   1c54c:	2090b03a 	or	r8,r4,r2
   1c550:	40018e26 	beq	r8,zero,1cb8c <__subdf3+0x83c>
   1c554:	1007883a 	mov	r3,r2
   1c558:	2023883a 	mov	r17,r4
   1c55c:	888001cc 	andi	r2,r17,7
   1c560:	103f9e1e 	bne	r2,zero,1c3dc <_gp+0xffff62b0>
   1c564:	1804977a 	slli	r2,r3,29
   1c568:	8822d0fa 	srli	r17,r17,3
   1c56c:	1810d0fa 	srli	r8,r3,3
   1c570:	9100004c 	andi	r4,r18,1
   1c574:	1444b03a 	or	r2,r2,r17
   1c578:	00c1ffc4 	movi	r3,2047
   1c57c:	80c02826 	beq	r16,r3,1c620 <__subdf3+0x2d0>
   1c580:	01400434 	movhi	r5,16
   1c584:	297fffc4 	addi	r5,r5,-1
   1c588:	80e0703a 	and	r16,r16,r3
   1c58c:	414a703a 	and	r5,r8,r5
   1c590:	003fa806 	br	1c434 <_gp+0xffff6308>
   1c594:	0080630e 	bge	zero,r2,1c724 <__subdf3+0x3d4>
   1c598:	48003026 	beq	r9,zero,1c65c <__subdf3+0x30c>
   1c59c:	0101ffc4 	movi	r4,2047
   1c5a0:	813f8c26 	beq	r16,r4,1c3d4 <_gp+0xffff62a8>
   1c5a4:	29402034 	orhi	r5,r5,128
   1c5a8:	01000e04 	movi	r4,56
   1c5ac:	2080a90e 	bge	r4,r2,1c854 <__subdf3+0x504>
   1c5b0:	298cb03a 	or	r6,r5,r6
   1c5b4:	3012c03a 	cmpne	r9,r6,zero
   1c5b8:	0005883a 	mov	r2,zero
   1c5bc:	4c53883a 	add	r9,r9,r17
   1c5c0:	4c63803a 	cmpltu	r17,r9,r17
   1c5c4:	10c7883a 	add	r3,r2,r3
   1c5c8:	88c7883a 	add	r3,r17,r3
   1c5cc:	4823883a 	mov	r17,r9
   1c5d0:	1880202c 	andhi	r2,r3,128
   1c5d4:	1000d026 	beq	r2,zero,1c918 <__subdf3+0x5c8>
   1c5d8:	84000044 	addi	r16,r16,1
   1c5dc:	0081ffc4 	movi	r2,2047
   1c5e0:	8080fe26 	beq	r16,r2,1c9dc <__subdf3+0x68c>
   1c5e4:	00bfe034 	movhi	r2,65408
   1c5e8:	10bfffc4 	addi	r2,r2,-1
   1c5ec:	1886703a 	and	r3,r3,r2
   1c5f0:	880ad07a 	srli	r5,r17,1
   1c5f4:	180497fa 	slli	r2,r3,31
   1c5f8:	8900004c 	andi	r4,r17,1
   1c5fc:	2922b03a 	or	r17,r5,r4
   1c600:	1806d07a 	srli	r3,r3,1
   1c604:	1462b03a 	or	r17,r2,r17
   1c608:	3825883a 	mov	r18,r7
   1c60c:	003f7106 	br	1c3d4 <_gp+0xffff62a8>
   1c610:	2984b03a 	or	r2,r5,r6
   1c614:	103f6826 	beq	r2,zero,1c3b8 <_gp+0xffff628c>
   1c618:	39c03fcc 	andi	r7,r7,255
   1c61c:	003f6706 	br	1c3bc <_gp+0xffff6290>
   1c620:	4086b03a 	or	r3,r8,r2
   1c624:	18015226 	beq	r3,zero,1cb70 <__subdf3+0x820>
   1c628:	00c00434 	movhi	r3,16
   1c62c:	41400234 	orhi	r5,r8,8
   1c630:	18ffffc4 	addi	r3,r3,-1
   1c634:	28ca703a 	and	r5,r5,r3
   1c638:	003f7e06 	br	1c434 <_gp+0xffff6308>
   1c63c:	10bfffc4 	addi	r2,r2,-1
   1c640:	1000491e 	bne	r2,zero,1c768 <__subdf3+0x418>
   1c644:	898fc83a 	sub	r7,r17,r6
   1c648:	89e3803a 	cmpltu	r17,r17,r7
   1c64c:	1947c83a 	sub	r3,r3,r5
   1c650:	1c47c83a 	sub	r3,r3,r17
   1c654:	3823883a 	mov	r17,r7
   1c658:	003f9b06 	br	1c4c8 <_gp+0xffff639c>
   1c65c:	2988b03a 	or	r4,r5,r6
   1c660:	203f5c26 	beq	r4,zero,1c3d4 <_gp+0xffff62a8>
   1c664:	10bfffc4 	addi	r2,r2,-1
   1c668:	1000931e 	bne	r2,zero,1c8b8 <__subdf3+0x568>
   1c66c:	898d883a 	add	r6,r17,r6
   1c670:	3463803a 	cmpltu	r17,r6,r17
   1c674:	1947883a 	add	r3,r3,r5
   1c678:	88c7883a 	add	r3,r17,r3
   1c67c:	3023883a 	mov	r17,r6
   1c680:	003fd306 	br	1c5d0 <_gp+0xffff64a4>
   1c684:	1000541e 	bne	r2,zero,1c7d8 <__subdf3+0x488>
   1c688:	80800044 	addi	r2,r16,1
   1c68c:	1081ffcc 	andi	r2,r2,2047
   1c690:	01000044 	movi	r4,1
   1c694:	2080a20e 	bge	r4,r2,1c920 <__subdf3+0x5d0>
   1c698:	8989c83a 	sub	r4,r17,r6
   1c69c:	8905803a 	cmpltu	r2,r17,r4
   1c6a0:	1967c83a 	sub	r19,r3,r5
   1c6a4:	98a7c83a 	sub	r19,r19,r2
   1c6a8:	9880202c 	andhi	r2,r19,128
   1c6ac:	10006326 	beq	r2,zero,1c83c <__subdf3+0x4ec>
   1c6b0:	3463c83a 	sub	r17,r6,r17
   1c6b4:	28c7c83a 	sub	r3,r5,r3
   1c6b8:	344d803a 	cmpltu	r6,r6,r17
   1c6bc:	19a7c83a 	sub	r19,r3,r6
   1c6c0:	3825883a 	mov	r18,r7
   1c6c4:	983f861e 	bne	r19,zero,1c4e0 <_gp+0xffff63b4>
   1c6c8:	8809883a 	mov	r4,r17
   1c6cc:	00122640 	call	12264 <__clzsi2>
   1c6d0:	10800804 	addi	r2,r2,32
   1c6d4:	113ffe04 	addi	r4,r2,-8
   1c6d8:	00c007c4 	movi	r3,31
   1c6dc:	193f850e 	bge	r3,r4,1c4f4 <_gp+0xffff63c8>
   1c6e0:	10bff604 	addi	r2,r2,-40
   1c6e4:	8884983a 	sll	r2,r17,r2
   1c6e8:	0023883a 	mov	r17,zero
   1c6ec:	243f880e 	bge	r4,r16,1c510 <_gp+0xffff63e4>
   1c6f0:	00ffe034 	movhi	r3,65408
   1c6f4:	18ffffc4 	addi	r3,r3,-1
   1c6f8:	8121c83a 	sub	r16,r16,r4
   1c6fc:	10c6703a 	and	r3,r2,r3
   1c700:	003f3406 	br	1c3d4 <_gp+0xffff62a8>
   1c704:	9100004c 	andi	r4,r18,1
   1c708:	000b883a 	mov	r5,zero
   1c70c:	0005883a 	mov	r2,zero
   1c710:	003f4806 	br	1c434 <_gp+0xffff6308>
   1c714:	298cb03a 	or	r6,r5,r6
   1c718:	300cc03a 	cmpne	r6,r6,zero
   1c71c:	0005883a 	mov	r2,zero
   1c720:	003f6406 	br	1c4b4 <_gp+0xffff6388>
   1c724:	10009a1e 	bne	r2,zero,1c990 <__subdf3+0x640>
   1c728:	82400044 	addi	r9,r16,1
   1c72c:	4881ffcc 	andi	r2,r9,2047
   1c730:	02800044 	movi	r10,1
   1c734:	5080670e 	bge	r10,r2,1c8d4 <__subdf3+0x584>
   1c738:	0081ffc4 	movi	r2,2047
   1c73c:	4880af26 	beq	r9,r2,1c9fc <__subdf3+0x6ac>
   1c740:	898d883a 	add	r6,r17,r6
   1c744:	1945883a 	add	r2,r3,r5
   1c748:	3447803a 	cmpltu	r3,r6,r17
   1c74c:	1887883a 	add	r3,r3,r2
   1c750:	182297fa 	slli	r17,r3,31
   1c754:	300cd07a 	srli	r6,r6,1
   1c758:	1806d07a 	srli	r3,r3,1
   1c75c:	4821883a 	mov	r16,r9
   1c760:	89a2b03a 	or	r17,r17,r6
   1c764:	003f1b06 	br	1c3d4 <_gp+0xffff62a8>
   1c768:	0101ffc4 	movi	r4,2047
   1c76c:	813f441e 	bne	r16,r4,1c480 <_gp+0xffff6354>
   1c770:	003f1806 	br	1c3d4 <_gp+0xffff62a8>
   1c774:	843ff844 	addi	r16,r16,-31
   1c778:	01400804 	movi	r5,32
   1c77c:	1408d83a 	srl	r4,r2,r16
   1c780:	19405026 	beq	r3,r5,1c8c4 <__subdf3+0x574>
   1c784:	01401004 	movi	r5,64
   1c788:	28c7c83a 	sub	r3,r5,r3
   1c78c:	10c4983a 	sll	r2,r2,r3
   1c790:	88a2b03a 	or	r17,r17,r2
   1c794:	8822c03a 	cmpne	r17,r17,zero
   1c798:	2462b03a 	or	r17,r4,r17
   1c79c:	0007883a 	mov	r3,zero
   1c7a0:	0021883a 	mov	r16,zero
   1c7a4:	003f6d06 	br	1c55c <_gp+0xffff6430>
   1c7a8:	11fff804 	addi	r7,r2,-32
   1c7ac:	01000804 	movi	r4,32
   1c7b0:	29ced83a 	srl	r7,r5,r7
   1c7b4:	11004526 	beq	r2,r4,1c8cc <__subdf3+0x57c>
   1c7b8:	01001004 	movi	r4,64
   1c7bc:	2089c83a 	sub	r4,r4,r2
   1c7c0:	2904983a 	sll	r2,r5,r4
   1c7c4:	118cb03a 	or	r6,r2,r6
   1c7c8:	300cc03a 	cmpne	r6,r6,zero
   1c7cc:	398cb03a 	or	r6,r7,r6
   1c7d0:	0005883a 	mov	r2,zero
   1c7d4:	003f3706 	br	1c4b4 <_gp+0xffff6388>
   1c7d8:	80002a26 	beq	r16,zero,1c884 <__subdf3+0x534>
   1c7dc:	0101ffc4 	movi	r4,2047
   1c7e0:	49006626 	beq	r9,r4,1c97c <__subdf3+0x62c>
   1c7e4:	0085c83a 	sub	r2,zero,r2
   1c7e8:	18c02034 	orhi	r3,r3,128
   1c7ec:	01000e04 	movi	r4,56
   1c7f0:	20807e16 	blt	r4,r2,1c9ec <__subdf3+0x69c>
   1c7f4:	010007c4 	movi	r4,31
   1c7f8:	2080e716 	blt	r4,r2,1cb98 <__subdf3+0x848>
   1c7fc:	01000804 	movi	r4,32
   1c800:	2089c83a 	sub	r4,r4,r2
   1c804:	1914983a 	sll	r10,r3,r4
   1c808:	8890d83a 	srl	r8,r17,r2
   1c80c:	8908983a 	sll	r4,r17,r4
   1c810:	1884d83a 	srl	r2,r3,r2
   1c814:	5222b03a 	or	r17,r10,r8
   1c818:	2006c03a 	cmpne	r3,r4,zero
   1c81c:	88e2b03a 	or	r17,r17,r3
   1c820:	3463c83a 	sub	r17,r6,r17
   1c824:	2885c83a 	sub	r2,r5,r2
   1c828:	344d803a 	cmpltu	r6,r6,r17
   1c82c:	1187c83a 	sub	r3,r2,r6
   1c830:	4821883a 	mov	r16,r9
   1c834:	3825883a 	mov	r18,r7
   1c838:	003f2306 	br	1c4c8 <_gp+0xffff639c>
   1c83c:	24d0b03a 	or	r8,r4,r19
   1c840:	40001b1e 	bne	r8,zero,1c8b0 <__subdf3+0x560>
   1c844:	0005883a 	mov	r2,zero
   1c848:	0009883a 	mov	r4,zero
   1c84c:	0021883a 	mov	r16,zero
   1c850:	003f4906 	br	1c578 <_gp+0xffff644c>
   1c854:	010007c4 	movi	r4,31
   1c858:	20803a16 	blt	r4,r2,1c944 <__subdf3+0x5f4>
   1c85c:	01000804 	movi	r4,32
   1c860:	2089c83a 	sub	r4,r4,r2
   1c864:	2912983a 	sll	r9,r5,r4
   1c868:	3090d83a 	srl	r8,r6,r2
   1c86c:	3108983a 	sll	r4,r6,r4
   1c870:	2884d83a 	srl	r2,r5,r2
   1c874:	4a12b03a 	or	r9,r9,r8
   1c878:	2008c03a 	cmpne	r4,r4,zero
   1c87c:	4912b03a 	or	r9,r9,r4
   1c880:	003f4e06 	br	1c5bc <_gp+0xffff6490>
   1c884:	1c48b03a 	or	r4,r3,r17
   1c888:	20003c26 	beq	r4,zero,1c97c <__subdf3+0x62c>
   1c88c:	0084303a 	nor	r2,zero,r2
   1c890:	1000381e 	bne	r2,zero,1c974 <__subdf3+0x624>
   1c894:	3463c83a 	sub	r17,r6,r17
   1c898:	28c5c83a 	sub	r2,r5,r3
   1c89c:	344d803a 	cmpltu	r6,r6,r17
   1c8a0:	1187c83a 	sub	r3,r2,r6
   1c8a4:	4821883a 	mov	r16,r9
   1c8a8:	3825883a 	mov	r18,r7
   1c8ac:	003f0606 	br	1c4c8 <_gp+0xffff639c>
   1c8b0:	2023883a 	mov	r17,r4
   1c8b4:	003f0906 	br	1c4dc <_gp+0xffff63b0>
   1c8b8:	0101ffc4 	movi	r4,2047
   1c8bc:	813f3a1e 	bne	r16,r4,1c5a8 <_gp+0xffff647c>
   1c8c0:	003ec406 	br	1c3d4 <_gp+0xffff62a8>
   1c8c4:	0005883a 	mov	r2,zero
   1c8c8:	003fb106 	br	1c790 <_gp+0xffff6664>
   1c8cc:	0005883a 	mov	r2,zero
   1c8d0:	003fbc06 	br	1c7c4 <_gp+0xffff6698>
   1c8d4:	1c44b03a 	or	r2,r3,r17
   1c8d8:	80008e1e 	bne	r16,zero,1cb14 <__subdf3+0x7c4>
   1c8dc:	1000c826 	beq	r2,zero,1cc00 <__subdf3+0x8b0>
   1c8e0:	2984b03a 	or	r2,r5,r6
   1c8e4:	103ebb26 	beq	r2,zero,1c3d4 <_gp+0xffff62a8>
   1c8e8:	8989883a 	add	r4,r17,r6
   1c8ec:	1945883a 	add	r2,r3,r5
   1c8f0:	2447803a 	cmpltu	r3,r4,r17
   1c8f4:	1887883a 	add	r3,r3,r2
   1c8f8:	1880202c 	andhi	r2,r3,128
   1c8fc:	2023883a 	mov	r17,r4
   1c900:	103f1626 	beq	r2,zero,1c55c <_gp+0xffff6430>
   1c904:	00bfe034 	movhi	r2,65408
   1c908:	10bfffc4 	addi	r2,r2,-1
   1c90c:	5021883a 	mov	r16,r10
   1c910:	1886703a 	and	r3,r3,r2
   1c914:	003eaf06 	br	1c3d4 <_gp+0xffff62a8>
   1c918:	3825883a 	mov	r18,r7
   1c91c:	003f0f06 	br	1c55c <_gp+0xffff6430>
   1c920:	1c44b03a 	or	r2,r3,r17
   1c924:	8000251e 	bne	r16,zero,1c9bc <__subdf3+0x66c>
   1c928:	1000661e 	bne	r2,zero,1cac4 <__subdf3+0x774>
   1c92c:	2990b03a 	or	r8,r5,r6
   1c930:	40009626 	beq	r8,zero,1cb8c <__subdf3+0x83c>
   1c934:	2807883a 	mov	r3,r5
   1c938:	3023883a 	mov	r17,r6
   1c93c:	3825883a 	mov	r18,r7
   1c940:	003ea406 	br	1c3d4 <_gp+0xffff62a8>
   1c944:	127ff804 	addi	r9,r2,-32
   1c948:	01000804 	movi	r4,32
   1c94c:	2a52d83a 	srl	r9,r5,r9
   1c950:	11008c26 	beq	r2,r4,1cb84 <__subdf3+0x834>
   1c954:	01001004 	movi	r4,64
   1c958:	2085c83a 	sub	r2,r4,r2
   1c95c:	2884983a 	sll	r2,r5,r2
   1c960:	118cb03a 	or	r6,r2,r6
   1c964:	300cc03a 	cmpne	r6,r6,zero
   1c968:	4992b03a 	or	r9,r9,r6
   1c96c:	0005883a 	mov	r2,zero
   1c970:	003f1206 	br	1c5bc <_gp+0xffff6490>
   1c974:	0101ffc4 	movi	r4,2047
   1c978:	493f9c1e 	bne	r9,r4,1c7ec <_gp+0xffff66c0>
   1c97c:	2807883a 	mov	r3,r5
   1c980:	3023883a 	mov	r17,r6
   1c984:	4821883a 	mov	r16,r9
   1c988:	3825883a 	mov	r18,r7
   1c98c:	003e9106 	br	1c3d4 <_gp+0xffff62a8>
   1c990:	80001f1e 	bne	r16,zero,1ca10 <__subdf3+0x6c0>
   1c994:	1c48b03a 	or	r4,r3,r17
   1c998:	20005a26 	beq	r4,zero,1cb04 <__subdf3+0x7b4>
   1c99c:	0084303a 	nor	r2,zero,r2
   1c9a0:	1000561e 	bne	r2,zero,1cafc <__subdf3+0x7ac>
   1c9a4:	89a3883a 	add	r17,r17,r6
   1c9a8:	1945883a 	add	r2,r3,r5
   1c9ac:	898d803a 	cmpltu	r6,r17,r6
   1c9b0:	3087883a 	add	r3,r6,r2
   1c9b4:	4821883a 	mov	r16,r9
   1c9b8:	003f0506 	br	1c5d0 <_gp+0xffff64a4>
   1c9bc:	10002b1e 	bne	r2,zero,1ca6c <__subdf3+0x71c>
   1c9c0:	2984b03a 	or	r2,r5,r6
   1c9c4:	10008026 	beq	r2,zero,1cbc8 <__subdf3+0x878>
   1c9c8:	2807883a 	mov	r3,r5
   1c9cc:	3023883a 	mov	r17,r6
   1c9d0:	3825883a 	mov	r18,r7
   1c9d4:	0401ffc4 	movi	r16,2047
   1c9d8:	003e7e06 	br	1c3d4 <_gp+0xffff62a8>
   1c9dc:	3809883a 	mov	r4,r7
   1c9e0:	0011883a 	mov	r8,zero
   1c9e4:	0005883a 	mov	r2,zero
   1c9e8:	003ee306 	br	1c578 <_gp+0xffff644c>
   1c9ec:	1c62b03a 	or	r17,r3,r17
   1c9f0:	8822c03a 	cmpne	r17,r17,zero
   1c9f4:	0005883a 	mov	r2,zero
   1c9f8:	003f8906 	br	1c820 <_gp+0xffff66f4>
   1c9fc:	3809883a 	mov	r4,r7
   1ca00:	4821883a 	mov	r16,r9
   1ca04:	0011883a 	mov	r8,zero
   1ca08:	0005883a 	mov	r2,zero
   1ca0c:	003eda06 	br	1c578 <_gp+0xffff644c>
   1ca10:	0101ffc4 	movi	r4,2047
   1ca14:	49003b26 	beq	r9,r4,1cb04 <__subdf3+0x7b4>
   1ca18:	0085c83a 	sub	r2,zero,r2
   1ca1c:	18c02034 	orhi	r3,r3,128
   1ca20:	01000e04 	movi	r4,56
   1ca24:	20806e16 	blt	r4,r2,1cbe0 <__subdf3+0x890>
   1ca28:	010007c4 	movi	r4,31
   1ca2c:	20807716 	blt	r4,r2,1cc0c <__subdf3+0x8bc>
   1ca30:	01000804 	movi	r4,32
   1ca34:	2089c83a 	sub	r4,r4,r2
   1ca38:	1914983a 	sll	r10,r3,r4
   1ca3c:	8890d83a 	srl	r8,r17,r2
   1ca40:	8908983a 	sll	r4,r17,r4
   1ca44:	1884d83a 	srl	r2,r3,r2
   1ca48:	5222b03a 	or	r17,r10,r8
   1ca4c:	2006c03a 	cmpne	r3,r4,zero
   1ca50:	88e2b03a 	or	r17,r17,r3
   1ca54:	89a3883a 	add	r17,r17,r6
   1ca58:	1145883a 	add	r2,r2,r5
   1ca5c:	898d803a 	cmpltu	r6,r17,r6
   1ca60:	3087883a 	add	r3,r6,r2
   1ca64:	4821883a 	mov	r16,r9
   1ca68:	003ed906 	br	1c5d0 <_gp+0xffff64a4>
   1ca6c:	2984b03a 	or	r2,r5,r6
   1ca70:	10004226 	beq	r2,zero,1cb7c <__subdf3+0x82c>
   1ca74:	1808d0fa 	srli	r4,r3,3
   1ca78:	8822d0fa 	srli	r17,r17,3
   1ca7c:	1806977a 	slli	r3,r3,29
   1ca80:	2080022c 	andhi	r2,r4,8
   1ca84:	1c62b03a 	or	r17,r3,r17
   1ca88:	10000826 	beq	r2,zero,1caac <__subdf3+0x75c>
   1ca8c:	2812d0fa 	srli	r9,r5,3
   1ca90:	4880022c 	andhi	r2,r9,8
   1ca94:	1000051e 	bne	r2,zero,1caac <__subdf3+0x75c>
   1ca98:	300cd0fa 	srli	r6,r6,3
   1ca9c:	2804977a 	slli	r2,r5,29
   1caa0:	4809883a 	mov	r4,r9
   1caa4:	3825883a 	mov	r18,r7
   1caa8:	11a2b03a 	or	r17,r2,r6
   1caac:	8806d77a 	srli	r3,r17,29
   1cab0:	200890fa 	slli	r4,r4,3
   1cab4:	882290fa 	slli	r17,r17,3
   1cab8:	0401ffc4 	movi	r16,2047
   1cabc:	1906b03a 	or	r3,r3,r4
   1cac0:	003e4406 	br	1c3d4 <_gp+0xffff62a8>
   1cac4:	2984b03a 	or	r2,r5,r6
   1cac8:	103e4226 	beq	r2,zero,1c3d4 <_gp+0xffff62a8>
   1cacc:	8989c83a 	sub	r4,r17,r6
   1cad0:	8911803a 	cmpltu	r8,r17,r4
   1cad4:	1945c83a 	sub	r2,r3,r5
   1cad8:	1205c83a 	sub	r2,r2,r8
   1cadc:	1200202c 	andhi	r8,r2,128
   1cae0:	403e9a26 	beq	r8,zero,1c54c <_gp+0xffff6420>
   1cae4:	3463c83a 	sub	r17,r6,r17
   1cae8:	28c5c83a 	sub	r2,r5,r3
   1caec:	344d803a 	cmpltu	r6,r6,r17
   1caf0:	1187c83a 	sub	r3,r2,r6
   1caf4:	3825883a 	mov	r18,r7
   1caf8:	003e3606 	br	1c3d4 <_gp+0xffff62a8>
   1cafc:	0101ffc4 	movi	r4,2047
   1cb00:	493fc71e 	bne	r9,r4,1ca20 <_gp+0xffff68f4>
   1cb04:	2807883a 	mov	r3,r5
   1cb08:	3023883a 	mov	r17,r6
   1cb0c:	4821883a 	mov	r16,r9
   1cb10:	003e3006 	br	1c3d4 <_gp+0xffff62a8>
   1cb14:	10003626 	beq	r2,zero,1cbf0 <__subdf3+0x8a0>
   1cb18:	2984b03a 	or	r2,r5,r6
   1cb1c:	10001726 	beq	r2,zero,1cb7c <__subdf3+0x82c>
   1cb20:	1808d0fa 	srli	r4,r3,3
   1cb24:	8822d0fa 	srli	r17,r17,3
   1cb28:	1806977a 	slli	r3,r3,29
   1cb2c:	2080022c 	andhi	r2,r4,8
   1cb30:	1c62b03a 	or	r17,r3,r17
   1cb34:	10000726 	beq	r2,zero,1cb54 <__subdf3+0x804>
   1cb38:	2812d0fa 	srli	r9,r5,3
   1cb3c:	4880022c 	andhi	r2,r9,8
   1cb40:	1000041e 	bne	r2,zero,1cb54 <__subdf3+0x804>
   1cb44:	300cd0fa 	srli	r6,r6,3
   1cb48:	2804977a 	slli	r2,r5,29
   1cb4c:	4809883a 	mov	r4,r9
   1cb50:	11a2b03a 	or	r17,r2,r6
   1cb54:	8806d77a 	srli	r3,r17,29
   1cb58:	200890fa 	slli	r4,r4,3
   1cb5c:	882290fa 	slli	r17,r17,3
   1cb60:	3825883a 	mov	r18,r7
   1cb64:	1906b03a 	or	r3,r3,r4
   1cb68:	0401ffc4 	movi	r16,2047
   1cb6c:	003e1906 	br	1c3d4 <_gp+0xffff62a8>
   1cb70:	000b883a 	mov	r5,zero
   1cb74:	0005883a 	mov	r2,zero
   1cb78:	003e2e06 	br	1c434 <_gp+0xffff6308>
   1cb7c:	0401ffc4 	movi	r16,2047
   1cb80:	003e1406 	br	1c3d4 <_gp+0xffff62a8>
   1cb84:	0005883a 	mov	r2,zero
   1cb88:	003f7506 	br	1c960 <_gp+0xffff6834>
   1cb8c:	0005883a 	mov	r2,zero
   1cb90:	0009883a 	mov	r4,zero
   1cb94:	003e7806 	br	1c578 <_gp+0xffff644c>
   1cb98:	123ff804 	addi	r8,r2,-32
   1cb9c:	01000804 	movi	r4,32
   1cba0:	1a10d83a 	srl	r8,r3,r8
   1cba4:	11002526 	beq	r2,r4,1cc3c <__subdf3+0x8ec>
   1cba8:	01001004 	movi	r4,64
   1cbac:	2085c83a 	sub	r2,r4,r2
   1cbb0:	1884983a 	sll	r2,r3,r2
   1cbb4:	1444b03a 	or	r2,r2,r17
   1cbb8:	1004c03a 	cmpne	r2,r2,zero
   1cbbc:	40a2b03a 	or	r17,r8,r2
   1cbc0:	0005883a 	mov	r2,zero
   1cbc4:	003f1606 	br	1c820 <_gp+0xffff66f4>
   1cbc8:	02000434 	movhi	r8,16
   1cbcc:	0009883a 	mov	r4,zero
   1cbd0:	423fffc4 	addi	r8,r8,-1
   1cbd4:	00bfffc4 	movi	r2,-1
   1cbd8:	0401ffc4 	movi	r16,2047
   1cbdc:	003e6606 	br	1c578 <_gp+0xffff644c>
   1cbe0:	1c62b03a 	or	r17,r3,r17
   1cbe4:	8822c03a 	cmpne	r17,r17,zero
   1cbe8:	0005883a 	mov	r2,zero
   1cbec:	003f9906 	br	1ca54 <_gp+0xffff6928>
   1cbf0:	2807883a 	mov	r3,r5
   1cbf4:	3023883a 	mov	r17,r6
   1cbf8:	0401ffc4 	movi	r16,2047
   1cbfc:	003df506 	br	1c3d4 <_gp+0xffff62a8>
   1cc00:	2807883a 	mov	r3,r5
   1cc04:	3023883a 	mov	r17,r6
   1cc08:	003df206 	br	1c3d4 <_gp+0xffff62a8>
   1cc0c:	123ff804 	addi	r8,r2,-32
   1cc10:	01000804 	movi	r4,32
   1cc14:	1a10d83a 	srl	r8,r3,r8
   1cc18:	11000a26 	beq	r2,r4,1cc44 <__subdf3+0x8f4>
   1cc1c:	01001004 	movi	r4,64
   1cc20:	2085c83a 	sub	r2,r4,r2
   1cc24:	1884983a 	sll	r2,r3,r2
   1cc28:	1444b03a 	or	r2,r2,r17
   1cc2c:	1004c03a 	cmpne	r2,r2,zero
   1cc30:	40a2b03a 	or	r17,r8,r2
   1cc34:	0005883a 	mov	r2,zero
   1cc38:	003f8606 	br	1ca54 <_gp+0xffff6928>
   1cc3c:	0005883a 	mov	r2,zero
   1cc40:	003fdc06 	br	1cbb4 <_gp+0xffff6a88>
   1cc44:	0005883a 	mov	r2,zero
   1cc48:	003ff706 	br	1cc28 <_gp+0xffff6afc>

0001cc4c <__floatunsidf>:
   1cc4c:	defffe04 	addi	sp,sp,-8
   1cc50:	dc000015 	stw	r16,0(sp)
   1cc54:	dfc00115 	stw	ra,4(sp)
   1cc58:	2021883a 	mov	r16,r4
   1cc5c:	20002226 	beq	r4,zero,1cce8 <__floatunsidf+0x9c>
   1cc60:	00122640 	call	12264 <__clzsi2>
   1cc64:	01010784 	movi	r4,1054
   1cc68:	2089c83a 	sub	r4,r4,r2
   1cc6c:	01810cc4 	movi	r6,1075
   1cc70:	310dc83a 	sub	r6,r6,r4
   1cc74:	00c007c4 	movi	r3,31
   1cc78:	1980120e 	bge	r3,r6,1ccc4 <__floatunsidf+0x78>
   1cc7c:	00c104c4 	movi	r3,1043
   1cc80:	1907c83a 	sub	r3,r3,r4
   1cc84:	80ca983a 	sll	r5,r16,r3
   1cc88:	00800434 	movhi	r2,16
   1cc8c:	10bfffc4 	addi	r2,r2,-1
   1cc90:	2101ffcc 	andi	r4,r4,2047
   1cc94:	0021883a 	mov	r16,zero
   1cc98:	288a703a 	and	r5,r5,r2
   1cc9c:	2008953a 	slli	r4,r4,20
   1cca0:	00c00434 	movhi	r3,16
   1cca4:	18ffffc4 	addi	r3,r3,-1
   1cca8:	28c6703a 	and	r3,r5,r3
   1ccac:	8005883a 	mov	r2,r16
   1ccb0:	1906b03a 	or	r3,r3,r4
   1ccb4:	dfc00117 	ldw	ra,4(sp)
   1ccb8:	dc000017 	ldw	r16,0(sp)
   1ccbc:	dec00204 	addi	sp,sp,8
   1ccc0:	f800283a 	ret
   1ccc4:	00c002c4 	movi	r3,11
   1ccc8:	188bc83a 	sub	r5,r3,r2
   1cccc:	814ad83a 	srl	r5,r16,r5
   1ccd0:	00c00434 	movhi	r3,16
   1ccd4:	18ffffc4 	addi	r3,r3,-1
   1ccd8:	81a0983a 	sll	r16,r16,r6
   1ccdc:	2101ffcc 	andi	r4,r4,2047
   1cce0:	28ca703a 	and	r5,r5,r3
   1cce4:	003fed06 	br	1cc9c <_gp+0xffff6b70>
   1cce8:	0009883a 	mov	r4,zero
   1ccec:	000b883a 	mov	r5,zero
   1ccf0:	003fea06 	br	1cc9c <_gp+0xffff6b70>

0001ccf4 <alt_getchar>:
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
   1ccf4:	008000b4 	movhi	r2,2
   1ccf8:	10b83504 	addi	r2,r2,-7980
   1ccfc:	11c00217 	ldw	r7,8(r2)
 * Uses the ALT_DRIVER_READ() macro to call directly to driver if available.
 * Otherwise, uses newlib provided getchar() routine.
 */
int 
alt_getchar(void)
{
   1cd00:	defffe04 	addi	sp,sp,-8
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
   1cd04:	010000b4 	movhi	r4,2
   1cd08:	01800044 	movi	r6,1
   1cd0c:	d80b883a 	mov	r5,sp
   1cd10:	21385404 	addi	r4,r4,-7856
 * Uses the ALT_DRIVER_READ() macro to call directly to driver if available.
 * Otherwise, uses newlib provided getchar() routine.
 */
int 
alt_getchar(void)
{
   1cd14:	dfc00115 	stw	ra,4(sp)
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
   1cd18:	001cfbc0 	call	1cfbc <altera_avalon_jtag_uart_read>
   1cd1c:	0080020e 	bge	zero,r2,1cd28 <alt_getchar+0x34>
        return -1;
    }
    return c;
   1cd20:	d8800007 	ldb	r2,0(sp)
   1cd24:	00000106 	br	1cd2c <alt_getchar+0x38>
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
        return -1;
   1cd28:	00bfffc4 	movi	r2,-1
    return c;
#else
    return getchar();
#endif
#endif
}
   1cd2c:	dfc00117 	ldw	ra,4(sp)
   1cd30:	dec00204 	addi	sp,sp,8
   1cd34:	f800283a 	ret

0001cd38 <alt_irq_register>:
                      alt_isr_func handler)
{
  int rc = -EINVAL;  
  alt_irq_context status;

  if (id < ALT_NIRQ)
   1cd38:	008007c4 	movi	r2,31
   1cd3c:	11002136 	bltu	r2,r4,1cdc4 <alt_irq_register+0x8c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1cd40:	000f303a 	rdctl	r7,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1cd44:	00ffff84 	movi	r3,-2
   1cd48:	38c4703a 	and	r2,r7,r3
   1cd4c:	1001703a 	wrctl	status,r2
     * state.
     */

    status = alt_irq_disable_all ();

    alt_irq[id].handler = handler;
   1cd50:	200490fa 	slli	r2,r4,3
   1cd54:	020000b4 	movhi	r8,2
   1cd58:	423bac04 	addi	r8,r8,-4432
   1cd5c:	4085883a 	add	r2,r8,r2
   1cd60:	11800015 	stw	r6,0(r2)
    alt_irq[id].context = context;
   1cd64:	11400115 	stw	r5,4(r2)
   1cd68:	00800044 	movi	r2,1

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   1cd6c:	30000726 	beq	r6,zero,1cd8c <alt_irq_register+0x54>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1cd70:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1cd74:	28c6703a 	and	r3,r5,r3
   1cd78:	1801703a 	wrctl	status,r3
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active |= (1 << id);
   1cd7c:	d0e28617 	ldw	r3,-30184(gp)
   1cd80:	1104983a 	sll	r2,r2,r4
   1cd84:	10c4b03a 	or	r2,r2,r3
   1cd88:	00000706 	br	1cda8 <alt_irq_register+0x70>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1cd8c:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1cd90:	28c6703a 	and	r3,r5,r3
   1cd94:	1801703a 	wrctl	status,r3
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active &= ~(1 << id);
   1cd98:	1104983a 	sll	r2,r2,r4
   1cd9c:	d0e28617 	ldw	r3,-30184(gp)
   1cda0:	0084303a 	nor	r2,zero,r2
   1cda4:	10c4703a 	and	r2,r2,r3
   1cda8:	d0a28615 	stw	r2,-30184(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   1cdac:	d0a28617 	ldw	r2,-30184(gp)
   1cdb0:	100170fa 	wrctl	ienable,r2
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1cdb4:	2801703a 	wrctl	status,r5
   1cdb8:	3801703a 	wrctl	status,r7
   1cdbc:	0005883a 	mov	r2,zero
   1cdc0:	f800283a 	ret
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
  int rc = -EINVAL;  
   1cdc4:	00bffa84 	movi	r2,-22
    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);

    alt_irq_enable_all(status);
  }
  return rc; 
}
   1cdc8:	f800283a 	ret

0001cdcc <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   1cdcc:	deffff04 	addi	sp,sp,-4
   1cdd0:	010000b4 	movhi	r4,2
   1cdd4:	014000b4 	movhi	r5,2
   1cdd8:	dfc00015 	stw	ra,0(sp)
   1cddc:	21360104 	addi	r4,r4,-10236
   1cde0:	29785d04 	addi	r5,r5,-7820

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   1cde4:	2140061e 	bne	r4,r5,1ce00 <alt_load+0x34>
   1cde8:	01000074 	movhi	r4,1
   1cdec:	01400074 	movhi	r5,1
   1cdf0:	21000804 	addi	r4,r4,32
   1cdf4:	29400804 	addi	r5,r5,32
   1cdf8:	2140121e 	bne	r4,r5,1ce44 <alt_load+0x78>
   1cdfc:	00000b06 	br	1ce2c <alt_load+0x60>
   1ce00:	00c000b4 	movhi	r3,2
   1ce04:	18f85d04 	addi	r3,r3,-7820
   1ce08:	1907c83a 	sub	r3,r3,r4
   1ce0c:	0005883a 	mov	r2,zero
  {
    while( to != end )
   1ce10:	10fff526 	beq	r2,r3,1cde8 <_gp+0xffff6cbc>
    {
      *to++ = *from++;
   1ce14:	114f883a 	add	r7,r2,r5
   1ce18:	39c00017 	ldw	r7,0(r7)
   1ce1c:	110d883a 	add	r6,r2,r4
   1ce20:	10800104 	addi	r2,r2,4
   1ce24:	31c00015 	stw	r7,0(r6)
   1ce28:	003ff906 	br	1ce10 <_gp+0xffff6ce4>
   1ce2c:	010000b4 	movhi	r4,2
   1ce30:	014000b4 	movhi	r5,2
   1ce34:	21351a04 	addi	r4,r4,-11160
   1ce38:	29751a04 	addi	r5,r5,-11160

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   1ce3c:	2140101e 	bne	r4,r5,1ce80 <alt_load+0xb4>
   1ce40:	00000b06 	br	1ce70 <alt_load+0xa4>
   1ce44:	00c00074 	movhi	r3,1
   1ce48:	18c06004 	addi	r3,r3,384
   1ce4c:	1907c83a 	sub	r3,r3,r4
   1ce50:	0005883a 	mov	r2,zero
  {
    while( to != end )
   1ce54:	10fff526 	beq	r2,r3,1ce2c <_gp+0xffff6d00>
    {
      *to++ = *from++;
   1ce58:	114f883a 	add	r7,r2,r5
   1ce5c:	39c00017 	ldw	r7,0(r7)
   1ce60:	110d883a 	add	r6,r2,r4
   1ce64:	10800104 	addi	r2,r2,4
   1ce68:	31c00015 	stw	r7,0(r6)
   1ce6c:	003ff906 	br	1ce54 <_gp+0xffff6d28>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   1ce70:	001d2100 	call	1d210 <alt_dcache_flush_all>
  alt_icache_flush_all();
}
   1ce74:	dfc00017 	ldw	ra,0(sp)
   1ce78:	dec00104 	addi	sp,sp,4
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  alt_icache_flush_all();
   1ce7c:	001d2fc1 	jmpi	1d2fc <alt_icache_flush_all>
   1ce80:	00c000b4 	movhi	r3,2
   1ce84:	18f60104 	addi	r3,r3,-10236
   1ce88:	1907c83a 	sub	r3,r3,r4

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   1ce8c:	0005883a 	mov	r2,zero
  {
    while( to != end )
   1ce90:	18bff726 	beq	r3,r2,1ce70 <_gp+0xffff6d44>
    {
      *to++ = *from++;
   1ce94:	114f883a 	add	r7,r2,r5
   1ce98:	39c00017 	ldw	r7,0(r7)
   1ce9c:	110d883a 	add	r6,r2,r4
   1cea0:	10800104 	addi	r2,r2,4
   1cea4:	31c00015 	stw	r7,0(r6)
   1cea8:	003ff906 	br	1ce90 <_gp+0xffff6d64>

0001ceac <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   1ceac:	deffff04 	addi	sp,sp,-4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   1ceb0:	0009883a 	mov	r4,zero
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   1ceb4:	dfc00015 	stw	ra,0(sp)
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   1ceb8:	001cf640 	call	1cf64 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   1cebc:	001cf840 	call	1cf84 <alt_sys_init>
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
   1cec0:	d1a28717 	ldw	r6,-30180(gp)
   1cec4:	d1628817 	ldw	r5,-30176(gp)
   1cec8:	d1228917 	ldw	r4,-30172(gp)
  close(STDOUT_FILENO);
  exit (result);
#endif

  ALT_LOG_PRINT_BOOT("[alt_main.c] After main - we should not be here?.\r\n");
}
   1cecc:	dfc00017 	ldw	ra,0(sp)
   1ced0:	dec00104 	addi	sp,sp,4
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
   1ced4:	00109d81 	jmpi	109d8 <main>

0001ced8 <__malloc_lock>:
   1ced8:	f800283a 	ret

0001cedc <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   1cedc:	f800283a 	ret

0001cee0 <alt_putstr>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided fputs() routine.
 */
int 
alt_putstr(const char* str)
{
   1cee0:	defffe04 	addi	sp,sp,-8
   1cee4:	dc000015 	stw	r16,0(sp)
   1cee8:	dfc00115 	stw	ra,4(sp)
   1ceec:	2021883a 	mov	r16,r4
#ifdef ALT_SEMIHOSTING
    return write(STDOUT_FILENO,str,strlen(str));
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
   1cef0:	0018dc40 	call	18dc4 <strlen>
   1cef4:	010000b4 	movhi	r4,2
   1cef8:	000f883a 	mov	r7,zero
   1cefc:	100d883a 	mov	r6,r2
   1cf00:	800b883a 	mov	r5,r16
   1cf04:	21385404 	addi	r4,r4,-7856
#else
    return fputs(str, stdout);
#endif
#endif
}
   1cf08:	dfc00117 	ldw	ra,4(sp)
   1cf0c:	dc000017 	ldw	r16,0(sp)
   1cf10:	dec00204 	addi	sp,sp,8
#ifdef ALT_SEMIHOSTING
    return write(STDOUT_FILENO,str,strlen(str));
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
   1cf14:	001d0181 	jmpi	1d018 <altera_avalon_jtag_uart_write>

0001cf18 <sbrk>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1cf18:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1cf1c:	00bfff84 	movi	r2,-2
   1cf20:	2884703a 	and	r2,r5,r2
   1cf24:	1001703a 	wrctl	status,r2
  char *prev_heap_end; 

  context = alt_irq_disable_all();

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   1cf28:	d0a00817 	ldw	r2,-32736(gp)
   1cf2c:	00ffff04 	movi	r3,-4
   1cf30:	108000c4 	addi	r2,r2,3
   1cf34:	10c4703a 	and	r2,r2,r3
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   1cf38:	00c000b4 	movhi	r3,2
  char *prev_heap_end; 

  context = alt_irq_disable_all();

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   1cf3c:	d0a00815 	stw	r2,-32736(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   1cf40:	1109883a 	add	r4,r2,r4
   1cf44:	18c00004 	addi	r3,r3,0
   1cf48:	1900032e 	bgeu	r3,r4,1cf58 <sbrk+0x40>
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1cf4c:	2801703a 	wrctl	status,r5
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   1cf50:	00bfffc4 	movi	r2,-1
   1cf54:	f800283a 	ret
  }
#endif

  prev_heap_end = heap_end; 
  heap_end += incr; 
   1cf58:	d1200815 	stw	r4,-32736(gp)
   1cf5c:	2801703a 	wrctl	status,r5
#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
} 
   1cf60:	f800283a 	ret

0001cf64 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   1cf64:	deffff04 	addi	sp,sp,-4
   1cf68:	dfc00015 	stw	ra,0(sp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
   1cf6c:	001d3ec0 	call	1d3ec <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   1cf70:	00800044 	movi	r2,1
   1cf74:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   1cf78:	dfc00017 	ldw	ra,0(sp)
   1cf7c:	dec00104 	addi	sp,sp,4
   1cf80:	f800283a 	ret

0001cf84 <alt_sys_init>:
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   1cf84:	010000b4 	movhi	r4,2
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   1cf88:	deffff04 	addi	sp,sp,-4
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   1cf8c:	01c0fa04 	movi	r7,1000
   1cf90:	01800084 	movi	r6,2
   1cf94:	000b883a 	mov	r5,zero
   1cf98:	21040004 	addi	r4,r4,4096
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   1cf9c:	dfc00015 	stw	ra,0(sp)
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   1cfa0:	001d0880 	call	1d088 <alt_avalon_timer_sc_init>

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   1cfa4:	010000b4 	movhi	r4,2
   1cfa8:	d1600b04 	addi	r5,gp,-32724
   1cfac:	21382a04 	addi	r4,r4,-8024
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
    ALTERA_UP_AVALON_ACCELEROMETER_SPI_INIT ( ACCELEROMETER_SPI, accelerometer_spi);
}
   1cfb0:	dfc00017 	ldw	ra,0(sp)
   1cfb4:	dec00104 	addi	sp,sp,4
   1cfb8:	001d21c1 	jmpi	1d21c <alt_dev_llist_insert>

0001cfbc <altera_avalon_jtag_uart_read>:

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char* buffer, int space, int flags)
{
  unsigned int base = sp->base;
   1cfbc:	21000017 	ldw	r4,0(r4)

  char * ptr = buffer;
  char * end = buffer + space;
   1cfc0:	298d883a 	add	r6,r5,r6

  while (ptr < end)
   1cfc4:	2805883a 	mov	r2,r5

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    else if (ptr != buffer)
      break;
    else if(flags & O_NONBLOCK)
   1cfc8:	3a10000c 	andi	r8,r7,16384
  unsigned int base = sp->base;

  char * ptr = buffer;
  char * end = buffer + space;

  while (ptr < end)
   1cfcc:	11800b2e 	bgeu	r2,r6,1cffc <altera_avalon_jtag_uart_read+0x40>
  {
    unsigned int data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   1cfd0:	20c00037 	ldwio	r3,0(r4)

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
   1cfd4:	1a60000c 	andi	r9,r3,32768
   1cfd8:	48000326 	beq	r9,zero,1cfe8 <altera_avalon_jtag_uart_read+0x2c>
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   1cfdc:	10c00005 	stb	r3,0(r2)
   1cfe0:	10800044 	addi	r2,r2,1
   1cfe4:	003ff906 	br	1cfcc <_gp+0xffff6ea0>
    else if (ptr != buffer)
   1cfe8:	11400226 	beq	r2,r5,1cff4 <altera_avalon_jtag_uart_read+0x38>
      break;   
    
  }

  if (ptr != buffer)
    return ptr - buffer;
   1cfec:	1145c83a 	sub	r2,r2,r5
   1cff0:	f800283a 	ret

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    else if (ptr != buffer)
      break;
    else if(flags & O_NONBLOCK)
   1cff4:	403ff526 	beq	r8,zero,1cfcc <_gp+0xffff6ea0>
   1cff8:	00000106 	br	1d000 <altera_avalon_jtag_uart_read+0x44>
      break;   
    
  }

  if (ptr != buffer)
   1cffc:	117ffb1e 	bne	r2,r5,1cfec <_gp+0xffff6ec0>
    return ptr - buffer;
  else if (flags & O_NONBLOCK)
   1d000:	39d0000c 	andi	r7,r7,16384
   1d004:	3800021e 	bne	r7,zero,1d010 <altera_avalon_jtag_uart_read+0x54>
    return -EWOULDBLOCK;
  else
    return -EIO;
   1d008:	00bffec4 	movi	r2,-5
   1d00c:	f800283a 	ret
  }

  if (ptr != buffer)
    return ptr - buffer;
  else if (flags & O_NONBLOCK)
    return -EWOULDBLOCK;
   1d010:	00bffd44 	movi	r2,-11
  else
    return -EIO;
}
   1d014:	f800283a 	ret

0001d018 <altera_avalon_jtag_uart_write>:
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  unsigned int base = sp->base;
   1d018:	21000017 	ldw	r4,0(r4)
 * one FIFOs worth of data.  But you said you didn't want to use interrupts :-)
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   1d01c:	3005883a 	mov	r2,r6
  unsigned int base = sp->base;

  const char * end = ptr + count;
   1d020:	298d883a 	add	r6,r5,r6

  while (ptr < end)
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
   1d024:	21c00104 	addi	r7,r4,4
{
  unsigned int base = sp->base;

  const char * end = ptr + count;

  while (ptr < end)
   1d028:	2980072e 	bgeu	r5,r6,1d048 <altera_avalon_jtag_uart_write+0x30>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
   1d02c:	38c00037 	ldwio	r3,0(r7)
   1d030:	18ffffec 	andhi	r3,r3,65535
   1d034:	183ffc26 	beq	r3,zero,1d028 <_gp+0xffff6efc>
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);
   1d038:	28c00007 	ldb	r3,0(r5)
   1d03c:	20c00035 	stwio	r3,0(r4)
   1d040:	29400044 	addi	r5,r5,1
   1d044:	003ff806 	br	1d028 <_gp+0xffff6efc>

  return count;
}
   1d048:	f800283a 	ret

0001d04c <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   1d04c:	defffe04 	addi	sp,sp,-8
   1d050:	dfc00115 	stw	ra,4(sp)
   1d054:	dc000015 	stw	r16,0(sp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   1d058:	20000035 	stwio	zero,0(r4)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   1d05c:	20800137 	ldwio	r2,4(r4)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1d060:	0021303a 	rdctl	r16,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1d064:	00bfff84 	movi	r2,-2
   1d068:	8084703a 	and	r2,r16,r2
   1d06c:	1001703a 	wrctl	status,r2
  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  alt_tick ();
   1d070:	001d3340 	call	1d334 <alt_tick>
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1d074:	8001703a 	wrctl	status,r16
  alt_irq_enable_all(cpu_sr);
}
   1d078:	dfc00117 	ldw	ra,4(sp)
   1d07c:	dc000017 	ldw	r16,0(sp)
   1d080:	dec00204 	addi	sp,sp,8
   1d084:	f800283a 	ret

0001d088 <alt_avalon_timer_sc_init>:
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   1d088:	d0a28b17 	ldw	r2,-30164(gp)
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   1d08c:	200b883a 	mov	r5,r4
   1d090:	3009883a 	mov	r4,r6
   1d094:	1000011e 	bne	r2,zero,1d09c <alt_avalon_timer_sc_init+0x14>
  {
    _alt_tick_rate = nticks;
   1d098:	d1e28b15 	stw	r7,-30164(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   1d09c:	008001c4 	movi	r2,7
   1d0a0:	28800135 	stwio	r2,4(r5)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
   1d0a4:	018000b4 	movhi	r6,2
   1d0a8:	31b41304 	addi	r6,r6,-12212
   1d0ac:	001cd381 	jmpi	1cd38 <alt_irq_register>

0001d0b0 <alt_up_accelerometer_spi_open_dev>:
{
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_accelerometer_spi_dev *dev = (alt_up_accelerometer_spi_dev*)alt_find_dev(name, &alt_dev_list);
   1d0b0:	d1600b04 	addi	r5,gp,-32724
   1d0b4:	001d2881 	jmpi	1d288 <alt_find_dev>

0001d0b8 <alt_up_accelerometer_spi_read_address_register>:
 * @return 0 for success 
 **/
int alt_up_accelerometer_spi_read_address_register(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 *addr)
{
	// reads data from the device Address register
	*(addr) = IORD_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base); 
   1d0b8:	20800a17 	ldw	r2,40(r4)
   1d0bc:	10800023 	ldbuio	r2,0(r2)
   1d0c0:	28800005 	stb	r2,0(r5)

	return 0;
}
   1d0c4:	0005883a 	mov	r2,zero
   1d0c8:	f800283a 	ret

0001d0cc <alt_up_accelerometer_spi_read>:
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_read(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 *data)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d0cc:	20800a17 	ldw	r2,40(r4)
   1d0d0:	29400fcc 	andi	r5,r5,63
   1d0d4:	11400025 	stbio	r5,0(r2)

	// read data to the device Data register
	*(data) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1d0d8:	20800a17 	ldw	r2,40(r4)
   1d0dc:	10800063 	ldbuio	r2,1(r2)
   1d0e0:	30800005 	stb	r2,0(r6)

	return 0;
}
   1d0e4:	0005883a 	mov	r2,zero
   1d0e8:	f800283a 	ret

0001d0ec <alt_up_accelerometer_spi_write>:
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_write(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 data)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d0ec:	20800a17 	ldw	r2,40(r4)
   1d0f0:	29400fcc 	andi	r5,r5,63
   1d0f4:	11400025 	stbio	r5,0(r2)

	// write data to the device Data register
	IOWR_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base, data & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK); 
   1d0f8:	20800a17 	ldw	r2,40(r4)
   1d0fc:	11800065 	stbio	r6,1(r2)

	return 0;
}
   1d100:	0005883a 	mov	r2,zero
   1d104:	f800283a 	ret

0001d108 <alt_up_accelerometer_spi_read_x_axis>:
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_x_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *x_axis)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d108:	20800a17 	ldw	r2,40(r4)
   1d10c:	00c00c84 	movi	r3,50
   1d110:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1d114:	20800a17 	ldw	r2,40(r4)
   1d118:	10800063 	ldbuio	r2,1(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d11c:	00c00cc4 	movi	r3,51
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1d120:	10803fcc 	andi	r2,r2,255
   1d124:	28800015 	stw	r2,0(r5)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d128:	20800a17 	ldw	r2,40(r4)
   1d12c:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(x_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   1d130:	20800a17 	ldw	r2,40(r4)
   1d134:	10800063 	ldbuio	r2,1(r2)
   1d138:	10803fcc 	andi	r2,r2,255
   1d13c:	1006923a 	slli	r3,r2,8
   1d140:	28800017 	ldw	r2,0(r5)
   1d144:	1885883a 	add	r2,r3,r2

	if (*(x_axis) & 0x00008000)
   1d148:	10e0000c 	andi	r3,r2,32768
   1d14c:	18000126 	beq	r3,zero,1d154 <alt_up_accelerometer_spi_read_x_axis+0x4c>
	{
		*(x_axis) |= 0xFFFF0000;
   1d150:	10bffff4 	orhi	r2,r2,65535
   1d154:	28800015 	stw	r2,0(r5)
	}

	return 0;
}
   1d158:	0005883a 	mov	r2,zero
   1d15c:	f800283a 	ret

0001d160 <alt_up_accelerometer_spi_read_y_axis>:
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_y_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *y_axis)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d160:	20800a17 	ldw	r2,40(r4)
   1d164:	00c00d04 	movi	r3,52
   1d168:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1d16c:	20800a17 	ldw	r2,40(r4)
   1d170:	10800063 	ldbuio	r2,1(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d174:	00c00d44 	movi	r3,53
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1d178:	10803fcc 	andi	r2,r2,255
   1d17c:	28800015 	stw	r2,0(r5)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d180:	20800a17 	ldw	r2,40(r4)
   1d184:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(y_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   1d188:	20800a17 	ldw	r2,40(r4)
   1d18c:	10800063 	ldbuio	r2,1(r2)
   1d190:	10803fcc 	andi	r2,r2,255
   1d194:	1006923a 	slli	r3,r2,8
   1d198:	28800017 	ldw	r2,0(r5)
   1d19c:	1885883a 	add	r2,r3,r2

	if (*(y_axis) & 0x00008000)
   1d1a0:	10e0000c 	andi	r3,r2,32768
   1d1a4:	18000126 	beq	r3,zero,1d1ac <alt_up_accelerometer_spi_read_y_axis+0x4c>
	{
		*(y_axis) |= 0xFFFF0000;
   1d1a8:	10bffff4 	orhi	r2,r2,65535
   1d1ac:	28800015 	stw	r2,0(r5)
	}

	return 0;
}
   1d1b0:	0005883a 	mov	r2,zero
   1d1b4:	f800283a 	ret

0001d1b8 <alt_up_accelerometer_spi_read_z_axis>:
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_z_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *z_axis)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d1b8:	20800a17 	ldw	r2,40(r4)
   1d1bc:	00c00d84 	movi	r3,54
   1d1c0:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1d1c4:	20800a17 	ldw	r2,40(r4)
   1d1c8:	10800063 	ldbuio	r2,1(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d1cc:	00c00dc4 	movi	r3,55
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1d1d0:	10803fcc 	andi	r2,r2,255
   1d1d4:	28800015 	stw	r2,0(r5)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d1d8:	20800a17 	ldw	r2,40(r4)
   1d1dc:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(z_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   1d1e0:	20800a17 	ldw	r2,40(r4)
   1d1e4:	10800063 	ldbuio	r2,1(r2)
   1d1e8:	10803fcc 	andi	r2,r2,255
   1d1ec:	1006923a 	slli	r3,r2,8
   1d1f0:	28800017 	ldw	r2,0(r5)
   1d1f4:	1885883a 	add	r2,r3,r2

	if (*(z_axis) & 0x00008000)
   1d1f8:	10e0000c 	andi	r3,r2,32768
   1d1fc:	18000126 	beq	r3,zero,1d204 <alt_up_accelerometer_spi_read_z_axis+0x4c>
	{
		*(z_axis) |= 0xFFFF0000;
   1d200:	10bffff4 	orhi	r2,r2,65535
   1d204:	28800015 	stw	r2,0(r5)
	}

	return 0;
}
   1d208:	0005883a 	mov	r2,zero
   1d20c:	f800283a 	ret

0001d210 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   1d210:	f800283a 	ret

0001d214 <alt_dev_null_write>:
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  return len;
}
   1d214:	3005883a 	mov	r2,r6
   1d218:	f800283a 	ret

0001d21c <alt_dev_llist_insert>:
{
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   1d21c:	20000226 	beq	r4,zero,1d228 <alt_dev_llist_insert+0xc>
   1d220:	20800217 	ldw	r2,8(r4)
   1d224:	1000101e 	bne	r2,zero,1d268 <alt_dev_llist_insert+0x4c>

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  return ((alt_errno) ? alt_errno() : &errno);
   1d228:	d0a00f17 	ldw	r2,-32708(gp)
   1d22c:	10000926 	beq	r2,zero,1d254 <alt_dev_llist_insert+0x38>
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   1d230:	deffff04 	addi	sp,sp,-4
   1d234:	dfc00015 	stw	ra,0(sp)
   1d238:	103ee83a 	callr	r2
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  {
    ALT_ERRNO = EINVAL;
   1d23c:	00c00584 	movi	r3,22
   1d240:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
   1d244:	00bffa84 	movi	r2,-22
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
}
   1d248:	dfc00017 	ldw	ra,0(sp)
   1d24c:	dec00104 	addi	sp,sp,4
   1d250:	f800283a 	ret
   1d254:	d0a28204 	addi	r2,gp,-30200
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  {
    ALT_ERRNO = EINVAL;
   1d258:	00c00584 	movi	r3,22
   1d25c:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
   1d260:	00bffa84 	movi	r2,-22
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
}
   1d264:	f800283a 	ret

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  entry->next     = list->next;
   1d268:	28800017 	ldw	r2,0(r5)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   1d26c:	21400115 	stw	r5,4(r4)
  entry->next     = list->next;
   1d270:	20800015 	stw	r2,0(r4)

  list->next->previous = entry;
   1d274:	28800017 	ldw	r2,0(r5)
   1d278:	11000115 	stw	r4,4(r2)
  list->next           = entry;
   1d27c:	29000015 	stw	r4,0(r5)
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
   1d280:	0005883a 	mov	r2,zero
   1d284:	f800283a 	ret

0001d288 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   1d288:	defffb04 	addi	sp,sp,-20
   1d28c:	dcc00315 	stw	r19,12(sp)
   1d290:	dc800215 	stw	r18,8(sp)
   1d294:	dc400115 	stw	r17,4(sp)
   1d298:	dc000015 	stw	r16,0(sp)
   1d29c:	dfc00415 	stw	ra,16(sp)
   1d2a0:	2027883a 	mov	r19,r4
   1d2a4:	2823883a 	mov	r17,r5
  alt_dev* next = (alt_dev*) llist->next;
   1d2a8:	2c000017 	ldw	r16,0(r5)
  alt_32 len;

  len  = strlen(name) + 1;
   1d2ac:	0018dc40 	call	18dc4 <strlen>
   1d2b0:	14800044 	addi	r18,r2,1
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   1d2b4:	84400726 	beq	r16,r17,1d2d4 <alt_find_dev+0x4c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   1d2b8:	81000217 	ldw	r4,8(r16)
   1d2bc:	900d883a 	mov	r6,r18
   1d2c0:	980b883a 	mov	r5,r19
   1d2c4:	0017ad40 	call	17ad4 <memcmp>
   1d2c8:	10000426 	beq	r2,zero,1d2dc <alt_find_dev+0x54>
    {
      /* match found */

      return next;
    }
    next = (alt_dev*) next->llist.next;
   1d2cc:	84000017 	ldw	r16,0(r16)
   1d2d0:	003ff806 	br	1d2b4 <_gp+0xffff7188>
  }
  
  /* No match found */
  
  return NULL;
   1d2d4:	0005883a 	mov	r2,zero
   1d2d8:	00000106 	br	1d2e0 <alt_find_dev+0x58>
   1d2dc:	8005883a 	mov	r2,r16
}
   1d2e0:	dfc00417 	ldw	ra,16(sp)
   1d2e4:	dcc00317 	ldw	r19,12(sp)
   1d2e8:	dc800217 	ldw	r18,8(sp)
   1d2ec:	dc400117 	ldw	r17,4(sp)
   1d2f0:	dc000017 	ldw	r16,0(sp)
   1d2f4:	dec00504 	addi	sp,sp,20
   1d2f8:	f800283a 	ret

0001d2fc <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   1d2fc:	f800283a 	ret

0001d300 <alt_alarm_stop>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1d300:	0007303a 	rdctl	r3,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1d304:	00bfff84 	movi	r2,-2
   1d308:	1884703a 	and	r2,r3,r2
   1d30c:	1001703a 	wrctl	status,r2
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   1d310:	21400117 	ldw	r5,4(r4)
   1d314:	20800017 	ldw	r2,0(r4)
   1d318:	11400115 	stw	r5,4(r2)
  entry->previous->next = entry->next;
   1d31c:	21400117 	ldw	r5,4(r4)
   1d320:	28800015 	stw	r2,0(r5)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   1d324:	21000115 	stw	r4,4(r4)
  entry->next     = entry;
   1d328:	21000015 	stw	r4,0(r4)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1d32c:	1801703a 	wrctl	status,r3
   1d330:	f800283a 	ret

0001d334 <alt_tick>:

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   1d334:	d0a28a17 	ldw	r2,-30168(gp)
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   1d338:	defffb04 	addi	sp,sp,-20
   1d33c:	dc000015 	stw	r16,0(sp)
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   1d340:	d4201017 	ldw	r16,-32704(gp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   1d344:	10800044 	addi	r2,r2,1
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   1d348:	dc800215 	stw	r18,8(sp)
   1d34c:	dc400115 	stw	r17,4(sp)
   1d350:	dfc00415 	stw	ra,16(sp)
   1d354:	dcc00315 	stw	r19,12(sp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   1d358:	d0a28a15 	stw	r2,-30168(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   1d35c:	d4601004 	addi	r17,gp,-32704
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
        {
          alarm->rollover = 1;
   1d360:	04800044 	movi	r18,1

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   1d364:	84401a26 	beq	r16,r17,1d3d0 <alt_tick+0x9c>
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   1d368:	80800403 	ldbu	r2,16(r16)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  {
    next = (alt_alarm*) alarm->llist.next;
   1d36c:	84c00017 	ldw	r19,0(r16)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   1d370:	10000326 	beq	r2,zero,1d380 <alt_tick+0x4c>
   1d374:	d0a28a17 	ldw	r2,-30168(gp)
   1d378:	1000011e 	bne	r2,zero,1d380 <alt_tick+0x4c>
    {
      alarm->rollover = 0;
   1d37c:	80000405 	stb	zero,16(r16)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   1d380:	d0e28a17 	ldw	r3,-30168(gp)
   1d384:	80800217 	ldw	r2,8(r16)
   1d388:	18800f36 	bltu	r3,r2,1d3c8 <alt_tick+0x94>
   1d38c:	80800403 	ldbu	r2,16(r16)
   1d390:	10000d1e 	bne	r2,zero,1d3c8 <alt_tick+0x94>
    {
      next_callback = alarm->callback (alarm->context);
   1d394:	80800317 	ldw	r2,12(r16)
   1d398:	81000517 	ldw	r4,20(r16)
   1d39c:	103ee83a 	callr	r2

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   1d3a0:	1000031e 	bne	r2,zero,1d3b0 <alt_tick+0x7c>
      {
        alt_alarm_stop (alarm);
   1d3a4:	8009883a 	mov	r4,r16
   1d3a8:	001d3000 	call	1d300 <alt_alarm_stop>
   1d3ac:	00000606 	br	1d3c8 <alt_tick+0x94>
      }
      else
      {
        alarm->time += next_callback;
   1d3b0:	80c00217 	ldw	r3,8(r16)
   1d3b4:	10c5883a 	add	r2,r2,r3
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   1d3b8:	d0e28a17 	ldw	r3,-30168(gp)
      {
        alt_alarm_stop (alarm);
      }
      else
      {
        alarm->time += next_callback;
   1d3bc:	80800215 	stw	r2,8(r16)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   1d3c0:	10c0012e 	bgeu	r2,r3,1d3c8 <alt_tick+0x94>
        {
          alarm->rollover = 1;
   1d3c4:	84800405 	stb	r18,16(r16)
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   1d3c8:	9821883a 	mov	r16,r19
   1d3cc:	003fe506 	br	1d364 <_gp+0xffff7238>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
   1d3d0:	dfc00417 	ldw	ra,16(sp)
   1d3d4:	dcc00317 	ldw	r19,12(sp)
   1d3d8:	dc800217 	ldw	r18,8(sp)
   1d3dc:	dc400117 	ldw	r17,4(sp)
   1d3e0:	dc000017 	ldw	r16,0(sp)
   1d3e4:	dec00504 	addi	sp,sp,20
   1d3e8:	f800283a 	ret

0001d3ec <altera_nios2_gen2_irq_init>:
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    NIOS2_WRITE_IENABLE(0);
   1d3ec:	000170fa 	wrctl	ienable,zero
   1d3f0:	f800283a 	ret

0001d3f4 <alt_exception_cause_generated_bad_addr>:
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  switch (cause) {
   1d3f4:	213ffe84 	addi	r4,r4,-6
   1d3f8:	008003c4 	movi	r2,15
   1d3fc:	11001636 	bltu	r2,r4,1d458 <alt_exception_cause_generated_bad_addr+0x64>
   1d400:	200890ba 	slli	r4,r4,2
   1d404:	008000b4 	movhi	r2,2
   1d408:	10b50604 	addi	r2,r2,-11240
   1d40c:	2089883a 	add	r4,r4,r2
   1d410:	20800017 	ldw	r2,0(r4)
   1d414:	1000683a 	jmp	r2
   1d418:	0001d460 	cmpeqi	zero,zero,1873
   1d41c:	0001d460 	cmpeqi	zero,zero,1873
   1d420:	0001d458 	cmpnei	zero,zero,1873
   1d424:	0001d458 	cmpnei	zero,zero,1873
   1d428:	0001d458 	cmpnei	zero,zero,1873
   1d42c:	0001d460 	cmpeqi	zero,zero,1873
   1d430:	0001d458 	cmpnei	zero,zero,1873
   1d434:	0001d458 	cmpnei	zero,zero,1873
   1d438:	0001d460 	cmpeqi	zero,zero,1873
   1d43c:	0001d460 	cmpeqi	zero,zero,1873
   1d440:	0001d458 	cmpnei	zero,zero,1873
   1d444:	0001d460 	cmpeqi	zero,zero,1873
   1d448:	0001d458 	cmpnei	zero,zero,1873
   1d44c:	0001d458 	cmpnei	zero,zero,1873
   1d450:	0001d458 	cmpnei	zero,zero,1873
   1d454:	0001d460 	cmpeqi	zero,zero,1873
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   1d458:	0005883a 	mov	r2,zero
   1d45c:	f800283a 	ret
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   1d460:	00800044 	movi	r2,1
    return 0;

  default:
    return 0;
  }
}
   1d464:	f800283a 	ret
