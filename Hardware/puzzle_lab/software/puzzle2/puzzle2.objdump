
puzzle2.elf:     file format elf32-littlenios2
puzzle2.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010020

Program Header:
    LOAD off    0x00001000 vaddr 0x00010000 paddr 0x00010000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00010020 paddr 0x00010020 align 2**12
         filesz 0x0000c914 memsz 0x0000c914 flags r-x
    LOAD off    0x0000d934 vaddr 0x0001c934 paddr 0x0001d294 align 2**12
         filesz 0x00000960 memsz 0x00000960 flags rw-
    LOAD off    0x0000ebf4 vaddr 0x0001dbf4 paddr 0x0001dbf4 align 2**12
         filesz 0x00000000 memsz 0x00000390 flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00010000  00010000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000000  00010020  00010020  0000e294  2**0
                  CONTENTS
  2 .text         0000c3e4  00010020  00010020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000530  0001c404  0001c404  0000d404  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000960  0001c934  0001d294  0000d934  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          00000390  0001dbf4  0001dbf4  0000ebf4  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory 00000000  0001df84  0001df84  0000e294  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0000e294  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 000007f8  00000000  00000000  0000e2b8  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   00011ecf  00000000  00000000  0000eab0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 000048af  00000000  00000000  0002097f  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00006b10  00000000  00000000  0002522e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  000010fc  00000000  00000000  0002bd40  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    00002819  00000000  00000000  0002ce3c  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00015d74  00000000  00000000  0002f655  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  000453cc  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000013a8  00000000  00000000  000453e0  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00048b0e  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00048b11  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00048b14  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00048b15  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00048b16  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00048b1a  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00048b1e  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00048b22  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  00048b2b  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00048b34  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000c  00000000  00000000  00048b3d  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000023  00000000  00000000  00048b49  2**0
                  CONTENTS, READONLY
 29 .jdi          00004a13  00000000  00000000  00048b6c  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     000717fd  00000000  00000000  0004d57f  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00010000 l    d  .entry	00000000 .entry
00010020 l    d  .exceptions	00000000 .exceptions
00010020 l    d  .text	00000000 .text
0001c404 l    d  .rodata	00000000 .rodata
0001c934 l    d  .rwdata	00000000 .rwdata
0001dbf4 l    d  .bss	00000000 .bss
0001df84 l    d  .onchip_memory	00000000 .onchip_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../puzzle2_bsp//obj/HAL/src/crt0.o
00010058 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 DE_seven_segment_display.c
0001c61d l     O .rodata	0000002b CSWTCH.40
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 asprintf.c
00000000 l    df *ABS*	00000000 impure.c
0001c934 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 vfprintf.c
0001c68e l     O .rodata	00000010 zeroes.4389
0001c69e l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 dtoa.c
00013bcc l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
0001d180 l     O .rwdata	00000020 lc_ctype_charset
0001d160 l     O .rwdata	00000020 lc_message_charset
0001d1a0 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 mprec.c
0001c6cc l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0001c7f0 l     O .rodata	00000010 zeroes.4333
0001c800 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 alt_getchar.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_printf.c
00000000 l    df *ABS*	00000000 alt_putchar.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0001d274 l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_sys_init.c
0001d1d8 l     O .rwdata	0000002c accelerometer_spi
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
0001c384 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
00016af8 g     F .text	00000074 _mprec_log10
00016be4 g     F .text	0000008c __any_on
0001c6d8 g     O .rodata	00000028 __mprec_tinytens
0001c038 g     F .text	0000002c alt_main
0001d294 g       *ABS*	00000000 __flash_rwdata_start
0001a8ec g     F .text	00000088 .hidden __eqdf2
0001dbf4 g     O .bss	00000004 pause
000108f0 g     F .text	00000054 print
0001df84 g       *ABS*	00000000 __alt_heap_start
0001dbf8 g     O .bss	00000004 dancing
0001dbfc g     O .bss	00000004 disp_off
000158b0 g     F .text	0000007c _setlocale_r
0001c068 g     F .text	00000004 __malloc_unlock
000102cc g     F .text	000000a0 getActualText
0001dc54 g     O .bss	00000004 altera_avalon_timer_ts_freq
000183c8 g     F .text	0000015c memmove
00015bb8 g     F .text	000000a8 _Balloc
0001d25c g     O .rwdata	00000004 timer
0001dc00 g     O .bss	00000004 reverse
0001016c g     F .text	00000088 read_chars
0001c224 g     F .text	00000038 alt_putstr
0001a974 g     F .text	000000dc .hidden __gtdf2
0001d278 g     O .rwdata	00000004 jtag_uart
0001c3fc g     F .text	00000008 altera_nios2_gen2_irq_init
00010000 g     F .entry	0000000c __reset
00010020 g       *ABS*	00000000 __flash_exceptions_start
0001dc38 g     O .bss	00000004 errno
00016f4c g     F .text	000013a0 ___svfiprintf_internal_r
0001dc4c g     O .bss	00000004 alt_argv
0002525c g       *ABS*	00000000 _gp
000100b8 g     F .text	000000b4 generate_text
0001d204 g     O .rwdata	00000030 alt_fd_list
00015a70 g     F .text	00000148 memcpy
0001bd2c g     F .text	000000dc .hidden __floatsidf
0001aa50 g     F .text	000000f4 .hidden __ltdf2
0001dc04 g     O .bss	00000001 prevLetter
00016c70 g     F .text	00000074 __fpclassifyd
00016a54 g     F .text	000000a4 __ratio
0001c2f0 g     F .text	0000005c altera_avalon_jtag_uart_read
00010e84 g     F .text	00000014 malloc
00010cec g     F .text	00000064 .hidden __udivsi3
00010814 g     F .text	00000054 getBinLow
0001c728 g     O .rodata	000000c8 __mprec_tens
0001592c g     F .text	0000000c __locale_charset
0001dc34 g     O .bss	00000004 __malloc_top_pad
0001dc08 g     O .bss	00000004 flag
0001d270 g     O .rwdata	00000004 __mb_cur_max
0001595c g     F .text	0000000c _localeconv_r
0001dc0c g     O .bss	00000004 length
00015fec g     F .text	0000003c __i2b
000117e0 g     F .text	00000054 _sbrk_r
0001d27c g     O .rwdata	00000004 alt_max_fd
0001dc30 g     O .bss	00000004 __malloc_max_sbrked_mem
00019670 g     F .text	000008ac .hidden __adddf3
000167fc g     F .text	0000010c __b2d
00019084 g     F .text	000005c4 .hidden __umoddi3
0001d260 g     O .rwdata	00000004 _global_impure_ptr
00018524 g     F .text	00000564 _realloc_r
0001df84 g       *ABS*	00000000 __bss_end
0001bf14 g     F .text	00000044 alt_getchar
000107e0 g     F .text	00000034 getBinLowLow
00018a88 g     F .text	000005fc .hidden __udivdi3
0001c700 g     O .rodata	00000028 __mprec_bigtens
00015dd0 g     F .text	00000104 __s2b
0001be08 g     F .text	000000a8 .hidden __floatunsidf
0001653c g     F .text	00000060 __mcmp
0001d234 g     O .rwdata	00000028 alt_dev_null
000103d4 g     F .text	000000c8 initializeDisplay
0001c380 g     F .text	00000004 alt_dcache_flush_all
00015ed4 g     F .text	00000068 __hi0bits
0001bcac g     F .text	00000080 .hidden __fixdfsi
0001005c g     F .text	0000005c print_text
0001d294 g       *ABS*	00000000 __ram_rwdata_end
00010000 g       *ABS*	00000000 __alt_mem_onchip_memory
00010944 g     F .text	00000280 print_letters
0001d280 g     O .rwdata	00000008 alt_dev_list
0001dc84 g     O .bss	00000200 text
0001dc10 g     O .bss	00000004 dance_dir
0001c934 g       *ABS*	00000000 __ram_rodata_end
0001aa50 g     F .text	000000f4 .hidden __ledf2
000162b4 g     F .text	00000140 __pow5mult
0001dc44 g     O .bss	00000004 __nlocale_changed
00010d50 g     F .text	00000058 .hidden __umodsi3
0001df84 g       *ABS*	00000000 end
00020000 g       *ABS*	00000000 __alt_stack_pointer
0001beb0 g     F .text	00000064 .hidden __clzsi2
0001c34c g     F .text	00000034 altera_avalon_jtag_uart_write
00010da8 g     F .text	00000064 _asprintf_r
0001598c g     F .text	000000e4 memchr
000155a0 g     F .text	00000310 _free_r
0001c06c g     F .text	00000170 alt_printf
00015938 g     F .text	00000010 __locale_mb_cur_max
0001dc40 g     O .bss	00000004 __mlocale_changed
0001d268 g     O .rwdata	00000004 __malloc_sbrk_base
00010020 g     F .text	0000003c _start
000163f4 g     F .text	00000148 __lshift
0001c2c8 g     F .text	00000028 alt_sys_init
00016d7c g     F .text	000001d0 __ssprint_r
00010244 g     F .text	00000088 getTxt
00016028 g     F .text	0000028c __multiply
00019648 g     F .text	00000028 .hidden __mulsi3
0001c934 g       *ABS*	00000000 __ram_rwdata_start
0001c404 g       *ABS*	00000000 __ram_rodata_start
0001dc5c g     O .bss	00000028 __malloc_current_mallinfo
00016908 g     F .text	0000014c __d2b
0001dc14 g     O .bss	00000004 slowdown_toggle
0001df84 g       *ABS*	00000000 __alt_stack_base
00010764 g     F .text	0000007c getBinaryLetter
00019f1c g     F .text	000009d0 .hidden __divdf3
00016b6c g     F .text	00000078 __copybits
0001cd58 g     O .rwdata	00000408 __malloc_av_
0001ab44 g     F .text	0000086c .hidden __muldf3
0001c38c g     F .text	0000006c alt_dev_llist_insert
0001c064 g     F .text	00000004 __malloc_lock
0001c25c g     F .text	0000004c sbrk
00011910 g     F .text	000022bc ___svfprintf_internal_r
0001de84 g     O .bss	00000100 enteredText
000182ec g     F .text	000000dc _calloc_r
0001dbf4 g       *ABS*	00000000 __bss_start
000116b8 g     F .text	00000128 memset
00010bc4 g     F .text	00000030 main
0001dc48 g     O .bss	00000004 alt_envp
0001dc2c g     O .bss	00000004 __malloc_max_total_mem
00020000 g       *ABS*	00000000 __alt_heap_limit
00013df4 g     F .text	00001688 _dtoa_r
00010eac g     F .text	0000080c _malloc_r
0001d290 g     O .rwdata	00000004 alt_errno
00010bf4 g     F .text	00000084 .hidden __divsi3
0001547c g     F .text	00000124 _malloc_trim_r
000104c4 g     F .text	00000028 updateTimer
00011834 g     F .text	000000dc strcmp
0001c404 g       *ABS*	00000000 __flash_rodata_start
0001a8ec g     F .text	00000088 .hidden __nedf2
0001c2a8 g     F .text	00000020 alt_irq_init
000104ec g     F .text	000000bc updateLocation
0001c810 g     O .rodata	00000100 .hidden __clz_tab
00010e0c g     F .text	00000078 asprintf
0001dc3c g     O .bss	00000004 _PathLocale
00015968 g     F .text	00000018 setlocale
0001d264 g     O .rwdata	00000004 _impure_ptr
0001dc50 g     O .bss	00000004 alt_argc
0001dc58 g     O .bss	00000004 altera_avalon_timer_ts_base
00015954 g     F .text	00000008 __locale_cjk_lang
00010868 g     F .text	00000054 getBinHigh
000105a8 g     F .text	00000190 updatePBState
00016798 g     F .text	00000064 __ulp
0001dc18 g     O .bss	00000004 toggle
0001d288 g     O .rwdata	00000008 alt_fs_list
0001dc1c g     O .bss	00000004 speedup_toggle
00010020 g       *ABS*	00000000 __ram_exceptions_start
00015980 g     F .text	0000000c localeconv
0001dc20 g     O .bss	00000004 upsideDown
0001d294 g       *ABS*	00000000 _edata
0001dc24 g     O .bss	00000004 dance_state
0001df84 g       *ABS*	00000000 _end
00010020 g       *ABS*	00000000 __ram_exceptions_end
000101f4 g     F .text	00000050 updateSens
0001d26c g     O .rwdata	00000004 __malloc_trim_threshold
00015948 g     F .text	0000000c __locale_msgcharset
0001659c g     F .text	000001fc __mdiff
00010c78 g     F .text	00000074 .hidden __modsi3
00020000 g       *ABS*	00000000 __alt_data_end
000108bc g     F .text	00000034 getBinHighHigh
0001000c g       .entry	00000000 _exit
00010738 g     F .text	0000002c getBin
00016ce4 g     F .text	00000098 strlen
0001a974 g     F .text	000000dc .hidden __gedf2
0001c1dc g     F .text	00000048 alt_putchar
0001c3f8 g     F .text	00000004 alt_icache_flush_all
0001036c g     F .text	00000068 updateText
0001dc28 g     O .bss	00000004 re_enter
0001b3b0 g     F .text	000008fc .hidden __subdf3
00015f3c g     F .text	000000b0 __lo0bits
0001bf58 g     F .text	000000e0 alt_load
00010e98 g     F .text	00000014 free
00015c88 g     F .text	00000148 __multadd
0001049c g     F .text	00000028 clearActualText
00015c60 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00010000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   10000:	00400074 	movhi	at,1
    ori r1, r1, %lo(_start)
   10004:	08400814 	ori	at,at,32
    jmp r1
   10008:	0800683a 	jmp	at

0001000c <_exit>:
	...

Disassembly of section .text:

00010020 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   10020:	06c000b4 	movhi	sp,2
    ori sp, sp, %lo(__alt_stack_pointer)
   10024:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   10028:	068000b4 	movhi	gp,2
    ori gp, gp, %lo(_gp)
   1002c:	d6949714 	ori	gp,gp,21084
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   10030:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
   10034:	10b6fd14 	ori	r2,r2,56308

    movhi r3, %hi(__bss_end)
   10038:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
   1003c:	18f7e114 	ori	r3,r3,57220

    beq r2, r3, 1f
   10040:	10c00326 	beq	r2,r3,10050 <_start+0x30>

0:
    stw zero, (r2)
   10044:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   10048:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   1004c:	10fffd36 	bltu	r2,r3,10044 <_gp+0xfffeade8>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   10050:	001bf580 	call	1bf58 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   10054:	001c0380 	call	1c038 <alt_main>

00010058 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   10058:	003fff06 	br	10058 <_gp+0xfffeadfc>

0001005c <print_text>:
   print_letters(text[(location % length)], text[(location + 1) % length], text[(location + 2) % length], text[(location + 3) % length], text[(location + 4) % length], text[(location + 5) % length], dance_state);
  }
  return 0;
}*/

void print_text(char *text, const int length) {
   1005c:	defffc04 	addi	sp,sp,-16
	char *printMsg;
	asprintf(&printMsg, "<--> Detected %d characters: %s <--> \n %c", length, text, 0x4); 	// Print out the strings
   10060:	280d883a 	mov	r6,r5
   10064:	00800104 	movi	r2,4
   10068:	014000b4 	movhi	r5,2
   1006c:	200f883a 	mov	r7,r4
   10070:	29710104 	addi	r5,r5,-15356
   print_letters(text[(location % length)], text[(location + 1) % length], text[(location + 2) % length], text[(location + 3) % length], text[(location + 4) % length], text[(location + 5) % length], dance_state);
  }
  return 0;
}*/

void print_text(char *text, const int length) {
   10074:	dc000215 	stw	r16,8(sp)
	char *printMsg;
	asprintf(&printMsg, "<--> Detected %d characters: %s <--> \n %c", length, text, 0x4); 	// Print out the strings
   10078:	d8800015 	stw	r2,0(sp)
   print_letters(text[(location % length)], text[(location + 1) % length], text[(location + 2) % length], text[(location + 3) % length], text[(location + 4) % length], text[(location + 5) % length], dance_state);
  }
  return 0;
}*/

void print_text(char *text, const int length) {
   1007c:	2021883a 	mov	r16,r4
	char *printMsg;
	asprintf(&printMsg, "<--> Detected %d characters: %s <--> \n %c", length, text, 0x4); 	// Print out the strings
   10080:	d889883a 	add	r4,sp,r2
   print_letters(text[(location % length)], text[(location + 1) % length], text[(location + 2) % length], text[(location + 3) % length], text[(location + 4) % length], text[(location + 5) % length], dance_state);
  }
  return 0;
}*/

void print_text(char *text, const int length) {
   10084:	dfc00315 	stw	ra,12(sp)
	char *printMsg;
	asprintf(&printMsg, "<--> Detected %d characters: %s <--> \n %c", length, text, 0x4); 	// Print out the strings
   10088:	0010e0c0 	call	10e0c <asprintf>
	alt_putstr(printMsg);
   1008c:	d9000117 	ldw	r4,4(sp)
   10090:	001c2240 	call	1c224 <alt_putstr>
	free(printMsg);
   10094:	d9000117 	ldw	r4,4(sp)
   10098:	0010e980 	call	10e98 <free>
	memset(text, 0, 2*CHARLIM);								// Empty the text buffer for next input
   1009c:	01808004 	movi	r6,512
   100a0:	000b883a 	mov	r5,zero
   100a4:	8009883a 	mov	r4,r16
}
   100a8:	dfc00317 	ldw	ra,12(sp)
   100ac:	dc000217 	ldw	r16,8(sp)
   100b0:	dec00404 	addi	sp,sp,16
void print_text(char *text, const int length) {
	char *printMsg;
	asprintf(&printMsg, "<--> Detected %d characters: %s <--> \n %c", length, text, 0x4); 	// Print out the strings
	alt_putstr(printMsg);
	free(printMsg);
	memset(text, 0, 2*CHARLIM);								// Empty the text buffer for next input
   100b4:	00116b81 	jmpi	116b8 <memset>

000100b8 <generate_text>:
}

char generate_text(char curr, int *length, char *text, int *running) {
   100b8:	2005883a 	mov	r2,r4
	if(curr == '\n') return curr;								// If the line is empty, return nothing.
   100bc:	21003fcc 	andi	r4,r4,255
   100c0:	2100201c 	xori	r4,r4,128
   100c4:	213fe004 	addi	r4,r4,-128
   100c8:	00c00284 	movi	r3,10
   100cc:	20c02626 	beq	r4,r3,10168 <generate_text+0xb0>
	alt_putstr(printMsg);
	free(printMsg);
	memset(text, 0, 2*CHARLIM);								// Empty the text buffer for next input
}

char generate_text(char curr, int *length, char *text, int *running) {
   100d0:	defff804 	addi	sp,sp,-32
   100d4:	dd800615 	stw	r22,24(sp)
   100d8:	dd400515 	stw	r21,20(sp)
   100dc:	dd000415 	stw	r20,16(sp)
   100e0:	dcc00315 	stw	r19,12(sp)
   100e4:	dc800215 	stw	r18,8(sp)
   100e8:	dc400115 	stw	r17,4(sp)
   100ec:	dc000015 	stw	r16,0(sp)
   100f0:	dfc00715 	stw	ra,28(sp)
   100f4:	3829883a 	mov	r20,r7
   100f8:	3025883a 	mov	r18,r6
   100fc:	2827883a 	mov	r19,r5
	if(curr == '\n') return curr;								// If the line is empty, return nothing.
   10100:	3023883a 	mov	r17,r6
	int idx = 0;										// Keep track of how many characters have been sent down for later printing
	char newCurr = curr;

	while (newCurr != EOF && newCurr != '\n'){						// Keep reading characters until we get to the end of the line
   10104:	057fffc4 	movi	r21,-1
   10108:	1821883a 	mov	r16,r3
		if (newCurr == QUITLETTER) { *running = 0; }					// If quitting letter is encountered, setting running to 0
   1010c:	05801f84 	movi	r22,126
char generate_text(char curr, int *length, char *text, int *running) {
	if(curr == '\n') return curr;								// If the line is empty, return nothing.
	int idx = 0;										// Keep track of how many characters have been sent down for later printing
	char newCurr = curr;

	while (newCurr != EOF && newCurr != '\n'){						// Keep reading characters until we get to the end of the line
   10110:	10c03fcc 	andi	r3,r2,255
   10114:	18c0201c 	xori	r3,r3,128
   10118:	18ffe004 	addi	r3,r3,-128
   1011c:	8c89c83a 	sub	r4,r17,r18
   10120:	1d400726 	beq	r3,r21,10140 <generate_text+0x88>
   10124:	1c000626 	beq	r3,r16,10140 <generate_text+0x88>
		if (newCurr == QUITLETTER) { *running = 0; }					// If quitting letter is encountered, setting running to 0
   10128:	1d80011e 	bne	r3,r22,10130 <generate_text+0x78>
   1012c:	a0000015 	stw	zero,0(r20)
		text[idx] = newCurr;								// Add the next letter to the text buffer
   10130:	88800005 	stb	r2,0(r17)
		idx++;										// Keep track of the number of characters read
		newCurr = alt_getchar();							// Get the next character
   10134:	001bf140 	call	1bf14 <alt_getchar>
   10138:	8c400044 	addi	r17,r17,1
   1013c:	003ff406 	br	10110 <_gp+0xfffeaeb4>
	}
	*length = idx;
   10140:	99000015 	stw	r4,0(r19)

	return newCurr;
}
   10144:	dfc00717 	ldw	ra,28(sp)
   10148:	dd800617 	ldw	r22,24(sp)
   1014c:	dd400517 	ldw	r21,20(sp)
   10150:	dd000417 	ldw	r20,16(sp)
   10154:	dcc00317 	ldw	r19,12(sp)
   10158:	dc800217 	ldw	r18,8(sp)
   1015c:	dc400117 	ldw	r17,4(sp)
   10160:	dc000017 	ldw	r16,0(sp)
   10164:	dec00804 	addi	sp,sp,32
   10168:	f800283a 	ret

0001016c <read_chars>:

char read_chars()
{
   1016c:	deff7d04 	addi	sp,sp,-524
	char text[2*CHARLIM];
	char prevLetter = '!';
	int length = 0;
	int running = 1;
   10170:	00800044 	movi	r2,1

	return newCurr;
}

char read_chars()
{
   10174:	dfc08215 	stw	ra,520(sp)
	char text[2*CHARLIM];
	char prevLetter = '!';
	int length = 0;
   10178:	d8008115 	stw	zero,516(sp)
	int running = 1;
   1017c:	d8808015 	stw	r2,512(sp)

	prevLetter = alt_getchar();
   10180:	001bf140 	call	1bf14 <alt_getchar>
	prevLetter = generate_text(prevLetter, &length, text, &running);
   10184:	11003fcc 	andi	r4,r2,255
   10188:	2100201c 	xori	r4,r4,128
   1018c:	d9c08004 	addi	r7,sp,512
   10190:	d80d883a 	mov	r6,sp
   10194:	d9408104 	addi	r5,sp,516
   10198:	213fe004 	addi	r4,r4,-128
   1019c:	00100b80 	call	100b8 <generate_text>
	print_text(text,length);
   101a0:	d9408117 	ldw	r5,516(sp)
   101a4:	d809883a 	mov	r4,sp
   101a8:	001005c0 	call	1005c <print_text>

	alt_printf("%s", text);
   101ac:	010000b4 	movhi	r4,2
   101b0:	d80b883a 	mov	r5,sp
   101b4:	21310c04 	addi	r4,r4,-15312
   101b8:	001c06c0 	call	1c06c <alt_printf>
	if (strcmp(text,"f") == 0) { alt_printf("gg"); return 'f';}
   101bc:	014000b4 	movhi	r5,2
   101c0:	29710d04 	addi	r5,r5,-15308
   101c4:	d809883a 	mov	r4,sp
   101c8:	00118340 	call	11834 <strcmp>
   101cc:	1000051e 	bne	r2,zero,101e4 <read_chars+0x78>
   101d0:	010000b4 	movhi	r4,2
   101d4:	21310e04 	addi	r4,r4,-15304
   101d8:	001c06c0 	call	1c06c <alt_printf>
   101dc:	00801984 	movi	r2,102
   101e0:	00000106 	br	101e8 <read_chars+0x7c>
	else {return 'n';}
   101e4:	00801b84 	movi	r2,110
}
   101e8:	dfc08217 	ldw	ra,520(sp)
   101ec:	dec08304 	addi	sp,sp,524
   101f0:	f800283a 	ret

000101f4 <updateSens>:

int updateSens(int button, int updated, int sensitivity)
{
   101f4:	defffe04 	addi	sp,sp,-8
   101f8:	dc000015 	stw	r16,0(sp)
   101fc:	dfc00115 	stw	ra,4(sp)
	if ((updated == 1) && (button != 0b01)) { updated = 0;}
   10200:	00c00044 	movi	r3,1
	if (strcmp(text,"f") == 0) { alt_printf("gg"); return 'f';}
	else {return 'n';}
}

int updateSens(int button, int updated, int sensitivity)
{
   10204:	2021883a 	mov	r16,r4
   10208:	2805883a 	mov	r2,r5
	if ((updated == 1) && (button != 0b01)) { updated = 0;}
   1020c:	28c0021e 	bne	r5,r3,10218 <updateSens+0x24>
   10210:	20c5003a 	cmpeq	r2,r4,r3
   10214:	00000706 	br	10234 <updateSens+0x40>
	if ((updated == 0) && (button == 0b01))
   10218:	2800061e 	bne	r5,zero,10234 <updateSens+0x40>
   1021c:	20c0051e 	bne	r4,r3,10234 <updateSens+0x40>
	{
		if (sensitivity != 9)
		{
			//sensitivity = sensitivity + 1;
			alt_printf("Sensitivity: %x\n", sensitivity);
   10220:	010000b4 	movhi	r4,2
   10224:	300b883a 	mov	r5,r6
   10228:	21310f04 	addi	r4,r4,-15300
			updated = 1;
		}
		else
		{
			//sensitivity = 1;
			alt_printf("Sensitivity: %x\n", sensitivity);
   1022c:	001c06c0 	call	1c06c <alt_printf>
   10230:	8005883a 	mov	r2,r16
			updated = 1;
		}
	}
	return updated;
}
   10234:	dfc00117 	ldw	ra,4(sp)
   10238:	dc000017 	ldw	r16,0(sp)
   1023c:	dec00204 	addi	sp,sp,8
   10240:	f800283a 	ret

00010244 <getTxt>:
		  re_enter = 0;	//We don't want to retrigger the entering process until the user does
	}
	return;
}
//Gets the text the user placed on the console
char getTxt(char curr){
   10244:	2007883a 	mov	r3,r4
	if(curr == '\n')
   10248:	21003fcc 	andi	r4,r4,255
   1024c:	2100201c 	xori	r4,r4,128
   10250:	213fe004 	addi	r4,r4,-128
   10254:	00800284 	movi	r2,10
   10258:	20801a26 	beq	r4,r2,102c4 <getTxt+0x80>
		  re_enter = 0;	//We don't want to retrigger the entering process until the user does
	}
	return;
}
//Gets the text the user placed on the console
char getTxt(char curr){
   1025c:	defffc04 	addi	sp,sp,-16
   10260:	dc800215 	stw	r18,8(sp)
		return curr;
	int idx = 0;	//Keep track of what we are adding
	char newCurr = curr;
	//Keep adding characters until we get to the end of the line
	while (newCurr != '\n'){
		enteredText[idx] = newCurr;	//Add the next letter to the entered text register
   10264:	048000b4 	movhi	r18,2
		  re_enter = 0;	//We don't want to retrigger the entering process until the user does
	}
	return;
}
//Gets the text the user placed on the console
char getTxt(char curr){
   10268:	dc400115 	stw	r17,4(sp)
   1026c:	dc000015 	stw	r16,0(sp)
   10270:	dfc00315 	stw	ra,12(sp)
   10274:	0021883a 	mov	r16,zero
		return curr;
	int idx = 0;	//Keep track of what we are adding
	char newCurr = curr;
	//Keep adding characters until we get to the end of the line
	while (newCurr != '\n'){
		enteredText[idx] = newCurr;	//Add the next letter to the entered text register
   10278:	94b7a104 	addi	r18,r18,-8572
	if(curr == '\n')
		return curr;
	int idx = 0;	//Keep track of what we are adding
	char newCurr = curr;
	//Keep adding characters until we get to the end of the line
	while (newCurr != '\n'){
   1027c:	1023883a 	mov	r17,r2
		enteredText[idx] = newCurr;	//Add the next letter to the entered text register
   10280:	8485883a 	add	r2,r16,r18
   10284:	10c00005 	stb	r3,0(r2)
		idx ++;
		newCurr = alt_getchar();	//Get the next character
   10288:	001bf140 	call	1bf14 <alt_getchar>
   1028c:	1007883a 	mov	r3,r2
	if(curr == '\n')
		return curr;
	int idx = 0;	//Keep track of what we are adding
	char newCurr = curr;
	//Keep adding characters until we get to the end of the line
	while (newCurr != '\n'){
   10290:	10803fcc 	andi	r2,r2,255
   10294:	1080201c 	xori	r2,r2,128
   10298:	10bfe004 	addi	r2,r2,-128
		enteredText[idx] = newCurr;	//Add the next letter to the entered text register
		idx ++;
   1029c:	84000044 	addi	r16,r16,1
	if(curr == '\n')
		return curr;
	int idx = 0;	//Keep track of what we are adding
	char newCurr = curr;
	//Keep adding characters until we get to the end of the line
	while (newCurr != '\n'){
   102a0:	147ff71e 	bne	r2,r17,10280 <_gp+0xfffeb024>
		idx ++;
		newCurr = alt_getchar();	//Get the next character
	}
	length = idx;
	return newCurr;
}
   102a4:	00800284 	movi	r2,10
	while (newCurr != '\n'){
		enteredText[idx] = newCurr;	//Add the next letter to the entered text register
		idx ++;
		newCurr = alt_getchar();	//Get the next character
	}
	length = idx;
   102a8:	d4226c15 	stw	r16,-30288(gp)
	return newCurr;
}
   102ac:	dfc00317 	ldw	ra,12(sp)
   102b0:	dc800217 	ldw	r18,8(sp)
   102b4:	dc400117 	ldw	r17,4(sp)
   102b8:	dc000017 	ldw	r16,0(sp)
   102bc:	dec00404 	addi	sp,sp,16
   102c0:	f800283a 	ret
   102c4:	00800284 	movi	r2,10
   102c8:	f800283a 	ret

000102cc <getActualText>:
//Takes the user's input and only uses the allowed letters.  Returns the length of the string entered
int getActualText(){
	int idx = 0;	//We need two indicies because the entered and actual text sequences need not be aligned
	char currentLetter; //Keeps track of the character we are wanting to add
	//Go through each letter in the entered text
	for (int i = 0; i <= length; i++){
   102cc:	d2626c17 	ldw	r9,-30288(gp)
		currentLetter = enteredText[i];
   102d0:	028000b4 	movhi	r10,2
   102d4:	014000b4 	movhi	r5,2
//Takes the user's input and only uses the allowed letters.  Returns the length of the string entered
int getActualText(){
	int idx = 0;	//We need two indicies because the entered and actual text sequences need not be aligned
	char currentLetter; //Keeps track of the character we are wanting to add
	//Go through each letter in the entered text
	for (int i = 0; i <= length; i++){
   102d8:	0009883a 	mov	r4,zero
	length = idx;
	return newCurr;
}
//Takes the user's input and only uses the allowed letters.  Returns the length of the string entered
int getActualText(){
	int idx = 0;	//We need two indicies because the entered and actual text sequences need not be aligned
   102dc:	0005883a 	mov	r2,zero
	char currentLetter; //Keeps track of the character we are wanting to add
	//Go through each letter in the entered text
	for (int i = 0; i <= length; i++){
		currentLetter = enteredText[i];
   102e0:	52b7a104 	addi	r10,r10,-8572
		if (currentLetter > 96){
   102e4:	02c01804 	movi	r11,96
			//Gets only the uppercase letter
			currentLetter -= 32;
		}
		switch(currentLetter){
   102e8:	03001344 	movi	r12,77
   102ec:	29772104 	addi	r5,r5,-9084
		case 'M':
			//We build the letter "M" from two "n's," so we need to change the index twice in the actual text
			text[idx] = 'N';
   102f0:	01801384 	movi	r6,78
		currentLetter = enteredText[i];
		if (currentLetter > 96){
			//Gets only the uppercase letter
			currentLetter -= 32;
		}
		switch(currentLetter){
   102f4:	034015c4 	movi	r13,87
			text[idx + 1] = 'N';
			idx += 2;
			break;
		case 'W':
			//We build the letter "W" from two "v's," so we need to change the index twice in the actual text
			text[idx] = 'V';
   102f8:	01c01584 	movi	r7,86
//Takes the user's input and only uses the allowed letters.  Returns the length of the string entered
int getActualText(){
	int idx = 0;	//We need two indicies because the entered and actual text sequences need not be aligned
	char currentLetter; //Keeps track of the character we are wanting to add
	//Go through each letter in the entered text
	for (int i = 0; i <= length; i++){
   102fc:	49001a16 	blt	r9,r4,10368 <getActualText+0x9c>
		currentLetter = enteredText[i];
   10300:	2287883a 	add	r3,r4,r10
   10304:	18c00003 	ldbu	r3,0(r3)
		if (currentLetter > 96){
   10308:	1a003fcc 	andi	r8,r3,255
   1030c:	4200201c 	xori	r8,r8,128
   10310:	423fe004 	addi	r8,r8,-128
   10314:	5a00010e 	bge	r11,r8,1031c <getActualText+0x50>
			//Gets only the uppercase letter
			currentLetter -= 32;
   10318:	18fff804 	addi	r3,r3,-32
		}
		switch(currentLetter){
   1031c:	1a003fcc 	andi	r8,r3,255
   10320:	4200201c 	xori	r8,r8,128
   10324:	423fe004 	addi	r8,r8,-128
   10328:	43000526 	beq	r8,r12,10340 <getActualText+0x74>
   1032c:	4340091e 	bne	r8,r13,10354 <getActualText+0x88>
			text[idx + 1] = 'N';
			idx += 2;
			break;
		case 'W':
			//We build the letter "W" from two "v's," so we need to change the index twice in the actual text
			text[idx] = 'V';
   10330:	2887883a 	add	r3,r5,r2
   10334:	19c00005 	stb	r7,0(r3)
			text[idx + 1] = 'V';
   10338:	19c00045 	stb	r7,1(r3)
   1033c:	00000306 	br	1034c <getActualText+0x80>
			currentLetter -= 32;
		}
		switch(currentLetter){
		case 'M':
			//We build the letter "M" from two "n's," so we need to change the index twice in the actual text
			text[idx] = 'N';
   10340:	2887883a 	add	r3,r5,r2
   10344:	19800005 	stb	r6,0(r3)
			text[idx + 1] = 'N';
   10348:	19800045 	stb	r6,1(r3)
			break;
		case 'W':
			//We build the letter "W" from two "v's," so we need to change the index twice in the actual text
			text[idx] = 'V';
			text[idx + 1] = 'V';
			idx += 2;
   1034c:	10800084 	addi	r2,r2,2
			break;
   10350:	00000306 	br	10360 <getActualText+0x94>
		default:
			//Copy the new letter into the actual text
			text[idx] = currentLetter;
   10354:	2891883a 	add	r8,r5,r2
   10358:	40c00005 	stb	r3,0(r8)
			idx++;
   1035c:	10800044 	addi	r2,r2,1
//Takes the user's input and only uses the allowed letters.  Returns the length of the string entered
int getActualText(){
	int idx = 0;	//We need two indicies because the entered and actual text sequences need not be aligned
	char currentLetter; //Keeps track of the character we are wanting to add
	//Go through each letter in the entered text
	for (int i = 0; i <= length; i++){
   10360:	21000044 	addi	r4,r4,1
   10364:	003fe506 	br	102fc <_gp+0xfffeb0a0>
		}


	}
	return idx;
}
   10368:	f800283a 	ret

0001036c <updateText>:
	length = getActualText();		//Adjust for special characters such as 'W' or 'M'
	alt_putstr("Got it!  If you want to change the text, press KEY1\n");
}
//Updates the text from the console once the program is running
void updateText(){
	if (re_enter){
   1036c:	d0a27317 	ldw	r2,-30260(gp)
   10370:	10001726 	beq	r2,zero,103d0 <updateText+0x64>
		  alt_putstr("Put your new text into the console and press ENTER\n");
   10374:	010000b4 	movhi	r4,2
	prevLetter = getTxt(prevLetter);	//Snag what the user put in
	length = getActualText();		//Adjust for special characters such as 'W' or 'M'
	alt_putstr("Got it!  If you want to change the text, press KEY1\n");
}
//Updates the text from the console once the program is running
void updateText(){
   10378:	deffff04 	addi	sp,sp,-4
	if (re_enter){
		  alt_putstr("Put your new text into the console and press ENTER\n");
   1037c:	21311404 	addi	r4,r4,-15280
	prevLetter = getTxt(prevLetter);	//Snag what the user put in
	length = getActualText();		//Adjust for special characters such as 'W' or 'M'
	alt_putstr("Got it!  If you want to change the text, press KEY1\n");
}
//Updates the text from the console once the program is running
void updateText(){
   10380:	dfc00015 	stw	ra,0(sp)
	if (re_enter){
		  alt_putstr("Put your new text into the console and press ENTER\n");
   10384:	001c2240 	call	1c224 <alt_putstr>
		  prevLetter = '!';
   10388:	00800844 	movi	r2,33
		  prevLetter = getTxt(prevLetter);
   1038c:	01000844 	movi	r4,33
}
//Updates the text from the console once the program is running
void updateText(){
	if (re_enter){
		  alt_putstr("Put your new text into the console and press ENTER\n");
		  prevLetter = '!';
   10390:	d0a26a05 	stb	r2,-30296(gp)
		  prevLetter = getTxt(prevLetter);
   10394:	00102440 	call	10244 <getTxt>
   10398:	d0a26a05 	stb	r2,-30296(gp)
		  length = getActualText();		//Adjust for special characters such as 'W' or 'M'
   1039c:	00102cc0 	call	102cc <getActualText>
   103a0:	d0a26c15 	stw	r2,-30288(gp)
		  if(length > 0)
   103a4:	0080040e 	bge	zero,r2,103b8 <updateText+0x4c>
			  text[length-1] = '\0';		//Get rid of any extra stuff at the end
   103a8:	00c000b4 	movhi	r3,2
   103ac:	18f720c4 	addi	r3,r3,-9085
   103b0:	10c5883a 	add	r2,r2,r3
   103b4:	10000005 	stb	zero,0(r2)
		  alt_putstr("Got it!  If you want to change the text, press KEY1 \n");
   103b8:	010000b4 	movhi	r4,2
   103bc:	21312104 	addi	r4,r4,-15228
   103c0:	001c2240 	call	1c224 <alt_putstr>
		  re_enter = 0;	//We don't want to retrigger the entering process until the user does
   103c4:	d0227315 	stw	zero,-30260(gp)
	}
	return;
}
   103c8:	dfc00017 	ldw	ra,0(sp)
   103cc:	dec00104 	addi	sp,sp,4
   103d0:	f800283a 	ret

000103d4 <initializeDisplay>:

	return 0;
}

//Does initial setup of display
void initializeDisplay(){
   103d4:	deffff04 	addi	sp,sp,-4
	toggle = 0;
	speedup_toggle = 0;
	slowdown_toggle = 0;
	dancing = 0;
	re_enter = 0;
	dance_state = 2; //Start with the letters in the middle
   103d8:	00800084 	movi	r2,2
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   103dc:	00c000b4 	movhi	r3,2
	toggle = 0;
	speedup_toggle = 0;
	slowdown_toggle = 0;
	dancing = 0;
	re_enter = 0;
	dance_state = 2; //Start with the letters in the middle
   103e0:	d0a27215 	stw	r2,-30264(gp)

	return 0;
}

//Does initial setup of display
void initializeDisplay(){
   103e4:	dfc00015 	stw	ra,0(sp)
	//These controls determine what functions the display is executing:
	flag = 0;
   103e8:	d0226b15 	stw	zero,-30292(gp)
	pause = 0;
   103ec:	d0226615 	stw	zero,-30312(gp)
	reverse = 0;
   103f0:	d0226915 	stw	zero,-30300(gp)
	upsideDown = 0;
   103f4:	d0227115 	stw	zero,-30268(gp)
	//These controls handle the toggling of the switches; initially all of the toggled functions are off:
	toggle = 0;
   103f8:	d0226f15 	stw	zero,-30276(gp)
	speedup_toggle = 0;
   103fc:	d0227015 	stw	zero,-30272(gp)
	slowdown_toggle = 0;
   10400:	d0226e15 	stw	zero,-30280(gp)
	dancing = 0;
   10404:	d0226715 	stw	zero,-30308(gp)
	re_enter = 0;
   10408:	d0227315 	stw	zero,-30260(gp)
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   1040c:	00801fc4 	movi	r2,127
   10410:	18c40804 	addi	r3,r3,4128
   10414:	18800035 	stwio	r2,0(r3)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   10418:	00c000b4 	movhi	r3,2
   1041c:	18c40c04 	addi	r3,r3,4144
   10420:	18800035 	stwio	r2,0(r3)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   10424:	00c000b4 	movhi	r3,2
   10428:	18c41004 	addi	r3,r3,4160
   1042c:	18800035 	stwio	r2,0(r3)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   10430:	00c000b4 	movhi	r3,2
   10434:	18c41404 	addi	r3,r3,4176
   10438:	18800035 	stwio	r2,0(r3)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   1043c:	00c000b4 	movhi	r3,2
   10440:	18c41804 	addi	r3,r3,4192
   10444:	18800035 	stwio	r2,0(r3)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, let0);
   10448:	00c000b4 	movhi	r3,2
   1044c:	18c41c04 	addi	r3,r3,4208
   10450:	18800035 	stwio	r2,0(r3)
	dance_state = 2; //Start with the letters in the middle
	//First Turn all six of the seven segment displays off
	print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
	prevLetter = '!';
	//Give the user instructions using the HAL commands
	alt_putstr("Hello from Nios II!\n");
   10454:	010000b4 	movhi	r4,2
	dancing = 0;
	re_enter = 0;
	dance_state = 2; //Start with the letters in the middle
	//First Turn all six of the seven segment displays off
	print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
	prevLetter = '!';
   10458:	00800844 	movi	r2,33
	//Give the user instructions using the HAL commands
	alt_putstr("Hello from Nios II!\n");
   1045c:	21312f04 	addi	r4,r4,-15172
	dancing = 0;
	re_enter = 0;
	dance_state = 2; //Start with the letters in the middle
	//First Turn all six of the seven segment displays off
	print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
	prevLetter = '!';
   10460:	d0a26a05 	stb	r2,-30296(gp)
	//Give the user instructions using the HAL commands
	alt_putstr("Hello from Nios II!\n");
   10464:	001c2240 	call	1c224 <alt_putstr>
	alt_putstr("Type what you would like to display and press ENTER\n");
   10468:	010000b4 	movhi	r4,2
   1046c:	21313504 	addi	r4,r4,-15148
   10470:	001c2240 	call	1c224 <alt_putstr>
	prevLetter = getTxt(prevLetter);	//Snag what the user put in
   10474:	d1226a07 	ldb	r4,-30296(gp)
   10478:	00102440 	call	10244 <getTxt>
   1047c:	d0a26a05 	stb	r2,-30296(gp)
	length = getActualText();		//Adjust for special characters such as 'W' or 'M'
   10480:	00102cc0 	call	102cc <getActualText>
	alt_putstr("Got it!  If you want to change the text, press KEY1\n");
   10484:	010000b4 	movhi	r4,2
   10488:	21314304 	addi	r4,r4,-15092
	prevLetter = '!';
	//Give the user instructions using the HAL commands
	alt_putstr("Hello from Nios II!\n");
	alt_putstr("Type what you would like to display and press ENTER\n");
	prevLetter = getTxt(prevLetter);	//Snag what the user put in
	length = getActualText();		//Adjust for special characters such as 'W' or 'M'
   1048c:	d0a26c15 	stw	r2,-30288(gp)
	alt_putstr("Got it!  If you want to change the text, press KEY1\n");
}
   10490:	dfc00017 	ldw	ra,0(sp)
   10494:	dec00104 	addi	sp,sp,4
	//Give the user instructions using the HAL commands
	alt_putstr("Hello from Nios II!\n");
	alt_putstr("Type what you would like to display and press ENTER\n");
	prevLetter = getTxt(prevLetter);	//Snag what the user put in
	length = getActualText();		//Adjust for special characters such as 'W' or 'M'
	alt_putstr("Got it!  If you want to change the text, press KEY1\n");
   10498:	001c2241 	jmpi	1c224 <alt_putstr>

0001049c <clearActualText>:
	}
	return idx;
}
//This function clears the text on the display:
void clearActualText(){
	for(int i = 0; i <= length; i++){
   1049c:	d0e26c17 	ldw	r3,-30288(gp)
		text[i] = '\0';
   104a0:	010000b4 	movhi	r4,2
	}
	return idx;
}
//This function clears the text on the display:
void clearActualText(){
	for(int i = 0; i <= length; i++){
   104a4:	0005883a 	mov	r2,zero
		text[i] = '\0';
   104a8:	21372104 	addi	r4,r4,-9084
	}
	return idx;
}
//This function clears the text on the display:
void clearActualText(){
	for(int i = 0; i <= length; i++){
   104ac:	18800416 	blt	r3,r2,104c0 <clearActualText+0x24>
		text[i] = '\0';
   104b0:	110b883a 	add	r5,r2,r4
   104b4:	28000005 	stb	zero,0(r5)
	}
	return idx;
}
//This function clears the text on the display:
void clearActualText(){
	for(int i = 0; i <= length; i++){
   104b8:	10800044 	addi	r2,r2,1
   104bc:	003ffb06 	br	104ac <_gp+0xfffeb250>
		text[i] = '\0';
	}
	return;
}
   104c0:	f800283a 	ret

000104c4 <updateTimer>:
//This function updates the timer based on whether the user has toggled a speedup or slowdown
int updateTimer(int tmr, int speedup_tog, int slowdown_tog){
	if (speedup_tog){
   104c4:	28000426 	beq	r5,zero,104d8 <updateTimer+0x14>
		//If the user wishes to speed the display up by pressing KEY0
		if ((tmr - UPDATECLOCKAMT) > 0)//We don't want the timer to go negative
   104c8:	0087d004 	movi	r2,8000
   104cc:	1100050e 	bge	r2,r4,104e4 <updateTimer+0x20>
			return tmr - UPDATECLOCKAMT;
   104d0:	20b83004 	addi	r2,r4,-8000
   104d4:	f800283a 	ret
	}
	else if (slowdown_tog)
   104d8:	30000226 	beq	r6,zero,104e4 <updateTimer+0x20>
		//If the user wishes to slow the display down by pressing KEY1
		return tmr + UPDATECLOCKAMT;
   104dc:	2087d004 	addi	r2,r4,8000
   104e0:	f800283a 	ret
   104e4:	2005883a 	mov	r2,r4
	//Return the modified timer amount so we can update what is stored in the timer variable
	return tmr;
}
   104e8:	f800283a 	ret

000104ec <updateLocation>:
//This function returns a new Location based on the previous one.
int updateLocation(int loc, int len){
	  //Move the display if we are unpaused
		  if (pause == 0){
   104ec:	d0a26617 	ldw	r2,-30312(gp)
		return tmr + UPDATECLOCKAMT;
	//Return the modified timer amount so we can update what is stored in the timer variable
	return tmr;
}
//This function returns a new Location based on the previous one.
int updateLocation(int loc, int len){
   104f0:	defffd04 	addi	sp,sp,-12
   104f4:	dc400115 	stw	r17,4(sp)
   104f8:	dc000015 	stw	r16,0(sp)
   104fc:	dfc00215 	stw	ra,8(sp)
   10500:	2021883a 	mov	r16,r4
   10504:	2823883a 	mov	r17,r5
	  //Move the display if we are unpaused
		  if (pause == 0){
   10508:	1000091e 	bne	r2,zero,10530 <updateLocation+0x44>
			  dancing = 0;
			  dance_state = 2;
   1050c:	00800084 	movi	r2,2
   10510:	d0a27215 	stw	r2,-30264(gp)
			  if (reverse == 0)
   10514:	d0a26917 	ldw	r2,-30300(gp)
}
//This function returns a new Location based on the previous one.
int updateLocation(int loc, int len){
	  //Move the display if we are unpaused
		  if (pause == 0){
			  dancing = 0;
   10518:	d0226715 	stw	zero,-30308(gp)
			  dance_state = 2;
			  if (reverse == 0)
   1051c:	1000021e 	bne	r2,zero,10528 <updateLocation+0x3c>
				  loc++;   //Move the display forwards if the backwards button is NOT toggled (KEY2)
   10520:	24000044 	addi	r16,r4,1
   10524:	00001206 	br	10570 <updateLocation+0x84>
			  else
				  loc--;  //Otherwise we go backwards if the user toggled the display to go backwards
   10528:	243fffc4 	addi	r16,r4,-1
   1052c:	00001006 	br	10570 <updateLocation+0x84>
		  }
		  //If we are paused, check to see if dancing has been pressed
		  else{
			  reverse = 0;
			  if (dancing) {
   10530:	d0a26717 	ldw	r2,-30308(gp)
			  else
				  loc--;  //Otherwise we go backwards if the user toggled the display to go backwards
		  }
		  //If we are paused, check to see if dancing has been pressed
		  else{
			  reverse = 0;
   10534:	d0226915 	stw	zero,-30300(gp)
			  if (dancing) {
   10538:	10000d26 	beq	r2,zero,10570 <updateLocation+0x84>
				  if (dance_dir){
   1053c:	d0a26d17 	ldw	r2,-30284(gp)
   10540:	d1227217 	ldw	r4,-30264(gp)
   10544:	10000426 	beq	r2,zero,10558 <updateLocation+0x6c>
					  //If the Dancing Direction switch is down (SW8), cycle through the states so the letters move down
					  dance_state = (dance_state + 1) % 5;}
   10548:	01400144 	movi	r5,5
   1054c:	21000044 	addi	r4,r4,1
   10550:	0010c780 	call	10c78 <__modsi3>
   10554:	00000206 	br	10560 <updateLocation+0x74>
				  else{
					  //If the Dancing Direction switch is up (SW8), cycle through the states so the letters move up
					  dance_state = (dance_state - 1);
   10558:	20bfffc4 	addi	r2,r4,-1
					  if (dance_state < 0)
   1055c:	10000216 	blt	r2,zero,10568 <updateLocation+0x7c>
				  if (dance_dir){
					  //If the Dancing Direction switch is down (SW8), cycle through the states so the letters move down
					  dance_state = (dance_state + 1) % 5;}
				  else{
					  //If the Dancing Direction switch is up (SW8), cycle through the states so the letters move up
					  dance_state = (dance_state - 1);
   10560:	d0a27215 	stw	r2,-30264(gp)
   10564:	00000206 	br	10570 <updateLocation+0x84>
					  if (dance_state < 0)
						  dance_state = dance_state + 5;
   10568:	21000104 	addi	r4,r4,4
   1056c:	d1227215 	stw	r4,-30264(gp)
				  }
			  }
		  }
		  if (loc >= len){ //If we have reached the end of the string, reset the locator back to the beginning
   10570:	84400416 	blt	r16,r17,10584 <updateLocation+0x98>
			  return loc % len;
   10574:	880b883a 	mov	r5,r17
   10578:	8009883a 	mov	r4,r16
   1057c:	0010c780 	call	10c78 <__modsi3>
   10580:	00000406 	br	10594 <updateLocation+0xa8>
		  }
		  else if (loc < 0){ //If we have reached the end of the string backwards, we need to jump back the other way
   10584:	8000020e 	bge	r16,zero,10590 <updateLocation+0xa4>
			  return loc + len;
   10588:	8445883a 	add	r2,r16,r17
   1058c:	00000106 	br	10594 <updateLocation+0xa8>
   10590:	8005883a 	mov	r2,r16
		  }
		  return loc;
}
   10594:	dfc00217 	ldw	ra,8(sp)
   10598:	dc400117 	ldw	r17,4(sp)
   1059c:	dc000017 	ldw	r16,0(sp)
   105a0:	dec00304 	addi	sp,sp,12
   105a4:	f800283a 	ret

000105a8 <updatePBState>:

//This function updates the logic based on the buttons pressed
void updatePBState(int button_datain){
   105a8:	defffd04 	addi	sp,sp,-12
   105ac:	dc400115 	stw	r17,4(sp)
   105b0:	dfc00215 	stw	ra,8(sp)
   105b4:	dc000015 	stw	r16,0(sp)
        //Reverse Button/Dancing Button (if paused), KEY0 (toggle)
        if ((button_datain & 1) == 0 && toggle == 0){
   105b8:	2080004c 	andi	r2,r4,1
		  }
		  return loc;
}

//This function updates the logic based on the buttons pressed
void updatePBState(int button_datain){
   105bc:	2023883a 	mov	r17,r4
        //Reverse Button/Dancing Button (if paused), KEY0 (toggle)
        if ((button_datain & 1) == 0 && toggle == 0){
   105c0:	1000511e 	bne	r2,zero,10708 <updatePBState+0x160>
   105c4:	d0a26f17 	ldw	r2,-30276(gp)
   105c8:	1000511e 	bne	r2,zero,10710 <updatePBState+0x168>
              switch(flag){
   105cc:	d0a26b17 	ldw	r2,-30292(gp)
   105d0:	00c00244 	movi	r3,9
   105d4:	18804636 	bltu	r3,r2,106f0 <updatePBState+0x148>
   105d8:	100490ba 	slli	r2,r2,2
   105dc:	00c00074 	movhi	r3,1
   105e0:	18c17d04 	addi	r3,r3,1524
   105e4:	10c5883a 	add	r2,r2,r3
   105e8:	10800017 	ldw	r2,0(r2)
   105ec:	04000044 	movi	r16,1
   105f0:	1000683a 	jmp	r2
   105f4:	0001061c 	xori	zero,zero,1048
   105f8:	00010624 	muli	zero,zero,1048
   105fc:	00010634 	movhi	zero,1048
   10600:	00010648 	cmpgei	zero,zero,1049
   10604:	00010658 	cmpnei	zero,zero,1049
   10608:	0001066c 	andhi	zero,zero,1049
   1060c:	00010684 	movi	zero,1050
   10610:	0001069c 	xori	zero,zero,1050
   10614:	000106b8 	rdprs	zero,zero,1050
   10618:	000106d4 	movui	zero,1051
                case 0:
                      disp_off=0;
   1061c:	d0226815 	stw	zero,-30304(gp)
                    break;
   10620:	00003306 	br	106f0 <updatePBState+0x148>
            case 1:
                  speedup_toggle=1;
                  alt_putstr("Speeding up! (Hold down to speed up more)\n");
   10624:	010000b4 	movhi	r4,2
              switch(flag){
                case 0:
                      disp_off=0;
                    break;
            case 1:
                  speedup_toggle=1;
   10628:	d4227015 	stw	r16,-30272(gp)
                  alt_putstr("Speeding up! (Hold down to speed up more)\n");
   1062c:	21315104 	addi	r4,r4,-15036
   10630:	00000306 	br	10640 <updatePBState+0x98>
                  break;
            case 2:
                  speedup_toggle=1;
                  alt_putstr("Even Faster (Hold down to speed up more)!!!\n");
   10634:	010000b4 	movhi	r4,2
            case 1:
                  speedup_toggle=1;
                  alt_putstr("Speeding up! (Hold down to speed up more)\n");
                  break;
            case 2:
                  speedup_toggle=1;
   10638:	d4227015 	stw	r16,-30272(gp)
                  alt_putstr("Even Faster (Hold down to speed up more)!!!\n");
   1063c:	21315c04 	addi	r4,r4,-14992
   10640:	001c2240 	call	1c224 <alt_putstr>
                  break;
   10644:	00002a06 	br	106f0 <updatePBState+0x148>
            case 3:
                  speedup_toggle=1;
                  alt_putstr("Faster Still!!!\n");
   10648:	010000b4 	movhi	r4,2
            case 2:
                  speedup_toggle=1;
                  alt_putstr("Even Faster (Hold down to speed up more)!!!\n");
                  break;
            case 3:
                  speedup_toggle=1;
   1064c:	d4227015 	stw	r16,-30272(gp)
                  alt_putstr("Faster Still!!!\n");
   10650:	21316804 	addi	r4,r4,-14944
   10654:	003ffa06 	br	10640 <_gp+0xfffeb3e4>
                        break;
            case 4:
                  speedup_toggle=0;
                      slowdown_toggle=1;
                      alt_putstr("Slowing Down...\n");
   10658:	010000b4 	movhi	r4,2
            case 3:
                  speedup_toggle=1;
                  alt_putstr("Faster Still!!!\n");
                        break;
            case 4:
                  speedup_toggle=0;
   1065c:	d0227015 	stw	zero,-30272(gp)
                      slowdown_toggle=1;
   10660:	d4226e15 	stw	r16,-30280(gp)
                      alt_putstr("Slowing Down...\n");
   10664:	21316d04 	addi	r4,r4,-14924
   10668:	003ff506 	br	10640 <_gp+0xfffeb3e4>
                      break;
            case 5:
                  slowdown_toggle=0;
                  alt_putstr("Backwards!\n");
   1066c:	010000b4 	movhi	r4,2
   10670:	21317204 	addi	r4,r4,-14904
                  speedup_toggle=0;
                      slowdown_toggle=1;
                      alt_putstr("Slowing Down...\n");
                      break;
            case 5:
                  slowdown_toggle=0;
   10674:	d0226e15 	stw	zero,-30280(gp)
                  alt_putstr("Backwards!\n");
   10678:	001c2240 	call	1c224 <alt_putstr>
                  reverse = 1;
   1067c:	d4226915 	stw	r16,-30300(gp)
                  break;
   10680:	00001b06 	br	106f0 <updatePBState+0x148>
            case 6:
                  alt_putstr("Topsy-Turvey!\n");
   10684:	010000b4 	movhi	r4,2
   10688:	21317504 	addi	r4,r4,-14892
   1068c:	001c2240 	call	1c224 <alt_putstr>
                      upsideDown = 1;
   10690:	d4227115 	stw	r16,-30268(gp)
                      reverse = 0;
   10694:	d0226915 	stw	zero,-30300(gp)
                      break;
   10698:	00001506 	br	106f0 <updatePBState+0x148>
            case 7:
                  upsideDown = 0;
                        pause = 1;
                        dancing = 1;
                        dance_dir = 1;
                        alt_putstr("Let's Dance!\n");
   1069c:	010000b4 	movhi	r4,2
                  alt_putstr("Topsy-Turvey!\n");
                      upsideDown = 1;
                      reverse = 0;
                      break;
            case 7:
                  upsideDown = 0;
   106a0:	d0227115 	stw	zero,-30268(gp)
                        pause = 1;
   106a4:	d4226615 	stw	r16,-30312(gp)
                        dancing = 1;
   106a8:	d4226715 	stw	r16,-30308(gp)
                        dance_dir = 1;
   106ac:	d4226d15 	stw	r16,-30284(gp)
                        alt_putstr("Let's Dance!\n");
   106b0:	21317904 	addi	r4,r4,-14876
   106b4:	003fe206 	br	10640 <_gp+0xfffeb3e4>
                        break;
            case 8:
                  pause = 1;
                      dancing = 1;
                      alt_putstr("Keep Dancing!\n");
   106b8:	010000b4 	movhi	r4,2
   106bc:	21317d04 	addi	r4,r4,-14860
                        dancing = 1;
                        dance_dir = 1;
                        alt_putstr("Let's Dance!\n");
                        break;
            case 8:
                  pause = 1;
   106c0:	d4226615 	stw	r16,-30312(gp)
                      dancing = 1;
   106c4:	d4226715 	stw	r16,-30308(gp)
                      alt_putstr("Keep Dancing!\n");
   106c8:	001c2240 	call	1c224 <alt_putstr>
                      dance_dir = 0;
   106cc:	d0226d15 	stw	zero,-30284(gp)
                      break;
   106d0:	00000706 	br	106f0 <updatePBState+0x148>
            case 9:
                  pause = 0;
                      disp_off = 1;
                      alt_putstr("Taking a nap...zzzz....\n");
   106d4:	010000b4 	movhi	r4,2
   106d8:	21318104 	addi	r4,r4,-14844
                      dancing = 1;
                      alt_putstr("Keep Dancing!\n");
                      dance_dir = 0;
                      break;
            case 9:
                  pause = 0;
   106dc:	d0226615 	stw	zero,-30312(gp)
                      disp_off = 1;
   106e0:	d4226815 	stw	r16,-30304(gp)
                      alt_putstr("Taking a nap...zzzz....\n");
   106e4:	001c2240 	call	1c224 <alt_putstr>
                      flag = -1;
   106e8:	00bfffc4 	movi	r2,-1
   106ec:	d0a26b15 	stw	r2,-30292(gp)
                      break;
              }
              toggle = 1;
   106f0:	00800044 	movi	r2,1
   106f4:	d0a26f15 	stw	r2,-30276(gp)
              flag++;
   106f8:	d0a26b17 	ldw	r2,-30292(gp)
   106fc:	10800044 	addi	r2,r2,1
   10700:	d0a26b15 	stw	r2,-30292(gp)
   10704:	00000206 	br	10710 <updatePBState+0x168>
        } else if ((button_datain & 1) != 0) {
              toggle = 0; // So user doesn't continuously toggle
   10708:	d0226f15 	stw	zero,-30276(gp)
              speedup_toggle = 0;
   1070c:	d0227015 	stw	zero,-30272(gp)
        }

        //If the user wishes to re-enter text, KEY1
        if ((button_datain & 2) == 0){
   10710:	8c40008c 	andi	r17,r17,2
   10714:	8800031e 	bne	r17,zero,10724 <updatePBState+0x17c>
              flag = 0;
              re_enter = 1;
   10718:	00800044 	movi	r2,1
              speedup_toggle = 0;
        }

        //If the user wishes to re-enter text, KEY1
        if ((button_datain & 2) == 0){
              flag = 0;
   1071c:	d0226b15 	stw	zero,-30292(gp)
              re_enter = 1;
   10720:	d0a27315 	stw	r2,-30260(gp)
        }
}
   10724:	dfc00217 	ldw	ra,8(sp)
   10728:	dc400117 	ldw	r17,4(sp)
   1072c:	dc000017 	ldw	r16,0(sp)
   10730:	dec00304 	addi	sp,sp,12
   10734:	f800283a 	ret

00010738 <getBin>:
	int bit7 = (letter_inv & 0b1000000) >> 3;
	int res = (0b0000000) | bit0 | bit1 | bit5 | bit7;
	return ~res; //Uninvert the binary representation so the display knows which lights to turn on
}
//Gets the binary representation of the character
int getBin(char letter){
   10738:	213ff404 	addi	r4,r4,-48
   1073c:	21003fcc 	andi	r4,r4,255
   10740:	00800a84 	movi	r2,42
   10744:	11000536 	bltu	r2,r4,1075c <getBin+0x24>
   10748:	008000b4 	movhi	r2,2
   1074c:	10b18744 	addi	r2,r2,-14819
   10750:	1109883a 	add	r4,r2,r4
   10754:	20800007 	ldb	r2,0(r4)
   10758:	f800283a 	ret
	/*Based on the character entered, we convert to binary so the 7-segment knows which lights to turn on.
	The 7-segment has inverted logic so a 0 means the light is on and a 1 means the light is off.
	The rightmost bit starts the index at HEX#[0], and the leftmost bit is HEX#[6], the pattern
	for the 7-segment is shown in the DE0_C5 User Manual*/
	switch(letter){
   1075c:	00801fc4 	movi	r2,127
	case 'Z':
		return 0b0100100;
	default:
		return 0b1111111;
	}
}
   10760:	f800283a 	ret

00010764 <getBinaryLetter>:
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
}
//Returns the letter or the upsideDown version of the letter
int getBinaryLetter(char letter){
	int let = getBin(letter);
   10764:	21003fcc 	andi	r4,r4,255
   10768:	2100201c 	xori	r4,r4,128
	int bit3 = (letter_inv & 0b0001000) >> 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
}
//Returns the letter or the upsideDown version of the letter
int getBinaryLetter(char letter){
   1076c:	deffff04 	addi	sp,sp,-4
	int let = getBin(letter);
   10770:	213fe004 	addi	r4,r4,-128
	int bit3 = (letter_inv & 0b0001000) >> 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
}
//Returns the letter or the upsideDown version of the letter
int getBinaryLetter(char letter){
   10774:	dfc00015 	stw	ra,0(sp)
	int let = getBin(letter);
   10778:	00107380 	call	10738 <getBin>
	if (upsideDown){
   1077c:	d0e27117 	ldw	r3,-30268(gp)
   10780:	18001426 	beq	r3,zero,107d4 <getBinaryLetter+0x70>
		//If the user has toggled the upsideDown switch, (SW8), we can use bit shifting to invert the display
		int letter_inv = ~let; //Inverting the binary makes the logic easier to deal with.
   10784:	0086303a 	nor	r3,zero,r2
		int bit3 = (letter_inv & 0b0001000) >> 3;
		int bit4 = (letter_inv & 0b0010000) << 1;
		int bit5 = (letter_inv & 0b0100000) >> 1;
		int bit6 = (letter_inv & 0b1000000);
		int full_inv = (0b0000000) | bit0 | bit1 | bit2 | bit3 | bit4 | bit5 | bit6;
		return ~full_inv; //Invert the logic back again
   10788:	1880004c 	andi	r2,r3,1
   1078c:	100890fa 	slli	r4,r2,3
   10790:	1880008c 	andi	r2,r3,2
   10794:	1085883a 	add	r2,r2,r2
   10798:	2084b03a 	or	r2,r4,r2
   1079c:	1900100c 	andi	r4,r3,64
   107a0:	1104b03a 	or	r2,r2,r4
   107a4:	1900010c 	andi	r4,r3,4
   107a8:	2009d07a 	srai	r4,r4,1
   107ac:	1104b03a 	or	r2,r2,r4
   107b0:	1900020c 	andi	r4,r3,8
   107b4:	2009d0fa 	srai	r4,r4,3
   107b8:	1104b03a 	or	r2,r2,r4
   107bc:	1900040c 	andi	r4,r3,16
   107c0:	18c0080c 	andi	r3,r3,32
   107c4:	1807d07a 	srai	r3,r3,1
   107c8:	2109883a 	add	r4,r4,r4
   107cc:	1104b03a 	or	r2,r2,r4
   107d0:	10c4303a 	nor	r2,r2,r3
	}
	//Otherwise, if the SW8 is in the rightside-up position, we can just display the letter
	return let;
}
   107d4:	dfc00017 	ldw	ra,0(sp)
   107d8:	dec00104 	addi	sp,sp,4
   107dc:	f800283a 	ret

000107e0 <getBinLowLow>:
        }
}

//Gets the lowest number representation of the given letter
int getBinLowLow(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; the inverting logic is easier to deal with
   107e0:	21003fcc 	andi	r4,r4,255
   107e4:	2100201c 	xori	r4,r4,128
              re_enter = 1;
        }
}

//Gets the lowest number representation of the given letter
int getBinLowLow(char letter){
   107e8:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; the inverting logic is easier to deal with
   107ec:	213fe004 	addi	r4,r4,-128
              re_enter = 1;
        }
}

//Gets the lowest number representation of the given letter
int getBinLowLow(char letter){
   107f0:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; the inverting logic is easier to deal with
   107f4:	00107640 	call	10764 <getBinaryLetter>
	int bit0 = (letter_inv & 0b0000001) << 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit0;
	return ~res; //Reinvert the binary representation of the modified letter so the display reads the correct representation
   107f8:	0084303a 	nor	r2,zero,r2
   107fc:	1080004c 	andi	r2,r2,1
   10800:	100490fa 	slli	r2,r2,3
}
   10804:	0084303a 	nor	r2,zero,r2
   10808:	dfc00017 	ldw	ra,0(sp)
   1080c:	dec00104 	addi	sp,sp,4
   10810:	f800283a 	ret

00010814 <getBinLow>:
//Gets a lower integer representation of the given letter
int getBinLow(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; inverting the binary makes the logic easier
   10814:	21003fcc 	andi	r4,r4,255
   10818:	2100201c 	xori	r4,r4,128
	int bit0 = (letter_inv & 0b0000001) << 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit0;
	return ~res; //Reinvert the binary representation of the modified letter so the display reads the correct representation
}
//Gets a lower integer representation of the given letter
int getBinLow(char letter){
   1081c:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; inverting the binary makes the logic easier
   10820:	213fe004 	addi	r4,r4,-128
	int bit0 = (letter_inv & 0b0000001) << 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit0;
	return ~res; //Reinvert the binary representation of the modified letter so the display reads the correct representation
}
//Gets a lower integer representation of the given letter
int getBinLow(char letter){
   10824:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; inverting the binary makes the logic easier
   10828:	00107640 	call	10764 <getBinaryLetter>
   1082c:	0086303a 	nor	r3,zero,r2
	int bit0 = (letter_inv & 0b0000001) << 6; //This logic deals with bit shifting so the letters appear higher on the display
	int bit1 = (letter_inv & 0b0000010) << 1;
	int bit5 = (letter_inv & 0b0100000) >> 1;
	int bit7 = (letter_inv & 0b1000000) >> 3;
	int res = (0b0000000) | bit0 | bit1 | bit5 | bit7;
	return ~res; //Uninvert the binary representation so the display knows which lights to turn on
   10830:	1900004c 	andi	r4,r3,1
   10834:	200491ba 	slli	r2,r4,6
   10838:	1900008c 	andi	r4,r3,2
   1083c:	2109883a 	add	r4,r4,r4
   10840:	1108b03a 	or	r4,r2,r4
   10844:	1880080c 	andi	r2,r3,32
   10848:	1005d07a 	srai	r2,r2,1
   1084c:	18c0100c 	andi	r3,r3,64
   10850:	2088b03a 	or	r4,r4,r2
   10854:	1805d0fa 	srai	r2,r3,3
}
   10858:	2084303a 	nor	r2,r4,r2
   1085c:	dfc00017 	ldw	ra,0(sp)
   10860:	dec00104 	addi	sp,sp,4
   10864:	f800283a 	ret

00010868 <getBinHigh>:
		return 0b1111111;
	}
}
//Gets the upper binary representation of the character
int getBinHigh(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, the logic is easier to work with inverted
   10868:	21003fcc 	andi	r4,r4,255
   1086c:	2100201c 	xori	r4,r4,128
	default:
		return 0b1111111;
	}
}
//Gets the upper binary representation of the character
int getBinHigh(char letter){
   10870:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, the logic is easier to work with inverted
   10874:	213fe004 	addi	r4,r4,-128
	default:
		return 0b1111111;
	}
}
//Gets the upper binary representation of the character
int getBinHigh(char letter){
   10878:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, the logic is easier to work with inverted
   1087c:	00107640 	call	10764 <getBinaryLetter>
   10880:	0086303a 	nor	r3,zero,r2
	int bit2 = (letter_inv & 0b0000100) >> 1 ; //This logic deals with bit shifting so the letters appear higher on the display
	int bit3 = (letter_inv & 0b0001000) << 3;
	int bit4 = (letter_inv & 0b0010000) << 1 ;
	int bit6 = (letter_inv & 0b1000000) >> 6;
	int res = (0b0000000) | bit2 | bit3 | bit4 | bit6;
	return ~res;//Uninvert the logic to get the correct representation
   10884:	1880010c 	andi	r2,r3,4
   10888:	1009d07a 	srai	r4,r2,1
   1088c:	1880020c 	andi	r2,r3,8
   10890:	100490fa 	slli	r2,r2,3
   10894:	2084b03a 	or	r2,r4,r2
   10898:	1900040c 	andi	r4,r3,16
   1089c:	18c0100c 	andi	r3,r3,64
   108a0:	1807d1ba 	srai	r3,r3,6
   108a4:	2109883a 	add	r4,r4,r4
   108a8:	1104b03a 	or	r2,r2,r4
}
   108ac:	10c4303a 	nor	r2,r2,r3
   108b0:	dfc00017 	ldw	ra,0(sp)
   108b4:	dec00104 	addi	sp,sp,4
   108b8:	f800283a 	ret

000108bc <getBinHighHigh>:
//Gets the highest number representation of the given letter
int getBinHighHigh(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, it is easier to deal with the inverted logic
   108bc:	21003fcc 	andi	r4,r4,255
   108c0:	2100201c 	xori	r4,r4,128
	int bit6 = (letter_inv & 0b1000000) >> 6;
	int res = (0b0000000) | bit2 | bit3 | bit4 | bit6;
	return ~res;//Uninvert the logic to get the correct representation
}
//Gets the highest number representation of the given letter
int getBinHighHigh(char letter){
   108c4:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, it is easier to deal with the inverted logic
   108c8:	213fe004 	addi	r4,r4,-128
	int bit6 = (letter_inv & 0b1000000) >> 6;
	int res = (0b0000000) | bit2 | bit3 | bit4 | bit6;
	return ~res;//Uninvert the logic to get the correct representation
}
//Gets the highest number representation of the given letter
int getBinHighHigh(char letter){
   108cc:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, it is easier to deal with the inverted logic
   108d0:	00107640 	call	10764 <getBinaryLetter>
	int bit3 = (letter_inv & 0b0001000) >> 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
   108d4:	0084303a 	nor	r2,zero,r2
   108d8:	1080020c 	andi	r2,r2,8
   108dc:	1005d0fa 	srai	r2,r2,3
}
   108e0:	0084303a 	nor	r2,zero,r2
   108e4:	dfc00017 	ldw	ra,0(sp)
   108e8:	dec00104 	addi	sp,sp,4
   108ec:	f800283a 	ret

000108f0 <print>:
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   108f0:	008000b4 	movhi	r2,2
   108f4:	10840804 	addi	r2,r2,4128
   108f8:	11000035 	stwio	r4,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   108fc:	008000b4 	movhi	r2,2
   10900:	10840c04 	addi	r2,r2,4144
   10904:	11400035 	stwio	r5,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   10908:	008000b4 	movhi	r2,2
   1090c:	10841004 	addi	r2,r2,4160
   10910:	11800035 	stwio	r6,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   10914:	008000b4 	movhi	r2,2
   10918:	10841404 	addi	r2,r2,4176
   1091c:	11c00035 	stwio	r7,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   10920:	d8c00017 	ldw	r3,0(sp)
   10924:	008000b4 	movhi	r2,2
   10928:	10841804 	addi	r2,r2,4192
   1092c:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, let0);
   10930:	d8c00117 	ldw	r3,4(sp)
   10934:	008000b4 	movhi	r2,2
   10938:	10841c04 	addi	r2,r2,4208
   1093c:	10c00035 	stwio	r3,0(r2)
   10940:	f800283a 	ret

00010944 <print_letters>:
	return;
}
//Prints each of the letters out to the screen; takes into account the dancing letters
void print_letters(char let5, char let4, char let3, char let2, char let1, char let0, int state){
	//If the display is "muted," don't show anything
	if (disp_off){
   10944:	d0e26817 	ldw	r3,-30304(gp)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, let0);
	return;
}
//Prints each of the letters out to the screen; takes into account the dancing letters
void print_letters(char let5, char let4, char let3, char let2, char let1, char let0, int state){
   10948:	defff404 	addi	sp,sp,-48
   1094c:	df000a15 	stw	fp,40(sp)
   10950:	ddc00915 	stw	r23,36(sp)
   10954:	dd800815 	stw	r22,32(sp)
   10958:	dd400715 	stw	r21,28(sp)
   1095c:	dd000615 	stw	r20,24(sp)
   10960:	dcc00515 	stw	r19,20(sp)
   10964:	dc400315 	stw	r17,12(sp)
   10968:	dc000215 	stw	r16,8(sp)
   1096c:	070000b4 	movhi	fp,2
   10970:	05c000b4 	movhi	r23,2
   10974:	058000b4 	movhi	r22,2
   10978:	054000b4 	movhi	r21,2
   1097c:	044000b4 	movhi	r17,2
   10980:	040000b4 	movhi	r16,2
   10984:	dfc00b15 	stw	ra,44(sp)
   10988:	dc800415 	stw	r18,16(sp)
   1098c:	dd000c17 	ldw	r20,48(sp)
   10990:	dcc00d17 	ldw	r19,52(sp)
   10994:	d8800e17 	ldw	r2,56(sp)
   10998:	e7040804 	addi	fp,fp,4128
   1099c:	bdc40c04 	addi	r23,r23,4144
   109a0:	b5841004 	addi	r22,r22,4160
   109a4:	ad441404 	addi	r21,r21,4176
   109a8:	8c441804 	addi	r17,r17,4192
   109ac:	84041c04 	addi	r16,r16,4208
	//If the display is "muted," don't show anything
	if (disp_off){
   109b0:	18000726 	beq	r3,zero,109d0 <print_letters+0x8c>
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   109b4:	00801fc4 	movi	r2,127
   109b8:	e0800035 	stwio	r2,0(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   109bc:	b8800035 	stwio	r2,0(r23)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   109c0:	b0800035 	stwio	r2,0(r22)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   109c4:	a8800035 	stwio	r2,0(r21)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   109c8:	88800035 	stwio	r2,0(r17)
   109cc:	00007006 	br	10b90 <print_letters+0x24c>
   109d0:	31803fcc 	andi	r6,r6,255
   109d4:	39c03fcc 	andi	r7,r7,255
   109d8:	3180201c 	xori	r6,r6,128
   109dc:	39c0201c 	xori	r7,r7,128
   109e0:	21003fcc 	andi	r4,r4,255
   109e4:	2c803fcc 	andi	r18,r5,255
   109e8:	31bfe004 	addi	r6,r6,-128
   109ec:	39ffe004 	addi	r7,r7,-128
   109f0:	a5003fcc 	andi	r20,r20,255
   109f4:	9cc03fcc 	andi	r19,r19,255
   109f8:	2100201c 	xori	r4,r4,128
   109fc:	9480201c 	xori	r18,r18,128
   10a00:	a500201c 	xori	r20,r20,128
   10a04:	9cc0201c 	xori	r19,r19,128
	if (disp_off){
		print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
		return;
	}
	//State refers to which dancing state the characters are in
	switch (state){
   10a08:	00c00044 	movi	r3,1
   10a0c:	d9800015 	stw	r6,0(sp)
   10a10:	d9c00115 	stw	r7,4(sp)
   10a14:	213fe004 	addi	r4,r4,-128
   10a18:	94bfe004 	addi	r18,r18,-128
   10a1c:	a53fe004 	addi	r20,r20,-128
   10a20:	9cffe004 	addi	r19,r19,-128
   10a24:	10c02826 	beq	r2,r3,10ac8 <print_letters+0x184>
   10a28:	18801216 	blt	r3,r2,10a74 <print_letters+0x130>
   10a2c:	1000481e 	bne	r2,zero,10b50 <print_letters+0x20c>
	//This is the case where the letters are shifted down by the maximum amount on the display
	case 0:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinLowLow(let5));
   10a30:	00107e00 	call	107e0 <getBinLowLow>
   10a34:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinLowLow(let4));
   10a38:	9009883a 	mov	r4,r18
   10a3c:	00107e00 	call	107e0 <getBinLowLow>
   10a40:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinLowLow(let3));
   10a44:	d9000017 	ldw	r4,0(sp)
   10a48:	00107e00 	call	107e0 <getBinLowLow>
   10a4c:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinLowLow(let2));
   10a50:	d9000117 	ldw	r4,4(sp)
   10a54:	00107e00 	call	107e0 <getBinLowLow>
   10a58:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinLowLow(let1));
   10a5c:	a009883a 	mov	r4,r20
   10a60:	00107e00 	call	107e0 <getBinLowLow>
   10a64:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinLowLow(let0));
   10a68:	9809883a 	mov	r4,r19
   10a6c:	00107e00 	call	107e0 <getBinLowLow>
   10a70:	00004706 	br	10b90 <print_letters+0x24c>
	if (disp_off){
		print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
		return;
	}
	//State refers to which dancing state the characters are in
	switch (state){
   10a74:	00c00084 	movi	r3,2
   10a78:	10c02426 	beq	r2,r3,10b0c <print_letters+0x1c8>
   10a7c:	00c000c4 	movi	r3,3
   10a80:	10c0331e 	bne	r2,r3,10b50 <print_letters+0x20c>
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinaryLetter(let1));
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinaryLetter(let0));
		return;
	//This is the case where the letters are shifted up a bit on the display
	case 3:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinHigh(let5));
   10a84:	00108680 	call	10868 <getBinHigh>
   10a88:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinHigh(let4));
   10a8c:	9009883a 	mov	r4,r18
   10a90:	00108680 	call	10868 <getBinHigh>
   10a94:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinHigh(let3));
   10a98:	d9000017 	ldw	r4,0(sp)
   10a9c:	00108680 	call	10868 <getBinHigh>
   10aa0:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinHigh(let2));
   10aa4:	d9000117 	ldw	r4,4(sp)
   10aa8:	00108680 	call	10868 <getBinHigh>
   10aac:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinHigh(let1));
   10ab0:	a009883a 	mov	r4,r20
   10ab4:	00108680 	call	10868 <getBinHigh>
   10ab8:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinHigh(let0));
   10abc:	9809883a 	mov	r4,r19
   10ac0:	00108680 	call	10868 <getBinHigh>
   10ac4:	00003206 	br	10b90 <print_letters+0x24c>
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinLowLow(let1));
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinLowLow(let0));
		return;
	//This is the case where the letters are shifted down a bit on the display
	case 1:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinLow(let5));
   10ac8:	00108140 	call	10814 <getBinLow>
   10acc:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinLow(let4));
   10ad0:	9009883a 	mov	r4,r18
   10ad4:	00108140 	call	10814 <getBinLow>
   10ad8:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinLow(let3));
   10adc:	d9000017 	ldw	r4,0(sp)
   10ae0:	00108140 	call	10814 <getBinLow>
   10ae4:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinLow(let2));
   10ae8:	d9000117 	ldw	r4,4(sp)
   10aec:	00108140 	call	10814 <getBinLow>
   10af0:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinLow(let1));
   10af4:	a009883a 	mov	r4,r20
   10af8:	00108140 	call	10814 <getBinLow>
   10afc:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinLow(let0));
   10b00:	9809883a 	mov	r4,r19
   10b04:	00108140 	call	10814 <getBinLow>
   10b08:	00002106 	br	10b90 <print_letters+0x24c>
		return;
	//This is the "main" case, where the full letters are displayed on the display
	case 2:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinaryLetter(let5));
   10b0c:	00107640 	call	10764 <getBinaryLetter>
   10b10:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinaryLetter(let4));
   10b14:	9009883a 	mov	r4,r18
   10b18:	00107640 	call	10764 <getBinaryLetter>
   10b1c:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinaryLetter(let3));
   10b20:	d9000017 	ldw	r4,0(sp)
   10b24:	00107640 	call	10764 <getBinaryLetter>
   10b28:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinaryLetter(let2));
   10b2c:	d9000117 	ldw	r4,4(sp)
   10b30:	00107640 	call	10764 <getBinaryLetter>
   10b34:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinaryLetter(let1));
   10b38:	a009883a 	mov	r4,r20
   10b3c:	00107640 	call	10764 <getBinaryLetter>
   10b40:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinaryLetter(let0));
   10b44:	9809883a 	mov	r4,r19
   10b48:	00107640 	call	10764 <getBinaryLetter>
   10b4c:	00001006 	br	10b90 <print_letters+0x24c>
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinHigh(let1));
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinHigh(let0));
		return;
	//This is the case where the letters are shifted by the maximum amount on the display
	default:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinHighHigh(let5));
   10b50:	00108bc0 	call	108bc <getBinHighHigh>
   10b54:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinHighHigh(let4));
   10b58:	9009883a 	mov	r4,r18
   10b5c:	00108bc0 	call	108bc <getBinHighHigh>
   10b60:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinHighHigh(let3));
   10b64:	d9000017 	ldw	r4,0(sp)
   10b68:	00108bc0 	call	108bc <getBinHighHigh>
   10b6c:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinHighHigh(let2));
   10b70:	d9000117 	ldw	r4,4(sp)
   10b74:	00108bc0 	call	108bc <getBinHighHigh>
   10b78:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinHighHigh(let1));
   10b7c:	a009883a 	mov	r4,r20
   10b80:	00108bc0 	call	108bc <getBinHighHigh>
   10b84:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinHighHigh(let0));
   10b88:	9809883a 	mov	r4,r19
   10b8c:	00108bc0 	call	108bc <getBinHighHigh>
   10b90:	80800035 	stwio	r2,0(r16)
		return;
	}
}
   10b94:	dfc00b17 	ldw	ra,44(sp)
   10b98:	df000a17 	ldw	fp,40(sp)
   10b9c:	ddc00917 	ldw	r23,36(sp)
   10ba0:	dd800817 	ldw	r22,32(sp)
   10ba4:	dd400717 	ldw	r21,28(sp)
   10ba8:	dd000617 	ldw	r20,24(sp)
   10bac:	dcc00517 	ldw	r19,20(sp)
   10bb0:	dc800417 	ldw	r18,16(sp)
   10bb4:	dc400317 	ldw	r17,12(sp)
   10bb8:	dc000217 	ldw	r16,8(sp)
   10bbc:	dec00c04 	addi	sp,sp,48
   10bc0:	f800283a 	ret

00010bc4 <main>:
		}
	}
	return updated;
}

int main(){
   10bc4:	defffe04 	addi	sp,sp,-8
   10bc8:	dc000015 	stw	r16,0(sp)
   10bcc:	dfc00115 	stw	ra,4(sp)
	int sensitivity = 1;
	int updated = 0;

	while (1)
	{
		updated = updateSens(IORD_ALTERA_AVALON_PIO_DATA(BUTTON_BASE), updated, sensitivity);
   10bd0:	040000b4 	movhi	r16,2
	return updated;
}

int main(){

	char mode = read_chars();
   10bd4:	001016c0 	call	1016c <read_chars>

	int sensitivity = 1;
	int updated = 0;
   10bd8:	0005883a 	mov	r2,zero

	while (1)
	{
		updated = updateSens(IORD_ALTERA_AVALON_PIO_DATA(BUTTON_BASE), updated, sensitivity);
   10bdc:	84042804 	addi	r16,r16,4256
   10be0:	81000037 	ldwio	r4,0(r16)
   10be4:	01800044 	movi	r6,1
   10be8:	100b883a 	mov	r5,r2
   10bec:	00101f40 	call	101f4 <updateSens>
   10bf0:	003ffb06 	br	10be0 <_gp+0xfffeb984>

00010bf4 <__divsi3>:
   10bf4:	20001b16 	blt	r4,zero,10c64 <__divsi3+0x70>
   10bf8:	000f883a 	mov	r7,zero
   10bfc:	28001616 	blt	r5,zero,10c58 <__divsi3+0x64>
   10c00:	200d883a 	mov	r6,r4
   10c04:	29001a2e 	bgeu	r5,r4,10c70 <__divsi3+0x7c>
   10c08:	00800804 	movi	r2,32
   10c0c:	00c00044 	movi	r3,1
   10c10:	00000106 	br	10c18 <__divsi3+0x24>
   10c14:	10000d26 	beq	r2,zero,10c4c <__divsi3+0x58>
   10c18:	294b883a 	add	r5,r5,r5
   10c1c:	10bfffc4 	addi	r2,r2,-1
   10c20:	18c7883a 	add	r3,r3,r3
   10c24:	293ffb36 	bltu	r5,r4,10c14 <_gp+0xfffeb9b8>
   10c28:	0005883a 	mov	r2,zero
   10c2c:	18000726 	beq	r3,zero,10c4c <__divsi3+0x58>
   10c30:	0005883a 	mov	r2,zero
   10c34:	31400236 	bltu	r6,r5,10c40 <__divsi3+0x4c>
   10c38:	314dc83a 	sub	r6,r6,r5
   10c3c:	10c4b03a 	or	r2,r2,r3
   10c40:	1806d07a 	srli	r3,r3,1
   10c44:	280ad07a 	srli	r5,r5,1
   10c48:	183ffa1e 	bne	r3,zero,10c34 <_gp+0xfffeb9d8>
   10c4c:	38000126 	beq	r7,zero,10c54 <__divsi3+0x60>
   10c50:	0085c83a 	sub	r2,zero,r2
   10c54:	f800283a 	ret
   10c58:	014bc83a 	sub	r5,zero,r5
   10c5c:	39c0005c 	xori	r7,r7,1
   10c60:	003fe706 	br	10c00 <_gp+0xfffeb9a4>
   10c64:	0109c83a 	sub	r4,zero,r4
   10c68:	01c00044 	movi	r7,1
   10c6c:	003fe306 	br	10bfc <_gp+0xfffeb9a0>
   10c70:	00c00044 	movi	r3,1
   10c74:	003fee06 	br	10c30 <_gp+0xfffeb9d4>

00010c78 <__modsi3>:
   10c78:	20001716 	blt	r4,zero,10cd8 <__modsi3+0x60>
   10c7c:	000f883a 	mov	r7,zero
   10c80:	2005883a 	mov	r2,r4
   10c84:	28001216 	blt	r5,zero,10cd0 <__modsi3+0x58>
   10c88:	2900162e 	bgeu	r5,r4,10ce4 <__modsi3+0x6c>
   10c8c:	01800804 	movi	r6,32
   10c90:	00c00044 	movi	r3,1
   10c94:	00000106 	br	10c9c <__modsi3+0x24>
   10c98:	30000a26 	beq	r6,zero,10cc4 <__modsi3+0x4c>
   10c9c:	294b883a 	add	r5,r5,r5
   10ca0:	31bfffc4 	addi	r6,r6,-1
   10ca4:	18c7883a 	add	r3,r3,r3
   10ca8:	293ffb36 	bltu	r5,r4,10c98 <_gp+0xfffeba3c>
   10cac:	18000526 	beq	r3,zero,10cc4 <__modsi3+0x4c>
   10cb0:	1806d07a 	srli	r3,r3,1
   10cb4:	11400136 	bltu	r2,r5,10cbc <__modsi3+0x44>
   10cb8:	1145c83a 	sub	r2,r2,r5
   10cbc:	280ad07a 	srli	r5,r5,1
   10cc0:	183ffb1e 	bne	r3,zero,10cb0 <_gp+0xfffeba54>
   10cc4:	38000126 	beq	r7,zero,10ccc <__modsi3+0x54>
   10cc8:	0085c83a 	sub	r2,zero,r2
   10ccc:	f800283a 	ret
   10cd0:	014bc83a 	sub	r5,zero,r5
   10cd4:	003fec06 	br	10c88 <_gp+0xfffeba2c>
   10cd8:	0109c83a 	sub	r4,zero,r4
   10cdc:	01c00044 	movi	r7,1
   10ce0:	003fe706 	br	10c80 <_gp+0xfffeba24>
   10ce4:	00c00044 	movi	r3,1
   10ce8:	003ff106 	br	10cb0 <_gp+0xfffeba54>

00010cec <__udivsi3>:
   10cec:	200d883a 	mov	r6,r4
   10cf0:	2900152e 	bgeu	r5,r4,10d48 <__udivsi3+0x5c>
   10cf4:	28001416 	blt	r5,zero,10d48 <__udivsi3+0x5c>
   10cf8:	00800804 	movi	r2,32
   10cfc:	00c00044 	movi	r3,1
   10d00:	00000206 	br	10d0c <__udivsi3+0x20>
   10d04:	10000e26 	beq	r2,zero,10d40 <__udivsi3+0x54>
   10d08:	28000516 	blt	r5,zero,10d20 <__udivsi3+0x34>
   10d0c:	294b883a 	add	r5,r5,r5
   10d10:	10bfffc4 	addi	r2,r2,-1
   10d14:	18c7883a 	add	r3,r3,r3
   10d18:	293ffa36 	bltu	r5,r4,10d04 <_gp+0xfffebaa8>
   10d1c:	18000826 	beq	r3,zero,10d40 <__udivsi3+0x54>
   10d20:	0005883a 	mov	r2,zero
   10d24:	31400236 	bltu	r6,r5,10d30 <__udivsi3+0x44>
   10d28:	314dc83a 	sub	r6,r6,r5
   10d2c:	10c4b03a 	or	r2,r2,r3
   10d30:	1806d07a 	srli	r3,r3,1
   10d34:	280ad07a 	srli	r5,r5,1
   10d38:	183ffa1e 	bne	r3,zero,10d24 <_gp+0xfffebac8>
   10d3c:	f800283a 	ret
   10d40:	0005883a 	mov	r2,zero
   10d44:	f800283a 	ret
   10d48:	00c00044 	movi	r3,1
   10d4c:	003ff406 	br	10d20 <_gp+0xfffebac4>

00010d50 <__umodsi3>:
   10d50:	2005883a 	mov	r2,r4
   10d54:	2900122e 	bgeu	r5,r4,10da0 <__umodsi3+0x50>
   10d58:	28001116 	blt	r5,zero,10da0 <__umodsi3+0x50>
   10d5c:	01800804 	movi	r6,32
   10d60:	00c00044 	movi	r3,1
   10d64:	00000206 	br	10d70 <__umodsi3+0x20>
   10d68:	30000c26 	beq	r6,zero,10d9c <__umodsi3+0x4c>
   10d6c:	28000516 	blt	r5,zero,10d84 <__umodsi3+0x34>
   10d70:	294b883a 	add	r5,r5,r5
   10d74:	31bfffc4 	addi	r6,r6,-1
   10d78:	18c7883a 	add	r3,r3,r3
   10d7c:	293ffa36 	bltu	r5,r4,10d68 <_gp+0xfffebb0c>
   10d80:	18000626 	beq	r3,zero,10d9c <__umodsi3+0x4c>
   10d84:	1806d07a 	srli	r3,r3,1
   10d88:	11400136 	bltu	r2,r5,10d90 <__umodsi3+0x40>
   10d8c:	1145c83a 	sub	r2,r2,r5
   10d90:	280ad07a 	srli	r5,r5,1
   10d94:	183ffb1e 	bne	r3,zero,10d84 <_gp+0xfffebb28>
   10d98:	f800283a 	ret
   10d9c:	f800283a 	ret
   10da0:	00c00044 	movi	r3,1
   10da4:	003ff706 	br	10d84 <_gp+0xfffebb28>

00010da8 <_asprintf_r>:
   10da8:	deffe304 	addi	sp,sp,-116
   10dac:	dc001a15 	stw	r16,104(sp)
   10db0:	2821883a 	mov	r16,r5
   10db4:	dfc01b15 	stw	ra,108(sp)
   10db8:	d9c01c15 	stw	r7,112(sp)
   10dbc:	0080a204 	movi	r2,648
   10dc0:	d880030d 	sth	r2,12(sp)
   10dc4:	d9c01c04 	addi	r7,sp,112
   10dc8:	00bfffc4 	movi	r2,-1
   10dcc:	d80b883a 	mov	r5,sp
   10dd0:	d8000015 	stw	zero,0(sp)
   10dd4:	d8000415 	stw	zero,16(sp)
   10dd8:	d8000215 	stw	zero,8(sp)
   10ddc:	d8000515 	stw	zero,20(sp)
   10de0:	d880038d 	sth	r2,14(sp)
   10de4:	00119100 	call	11910 <___svfprintf_internal_r>
   10de8:	10000416 	blt	r2,zero,10dfc <_asprintf_r+0x54>
   10dec:	d8c00017 	ldw	r3,0(sp)
   10df0:	18000005 	stb	zero,0(r3)
   10df4:	d8c00417 	ldw	r3,16(sp)
   10df8:	80c00015 	stw	r3,0(r16)
   10dfc:	dfc01b17 	ldw	ra,108(sp)
   10e00:	dc001a17 	ldw	r16,104(sp)
   10e04:	dec01d04 	addi	sp,sp,116
   10e08:	f800283a 	ret

00010e0c <asprintf>:
   10e0c:	deffe204 	addi	sp,sp,-120
   10e10:	dc001a15 	stw	r16,104(sp)
   10e14:	2021883a 	mov	r16,r4
   10e18:	dfc01b15 	stw	ra,108(sp)
   10e1c:	d9801c15 	stw	r6,112(sp)
   10e20:	d9c01d15 	stw	r7,116(sp)
   10e24:	008000b4 	movhi	r2,2
   10e28:	10b49904 	addi	r2,r2,-11676
   10e2c:	11000017 	ldw	r4,0(r2)
   10e30:	0080a204 	movi	r2,648
   10e34:	280d883a 	mov	r6,r5
   10e38:	d880030d 	sth	r2,12(sp)
   10e3c:	d9c01c04 	addi	r7,sp,112
   10e40:	00bfffc4 	movi	r2,-1
   10e44:	d80b883a 	mov	r5,sp
   10e48:	d8000015 	stw	zero,0(sp)
   10e4c:	d8000415 	stw	zero,16(sp)
   10e50:	d8000215 	stw	zero,8(sp)
   10e54:	d8000515 	stw	zero,20(sp)
   10e58:	d880038d 	sth	r2,14(sp)
   10e5c:	00119100 	call	11910 <___svfprintf_internal_r>
   10e60:	10000416 	blt	r2,zero,10e74 <asprintf+0x68>
   10e64:	d8c00017 	ldw	r3,0(sp)
   10e68:	18000005 	stb	zero,0(r3)
   10e6c:	d8c00417 	ldw	r3,16(sp)
   10e70:	80c00015 	stw	r3,0(r16)
   10e74:	dfc01b17 	ldw	ra,108(sp)
   10e78:	dc001a17 	ldw	r16,104(sp)
   10e7c:	dec01e04 	addi	sp,sp,120
   10e80:	f800283a 	ret

00010e84 <malloc>:
   10e84:	008000b4 	movhi	r2,2
   10e88:	10b49904 	addi	r2,r2,-11676
   10e8c:	200b883a 	mov	r5,r4
   10e90:	11000017 	ldw	r4,0(r2)
   10e94:	0010eac1 	jmpi	10eac <_malloc_r>

00010e98 <free>:
   10e98:	008000b4 	movhi	r2,2
   10e9c:	10b49904 	addi	r2,r2,-11676
   10ea0:	200b883a 	mov	r5,r4
   10ea4:	11000017 	ldw	r4,0(r2)
   10ea8:	00155a01 	jmpi	155a0 <_free_r>

00010eac <_malloc_r>:
   10eac:	defff504 	addi	sp,sp,-44
   10eb0:	dc800315 	stw	r18,12(sp)
   10eb4:	dfc00a15 	stw	ra,40(sp)
   10eb8:	df000915 	stw	fp,36(sp)
   10ebc:	ddc00815 	stw	r23,32(sp)
   10ec0:	dd800715 	stw	r22,28(sp)
   10ec4:	dd400615 	stw	r21,24(sp)
   10ec8:	dd000515 	stw	r20,20(sp)
   10ecc:	dcc00415 	stw	r19,16(sp)
   10ed0:	dc400215 	stw	r17,8(sp)
   10ed4:	dc000115 	stw	r16,4(sp)
   10ed8:	288002c4 	addi	r2,r5,11
   10edc:	00c00584 	movi	r3,22
   10ee0:	2025883a 	mov	r18,r4
   10ee4:	18807f2e 	bgeu	r3,r2,110e4 <_malloc_r+0x238>
   10ee8:	047ffe04 	movi	r17,-8
   10eec:	1462703a 	and	r17,r2,r17
   10ef0:	8800a316 	blt	r17,zero,11180 <_malloc_r+0x2d4>
   10ef4:	8940a236 	bltu	r17,r5,11180 <_malloc_r+0x2d4>
   10ef8:	001c0640 	call	1c064 <__malloc_lock>
   10efc:	00807dc4 	movi	r2,503
   10f00:	1441e92e 	bgeu	r2,r17,116a8 <_malloc_r+0x7fc>
   10f04:	8804d27a 	srli	r2,r17,9
   10f08:	1000a126 	beq	r2,zero,11190 <_malloc_r+0x2e4>
   10f0c:	00c00104 	movi	r3,4
   10f10:	18811e36 	bltu	r3,r2,1138c <_malloc_r+0x4e0>
   10f14:	8804d1ba 	srli	r2,r17,6
   10f18:	12000e44 	addi	r8,r2,57
   10f1c:	11c00e04 	addi	r7,r2,56
   10f20:	4209883a 	add	r4,r8,r8
   10f24:	04c000b4 	movhi	r19,2
   10f28:	2109883a 	add	r4,r4,r4
   10f2c:	9cf35604 	addi	r19,r19,-12968
   10f30:	2109883a 	add	r4,r4,r4
   10f34:	9909883a 	add	r4,r19,r4
   10f38:	24000117 	ldw	r16,4(r4)
   10f3c:	213ffe04 	addi	r4,r4,-8
   10f40:	24009726 	beq	r4,r16,111a0 <_malloc_r+0x2f4>
   10f44:	80800117 	ldw	r2,4(r16)
   10f48:	01bfff04 	movi	r6,-4
   10f4c:	014003c4 	movi	r5,15
   10f50:	1184703a 	and	r2,r2,r6
   10f54:	1447c83a 	sub	r3,r2,r17
   10f58:	28c00716 	blt	r5,r3,10f78 <_malloc_r+0xcc>
   10f5c:	1800920e 	bge	r3,zero,111a8 <_malloc_r+0x2fc>
   10f60:	84000317 	ldw	r16,12(r16)
   10f64:	24008e26 	beq	r4,r16,111a0 <_malloc_r+0x2f4>
   10f68:	80800117 	ldw	r2,4(r16)
   10f6c:	1184703a 	and	r2,r2,r6
   10f70:	1447c83a 	sub	r3,r2,r17
   10f74:	28fff90e 	bge	r5,r3,10f5c <_gp+0xfffebd00>
   10f78:	3809883a 	mov	r4,r7
   10f7c:	018000b4 	movhi	r6,2
   10f80:	9c000417 	ldw	r16,16(r19)
   10f84:	31b35604 	addi	r6,r6,-12968
   10f88:	32000204 	addi	r8,r6,8
   10f8c:	82013426 	beq	r16,r8,11460 <_malloc_r+0x5b4>
   10f90:	80c00117 	ldw	r3,4(r16)
   10f94:	00bfff04 	movi	r2,-4
   10f98:	188e703a 	and	r7,r3,r2
   10f9c:	3c45c83a 	sub	r2,r7,r17
   10fa0:	00c003c4 	movi	r3,15
   10fa4:	18811f16 	blt	r3,r2,11424 <_malloc_r+0x578>
   10fa8:	32000515 	stw	r8,20(r6)
   10fac:	32000415 	stw	r8,16(r6)
   10fb0:	10007f0e 	bge	r2,zero,111b0 <_malloc_r+0x304>
   10fb4:	00807fc4 	movi	r2,511
   10fb8:	11c0fd36 	bltu	r2,r7,113b0 <_malloc_r+0x504>
   10fbc:	3806d0fa 	srli	r3,r7,3
   10fc0:	01c00044 	movi	r7,1
   10fc4:	30800117 	ldw	r2,4(r6)
   10fc8:	19400044 	addi	r5,r3,1
   10fcc:	294b883a 	add	r5,r5,r5
   10fd0:	1807d0ba 	srai	r3,r3,2
   10fd4:	294b883a 	add	r5,r5,r5
   10fd8:	294b883a 	add	r5,r5,r5
   10fdc:	298b883a 	add	r5,r5,r6
   10fe0:	38c6983a 	sll	r3,r7,r3
   10fe4:	29c00017 	ldw	r7,0(r5)
   10fe8:	2a7ffe04 	addi	r9,r5,-8
   10fec:	1886b03a 	or	r3,r3,r2
   10ff0:	82400315 	stw	r9,12(r16)
   10ff4:	81c00215 	stw	r7,8(r16)
   10ff8:	30c00115 	stw	r3,4(r6)
   10ffc:	2c000015 	stw	r16,0(r5)
   11000:	3c000315 	stw	r16,12(r7)
   11004:	2005d0ba 	srai	r2,r4,2
   11008:	01400044 	movi	r5,1
   1100c:	288a983a 	sll	r5,r5,r2
   11010:	19406f36 	bltu	r3,r5,111d0 <_malloc_r+0x324>
   11014:	28c4703a 	and	r2,r5,r3
   11018:	10000a1e 	bne	r2,zero,11044 <_malloc_r+0x198>
   1101c:	00bfff04 	movi	r2,-4
   11020:	294b883a 	add	r5,r5,r5
   11024:	2088703a 	and	r4,r4,r2
   11028:	28c4703a 	and	r2,r5,r3
   1102c:	21000104 	addi	r4,r4,4
   11030:	1000041e 	bne	r2,zero,11044 <_malloc_r+0x198>
   11034:	294b883a 	add	r5,r5,r5
   11038:	28c4703a 	and	r2,r5,r3
   1103c:	21000104 	addi	r4,r4,4
   11040:	103ffc26 	beq	r2,zero,11034 <_gp+0xfffebdd8>
   11044:	02bfff04 	movi	r10,-4
   11048:	024003c4 	movi	r9,15
   1104c:	21800044 	addi	r6,r4,1
   11050:	318d883a 	add	r6,r6,r6
   11054:	318d883a 	add	r6,r6,r6
   11058:	318d883a 	add	r6,r6,r6
   1105c:	998d883a 	add	r6,r19,r6
   11060:	333ffe04 	addi	r12,r6,-8
   11064:	2017883a 	mov	r11,r4
   11068:	31800104 	addi	r6,r6,4
   1106c:	34000017 	ldw	r16,0(r6)
   11070:	31fffd04 	addi	r7,r6,-12
   11074:	81c0041e 	bne	r16,r7,11088 <_malloc_r+0x1dc>
   11078:	0000fb06 	br	11468 <_malloc_r+0x5bc>
   1107c:	1801030e 	bge	r3,zero,1148c <_malloc_r+0x5e0>
   11080:	84000317 	ldw	r16,12(r16)
   11084:	81c0f826 	beq	r16,r7,11468 <_malloc_r+0x5bc>
   11088:	80800117 	ldw	r2,4(r16)
   1108c:	1284703a 	and	r2,r2,r10
   11090:	1447c83a 	sub	r3,r2,r17
   11094:	48fff90e 	bge	r9,r3,1107c <_gp+0xfffebe20>
   11098:	80800317 	ldw	r2,12(r16)
   1109c:	81000217 	ldw	r4,8(r16)
   110a0:	89400054 	ori	r5,r17,1
   110a4:	81400115 	stw	r5,4(r16)
   110a8:	20800315 	stw	r2,12(r4)
   110ac:	11000215 	stw	r4,8(r2)
   110b0:	8463883a 	add	r17,r16,r17
   110b4:	9c400515 	stw	r17,20(r19)
   110b8:	9c400415 	stw	r17,16(r19)
   110bc:	18800054 	ori	r2,r3,1
   110c0:	88800115 	stw	r2,4(r17)
   110c4:	8a000315 	stw	r8,12(r17)
   110c8:	8a000215 	stw	r8,8(r17)
   110cc:	88e3883a 	add	r17,r17,r3
   110d0:	88c00015 	stw	r3,0(r17)
   110d4:	9009883a 	mov	r4,r18
   110d8:	001c0680 	call	1c068 <__malloc_unlock>
   110dc:	80800204 	addi	r2,r16,8
   110e0:	00001b06 	br	11150 <_malloc_r+0x2a4>
   110e4:	04400404 	movi	r17,16
   110e8:	89402536 	bltu	r17,r5,11180 <_malloc_r+0x2d4>
   110ec:	001c0640 	call	1c064 <__malloc_lock>
   110f0:	00800184 	movi	r2,6
   110f4:	01000084 	movi	r4,2
   110f8:	04c000b4 	movhi	r19,2
   110fc:	1085883a 	add	r2,r2,r2
   11100:	9cf35604 	addi	r19,r19,-12968
   11104:	1085883a 	add	r2,r2,r2
   11108:	9885883a 	add	r2,r19,r2
   1110c:	14000117 	ldw	r16,4(r2)
   11110:	10fffe04 	addi	r3,r2,-8
   11114:	80c0d926 	beq	r16,r3,1147c <_malloc_r+0x5d0>
   11118:	80c00117 	ldw	r3,4(r16)
   1111c:	81000317 	ldw	r4,12(r16)
   11120:	00bfff04 	movi	r2,-4
   11124:	1884703a 	and	r2,r3,r2
   11128:	81400217 	ldw	r5,8(r16)
   1112c:	8085883a 	add	r2,r16,r2
   11130:	10c00117 	ldw	r3,4(r2)
   11134:	29000315 	stw	r4,12(r5)
   11138:	21400215 	stw	r5,8(r4)
   1113c:	18c00054 	ori	r3,r3,1
   11140:	10c00115 	stw	r3,4(r2)
   11144:	9009883a 	mov	r4,r18
   11148:	001c0680 	call	1c068 <__malloc_unlock>
   1114c:	80800204 	addi	r2,r16,8
   11150:	dfc00a17 	ldw	ra,40(sp)
   11154:	df000917 	ldw	fp,36(sp)
   11158:	ddc00817 	ldw	r23,32(sp)
   1115c:	dd800717 	ldw	r22,28(sp)
   11160:	dd400617 	ldw	r21,24(sp)
   11164:	dd000517 	ldw	r20,20(sp)
   11168:	dcc00417 	ldw	r19,16(sp)
   1116c:	dc800317 	ldw	r18,12(sp)
   11170:	dc400217 	ldw	r17,8(sp)
   11174:	dc000117 	ldw	r16,4(sp)
   11178:	dec00b04 	addi	sp,sp,44
   1117c:	f800283a 	ret
   11180:	00800304 	movi	r2,12
   11184:	90800015 	stw	r2,0(r18)
   11188:	0005883a 	mov	r2,zero
   1118c:	003ff006 	br	11150 <_gp+0xfffebef4>
   11190:	01002004 	movi	r4,128
   11194:	02001004 	movi	r8,64
   11198:	01c00fc4 	movi	r7,63
   1119c:	003f6106 	br	10f24 <_gp+0xfffebcc8>
   111a0:	4009883a 	mov	r4,r8
   111a4:	003f7506 	br	10f7c <_gp+0xfffebd20>
   111a8:	81000317 	ldw	r4,12(r16)
   111ac:	003fde06 	br	11128 <_gp+0xfffebecc>
   111b0:	81c5883a 	add	r2,r16,r7
   111b4:	11400117 	ldw	r5,4(r2)
   111b8:	9009883a 	mov	r4,r18
   111bc:	29400054 	ori	r5,r5,1
   111c0:	11400115 	stw	r5,4(r2)
   111c4:	001c0680 	call	1c068 <__malloc_unlock>
   111c8:	80800204 	addi	r2,r16,8
   111cc:	003fe006 	br	11150 <_gp+0xfffebef4>
   111d0:	9c000217 	ldw	r16,8(r19)
   111d4:	00bfff04 	movi	r2,-4
   111d8:	85800117 	ldw	r22,4(r16)
   111dc:	b0ac703a 	and	r22,r22,r2
   111e0:	b4400336 	bltu	r22,r17,111f0 <_malloc_r+0x344>
   111e4:	b445c83a 	sub	r2,r22,r17
   111e8:	00c003c4 	movi	r3,15
   111ec:	18805d16 	blt	r3,r2,11364 <_malloc_r+0x4b8>
   111f0:	05c000b4 	movhi	r23,2
   111f4:	008000b4 	movhi	r2,2
   111f8:	10b70d04 	addi	r2,r2,-9164
   111fc:	bdf49a04 	addi	r23,r23,-11672
   11200:	15400017 	ldw	r21,0(r2)
   11204:	b8c00017 	ldw	r3,0(r23)
   11208:	00bfffc4 	movi	r2,-1
   1120c:	858d883a 	add	r6,r16,r22
   11210:	8d6b883a 	add	r21,r17,r21
   11214:	1880ea26 	beq	r3,r2,115c0 <_malloc_r+0x714>
   11218:	ad4403c4 	addi	r21,r21,4111
   1121c:	00bc0004 	movi	r2,-4096
   11220:	a8aa703a 	and	r21,r21,r2
   11224:	a80b883a 	mov	r5,r21
   11228:	9009883a 	mov	r4,r18
   1122c:	d9800015 	stw	r6,0(sp)
   11230:	00117e00 	call	117e0 <_sbrk_r>
   11234:	1029883a 	mov	r20,r2
   11238:	00bfffc4 	movi	r2,-1
   1123c:	d9800017 	ldw	r6,0(sp)
   11240:	a080e826 	beq	r20,r2,115e4 <_malloc_r+0x738>
   11244:	a180a636 	bltu	r20,r6,114e0 <_malloc_r+0x634>
   11248:	070000b4 	movhi	fp,2
   1124c:	e7371704 	addi	fp,fp,-9124
   11250:	e0800017 	ldw	r2,0(fp)
   11254:	a887883a 	add	r3,r21,r2
   11258:	e0c00015 	stw	r3,0(fp)
   1125c:	3500e626 	beq	r6,r20,115f8 <_malloc_r+0x74c>
   11260:	b9000017 	ldw	r4,0(r23)
   11264:	00bfffc4 	movi	r2,-1
   11268:	2080ee26 	beq	r4,r2,11624 <_malloc_r+0x778>
   1126c:	a185c83a 	sub	r2,r20,r6
   11270:	10c5883a 	add	r2,r2,r3
   11274:	e0800015 	stw	r2,0(fp)
   11278:	a0c001cc 	andi	r3,r20,7
   1127c:	1800bc26 	beq	r3,zero,11570 <_malloc_r+0x6c4>
   11280:	a0e9c83a 	sub	r20,r20,r3
   11284:	00840204 	movi	r2,4104
   11288:	a5000204 	addi	r20,r20,8
   1128c:	10c7c83a 	sub	r3,r2,r3
   11290:	a545883a 	add	r2,r20,r21
   11294:	1083ffcc 	andi	r2,r2,4095
   11298:	18abc83a 	sub	r21,r3,r2
   1129c:	a80b883a 	mov	r5,r21
   112a0:	9009883a 	mov	r4,r18
   112a4:	00117e00 	call	117e0 <_sbrk_r>
   112a8:	00ffffc4 	movi	r3,-1
   112ac:	10c0e126 	beq	r2,r3,11634 <_malloc_r+0x788>
   112b0:	1505c83a 	sub	r2,r2,r20
   112b4:	1545883a 	add	r2,r2,r21
   112b8:	10800054 	ori	r2,r2,1
   112bc:	e0c00017 	ldw	r3,0(fp)
   112c0:	9d000215 	stw	r20,8(r19)
   112c4:	a0800115 	stw	r2,4(r20)
   112c8:	a8c7883a 	add	r3,r21,r3
   112cc:	e0c00015 	stw	r3,0(fp)
   112d0:	84c00e26 	beq	r16,r19,1130c <_malloc_r+0x460>
   112d4:	018003c4 	movi	r6,15
   112d8:	3580a72e 	bgeu	r6,r22,11578 <_malloc_r+0x6cc>
   112dc:	81400117 	ldw	r5,4(r16)
   112e0:	013ffe04 	movi	r4,-8
   112e4:	b0bffd04 	addi	r2,r22,-12
   112e8:	1104703a 	and	r2,r2,r4
   112ec:	2900004c 	andi	r4,r5,1
   112f0:	2088b03a 	or	r4,r4,r2
   112f4:	81000115 	stw	r4,4(r16)
   112f8:	01400144 	movi	r5,5
   112fc:	8089883a 	add	r4,r16,r2
   11300:	21400115 	stw	r5,4(r4)
   11304:	21400215 	stw	r5,8(r4)
   11308:	3080cd36 	bltu	r6,r2,11640 <_malloc_r+0x794>
   1130c:	008000b4 	movhi	r2,2
   11310:	10b70c04 	addi	r2,r2,-9168
   11314:	11000017 	ldw	r4,0(r2)
   11318:	20c0012e 	bgeu	r4,r3,11320 <_malloc_r+0x474>
   1131c:	10c00015 	stw	r3,0(r2)
   11320:	008000b4 	movhi	r2,2
   11324:	10b70b04 	addi	r2,r2,-9172
   11328:	11000017 	ldw	r4,0(r2)
   1132c:	9c000217 	ldw	r16,8(r19)
   11330:	20c0012e 	bgeu	r4,r3,11338 <_malloc_r+0x48c>
   11334:	10c00015 	stw	r3,0(r2)
   11338:	80c00117 	ldw	r3,4(r16)
   1133c:	00bfff04 	movi	r2,-4
   11340:	1886703a 	and	r3,r3,r2
   11344:	1c45c83a 	sub	r2,r3,r17
   11348:	1c400236 	bltu	r3,r17,11354 <_malloc_r+0x4a8>
   1134c:	00c003c4 	movi	r3,15
   11350:	18800416 	blt	r3,r2,11364 <_malloc_r+0x4b8>
   11354:	9009883a 	mov	r4,r18
   11358:	001c0680 	call	1c068 <__malloc_unlock>
   1135c:	0005883a 	mov	r2,zero
   11360:	003f7b06 	br	11150 <_gp+0xfffebef4>
   11364:	88c00054 	ori	r3,r17,1
   11368:	80c00115 	stw	r3,4(r16)
   1136c:	8463883a 	add	r17,r16,r17
   11370:	10800054 	ori	r2,r2,1
   11374:	9c400215 	stw	r17,8(r19)
   11378:	88800115 	stw	r2,4(r17)
   1137c:	9009883a 	mov	r4,r18
   11380:	001c0680 	call	1c068 <__malloc_unlock>
   11384:	80800204 	addi	r2,r16,8
   11388:	003f7106 	br	11150 <_gp+0xfffebef4>
   1138c:	00c00504 	movi	r3,20
   11390:	18804a2e 	bgeu	r3,r2,114bc <_malloc_r+0x610>
   11394:	00c01504 	movi	r3,84
   11398:	18806e36 	bltu	r3,r2,11554 <_malloc_r+0x6a8>
   1139c:	8804d33a 	srli	r2,r17,12
   113a0:	12001bc4 	addi	r8,r2,111
   113a4:	11c01b84 	addi	r7,r2,110
   113a8:	4209883a 	add	r4,r8,r8
   113ac:	003edd06 	br	10f24 <_gp+0xfffebcc8>
   113b0:	3804d27a 	srli	r2,r7,9
   113b4:	00c00104 	movi	r3,4
   113b8:	1880442e 	bgeu	r3,r2,114cc <_malloc_r+0x620>
   113bc:	00c00504 	movi	r3,20
   113c0:	18808136 	bltu	r3,r2,115c8 <_malloc_r+0x71c>
   113c4:	11401704 	addi	r5,r2,92
   113c8:	10c016c4 	addi	r3,r2,91
   113cc:	294b883a 	add	r5,r5,r5
   113d0:	294b883a 	add	r5,r5,r5
   113d4:	294b883a 	add	r5,r5,r5
   113d8:	994b883a 	add	r5,r19,r5
   113dc:	28800017 	ldw	r2,0(r5)
   113e0:	018000b4 	movhi	r6,2
   113e4:	297ffe04 	addi	r5,r5,-8
   113e8:	31b35604 	addi	r6,r6,-12968
   113ec:	28806526 	beq	r5,r2,11584 <_malloc_r+0x6d8>
   113f0:	01bfff04 	movi	r6,-4
   113f4:	10c00117 	ldw	r3,4(r2)
   113f8:	1986703a 	and	r3,r3,r6
   113fc:	38c0022e 	bgeu	r7,r3,11408 <_malloc_r+0x55c>
   11400:	10800217 	ldw	r2,8(r2)
   11404:	28bffb1e 	bne	r5,r2,113f4 <_gp+0xfffec198>
   11408:	11400317 	ldw	r5,12(r2)
   1140c:	98c00117 	ldw	r3,4(r19)
   11410:	81400315 	stw	r5,12(r16)
   11414:	80800215 	stw	r2,8(r16)
   11418:	2c000215 	stw	r16,8(r5)
   1141c:	14000315 	stw	r16,12(r2)
   11420:	003ef806 	br	11004 <_gp+0xfffebda8>
   11424:	88c00054 	ori	r3,r17,1
   11428:	80c00115 	stw	r3,4(r16)
   1142c:	8463883a 	add	r17,r16,r17
   11430:	34400515 	stw	r17,20(r6)
   11434:	34400415 	stw	r17,16(r6)
   11438:	10c00054 	ori	r3,r2,1
   1143c:	8a000315 	stw	r8,12(r17)
   11440:	8a000215 	stw	r8,8(r17)
   11444:	88c00115 	stw	r3,4(r17)
   11448:	88a3883a 	add	r17,r17,r2
   1144c:	88800015 	stw	r2,0(r17)
   11450:	9009883a 	mov	r4,r18
   11454:	001c0680 	call	1c068 <__malloc_unlock>
   11458:	80800204 	addi	r2,r16,8
   1145c:	003f3c06 	br	11150 <_gp+0xfffebef4>
   11460:	30c00117 	ldw	r3,4(r6)
   11464:	003ee706 	br	11004 <_gp+0xfffebda8>
   11468:	5ac00044 	addi	r11,r11,1
   1146c:	588000cc 	andi	r2,r11,3
   11470:	31800204 	addi	r6,r6,8
   11474:	103efd1e 	bne	r2,zero,1106c <_gp+0xfffebe10>
   11478:	00002406 	br	1150c <_malloc_r+0x660>
   1147c:	14000317 	ldw	r16,12(r2)
   11480:	143f251e 	bne	r2,r16,11118 <_gp+0xfffebebc>
   11484:	21000084 	addi	r4,r4,2
   11488:	003ebc06 	br	10f7c <_gp+0xfffebd20>
   1148c:	8085883a 	add	r2,r16,r2
   11490:	10c00117 	ldw	r3,4(r2)
   11494:	81000317 	ldw	r4,12(r16)
   11498:	81400217 	ldw	r5,8(r16)
   1149c:	18c00054 	ori	r3,r3,1
   114a0:	10c00115 	stw	r3,4(r2)
   114a4:	29000315 	stw	r4,12(r5)
   114a8:	21400215 	stw	r5,8(r4)
   114ac:	9009883a 	mov	r4,r18
   114b0:	001c0680 	call	1c068 <__malloc_unlock>
   114b4:	80800204 	addi	r2,r16,8
   114b8:	003f2506 	br	11150 <_gp+0xfffebef4>
   114bc:	12001704 	addi	r8,r2,92
   114c0:	11c016c4 	addi	r7,r2,91
   114c4:	4209883a 	add	r4,r8,r8
   114c8:	003e9606 	br	10f24 <_gp+0xfffebcc8>
   114cc:	3804d1ba 	srli	r2,r7,6
   114d0:	11400e44 	addi	r5,r2,57
   114d4:	10c00e04 	addi	r3,r2,56
   114d8:	294b883a 	add	r5,r5,r5
   114dc:	003fbc06 	br	113d0 <_gp+0xfffec174>
   114e0:	84ff5926 	beq	r16,r19,11248 <_gp+0xfffebfec>
   114e4:	008000b4 	movhi	r2,2
   114e8:	10b35604 	addi	r2,r2,-12968
   114ec:	14000217 	ldw	r16,8(r2)
   114f0:	00bfff04 	movi	r2,-4
   114f4:	80c00117 	ldw	r3,4(r16)
   114f8:	1886703a 	and	r3,r3,r2
   114fc:	003f9106 	br	11344 <_gp+0xfffec0e8>
   11500:	60800217 	ldw	r2,8(r12)
   11504:	213fffc4 	addi	r4,r4,-1
   11508:	1300651e 	bne	r2,r12,116a0 <_malloc_r+0x7f4>
   1150c:	208000cc 	andi	r2,r4,3
   11510:	633ffe04 	addi	r12,r12,-8
   11514:	103ffa1e 	bne	r2,zero,11500 <_gp+0xfffec2a4>
   11518:	98800117 	ldw	r2,4(r19)
   1151c:	0146303a 	nor	r3,zero,r5
   11520:	1884703a 	and	r2,r3,r2
   11524:	98800115 	stw	r2,4(r19)
   11528:	294b883a 	add	r5,r5,r5
   1152c:	117f2836 	bltu	r2,r5,111d0 <_gp+0xfffebf74>
   11530:	283f2726 	beq	r5,zero,111d0 <_gp+0xfffebf74>
   11534:	2886703a 	and	r3,r5,r2
   11538:	5809883a 	mov	r4,r11
   1153c:	183ec31e 	bne	r3,zero,1104c <_gp+0xfffebdf0>
   11540:	294b883a 	add	r5,r5,r5
   11544:	2886703a 	and	r3,r5,r2
   11548:	21000104 	addi	r4,r4,4
   1154c:	183ffc26 	beq	r3,zero,11540 <_gp+0xfffec2e4>
   11550:	003ebe06 	br	1104c <_gp+0xfffebdf0>
   11554:	00c05504 	movi	r3,340
   11558:	18801236 	bltu	r3,r2,115a4 <_malloc_r+0x6f8>
   1155c:	8804d3fa 	srli	r2,r17,15
   11560:	12001e04 	addi	r8,r2,120
   11564:	11c01dc4 	addi	r7,r2,119
   11568:	4209883a 	add	r4,r8,r8
   1156c:	003e6d06 	br	10f24 <_gp+0xfffebcc8>
   11570:	00c40004 	movi	r3,4096
   11574:	003f4606 	br	11290 <_gp+0xfffec034>
   11578:	00800044 	movi	r2,1
   1157c:	a0800115 	stw	r2,4(r20)
   11580:	003f7406 	br	11354 <_gp+0xfffec0f8>
   11584:	1805d0ba 	srai	r2,r3,2
   11588:	01c00044 	movi	r7,1
   1158c:	30c00117 	ldw	r3,4(r6)
   11590:	388e983a 	sll	r7,r7,r2
   11594:	2805883a 	mov	r2,r5
   11598:	38c6b03a 	or	r3,r7,r3
   1159c:	30c00115 	stw	r3,4(r6)
   115a0:	003f9b06 	br	11410 <_gp+0xfffec1b4>
   115a4:	00c15504 	movi	r3,1364
   115a8:	18801a36 	bltu	r3,r2,11614 <_malloc_r+0x768>
   115ac:	8804d4ba 	srli	r2,r17,18
   115b0:	12001f44 	addi	r8,r2,125
   115b4:	11c01f04 	addi	r7,r2,124
   115b8:	4209883a 	add	r4,r8,r8
   115bc:	003e5906 	br	10f24 <_gp+0xfffebcc8>
   115c0:	ad400404 	addi	r21,r21,16
   115c4:	003f1706 	br	11224 <_gp+0xfffebfc8>
   115c8:	00c01504 	movi	r3,84
   115cc:	18802336 	bltu	r3,r2,1165c <_malloc_r+0x7b0>
   115d0:	3804d33a 	srli	r2,r7,12
   115d4:	11401bc4 	addi	r5,r2,111
   115d8:	10c01b84 	addi	r3,r2,110
   115dc:	294b883a 	add	r5,r5,r5
   115e0:	003f7b06 	br	113d0 <_gp+0xfffec174>
   115e4:	9c000217 	ldw	r16,8(r19)
   115e8:	00bfff04 	movi	r2,-4
   115ec:	80c00117 	ldw	r3,4(r16)
   115f0:	1886703a 	and	r3,r3,r2
   115f4:	003f5306 	br	11344 <_gp+0xfffec0e8>
   115f8:	3083ffcc 	andi	r2,r6,4095
   115fc:	103f181e 	bne	r2,zero,11260 <_gp+0xfffec004>
   11600:	99000217 	ldw	r4,8(r19)
   11604:	b545883a 	add	r2,r22,r21
   11608:	10800054 	ori	r2,r2,1
   1160c:	20800115 	stw	r2,4(r4)
   11610:	003f3e06 	br	1130c <_gp+0xfffec0b0>
   11614:	01003f84 	movi	r4,254
   11618:	02001fc4 	movi	r8,127
   1161c:	01c01f84 	movi	r7,126
   11620:	003e4006 	br	10f24 <_gp+0xfffebcc8>
   11624:	008000b4 	movhi	r2,2
   11628:	10b49a04 	addi	r2,r2,-11672
   1162c:	15000015 	stw	r20,0(r2)
   11630:	003f1106 	br	11278 <_gp+0xfffec01c>
   11634:	00800044 	movi	r2,1
   11638:	002b883a 	mov	r21,zero
   1163c:	003f1f06 	br	112bc <_gp+0xfffec060>
   11640:	81400204 	addi	r5,r16,8
   11644:	9009883a 	mov	r4,r18
   11648:	00155a00 	call	155a0 <_free_r>
   1164c:	008000b4 	movhi	r2,2
   11650:	10b71704 	addi	r2,r2,-9124
   11654:	10c00017 	ldw	r3,0(r2)
   11658:	003f2c06 	br	1130c <_gp+0xfffec0b0>
   1165c:	00c05504 	movi	r3,340
   11660:	18800536 	bltu	r3,r2,11678 <_malloc_r+0x7cc>
   11664:	3804d3fa 	srli	r2,r7,15
   11668:	11401e04 	addi	r5,r2,120
   1166c:	10c01dc4 	addi	r3,r2,119
   11670:	294b883a 	add	r5,r5,r5
   11674:	003f5606 	br	113d0 <_gp+0xfffec174>
   11678:	00c15504 	movi	r3,1364
   1167c:	18800536 	bltu	r3,r2,11694 <_malloc_r+0x7e8>
   11680:	3804d4ba 	srli	r2,r7,18
   11684:	11401f44 	addi	r5,r2,125
   11688:	10c01f04 	addi	r3,r2,124
   1168c:	294b883a 	add	r5,r5,r5
   11690:	003f4f06 	br	113d0 <_gp+0xfffec174>
   11694:	01403f84 	movi	r5,254
   11698:	00c01f84 	movi	r3,126
   1169c:	003f4c06 	br	113d0 <_gp+0xfffec174>
   116a0:	98800117 	ldw	r2,4(r19)
   116a4:	003fa006 	br	11528 <_gp+0xfffec2cc>
   116a8:	8808d0fa 	srli	r4,r17,3
   116ac:	20800044 	addi	r2,r4,1
   116b0:	1085883a 	add	r2,r2,r2
   116b4:	003e9006 	br	110f8 <_gp+0xfffebe9c>

000116b8 <memset>:
   116b8:	20c000cc 	andi	r3,r4,3
   116bc:	2005883a 	mov	r2,r4
   116c0:	18004426 	beq	r3,zero,117d4 <memset+0x11c>
   116c4:	31ffffc4 	addi	r7,r6,-1
   116c8:	30004026 	beq	r6,zero,117cc <memset+0x114>
   116cc:	2813883a 	mov	r9,r5
   116d0:	200d883a 	mov	r6,r4
   116d4:	2007883a 	mov	r3,r4
   116d8:	00000406 	br	116ec <memset+0x34>
   116dc:	3a3fffc4 	addi	r8,r7,-1
   116e0:	31800044 	addi	r6,r6,1
   116e4:	38003926 	beq	r7,zero,117cc <memset+0x114>
   116e8:	400f883a 	mov	r7,r8
   116ec:	18c00044 	addi	r3,r3,1
   116f0:	32400005 	stb	r9,0(r6)
   116f4:	1a0000cc 	andi	r8,r3,3
   116f8:	403ff81e 	bne	r8,zero,116dc <_gp+0xfffec480>
   116fc:	010000c4 	movi	r4,3
   11700:	21c02d2e 	bgeu	r4,r7,117b8 <memset+0x100>
   11704:	29003fcc 	andi	r4,r5,255
   11708:	200c923a 	slli	r6,r4,8
   1170c:	3108b03a 	or	r4,r6,r4
   11710:	200c943a 	slli	r6,r4,16
   11714:	218cb03a 	or	r6,r4,r6
   11718:	010003c4 	movi	r4,15
   1171c:	21c0182e 	bgeu	r4,r7,11780 <memset+0xc8>
   11720:	3b3ffc04 	addi	r12,r7,-16
   11724:	6018d13a 	srli	r12,r12,4
   11728:	1a000104 	addi	r8,r3,4
   1172c:	1ac00204 	addi	r11,r3,8
   11730:	6008913a 	slli	r4,r12,4
   11734:	1a800304 	addi	r10,r3,12
   11738:	1813883a 	mov	r9,r3
   1173c:	21000504 	addi	r4,r4,20
   11740:	1909883a 	add	r4,r3,r4
   11744:	49800015 	stw	r6,0(r9)
   11748:	41800015 	stw	r6,0(r8)
   1174c:	59800015 	stw	r6,0(r11)
   11750:	51800015 	stw	r6,0(r10)
   11754:	42000404 	addi	r8,r8,16
   11758:	4a400404 	addi	r9,r9,16
   1175c:	5ac00404 	addi	r11,r11,16
   11760:	52800404 	addi	r10,r10,16
   11764:	413ff71e 	bne	r8,r4,11744 <_gp+0xfffec4e8>
   11768:	63000044 	addi	r12,r12,1
   1176c:	6018913a 	slli	r12,r12,4
   11770:	39c003cc 	andi	r7,r7,15
   11774:	010000c4 	movi	r4,3
   11778:	1b07883a 	add	r3,r3,r12
   1177c:	21c00e2e 	bgeu	r4,r7,117b8 <memset+0x100>
   11780:	1813883a 	mov	r9,r3
   11784:	3811883a 	mov	r8,r7
   11788:	010000c4 	movi	r4,3
   1178c:	49800015 	stw	r6,0(r9)
   11790:	423fff04 	addi	r8,r8,-4
   11794:	4a400104 	addi	r9,r9,4
   11798:	223ffc36 	bltu	r4,r8,1178c <_gp+0xfffec530>
   1179c:	393fff04 	addi	r4,r7,-4
   117a0:	2008d0ba 	srli	r4,r4,2
   117a4:	39c000cc 	andi	r7,r7,3
   117a8:	21000044 	addi	r4,r4,1
   117ac:	2109883a 	add	r4,r4,r4
   117b0:	2109883a 	add	r4,r4,r4
   117b4:	1907883a 	add	r3,r3,r4
   117b8:	38000526 	beq	r7,zero,117d0 <memset+0x118>
   117bc:	19cf883a 	add	r7,r3,r7
   117c0:	19400005 	stb	r5,0(r3)
   117c4:	18c00044 	addi	r3,r3,1
   117c8:	38fffd1e 	bne	r7,r3,117c0 <_gp+0xfffec564>
   117cc:	f800283a 	ret
   117d0:	f800283a 	ret
   117d4:	2007883a 	mov	r3,r4
   117d8:	300f883a 	mov	r7,r6
   117dc:	003fc706 	br	116fc <_gp+0xfffec4a0>

000117e0 <_sbrk_r>:
   117e0:	defffd04 	addi	sp,sp,-12
   117e4:	dc000015 	stw	r16,0(sp)
   117e8:	040000b4 	movhi	r16,2
   117ec:	dc400115 	stw	r17,4(sp)
   117f0:	84370e04 	addi	r16,r16,-9160
   117f4:	2023883a 	mov	r17,r4
   117f8:	2809883a 	mov	r4,r5
   117fc:	dfc00215 	stw	ra,8(sp)
   11800:	80000015 	stw	zero,0(r16)
   11804:	001c25c0 	call	1c25c <sbrk>
   11808:	00ffffc4 	movi	r3,-1
   1180c:	10c00526 	beq	r2,r3,11824 <_sbrk_r+0x44>
   11810:	dfc00217 	ldw	ra,8(sp)
   11814:	dc400117 	ldw	r17,4(sp)
   11818:	dc000017 	ldw	r16,0(sp)
   1181c:	dec00304 	addi	sp,sp,12
   11820:	f800283a 	ret
   11824:	80c00017 	ldw	r3,0(r16)
   11828:	183ff926 	beq	r3,zero,11810 <_gp+0xfffec5b4>
   1182c:	88c00015 	stw	r3,0(r17)
   11830:	003ff706 	br	11810 <_gp+0xfffec5b4>

00011834 <strcmp>:
   11834:	2144b03a 	or	r2,r4,r5
   11838:	108000cc 	andi	r2,r2,3
   1183c:	1000171e 	bne	r2,zero,1189c <strcmp+0x68>
   11840:	20800017 	ldw	r2,0(r4)
   11844:	28c00017 	ldw	r3,0(r5)
   11848:	10c0141e 	bne	r2,r3,1189c <strcmp+0x68>
   1184c:	027fbff4 	movhi	r9,65279
   11850:	4a7fbfc4 	addi	r9,r9,-257
   11854:	0086303a 	nor	r3,zero,r2
   11858:	02202074 	movhi	r8,32897
   1185c:	1245883a 	add	r2,r2,r9
   11860:	42202004 	addi	r8,r8,-32640
   11864:	10c4703a 	and	r2,r2,r3
   11868:	1204703a 	and	r2,r2,r8
   1186c:	10000226 	beq	r2,zero,11878 <strcmp+0x44>
   11870:	00002306 	br	11900 <strcmp+0xcc>
   11874:	1000221e 	bne	r2,zero,11900 <strcmp+0xcc>
   11878:	21000104 	addi	r4,r4,4
   1187c:	20c00017 	ldw	r3,0(r4)
   11880:	29400104 	addi	r5,r5,4
   11884:	29800017 	ldw	r6,0(r5)
   11888:	1a4f883a 	add	r7,r3,r9
   1188c:	00c4303a 	nor	r2,zero,r3
   11890:	3884703a 	and	r2,r7,r2
   11894:	1204703a 	and	r2,r2,r8
   11898:	19bff626 	beq	r3,r6,11874 <_gp+0xfffec618>
   1189c:	20800003 	ldbu	r2,0(r4)
   118a0:	10c03fcc 	andi	r3,r2,255
   118a4:	18c0201c 	xori	r3,r3,128
   118a8:	18ffe004 	addi	r3,r3,-128
   118ac:	18000c26 	beq	r3,zero,118e0 <strcmp+0xac>
   118b0:	29800007 	ldb	r6,0(r5)
   118b4:	19800326 	beq	r3,r6,118c4 <strcmp+0x90>
   118b8:	00001306 	br	11908 <strcmp+0xd4>
   118bc:	29800007 	ldb	r6,0(r5)
   118c0:	11800b1e 	bne	r2,r6,118f0 <strcmp+0xbc>
   118c4:	21000044 	addi	r4,r4,1
   118c8:	20c00003 	ldbu	r3,0(r4)
   118cc:	29400044 	addi	r5,r5,1
   118d0:	18803fcc 	andi	r2,r3,255
   118d4:	1080201c 	xori	r2,r2,128
   118d8:	10bfe004 	addi	r2,r2,-128
   118dc:	103ff71e 	bne	r2,zero,118bc <_gp+0xfffec660>
   118e0:	0007883a 	mov	r3,zero
   118e4:	28800003 	ldbu	r2,0(r5)
   118e8:	1885c83a 	sub	r2,r3,r2
   118ec:	f800283a 	ret
   118f0:	28800003 	ldbu	r2,0(r5)
   118f4:	18c03fcc 	andi	r3,r3,255
   118f8:	1885c83a 	sub	r2,r3,r2
   118fc:	f800283a 	ret
   11900:	0005883a 	mov	r2,zero
   11904:	f800283a 	ret
   11908:	10c03fcc 	andi	r3,r2,255
   1190c:	003ff506 	br	118e4 <_gp+0xfffec688>

00011910 <___svfprintf_internal_r>:
   11910:	deffb704 	addi	sp,sp,-292
   11914:	dfc04815 	stw	ra,288(sp)
   11918:	ddc04615 	stw	r23,280(sp)
   1191c:	d9402d15 	stw	r5,180(sp)
   11920:	d9003915 	stw	r4,228(sp)
   11924:	302f883a 	mov	r23,r6
   11928:	d9c02e15 	stw	r7,184(sp)
   1192c:	df004715 	stw	fp,284(sp)
   11930:	dd804515 	stw	r22,276(sp)
   11934:	dd404415 	stw	r21,272(sp)
   11938:	dd004315 	stw	r20,268(sp)
   1193c:	dcc04215 	stw	r19,264(sp)
   11940:	dc804115 	stw	r18,260(sp)
   11944:	dc404015 	stw	r17,256(sp)
   11948:	dc003f15 	stw	r16,252(sp)
   1194c:	001595c0 	call	1595c <_localeconv_r>
   11950:	10800017 	ldw	r2,0(r2)
   11954:	1009883a 	mov	r4,r2
   11958:	d8803415 	stw	r2,208(sp)
   1195c:	0016ce40 	call	16ce4 <strlen>
   11960:	d8c02d17 	ldw	r3,180(sp)
   11964:	d8803815 	stw	r2,224(sp)
   11968:	1880030b 	ldhu	r2,12(r3)
   1196c:	1080200c 	andi	r2,r2,128
   11970:	10000226 	beq	r2,zero,1197c <___svfprintf_internal_r+0x6c>
   11974:	18800417 	ldw	r2,16(r3)
   11978:	1006b126 	beq	r2,zero,13440 <___svfprintf_internal_r+0x1b30>
   1197c:	dcc03917 	ldw	r19,228(sp)
   11980:	d8c00404 	addi	r3,sp,16
   11984:	054000b4 	movhi	r21,2
   11988:	d9001e04 	addi	r4,sp,120
   1198c:	ad71a384 	addi	r21,r21,-14706
   11990:	d8c01e15 	stw	r3,120(sp)
   11994:	d8002015 	stw	zero,128(sp)
   11998:	d8001f15 	stw	zero,124(sp)
   1199c:	d8003315 	stw	zero,204(sp)
   119a0:	d8003615 	stw	zero,216(sp)
   119a4:	d8003715 	stw	zero,220(sp)
   119a8:	1811883a 	mov	r8,r3
   119ac:	d8003a15 	stw	zero,232(sp)
   119b0:	d8003b15 	stw	zero,236(sp)
   119b4:	d8002f15 	stw	zero,188(sp)
   119b8:	d9002815 	stw	r4,160(sp)
   119bc:	b8800007 	ldb	r2,0(r23)
   119c0:	10027726 	beq	r2,zero,123a0 <___svfprintf_internal_r+0xa90>
   119c4:	00c00944 	movi	r3,37
   119c8:	b823883a 	mov	r17,r23
   119cc:	10c0021e 	bne	r2,r3,119d8 <___svfprintf_internal_r+0xc8>
   119d0:	00001406 	br	11a24 <___svfprintf_internal_r+0x114>
   119d4:	10c00326 	beq	r2,r3,119e4 <___svfprintf_internal_r+0xd4>
   119d8:	8c400044 	addi	r17,r17,1
   119dc:	88800007 	ldb	r2,0(r17)
   119e0:	103ffc1e 	bne	r2,zero,119d4 <_gp+0xfffec778>
   119e4:	8de1c83a 	sub	r16,r17,r23
   119e8:	80000e26 	beq	r16,zero,11a24 <___svfprintf_internal_r+0x114>
   119ec:	d8c02017 	ldw	r3,128(sp)
   119f0:	d8801f17 	ldw	r2,124(sp)
   119f4:	45c00015 	stw	r23,0(r8)
   119f8:	1c07883a 	add	r3,r3,r16
   119fc:	10800044 	addi	r2,r2,1
   11a00:	d8c02015 	stw	r3,128(sp)
   11a04:	44000115 	stw	r16,4(r8)
   11a08:	d8801f15 	stw	r2,124(sp)
   11a0c:	00c001c4 	movi	r3,7
   11a10:	18809916 	blt	r3,r2,11c78 <___svfprintf_internal_r+0x368>
   11a14:	42000204 	addi	r8,r8,8
   11a18:	d9402f17 	ldw	r5,188(sp)
   11a1c:	2c0b883a 	add	r5,r5,r16
   11a20:	d9402f15 	stw	r5,188(sp)
   11a24:	88800007 	ldb	r2,0(r17)
   11a28:	10009a26 	beq	r2,zero,11c94 <___svfprintf_internal_r+0x384>
   11a2c:	8dc00044 	addi	r23,r17,1
   11a30:	8c400047 	ldb	r17,1(r17)
   11a34:	0021883a 	mov	r16,zero
   11a38:	00bfffc4 	movi	r2,-1
   11a3c:	0025883a 	mov	r18,zero
   11a40:	dc002905 	stb	r16,164(sp)
   11a44:	d8002785 	stb	zero,158(sp)
   11a48:	d8002b05 	stb	zero,172(sp)
   11a4c:	d8802a15 	stw	r2,168(sp)
   11a50:	d8003115 	stw	zero,196(sp)
   11a54:	05001604 	movi	r20,88
   11a58:	05800244 	movi	r22,9
   11a5c:	4039883a 	mov	fp,r8
   11a60:	9021883a 	mov	r16,r18
   11a64:	bdc00044 	addi	r23,r23,1
   11a68:	88bff804 	addi	r2,r17,-32
   11a6c:	a0831e36 	bltu	r20,r2,126e8 <___svfprintf_internal_r+0xdd8>
   11a70:	100490ba 	slli	r2,r2,2
   11a74:	00c00074 	movhi	r3,1
   11a78:	18c6a204 	addi	r3,r3,6792
   11a7c:	10c5883a 	add	r2,r2,r3
   11a80:	10800017 	ldw	r2,0(r2)
   11a84:	1000683a 	jmp	r2
   11a88:	00012630 	cmpltui	zero,zero,1176
   11a8c:	000126e8 	cmpgeui	zero,zero,1179
   11a90:	000126e8 	cmpgeui	zero,zero,1179
   11a94:	00012624 	muli	zero,zero,1176
   11a98:	000126e8 	cmpgeui	zero,zero,1179
   11a9c:	000126e8 	cmpgeui	zero,zero,1179
   11aa0:	000126e8 	cmpgeui	zero,zero,1179
   11aa4:	000126e8 	cmpgeui	zero,zero,1179
   11aa8:	000126e8 	cmpgeui	zero,zero,1179
   11aac:	000126e8 	cmpgeui	zero,zero,1179
   11ab0:	00011cf0 	cmpltui	zero,zero,1139
   11ab4:	00012534 	movhi	zero,1172
   11ab8:	000126e8 	cmpgeui	zero,zero,1179
   11abc:	00011bfc 	xorhi	zero,zero,1135
   11ac0:	00011d14 	movui	zero,1140
   11ac4:	000126e8 	cmpgeui	zero,zero,1179
   11ac8:	00011da0 	cmpeqi	zero,zero,1142
   11acc:	00011d64 	muli	zero,zero,1141
   11ad0:	00011d64 	muli	zero,zero,1141
   11ad4:	00011d64 	muli	zero,zero,1141
   11ad8:	00011d64 	muli	zero,zero,1141
   11adc:	00011d64 	muli	zero,zero,1141
   11ae0:	00011d64 	muli	zero,zero,1141
   11ae4:	00011d64 	muli	zero,zero,1141
   11ae8:	00011d64 	muli	zero,zero,1141
   11aec:	00011d64 	muli	zero,zero,1141
   11af0:	000126e8 	cmpgeui	zero,zero,1179
   11af4:	000126e8 	cmpgeui	zero,zero,1179
   11af8:	000126e8 	cmpgeui	zero,zero,1179
   11afc:	000126e8 	cmpgeui	zero,zero,1179
   11b00:	000126e8 	cmpgeui	zero,zero,1179
   11b04:	000126e8 	cmpgeui	zero,zero,1179
   11b08:	000126e8 	cmpgeui	zero,zero,1179
   11b0c:	000126e8 	cmpgeui	zero,zero,1179
   11b10:	000126e8 	cmpgeui	zero,zero,1179
   11b14:	000126e8 	cmpgeui	zero,zero,1179
   11b18:	00011e64 	muli	zero,zero,1145
   11b1c:	00011dac 	andhi	zero,zero,1142
   11b20:	000126e8 	cmpgeui	zero,zero,1179
   11b24:	00011dac 	andhi	zero,zero,1142
   11b28:	000126e8 	cmpgeui	zero,zero,1179
   11b2c:	000126e8 	cmpgeui	zero,zero,1179
   11b30:	000126e8 	cmpgeui	zero,zero,1179
   11b34:	000126e8 	cmpgeui	zero,zero,1179
   11b38:	00011e58 	cmpnei	zero,zero,1145
   11b3c:	000126e8 	cmpgeui	zero,zero,1179
   11b40:	000126e8 	cmpgeui	zero,zero,1179
   11b44:	00011f2c 	andhi	zero,zero,1148
   11b48:	000126e8 	cmpgeui	zero,zero,1179
   11b4c:	000126e8 	cmpgeui	zero,zero,1179
   11b50:	000126e8 	cmpgeui	zero,zero,1179
   11b54:	000126e8 	cmpgeui	zero,zero,1179
   11b58:	000126e8 	cmpgeui	zero,zero,1179
   11b5c:	000123a8 	cmpgeui	zero,zero,1166
   11b60:	000126e8 	cmpgeui	zero,zero,1179
   11b64:	000126e8 	cmpgeui	zero,zero,1179
   11b68:	00012414 	movui	zero,1168
   11b6c:	000126e8 	cmpgeui	zero,zero,1179
   11b70:	000126e8 	cmpgeui	zero,zero,1179
   11b74:	000126e8 	cmpgeui	zero,zero,1179
   11b78:	000126e8 	cmpgeui	zero,zero,1179
   11b7c:	000126e8 	cmpgeui	zero,zero,1179
   11b80:	000126e8 	cmpgeui	zero,zero,1179
   11b84:	000126e8 	cmpgeui	zero,zero,1179
   11b88:	000126e8 	cmpgeui	zero,zero,1179
   11b8c:	000126e8 	cmpgeui	zero,zero,1179
   11b90:	000126e8 	cmpgeui	zero,zero,1179
   11b94:	000124d0 	cmplti	zero,zero,1171
   11b98:	00012650 	cmplti	zero,zero,1177
   11b9c:	00011dac 	andhi	zero,zero,1142
   11ba0:	00011dac 	andhi	zero,zero,1142
   11ba4:	00011dac 	andhi	zero,zero,1142
   11ba8:	000126c4 	movi	zero,1179
   11bac:	00012650 	cmplti	zero,zero,1177
   11bb0:	000126e8 	cmpgeui	zero,zero,1179
   11bb4:	000126e8 	cmpgeui	zero,zero,1179
   11bb8:	00012670 	cmpltui	zero,zero,1177
   11bbc:	000126e8 	cmpgeui	zero,zero,1179
   11bc0:	00012684 	movi	zero,1178
   11bc4:	00012514 	movui	zero,1172
   11bc8:	00011c08 	cmpgei	zero,zero,1136
   11bcc:	0001254c 	andi	zero,zero,1173
   11bd0:	000126e8 	cmpgeui	zero,zero,1179
   11bd4:	00012558 	cmpnei	zero,zero,1173
   11bd8:	000126e8 	cmpgeui	zero,zero,1179
   11bdc:	000125bc 	xorhi	zero,zero,1174
   11be0:	000126e8 	cmpgeui	zero,zero,1179
   11be4:	000126e8 	cmpgeui	zero,zero,1179
   11be8:	000125dc 	xori	zero,zero,1175
   11bec:	d8c03117 	ldw	r3,196(sp)
   11bf0:	d8802e15 	stw	r2,184(sp)
   11bf4:	00c7c83a 	sub	r3,zero,r3
   11bf8:	d8c03115 	stw	r3,196(sp)
   11bfc:	84000114 	ori	r16,r16,4
   11c00:	bc400007 	ldb	r17,0(r23)
   11c04:	003f9706 	br	11a64 <_gp+0xfffec808>
   11c08:	00800c04 	movi	r2,48
   11c0c:	d8802705 	stb	r2,156(sp)
   11c10:	00801e04 	movi	r2,120
   11c14:	d8802745 	stb	r2,157(sp)
   11c18:	d9002a17 	ldw	r4,168(sp)
   11c1c:	d8802e17 	ldw	r2,184(sp)
   11c20:	d8002785 	stb	zero,158(sp)
   11c24:	e011883a 	mov	r8,fp
   11c28:	10c00104 	addi	r3,r2,4
   11c2c:	15000017 	ldw	r20,0(r2)
   11c30:	002d883a 	mov	r22,zero
   11c34:	80800094 	ori	r2,r16,2
   11c38:	2002b616 	blt	r4,zero,12714 <___svfprintf_internal_r+0xe04>
   11c3c:	00bfdfc4 	movi	r2,-129
   11c40:	80a4703a 	and	r18,r16,r2
   11c44:	d8c02e15 	stw	r3,184(sp)
   11c48:	94800094 	ori	r18,r18,2
   11c4c:	a002a01e 	bne	r20,zero,126d0 <___svfprintf_internal_r+0xdc0>
   11c50:	014000b4 	movhi	r5,2
   11c54:	29719c04 	addi	r5,r5,-14736
   11c58:	d9403a15 	stw	r5,232(sp)
   11c5c:	04401e04 	movi	r17,120
   11c60:	d8c02a17 	ldw	r3,168(sp)
   11c64:	0039883a 	mov	fp,zero
   11c68:	1801e626 	beq	r3,zero,12404 <___svfprintf_internal_r+0xaf4>
   11c6c:	0029883a 	mov	r20,zero
   11c70:	002d883a 	mov	r22,zero
   11c74:	00020506 	br	1248c <___svfprintf_internal_r+0xb7c>
   11c78:	d9402d17 	ldw	r5,180(sp)
   11c7c:	d9801e04 	addi	r6,sp,120
   11c80:	9809883a 	mov	r4,r19
   11c84:	0016d7c0 	call	16d7c <__ssprint_r>
   11c88:	1000081e 	bne	r2,zero,11cac <___svfprintf_internal_r+0x39c>
   11c8c:	da000404 	addi	r8,sp,16
   11c90:	003f6106 	br	11a18 <_gp+0xfffec7bc>
   11c94:	d8802017 	ldw	r2,128(sp)
   11c98:	10000426 	beq	r2,zero,11cac <___svfprintf_internal_r+0x39c>
   11c9c:	d9402d17 	ldw	r5,180(sp)
   11ca0:	d9003917 	ldw	r4,228(sp)
   11ca4:	d9801e04 	addi	r6,sp,120
   11ca8:	0016d7c0 	call	16d7c <__ssprint_r>
   11cac:	d8802d17 	ldw	r2,180(sp)
   11cb0:	10c0030b 	ldhu	r3,12(r2)
   11cb4:	d8802f17 	ldw	r2,188(sp)
   11cb8:	18c0100c 	andi	r3,r3,64
   11cbc:	1806251e 	bne	r3,zero,13554 <___svfprintf_internal_r+0x1c44>
   11cc0:	dfc04817 	ldw	ra,288(sp)
   11cc4:	df004717 	ldw	fp,284(sp)
   11cc8:	ddc04617 	ldw	r23,280(sp)
   11ccc:	dd804517 	ldw	r22,276(sp)
   11cd0:	dd404417 	ldw	r21,272(sp)
   11cd4:	dd004317 	ldw	r20,268(sp)
   11cd8:	dcc04217 	ldw	r19,264(sp)
   11cdc:	dc804117 	ldw	r18,260(sp)
   11ce0:	dc404017 	ldw	r17,256(sp)
   11ce4:	dc003f17 	ldw	r16,252(sp)
   11ce8:	dec04904 	addi	sp,sp,292
   11cec:	f800283a 	ret
   11cf0:	d9002e17 	ldw	r4,184(sp)
   11cf4:	d9402e17 	ldw	r5,184(sp)
   11cf8:	21000017 	ldw	r4,0(r4)
   11cfc:	28800104 	addi	r2,r5,4
   11d00:	d9003115 	stw	r4,196(sp)
   11d04:	203fb916 	blt	r4,zero,11bec <_gp+0xfffec990>
   11d08:	d8802e15 	stw	r2,184(sp)
   11d0c:	bc400007 	ldb	r17,0(r23)
   11d10:	003f5406 	br	11a64 <_gp+0xfffec808>
   11d14:	bc400007 	ldb	r17,0(r23)
   11d18:	01000a84 	movi	r4,42
   11d1c:	b8c00044 	addi	r3,r23,1
   11d20:	89076926 	beq	r17,r4,13ac8 <___svfprintf_internal_r+0x21b8>
   11d24:	8cbff404 	addi	r18,r17,-48
   11d28:	b486b936 	bltu	r22,r18,13810 <___svfprintf_internal_r+0x1f00>
   11d2c:	0009883a 	mov	r4,zero
   11d30:	1823883a 	mov	r17,r3
   11d34:	01400284 	movi	r5,10
   11d38:	00196480 	call	19648 <__mulsi3>
   11d3c:	88c00007 	ldb	r3,0(r17)
   11d40:	1489883a 	add	r4,r2,r18
   11d44:	8dc00044 	addi	r23,r17,1
   11d48:	1cbff404 	addi	r18,r3,-48
   11d4c:	b823883a 	mov	r17,r23
   11d50:	b4bff82e 	bgeu	r22,r18,11d34 <_gp+0xfffecad8>
   11d54:	1823883a 	mov	r17,r3
   11d58:	20060416 	blt	r4,zero,1356c <___svfprintf_internal_r+0x1c5c>
   11d5c:	d9002a15 	stw	r4,168(sp)
   11d60:	003f4106 	br	11a68 <_gp+0xfffec80c>
   11d64:	8cbff404 	addi	r18,r17,-48
   11d68:	d8003115 	stw	zero,196(sp)
   11d6c:	0009883a 	mov	r4,zero
   11d70:	b823883a 	mov	r17,r23
   11d74:	01400284 	movi	r5,10
   11d78:	00196480 	call	19648 <__mulsi3>
   11d7c:	88c00007 	ldb	r3,0(r17)
   11d80:	9089883a 	add	r4,r18,r2
   11d84:	bdc00044 	addi	r23,r23,1
   11d88:	1cbff404 	addi	r18,r3,-48
   11d8c:	b823883a 	mov	r17,r23
   11d90:	b4bff82e 	bgeu	r22,r18,11d74 <_gp+0xfffecb18>
   11d94:	1823883a 	mov	r17,r3
   11d98:	d9003115 	stw	r4,196(sp)
   11d9c:	003f3206 	br	11a68 <_gp+0xfffec80c>
   11da0:	84002014 	ori	r16,r16,128
   11da4:	bc400007 	ldb	r17,0(r23)
   11da8:	003f2e06 	br	11a64 <_gp+0xfffec808>
   11dac:	8025883a 	mov	r18,r16
   11db0:	dc002903 	ldbu	r16,164(sp)
   11db4:	e011883a 	mov	r8,fp
   11db8:	84003fcc 	andi	r16,r16,255
   11dbc:	8007721e 	bne	r16,zero,13b88 <___svfprintf_internal_r+0x2278>
   11dc0:	9080020c 	andi	r2,r18,8
   11dc4:	1004a526 	beq	r2,zero,1305c <___svfprintf_internal_r+0x174c>
   11dc8:	d9002e17 	ldw	r4,184(sp)
   11dcc:	d9402e17 	ldw	r5,184(sp)
   11dd0:	d8802e17 	ldw	r2,184(sp)
   11dd4:	21000017 	ldw	r4,0(r4)
   11dd8:	29400117 	ldw	r5,4(r5)
   11ddc:	10800204 	addi	r2,r2,8
   11de0:	d9003615 	stw	r4,216(sp)
   11de4:	d9403715 	stw	r5,220(sp)
   11de8:	d8802e15 	stw	r2,184(sp)
   11dec:	d9003617 	ldw	r4,216(sp)
   11df0:	d9403717 	ldw	r5,220(sp)
   11df4:	da003e15 	stw	r8,248(sp)
   11df8:	04000044 	movi	r16,1
   11dfc:	0016c700 	call	16c70 <__fpclassifyd>
   11e00:	da003e17 	ldw	r8,248(sp)
   11e04:	1404731e 	bne	r2,r16,12fd4 <___svfprintf_internal_r+0x16c4>
   11e08:	d9003617 	ldw	r4,216(sp)
   11e0c:	d9403717 	ldw	r5,220(sp)
   11e10:	000d883a 	mov	r6,zero
   11e14:	000f883a 	mov	r7,zero
   11e18:	001aa500 	call	1aa50 <__ledf2>
   11e1c:	da003e17 	ldw	r8,248(sp)
   11e20:	10061b16 	blt	r2,zero,13690 <___svfprintf_internal_r+0x1d80>
   11e24:	df002783 	ldbu	fp,158(sp)
   11e28:	008011c4 	movi	r2,71
   11e2c:	1445810e 	bge	r2,r17,13434 <___svfprintf_internal_r+0x1b24>
   11e30:	040000b4 	movhi	r16,2
   11e34:	84319404 	addi	r16,r16,-14768
   11e38:	00c000c4 	movi	r3,3
   11e3c:	00bfdfc4 	movi	r2,-129
   11e40:	d8c02915 	stw	r3,164(sp)
   11e44:	90a4703a 	and	r18,r18,r2
   11e48:	d8c02b15 	stw	r3,172(sp)
   11e4c:	d8002a15 	stw	zero,168(sp)
   11e50:	d8003215 	stw	zero,200(sp)
   11e54:	00006c06 	br	12008 <___svfprintf_internal_r+0x6f8>
   11e58:	84000214 	ori	r16,r16,8
   11e5c:	bc400007 	ldb	r17,0(r23)
   11e60:	003f0006 	br	11a64 <_gp+0xfffec808>
   11e64:	8025883a 	mov	r18,r16
   11e68:	dc002903 	ldbu	r16,164(sp)
   11e6c:	e011883a 	mov	r8,fp
   11e70:	84003fcc 	andi	r16,r16,255
   11e74:	80073f1e 	bne	r16,zero,13b74 <___svfprintf_internal_r+0x2264>
   11e78:	94800414 	ori	r18,r18,16
   11e7c:	9080080c 	andi	r2,r18,32
   11e80:	1003bb26 	beq	r2,zero,12d70 <___svfprintf_internal_r+0x1460>
   11e84:	d9002e17 	ldw	r4,184(sp)
   11e88:	20800117 	ldw	r2,4(r4)
   11e8c:	25000017 	ldw	r20,0(r4)
   11e90:	21000204 	addi	r4,r4,8
   11e94:	d9002e15 	stw	r4,184(sp)
   11e98:	102d883a 	mov	r22,r2
   11e9c:	1003bd16 	blt	r2,zero,12d94 <___svfprintf_internal_r+0x1484>
   11ea0:	d9002a17 	ldw	r4,168(sp)
   11ea4:	df002783 	ldbu	fp,158(sp)
   11ea8:	2003d016 	blt	r4,zero,12dec <___svfprintf_internal_r+0x14dc>
   11eac:	00ffdfc4 	movi	r3,-129
   11eb0:	a584b03a 	or	r2,r20,r22
   11eb4:	90e4703a 	and	r18,r18,r3
   11eb8:	10015026 	beq	r2,zero,123fc <___svfprintf_internal_r+0xaec>
   11ebc:	b0037026 	beq	r22,zero,12c80 <___svfprintf_internal_r+0x1370>
   11ec0:	dc402915 	stw	r17,164(sp)
   11ec4:	dc001e04 	addi	r16,sp,120
   11ec8:	b023883a 	mov	r17,r22
   11ecc:	402d883a 	mov	r22,r8
   11ed0:	a009883a 	mov	r4,r20
   11ed4:	880b883a 	mov	r5,r17
   11ed8:	01800284 	movi	r6,10
   11edc:	000f883a 	mov	r7,zero
   11ee0:	00190840 	call	19084 <__umoddi3>
   11ee4:	10800c04 	addi	r2,r2,48
   11ee8:	843fffc4 	addi	r16,r16,-1
   11eec:	a009883a 	mov	r4,r20
   11ef0:	880b883a 	mov	r5,r17
   11ef4:	80800005 	stb	r2,0(r16)
   11ef8:	01800284 	movi	r6,10
   11efc:	000f883a 	mov	r7,zero
   11f00:	0018a880 	call	18a88 <__udivdi3>
   11f04:	1029883a 	mov	r20,r2
   11f08:	10c4b03a 	or	r2,r2,r3
   11f0c:	1823883a 	mov	r17,r3
   11f10:	103fef1e 	bne	r2,zero,11ed0 <_gp+0xfffecc74>
   11f14:	d8c02817 	ldw	r3,160(sp)
   11f18:	dc402917 	ldw	r17,164(sp)
   11f1c:	b011883a 	mov	r8,r22
   11f20:	1c07c83a 	sub	r3,r3,r16
   11f24:	d8c02b15 	stw	r3,172(sp)
   11f28:	00003106 	br	11ff0 <___svfprintf_internal_r+0x6e0>
   11f2c:	8025883a 	mov	r18,r16
   11f30:	dc002903 	ldbu	r16,164(sp)
   11f34:	e011883a 	mov	r8,fp
   11f38:	84003fcc 	andi	r16,r16,255
   11f3c:	80070a1e 	bne	r16,zero,13b68 <___svfprintf_internal_r+0x2258>
   11f40:	94800414 	ori	r18,r18,16
   11f44:	9080080c 	andi	r2,r18,32
   11f48:	1002f626 	beq	r2,zero,12b24 <___svfprintf_internal_r+0x1214>
   11f4c:	d9002e17 	ldw	r4,184(sp)
   11f50:	d9402a17 	ldw	r5,168(sp)
   11f54:	d8002785 	stb	zero,158(sp)
   11f58:	20800204 	addi	r2,r4,8
   11f5c:	25000017 	ldw	r20,0(r4)
   11f60:	25800117 	ldw	r22,4(r4)
   11f64:	28043716 	blt	r5,zero,13044 <___svfprintf_internal_r+0x1734>
   11f68:	013fdfc4 	movi	r4,-129
   11f6c:	a586b03a 	or	r3,r20,r22
   11f70:	d8802e15 	stw	r2,184(sp)
   11f74:	9124703a 	and	r18,r18,r4
   11f78:	1802f71e 	bne	r3,zero,12b58 <___svfprintf_internal_r+0x1248>
   11f7c:	d9402a17 	ldw	r5,168(sp)
   11f80:	0039883a 	mov	fp,zero
   11f84:	2806df26 	beq	r5,zero,13b04 <___svfprintf_internal_r+0x21f4>
   11f88:	0029883a 	mov	r20,zero
   11f8c:	002d883a 	mov	r22,zero
   11f90:	dc001e04 	addi	r16,sp,120
   11f94:	a006d0fa 	srli	r3,r20,3
   11f98:	b008977a 	slli	r4,r22,29
   11f9c:	b02cd0fa 	srli	r22,r22,3
   11fa0:	a50001cc 	andi	r20,r20,7
   11fa4:	a0800c04 	addi	r2,r20,48
   11fa8:	843fffc4 	addi	r16,r16,-1
   11fac:	20e8b03a 	or	r20,r4,r3
   11fb0:	80800005 	stb	r2,0(r16)
   11fb4:	a586b03a 	or	r3,r20,r22
   11fb8:	183ff61e 	bne	r3,zero,11f94 <_gp+0xfffecd38>
   11fbc:	90c0004c 	andi	r3,r18,1
   11fc0:	18013f26 	beq	r3,zero,124c0 <___svfprintf_internal_r+0xbb0>
   11fc4:	10803fcc 	andi	r2,r2,255
   11fc8:	1080201c 	xori	r2,r2,128
   11fcc:	10bfe004 	addi	r2,r2,-128
   11fd0:	00c00c04 	movi	r3,48
   11fd4:	10c13a26 	beq	r2,r3,124c0 <___svfprintf_internal_r+0xbb0>
   11fd8:	80ffffc5 	stb	r3,-1(r16)
   11fdc:	d8c02817 	ldw	r3,160(sp)
   11fe0:	80bfffc4 	addi	r2,r16,-1
   11fe4:	1021883a 	mov	r16,r2
   11fe8:	1887c83a 	sub	r3,r3,r2
   11fec:	d8c02b15 	stw	r3,172(sp)
   11ff0:	d8802b17 	ldw	r2,172(sp)
   11ff4:	d9002a17 	ldw	r4,168(sp)
   11ff8:	1100010e 	bge	r2,r4,12000 <___svfprintf_internal_r+0x6f0>
   11ffc:	2005883a 	mov	r2,r4
   12000:	d8802915 	stw	r2,164(sp)
   12004:	d8003215 	stw	zero,200(sp)
   12008:	e7003fcc 	andi	fp,fp,255
   1200c:	e700201c 	xori	fp,fp,128
   12010:	e73fe004 	addi	fp,fp,-128
   12014:	e0000326 	beq	fp,zero,12024 <___svfprintf_internal_r+0x714>
   12018:	d8c02917 	ldw	r3,164(sp)
   1201c:	18c00044 	addi	r3,r3,1
   12020:	d8c02915 	stw	r3,164(sp)
   12024:	90c0008c 	andi	r3,r18,2
   12028:	d8c02c15 	stw	r3,176(sp)
   1202c:	18000326 	beq	r3,zero,1203c <___svfprintf_internal_r+0x72c>
   12030:	d8c02917 	ldw	r3,164(sp)
   12034:	18c00084 	addi	r3,r3,2
   12038:	d8c02915 	stw	r3,164(sp)
   1203c:	90c0210c 	andi	r3,r18,132
   12040:	d8c03015 	stw	r3,192(sp)
   12044:	1801c31e 	bne	r3,zero,12754 <___svfprintf_internal_r+0xe44>
   12048:	d9003117 	ldw	r4,196(sp)
   1204c:	d8c02917 	ldw	r3,164(sp)
   12050:	20e9c83a 	sub	r20,r4,r3
   12054:	0501bf0e 	bge	zero,r20,12754 <___svfprintf_internal_r+0xe44>
   12058:	02400404 	movi	r9,16
   1205c:	d8c02017 	ldw	r3,128(sp)
   12060:	d8801f17 	ldw	r2,124(sp)
   12064:	4d053d0e 	bge	r9,r20,1355c <___svfprintf_internal_r+0x1c4c>
   12068:	014000b4 	movhi	r5,2
   1206c:	2971a784 	addi	r5,r5,-14690
   12070:	dc403c15 	stw	r17,240(sp)
   12074:	d9403515 	stw	r5,212(sp)
   12078:	a023883a 	mov	r17,r20
   1207c:	482d883a 	mov	r22,r9
   12080:	9029883a 	mov	r20,r18
   12084:	070001c4 	movi	fp,7
   12088:	8025883a 	mov	r18,r16
   1208c:	dc002d17 	ldw	r16,180(sp)
   12090:	00000306 	br	120a0 <___svfprintf_internal_r+0x790>
   12094:	8c7ffc04 	addi	r17,r17,-16
   12098:	42000204 	addi	r8,r8,8
   1209c:	b440130e 	bge	r22,r17,120ec <___svfprintf_internal_r+0x7dc>
   120a0:	010000b4 	movhi	r4,2
   120a4:	18c00404 	addi	r3,r3,16
   120a8:	10800044 	addi	r2,r2,1
   120ac:	2131a784 	addi	r4,r4,-14690
   120b0:	41000015 	stw	r4,0(r8)
   120b4:	45800115 	stw	r22,4(r8)
   120b8:	d8c02015 	stw	r3,128(sp)
   120bc:	d8801f15 	stw	r2,124(sp)
   120c0:	e0bff40e 	bge	fp,r2,12094 <_gp+0xfffece38>
   120c4:	d9801e04 	addi	r6,sp,120
   120c8:	800b883a 	mov	r5,r16
   120cc:	9809883a 	mov	r4,r19
   120d0:	0016d7c0 	call	16d7c <__ssprint_r>
   120d4:	103ef51e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   120d8:	8c7ffc04 	addi	r17,r17,-16
   120dc:	d8c02017 	ldw	r3,128(sp)
   120e0:	d8801f17 	ldw	r2,124(sp)
   120e4:	da000404 	addi	r8,sp,16
   120e8:	b47fed16 	blt	r22,r17,120a0 <_gp+0xfffece44>
   120ec:	9021883a 	mov	r16,r18
   120f0:	a025883a 	mov	r18,r20
   120f4:	8829883a 	mov	r20,r17
   120f8:	dc403c17 	ldw	r17,240(sp)
   120fc:	d9403517 	ldw	r5,212(sp)
   12100:	a0c7883a 	add	r3,r20,r3
   12104:	10800044 	addi	r2,r2,1
   12108:	41400015 	stw	r5,0(r8)
   1210c:	45000115 	stw	r20,4(r8)
   12110:	d8c02015 	stw	r3,128(sp)
   12114:	d8801f15 	stw	r2,124(sp)
   12118:	010001c4 	movi	r4,7
   1211c:	2082c116 	blt	r4,r2,12c24 <___svfprintf_internal_r+0x1314>
   12120:	df002787 	ldb	fp,158(sp)
   12124:	42000204 	addi	r8,r8,8
   12128:	e0000c26 	beq	fp,zero,1215c <___svfprintf_internal_r+0x84c>
   1212c:	d8801f17 	ldw	r2,124(sp)
   12130:	d9002784 	addi	r4,sp,158
   12134:	18c00044 	addi	r3,r3,1
   12138:	10800044 	addi	r2,r2,1
   1213c:	41000015 	stw	r4,0(r8)
   12140:	01000044 	movi	r4,1
   12144:	41000115 	stw	r4,4(r8)
   12148:	d8c02015 	stw	r3,128(sp)
   1214c:	d8801f15 	stw	r2,124(sp)
   12150:	010001c4 	movi	r4,7
   12154:	20825a16 	blt	r4,r2,12ac0 <___svfprintf_internal_r+0x11b0>
   12158:	42000204 	addi	r8,r8,8
   1215c:	d8802c17 	ldw	r2,176(sp)
   12160:	10000c26 	beq	r2,zero,12194 <___svfprintf_internal_r+0x884>
   12164:	d8801f17 	ldw	r2,124(sp)
   12168:	d9002704 	addi	r4,sp,156
   1216c:	18c00084 	addi	r3,r3,2
   12170:	10800044 	addi	r2,r2,1
   12174:	41000015 	stw	r4,0(r8)
   12178:	01000084 	movi	r4,2
   1217c:	41000115 	stw	r4,4(r8)
   12180:	d8c02015 	stw	r3,128(sp)
   12184:	d8801f15 	stw	r2,124(sp)
   12188:	010001c4 	movi	r4,7
   1218c:	20825416 	blt	r4,r2,12ae0 <___svfprintf_internal_r+0x11d0>
   12190:	42000204 	addi	r8,r8,8
   12194:	d9003017 	ldw	r4,192(sp)
   12198:	00802004 	movi	r2,128
   1219c:	2081b926 	beq	r4,r2,12884 <___svfprintf_internal_r+0xf74>
   121a0:	d9402a17 	ldw	r5,168(sp)
   121a4:	d8802b17 	ldw	r2,172(sp)
   121a8:	28adc83a 	sub	r22,r5,r2
   121ac:	05802f0e 	bge	zero,r22,1226c <___svfprintf_internal_r+0x95c>
   121b0:	07000404 	movi	fp,16
   121b4:	d8801f17 	ldw	r2,124(sp)
   121b8:	e583e20e 	bge	fp,r22,13144 <___svfprintf_internal_r+0x1834>
   121bc:	014000b4 	movhi	r5,2
   121c0:	2971a384 	addi	r5,r5,-14706
   121c4:	dc402a15 	stw	r17,168(sp)
   121c8:	d9402c15 	stw	r5,176(sp)
   121cc:	b023883a 	mov	r17,r22
   121d0:	050001c4 	movi	r20,7
   121d4:	902d883a 	mov	r22,r18
   121d8:	8025883a 	mov	r18,r16
   121dc:	dc002d17 	ldw	r16,180(sp)
   121e0:	00000306 	br	121f0 <___svfprintf_internal_r+0x8e0>
   121e4:	8c7ffc04 	addi	r17,r17,-16
   121e8:	42000204 	addi	r8,r8,8
   121ec:	e440110e 	bge	fp,r17,12234 <___svfprintf_internal_r+0x924>
   121f0:	18c00404 	addi	r3,r3,16
   121f4:	10800044 	addi	r2,r2,1
   121f8:	45400015 	stw	r21,0(r8)
   121fc:	47000115 	stw	fp,4(r8)
   12200:	d8c02015 	stw	r3,128(sp)
   12204:	d8801f15 	stw	r2,124(sp)
   12208:	a0bff60e 	bge	r20,r2,121e4 <_gp+0xfffecf88>
   1220c:	d9801e04 	addi	r6,sp,120
   12210:	800b883a 	mov	r5,r16
   12214:	9809883a 	mov	r4,r19
   12218:	0016d7c0 	call	16d7c <__ssprint_r>
   1221c:	103ea31e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12220:	8c7ffc04 	addi	r17,r17,-16
   12224:	d8c02017 	ldw	r3,128(sp)
   12228:	d8801f17 	ldw	r2,124(sp)
   1222c:	da000404 	addi	r8,sp,16
   12230:	e47fef16 	blt	fp,r17,121f0 <_gp+0xfffecf94>
   12234:	9021883a 	mov	r16,r18
   12238:	b025883a 	mov	r18,r22
   1223c:	882d883a 	mov	r22,r17
   12240:	dc402a17 	ldw	r17,168(sp)
   12244:	d9002c17 	ldw	r4,176(sp)
   12248:	1d87883a 	add	r3,r3,r22
   1224c:	10800044 	addi	r2,r2,1
   12250:	41000015 	stw	r4,0(r8)
   12254:	45800115 	stw	r22,4(r8)
   12258:	d8c02015 	stw	r3,128(sp)
   1225c:	d8801f15 	stw	r2,124(sp)
   12260:	010001c4 	movi	r4,7
   12264:	20820e16 	blt	r4,r2,12aa0 <___svfprintf_internal_r+0x1190>
   12268:	42000204 	addi	r8,r8,8
   1226c:	9080400c 	andi	r2,r18,256
   12270:	10013a1e 	bne	r2,zero,1275c <___svfprintf_internal_r+0xe4c>
   12274:	d9402b17 	ldw	r5,172(sp)
   12278:	d8801f17 	ldw	r2,124(sp)
   1227c:	44000015 	stw	r16,0(r8)
   12280:	1947883a 	add	r3,r3,r5
   12284:	10800044 	addi	r2,r2,1
   12288:	41400115 	stw	r5,4(r8)
   1228c:	d8c02015 	stw	r3,128(sp)
   12290:	d8801f15 	stw	r2,124(sp)
   12294:	010001c4 	movi	r4,7
   12298:	2081f316 	blt	r4,r2,12a68 <___svfprintf_internal_r+0x1158>
   1229c:	42000204 	addi	r8,r8,8
   122a0:	9480010c 	andi	r18,r18,4
   122a4:	90003226 	beq	r18,zero,12370 <___svfprintf_internal_r+0xa60>
   122a8:	d9403117 	ldw	r5,196(sp)
   122ac:	d8802917 	ldw	r2,164(sp)
   122b0:	28a1c83a 	sub	r16,r5,r2
   122b4:	04002e0e 	bge	zero,r16,12370 <___svfprintf_internal_r+0xa60>
   122b8:	04400404 	movi	r17,16
   122bc:	d8801f17 	ldw	r2,124(sp)
   122c0:	8c04db0e 	bge	r17,r16,13630 <___svfprintf_internal_r+0x1d20>
   122c4:	014000b4 	movhi	r5,2
   122c8:	2971a784 	addi	r5,r5,-14690
   122cc:	d9403515 	stw	r5,212(sp)
   122d0:	048001c4 	movi	r18,7
   122d4:	dd002d17 	ldw	r20,180(sp)
   122d8:	00000306 	br	122e8 <___svfprintf_internal_r+0x9d8>
   122dc:	843ffc04 	addi	r16,r16,-16
   122e0:	42000204 	addi	r8,r8,8
   122e4:	8c00130e 	bge	r17,r16,12334 <___svfprintf_internal_r+0xa24>
   122e8:	010000b4 	movhi	r4,2
   122ec:	18c00404 	addi	r3,r3,16
   122f0:	10800044 	addi	r2,r2,1
   122f4:	2131a784 	addi	r4,r4,-14690
   122f8:	41000015 	stw	r4,0(r8)
   122fc:	44400115 	stw	r17,4(r8)
   12300:	d8c02015 	stw	r3,128(sp)
   12304:	d8801f15 	stw	r2,124(sp)
   12308:	90bff40e 	bge	r18,r2,122dc <_gp+0xfffed080>
   1230c:	d9801e04 	addi	r6,sp,120
   12310:	a00b883a 	mov	r5,r20
   12314:	9809883a 	mov	r4,r19
   12318:	0016d7c0 	call	16d7c <__ssprint_r>
   1231c:	103e631e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12320:	843ffc04 	addi	r16,r16,-16
   12324:	d8c02017 	ldw	r3,128(sp)
   12328:	d8801f17 	ldw	r2,124(sp)
   1232c:	da000404 	addi	r8,sp,16
   12330:	8c3fed16 	blt	r17,r16,122e8 <_gp+0xfffed08c>
   12334:	d9403517 	ldw	r5,212(sp)
   12338:	1c07883a 	add	r3,r3,r16
   1233c:	10800044 	addi	r2,r2,1
   12340:	41400015 	stw	r5,0(r8)
   12344:	44000115 	stw	r16,4(r8)
   12348:	d8c02015 	stw	r3,128(sp)
   1234c:	d8801f15 	stw	r2,124(sp)
   12350:	010001c4 	movi	r4,7
   12354:	2080060e 	bge	r4,r2,12370 <___svfprintf_internal_r+0xa60>
   12358:	d9402d17 	ldw	r5,180(sp)
   1235c:	d9801e04 	addi	r6,sp,120
   12360:	9809883a 	mov	r4,r19
   12364:	0016d7c0 	call	16d7c <__ssprint_r>
   12368:	103e501e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   1236c:	d8c02017 	ldw	r3,128(sp)
   12370:	d8803117 	ldw	r2,196(sp)
   12374:	d9002917 	ldw	r4,164(sp)
   12378:	1100010e 	bge	r2,r4,12380 <___svfprintf_internal_r+0xa70>
   1237c:	2005883a 	mov	r2,r4
   12380:	d9402f17 	ldw	r5,188(sp)
   12384:	288b883a 	add	r5,r5,r2
   12388:	d9402f15 	stw	r5,188(sp)
   1238c:	1801be1e 	bne	r3,zero,12a88 <___svfprintf_internal_r+0x1178>
   12390:	b8800007 	ldb	r2,0(r23)
   12394:	d8001f15 	stw	zero,124(sp)
   12398:	da000404 	addi	r8,sp,16
   1239c:	103d891e 	bne	r2,zero,119c4 <_gp+0xfffec768>
   123a0:	b823883a 	mov	r17,r23
   123a4:	003d9f06 	br	11a24 <_gp+0xfffec7c8>
   123a8:	8025883a 	mov	r18,r16
   123ac:	dc002903 	ldbu	r16,164(sp)
   123b0:	e011883a 	mov	r8,fp
   123b4:	84003fcc 	andi	r16,r16,255
   123b8:	8005e61e 	bne	r16,zero,13b54 <___svfprintf_internal_r+0x2244>
   123bc:	94800414 	ori	r18,r18,16
   123c0:	9080080c 	andi	r2,r18,32
   123c4:	10022026 	beq	r2,zero,12c48 <___svfprintf_internal_r+0x1338>
   123c8:	d9002e17 	ldw	r4,184(sp)
   123cc:	d9402a17 	ldw	r5,168(sp)
   123d0:	d8002785 	stb	zero,158(sp)
   123d4:	20c00204 	addi	r3,r4,8
   123d8:	25000017 	ldw	r20,0(r4)
   123dc:	25800117 	ldw	r22,4(r4)
   123e0:	2803ad16 	blt	r5,zero,13298 <___svfprintf_internal_r+0x1988>
   123e4:	013fdfc4 	movi	r4,-129
   123e8:	a584b03a 	or	r2,r20,r22
   123ec:	d8c02e15 	stw	r3,184(sp)
   123f0:	9124703a 	and	r18,r18,r4
   123f4:	0039883a 	mov	fp,zero
   123f8:	103eb01e 	bne	r2,zero,11ebc <_gp+0xfffecc60>
   123fc:	d8802a17 	ldw	r2,168(sp)
   12400:	1002e71e 	bne	r2,zero,12fa0 <___svfprintf_internal_r+0x1690>
   12404:	d8002a15 	stw	zero,168(sp)
   12408:	d8002b15 	stw	zero,172(sp)
   1240c:	dc001e04 	addi	r16,sp,120
   12410:	003ef706 	br	11ff0 <_gp+0xfffecd94>
   12414:	8025883a 	mov	r18,r16
   12418:	dc002903 	ldbu	r16,164(sp)
   1241c:	e011883a 	mov	r8,fp
   12420:	84003fcc 	andi	r16,r16,255
   12424:	8005c81e 	bne	r16,zero,13b48 <___svfprintf_internal_r+0x2238>
   12428:	010000b4 	movhi	r4,2
   1242c:	21319704 	addi	r4,r4,-14756
   12430:	d9003a15 	stw	r4,232(sp)
   12434:	9080080c 	andi	r2,r18,32
   12438:	10007226 	beq	r2,zero,12604 <___svfprintf_internal_r+0xcf4>
   1243c:	d9402e17 	ldw	r5,184(sp)
   12440:	2d000017 	ldw	r20,0(r5)
   12444:	2d800117 	ldw	r22,4(r5)
   12448:	29400204 	addi	r5,r5,8
   1244c:	d9402e15 	stw	r5,184(sp)
   12450:	9080004c 	andi	r2,r18,1
   12454:	1001aa26 	beq	r2,zero,12b00 <___svfprintf_internal_r+0x11f0>
   12458:	a584b03a 	or	r2,r20,r22
   1245c:	10032526 	beq	r2,zero,130f4 <___svfprintf_internal_r+0x17e4>
   12460:	d8c02a17 	ldw	r3,168(sp)
   12464:	00800c04 	movi	r2,48
   12468:	d8802705 	stb	r2,156(sp)
   1246c:	dc402745 	stb	r17,157(sp)
   12470:	d8002785 	stb	zero,158(sp)
   12474:	90800094 	ori	r2,r18,2
   12478:	1804a316 	blt	r3,zero,13708 <___svfprintf_internal_r+0x1df8>
   1247c:	00bfdfc4 	movi	r2,-129
   12480:	90a4703a 	and	r18,r18,r2
   12484:	94800094 	ori	r18,r18,2
   12488:	0039883a 	mov	fp,zero
   1248c:	d9003a17 	ldw	r4,232(sp)
   12490:	dc001e04 	addi	r16,sp,120
   12494:	a08003cc 	andi	r2,r20,15
   12498:	b006973a 	slli	r3,r22,28
   1249c:	2085883a 	add	r2,r4,r2
   124a0:	a028d13a 	srli	r20,r20,4
   124a4:	10800003 	ldbu	r2,0(r2)
   124a8:	b02cd13a 	srli	r22,r22,4
   124ac:	843fffc4 	addi	r16,r16,-1
   124b0:	1d28b03a 	or	r20,r3,r20
   124b4:	80800005 	stb	r2,0(r16)
   124b8:	a584b03a 	or	r2,r20,r22
   124bc:	103ff51e 	bne	r2,zero,12494 <_gp+0xfffed238>
   124c0:	d8c02817 	ldw	r3,160(sp)
   124c4:	1c07c83a 	sub	r3,r3,r16
   124c8:	d8c02b15 	stw	r3,172(sp)
   124cc:	003ec806 	br	11ff0 <_gp+0xfffecd94>
   124d0:	d8c02e17 	ldw	r3,184(sp)
   124d4:	d9002e17 	ldw	r4,184(sp)
   124d8:	8025883a 	mov	r18,r16
   124dc:	18800017 	ldw	r2,0(r3)
   124e0:	21000104 	addi	r4,r4,4
   124e4:	00c00044 	movi	r3,1
   124e8:	e011883a 	mov	r8,fp
   124ec:	d8c02915 	stw	r3,164(sp)
   124f0:	d8002785 	stb	zero,158(sp)
   124f4:	d8801405 	stb	r2,80(sp)
   124f8:	d9002e15 	stw	r4,184(sp)
   124fc:	d8c02b15 	stw	r3,172(sp)
   12500:	d8002a15 	stw	zero,168(sp)
   12504:	d8003215 	stw	zero,200(sp)
   12508:	dc001404 	addi	r16,sp,80
   1250c:	0039883a 	mov	fp,zero
   12510:	003ec406 	br	12024 <_gp+0xfffecdc8>
   12514:	8025883a 	mov	r18,r16
   12518:	dc002903 	ldbu	r16,164(sp)
   1251c:	e011883a 	mov	r8,fp
   12520:	84003fcc 	andi	r16,r16,255
   12524:	803e8726 	beq	r16,zero,11f44 <_gp+0xfffecce8>
   12528:	d8c02b03 	ldbu	r3,172(sp)
   1252c:	d8c02785 	stb	r3,158(sp)
   12530:	003e8406 	br	11f44 <_gp+0xfffecce8>
   12534:	00c00044 	movi	r3,1
   12538:	d8c02905 	stb	r3,164(sp)
   1253c:	00c00ac4 	movi	r3,43
   12540:	d8c02b05 	stb	r3,172(sp)
   12544:	bc400007 	ldb	r17,0(r23)
   12548:	003d4606 	br	11a64 <_gp+0xfffec808>
   1254c:	84000814 	ori	r16,r16,32
   12550:	bc400007 	ldb	r17,0(r23)
   12554:	003d4306 	br	11a64 <_gp+0xfffec808>
   12558:	d8802e17 	ldw	r2,184(sp)
   1255c:	8025883a 	mov	r18,r16
   12560:	d8002785 	stb	zero,158(sp)
   12564:	14000017 	ldw	r16,0(r2)
   12568:	e011883a 	mov	r8,fp
   1256c:	15000104 	addi	r20,r2,4
   12570:	80042126 	beq	r16,zero,135f8 <___svfprintf_internal_r+0x1ce8>
   12574:	d8c02a17 	ldw	r3,168(sp)
   12578:	1803ee16 	blt	r3,zero,13534 <___svfprintf_internal_r+0x1c24>
   1257c:	180d883a 	mov	r6,r3
   12580:	000b883a 	mov	r5,zero
   12584:	8009883a 	mov	r4,r16
   12588:	df003e15 	stw	fp,248(sp)
   1258c:	001598c0 	call	1598c <memchr>
   12590:	da003e17 	ldw	r8,248(sp)
   12594:	10046a26 	beq	r2,zero,13740 <___svfprintf_internal_r+0x1e30>
   12598:	1405c83a 	sub	r2,r2,r16
   1259c:	d8802b15 	stw	r2,172(sp)
   125a0:	1003ea16 	blt	r2,zero,1354c <___svfprintf_internal_r+0x1c3c>
   125a4:	df002783 	ldbu	fp,158(sp)
   125a8:	d8802915 	stw	r2,164(sp)
   125ac:	dd002e15 	stw	r20,184(sp)
   125b0:	d8002a15 	stw	zero,168(sp)
   125b4:	d8003215 	stw	zero,200(sp)
   125b8:	003e9306 	br	12008 <_gp+0xfffecdac>
   125bc:	8025883a 	mov	r18,r16
   125c0:	dc002903 	ldbu	r16,164(sp)
   125c4:	e011883a 	mov	r8,fp
   125c8:	84003fcc 	andi	r16,r16,255
   125cc:	803f7c26 	beq	r16,zero,123c0 <_gp+0xfffed164>
   125d0:	d8c02b03 	ldbu	r3,172(sp)
   125d4:	d8c02785 	stb	r3,158(sp)
   125d8:	003f7906 	br	123c0 <_gp+0xfffed164>
   125dc:	8025883a 	mov	r18,r16
   125e0:	dc002903 	ldbu	r16,164(sp)
   125e4:	e011883a 	mov	r8,fp
   125e8:	84003fcc 	andi	r16,r16,255
   125ec:	8005741e 	bne	r16,zero,13bc0 <___svfprintf_internal_r+0x22b0>
   125f0:	010000b4 	movhi	r4,2
   125f4:	21319c04 	addi	r4,r4,-14736
   125f8:	d9003a15 	stw	r4,232(sp)
   125fc:	9080080c 	andi	r2,r18,32
   12600:	103f8e1e 	bne	r2,zero,1243c <_gp+0xfffed1e0>
   12604:	9080040c 	andi	r2,r18,16
   12608:	1002a726 	beq	r2,zero,130a8 <___svfprintf_internal_r+0x1798>
   1260c:	d8802e17 	ldw	r2,184(sp)
   12610:	002d883a 	mov	r22,zero
   12614:	15000017 	ldw	r20,0(r2)
   12618:	10800104 	addi	r2,r2,4
   1261c:	d8802e15 	stw	r2,184(sp)
   12620:	003f8b06 	br	12450 <_gp+0xfffed1f4>
   12624:	84000054 	ori	r16,r16,1
   12628:	bc400007 	ldb	r17,0(r23)
   1262c:	003d0d06 	br	11a64 <_gp+0xfffec808>
   12630:	d8802b07 	ldb	r2,172(sp)
   12634:	1002a41e 	bne	r2,zero,130c8 <___svfprintf_internal_r+0x17b8>
   12638:	00c00044 	movi	r3,1
   1263c:	d8c02905 	stb	r3,164(sp)
   12640:	00c00804 	movi	r3,32
   12644:	d8c02b05 	stb	r3,172(sp)
   12648:	bc400007 	ldb	r17,0(r23)
   1264c:	003d0506 	br	11a64 <_gp+0xfffec808>
   12650:	8025883a 	mov	r18,r16
   12654:	dc002903 	ldbu	r16,164(sp)
   12658:	e011883a 	mov	r8,fp
   1265c:	84003fcc 	andi	r16,r16,255
   12660:	803e0626 	beq	r16,zero,11e7c <_gp+0xfffecc20>
   12664:	d8c02b03 	ldbu	r3,172(sp)
   12668:	d8c02785 	stb	r3,158(sp)
   1266c:	003e0306 	br	11e7c <_gp+0xfffecc20>
   12670:	bc400007 	ldb	r17,0(r23)
   12674:	00801b04 	movi	r2,108
   12678:	88830a26 	beq	r17,r2,132a4 <___svfprintf_internal_r+0x1994>
   1267c:	84000414 	ori	r16,r16,16
   12680:	003cf806 	br	11a64 <_gp+0xfffec808>
   12684:	8025883a 	mov	r18,r16
   12688:	dc002903 	ldbu	r16,164(sp)
   1268c:	e011883a 	mov	r8,fp
   12690:	84003fcc 	andi	r16,r16,255
   12694:	8005471e 	bne	r16,zero,13bb4 <___svfprintf_internal_r+0x22a4>
   12698:	9080080c 	andi	r2,r18,32
   1269c:	10028c26 	beq	r2,zero,130d0 <___svfprintf_internal_r+0x17c0>
   126a0:	d9002e17 	ldw	r4,184(sp)
   126a4:	d9402f17 	ldw	r5,188(sp)
   126a8:	20800017 	ldw	r2,0(r4)
   126ac:	2807d7fa 	srai	r3,r5,31
   126b0:	21000104 	addi	r4,r4,4
   126b4:	d9002e15 	stw	r4,184(sp)
   126b8:	11400015 	stw	r5,0(r2)
   126bc:	10c00115 	stw	r3,4(r2)
   126c0:	003cbe06 	br	119bc <_gp+0xfffec760>
   126c4:	84001014 	ori	r16,r16,64
   126c8:	bc400007 	ldb	r17,0(r23)
   126cc:	003ce506 	br	11a64 <_gp+0xfffec808>
   126d0:	010000b4 	movhi	r4,2
   126d4:	21319c04 	addi	r4,r4,-14736
   126d8:	0039883a 	mov	fp,zero
   126dc:	d9003a15 	stw	r4,232(sp)
   126e0:	04401e04 	movi	r17,120
   126e4:	003f6906 	br	1248c <_gp+0xfffed230>
   126e8:	8025883a 	mov	r18,r16
   126ec:	dc002903 	ldbu	r16,164(sp)
   126f0:	e011883a 	mov	r8,fp
   126f4:	84003fcc 	andi	r16,r16,255
   126f8:	8005261e 	bne	r16,zero,13b94 <___svfprintf_internal_r+0x2284>
   126fc:	883d6526 	beq	r17,zero,11c94 <_gp+0xfffeca38>
   12700:	00c00044 	movi	r3,1
   12704:	d8c02915 	stw	r3,164(sp)
   12708:	dc401405 	stb	r17,80(sp)
   1270c:	d8002785 	stb	zero,158(sp)
   12710:	003f7a06 	br	124fc <_gp+0xfffed2a0>
   12714:	010000b4 	movhi	r4,2
   12718:	21319c04 	addi	r4,r4,-14736
   1271c:	d9003a15 	stw	r4,232(sp)
   12720:	d8c02e15 	stw	r3,184(sp)
   12724:	1025883a 	mov	r18,r2
   12728:	04401e04 	movi	r17,120
   1272c:	a584b03a 	or	r2,r20,r22
   12730:	1000fa1e 	bne	r2,zero,12b1c <___svfprintf_internal_r+0x120c>
   12734:	0039883a 	mov	fp,zero
   12738:	00800084 	movi	r2,2
   1273c:	10803fcc 	andi	r2,r2,255
   12740:	00c00044 	movi	r3,1
   12744:	10c21626 	beq	r2,r3,12fa0 <___svfprintf_internal_r+0x1690>
   12748:	00c00084 	movi	r3,2
   1274c:	10fe0e1e 	bne	r2,r3,11f88 <_gp+0xfffecd2c>
   12750:	003d4606 	br	11c6c <_gp+0xfffeca10>
   12754:	d8c02017 	ldw	r3,128(sp)
   12758:	003e7306 	br	12128 <_gp+0xfffececc>
   1275c:	00801944 	movi	r2,101
   12760:	14407c0e 	bge	r2,r17,12954 <___svfprintf_internal_r+0x1044>
   12764:	d9003617 	ldw	r4,216(sp)
   12768:	d9403717 	ldw	r5,220(sp)
   1276c:	000d883a 	mov	r6,zero
   12770:	000f883a 	mov	r7,zero
   12774:	d8c03d15 	stw	r3,244(sp)
   12778:	da003e15 	stw	r8,248(sp)
   1277c:	001a8ec0 	call	1a8ec <__eqdf2>
   12780:	d8c03d17 	ldw	r3,244(sp)
   12784:	da003e17 	ldw	r8,248(sp)
   12788:	1000f51e 	bne	r2,zero,12b60 <___svfprintf_internal_r+0x1250>
   1278c:	d8801f17 	ldw	r2,124(sp)
   12790:	010000b4 	movhi	r4,2
   12794:	2131a304 	addi	r4,r4,-14708
   12798:	18c00044 	addi	r3,r3,1
   1279c:	10800044 	addi	r2,r2,1
   127a0:	41000015 	stw	r4,0(r8)
   127a4:	01000044 	movi	r4,1
   127a8:	41000115 	stw	r4,4(r8)
   127ac:	d8c02015 	stw	r3,128(sp)
   127b0:	d8801f15 	stw	r2,124(sp)
   127b4:	010001c4 	movi	r4,7
   127b8:	20826616 	blt	r4,r2,13154 <___svfprintf_internal_r+0x1844>
   127bc:	42000204 	addi	r8,r8,8
   127c0:	d8802617 	ldw	r2,152(sp)
   127c4:	d9403317 	ldw	r5,204(sp)
   127c8:	11400216 	blt	r2,r5,127d4 <___svfprintf_internal_r+0xec4>
   127cc:	9080004c 	andi	r2,r18,1
   127d0:	103eb326 	beq	r2,zero,122a0 <_gp+0xfffed044>
   127d4:	d8803817 	ldw	r2,224(sp)
   127d8:	d9003417 	ldw	r4,208(sp)
   127dc:	d9403817 	ldw	r5,224(sp)
   127e0:	1887883a 	add	r3,r3,r2
   127e4:	d8801f17 	ldw	r2,124(sp)
   127e8:	41000015 	stw	r4,0(r8)
   127ec:	41400115 	stw	r5,4(r8)
   127f0:	10800044 	addi	r2,r2,1
   127f4:	d8c02015 	stw	r3,128(sp)
   127f8:	d8801f15 	stw	r2,124(sp)
   127fc:	010001c4 	movi	r4,7
   12800:	2082af16 	blt	r4,r2,132c0 <___svfprintf_internal_r+0x19b0>
   12804:	42000204 	addi	r8,r8,8
   12808:	d8803317 	ldw	r2,204(sp)
   1280c:	143fffc4 	addi	r16,r2,-1
   12810:	043ea30e 	bge	zero,r16,122a0 <_gp+0xfffed044>
   12814:	04400404 	movi	r17,16
   12818:	d8801f17 	ldw	r2,124(sp)
   1281c:	8c00860e 	bge	r17,r16,12a38 <___svfprintf_internal_r+0x1128>
   12820:	014000b4 	movhi	r5,2
   12824:	2971a384 	addi	r5,r5,-14706
   12828:	d9402c15 	stw	r5,176(sp)
   1282c:	058001c4 	movi	r22,7
   12830:	dd002d17 	ldw	r20,180(sp)
   12834:	00000306 	br	12844 <___svfprintf_internal_r+0xf34>
   12838:	42000204 	addi	r8,r8,8
   1283c:	843ffc04 	addi	r16,r16,-16
   12840:	8c00800e 	bge	r17,r16,12a44 <___svfprintf_internal_r+0x1134>
   12844:	18c00404 	addi	r3,r3,16
   12848:	10800044 	addi	r2,r2,1
   1284c:	45400015 	stw	r21,0(r8)
   12850:	44400115 	stw	r17,4(r8)
   12854:	d8c02015 	stw	r3,128(sp)
   12858:	d8801f15 	stw	r2,124(sp)
   1285c:	b0bff60e 	bge	r22,r2,12838 <_gp+0xfffed5dc>
   12860:	d9801e04 	addi	r6,sp,120
   12864:	a00b883a 	mov	r5,r20
   12868:	9809883a 	mov	r4,r19
   1286c:	0016d7c0 	call	16d7c <__ssprint_r>
   12870:	103d0e1e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12874:	d8c02017 	ldw	r3,128(sp)
   12878:	d8801f17 	ldw	r2,124(sp)
   1287c:	da000404 	addi	r8,sp,16
   12880:	003fee06 	br	1283c <_gp+0xfffed5e0>
   12884:	d9403117 	ldw	r5,196(sp)
   12888:	d8802917 	ldw	r2,164(sp)
   1288c:	28adc83a 	sub	r22,r5,r2
   12890:	05be430e 	bge	zero,r22,121a0 <_gp+0xfffecf44>
   12894:	07000404 	movi	fp,16
   12898:	d8801f17 	ldw	r2,124(sp)
   1289c:	e583a20e 	bge	fp,r22,13728 <___svfprintf_internal_r+0x1e18>
   128a0:	014000b4 	movhi	r5,2
   128a4:	2971a384 	addi	r5,r5,-14706
   128a8:	dc403015 	stw	r17,192(sp)
   128ac:	d9402c15 	stw	r5,176(sp)
   128b0:	b023883a 	mov	r17,r22
   128b4:	050001c4 	movi	r20,7
   128b8:	902d883a 	mov	r22,r18
   128bc:	8025883a 	mov	r18,r16
   128c0:	dc002d17 	ldw	r16,180(sp)
   128c4:	00000306 	br	128d4 <___svfprintf_internal_r+0xfc4>
   128c8:	8c7ffc04 	addi	r17,r17,-16
   128cc:	42000204 	addi	r8,r8,8
   128d0:	e440110e 	bge	fp,r17,12918 <___svfprintf_internal_r+0x1008>
   128d4:	18c00404 	addi	r3,r3,16
   128d8:	10800044 	addi	r2,r2,1
   128dc:	45400015 	stw	r21,0(r8)
   128e0:	47000115 	stw	fp,4(r8)
   128e4:	d8c02015 	stw	r3,128(sp)
   128e8:	d8801f15 	stw	r2,124(sp)
   128ec:	a0bff60e 	bge	r20,r2,128c8 <_gp+0xfffed66c>
   128f0:	d9801e04 	addi	r6,sp,120
   128f4:	800b883a 	mov	r5,r16
   128f8:	9809883a 	mov	r4,r19
   128fc:	0016d7c0 	call	16d7c <__ssprint_r>
   12900:	103cea1e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12904:	8c7ffc04 	addi	r17,r17,-16
   12908:	d8c02017 	ldw	r3,128(sp)
   1290c:	d8801f17 	ldw	r2,124(sp)
   12910:	da000404 	addi	r8,sp,16
   12914:	e47fef16 	blt	fp,r17,128d4 <_gp+0xfffed678>
   12918:	9021883a 	mov	r16,r18
   1291c:	b025883a 	mov	r18,r22
   12920:	882d883a 	mov	r22,r17
   12924:	dc403017 	ldw	r17,192(sp)
   12928:	d9002c17 	ldw	r4,176(sp)
   1292c:	1d87883a 	add	r3,r3,r22
   12930:	10800044 	addi	r2,r2,1
   12934:	41000015 	stw	r4,0(r8)
   12938:	45800115 	stw	r22,4(r8)
   1293c:	d8c02015 	stw	r3,128(sp)
   12940:	d8801f15 	stw	r2,124(sp)
   12944:	010001c4 	movi	r4,7
   12948:	20819a16 	blt	r4,r2,12fb4 <___svfprintf_internal_r+0x16a4>
   1294c:	42000204 	addi	r8,r8,8
   12950:	003e1306 	br	121a0 <_gp+0xfffecf44>
   12954:	d9403317 	ldw	r5,204(sp)
   12958:	00800044 	movi	r2,1
   1295c:	18c00044 	addi	r3,r3,1
   12960:	1141710e 	bge	r2,r5,12f28 <___svfprintf_internal_r+0x1618>
   12964:	dc401f17 	ldw	r17,124(sp)
   12968:	00800044 	movi	r2,1
   1296c:	40800115 	stw	r2,4(r8)
   12970:	8c400044 	addi	r17,r17,1
   12974:	44000015 	stw	r16,0(r8)
   12978:	d8c02015 	stw	r3,128(sp)
   1297c:	dc401f15 	stw	r17,124(sp)
   12980:	008001c4 	movi	r2,7
   12984:	14417416 	blt	r2,r17,12f58 <___svfprintf_internal_r+0x1648>
   12988:	42000204 	addi	r8,r8,8
   1298c:	d8803817 	ldw	r2,224(sp)
   12990:	d9003417 	ldw	r4,208(sp)
   12994:	8c400044 	addi	r17,r17,1
   12998:	10c7883a 	add	r3,r2,r3
   1299c:	40800115 	stw	r2,4(r8)
   129a0:	41000015 	stw	r4,0(r8)
   129a4:	d8c02015 	stw	r3,128(sp)
   129a8:	dc401f15 	stw	r17,124(sp)
   129ac:	008001c4 	movi	r2,7
   129b0:	14417216 	blt	r2,r17,12f7c <___svfprintf_internal_r+0x166c>
   129b4:	45800204 	addi	r22,r8,8
   129b8:	d9003617 	ldw	r4,216(sp)
   129bc:	d9403717 	ldw	r5,220(sp)
   129c0:	000d883a 	mov	r6,zero
   129c4:	000f883a 	mov	r7,zero
   129c8:	d8c03d15 	stw	r3,244(sp)
   129cc:	001a8ec0 	call	1a8ec <__eqdf2>
   129d0:	d8c03d17 	ldw	r3,244(sp)
   129d4:	1000b326 	beq	r2,zero,12ca4 <___svfprintf_internal_r+0x1394>
   129d8:	d9403317 	ldw	r5,204(sp)
   129dc:	84000044 	addi	r16,r16,1
   129e0:	8c400044 	addi	r17,r17,1
   129e4:	28bfffc4 	addi	r2,r5,-1
   129e8:	1887883a 	add	r3,r3,r2
   129ec:	b0800115 	stw	r2,4(r22)
   129f0:	b4000015 	stw	r16,0(r22)
   129f4:	d8c02015 	stw	r3,128(sp)
   129f8:	dc401f15 	stw	r17,124(sp)
   129fc:	008001c4 	movi	r2,7
   12a00:	1440d216 	blt	r2,r17,12d4c <___svfprintf_internal_r+0x143c>
   12a04:	b5800204 	addi	r22,r22,8
   12a08:	d9003b17 	ldw	r4,236(sp)
   12a0c:	df0022c4 	addi	fp,sp,139
   12a10:	8c400044 	addi	r17,r17,1
   12a14:	20c7883a 	add	r3,r4,r3
   12a18:	b7000015 	stw	fp,0(r22)
   12a1c:	b1000115 	stw	r4,4(r22)
   12a20:	d8c02015 	stw	r3,128(sp)
   12a24:	dc401f15 	stw	r17,124(sp)
   12a28:	008001c4 	movi	r2,7
   12a2c:	14400e16 	blt	r2,r17,12a68 <___svfprintf_internal_r+0x1158>
   12a30:	b2000204 	addi	r8,r22,8
   12a34:	003e1a06 	br	122a0 <_gp+0xfffed044>
   12a38:	010000b4 	movhi	r4,2
   12a3c:	2131a384 	addi	r4,r4,-14706
   12a40:	d9002c15 	stw	r4,176(sp)
   12a44:	d9002c17 	ldw	r4,176(sp)
   12a48:	1c07883a 	add	r3,r3,r16
   12a4c:	44000115 	stw	r16,4(r8)
   12a50:	41000015 	stw	r4,0(r8)
   12a54:	10800044 	addi	r2,r2,1
   12a58:	d8c02015 	stw	r3,128(sp)
   12a5c:	d8801f15 	stw	r2,124(sp)
   12a60:	010001c4 	movi	r4,7
   12a64:	20be0d0e 	bge	r4,r2,1229c <_gp+0xfffed040>
   12a68:	d9402d17 	ldw	r5,180(sp)
   12a6c:	d9801e04 	addi	r6,sp,120
   12a70:	9809883a 	mov	r4,r19
   12a74:	0016d7c0 	call	16d7c <__ssprint_r>
   12a78:	103c8c1e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12a7c:	d8c02017 	ldw	r3,128(sp)
   12a80:	da000404 	addi	r8,sp,16
   12a84:	003e0606 	br	122a0 <_gp+0xfffed044>
   12a88:	d9402d17 	ldw	r5,180(sp)
   12a8c:	d9801e04 	addi	r6,sp,120
   12a90:	9809883a 	mov	r4,r19
   12a94:	0016d7c0 	call	16d7c <__ssprint_r>
   12a98:	103e3d26 	beq	r2,zero,12390 <_gp+0xfffed134>
   12a9c:	003c8306 	br	11cac <_gp+0xfffeca50>
   12aa0:	d9402d17 	ldw	r5,180(sp)
   12aa4:	d9801e04 	addi	r6,sp,120
   12aa8:	9809883a 	mov	r4,r19
   12aac:	0016d7c0 	call	16d7c <__ssprint_r>
   12ab0:	103c7e1e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12ab4:	d8c02017 	ldw	r3,128(sp)
   12ab8:	da000404 	addi	r8,sp,16
   12abc:	003deb06 	br	1226c <_gp+0xfffed010>
   12ac0:	d9402d17 	ldw	r5,180(sp)
   12ac4:	d9801e04 	addi	r6,sp,120
   12ac8:	9809883a 	mov	r4,r19
   12acc:	0016d7c0 	call	16d7c <__ssprint_r>
   12ad0:	103c761e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12ad4:	d8c02017 	ldw	r3,128(sp)
   12ad8:	da000404 	addi	r8,sp,16
   12adc:	003d9f06 	br	1215c <_gp+0xfffecf00>
   12ae0:	d9402d17 	ldw	r5,180(sp)
   12ae4:	d9801e04 	addi	r6,sp,120
   12ae8:	9809883a 	mov	r4,r19
   12aec:	0016d7c0 	call	16d7c <__ssprint_r>
   12af0:	103c6e1e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12af4:	d8c02017 	ldw	r3,128(sp)
   12af8:	da000404 	addi	r8,sp,16
   12afc:	003da506 	br	12194 <_gp+0xfffecf38>
   12b00:	d9402a17 	ldw	r5,168(sp)
   12b04:	d8002785 	stb	zero,158(sp)
   12b08:	283f0816 	blt	r5,zero,1272c <_gp+0xfffed4d0>
   12b0c:	00ffdfc4 	movi	r3,-129
   12b10:	a584b03a 	or	r2,r20,r22
   12b14:	90e4703a 	and	r18,r18,r3
   12b18:	103c5126 	beq	r2,zero,11c60 <_gp+0xfffeca04>
   12b1c:	0039883a 	mov	fp,zero
   12b20:	003e5a06 	br	1248c <_gp+0xfffed230>
   12b24:	9080040c 	andi	r2,r18,16
   12b28:	10013d26 	beq	r2,zero,13020 <___svfprintf_internal_r+0x1710>
   12b2c:	d8c02e17 	ldw	r3,184(sp)
   12b30:	d9002a17 	ldw	r4,168(sp)
   12b34:	d8002785 	stb	zero,158(sp)
   12b38:	18800104 	addi	r2,r3,4
   12b3c:	1d000017 	ldw	r20,0(r3)
   12b40:	002d883a 	mov	r22,zero
   12b44:	20013f16 	blt	r4,zero,13044 <___svfprintf_internal_r+0x1734>
   12b48:	00ffdfc4 	movi	r3,-129
   12b4c:	d8802e15 	stw	r2,184(sp)
   12b50:	90e4703a 	and	r18,r18,r3
   12b54:	a03d0926 	beq	r20,zero,11f7c <_gp+0xfffecd20>
   12b58:	0039883a 	mov	fp,zero
   12b5c:	003d0c06 	br	11f90 <_gp+0xfffecd34>
   12b60:	dc402617 	ldw	r17,152(sp)
   12b64:	0441830e 	bge	zero,r17,13174 <___svfprintf_internal_r+0x1864>
   12b68:	dc403217 	ldw	r17,200(sp)
   12b6c:	d8803317 	ldw	r2,204(sp)
   12b70:	1440010e 	bge	r2,r17,12b78 <___svfprintf_internal_r+0x1268>
   12b74:	1023883a 	mov	r17,r2
   12b78:	04400a0e 	bge	zero,r17,12ba4 <___svfprintf_internal_r+0x1294>
   12b7c:	d8801f17 	ldw	r2,124(sp)
   12b80:	1c47883a 	add	r3,r3,r17
   12b84:	44000015 	stw	r16,0(r8)
   12b88:	10800044 	addi	r2,r2,1
   12b8c:	44400115 	stw	r17,4(r8)
   12b90:	d8c02015 	stw	r3,128(sp)
   12b94:	d8801f15 	stw	r2,124(sp)
   12b98:	010001c4 	movi	r4,7
   12b9c:	20827516 	blt	r4,r2,13574 <___svfprintf_internal_r+0x1c64>
   12ba0:	42000204 	addi	r8,r8,8
   12ba4:	88027b16 	blt	r17,zero,13594 <___svfprintf_internal_r+0x1c84>
   12ba8:	d9003217 	ldw	r4,200(sp)
   12bac:	2463c83a 	sub	r17,r4,r17
   12bb0:	0440990e 	bge	zero,r17,12e18 <___svfprintf_internal_r+0x1508>
   12bb4:	05800404 	movi	r22,16
   12bb8:	d8801f17 	ldw	r2,124(sp)
   12bbc:	b441530e 	bge	r22,r17,1310c <___svfprintf_internal_r+0x17fc>
   12bc0:	010000b4 	movhi	r4,2
   12bc4:	2131a384 	addi	r4,r4,-14706
   12bc8:	d9002c15 	stw	r4,176(sp)
   12bcc:	070001c4 	movi	fp,7
   12bd0:	dd002d17 	ldw	r20,180(sp)
   12bd4:	00000306 	br	12be4 <___svfprintf_internal_r+0x12d4>
   12bd8:	42000204 	addi	r8,r8,8
   12bdc:	8c7ffc04 	addi	r17,r17,-16
   12be0:	b4414d0e 	bge	r22,r17,13118 <___svfprintf_internal_r+0x1808>
   12be4:	18c00404 	addi	r3,r3,16
   12be8:	10800044 	addi	r2,r2,1
   12bec:	45400015 	stw	r21,0(r8)
   12bf0:	45800115 	stw	r22,4(r8)
   12bf4:	d8c02015 	stw	r3,128(sp)
   12bf8:	d8801f15 	stw	r2,124(sp)
   12bfc:	e0bff60e 	bge	fp,r2,12bd8 <_gp+0xfffed97c>
   12c00:	d9801e04 	addi	r6,sp,120
   12c04:	a00b883a 	mov	r5,r20
   12c08:	9809883a 	mov	r4,r19
   12c0c:	0016d7c0 	call	16d7c <__ssprint_r>
   12c10:	103c261e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12c14:	d8c02017 	ldw	r3,128(sp)
   12c18:	d8801f17 	ldw	r2,124(sp)
   12c1c:	da000404 	addi	r8,sp,16
   12c20:	003fee06 	br	12bdc <_gp+0xfffed980>
   12c24:	d9402d17 	ldw	r5,180(sp)
   12c28:	d9801e04 	addi	r6,sp,120
   12c2c:	9809883a 	mov	r4,r19
   12c30:	0016d7c0 	call	16d7c <__ssprint_r>
   12c34:	103c1d1e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12c38:	d8c02017 	ldw	r3,128(sp)
   12c3c:	df002787 	ldb	fp,158(sp)
   12c40:	da000404 	addi	r8,sp,16
   12c44:	003d3806 	br	12128 <_gp+0xfffececc>
   12c48:	9080040c 	andi	r2,r18,16
   12c4c:	10005c26 	beq	r2,zero,12dc0 <___svfprintf_internal_r+0x14b0>
   12c50:	d8c02e17 	ldw	r3,184(sp)
   12c54:	d9002a17 	ldw	r4,168(sp)
   12c58:	d8002785 	stb	zero,158(sp)
   12c5c:	18800104 	addi	r2,r3,4
   12c60:	1d000017 	ldw	r20,0(r3)
   12c64:	002d883a 	mov	r22,zero
   12c68:	20005e16 	blt	r4,zero,12de4 <___svfprintf_internal_r+0x14d4>
   12c6c:	00ffdfc4 	movi	r3,-129
   12c70:	d8802e15 	stw	r2,184(sp)
   12c74:	90e4703a 	and	r18,r18,r3
   12c78:	0039883a 	mov	fp,zero
   12c7c:	a03ddf26 	beq	r20,zero,123fc <_gp+0xfffed1a0>
   12c80:	00800244 	movi	r2,9
   12c84:	153c8e36 	bltu	r2,r20,11ec0 <_gp+0xfffecc64>
   12c88:	a5000c04 	addi	r20,r20,48
   12c8c:	dc001dc4 	addi	r16,sp,119
   12c90:	dd001dc5 	stb	r20,119(sp)
   12c94:	d8c02817 	ldw	r3,160(sp)
   12c98:	1c07c83a 	sub	r3,r3,r16
   12c9c:	d8c02b15 	stw	r3,172(sp)
   12ca0:	003cd306 	br	11ff0 <_gp+0xfffecd94>
   12ca4:	d8803317 	ldw	r2,204(sp)
   12ca8:	143fffc4 	addi	r16,r2,-1
   12cac:	043f560e 	bge	zero,r16,12a08 <_gp+0xfffed7ac>
   12cb0:	07000404 	movi	fp,16
   12cb4:	e403530e 	bge	fp,r16,13a04 <___svfprintf_internal_r+0x20f4>
   12cb8:	014000b4 	movhi	r5,2
   12cbc:	2971a384 	addi	r5,r5,-14706
   12cc0:	d9402c15 	stw	r5,176(sp)
   12cc4:	01c001c4 	movi	r7,7
   12cc8:	dd002d17 	ldw	r20,180(sp)
   12ccc:	00000306 	br	12cdc <___svfprintf_internal_r+0x13cc>
   12cd0:	843ffc04 	addi	r16,r16,-16
   12cd4:	b5800204 	addi	r22,r22,8
   12cd8:	e400130e 	bge	fp,r16,12d28 <___svfprintf_internal_r+0x1418>
   12cdc:	18c00404 	addi	r3,r3,16
   12ce0:	8c400044 	addi	r17,r17,1
   12ce4:	b5400015 	stw	r21,0(r22)
   12ce8:	b7000115 	stw	fp,4(r22)
   12cec:	d8c02015 	stw	r3,128(sp)
   12cf0:	dc401f15 	stw	r17,124(sp)
   12cf4:	3c7ff60e 	bge	r7,r17,12cd0 <_gp+0xfffeda74>
   12cf8:	d9801e04 	addi	r6,sp,120
   12cfc:	a00b883a 	mov	r5,r20
   12d00:	9809883a 	mov	r4,r19
   12d04:	d9c03d15 	stw	r7,244(sp)
   12d08:	0016d7c0 	call	16d7c <__ssprint_r>
   12d0c:	d9c03d17 	ldw	r7,244(sp)
   12d10:	103be61e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12d14:	843ffc04 	addi	r16,r16,-16
   12d18:	d8c02017 	ldw	r3,128(sp)
   12d1c:	dc401f17 	ldw	r17,124(sp)
   12d20:	dd800404 	addi	r22,sp,16
   12d24:	e43fed16 	blt	fp,r16,12cdc <_gp+0xfffeda80>
   12d28:	d8802c17 	ldw	r2,176(sp)
   12d2c:	1c07883a 	add	r3,r3,r16
   12d30:	8c400044 	addi	r17,r17,1
   12d34:	b0800015 	stw	r2,0(r22)
   12d38:	b4000115 	stw	r16,4(r22)
   12d3c:	d8c02015 	stw	r3,128(sp)
   12d40:	dc401f15 	stw	r17,124(sp)
   12d44:	008001c4 	movi	r2,7
   12d48:	147f2e0e 	bge	r2,r17,12a04 <_gp+0xfffed7a8>
   12d4c:	d9402d17 	ldw	r5,180(sp)
   12d50:	d9801e04 	addi	r6,sp,120
   12d54:	9809883a 	mov	r4,r19
   12d58:	0016d7c0 	call	16d7c <__ssprint_r>
   12d5c:	103bd31e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12d60:	d8c02017 	ldw	r3,128(sp)
   12d64:	dc401f17 	ldw	r17,124(sp)
   12d68:	dd800404 	addi	r22,sp,16
   12d6c:	003f2606 	br	12a08 <_gp+0xfffed7ac>
   12d70:	9080040c 	andi	r2,r18,16
   12d74:	1000c326 	beq	r2,zero,13084 <___svfprintf_internal_r+0x1774>
   12d78:	d9402e17 	ldw	r5,184(sp)
   12d7c:	2d000017 	ldw	r20,0(r5)
   12d80:	29400104 	addi	r5,r5,4
   12d84:	d9402e15 	stw	r5,184(sp)
   12d88:	a02dd7fa 	srai	r22,r20,31
   12d8c:	b005883a 	mov	r2,r22
   12d90:	103c430e 	bge	r2,zero,11ea0 <_gp+0xfffecc44>
   12d94:	d9402a17 	ldw	r5,168(sp)
   12d98:	0529c83a 	sub	r20,zero,r20
   12d9c:	07000b44 	movi	fp,45
   12da0:	a004c03a 	cmpne	r2,r20,zero
   12da4:	05adc83a 	sub	r22,zero,r22
   12da8:	df002785 	stb	fp,158(sp)
   12dac:	b0adc83a 	sub	r22,r22,r2
   12db0:	28022e16 	blt	r5,zero,1366c <___svfprintf_internal_r+0x1d5c>
   12db4:	00bfdfc4 	movi	r2,-129
   12db8:	90a4703a 	and	r18,r18,r2
   12dbc:	003c3f06 	br	11ebc <_gp+0xfffecc60>
   12dc0:	9080100c 	andi	r2,r18,64
   12dc4:	d8002785 	stb	zero,158(sp)
   12dc8:	10012526 	beq	r2,zero,13260 <___svfprintf_internal_r+0x1950>
   12dcc:	d9402e17 	ldw	r5,184(sp)
   12dd0:	d8c02a17 	ldw	r3,168(sp)
   12dd4:	002d883a 	mov	r22,zero
   12dd8:	28800104 	addi	r2,r5,4
   12ddc:	2d00000b 	ldhu	r20,0(r5)
   12de0:	183fa20e 	bge	r3,zero,12c6c <_gp+0xfffeda10>
   12de4:	d8802e15 	stw	r2,184(sp)
   12de8:	0039883a 	mov	fp,zero
   12dec:	a584b03a 	or	r2,r20,r22
   12df0:	103c321e 	bne	r2,zero,11ebc <_gp+0xfffecc60>
   12df4:	00800044 	movi	r2,1
   12df8:	003e5006 	br	1273c <_gp+0xfffed4e0>
   12dfc:	d9402d17 	ldw	r5,180(sp)
   12e00:	d9801e04 	addi	r6,sp,120
   12e04:	9809883a 	mov	r4,r19
   12e08:	0016d7c0 	call	16d7c <__ssprint_r>
   12e0c:	103ba71e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12e10:	d8c02017 	ldw	r3,128(sp)
   12e14:	da000404 	addi	r8,sp,16
   12e18:	d9003217 	ldw	r4,200(sp)
   12e1c:	d8802617 	ldw	r2,152(sp)
   12e20:	d9403317 	ldw	r5,204(sp)
   12e24:	8123883a 	add	r17,r16,r4
   12e28:	11400216 	blt	r2,r5,12e34 <___svfprintf_internal_r+0x1524>
   12e2c:	9100004c 	andi	r4,r18,1
   12e30:	20000d26 	beq	r4,zero,12e68 <___svfprintf_internal_r+0x1558>
   12e34:	d9003817 	ldw	r4,224(sp)
   12e38:	d9403417 	ldw	r5,208(sp)
   12e3c:	1907883a 	add	r3,r3,r4
   12e40:	d9001f17 	ldw	r4,124(sp)
   12e44:	41400015 	stw	r5,0(r8)
   12e48:	d9403817 	ldw	r5,224(sp)
   12e4c:	21000044 	addi	r4,r4,1
   12e50:	d8c02015 	stw	r3,128(sp)
   12e54:	41400115 	stw	r5,4(r8)
   12e58:	d9001f15 	stw	r4,124(sp)
   12e5c:	014001c4 	movi	r5,7
   12e60:	2901dc16 	blt	r5,r4,135d4 <___svfprintf_internal_r+0x1cc4>
   12e64:	42000204 	addi	r8,r8,8
   12e68:	d9003317 	ldw	r4,204(sp)
   12e6c:	8121883a 	add	r16,r16,r4
   12e70:	2085c83a 	sub	r2,r4,r2
   12e74:	8461c83a 	sub	r16,r16,r17
   12e78:	1400010e 	bge	r2,r16,12e80 <___svfprintf_internal_r+0x1570>
   12e7c:	1021883a 	mov	r16,r2
   12e80:	04000a0e 	bge	zero,r16,12eac <___svfprintf_internal_r+0x159c>
   12e84:	d9001f17 	ldw	r4,124(sp)
   12e88:	1c07883a 	add	r3,r3,r16
   12e8c:	44400015 	stw	r17,0(r8)
   12e90:	21000044 	addi	r4,r4,1
   12e94:	44000115 	stw	r16,4(r8)
   12e98:	d8c02015 	stw	r3,128(sp)
   12e9c:	d9001f15 	stw	r4,124(sp)
   12ea0:	014001c4 	movi	r5,7
   12ea4:	2901e616 	blt	r5,r4,13640 <___svfprintf_internal_r+0x1d30>
   12ea8:	42000204 	addi	r8,r8,8
   12eac:	8001f616 	blt	r16,zero,13688 <___svfprintf_internal_r+0x1d78>
   12eb0:	1421c83a 	sub	r16,r2,r16
   12eb4:	043cfa0e 	bge	zero,r16,122a0 <_gp+0xfffed044>
   12eb8:	04400404 	movi	r17,16
   12ebc:	d8801f17 	ldw	r2,124(sp)
   12ec0:	8c3edd0e 	bge	r17,r16,12a38 <_gp+0xfffed7dc>
   12ec4:	014000b4 	movhi	r5,2
   12ec8:	2971a384 	addi	r5,r5,-14706
   12ecc:	d9402c15 	stw	r5,176(sp)
   12ed0:	058001c4 	movi	r22,7
   12ed4:	dd002d17 	ldw	r20,180(sp)
   12ed8:	00000306 	br	12ee8 <___svfprintf_internal_r+0x15d8>
   12edc:	42000204 	addi	r8,r8,8
   12ee0:	843ffc04 	addi	r16,r16,-16
   12ee4:	8c3ed70e 	bge	r17,r16,12a44 <_gp+0xfffed7e8>
   12ee8:	18c00404 	addi	r3,r3,16
   12eec:	10800044 	addi	r2,r2,1
   12ef0:	45400015 	stw	r21,0(r8)
   12ef4:	44400115 	stw	r17,4(r8)
   12ef8:	d8c02015 	stw	r3,128(sp)
   12efc:	d8801f15 	stw	r2,124(sp)
   12f00:	b0bff60e 	bge	r22,r2,12edc <_gp+0xfffedc80>
   12f04:	d9801e04 	addi	r6,sp,120
   12f08:	a00b883a 	mov	r5,r20
   12f0c:	9809883a 	mov	r4,r19
   12f10:	0016d7c0 	call	16d7c <__ssprint_r>
   12f14:	103b651e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12f18:	d8c02017 	ldw	r3,128(sp)
   12f1c:	d8801f17 	ldw	r2,124(sp)
   12f20:	da000404 	addi	r8,sp,16
   12f24:	003fee06 	br	12ee0 <_gp+0xfffedc84>
   12f28:	9088703a 	and	r4,r18,r2
   12f2c:	203e8d1e 	bne	r4,zero,12964 <_gp+0xfffed708>
   12f30:	dc401f17 	ldw	r17,124(sp)
   12f34:	40800115 	stw	r2,4(r8)
   12f38:	44000015 	stw	r16,0(r8)
   12f3c:	8c400044 	addi	r17,r17,1
   12f40:	d8c02015 	stw	r3,128(sp)
   12f44:	dc401f15 	stw	r17,124(sp)
   12f48:	008001c4 	movi	r2,7
   12f4c:	147f7f16 	blt	r2,r17,12d4c <_gp+0xfffedaf0>
   12f50:	45800204 	addi	r22,r8,8
   12f54:	003eac06 	br	12a08 <_gp+0xfffed7ac>
   12f58:	d9402d17 	ldw	r5,180(sp)
   12f5c:	d9801e04 	addi	r6,sp,120
   12f60:	9809883a 	mov	r4,r19
   12f64:	0016d7c0 	call	16d7c <__ssprint_r>
   12f68:	103b501e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12f6c:	d8c02017 	ldw	r3,128(sp)
   12f70:	dc401f17 	ldw	r17,124(sp)
   12f74:	da000404 	addi	r8,sp,16
   12f78:	003e8406 	br	1298c <_gp+0xfffed730>
   12f7c:	d9402d17 	ldw	r5,180(sp)
   12f80:	d9801e04 	addi	r6,sp,120
   12f84:	9809883a 	mov	r4,r19
   12f88:	0016d7c0 	call	16d7c <__ssprint_r>
   12f8c:	103b471e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12f90:	d8c02017 	ldw	r3,128(sp)
   12f94:	dc401f17 	ldw	r17,124(sp)
   12f98:	dd800404 	addi	r22,sp,16
   12f9c:	003e8606 	br	129b8 <_gp+0xfffed75c>
   12fa0:	0029883a 	mov	r20,zero
   12fa4:	a5000c04 	addi	r20,r20,48
   12fa8:	dc001dc4 	addi	r16,sp,119
   12fac:	dd001dc5 	stb	r20,119(sp)
   12fb0:	003f3806 	br	12c94 <_gp+0xfffeda38>
   12fb4:	d9402d17 	ldw	r5,180(sp)
   12fb8:	d9801e04 	addi	r6,sp,120
   12fbc:	9809883a 	mov	r4,r19
   12fc0:	0016d7c0 	call	16d7c <__ssprint_r>
   12fc4:	103b391e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   12fc8:	d8c02017 	ldw	r3,128(sp)
   12fcc:	da000404 	addi	r8,sp,16
   12fd0:	003c7306 	br	121a0 <_gp+0xfffecf44>
   12fd4:	d9003617 	ldw	r4,216(sp)
   12fd8:	d9403717 	ldw	r5,220(sp)
   12fdc:	da003e15 	stw	r8,248(sp)
   12fe0:	0016c700 	call	16c70 <__fpclassifyd>
   12fe4:	da003e17 	ldw	r8,248(sp)
   12fe8:	1000bd1e 	bne	r2,zero,132e0 <___svfprintf_internal_r+0x19d0>
   12fec:	008011c4 	movi	r2,71
   12ff0:	14411e0e 	bge	r2,r17,1346c <___svfprintf_internal_r+0x1b5c>
   12ff4:	040000b4 	movhi	r16,2
   12ff8:	84319604 	addi	r16,r16,-14760
   12ffc:	00c000c4 	movi	r3,3
   13000:	00bfdfc4 	movi	r2,-129
   13004:	d8c02915 	stw	r3,164(sp)
   13008:	90a4703a 	and	r18,r18,r2
   1300c:	df002783 	ldbu	fp,158(sp)
   13010:	d8c02b15 	stw	r3,172(sp)
   13014:	d8002a15 	stw	zero,168(sp)
   13018:	d8003215 	stw	zero,200(sp)
   1301c:	003bfa06 	br	12008 <_gp+0xfffecdac>
   13020:	9080100c 	andi	r2,r18,64
   13024:	d8002785 	stb	zero,158(sp)
   13028:	10009426 	beq	r2,zero,1327c <___svfprintf_internal_r+0x196c>
   1302c:	d9402e17 	ldw	r5,184(sp)
   13030:	d8c02a17 	ldw	r3,168(sp)
   13034:	002d883a 	mov	r22,zero
   13038:	28800104 	addi	r2,r5,4
   1303c:	2d00000b 	ldhu	r20,0(r5)
   13040:	183ec10e 	bge	r3,zero,12b48 <_gp+0xfffed8ec>
   13044:	a586b03a 	or	r3,r20,r22
   13048:	d8802e15 	stw	r2,184(sp)
   1304c:	183ec21e 	bne	r3,zero,12b58 <_gp+0xfffed8fc>
   13050:	0039883a 	mov	fp,zero
   13054:	0005883a 	mov	r2,zero
   13058:	003db806 	br	1273c <_gp+0xfffed4e0>
   1305c:	d8c02e17 	ldw	r3,184(sp)
   13060:	d9002e17 	ldw	r4,184(sp)
   13064:	d9402e17 	ldw	r5,184(sp)
   13068:	18c00017 	ldw	r3,0(r3)
   1306c:	21000117 	ldw	r4,4(r4)
   13070:	29400204 	addi	r5,r5,8
   13074:	d8c03615 	stw	r3,216(sp)
   13078:	d9003715 	stw	r4,220(sp)
   1307c:	d9402e15 	stw	r5,184(sp)
   13080:	003b5a06 	br	11dec <_gp+0xfffecb90>
   13084:	9080100c 	andi	r2,r18,64
   13088:	10010726 	beq	r2,zero,134a8 <___svfprintf_internal_r+0x1b98>
   1308c:	d8802e17 	ldw	r2,184(sp)
   13090:	1500000f 	ldh	r20,0(r2)
   13094:	10800104 	addi	r2,r2,4
   13098:	d8802e15 	stw	r2,184(sp)
   1309c:	a02dd7fa 	srai	r22,r20,31
   130a0:	b005883a 	mov	r2,r22
   130a4:	003b7d06 	br	11e9c <_gp+0xfffecc40>
   130a8:	9080100c 	andi	r2,r18,64
   130ac:	10010526 	beq	r2,zero,134c4 <___svfprintf_internal_r+0x1bb4>
   130b0:	d8c02e17 	ldw	r3,184(sp)
   130b4:	002d883a 	mov	r22,zero
   130b8:	1d00000b 	ldhu	r20,0(r3)
   130bc:	18c00104 	addi	r3,r3,4
   130c0:	d8c02e15 	stw	r3,184(sp)
   130c4:	003ce206 	br	12450 <_gp+0xfffed1f4>
   130c8:	bc400007 	ldb	r17,0(r23)
   130cc:	003a6506 	br	11a64 <_gp+0xfffec808>
   130d0:	9080040c 	andi	r2,r18,16
   130d4:	10010126 	beq	r2,zero,134dc <___svfprintf_internal_r+0x1bcc>
   130d8:	d8c02e17 	ldw	r3,184(sp)
   130dc:	d9002f17 	ldw	r4,188(sp)
   130e0:	18800017 	ldw	r2,0(r3)
   130e4:	18c00104 	addi	r3,r3,4
   130e8:	d8c02e15 	stw	r3,184(sp)
   130ec:	11000015 	stw	r4,0(r2)
   130f0:	003a3206 	br	119bc <_gp+0xfffec760>
   130f4:	d9002a17 	ldw	r4,168(sp)
   130f8:	d8002785 	stb	zero,158(sp)
   130fc:	203d8d16 	blt	r4,zero,12734 <_gp+0xfffed4d8>
   13100:	00bfdfc4 	movi	r2,-129
   13104:	90a4703a 	and	r18,r18,r2
   13108:	003ad506 	br	11c60 <_gp+0xfffeca04>
   1310c:	014000b4 	movhi	r5,2
   13110:	2971a384 	addi	r5,r5,-14706
   13114:	d9402c15 	stw	r5,176(sp)
   13118:	d9402c17 	ldw	r5,176(sp)
   1311c:	1c47883a 	add	r3,r3,r17
   13120:	10800044 	addi	r2,r2,1
   13124:	41400015 	stw	r5,0(r8)
   13128:	44400115 	stw	r17,4(r8)
   1312c:	d8c02015 	stw	r3,128(sp)
   13130:	d8801f15 	stw	r2,124(sp)
   13134:	010001c4 	movi	r4,7
   13138:	20bf3016 	blt	r4,r2,12dfc <_gp+0xfffedba0>
   1313c:	42000204 	addi	r8,r8,8
   13140:	003f3506 	br	12e18 <_gp+0xfffedbbc>
   13144:	010000b4 	movhi	r4,2
   13148:	2131a384 	addi	r4,r4,-14706
   1314c:	d9002c15 	stw	r4,176(sp)
   13150:	003c3c06 	br	12244 <_gp+0xfffecfe8>
   13154:	d9402d17 	ldw	r5,180(sp)
   13158:	d9801e04 	addi	r6,sp,120
   1315c:	9809883a 	mov	r4,r19
   13160:	0016d7c0 	call	16d7c <__ssprint_r>
   13164:	103ad11e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   13168:	d8c02017 	ldw	r3,128(sp)
   1316c:	da000404 	addi	r8,sp,16
   13170:	003d9306 	br	127c0 <_gp+0xfffed564>
   13174:	d8801f17 	ldw	r2,124(sp)
   13178:	014000b4 	movhi	r5,2
   1317c:	01000044 	movi	r4,1
   13180:	18c00044 	addi	r3,r3,1
   13184:	10800044 	addi	r2,r2,1
   13188:	2971a304 	addi	r5,r5,-14708
   1318c:	41000115 	stw	r4,4(r8)
   13190:	41400015 	stw	r5,0(r8)
   13194:	d8c02015 	stw	r3,128(sp)
   13198:	d8801f15 	stw	r2,124(sp)
   1319c:	010001c4 	movi	r4,7
   131a0:	2080b516 	blt	r4,r2,13478 <___svfprintf_internal_r+0x1b68>
   131a4:	42000204 	addi	r8,r8,8
   131a8:	8800041e 	bne	r17,zero,131bc <___svfprintf_internal_r+0x18ac>
   131ac:	d8803317 	ldw	r2,204(sp)
   131b0:	1000021e 	bne	r2,zero,131bc <___svfprintf_internal_r+0x18ac>
   131b4:	9080004c 	andi	r2,r18,1
   131b8:	103c3926 	beq	r2,zero,122a0 <_gp+0xfffed044>
   131bc:	d9003817 	ldw	r4,224(sp)
   131c0:	d8801f17 	ldw	r2,124(sp)
   131c4:	d9403417 	ldw	r5,208(sp)
   131c8:	20c7883a 	add	r3,r4,r3
   131cc:	10800044 	addi	r2,r2,1
   131d0:	41000115 	stw	r4,4(r8)
   131d4:	41400015 	stw	r5,0(r8)
   131d8:	d8c02015 	stw	r3,128(sp)
   131dc:	d8801f15 	stw	r2,124(sp)
   131e0:	010001c4 	movi	r4,7
   131e4:	20818016 	blt	r4,r2,137e8 <___svfprintf_internal_r+0x1ed8>
   131e8:	42000204 	addi	r8,r8,8
   131ec:	0463c83a 	sub	r17,zero,r17
   131f0:	0440cb0e 	bge	zero,r17,13520 <___svfprintf_internal_r+0x1c10>
   131f4:	05800404 	movi	r22,16
   131f8:	b440e80e 	bge	r22,r17,1359c <___svfprintf_internal_r+0x1c8c>
   131fc:	014000b4 	movhi	r5,2
   13200:	2971a384 	addi	r5,r5,-14706
   13204:	d9402c15 	stw	r5,176(sp)
   13208:	070001c4 	movi	fp,7
   1320c:	dd002d17 	ldw	r20,180(sp)
   13210:	00000306 	br	13220 <___svfprintf_internal_r+0x1910>
   13214:	42000204 	addi	r8,r8,8
   13218:	8c7ffc04 	addi	r17,r17,-16
   1321c:	b440e20e 	bge	r22,r17,135a8 <___svfprintf_internal_r+0x1c98>
   13220:	18c00404 	addi	r3,r3,16
   13224:	10800044 	addi	r2,r2,1
   13228:	45400015 	stw	r21,0(r8)
   1322c:	45800115 	stw	r22,4(r8)
   13230:	d8c02015 	stw	r3,128(sp)
   13234:	d8801f15 	stw	r2,124(sp)
   13238:	e0bff60e 	bge	fp,r2,13214 <_gp+0xfffedfb8>
   1323c:	d9801e04 	addi	r6,sp,120
   13240:	a00b883a 	mov	r5,r20
   13244:	9809883a 	mov	r4,r19
   13248:	0016d7c0 	call	16d7c <__ssprint_r>
   1324c:	103a971e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   13250:	d8c02017 	ldw	r3,128(sp)
   13254:	d8801f17 	ldw	r2,124(sp)
   13258:	da000404 	addi	r8,sp,16
   1325c:	003fee06 	br	13218 <_gp+0xfffedfbc>
   13260:	d9002e17 	ldw	r4,184(sp)
   13264:	d9402a17 	ldw	r5,168(sp)
   13268:	002d883a 	mov	r22,zero
   1326c:	20800104 	addi	r2,r4,4
   13270:	25000017 	ldw	r20,0(r4)
   13274:	283e7d0e 	bge	r5,zero,12c6c <_gp+0xfffeda10>
   13278:	003eda06 	br	12de4 <_gp+0xfffedb88>
   1327c:	d9002e17 	ldw	r4,184(sp)
   13280:	d9402a17 	ldw	r5,168(sp)
   13284:	002d883a 	mov	r22,zero
   13288:	20800104 	addi	r2,r4,4
   1328c:	25000017 	ldw	r20,0(r4)
   13290:	283e2d0e 	bge	r5,zero,12b48 <_gp+0xfffed8ec>
   13294:	003f6b06 	br	13044 <_gp+0xfffedde8>
   13298:	d8c02e15 	stw	r3,184(sp)
   1329c:	0039883a 	mov	fp,zero
   132a0:	003ed206 	br	12dec <_gp+0xfffedb90>
   132a4:	bc400043 	ldbu	r17,1(r23)
   132a8:	84000814 	ori	r16,r16,32
   132ac:	bdc00044 	addi	r23,r23,1
   132b0:	8c403fcc 	andi	r17,r17,255
   132b4:	8c40201c 	xori	r17,r17,128
   132b8:	8c7fe004 	addi	r17,r17,-128
   132bc:	0039e906 	br	11a64 <_gp+0xfffec808>
   132c0:	d9402d17 	ldw	r5,180(sp)
   132c4:	d9801e04 	addi	r6,sp,120
   132c8:	9809883a 	mov	r4,r19
   132cc:	0016d7c0 	call	16d7c <__ssprint_r>
   132d0:	103a761e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   132d4:	d8c02017 	ldw	r3,128(sp)
   132d8:	da000404 	addi	r8,sp,16
   132dc:	003d4a06 	br	12808 <_gp+0xfffed5ac>
   132e0:	d9002a17 	ldw	r4,168(sp)
   132e4:	05bff7c4 	movi	r22,-33
   132e8:	00bfffc4 	movi	r2,-1
   132ec:	8dac703a 	and	r22,r17,r22
   132f0:	20806a26 	beq	r4,r2,1349c <___svfprintf_internal_r+0x1b8c>
   132f4:	008011c4 	movi	r2,71
   132f8:	b0813726 	beq	r22,r2,137d8 <___svfprintf_internal_r+0x1ec8>
   132fc:	d9003717 	ldw	r4,220(sp)
   13300:	90c04014 	ori	r3,r18,256
   13304:	d8c02c15 	stw	r3,176(sp)
   13308:	20015d16 	blt	r4,zero,13880 <___svfprintf_internal_r+0x1f70>
   1330c:	dd003717 	ldw	r20,220(sp)
   13310:	d8002905 	stb	zero,164(sp)
   13314:	00801984 	movi	r2,102
   13318:	88814026 	beq	r17,r2,1381c <___svfprintf_internal_r+0x1f0c>
   1331c:	00801184 	movi	r2,70
   13320:	88817126 	beq	r17,r2,138e8 <___svfprintf_internal_r+0x1fd8>
   13324:	00801144 	movi	r2,69
   13328:	b0816226 	beq	r22,r2,138b4 <___svfprintf_internal_r+0x1fa4>
   1332c:	d8c02a17 	ldw	r3,168(sp)
   13330:	d8802104 	addi	r2,sp,132
   13334:	d8800315 	stw	r2,12(sp)
   13338:	d9403617 	ldw	r5,216(sp)
   1333c:	d8802504 	addi	r2,sp,148
   13340:	d8800215 	stw	r2,8(sp)
   13344:	d8802604 	addi	r2,sp,152
   13348:	d8c00015 	stw	r3,0(sp)
   1334c:	d8800115 	stw	r2,4(sp)
   13350:	01c00084 	movi	r7,2
   13354:	a00d883a 	mov	r6,r20
   13358:	9809883a 	mov	r4,r19
   1335c:	d8c03d15 	stw	r3,244(sp)
   13360:	da003e15 	stw	r8,248(sp)
   13364:	0013df40 	call	13df4 <_dtoa_r>
   13368:	1021883a 	mov	r16,r2
   1336c:	008019c4 	movi	r2,103
   13370:	d8c03d17 	ldw	r3,244(sp)
   13374:	da003e17 	ldw	r8,248(sp)
   13378:	8880e726 	beq	r17,r2,13718 <___svfprintf_internal_r+0x1e08>
   1337c:	008011c4 	movi	r2,71
   13380:	8880d426 	beq	r17,r2,136d4 <___svfprintf_internal_r+0x1dc4>
   13384:	80f9883a 	add	fp,r16,r3
   13388:	d9003617 	ldw	r4,216(sp)
   1338c:	000d883a 	mov	r6,zero
   13390:	000f883a 	mov	r7,zero
   13394:	a00b883a 	mov	r5,r20
   13398:	da003e15 	stw	r8,248(sp)
   1339c:	001a8ec0 	call	1a8ec <__eqdf2>
   133a0:	da003e17 	ldw	r8,248(sp)
   133a4:	1000e426 	beq	r2,zero,13738 <___svfprintf_internal_r+0x1e28>
   133a8:	d8802117 	ldw	r2,132(sp)
   133ac:	1700062e 	bgeu	r2,fp,133c8 <___svfprintf_internal_r+0x1ab8>
   133b0:	01000c04 	movi	r4,48
   133b4:	10c00044 	addi	r3,r2,1
   133b8:	d8c02115 	stw	r3,132(sp)
   133bc:	11000005 	stb	r4,0(r2)
   133c0:	d8802117 	ldw	r2,132(sp)
   133c4:	173ffb36 	bltu	r2,fp,133b4 <_gp+0xfffee158>
   133c8:	1405c83a 	sub	r2,r2,r16
   133cc:	d8803315 	stw	r2,204(sp)
   133d0:	008011c4 	movi	r2,71
   133d4:	b080c526 	beq	r22,r2,136ec <___svfprintf_internal_r+0x1ddc>
   133d8:	00801944 	movi	r2,101
   133dc:	1441d80e 	bge	r2,r17,13b40 <___svfprintf_internal_r+0x2230>
   133e0:	d8c02617 	ldw	r3,152(sp)
   133e4:	00801984 	movi	r2,102
   133e8:	d8c03215 	stw	r3,200(sp)
   133ec:	88813426 	beq	r17,r2,138c0 <___svfprintf_internal_r+0x1fb0>
   133f0:	d8c03217 	ldw	r3,200(sp)
   133f4:	d9003317 	ldw	r4,204(sp)
   133f8:	19012516 	blt	r3,r4,13890 <___svfprintf_internal_r+0x1f80>
   133fc:	9480004c 	andi	r18,r18,1
   13400:	9001841e 	bne	r18,zero,13a14 <___svfprintf_internal_r+0x2104>
   13404:	1805883a 	mov	r2,r3
   13408:	1801cb16 	blt	r3,zero,13b38 <___svfprintf_internal_r+0x2228>
   1340c:	d8c03217 	ldw	r3,200(sp)
   13410:	044019c4 	movi	r17,103
   13414:	d8c02b15 	stw	r3,172(sp)
   13418:	df002907 	ldb	fp,164(sp)
   1341c:	e000a61e 	bne	fp,zero,136b8 <___svfprintf_internal_r+0x1da8>
   13420:	df002783 	ldbu	fp,158(sp)
   13424:	d8802915 	stw	r2,164(sp)
   13428:	dc802c17 	ldw	r18,176(sp)
   1342c:	d8002a15 	stw	zero,168(sp)
   13430:	003af506 	br	12008 <_gp+0xfffecdac>
   13434:	040000b4 	movhi	r16,2
   13438:	84319304 	addi	r16,r16,-14772
   1343c:	003a7e06 	br	11e38 <_gp+0xfffecbdc>
   13440:	d9003917 	ldw	r4,228(sp)
   13444:	04001004 	movi	r16,64
   13448:	800b883a 	mov	r5,r16
   1344c:	0010eac0 	call	10eac <_malloc_r>
   13450:	d9002d17 	ldw	r4,180(sp)
   13454:	20800015 	stw	r2,0(r4)
   13458:	20800415 	stw	r2,16(r4)
   1345c:	1001d026 	beq	r2,zero,13ba0 <___svfprintf_internal_r+0x2290>
   13460:	d8802d17 	ldw	r2,180(sp)
   13464:	14000515 	stw	r16,20(r2)
   13468:	00394406 	br	1197c <_gp+0xfffec720>
   1346c:	040000b4 	movhi	r16,2
   13470:	84319504 	addi	r16,r16,-14764
   13474:	003ee106 	br	12ffc <_gp+0xfffedda0>
   13478:	d9402d17 	ldw	r5,180(sp)
   1347c:	d9801e04 	addi	r6,sp,120
   13480:	9809883a 	mov	r4,r19
   13484:	0016d7c0 	call	16d7c <__ssprint_r>
   13488:	103a081e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   1348c:	dc402617 	ldw	r17,152(sp)
   13490:	d8c02017 	ldw	r3,128(sp)
   13494:	da000404 	addi	r8,sp,16
   13498:	003f4306 	br	131a8 <_gp+0xfffedf4c>
   1349c:	01400184 	movi	r5,6
   134a0:	d9402a15 	stw	r5,168(sp)
   134a4:	003f9506 	br	132fc <_gp+0xfffee0a0>
   134a8:	d8c02e17 	ldw	r3,184(sp)
   134ac:	1d000017 	ldw	r20,0(r3)
   134b0:	18c00104 	addi	r3,r3,4
   134b4:	d8c02e15 	stw	r3,184(sp)
   134b8:	a02dd7fa 	srai	r22,r20,31
   134bc:	b005883a 	mov	r2,r22
   134c0:	003a7606 	br	11e9c <_gp+0xfffecc40>
   134c4:	d9002e17 	ldw	r4,184(sp)
   134c8:	002d883a 	mov	r22,zero
   134cc:	25000017 	ldw	r20,0(r4)
   134d0:	21000104 	addi	r4,r4,4
   134d4:	d9002e15 	stw	r4,184(sp)
   134d8:	003bdd06 	br	12450 <_gp+0xfffed1f4>
   134dc:	9480100c 	andi	r18,r18,64
   134e0:	90006e26 	beq	r18,zero,1369c <___svfprintf_internal_r+0x1d8c>
   134e4:	d9402e17 	ldw	r5,184(sp)
   134e8:	d8c02f17 	ldw	r3,188(sp)
   134ec:	28800017 	ldw	r2,0(r5)
   134f0:	29400104 	addi	r5,r5,4
   134f4:	d9402e15 	stw	r5,184(sp)
   134f8:	10c0000d 	sth	r3,0(r2)
   134fc:	00392f06 	br	119bc <_gp+0xfffec760>
   13500:	d9402d17 	ldw	r5,180(sp)
   13504:	d9801e04 	addi	r6,sp,120
   13508:	9809883a 	mov	r4,r19
   1350c:	0016d7c0 	call	16d7c <__ssprint_r>
   13510:	1039e61e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   13514:	d8c02017 	ldw	r3,128(sp)
   13518:	d8801f17 	ldw	r2,124(sp)
   1351c:	da000404 	addi	r8,sp,16
   13520:	d9403317 	ldw	r5,204(sp)
   13524:	10800044 	addi	r2,r2,1
   13528:	44000015 	stw	r16,0(r8)
   1352c:	28c7883a 	add	r3,r5,r3
   13530:	003b5506 	br	12288 <_gp+0xfffed02c>
   13534:	8009883a 	mov	r4,r16
   13538:	df003e15 	stw	fp,248(sp)
   1353c:	0016ce40 	call	16ce4 <strlen>
   13540:	d8802b15 	stw	r2,172(sp)
   13544:	da003e17 	ldw	r8,248(sp)
   13548:	103c160e 	bge	r2,zero,125a4 <_gp+0xfffed348>
   1354c:	0005883a 	mov	r2,zero
   13550:	003c1406 	br	125a4 <_gp+0xfffed348>
   13554:	00bfffc4 	movi	r2,-1
   13558:	0039d906 	br	11cc0 <_gp+0xfffeca64>
   1355c:	010000b4 	movhi	r4,2
   13560:	2131a784 	addi	r4,r4,-14690
   13564:	d9003515 	stw	r4,212(sp)
   13568:	003ae406 	br	120fc <_gp+0xfffecea0>
   1356c:	013fffc4 	movi	r4,-1
   13570:	0039fa06 	br	11d5c <_gp+0xfffecb00>
   13574:	d9402d17 	ldw	r5,180(sp)
   13578:	d9801e04 	addi	r6,sp,120
   1357c:	9809883a 	mov	r4,r19
   13580:	0016d7c0 	call	16d7c <__ssprint_r>
   13584:	1039c91e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   13588:	d8c02017 	ldw	r3,128(sp)
   1358c:	da000404 	addi	r8,sp,16
   13590:	003d8406 	br	12ba4 <_gp+0xfffed948>
   13594:	0023883a 	mov	r17,zero
   13598:	003d8306 	br	12ba8 <_gp+0xfffed94c>
   1359c:	010000b4 	movhi	r4,2
   135a0:	2131a384 	addi	r4,r4,-14706
   135a4:	d9002c15 	stw	r4,176(sp)
   135a8:	d9002c17 	ldw	r4,176(sp)
   135ac:	1c47883a 	add	r3,r3,r17
   135b0:	10800044 	addi	r2,r2,1
   135b4:	41000015 	stw	r4,0(r8)
   135b8:	44400115 	stw	r17,4(r8)
   135bc:	d8c02015 	stw	r3,128(sp)
   135c0:	d8801f15 	stw	r2,124(sp)
   135c4:	010001c4 	movi	r4,7
   135c8:	20bfcd16 	blt	r4,r2,13500 <_gp+0xfffee2a4>
   135cc:	42000204 	addi	r8,r8,8
   135d0:	003fd306 	br	13520 <_gp+0xfffee2c4>
   135d4:	d9402d17 	ldw	r5,180(sp)
   135d8:	d9801e04 	addi	r6,sp,120
   135dc:	9809883a 	mov	r4,r19
   135e0:	0016d7c0 	call	16d7c <__ssprint_r>
   135e4:	1039b11e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   135e8:	d8802617 	ldw	r2,152(sp)
   135ec:	d8c02017 	ldw	r3,128(sp)
   135f0:	da000404 	addi	r8,sp,16
   135f4:	003e1c06 	br	12e68 <_gp+0xfffedc0c>
   135f8:	d8802a17 	ldw	r2,168(sp)
   135fc:	00c00184 	movi	r3,6
   13600:	1880012e 	bgeu	r3,r2,13608 <___svfprintf_internal_r+0x1cf8>
   13604:	1805883a 	mov	r2,r3
   13608:	d8802b15 	stw	r2,172(sp)
   1360c:	1000f316 	blt	r2,zero,139dc <___svfprintf_internal_r+0x20cc>
   13610:	040000b4 	movhi	r16,2
   13614:	d8802915 	stw	r2,164(sp)
   13618:	dd002e15 	stw	r20,184(sp)
   1361c:	d8002a15 	stw	zero,168(sp)
   13620:	d8003215 	stw	zero,200(sp)
   13624:	8431a104 	addi	r16,r16,-14716
   13628:	0039883a 	mov	fp,zero
   1362c:	003a7d06 	br	12024 <_gp+0xfffecdc8>
   13630:	010000b4 	movhi	r4,2
   13634:	2131a784 	addi	r4,r4,-14690
   13638:	d9003515 	stw	r4,212(sp)
   1363c:	003b3d06 	br	12334 <_gp+0xfffed0d8>
   13640:	d9402d17 	ldw	r5,180(sp)
   13644:	d9801e04 	addi	r6,sp,120
   13648:	9809883a 	mov	r4,r19
   1364c:	0016d7c0 	call	16d7c <__ssprint_r>
   13650:	1039961e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   13654:	d8802617 	ldw	r2,152(sp)
   13658:	d9403317 	ldw	r5,204(sp)
   1365c:	d8c02017 	ldw	r3,128(sp)
   13660:	da000404 	addi	r8,sp,16
   13664:	2885c83a 	sub	r2,r5,r2
   13668:	003e1006 	br	12eac <_gp+0xfffedc50>
   1366c:	00800044 	movi	r2,1
   13670:	10803fcc 	andi	r2,r2,255
   13674:	00c00044 	movi	r3,1
   13678:	10fa1026 	beq	r2,r3,11ebc <_gp+0xfffecc60>
   1367c:	00c00084 	movi	r3,2
   13680:	10fb8226 	beq	r2,r3,1248c <_gp+0xfffed230>
   13684:	003a4206 	br	11f90 <_gp+0xfffecd34>
   13688:	0021883a 	mov	r16,zero
   1368c:	003e0806 	br	12eb0 <_gp+0xfffedc54>
   13690:	07000b44 	movi	fp,45
   13694:	df002785 	stb	fp,158(sp)
   13698:	0039e306 	br	11e28 <_gp+0xfffecbcc>
   1369c:	d9002e17 	ldw	r4,184(sp)
   136a0:	d9402f17 	ldw	r5,188(sp)
   136a4:	20800017 	ldw	r2,0(r4)
   136a8:	21000104 	addi	r4,r4,4
   136ac:	d9002e15 	stw	r4,184(sp)
   136b0:	11400015 	stw	r5,0(r2)
   136b4:	0038c106 	br	119bc <_gp+0xfffec760>
   136b8:	00c00b44 	movi	r3,45
   136bc:	d8c02785 	stb	r3,158(sp)
   136c0:	d8802915 	stw	r2,164(sp)
   136c4:	dc802c17 	ldw	r18,176(sp)
   136c8:	d8002a15 	stw	zero,168(sp)
   136cc:	07000b44 	movi	fp,45
   136d0:	003a5106 	br	12018 <_gp+0xfffecdbc>
   136d4:	9080004c 	andi	r2,r18,1
   136d8:	1000941e 	bne	r2,zero,1392c <___svfprintf_internal_r+0x201c>
   136dc:	d8802117 	ldw	r2,132(sp)
   136e0:	1405c83a 	sub	r2,r2,r16
   136e4:	d8803315 	stw	r2,204(sp)
   136e8:	b441151e 	bne	r22,r17,13b40 <___svfprintf_internal_r+0x2230>
   136ec:	dd802617 	ldw	r22,152(sp)
   136f0:	00bfff44 	movi	r2,-3
   136f4:	b0801a16 	blt	r22,r2,13760 <___svfprintf_internal_r+0x1e50>
   136f8:	d9402a17 	ldw	r5,168(sp)
   136fc:	2d801816 	blt	r5,r22,13760 <___svfprintf_internal_r+0x1e50>
   13700:	dd803215 	stw	r22,200(sp)
   13704:	003f3a06 	br	133f0 <_gp+0xfffee194>
   13708:	1025883a 	mov	r18,r2
   1370c:	0039883a 	mov	fp,zero
   13710:	00800084 	movi	r2,2
   13714:	003fd606 	br	13670 <_gp+0xfffee414>
   13718:	9080004c 	andi	r2,r18,1
   1371c:	103f191e 	bne	r2,zero,13384 <_gp+0xfffee128>
   13720:	d8802117 	ldw	r2,132(sp)
   13724:	003f2806 	br	133c8 <_gp+0xfffee16c>
   13728:	010000b4 	movhi	r4,2
   1372c:	2131a384 	addi	r4,r4,-14706
   13730:	d9002c15 	stw	r4,176(sp)
   13734:	003c7c06 	br	12928 <_gp+0xfffed6cc>
   13738:	e005883a 	mov	r2,fp
   1373c:	003f2206 	br	133c8 <_gp+0xfffee16c>
   13740:	d9002a17 	ldw	r4,168(sp)
   13744:	df002783 	ldbu	fp,158(sp)
   13748:	dd002e15 	stw	r20,184(sp)
   1374c:	d9002915 	stw	r4,164(sp)
   13750:	d9002b15 	stw	r4,172(sp)
   13754:	d8002a15 	stw	zero,168(sp)
   13758:	d8003215 	stw	zero,200(sp)
   1375c:	003a2a06 	br	12008 <_gp+0xfffecdac>
   13760:	8c7fff84 	addi	r17,r17,-2
   13764:	b5bfffc4 	addi	r22,r22,-1
   13768:	dd802615 	stw	r22,152(sp)
   1376c:	dc4022c5 	stb	r17,139(sp)
   13770:	b000c316 	blt	r22,zero,13a80 <___svfprintf_internal_r+0x2170>
   13774:	00800ac4 	movi	r2,43
   13778:	d8802305 	stb	r2,140(sp)
   1377c:	00800244 	movi	r2,9
   13780:	15806e16 	blt	r2,r22,1393c <___svfprintf_internal_r+0x202c>
   13784:	00800c04 	movi	r2,48
   13788:	b5800c04 	addi	r22,r22,48
   1378c:	d8802345 	stb	r2,141(sp)
   13790:	dd802385 	stb	r22,142(sp)
   13794:	d88023c4 	addi	r2,sp,143
   13798:	df0022c4 	addi	fp,sp,139
   1379c:	d8c03317 	ldw	r3,204(sp)
   137a0:	1739c83a 	sub	fp,r2,fp
   137a4:	d9003317 	ldw	r4,204(sp)
   137a8:	e0c7883a 	add	r3,fp,r3
   137ac:	df003b15 	stw	fp,236(sp)
   137b0:	d8c02b15 	stw	r3,172(sp)
   137b4:	00800044 	movi	r2,1
   137b8:	1100b70e 	bge	r2,r4,13a98 <___svfprintf_internal_r+0x2188>
   137bc:	d8c02b17 	ldw	r3,172(sp)
   137c0:	18c00044 	addi	r3,r3,1
   137c4:	d8c02b15 	stw	r3,172(sp)
   137c8:	1805883a 	mov	r2,r3
   137cc:	1800b016 	blt	r3,zero,13a90 <___svfprintf_internal_r+0x2180>
   137d0:	d8003215 	stw	zero,200(sp)
   137d4:	003f1006 	br	13418 <_gp+0xfffee1bc>
   137d8:	d8802a17 	ldw	r2,168(sp)
   137dc:	103ec71e 	bne	r2,zero,132fc <_gp+0xfffee0a0>
   137e0:	dc002a15 	stw	r16,168(sp)
   137e4:	003ec506 	br	132fc <_gp+0xfffee0a0>
   137e8:	d9402d17 	ldw	r5,180(sp)
   137ec:	d9801e04 	addi	r6,sp,120
   137f0:	9809883a 	mov	r4,r19
   137f4:	0016d7c0 	call	16d7c <__ssprint_r>
   137f8:	10392c1e 	bne	r2,zero,11cac <_gp+0xfffeca50>
   137fc:	dc402617 	ldw	r17,152(sp)
   13800:	d8c02017 	ldw	r3,128(sp)
   13804:	d8801f17 	ldw	r2,124(sp)
   13808:	da000404 	addi	r8,sp,16
   1380c:	003e7706 	br	131ec <_gp+0xfffedf90>
   13810:	182f883a 	mov	r23,r3
   13814:	d8002a15 	stw	zero,168(sp)
   13818:	00389306 	br	11a68 <_gp+0xfffec80c>
   1381c:	d8c02a17 	ldw	r3,168(sp)
   13820:	d8802104 	addi	r2,sp,132
   13824:	d8800315 	stw	r2,12(sp)
   13828:	d9403617 	ldw	r5,216(sp)
   1382c:	d8802504 	addi	r2,sp,148
   13830:	d8800215 	stw	r2,8(sp)
   13834:	d8802604 	addi	r2,sp,152
   13838:	d8c00015 	stw	r3,0(sp)
   1383c:	9809883a 	mov	r4,r19
   13840:	d8800115 	stw	r2,4(sp)
   13844:	01c000c4 	movi	r7,3
   13848:	a00d883a 	mov	r6,r20
   1384c:	da003e15 	stw	r8,248(sp)
   13850:	0013df40 	call	13df4 <_dtoa_r>
   13854:	d9002a17 	ldw	r4,168(sp)
   13858:	da003e17 	ldw	r8,248(sp)
   1385c:	1021883a 	mov	r16,r2
   13860:	1139883a 	add	fp,r2,r4
   13864:	2007883a 	mov	r3,r4
   13868:	81000007 	ldb	r4,0(r16)
   1386c:	00800c04 	movi	r2,48
   13870:	20806f26 	beq	r4,r2,13a30 <___svfprintf_internal_r+0x2120>
   13874:	d8c02617 	ldw	r3,152(sp)
   13878:	e0f9883a 	add	fp,fp,r3
   1387c:	003ec206 	br	13388 <_gp+0xfffee12c>
   13880:	00c00b44 	movi	r3,45
   13884:	2520003c 	xorhi	r20,r4,32768
   13888:	d8c02905 	stb	r3,164(sp)
   1388c:	003ea106 	br	13314 <_gp+0xfffee0b8>
   13890:	d8c03217 	ldw	r3,200(sp)
   13894:	00c0890e 	bge	zero,r3,13abc <___svfprintf_internal_r+0x21ac>
   13898:	00800044 	movi	r2,1
   1389c:	d9003317 	ldw	r4,204(sp)
   138a0:	1105883a 	add	r2,r2,r4
   138a4:	d8802b15 	stw	r2,172(sp)
   138a8:	10005f16 	blt	r2,zero,13a28 <___svfprintf_internal_r+0x2118>
   138ac:	044019c4 	movi	r17,103
   138b0:	003ed906 	br	13418 <_gp+0xfffee1bc>
   138b4:	d9002a17 	ldw	r4,168(sp)
   138b8:	20c00044 	addi	r3,r4,1
   138bc:	003e9c06 	br	13330 <_gp+0xfffee0d4>
   138c0:	d9002a17 	ldw	r4,168(sp)
   138c4:	00c0680e 	bge	zero,r3,13a68 <___svfprintf_internal_r+0x2158>
   138c8:	2000461e 	bne	r4,zero,139e4 <___svfprintf_internal_r+0x20d4>
   138cc:	9480004c 	andi	r18,r18,1
   138d0:	9000441e 	bne	r18,zero,139e4 <___svfprintf_internal_r+0x20d4>
   138d4:	1805883a 	mov	r2,r3
   138d8:	1800a116 	blt	r3,zero,13b60 <___svfprintf_internal_r+0x2250>
   138dc:	d8c03217 	ldw	r3,200(sp)
   138e0:	d8c02b15 	stw	r3,172(sp)
   138e4:	003ecc06 	br	13418 <_gp+0xfffee1bc>
   138e8:	d9402a17 	ldw	r5,168(sp)
   138ec:	d8802104 	addi	r2,sp,132
   138f0:	d8800315 	stw	r2,12(sp)
   138f4:	d9400015 	stw	r5,0(sp)
   138f8:	d8802504 	addi	r2,sp,148
   138fc:	d9403617 	ldw	r5,216(sp)
   13900:	d8800215 	stw	r2,8(sp)
   13904:	d8802604 	addi	r2,sp,152
   13908:	d8800115 	stw	r2,4(sp)
   1390c:	01c000c4 	movi	r7,3
   13910:	a00d883a 	mov	r6,r20
   13914:	9809883a 	mov	r4,r19
   13918:	da003e15 	stw	r8,248(sp)
   1391c:	0013df40 	call	13df4 <_dtoa_r>
   13920:	d8c02a17 	ldw	r3,168(sp)
   13924:	da003e17 	ldw	r8,248(sp)
   13928:	1021883a 	mov	r16,r2
   1392c:	00801184 	movi	r2,70
   13930:	80f9883a 	add	fp,r16,r3
   13934:	88bfcc26 	beq	r17,r2,13868 <_gp+0xfffee60c>
   13938:	003e9306 	br	13388 <_gp+0xfffee12c>
   1393c:	df0022c4 	addi	fp,sp,139
   13940:	dc002a15 	stw	r16,168(sp)
   13944:	9829883a 	mov	r20,r19
   13948:	e021883a 	mov	r16,fp
   1394c:	4027883a 	mov	r19,r8
   13950:	b009883a 	mov	r4,r22
   13954:	01400284 	movi	r5,10
   13958:	0010c780 	call	10c78 <__modsi3>
   1395c:	10800c04 	addi	r2,r2,48
   13960:	843fffc4 	addi	r16,r16,-1
   13964:	b009883a 	mov	r4,r22
   13968:	01400284 	movi	r5,10
   1396c:	80800005 	stb	r2,0(r16)
   13970:	0010bf40 	call	10bf4 <__divsi3>
   13974:	102d883a 	mov	r22,r2
   13978:	00800244 	movi	r2,9
   1397c:	15bff416 	blt	r2,r22,13950 <_gp+0xfffee6f4>
   13980:	9811883a 	mov	r8,r19
   13984:	b0800c04 	addi	r2,r22,48
   13988:	a027883a 	mov	r19,r20
   1398c:	8029883a 	mov	r20,r16
   13990:	a17fffc4 	addi	r5,r20,-1
   13994:	a0bfffc5 	stb	r2,-1(r20)
   13998:	dc002a17 	ldw	r16,168(sp)
   1399c:	2f00782e 	bgeu	r5,fp,13b80 <___svfprintf_internal_r+0x2270>
   139a0:	d9c02384 	addi	r7,sp,142
   139a4:	3d0fc83a 	sub	r7,r7,r20
   139a8:	d9002344 	addi	r4,sp,141
   139ac:	e1cf883a 	add	r7,fp,r7
   139b0:	00000106 	br	139b8 <___svfprintf_internal_r+0x20a8>
   139b4:	28800003 	ldbu	r2,0(r5)
   139b8:	20800005 	stb	r2,0(r4)
   139bc:	21000044 	addi	r4,r4,1
   139c0:	29400044 	addi	r5,r5,1
   139c4:	21fffb1e 	bne	r4,r7,139b4 <_gp+0xfffee758>
   139c8:	d8802304 	addi	r2,sp,140
   139cc:	1505c83a 	sub	r2,r2,r20
   139d0:	d8c02344 	addi	r3,sp,141
   139d4:	1885883a 	add	r2,r3,r2
   139d8:	003f7006 	br	1379c <_gp+0xfffee540>
   139dc:	0005883a 	mov	r2,zero
   139e0:	003f0b06 	br	13610 <_gp+0xfffee3b4>
   139e4:	d9002a17 	ldw	r4,168(sp)
   139e8:	d8c03217 	ldw	r3,200(sp)
   139ec:	20800044 	addi	r2,r4,1
   139f0:	1885883a 	add	r2,r3,r2
   139f4:	d8802b15 	stw	r2,172(sp)
   139f8:	103e870e 	bge	r2,zero,13418 <_gp+0xfffee1bc>
   139fc:	0005883a 	mov	r2,zero
   13a00:	003e8506 	br	13418 <_gp+0xfffee1bc>
   13a04:	010000b4 	movhi	r4,2
   13a08:	2131a384 	addi	r4,r4,-14706
   13a0c:	d9002c15 	stw	r4,176(sp)
   13a10:	003cc506 	br	12d28 <_gp+0xfffedacc>
   13a14:	d8c03217 	ldw	r3,200(sp)
   13a18:	18c00044 	addi	r3,r3,1
   13a1c:	d8c02b15 	stw	r3,172(sp)
   13a20:	1805883a 	mov	r2,r3
   13a24:	183fa10e 	bge	r3,zero,138ac <_gp+0xfffee650>
   13a28:	0005883a 	mov	r2,zero
   13a2c:	003f9f06 	br	138ac <_gp+0xfffee650>
   13a30:	d9003617 	ldw	r4,216(sp)
   13a34:	000d883a 	mov	r6,zero
   13a38:	000f883a 	mov	r7,zero
   13a3c:	a00b883a 	mov	r5,r20
   13a40:	d8c03d15 	stw	r3,244(sp)
   13a44:	da003e15 	stw	r8,248(sp)
   13a48:	001a8ec0 	call	1a8ec <__eqdf2>
   13a4c:	d8c03d17 	ldw	r3,244(sp)
   13a50:	da003e17 	ldw	r8,248(sp)
   13a54:	103f8726 	beq	r2,zero,13874 <_gp+0xfffee618>
   13a58:	00800044 	movi	r2,1
   13a5c:	10c7c83a 	sub	r3,r2,r3
   13a60:	d8c02615 	stw	r3,152(sp)
   13a64:	003f8406 	br	13878 <_gp+0xfffee61c>
   13a68:	20000e1e 	bne	r4,zero,13aa4 <___svfprintf_internal_r+0x2194>
   13a6c:	9480004c 	andi	r18,r18,1
   13a70:	90000c1e 	bne	r18,zero,13aa4 <___svfprintf_internal_r+0x2194>
   13a74:	00800044 	movi	r2,1
   13a78:	d8802b15 	stw	r2,172(sp)
   13a7c:	003e6606 	br	13418 <_gp+0xfffee1bc>
   13a80:	00800b44 	movi	r2,45
   13a84:	05adc83a 	sub	r22,zero,r22
   13a88:	d8802305 	stb	r2,140(sp)
   13a8c:	003f3b06 	br	1377c <_gp+0xfffee520>
   13a90:	0005883a 	mov	r2,zero
   13a94:	003f4e06 	br	137d0 <_gp+0xfffee574>
   13a98:	90a4703a 	and	r18,r18,r2
   13a9c:	903f4a26 	beq	r18,zero,137c8 <_gp+0xfffee56c>
   13aa0:	003f4606 	br	137bc <_gp+0xfffee560>
   13aa4:	d8c02a17 	ldw	r3,168(sp)
   13aa8:	18c00084 	addi	r3,r3,2
   13aac:	d8c02b15 	stw	r3,172(sp)
   13ab0:	1805883a 	mov	r2,r3
   13ab4:	183e580e 	bge	r3,zero,13418 <_gp+0xfffee1bc>
   13ab8:	003fd006 	br	139fc <_gp+0xfffee7a0>
   13abc:	00800084 	movi	r2,2
   13ac0:	10c5c83a 	sub	r2,r2,r3
   13ac4:	003f7506 	br	1389c <_gp+0xfffee640>
   13ac8:	d9402e17 	ldw	r5,184(sp)
   13acc:	d9002e17 	ldw	r4,184(sp)
   13ad0:	bc400043 	ldbu	r17,1(r23)
   13ad4:	29400017 	ldw	r5,0(r5)
   13ad8:	20800104 	addi	r2,r4,4
   13adc:	d8802e15 	stw	r2,184(sp)
   13ae0:	d9402a15 	stw	r5,168(sp)
   13ae4:	182f883a 	mov	r23,r3
   13ae8:	283df10e 	bge	r5,zero,132b0 <_gp+0xfffee054>
   13aec:	8c403fcc 	andi	r17,r17,255
   13af0:	017fffc4 	movi	r5,-1
   13af4:	8c40201c 	xori	r17,r17,128
   13af8:	d9402a15 	stw	r5,168(sp)
   13afc:	8c7fe004 	addi	r17,r17,-128
   13b00:	0037d806 	br	11a64 <_gp+0xfffec808>
   13b04:	9080004c 	andi	r2,r18,1
   13b08:	0039883a 	mov	fp,zero
   13b0c:	10000726 	beq	r2,zero,13b2c <___svfprintf_internal_r+0x221c>
   13b10:	d8c02817 	ldw	r3,160(sp)
   13b14:	dc001dc4 	addi	r16,sp,119
   13b18:	00800c04 	movi	r2,48
   13b1c:	1c07c83a 	sub	r3,r3,r16
   13b20:	d8801dc5 	stb	r2,119(sp)
   13b24:	d8c02b15 	stw	r3,172(sp)
   13b28:	00393106 	br	11ff0 <_gp+0xfffecd94>
   13b2c:	d8002b15 	stw	zero,172(sp)
   13b30:	dc001e04 	addi	r16,sp,120
   13b34:	00392e06 	br	11ff0 <_gp+0xfffecd94>
   13b38:	0005883a 	mov	r2,zero
   13b3c:	003e3306 	br	1340c <_gp+0xfffee1b0>
   13b40:	dd802617 	ldw	r22,152(sp)
   13b44:	003f0706 	br	13764 <_gp+0xfffee508>
   13b48:	d8c02b03 	ldbu	r3,172(sp)
   13b4c:	d8c02785 	stb	r3,158(sp)
   13b50:	003a3506 	br	12428 <_gp+0xfffed1cc>
   13b54:	d8c02b03 	ldbu	r3,172(sp)
   13b58:	d8c02785 	stb	r3,158(sp)
   13b5c:	003a1706 	br	123bc <_gp+0xfffed160>
   13b60:	0005883a 	mov	r2,zero
   13b64:	003f5d06 	br	138dc <_gp+0xfffee680>
   13b68:	d8c02b03 	ldbu	r3,172(sp)
   13b6c:	d8c02785 	stb	r3,158(sp)
   13b70:	0038f306 	br	11f40 <_gp+0xfffecce4>
   13b74:	d8c02b03 	ldbu	r3,172(sp)
   13b78:	d8c02785 	stb	r3,158(sp)
   13b7c:	0038be06 	br	11e78 <_gp+0xfffecc1c>
   13b80:	d8802344 	addi	r2,sp,141
   13b84:	003f0506 	br	1379c <_gp+0xfffee540>
   13b88:	d8c02b03 	ldbu	r3,172(sp)
   13b8c:	d8c02785 	stb	r3,158(sp)
   13b90:	00388b06 	br	11dc0 <_gp+0xfffecb64>
   13b94:	d8c02b03 	ldbu	r3,172(sp)
   13b98:	d8c02785 	stb	r3,158(sp)
   13b9c:	003ad706 	br	126fc <_gp+0xfffed4a0>
   13ba0:	d9403917 	ldw	r5,228(sp)
   13ba4:	00800304 	movi	r2,12
   13ba8:	28800015 	stw	r2,0(r5)
   13bac:	00bfffc4 	movi	r2,-1
   13bb0:	00384306 	br	11cc0 <_gp+0xfffeca64>
   13bb4:	d8c02b03 	ldbu	r3,172(sp)
   13bb8:	d8c02785 	stb	r3,158(sp)
   13bbc:	003ab606 	br	12698 <_gp+0xfffed43c>
   13bc0:	d8c02b03 	ldbu	r3,172(sp)
   13bc4:	d8c02785 	stb	r3,158(sp)
   13bc8:	003a8906 	br	125f0 <_gp+0xfffed394>

00013bcc <quorem>:
   13bcc:	defff204 	addi	sp,sp,-56
   13bd0:	ddc00b15 	stw	r23,44(sp)
   13bd4:	20800417 	ldw	r2,16(r4)
   13bd8:	2dc00417 	ldw	r23,16(r5)
   13bdc:	dfc00d15 	stw	ra,52(sp)
   13be0:	df000c15 	stw	fp,48(sp)
   13be4:	dd800a15 	stw	r22,40(sp)
   13be8:	dd400915 	stw	r21,36(sp)
   13bec:	dd000815 	stw	r20,32(sp)
   13bf0:	dcc00715 	stw	r19,28(sp)
   13bf4:	dc800615 	stw	r18,24(sp)
   13bf8:	dc400515 	stw	r17,20(sp)
   13bfc:	dc000415 	stw	r16,16(sp)
   13c00:	15c07a16 	blt	r2,r23,13dec <quorem+0x220>
   13c04:	bdffffc4 	addi	r23,r23,-1
   13c08:	bde9883a 	add	r20,r23,r23
   13c0c:	28c00504 	addi	r3,r5,20
   13c10:	a529883a 	add	r20,r20,r20
   13c14:	1d39883a 	add	fp,r3,r20
   13c18:	24c00504 	addi	r19,r4,20
   13c1c:	d9400215 	stw	r5,8(sp)
   13c20:	9d29883a 	add	r20,r19,r20
   13c24:	e1400017 	ldw	r5,0(fp)
   13c28:	d9000015 	stw	r4,0(sp)
   13c2c:	a1000017 	ldw	r4,0(r20)
   13c30:	29400044 	addi	r5,r5,1
   13c34:	d8c00115 	stw	r3,4(sp)
   13c38:	dd000315 	stw	r20,12(sp)
   13c3c:	0010cec0 	call	10cec <__udivsi3>
   13c40:	1025883a 	mov	r18,r2
   13c44:	10003026 	beq	r2,zero,13d08 <quorem+0x13c>
   13c48:	dc400117 	ldw	r17,4(sp)
   13c4c:	9829883a 	mov	r20,r19
   13c50:	002d883a 	mov	r22,zero
   13c54:	0021883a 	mov	r16,zero
   13c58:	8d400017 	ldw	r21,0(r17)
   13c5c:	900b883a 	mov	r5,r18
   13c60:	8c400104 	addi	r17,r17,4
   13c64:	a93fffcc 	andi	r4,r21,65535
   13c68:	00196480 	call	19648 <__mulsi3>
   13c6c:	a808d43a 	srli	r4,r21,16
   13c70:	900b883a 	mov	r5,r18
   13c74:	15ad883a 	add	r22,r2,r22
   13c78:	00196480 	call	19648 <__mulsi3>
   13c7c:	a1000017 	ldw	r4,0(r20)
   13c80:	b00cd43a 	srli	r6,r22,16
   13c84:	b0ffffcc 	andi	r3,r22,65535
   13c88:	217fffcc 	andi	r5,r4,65535
   13c8c:	2c21883a 	add	r16,r5,r16
   13c90:	80c7c83a 	sub	r3,r16,r3
   13c94:	2008d43a 	srli	r4,r4,16
   13c98:	1185883a 	add	r2,r2,r6
   13c9c:	1821d43a 	srai	r16,r3,16
   13ca0:	117fffcc 	andi	r5,r2,65535
   13ca4:	2149c83a 	sub	r4,r4,r5
   13ca8:	2421883a 	add	r16,r4,r16
   13cac:	8008943a 	slli	r4,r16,16
   13cb0:	18ffffcc 	andi	r3,r3,65535
   13cb4:	102cd43a 	srli	r22,r2,16
   13cb8:	20c8b03a 	or	r4,r4,r3
   13cbc:	a1000015 	stw	r4,0(r20)
   13cc0:	8021d43a 	srai	r16,r16,16
   13cc4:	a5000104 	addi	r20,r20,4
   13cc8:	e47fe32e 	bgeu	fp,r17,13c58 <_gp+0xfffee9fc>
   13ccc:	d8c00317 	ldw	r3,12(sp)
   13cd0:	18800017 	ldw	r2,0(r3)
   13cd4:	10000c1e 	bne	r2,zero,13d08 <quorem+0x13c>
   13cd8:	18bfff04 	addi	r2,r3,-4
   13cdc:	9880082e 	bgeu	r19,r2,13d00 <quorem+0x134>
   13ce0:	18ffff17 	ldw	r3,-4(r3)
   13ce4:	18000326 	beq	r3,zero,13cf4 <quorem+0x128>
   13ce8:	00000506 	br	13d00 <quorem+0x134>
   13cec:	10c00017 	ldw	r3,0(r2)
   13cf0:	1800031e 	bne	r3,zero,13d00 <quorem+0x134>
   13cf4:	10bfff04 	addi	r2,r2,-4
   13cf8:	bdffffc4 	addi	r23,r23,-1
   13cfc:	98bffb36 	bltu	r19,r2,13cec <_gp+0xfffeea90>
   13d00:	d8c00017 	ldw	r3,0(sp)
   13d04:	1dc00415 	stw	r23,16(r3)
   13d08:	d9400217 	ldw	r5,8(sp)
   13d0c:	d9000017 	ldw	r4,0(sp)
   13d10:	001653c0 	call	1653c <__mcmp>
   13d14:	10002816 	blt	r2,zero,13db8 <quorem+0x1ec>
   13d18:	dc400117 	ldw	r17,4(sp)
   13d1c:	94800044 	addi	r18,r18,1
   13d20:	980d883a 	mov	r6,r19
   13d24:	0007883a 	mov	r3,zero
   13d28:	31000017 	ldw	r4,0(r6)
   13d2c:	89400017 	ldw	r5,0(r17)
   13d30:	31800104 	addi	r6,r6,4
   13d34:	20bfffcc 	andi	r2,r4,65535
   13d38:	10c7883a 	add	r3,r2,r3
   13d3c:	28bfffcc 	andi	r2,r5,65535
   13d40:	1885c83a 	sub	r2,r3,r2
   13d44:	280ad43a 	srli	r5,r5,16
   13d48:	2008d43a 	srli	r4,r4,16
   13d4c:	1007d43a 	srai	r3,r2,16
   13d50:	10bfffcc 	andi	r2,r2,65535
   13d54:	2149c83a 	sub	r4,r4,r5
   13d58:	20c9883a 	add	r4,r4,r3
   13d5c:	200a943a 	slli	r5,r4,16
   13d60:	8c400104 	addi	r17,r17,4
   13d64:	2007d43a 	srai	r3,r4,16
   13d68:	2884b03a 	or	r2,r5,r2
   13d6c:	30bfff15 	stw	r2,-4(r6)
   13d70:	e47fed2e 	bgeu	fp,r17,13d28 <_gp+0xfffeeacc>
   13d74:	bdc5883a 	add	r2,r23,r23
   13d78:	1085883a 	add	r2,r2,r2
   13d7c:	9887883a 	add	r3,r19,r2
   13d80:	18800017 	ldw	r2,0(r3)
   13d84:	10000c1e 	bne	r2,zero,13db8 <quorem+0x1ec>
   13d88:	18bfff04 	addi	r2,r3,-4
   13d8c:	9880082e 	bgeu	r19,r2,13db0 <quorem+0x1e4>
   13d90:	18ffff17 	ldw	r3,-4(r3)
   13d94:	18000326 	beq	r3,zero,13da4 <quorem+0x1d8>
   13d98:	00000506 	br	13db0 <quorem+0x1e4>
   13d9c:	10c00017 	ldw	r3,0(r2)
   13da0:	1800031e 	bne	r3,zero,13db0 <quorem+0x1e4>
   13da4:	10bfff04 	addi	r2,r2,-4
   13da8:	bdffffc4 	addi	r23,r23,-1
   13dac:	98bffb36 	bltu	r19,r2,13d9c <_gp+0xfffeeb40>
   13db0:	d8c00017 	ldw	r3,0(sp)
   13db4:	1dc00415 	stw	r23,16(r3)
   13db8:	9005883a 	mov	r2,r18
   13dbc:	dfc00d17 	ldw	ra,52(sp)
   13dc0:	df000c17 	ldw	fp,48(sp)
   13dc4:	ddc00b17 	ldw	r23,44(sp)
   13dc8:	dd800a17 	ldw	r22,40(sp)
   13dcc:	dd400917 	ldw	r21,36(sp)
   13dd0:	dd000817 	ldw	r20,32(sp)
   13dd4:	dcc00717 	ldw	r19,28(sp)
   13dd8:	dc800617 	ldw	r18,24(sp)
   13ddc:	dc400517 	ldw	r17,20(sp)
   13de0:	dc000417 	ldw	r16,16(sp)
   13de4:	dec00e04 	addi	sp,sp,56
   13de8:	f800283a 	ret
   13dec:	0005883a 	mov	r2,zero
   13df0:	003ff206 	br	13dbc <_gp+0xfffeeb60>

00013df4 <_dtoa_r>:
   13df4:	20801017 	ldw	r2,64(r4)
   13df8:	deffde04 	addi	sp,sp,-136
   13dfc:	df002015 	stw	fp,128(sp)
   13e00:	dcc01b15 	stw	r19,108(sp)
   13e04:	dc801a15 	stw	r18,104(sp)
   13e08:	dc401915 	stw	r17,100(sp)
   13e0c:	dc001815 	stw	r16,96(sp)
   13e10:	dfc02115 	stw	ra,132(sp)
   13e14:	ddc01f15 	stw	r23,124(sp)
   13e18:	dd801e15 	stw	r22,120(sp)
   13e1c:	dd401d15 	stw	r21,116(sp)
   13e20:	dd001c15 	stw	r20,112(sp)
   13e24:	d9c00315 	stw	r7,12(sp)
   13e28:	2039883a 	mov	fp,r4
   13e2c:	3023883a 	mov	r17,r6
   13e30:	2825883a 	mov	r18,r5
   13e34:	dc002417 	ldw	r16,144(sp)
   13e38:	3027883a 	mov	r19,r6
   13e3c:	10000826 	beq	r2,zero,13e60 <_dtoa_r+0x6c>
   13e40:	21801117 	ldw	r6,68(r4)
   13e44:	00c00044 	movi	r3,1
   13e48:	100b883a 	mov	r5,r2
   13e4c:	1986983a 	sll	r3,r3,r6
   13e50:	11800115 	stw	r6,4(r2)
   13e54:	10c00215 	stw	r3,8(r2)
   13e58:	0015c600 	call	15c60 <_Bfree>
   13e5c:	e0001015 	stw	zero,64(fp)
   13e60:	88002e16 	blt	r17,zero,13f1c <_dtoa_r+0x128>
   13e64:	80000015 	stw	zero,0(r16)
   13e68:	889ffc2c 	andhi	r2,r17,32752
   13e6c:	00dffc34 	movhi	r3,32752
   13e70:	10c01c26 	beq	r2,r3,13ee4 <_dtoa_r+0xf0>
   13e74:	000d883a 	mov	r6,zero
   13e78:	000f883a 	mov	r7,zero
   13e7c:	9009883a 	mov	r4,r18
   13e80:	980b883a 	mov	r5,r19
   13e84:	001a8ec0 	call	1a8ec <__eqdf2>
   13e88:	10002b1e 	bne	r2,zero,13f38 <_dtoa_r+0x144>
   13e8c:	d9c02317 	ldw	r7,140(sp)
   13e90:	00800044 	movi	r2,1
   13e94:	38800015 	stw	r2,0(r7)
   13e98:	d8802517 	ldw	r2,148(sp)
   13e9c:	10019e26 	beq	r2,zero,14518 <_dtoa_r+0x724>
   13ea0:	d8c02517 	ldw	r3,148(sp)
   13ea4:	008000b4 	movhi	r2,2
   13ea8:	10b1a344 	addi	r2,r2,-14707
   13eac:	18800015 	stw	r2,0(r3)
   13eb0:	10bfffc4 	addi	r2,r2,-1
   13eb4:	dfc02117 	ldw	ra,132(sp)
   13eb8:	df002017 	ldw	fp,128(sp)
   13ebc:	ddc01f17 	ldw	r23,124(sp)
   13ec0:	dd801e17 	ldw	r22,120(sp)
   13ec4:	dd401d17 	ldw	r21,116(sp)
   13ec8:	dd001c17 	ldw	r20,112(sp)
   13ecc:	dcc01b17 	ldw	r19,108(sp)
   13ed0:	dc801a17 	ldw	r18,104(sp)
   13ed4:	dc401917 	ldw	r17,100(sp)
   13ed8:	dc001817 	ldw	r16,96(sp)
   13edc:	dec02204 	addi	sp,sp,136
   13ee0:	f800283a 	ret
   13ee4:	d8c02317 	ldw	r3,140(sp)
   13ee8:	0089c3c4 	movi	r2,9999
   13eec:	18800015 	stw	r2,0(r3)
   13ef0:	90017726 	beq	r18,zero,144d0 <_dtoa_r+0x6dc>
   13ef4:	008000b4 	movhi	r2,2
   13ef8:	10b1af04 	addi	r2,r2,-14660
   13efc:	d9002517 	ldw	r4,148(sp)
   13f00:	203fec26 	beq	r4,zero,13eb4 <_gp+0xfffeec58>
   13f04:	10c000c7 	ldb	r3,3(r2)
   13f08:	1801781e 	bne	r3,zero,144ec <_dtoa_r+0x6f8>
   13f0c:	10c000c4 	addi	r3,r2,3
   13f10:	d9802517 	ldw	r6,148(sp)
   13f14:	30c00015 	stw	r3,0(r6)
   13f18:	003fe606 	br	13eb4 <_gp+0xfffeec58>
   13f1c:	04e00034 	movhi	r19,32768
   13f20:	9cffffc4 	addi	r19,r19,-1
   13f24:	00800044 	movi	r2,1
   13f28:	8ce6703a 	and	r19,r17,r19
   13f2c:	80800015 	stw	r2,0(r16)
   13f30:	9823883a 	mov	r17,r19
   13f34:	003fcc06 	br	13e68 <_gp+0xfffeec0c>
   13f38:	d8800204 	addi	r2,sp,8
   13f3c:	d8800015 	stw	r2,0(sp)
   13f40:	d9c00104 	addi	r7,sp,4
   13f44:	900b883a 	mov	r5,r18
   13f48:	980d883a 	mov	r6,r19
   13f4c:	e009883a 	mov	r4,fp
   13f50:	8820d53a 	srli	r16,r17,20
   13f54:	00169080 	call	16908 <__d2b>
   13f58:	d8800915 	stw	r2,36(sp)
   13f5c:	8001651e 	bne	r16,zero,144f4 <_dtoa_r+0x700>
   13f60:	dd800217 	ldw	r22,8(sp)
   13f64:	dc000117 	ldw	r16,4(sp)
   13f68:	00800804 	movi	r2,32
   13f6c:	b421883a 	add	r16,r22,r16
   13f70:	80c10c84 	addi	r3,r16,1074
   13f74:	10c2d10e 	bge	r2,r3,14abc <_dtoa_r+0xcc8>
   13f78:	00801004 	movi	r2,64
   13f7c:	81010484 	addi	r4,r16,1042
   13f80:	10c7c83a 	sub	r3,r2,r3
   13f84:	9108d83a 	srl	r4,r18,r4
   13f88:	88e2983a 	sll	r17,r17,r3
   13f8c:	2448b03a 	or	r4,r4,r17
   13f90:	001be080 	call	1be08 <__floatunsidf>
   13f94:	017f8434 	movhi	r5,65040
   13f98:	01800044 	movi	r6,1
   13f9c:	1009883a 	mov	r4,r2
   13fa0:	194b883a 	add	r5,r3,r5
   13fa4:	843fffc4 	addi	r16,r16,-1
   13fa8:	d9801115 	stw	r6,68(sp)
   13fac:	000d883a 	mov	r6,zero
   13fb0:	01cffe34 	movhi	r7,16376
   13fb4:	001b3b00 	call	1b3b0 <__subdf3>
   13fb8:	0198dbf4 	movhi	r6,25455
   13fbc:	01cff4f4 	movhi	r7,16339
   13fc0:	3190d844 	addi	r6,r6,17249
   13fc4:	39e1e9c4 	addi	r7,r7,-30809
   13fc8:	1009883a 	mov	r4,r2
   13fcc:	180b883a 	mov	r5,r3
   13fd0:	001ab440 	call	1ab44 <__muldf3>
   13fd4:	01a2d874 	movhi	r6,35681
   13fd8:	01cff1f4 	movhi	r7,16327
   13fdc:	31b22cc4 	addi	r6,r6,-14157
   13fe0:	39e28a04 	addi	r7,r7,-30168
   13fe4:	180b883a 	mov	r5,r3
   13fe8:	1009883a 	mov	r4,r2
   13fec:	00196700 	call	19670 <__adddf3>
   13ff0:	8009883a 	mov	r4,r16
   13ff4:	1029883a 	mov	r20,r2
   13ff8:	1823883a 	mov	r17,r3
   13ffc:	001bd2c0 	call	1bd2c <__floatsidf>
   14000:	019427f4 	movhi	r6,20639
   14004:	01cff4f4 	movhi	r7,16339
   14008:	319e7ec4 	addi	r6,r6,31227
   1400c:	39d104c4 	addi	r7,r7,17427
   14010:	1009883a 	mov	r4,r2
   14014:	180b883a 	mov	r5,r3
   14018:	001ab440 	call	1ab44 <__muldf3>
   1401c:	100d883a 	mov	r6,r2
   14020:	180f883a 	mov	r7,r3
   14024:	a009883a 	mov	r4,r20
   14028:	880b883a 	mov	r5,r17
   1402c:	00196700 	call	19670 <__adddf3>
   14030:	1009883a 	mov	r4,r2
   14034:	180b883a 	mov	r5,r3
   14038:	1029883a 	mov	r20,r2
   1403c:	1823883a 	mov	r17,r3
   14040:	001bcac0 	call	1bcac <__fixdfsi>
   14044:	000d883a 	mov	r6,zero
   14048:	000f883a 	mov	r7,zero
   1404c:	a009883a 	mov	r4,r20
   14050:	880b883a 	mov	r5,r17
   14054:	d8800515 	stw	r2,20(sp)
   14058:	001aa500 	call	1aa50 <__ledf2>
   1405c:	10028716 	blt	r2,zero,14a7c <_dtoa_r+0xc88>
   14060:	d8c00517 	ldw	r3,20(sp)
   14064:	00800584 	movi	r2,22
   14068:	10c27536 	bltu	r2,r3,14a40 <_dtoa_r+0xc4c>
   1406c:	180490fa 	slli	r2,r3,3
   14070:	00c000b4 	movhi	r3,2
   14074:	18f1ca04 	addi	r3,r3,-14552
   14078:	1885883a 	add	r2,r3,r2
   1407c:	11000017 	ldw	r4,0(r2)
   14080:	11400117 	ldw	r5,4(r2)
   14084:	900d883a 	mov	r6,r18
   14088:	980f883a 	mov	r7,r19
   1408c:	001a9740 	call	1a974 <__gedf2>
   14090:	00828d0e 	bge	zero,r2,14ac8 <_dtoa_r+0xcd4>
   14094:	d9000517 	ldw	r4,20(sp)
   14098:	d8000e15 	stw	zero,56(sp)
   1409c:	213fffc4 	addi	r4,r4,-1
   140a0:	d9000515 	stw	r4,20(sp)
   140a4:	b42dc83a 	sub	r22,r22,r16
   140a8:	b5bfffc4 	addi	r22,r22,-1
   140ac:	b0026f16 	blt	r22,zero,14a6c <_dtoa_r+0xc78>
   140b0:	d8000815 	stw	zero,32(sp)
   140b4:	d9c00517 	ldw	r7,20(sp)
   140b8:	38026416 	blt	r7,zero,14a4c <_dtoa_r+0xc58>
   140bc:	b1ed883a 	add	r22,r22,r7
   140c0:	d9c00d15 	stw	r7,52(sp)
   140c4:	d8000a15 	stw	zero,40(sp)
   140c8:	d9800317 	ldw	r6,12(sp)
   140cc:	00800244 	movi	r2,9
   140d0:	11811436 	bltu	r2,r6,14524 <_dtoa_r+0x730>
   140d4:	00800144 	movi	r2,5
   140d8:	1184e10e 	bge	r2,r6,15460 <_dtoa_r+0x166c>
   140dc:	31bfff04 	addi	r6,r6,-4
   140e0:	d9800315 	stw	r6,12(sp)
   140e4:	0023883a 	mov	r17,zero
   140e8:	d9800317 	ldw	r6,12(sp)
   140ec:	008000c4 	movi	r2,3
   140f0:	30836726 	beq	r6,r2,14e90 <_dtoa_r+0x109c>
   140f4:	1183410e 	bge	r2,r6,14dfc <_dtoa_r+0x1008>
   140f8:	d9c00317 	ldw	r7,12(sp)
   140fc:	00800104 	movi	r2,4
   14100:	38827c26 	beq	r7,r2,14af4 <_dtoa_r+0xd00>
   14104:	00800144 	movi	r2,5
   14108:	3884c41e 	bne	r7,r2,1541c <_dtoa_r+0x1628>
   1410c:	00800044 	movi	r2,1
   14110:	d8800b15 	stw	r2,44(sp)
   14114:	d8c00517 	ldw	r3,20(sp)
   14118:	d9002217 	ldw	r4,136(sp)
   1411c:	1907883a 	add	r3,r3,r4
   14120:	19800044 	addi	r6,r3,1
   14124:	d8c00c15 	stw	r3,48(sp)
   14128:	d9800615 	stw	r6,24(sp)
   1412c:	0183a40e 	bge	zero,r6,14fc0 <_dtoa_r+0x11cc>
   14130:	d9800617 	ldw	r6,24(sp)
   14134:	3021883a 	mov	r16,r6
   14138:	e0001115 	stw	zero,68(fp)
   1413c:	008005c4 	movi	r2,23
   14140:	1184c92e 	bgeu	r2,r6,15468 <_dtoa_r+0x1674>
   14144:	00c00044 	movi	r3,1
   14148:	00800104 	movi	r2,4
   1414c:	1085883a 	add	r2,r2,r2
   14150:	11000504 	addi	r4,r2,20
   14154:	180b883a 	mov	r5,r3
   14158:	18c00044 	addi	r3,r3,1
   1415c:	313ffb2e 	bgeu	r6,r4,1414c <_gp+0xfffeeef0>
   14160:	e1401115 	stw	r5,68(fp)
   14164:	e009883a 	mov	r4,fp
   14168:	0015bb80 	call	15bb8 <_Balloc>
   1416c:	d8800715 	stw	r2,28(sp)
   14170:	e0801015 	stw	r2,64(fp)
   14174:	00800384 	movi	r2,14
   14178:	1400f736 	bltu	r2,r16,14558 <_dtoa_r+0x764>
   1417c:	8800f626 	beq	r17,zero,14558 <_dtoa_r+0x764>
   14180:	d9c00517 	ldw	r7,20(sp)
   14184:	01c39a0e 	bge	zero,r7,14ff0 <_dtoa_r+0x11fc>
   14188:	388003cc 	andi	r2,r7,15
   1418c:	100490fa 	slli	r2,r2,3
   14190:	382bd13a 	srai	r21,r7,4
   14194:	00c000b4 	movhi	r3,2
   14198:	18f1ca04 	addi	r3,r3,-14552
   1419c:	1885883a 	add	r2,r3,r2
   141a0:	a8c0040c 	andi	r3,r21,16
   141a4:	12400017 	ldw	r9,0(r2)
   141a8:	12000117 	ldw	r8,4(r2)
   141ac:	18037926 	beq	r3,zero,14f94 <_dtoa_r+0x11a0>
   141b0:	008000b4 	movhi	r2,2
   141b4:	10b1c004 	addi	r2,r2,-14592
   141b8:	11800817 	ldw	r6,32(r2)
   141bc:	11c00917 	ldw	r7,36(r2)
   141c0:	9009883a 	mov	r4,r18
   141c4:	980b883a 	mov	r5,r19
   141c8:	da001715 	stw	r8,92(sp)
   141cc:	da401615 	stw	r9,88(sp)
   141d0:	0019f1c0 	call	19f1c <__divdf3>
   141d4:	da001717 	ldw	r8,92(sp)
   141d8:	da401617 	ldw	r9,88(sp)
   141dc:	ad4003cc 	andi	r21,r21,15
   141e0:	040000c4 	movi	r16,3
   141e4:	1023883a 	mov	r17,r2
   141e8:	1829883a 	mov	r20,r3
   141ec:	a8001126 	beq	r21,zero,14234 <_dtoa_r+0x440>
   141f0:	05c000b4 	movhi	r23,2
   141f4:	bdf1c004 	addi	r23,r23,-14592
   141f8:	4805883a 	mov	r2,r9
   141fc:	4007883a 	mov	r3,r8
   14200:	a980004c 	andi	r6,r21,1
   14204:	1009883a 	mov	r4,r2
   14208:	a82bd07a 	srai	r21,r21,1
   1420c:	180b883a 	mov	r5,r3
   14210:	30000426 	beq	r6,zero,14224 <_dtoa_r+0x430>
   14214:	b9800017 	ldw	r6,0(r23)
   14218:	b9c00117 	ldw	r7,4(r23)
   1421c:	84000044 	addi	r16,r16,1
   14220:	001ab440 	call	1ab44 <__muldf3>
   14224:	bdc00204 	addi	r23,r23,8
   14228:	a83ff51e 	bne	r21,zero,14200 <_gp+0xfffeefa4>
   1422c:	1013883a 	mov	r9,r2
   14230:	1811883a 	mov	r8,r3
   14234:	480d883a 	mov	r6,r9
   14238:	400f883a 	mov	r7,r8
   1423c:	8809883a 	mov	r4,r17
   14240:	a00b883a 	mov	r5,r20
   14244:	0019f1c0 	call	19f1c <__divdf3>
   14248:	d8800f15 	stw	r2,60(sp)
   1424c:	d8c01015 	stw	r3,64(sp)
   14250:	d8c00e17 	ldw	r3,56(sp)
   14254:	18000626 	beq	r3,zero,14270 <_dtoa_r+0x47c>
   14258:	d9000f17 	ldw	r4,60(sp)
   1425c:	d9401017 	ldw	r5,64(sp)
   14260:	000d883a 	mov	r6,zero
   14264:	01cffc34 	movhi	r7,16368
   14268:	001aa500 	call	1aa50 <__ledf2>
   1426c:	10040b16 	blt	r2,zero,1529c <_dtoa_r+0x14a8>
   14270:	8009883a 	mov	r4,r16
   14274:	001bd2c0 	call	1bd2c <__floatsidf>
   14278:	d9800f17 	ldw	r6,60(sp)
   1427c:	d9c01017 	ldw	r7,64(sp)
   14280:	1009883a 	mov	r4,r2
   14284:	180b883a 	mov	r5,r3
   14288:	001ab440 	call	1ab44 <__muldf3>
   1428c:	000d883a 	mov	r6,zero
   14290:	01d00734 	movhi	r7,16412
   14294:	1009883a 	mov	r4,r2
   14298:	180b883a 	mov	r5,r3
   1429c:	00196700 	call	19670 <__adddf3>
   142a0:	1021883a 	mov	r16,r2
   142a4:	d8800617 	ldw	r2,24(sp)
   142a8:	047f3034 	movhi	r17,64704
   142ac:	1c63883a 	add	r17,r3,r17
   142b0:	10031826 	beq	r2,zero,14f14 <_dtoa_r+0x1120>
   142b4:	d8c00517 	ldw	r3,20(sp)
   142b8:	db000617 	ldw	r12,24(sp)
   142bc:	d8c01315 	stw	r3,76(sp)
   142c0:	d9000b17 	ldw	r4,44(sp)
   142c4:	20038f26 	beq	r4,zero,15104 <_dtoa_r+0x1310>
   142c8:	60bfffc4 	addi	r2,r12,-1
   142cc:	100490fa 	slli	r2,r2,3
   142d0:	00c000b4 	movhi	r3,2
   142d4:	18f1ca04 	addi	r3,r3,-14552
   142d8:	1885883a 	add	r2,r3,r2
   142dc:	11800017 	ldw	r6,0(r2)
   142e0:	11c00117 	ldw	r7,4(r2)
   142e4:	d8800717 	ldw	r2,28(sp)
   142e8:	0009883a 	mov	r4,zero
   142ec:	014ff834 	movhi	r5,16352
   142f0:	db001615 	stw	r12,88(sp)
   142f4:	15c00044 	addi	r23,r2,1
   142f8:	0019f1c0 	call	19f1c <__divdf3>
   142fc:	800d883a 	mov	r6,r16
   14300:	880f883a 	mov	r7,r17
   14304:	1009883a 	mov	r4,r2
   14308:	180b883a 	mov	r5,r3
   1430c:	001b3b00 	call	1b3b0 <__subdf3>
   14310:	d9401017 	ldw	r5,64(sp)
   14314:	d9000f17 	ldw	r4,60(sp)
   14318:	102b883a 	mov	r21,r2
   1431c:	d8c01215 	stw	r3,72(sp)
   14320:	001bcac0 	call	1bcac <__fixdfsi>
   14324:	1009883a 	mov	r4,r2
   14328:	1029883a 	mov	r20,r2
   1432c:	001bd2c0 	call	1bd2c <__floatsidf>
   14330:	d9000f17 	ldw	r4,60(sp)
   14334:	d9401017 	ldw	r5,64(sp)
   14338:	100d883a 	mov	r6,r2
   1433c:	180f883a 	mov	r7,r3
   14340:	001b3b00 	call	1b3b0 <__subdf3>
   14344:	1823883a 	mov	r17,r3
   14348:	d8c00717 	ldw	r3,28(sp)
   1434c:	d9401217 	ldw	r5,72(sp)
   14350:	a2000c04 	addi	r8,r20,48
   14354:	1021883a 	mov	r16,r2
   14358:	1a000005 	stb	r8,0(r3)
   1435c:	800d883a 	mov	r6,r16
   14360:	880f883a 	mov	r7,r17
   14364:	a809883a 	mov	r4,r21
   14368:	4029883a 	mov	r20,r8
   1436c:	001a9740 	call	1a974 <__gedf2>
   14370:	00841d16 	blt	zero,r2,153e8 <_dtoa_r+0x15f4>
   14374:	800d883a 	mov	r6,r16
   14378:	880f883a 	mov	r7,r17
   1437c:	0009883a 	mov	r4,zero
   14380:	014ffc34 	movhi	r5,16368
   14384:	001b3b00 	call	1b3b0 <__subdf3>
   14388:	d9401217 	ldw	r5,72(sp)
   1438c:	100d883a 	mov	r6,r2
   14390:	180f883a 	mov	r7,r3
   14394:	a809883a 	mov	r4,r21
   14398:	001a9740 	call	1a974 <__gedf2>
   1439c:	db001617 	ldw	r12,88(sp)
   143a0:	00840e16 	blt	zero,r2,153dc <_dtoa_r+0x15e8>
   143a4:	00800044 	movi	r2,1
   143a8:	13006b0e 	bge	r2,r12,14558 <_dtoa_r+0x764>
   143ac:	d9000717 	ldw	r4,28(sp)
   143b0:	dd800f15 	stw	r22,60(sp)
   143b4:	dcc01015 	stw	r19,64(sp)
   143b8:	2319883a 	add	r12,r4,r12
   143bc:	dcc01217 	ldw	r19,72(sp)
   143c0:	602d883a 	mov	r22,r12
   143c4:	dc801215 	stw	r18,72(sp)
   143c8:	b825883a 	mov	r18,r23
   143cc:	00000906 	br	143f4 <_dtoa_r+0x600>
   143d0:	001b3b00 	call	1b3b0 <__subdf3>
   143d4:	a80d883a 	mov	r6,r21
   143d8:	980f883a 	mov	r7,r19
   143dc:	1009883a 	mov	r4,r2
   143e0:	180b883a 	mov	r5,r3
   143e4:	001aa500 	call	1aa50 <__ledf2>
   143e8:	1003e816 	blt	r2,zero,1538c <_dtoa_r+0x1598>
   143ec:	b825883a 	mov	r18,r23
   143f0:	bd83e926 	beq	r23,r22,15398 <_dtoa_r+0x15a4>
   143f4:	a809883a 	mov	r4,r21
   143f8:	980b883a 	mov	r5,r19
   143fc:	000d883a 	mov	r6,zero
   14400:	01d00934 	movhi	r7,16420
   14404:	001ab440 	call	1ab44 <__muldf3>
   14408:	000d883a 	mov	r6,zero
   1440c:	01d00934 	movhi	r7,16420
   14410:	8009883a 	mov	r4,r16
   14414:	880b883a 	mov	r5,r17
   14418:	102b883a 	mov	r21,r2
   1441c:	1827883a 	mov	r19,r3
   14420:	001ab440 	call	1ab44 <__muldf3>
   14424:	180b883a 	mov	r5,r3
   14428:	1009883a 	mov	r4,r2
   1442c:	1821883a 	mov	r16,r3
   14430:	1023883a 	mov	r17,r2
   14434:	001bcac0 	call	1bcac <__fixdfsi>
   14438:	1009883a 	mov	r4,r2
   1443c:	1029883a 	mov	r20,r2
   14440:	001bd2c0 	call	1bd2c <__floatsidf>
   14444:	8809883a 	mov	r4,r17
   14448:	800b883a 	mov	r5,r16
   1444c:	100d883a 	mov	r6,r2
   14450:	180f883a 	mov	r7,r3
   14454:	001b3b00 	call	1b3b0 <__subdf3>
   14458:	a5000c04 	addi	r20,r20,48
   1445c:	a80d883a 	mov	r6,r21
   14460:	980f883a 	mov	r7,r19
   14464:	1009883a 	mov	r4,r2
   14468:	180b883a 	mov	r5,r3
   1446c:	95000005 	stb	r20,0(r18)
   14470:	1021883a 	mov	r16,r2
   14474:	1823883a 	mov	r17,r3
   14478:	001aa500 	call	1aa50 <__ledf2>
   1447c:	bdc00044 	addi	r23,r23,1
   14480:	800d883a 	mov	r6,r16
   14484:	880f883a 	mov	r7,r17
   14488:	0009883a 	mov	r4,zero
   1448c:	014ffc34 	movhi	r5,16368
   14490:	103fcf0e 	bge	r2,zero,143d0 <_gp+0xfffef174>
   14494:	d8c01317 	ldw	r3,76(sp)
   14498:	d8c00515 	stw	r3,20(sp)
   1449c:	d9400917 	ldw	r5,36(sp)
   144a0:	e009883a 	mov	r4,fp
   144a4:	0015c600 	call	15c60 <_Bfree>
   144a8:	d9000517 	ldw	r4,20(sp)
   144ac:	d9802317 	ldw	r6,140(sp)
   144b0:	d9c02517 	ldw	r7,148(sp)
   144b4:	b8000005 	stb	zero,0(r23)
   144b8:	20800044 	addi	r2,r4,1
   144bc:	30800015 	stw	r2,0(r6)
   144c0:	3802aa26 	beq	r7,zero,14f6c <_dtoa_r+0x1178>
   144c4:	3dc00015 	stw	r23,0(r7)
   144c8:	d8800717 	ldw	r2,28(sp)
   144cc:	003e7906 	br	13eb4 <_gp+0xfffeec58>
   144d0:	00800434 	movhi	r2,16
   144d4:	10bfffc4 	addi	r2,r2,-1
   144d8:	88a2703a 	and	r17,r17,r2
   144dc:	883e851e 	bne	r17,zero,13ef4 <_gp+0xfffeec98>
   144e0:	008000b4 	movhi	r2,2
   144e4:	10b1ac04 	addi	r2,r2,-14672
   144e8:	003e8406 	br	13efc <_gp+0xfffeeca0>
   144ec:	10c00204 	addi	r3,r2,8
   144f0:	003e8706 	br	13f10 <_gp+0xfffeecb4>
   144f4:	01400434 	movhi	r5,16
   144f8:	297fffc4 	addi	r5,r5,-1
   144fc:	994a703a 	and	r5,r19,r5
   14500:	9009883a 	mov	r4,r18
   14504:	843f0044 	addi	r16,r16,-1023
   14508:	294ffc34 	orhi	r5,r5,16368
   1450c:	dd800217 	ldw	r22,8(sp)
   14510:	d8001115 	stw	zero,68(sp)
   14514:	003ea506 	br	13fac <_gp+0xfffeed50>
   14518:	008000b4 	movhi	r2,2
   1451c:	10b1a304 	addi	r2,r2,-14708
   14520:	003e6406 	br	13eb4 <_gp+0xfffeec58>
   14524:	e0001115 	stw	zero,68(fp)
   14528:	000b883a 	mov	r5,zero
   1452c:	e009883a 	mov	r4,fp
   14530:	0015bb80 	call	15bb8 <_Balloc>
   14534:	01bfffc4 	movi	r6,-1
   14538:	01c00044 	movi	r7,1
   1453c:	d8800715 	stw	r2,28(sp)
   14540:	d9800c15 	stw	r6,48(sp)
   14544:	e0801015 	stw	r2,64(fp)
   14548:	d8000315 	stw	zero,12(sp)
   1454c:	d9c00b15 	stw	r7,44(sp)
   14550:	d9800615 	stw	r6,24(sp)
   14554:	d8002215 	stw	zero,136(sp)
   14558:	d8800117 	ldw	r2,4(sp)
   1455c:	10008916 	blt	r2,zero,14784 <_dtoa_r+0x990>
   14560:	d9000517 	ldw	r4,20(sp)
   14564:	00c00384 	movi	r3,14
   14568:	19008616 	blt	r3,r4,14784 <_dtoa_r+0x990>
   1456c:	200490fa 	slli	r2,r4,3
   14570:	00c000b4 	movhi	r3,2
   14574:	d9802217 	ldw	r6,136(sp)
   14578:	18f1ca04 	addi	r3,r3,-14552
   1457c:	1885883a 	add	r2,r3,r2
   14580:	14000017 	ldw	r16,0(r2)
   14584:	14400117 	ldw	r17,4(r2)
   14588:	30016316 	blt	r6,zero,14b18 <_dtoa_r+0xd24>
   1458c:	800d883a 	mov	r6,r16
   14590:	880f883a 	mov	r7,r17
   14594:	9009883a 	mov	r4,r18
   14598:	980b883a 	mov	r5,r19
   1459c:	0019f1c0 	call	19f1c <__divdf3>
   145a0:	180b883a 	mov	r5,r3
   145a4:	1009883a 	mov	r4,r2
   145a8:	001bcac0 	call	1bcac <__fixdfsi>
   145ac:	1009883a 	mov	r4,r2
   145b0:	102b883a 	mov	r21,r2
   145b4:	001bd2c0 	call	1bd2c <__floatsidf>
   145b8:	800d883a 	mov	r6,r16
   145bc:	880f883a 	mov	r7,r17
   145c0:	1009883a 	mov	r4,r2
   145c4:	180b883a 	mov	r5,r3
   145c8:	001ab440 	call	1ab44 <__muldf3>
   145cc:	100d883a 	mov	r6,r2
   145d0:	180f883a 	mov	r7,r3
   145d4:	9009883a 	mov	r4,r18
   145d8:	980b883a 	mov	r5,r19
   145dc:	001b3b00 	call	1b3b0 <__subdf3>
   145e0:	d9c00717 	ldw	r7,28(sp)
   145e4:	1009883a 	mov	r4,r2
   145e8:	a8800c04 	addi	r2,r21,48
   145ec:	38800005 	stb	r2,0(r7)
   145f0:	3dc00044 	addi	r23,r7,1
   145f4:	d9c00617 	ldw	r7,24(sp)
   145f8:	01800044 	movi	r6,1
   145fc:	180b883a 	mov	r5,r3
   14600:	2005883a 	mov	r2,r4
   14604:	39803826 	beq	r7,r6,146e8 <_dtoa_r+0x8f4>
   14608:	000d883a 	mov	r6,zero
   1460c:	01d00934 	movhi	r7,16420
   14610:	001ab440 	call	1ab44 <__muldf3>
   14614:	000d883a 	mov	r6,zero
   14618:	000f883a 	mov	r7,zero
   1461c:	1009883a 	mov	r4,r2
   14620:	180b883a 	mov	r5,r3
   14624:	1025883a 	mov	r18,r2
   14628:	1827883a 	mov	r19,r3
   1462c:	001a8ec0 	call	1a8ec <__eqdf2>
   14630:	103f9a26 	beq	r2,zero,1449c <_gp+0xfffef240>
   14634:	d9c00617 	ldw	r7,24(sp)
   14638:	d8c00717 	ldw	r3,28(sp)
   1463c:	b829883a 	mov	r20,r23
   14640:	38bfffc4 	addi	r2,r7,-1
   14644:	18ad883a 	add	r22,r3,r2
   14648:	00000a06 	br	14674 <_dtoa_r+0x880>
   1464c:	001ab440 	call	1ab44 <__muldf3>
   14650:	000d883a 	mov	r6,zero
   14654:	000f883a 	mov	r7,zero
   14658:	1009883a 	mov	r4,r2
   1465c:	180b883a 	mov	r5,r3
   14660:	1025883a 	mov	r18,r2
   14664:	1827883a 	mov	r19,r3
   14668:	b829883a 	mov	r20,r23
   1466c:	001a8ec0 	call	1a8ec <__eqdf2>
   14670:	103f8a26 	beq	r2,zero,1449c <_gp+0xfffef240>
   14674:	800d883a 	mov	r6,r16
   14678:	880f883a 	mov	r7,r17
   1467c:	9009883a 	mov	r4,r18
   14680:	980b883a 	mov	r5,r19
   14684:	0019f1c0 	call	19f1c <__divdf3>
   14688:	180b883a 	mov	r5,r3
   1468c:	1009883a 	mov	r4,r2
   14690:	001bcac0 	call	1bcac <__fixdfsi>
   14694:	1009883a 	mov	r4,r2
   14698:	102b883a 	mov	r21,r2
   1469c:	001bd2c0 	call	1bd2c <__floatsidf>
   146a0:	800d883a 	mov	r6,r16
   146a4:	880f883a 	mov	r7,r17
   146a8:	1009883a 	mov	r4,r2
   146ac:	180b883a 	mov	r5,r3
   146b0:	001ab440 	call	1ab44 <__muldf3>
   146b4:	100d883a 	mov	r6,r2
   146b8:	180f883a 	mov	r7,r3
   146bc:	9009883a 	mov	r4,r18
   146c0:	980b883a 	mov	r5,r19
   146c4:	001b3b00 	call	1b3b0 <__subdf3>
   146c8:	aa000c04 	addi	r8,r21,48
   146cc:	a2000005 	stb	r8,0(r20)
   146d0:	000d883a 	mov	r6,zero
   146d4:	01d00934 	movhi	r7,16420
   146d8:	1009883a 	mov	r4,r2
   146dc:	180b883a 	mov	r5,r3
   146e0:	a5c00044 	addi	r23,r20,1
   146e4:	b53fd91e 	bne	r22,r20,1464c <_gp+0xfffef3f0>
   146e8:	100d883a 	mov	r6,r2
   146ec:	180f883a 	mov	r7,r3
   146f0:	1009883a 	mov	r4,r2
   146f4:	180b883a 	mov	r5,r3
   146f8:	00196700 	call	19670 <__adddf3>
   146fc:	100d883a 	mov	r6,r2
   14700:	180f883a 	mov	r7,r3
   14704:	8009883a 	mov	r4,r16
   14708:	880b883a 	mov	r5,r17
   1470c:	1027883a 	mov	r19,r2
   14710:	1825883a 	mov	r18,r3
   14714:	001aa500 	call	1aa50 <__ledf2>
   14718:	10000816 	blt	r2,zero,1473c <_dtoa_r+0x948>
   1471c:	980d883a 	mov	r6,r19
   14720:	900f883a 	mov	r7,r18
   14724:	8009883a 	mov	r4,r16
   14728:	880b883a 	mov	r5,r17
   1472c:	001a8ec0 	call	1a8ec <__eqdf2>
   14730:	103f5a1e 	bne	r2,zero,1449c <_gp+0xfffef240>
   14734:	ad40004c 	andi	r21,r21,1
   14738:	a83f5826 	beq	r21,zero,1449c <_gp+0xfffef240>
   1473c:	bd3fffc3 	ldbu	r20,-1(r23)
   14740:	b8bfffc4 	addi	r2,r23,-1
   14744:	1007883a 	mov	r3,r2
   14748:	01400e44 	movi	r5,57
   1474c:	d9800717 	ldw	r6,28(sp)
   14750:	00000506 	br	14768 <_dtoa_r+0x974>
   14754:	18ffffc4 	addi	r3,r3,-1
   14758:	11824726 	beq	r2,r6,15078 <_dtoa_r+0x1284>
   1475c:	1d000003 	ldbu	r20,0(r3)
   14760:	102f883a 	mov	r23,r2
   14764:	10bfffc4 	addi	r2,r2,-1
   14768:	a1003fcc 	andi	r4,r20,255
   1476c:	2100201c 	xori	r4,r4,128
   14770:	213fe004 	addi	r4,r4,-128
   14774:	217ff726 	beq	r4,r5,14754 <_gp+0xfffef4f8>
   14778:	a2000044 	addi	r8,r20,1
   1477c:	12000005 	stb	r8,0(r2)
   14780:	003f4606 	br	1449c <_gp+0xfffef240>
   14784:	d9000b17 	ldw	r4,44(sp)
   14788:	2000c826 	beq	r4,zero,14aac <_dtoa_r+0xcb8>
   1478c:	d9800317 	ldw	r6,12(sp)
   14790:	00c00044 	movi	r3,1
   14794:	1980f90e 	bge	r3,r6,14b7c <_dtoa_r+0xd88>
   14798:	d8800617 	ldw	r2,24(sp)
   1479c:	d8c00a17 	ldw	r3,40(sp)
   147a0:	157fffc4 	addi	r21,r2,-1
   147a4:	1d41f316 	blt	r3,r21,14f74 <_dtoa_r+0x1180>
   147a8:	1d6bc83a 	sub	r21,r3,r21
   147ac:	d9c00617 	ldw	r7,24(sp)
   147b0:	3802aa16 	blt	r7,zero,1525c <_dtoa_r+0x1468>
   147b4:	dd000817 	ldw	r20,32(sp)
   147b8:	d8800617 	ldw	r2,24(sp)
   147bc:	d8c00817 	ldw	r3,32(sp)
   147c0:	01400044 	movi	r5,1
   147c4:	e009883a 	mov	r4,fp
   147c8:	1887883a 	add	r3,r3,r2
   147cc:	d8c00815 	stw	r3,32(sp)
   147d0:	b0ad883a 	add	r22,r22,r2
   147d4:	0015fec0 	call	15fec <__i2b>
   147d8:	1023883a 	mov	r17,r2
   147dc:	a0000826 	beq	r20,zero,14800 <_dtoa_r+0xa0c>
   147e0:	0580070e 	bge	zero,r22,14800 <_dtoa_r+0xa0c>
   147e4:	a005883a 	mov	r2,r20
   147e8:	b500b916 	blt	r22,r20,14ad0 <_dtoa_r+0xcdc>
   147ec:	d9000817 	ldw	r4,32(sp)
   147f0:	a0a9c83a 	sub	r20,r20,r2
   147f4:	b0adc83a 	sub	r22,r22,r2
   147f8:	2089c83a 	sub	r4,r4,r2
   147fc:	d9000815 	stw	r4,32(sp)
   14800:	d9800a17 	ldw	r6,40(sp)
   14804:	0181810e 	bge	zero,r6,14e0c <_dtoa_r+0x1018>
   14808:	d9c00b17 	ldw	r7,44(sp)
   1480c:	3800b326 	beq	r7,zero,14adc <_dtoa_r+0xce8>
   14810:	a800b226 	beq	r21,zero,14adc <_dtoa_r+0xce8>
   14814:	880b883a 	mov	r5,r17
   14818:	a80d883a 	mov	r6,r21
   1481c:	e009883a 	mov	r4,fp
   14820:	00162b40 	call	162b4 <__pow5mult>
   14824:	d9800917 	ldw	r6,36(sp)
   14828:	100b883a 	mov	r5,r2
   1482c:	e009883a 	mov	r4,fp
   14830:	1023883a 	mov	r17,r2
   14834:	00160280 	call	16028 <__multiply>
   14838:	1021883a 	mov	r16,r2
   1483c:	d8800a17 	ldw	r2,40(sp)
   14840:	d9400917 	ldw	r5,36(sp)
   14844:	e009883a 	mov	r4,fp
   14848:	1545c83a 	sub	r2,r2,r21
   1484c:	d8800a15 	stw	r2,40(sp)
   14850:	0015c600 	call	15c60 <_Bfree>
   14854:	d8c00a17 	ldw	r3,40(sp)
   14858:	18009f1e 	bne	r3,zero,14ad8 <_dtoa_r+0xce4>
   1485c:	05c00044 	movi	r23,1
   14860:	e009883a 	mov	r4,fp
   14864:	b80b883a 	mov	r5,r23
   14868:	0015fec0 	call	15fec <__i2b>
   1486c:	d9000d17 	ldw	r4,52(sp)
   14870:	102b883a 	mov	r21,r2
   14874:	2000ce26 	beq	r4,zero,14bb0 <_dtoa_r+0xdbc>
   14878:	200d883a 	mov	r6,r4
   1487c:	100b883a 	mov	r5,r2
   14880:	e009883a 	mov	r4,fp
   14884:	00162b40 	call	162b4 <__pow5mult>
   14888:	d9800317 	ldw	r6,12(sp)
   1488c:	102b883a 	mov	r21,r2
   14890:	b981810e 	bge	r23,r6,14e98 <_dtoa_r+0x10a4>
   14894:	0027883a 	mov	r19,zero
   14898:	a8800417 	ldw	r2,16(r21)
   1489c:	05c00804 	movi	r23,32
   148a0:	10800104 	addi	r2,r2,4
   148a4:	1085883a 	add	r2,r2,r2
   148a8:	1085883a 	add	r2,r2,r2
   148ac:	a885883a 	add	r2,r21,r2
   148b0:	11000017 	ldw	r4,0(r2)
   148b4:	0015ed40 	call	15ed4 <__hi0bits>
   148b8:	b885c83a 	sub	r2,r23,r2
   148bc:	1585883a 	add	r2,r2,r22
   148c0:	108007cc 	andi	r2,r2,31
   148c4:	1000b326 	beq	r2,zero,14b94 <_dtoa_r+0xda0>
   148c8:	00c00804 	movi	r3,32
   148cc:	1887c83a 	sub	r3,r3,r2
   148d0:	01000104 	movi	r4,4
   148d4:	20c2cd0e 	bge	r4,r3,1540c <_dtoa_r+0x1618>
   148d8:	00c00704 	movi	r3,28
   148dc:	1885c83a 	sub	r2,r3,r2
   148e0:	d8c00817 	ldw	r3,32(sp)
   148e4:	a0a9883a 	add	r20,r20,r2
   148e8:	b0ad883a 	add	r22,r22,r2
   148ec:	1887883a 	add	r3,r3,r2
   148f0:	d8c00815 	stw	r3,32(sp)
   148f4:	d9800817 	ldw	r6,32(sp)
   148f8:	0180040e 	bge	zero,r6,1490c <_dtoa_r+0xb18>
   148fc:	800b883a 	mov	r5,r16
   14900:	e009883a 	mov	r4,fp
   14904:	00163f40 	call	163f4 <__lshift>
   14908:	1021883a 	mov	r16,r2
   1490c:	0580050e 	bge	zero,r22,14924 <_dtoa_r+0xb30>
   14910:	a80b883a 	mov	r5,r21
   14914:	b00d883a 	mov	r6,r22
   14918:	e009883a 	mov	r4,fp
   1491c:	00163f40 	call	163f4 <__lshift>
   14920:	102b883a 	mov	r21,r2
   14924:	d9c00e17 	ldw	r7,56(sp)
   14928:	3801211e 	bne	r7,zero,14db0 <_dtoa_r+0xfbc>
   1492c:	d9800617 	ldw	r6,24(sp)
   14930:	0181380e 	bge	zero,r6,14e14 <_dtoa_r+0x1020>
   14934:	d8c00b17 	ldw	r3,44(sp)
   14938:	1800ab1e 	bne	r3,zero,14be8 <_dtoa_r+0xdf4>
   1493c:	dc800717 	ldw	r18,28(sp)
   14940:	dcc00617 	ldw	r19,24(sp)
   14944:	9029883a 	mov	r20,r18
   14948:	00000206 	br	14954 <_dtoa_r+0xb60>
   1494c:	0015c880 	call	15c88 <__multadd>
   14950:	1021883a 	mov	r16,r2
   14954:	a80b883a 	mov	r5,r21
   14958:	8009883a 	mov	r4,r16
   1495c:	0013bcc0 	call	13bcc <quorem>
   14960:	10800c04 	addi	r2,r2,48
   14964:	90800005 	stb	r2,0(r18)
   14968:	94800044 	addi	r18,r18,1
   1496c:	9507c83a 	sub	r3,r18,r20
   14970:	000f883a 	mov	r7,zero
   14974:	01800284 	movi	r6,10
   14978:	800b883a 	mov	r5,r16
   1497c:	e009883a 	mov	r4,fp
   14980:	1cfff216 	blt	r3,r19,1494c <_gp+0xfffef6f0>
   14984:	1011883a 	mov	r8,r2
   14988:	d8800617 	ldw	r2,24(sp)
   1498c:	0082370e 	bge	zero,r2,1526c <_dtoa_r+0x1478>
   14990:	d9000717 	ldw	r4,28(sp)
   14994:	0025883a 	mov	r18,zero
   14998:	20af883a 	add	r23,r4,r2
   1499c:	01800044 	movi	r6,1
   149a0:	800b883a 	mov	r5,r16
   149a4:	e009883a 	mov	r4,fp
   149a8:	da001715 	stw	r8,92(sp)
   149ac:	00163f40 	call	163f4 <__lshift>
   149b0:	a80b883a 	mov	r5,r21
   149b4:	1009883a 	mov	r4,r2
   149b8:	d8800915 	stw	r2,36(sp)
   149bc:	001653c0 	call	1653c <__mcmp>
   149c0:	da001717 	ldw	r8,92(sp)
   149c4:	0081800e 	bge	zero,r2,14fc8 <_dtoa_r+0x11d4>
   149c8:	b93fffc3 	ldbu	r4,-1(r23)
   149cc:	b8bfffc4 	addi	r2,r23,-1
   149d0:	1007883a 	mov	r3,r2
   149d4:	01800e44 	movi	r6,57
   149d8:	d9c00717 	ldw	r7,28(sp)
   149dc:	00000506 	br	149f4 <_dtoa_r+0xc00>
   149e0:	18ffffc4 	addi	r3,r3,-1
   149e4:	11c12326 	beq	r2,r7,14e74 <_dtoa_r+0x1080>
   149e8:	19000003 	ldbu	r4,0(r3)
   149ec:	102f883a 	mov	r23,r2
   149f0:	10bfffc4 	addi	r2,r2,-1
   149f4:	21403fcc 	andi	r5,r4,255
   149f8:	2940201c 	xori	r5,r5,128
   149fc:	297fe004 	addi	r5,r5,-128
   14a00:	29bff726 	beq	r5,r6,149e0 <_gp+0xfffef784>
   14a04:	21000044 	addi	r4,r4,1
   14a08:	11000005 	stb	r4,0(r2)
   14a0c:	a80b883a 	mov	r5,r21
   14a10:	e009883a 	mov	r4,fp
   14a14:	0015c600 	call	15c60 <_Bfree>
   14a18:	883ea026 	beq	r17,zero,1449c <_gp+0xfffef240>
   14a1c:	90000426 	beq	r18,zero,14a30 <_dtoa_r+0xc3c>
   14a20:	94400326 	beq	r18,r17,14a30 <_dtoa_r+0xc3c>
   14a24:	900b883a 	mov	r5,r18
   14a28:	e009883a 	mov	r4,fp
   14a2c:	0015c600 	call	15c60 <_Bfree>
   14a30:	880b883a 	mov	r5,r17
   14a34:	e009883a 	mov	r4,fp
   14a38:	0015c600 	call	15c60 <_Bfree>
   14a3c:	003e9706 	br	1449c <_gp+0xfffef240>
   14a40:	01800044 	movi	r6,1
   14a44:	d9800e15 	stw	r6,56(sp)
   14a48:	003d9606 	br	140a4 <_gp+0xfffeee48>
   14a4c:	d8800817 	ldw	r2,32(sp)
   14a50:	d8c00517 	ldw	r3,20(sp)
   14a54:	d8000d15 	stw	zero,52(sp)
   14a58:	10c5c83a 	sub	r2,r2,r3
   14a5c:	00c9c83a 	sub	r4,zero,r3
   14a60:	d8800815 	stw	r2,32(sp)
   14a64:	d9000a15 	stw	r4,40(sp)
   14a68:	003d9706 	br	140c8 <_gp+0xfffeee6c>
   14a6c:	05adc83a 	sub	r22,zero,r22
   14a70:	dd800815 	stw	r22,32(sp)
   14a74:	002d883a 	mov	r22,zero
   14a78:	003d8e06 	br	140b4 <_gp+0xfffeee58>
   14a7c:	d9000517 	ldw	r4,20(sp)
   14a80:	001bd2c0 	call	1bd2c <__floatsidf>
   14a84:	100d883a 	mov	r6,r2
   14a88:	180f883a 	mov	r7,r3
   14a8c:	a009883a 	mov	r4,r20
   14a90:	880b883a 	mov	r5,r17
   14a94:	001a8ec0 	call	1a8ec <__eqdf2>
   14a98:	103d7126 	beq	r2,zero,14060 <_gp+0xfffeee04>
   14a9c:	d9c00517 	ldw	r7,20(sp)
   14aa0:	39ffffc4 	addi	r7,r7,-1
   14aa4:	d9c00515 	stw	r7,20(sp)
   14aa8:	003d6d06 	br	14060 <_gp+0xfffeee04>
   14aac:	dd400a17 	ldw	r21,40(sp)
   14ab0:	dd000817 	ldw	r20,32(sp)
   14ab4:	0023883a 	mov	r17,zero
   14ab8:	003f4806 	br	147dc <_gp+0xfffef580>
   14abc:	10e3c83a 	sub	r17,r2,r3
   14ac0:	9448983a 	sll	r4,r18,r17
   14ac4:	003d3206 	br	13f90 <_gp+0xfffeed34>
   14ac8:	d8000e15 	stw	zero,56(sp)
   14acc:	003d7506 	br	140a4 <_gp+0xfffeee48>
   14ad0:	b005883a 	mov	r2,r22
   14ad4:	003f4506 	br	147ec <_gp+0xfffef590>
   14ad8:	dc000915 	stw	r16,36(sp)
   14adc:	d9800a17 	ldw	r6,40(sp)
   14ae0:	d9400917 	ldw	r5,36(sp)
   14ae4:	e009883a 	mov	r4,fp
   14ae8:	00162b40 	call	162b4 <__pow5mult>
   14aec:	1021883a 	mov	r16,r2
   14af0:	003f5a06 	br	1485c <_gp+0xfffef600>
   14af4:	01c00044 	movi	r7,1
   14af8:	d9c00b15 	stw	r7,44(sp)
   14afc:	d8802217 	ldw	r2,136(sp)
   14b00:	0081280e 	bge	zero,r2,14fa4 <_dtoa_r+0x11b0>
   14b04:	100d883a 	mov	r6,r2
   14b08:	1021883a 	mov	r16,r2
   14b0c:	d8800c15 	stw	r2,48(sp)
   14b10:	d8800615 	stw	r2,24(sp)
   14b14:	003d8806 	br	14138 <_gp+0xfffeeedc>
   14b18:	d8800617 	ldw	r2,24(sp)
   14b1c:	00be9b16 	blt	zero,r2,1458c <_gp+0xfffef330>
   14b20:	10010f1e 	bne	r2,zero,14f60 <_dtoa_r+0x116c>
   14b24:	880b883a 	mov	r5,r17
   14b28:	000d883a 	mov	r6,zero
   14b2c:	01d00534 	movhi	r7,16404
   14b30:	8009883a 	mov	r4,r16
   14b34:	001ab440 	call	1ab44 <__muldf3>
   14b38:	900d883a 	mov	r6,r18
   14b3c:	980f883a 	mov	r7,r19
   14b40:	1009883a 	mov	r4,r2
   14b44:	180b883a 	mov	r5,r3
   14b48:	001a9740 	call	1a974 <__gedf2>
   14b4c:	002b883a 	mov	r21,zero
   14b50:	0023883a 	mov	r17,zero
   14b54:	1000bf16 	blt	r2,zero,14e54 <_dtoa_r+0x1060>
   14b58:	d9802217 	ldw	r6,136(sp)
   14b5c:	ddc00717 	ldw	r23,28(sp)
   14b60:	018c303a 	nor	r6,zero,r6
   14b64:	d9800515 	stw	r6,20(sp)
   14b68:	a80b883a 	mov	r5,r21
   14b6c:	e009883a 	mov	r4,fp
   14b70:	0015c600 	call	15c60 <_Bfree>
   14b74:	883e4926 	beq	r17,zero,1449c <_gp+0xfffef240>
   14b78:	003fad06 	br	14a30 <_gp+0xfffef7d4>
   14b7c:	d9c01117 	ldw	r7,68(sp)
   14b80:	3801bc26 	beq	r7,zero,15274 <_dtoa_r+0x1480>
   14b84:	10810cc4 	addi	r2,r2,1075
   14b88:	dd400a17 	ldw	r21,40(sp)
   14b8c:	dd000817 	ldw	r20,32(sp)
   14b90:	003f0a06 	br	147bc <_gp+0xfffef560>
   14b94:	00800704 	movi	r2,28
   14b98:	d9000817 	ldw	r4,32(sp)
   14b9c:	a0a9883a 	add	r20,r20,r2
   14ba0:	b0ad883a 	add	r22,r22,r2
   14ba4:	2089883a 	add	r4,r4,r2
   14ba8:	d9000815 	stw	r4,32(sp)
   14bac:	003f5106 	br	148f4 <_gp+0xfffef698>
   14bb0:	d8c00317 	ldw	r3,12(sp)
   14bb4:	b8c1fc0e 	bge	r23,r3,153a8 <_dtoa_r+0x15b4>
   14bb8:	0027883a 	mov	r19,zero
   14bbc:	b805883a 	mov	r2,r23
   14bc0:	003f3e06 	br	148bc <_gp+0xfffef660>
   14bc4:	880b883a 	mov	r5,r17
   14bc8:	e009883a 	mov	r4,fp
   14bcc:	000f883a 	mov	r7,zero
   14bd0:	01800284 	movi	r6,10
   14bd4:	0015c880 	call	15c88 <__multadd>
   14bd8:	d9000c17 	ldw	r4,48(sp)
   14bdc:	1023883a 	mov	r17,r2
   14be0:	0102040e 	bge	zero,r4,153f4 <_dtoa_r+0x1600>
   14be4:	d9000615 	stw	r4,24(sp)
   14be8:	0500050e 	bge	zero,r20,14c00 <_dtoa_r+0xe0c>
   14bec:	880b883a 	mov	r5,r17
   14bf0:	a00d883a 	mov	r6,r20
   14bf4:	e009883a 	mov	r4,fp
   14bf8:	00163f40 	call	163f4 <__lshift>
   14bfc:	1023883a 	mov	r17,r2
   14c00:	9801241e 	bne	r19,zero,15094 <_dtoa_r+0x12a0>
   14c04:	8829883a 	mov	r20,r17
   14c08:	d9000617 	ldw	r4,24(sp)
   14c0c:	dcc00717 	ldw	r19,28(sp)
   14c10:	9480004c 	andi	r18,r18,1
   14c14:	20bfffc4 	addi	r2,r4,-1
   14c18:	9885883a 	add	r2,r19,r2
   14c1c:	d8800415 	stw	r2,16(sp)
   14c20:	dc800615 	stw	r18,24(sp)
   14c24:	a80b883a 	mov	r5,r21
   14c28:	8009883a 	mov	r4,r16
   14c2c:	0013bcc0 	call	13bcc <quorem>
   14c30:	880b883a 	mov	r5,r17
   14c34:	8009883a 	mov	r4,r16
   14c38:	102f883a 	mov	r23,r2
   14c3c:	001653c0 	call	1653c <__mcmp>
   14c40:	a80b883a 	mov	r5,r21
   14c44:	a00d883a 	mov	r6,r20
   14c48:	e009883a 	mov	r4,fp
   14c4c:	102d883a 	mov	r22,r2
   14c50:	001659c0 	call	1659c <__mdiff>
   14c54:	1007883a 	mov	r3,r2
   14c58:	10800317 	ldw	r2,12(r2)
   14c5c:	bc800c04 	addi	r18,r23,48
   14c60:	180b883a 	mov	r5,r3
   14c64:	10004e1e 	bne	r2,zero,14da0 <_dtoa_r+0xfac>
   14c68:	8009883a 	mov	r4,r16
   14c6c:	d8c01615 	stw	r3,88(sp)
   14c70:	001653c0 	call	1653c <__mcmp>
   14c74:	d8c01617 	ldw	r3,88(sp)
   14c78:	e009883a 	mov	r4,fp
   14c7c:	d8801615 	stw	r2,88(sp)
   14c80:	180b883a 	mov	r5,r3
   14c84:	0015c600 	call	15c60 <_Bfree>
   14c88:	d8801617 	ldw	r2,88(sp)
   14c8c:	1000041e 	bne	r2,zero,14ca0 <_dtoa_r+0xeac>
   14c90:	d9800317 	ldw	r6,12(sp)
   14c94:	3000021e 	bne	r6,zero,14ca0 <_dtoa_r+0xeac>
   14c98:	d8c00617 	ldw	r3,24(sp)
   14c9c:	18003726 	beq	r3,zero,14d7c <_dtoa_r+0xf88>
   14ca0:	b0002016 	blt	r22,zero,14d24 <_dtoa_r+0xf30>
   14ca4:	b000041e 	bne	r22,zero,14cb8 <_dtoa_r+0xec4>
   14ca8:	d9000317 	ldw	r4,12(sp)
   14cac:	2000021e 	bne	r4,zero,14cb8 <_dtoa_r+0xec4>
   14cb0:	d8c00617 	ldw	r3,24(sp)
   14cb4:	18001b26 	beq	r3,zero,14d24 <_dtoa_r+0xf30>
   14cb8:	00810716 	blt	zero,r2,150d8 <_dtoa_r+0x12e4>
   14cbc:	d8c00417 	ldw	r3,16(sp)
   14cc0:	9d800044 	addi	r22,r19,1
   14cc4:	9c800005 	stb	r18,0(r19)
   14cc8:	b02f883a 	mov	r23,r22
   14ccc:	98c10626 	beq	r19,r3,150e8 <_dtoa_r+0x12f4>
   14cd0:	800b883a 	mov	r5,r16
   14cd4:	000f883a 	mov	r7,zero
   14cd8:	01800284 	movi	r6,10
   14cdc:	e009883a 	mov	r4,fp
   14ce0:	0015c880 	call	15c88 <__multadd>
   14ce4:	1021883a 	mov	r16,r2
   14ce8:	000f883a 	mov	r7,zero
   14cec:	01800284 	movi	r6,10
   14cf0:	880b883a 	mov	r5,r17
   14cf4:	e009883a 	mov	r4,fp
   14cf8:	8d002526 	beq	r17,r20,14d90 <_dtoa_r+0xf9c>
   14cfc:	0015c880 	call	15c88 <__multadd>
   14d00:	a00b883a 	mov	r5,r20
   14d04:	000f883a 	mov	r7,zero
   14d08:	01800284 	movi	r6,10
   14d0c:	e009883a 	mov	r4,fp
   14d10:	1023883a 	mov	r17,r2
   14d14:	0015c880 	call	15c88 <__multadd>
   14d18:	1029883a 	mov	r20,r2
   14d1c:	b027883a 	mov	r19,r22
   14d20:	003fc006 	br	14c24 <_gp+0xfffef9c8>
   14d24:	9011883a 	mov	r8,r18
   14d28:	00800e0e 	bge	zero,r2,14d64 <_dtoa_r+0xf70>
   14d2c:	800b883a 	mov	r5,r16
   14d30:	01800044 	movi	r6,1
   14d34:	e009883a 	mov	r4,fp
   14d38:	da001715 	stw	r8,92(sp)
   14d3c:	00163f40 	call	163f4 <__lshift>
   14d40:	a80b883a 	mov	r5,r21
   14d44:	1009883a 	mov	r4,r2
   14d48:	1021883a 	mov	r16,r2
   14d4c:	001653c0 	call	1653c <__mcmp>
   14d50:	da001717 	ldw	r8,92(sp)
   14d54:	0081960e 	bge	zero,r2,153b0 <_dtoa_r+0x15bc>
   14d58:	00800e44 	movi	r2,57
   14d5c:	40817026 	beq	r8,r2,15320 <_dtoa_r+0x152c>
   14d60:	ba000c44 	addi	r8,r23,49
   14d64:	8825883a 	mov	r18,r17
   14d68:	9dc00044 	addi	r23,r19,1
   14d6c:	9a000005 	stb	r8,0(r19)
   14d70:	a023883a 	mov	r17,r20
   14d74:	dc000915 	stw	r16,36(sp)
   14d78:	003f2406 	br	14a0c <_gp+0xfffef7b0>
   14d7c:	00800e44 	movi	r2,57
   14d80:	9011883a 	mov	r8,r18
   14d84:	90816626 	beq	r18,r2,15320 <_dtoa_r+0x152c>
   14d88:	05bff516 	blt	zero,r22,14d60 <_gp+0xfffefb04>
   14d8c:	003ff506 	br	14d64 <_gp+0xfffefb08>
   14d90:	0015c880 	call	15c88 <__multadd>
   14d94:	1023883a 	mov	r17,r2
   14d98:	1029883a 	mov	r20,r2
   14d9c:	003fdf06 	br	14d1c <_gp+0xfffefac0>
   14da0:	e009883a 	mov	r4,fp
   14da4:	0015c600 	call	15c60 <_Bfree>
   14da8:	00800044 	movi	r2,1
   14dac:	003fbc06 	br	14ca0 <_gp+0xfffefa44>
   14db0:	a80b883a 	mov	r5,r21
   14db4:	8009883a 	mov	r4,r16
   14db8:	001653c0 	call	1653c <__mcmp>
   14dbc:	103edb0e 	bge	r2,zero,1492c <_gp+0xfffef6d0>
   14dc0:	800b883a 	mov	r5,r16
   14dc4:	000f883a 	mov	r7,zero
   14dc8:	01800284 	movi	r6,10
   14dcc:	e009883a 	mov	r4,fp
   14dd0:	0015c880 	call	15c88 <__multadd>
   14dd4:	1021883a 	mov	r16,r2
   14dd8:	d8800517 	ldw	r2,20(sp)
   14ddc:	d8c00b17 	ldw	r3,44(sp)
   14de0:	10bfffc4 	addi	r2,r2,-1
   14de4:	d8800515 	stw	r2,20(sp)
   14de8:	183f761e 	bne	r3,zero,14bc4 <_gp+0xfffef968>
   14dec:	d9000c17 	ldw	r4,48(sp)
   14df0:	0101730e 	bge	zero,r4,153c0 <_dtoa_r+0x15cc>
   14df4:	d9000615 	stw	r4,24(sp)
   14df8:	003ed006 	br	1493c <_gp+0xfffef6e0>
   14dfc:	00800084 	movi	r2,2
   14e00:	3081861e 	bne	r6,r2,1541c <_dtoa_r+0x1628>
   14e04:	d8000b15 	stw	zero,44(sp)
   14e08:	003f3c06 	br	14afc <_gp+0xfffef8a0>
   14e0c:	dc000917 	ldw	r16,36(sp)
   14e10:	003e9206 	br	1485c <_gp+0xfffef600>
   14e14:	d9c00317 	ldw	r7,12(sp)
   14e18:	00800084 	movi	r2,2
   14e1c:	11fec50e 	bge	r2,r7,14934 <_gp+0xfffef6d8>
   14e20:	d9000617 	ldw	r4,24(sp)
   14e24:	20013c1e 	bne	r4,zero,15318 <_dtoa_r+0x1524>
   14e28:	a80b883a 	mov	r5,r21
   14e2c:	000f883a 	mov	r7,zero
   14e30:	01800144 	movi	r6,5
   14e34:	e009883a 	mov	r4,fp
   14e38:	0015c880 	call	15c88 <__multadd>
   14e3c:	100b883a 	mov	r5,r2
   14e40:	8009883a 	mov	r4,r16
   14e44:	102b883a 	mov	r21,r2
   14e48:	001653c0 	call	1653c <__mcmp>
   14e4c:	dc000915 	stw	r16,36(sp)
   14e50:	00bf410e 	bge	zero,r2,14b58 <_gp+0xfffef8fc>
   14e54:	d9c00717 	ldw	r7,28(sp)
   14e58:	00800c44 	movi	r2,49
   14e5c:	38800005 	stb	r2,0(r7)
   14e60:	d8800517 	ldw	r2,20(sp)
   14e64:	3dc00044 	addi	r23,r7,1
   14e68:	10800044 	addi	r2,r2,1
   14e6c:	d8800515 	stw	r2,20(sp)
   14e70:	003f3d06 	br	14b68 <_gp+0xfffef90c>
   14e74:	d9800517 	ldw	r6,20(sp)
   14e78:	d9c00717 	ldw	r7,28(sp)
   14e7c:	00800c44 	movi	r2,49
   14e80:	31800044 	addi	r6,r6,1
   14e84:	d9800515 	stw	r6,20(sp)
   14e88:	38800005 	stb	r2,0(r7)
   14e8c:	003edf06 	br	14a0c <_gp+0xfffef7b0>
   14e90:	d8000b15 	stw	zero,44(sp)
   14e94:	003c9f06 	br	14114 <_gp+0xfffeeeb8>
   14e98:	903e7e1e 	bne	r18,zero,14894 <_gp+0xfffef638>
   14e9c:	00800434 	movhi	r2,16
   14ea0:	10bfffc4 	addi	r2,r2,-1
   14ea4:	9884703a 	and	r2,r19,r2
   14ea8:	1000ea1e 	bne	r2,zero,15254 <_dtoa_r+0x1460>
   14eac:	9cdffc2c 	andhi	r19,r19,32752
   14eb0:	9800e826 	beq	r19,zero,15254 <_dtoa_r+0x1460>
   14eb4:	d9c00817 	ldw	r7,32(sp)
   14eb8:	b5800044 	addi	r22,r22,1
   14ebc:	04c00044 	movi	r19,1
   14ec0:	39c00044 	addi	r7,r7,1
   14ec4:	d9c00815 	stw	r7,32(sp)
   14ec8:	d8800d17 	ldw	r2,52(sp)
   14ecc:	103e721e 	bne	r2,zero,14898 <_gp+0xfffef63c>
   14ed0:	00800044 	movi	r2,1
   14ed4:	003e7906 	br	148bc <_gp+0xfffef660>
   14ed8:	8009883a 	mov	r4,r16
   14edc:	001bd2c0 	call	1bd2c <__floatsidf>
   14ee0:	d9800f17 	ldw	r6,60(sp)
   14ee4:	d9c01017 	ldw	r7,64(sp)
   14ee8:	1009883a 	mov	r4,r2
   14eec:	180b883a 	mov	r5,r3
   14ef0:	001ab440 	call	1ab44 <__muldf3>
   14ef4:	000d883a 	mov	r6,zero
   14ef8:	01d00734 	movhi	r7,16412
   14efc:	1009883a 	mov	r4,r2
   14f00:	180b883a 	mov	r5,r3
   14f04:	00196700 	call	19670 <__adddf3>
   14f08:	047f3034 	movhi	r17,64704
   14f0c:	1021883a 	mov	r16,r2
   14f10:	1c63883a 	add	r17,r3,r17
   14f14:	d9000f17 	ldw	r4,60(sp)
   14f18:	d9401017 	ldw	r5,64(sp)
   14f1c:	000d883a 	mov	r6,zero
   14f20:	01d00534 	movhi	r7,16404
   14f24:	001b3b00 	call	1b3b0 <__subdf3>
   14f28:	800d883a 	mov	r6,r16
   14f2c:	880f883a 	mov	r7,r17
   14f30:	1009883a 	mov	r4,r2
   14f34:	180b883a 	mov	r5,r3
   14f38:	102b883a 	mov	r21,r2
   14f3c:	1829883a 	mov	r20,r3
   14f40:	001a9740 	call	1a974 <__gedf2>
   14f44:	00806c16 	blt	zero,r2,150f8 <_dtoa_r+0x1304>
   14f48:	89e0003c 	xorhi	r7,r17,32768
   14f4c:	800d883a 	mov	r6,r16
   14f50:	a809883a 	mov	r4,r21
   14f54:	a00b883a 	mov	r5,r20
   14f58:	001aa500 	call	1aa50 <__ledf2>
   14f5c:	103d7e0e 	bge	r2,zero,14558 <_gp+0xfffef2fc>
   14f60:	002b883a 	mov	r21,zero
   14f64:	0023883a 	mov	r17,zero
   14f68:	003efb06 	br	14b58 <_gp+0xfffef8fc>
   14f6c:	d8800717 	ldw	r2,28(sp)
   14f70:	003bd006 	br	13eb4 <_gp+0xfffeec58>
   14f74:	d9000a17 	ldw	r4,40(sp)
   14f78:	d9800d17 	ldw	r6,52(sp)
   14f7c:	dd400a15 	stw	r21,40(sp)
   14f80:	a905c83a 	sub	r2,r21,r4
   14f84:	308d883a 	add	r6,r6,r2
   14f88:	d9800d15 	stw	r6,52(sp)
   14f8c:	002b883a 	mov	r21,zero
   14f90:	003e0606 	br	147ac <_gp+0xfffef550>
   14f94:	9023883a 	mov	r17,r18
   14f98:	9829883a 	mov	r20,r19
   14f9c:	04000084 	movi	r16,2
   14fa0:	003c9206 	br	141ec <_gp+0xfffeef90>
   14fa4:	04000044 	movi	r16,1
   14fa8:	dc000c15 	stw	r16,48(sp)
   14fac:	dc000615 	stw	r16,24(sp)
   14fb0:	dc002215 	stw	r16,136(sp)
   14fb4:	e0001115 	stw	zero,68(fp)
   14fb8:	000b883a 	mov	r5,zero
   14fbc:	003c6906 	br	14164 <_gp+0xfffeef08>
   14fc0:	3021883a 	mov	r16,r6
   14fc4:	003ffb06 	br	14fb4 <_gp+0xfffefd58>
   14fc8:	1000021e 	bne	r2,zero,14fd4 <_dtoa_r+0x11e0>
   14fcc:	4200004c 	andi	r8,r8,1
   14fd0:	403e7d1e 	bne	r8,zero,149c8 <_gp+0xfffef76c>
   14fd4:	01000c04 	movi	r4,48
   14fd8:	00000106 	br	14fe0 <_dtoa_r+0x11ec>
   14fdc:	102f883a 	mov	r23,r2
   14fe0:	b8bfffc4 	addi	r2,r23,-1
   14fe4:	10c00007 	ldb	r3,0(r2)
   14fe8:	193ffc26 	beq	r3,r4,14fdc <_gp+0xfffefd80>
   14fec:	003e8706 	br	14a0c <_gp+0xfffef7b0>
   14ff0:	d8800517 	ldw	r2,20(sp)
   14ff4:	00a3c83a 	sub	r17,zero,r2
   14ff8:	8800a426 	beq	r17,zero,1528c <_dtoa_r+0x1498>
   14ffc:	888003cc 	andi	r2,r17,15
   15000:	100490fa 	slli	r2,r2,3
   15004:	00c000b4 	movhi	r3,2
   15008:	18f1ca04 	addi	r3,r3,-14552
   1500c:	1885883a 	add	r2,r3,r2
   15010:	11800017 	ldw	r6,0(r2)
   15014:	11c00117 	ldw	r7,4(r2)
   15018:	9009883a 	mov	r4,r18
   1501c:	980b883a 	mov	r5,r19
   15020:	8823d13a 	srai	r17,r17,4
   15024:	001ab440 	call	1ab44 <__muldf3>
   15028:	d8800f15 	stw	r2,60(sp)
   1502c:	d8c01015 	stw	r3,64(sp)
   15030:	8800e826 	beq	r17,zero,153d4 <_dtoa_r+0x15e0>
   15034:	050000b4 	movhi	r20,2
   15038:	a531c004 	addi	r20,r20,-14592
   1503c:	04000084 	movi	r16,2
   15040:	8980004c 	andi	r6,r17,1
   15044:	1009883a 	mov	r4,r2
   15048:	8823d07a 	srai	r17,r17,1
   1504c:	180b883a 	mov	r5,r3
   15050:	30000426 	beq	r6,zero,15064 <_dtoa_r+0x1270>
   15054:	a1800017 	ldw	r6,0(r20)
   15058:	a1c00117 	ldw	r7,4(r20)
   1505c:	84000044 	addi	r16,r16,1
   15060:	001ab440 	call	1ab44 <__muldf3>
   15064:	a5000204 	addi	r20,r20,8
   15068:	883ff51e 	bne	r17,zero,15040 <_gp+0xfffefde4>
   1506c:	d8800f15 	stw	r2,60(sp)
   15070:	d8c01015 	stw	r3,64(sp)
   15074:	003c7606 	br	14250 <_gp+0xfffeeff4>
   15078:	00c00c04 	movi	r3,48
   1507c:	10c00005 	stb	r3,0(r2)
   15080:	d8c00517 	ldw	r3,20(sp)
   15084:	bd3fffc3 	ldbu	r20,-1(r23)
   15088:	18c00044 	addi	r3,r3,1
   1508c:	d8c00515 	stw	r3,20(sp)
   15090:	003db906 	br	14778 <_gp+0xfffef51c>
   15094:	89400117 	ldw	r5,4(r17)
   15098:	e009883a 	mov	r4,fp
   1509c:	0015bb80 	call	15bb8 <_Balloc>
   150a0:	89800417 	ldw	r6,16(r17)
   150a4:	89400304 	addi	r5,r17,12
   150a8:	11000304 	addi	r4,r2,12
   150ac:	31800084 	addi	r6,r6,2
   150b0:	318d883a 	add	r6,r6,r6
   150b4:	318d883a 	add	r6,r6,r6
   150b8:	1027883a 	mov	r19,r2
   150bc:	0015a700 	call	15a70 <memcpy>
   150c0:	01800044 	movi	r6,1
   150c4:	980b883a 	mov	r5,r19
   150c8:	e009883a 	mov	r4,fp
   150cc:	00163f40 	call	163f4 <__lshift>
   150d0:	1029883a 	mov	r20,r2
   150d4:	003ecc06 	br	14c08 <_gp+0xfffef9ac>
   150d8:	00800e44 	movi	r2,57
   150dc:	90809026 	beq	r18,r2,15320 <_dtoa_r+0x152c>
   150e0:	92000044 	addi	r8,r18,1
   150e4:	003f1f06 	br	14d64 <_gp+0xfffefb08>
   150e8:	9011883a 	mov	r8,r18
   150ec:	8825883a 	mov	r18,r17
   150f0:	a023883a 	mov	r17,r20
   150f4:	003e2906 	br	1499c <_gp+0xfffef740>
   150f8:	002b883a 	mov	r21,zero
   150fc:	0023883a 	mov	r17,zero
   15100:	003f5406 	br	14e54 <_gp+0xfffefbf8>
   15104:	61bfffc4 	addi	r6,r12,-1
   15108:	300490fa 	slli	r2,r6,3
   1510c:	00c000b4 	movhi	r3,2
   15110:	18f1ca04 	addi	r3,r3,-14552
   15114:	1885883a 	add	r2,r3,r2
   15118:	11000017 	ldw	r4,0(r2)
   1511c:	11400117 	ldw	r5,4(r2)
   15120:	d8800717 	ldw	r2,28(sp)
   15124:	880f883a 	mov	r7,r17
   15128:	d9801215 	stw	r6,72(sp)
   1512c:	800d883a 	mov	r6,r16
   15130:	db001615 	stw	r12,88(sp)
   15134:	15c00044 	addi	r23,r2,1
   15138:	001ab440 	call	1ab44 <__muldf3>
   1513c:	d9401017 	ldw	r5,64(sp)
   15140:	d9000f17 	ldw	r4,60(sp)
   15144:	d8c01515 	stw	r3,84(sp)
   15148:	d8801415 	stw	r2,80(sp)
   1514c:	001bcac0 	call	1bcac <__fixdfsi>
   15150:	1009883a 	mov	r4,r2
   15154:	1021883a 	mov	r16,r2
   15158:	001bd2c0 	call	1bd2c <__floatsidf>
   1515c:	d9000f17 	ldw	r4,60(sp)
   15160:	d9401017 	ldw	r5,64(sp)
   15164:	100d883a 	mov	r6,r2
   15168:	180f883a 	mov	r7,r3
   1516c:	001b3b00 	call	1b3b0 <__subdf3>
   15170:	1829883a 	mov	r20,r3
   15174:	d8c00717 	ldw	r3,28(sp)
   15178:	84000c04 	addi	r16,r16,48
   1517c:	1023883a 	mov	r17,r2
   15180:	1c000005 	stb	r16,0(r3)
   15184:	db001617 	ldw	r12,88(sp)
   15188:	00800044 	movi	r2,1
   1518c:	60802226 	beq	r12,r2,15218 <_dtoa_r+0x1424>
   15190:	d9c00717 	ldw	r7,28(sp)
   15194:	8805883a 	mov	r2,r17
   15198:	b82b883a 	mov	r21,r23
   1519c:	3b19883a 	add	r12,r7,r12
   151a0:	6023883a 	mov	r17,r12
   151a4:	a007883a 	mov	r3,r20
   151a8:	dc800f15 	stw	r18,60(sp)
   151ac:	000d883a 	mov	r6,zero
   151b0:	01d00934 	movhi	r7,16420
   151b4:	1009883a 	mov	r4,r2
   151b8:	180b883a 	mov	r5,r3
   151bc:	001ab440 	call	1ab44 <__muldf3>
   151c0:	180b883a 	mov	r5,r3
   151c4:	1009883a 	mov	r4,r2
   151c8:	1829883a 	mov	r20,r3
   151cc:	1025883a 	mov	r18,r2
   151d0:	001bcac0 	call	1bcac <__fixdfsi>
   151d4:	1009883a 	mov	r4,r2
   151d8:	1021883a 	mov	r16,r2
   151dc:	001bd2c0 	call	1bd2c <__floatsidf>
   151e0:	100d883a 	mov	r6,r2
   151e4:	180f883a 	mov	r7,r3
   151e8:	9009883a 	mov	r4,r18
   151ec:	a00b883a 	mov	r5,r20
   151f0:	84000c04 	addi	r16,r16,48
   151f4:	001b3b00 	call	1b3b0 <__subdf3>
   151f8:	ad400044 	addi	r21,r21,1
   151fc:	ac3fffc5 	stb	r16,-1(r21)
   15200:	ac7fea1e 	bne	r21,r17,151ac <_gp+0xfffeff50>
   15204:	1023883a 	mov	r17,r2
   15208:	d8801217 	ldw	r2,72(sp)
   1520c:	dc800f17 	ldw	r18,60(sp)
   15210:	1829883a 	mov	r20,r3
   15214:	b8af883a 	add	r23,r23,r2
   15218:	d9001417 	ldw	r4,80(sp)
   1521c:	d9401517 	ldw	r5,84(sp)
   15220:	000d883a 	mov	r6,zero
   15224:	01cff834 	movhi	r7,16352
   15228:	00196700 	call	19670 <__adddf3>
   1522c:	880d883a 	mov	r6,r17
   15230:	a00f883a 	mov	r7,r20
   15234:	1009883a 	mov	r4,r2
   15238:	180b883a 	mov	r5,r3
   1523c:	001aa500 	call	1aa50 <__ledf2>
   15240:	10003e0e 	bge	r2,zero,1533c <_dtoa_r+0x1548>
   15244:	d9001317 	ldw	r4,76(sp)
   15248:	bd3fffc3 	ldbu	r20,-1(r23)
   1524c:	d9000515 	stw	r4,20(sp)
   15250:	003d3b06 	br	14740 <_gp+0xfffef4e4>
   15254:	0027883a 	mov	r19,zero
   15258:	003f1b06 	br	14ec8 <_gp+0xfffefc6c>
   1525c:	d8800817 	ldw	r2,32(sp)
   15260:	11e9c83a 	sub	r20,r2,r7
   15264:	0005883a 	mov	r2,zero
   15268:	003d5406 	br	147bc <_gp+0xfffef560>
   1526c:	00800044 	movi	r2,1
   15270:	003dc706 	br	14990 <_gp+0xfffef734>
   15274:	d8c00217 	ldw	r3,8(sp)
   15278:	00800d84 	movi	r2,54
   1527c:	dd400a17 	ldw	r21,40(sp)
   15280:	10c5c83a 	sub	r2,r2,r3
   15284:	dd000817 	ldw	r20,32(sp)
   15288:	003d4c06 	br	147bc <_gp+0xfffef560>
   1528c:	dc800f15 	stw	r18,60(sp)
   15290:	dcc01015 	stw	r19,64(sp)
   15294:	04000084 	movi	r16,2
   15298:	003bed06 	br	14250 <_gp+0xfffeeff4>
   1529c:	d9000617 	ldw	r4,24(sp)
   152a0:	203f0d26 	beq	r4,zero,14ed8 <_gp+0xfffefc7c>
   152a4:	d9800c17 	ldw	r6,48(sp)
   152a8:	01bcab0e 	bge	zero,r6,14558 <_gp+0xfffef2fc>
   152ac:	d9401017 	ldw	r5,64(sp)
   152b0:	d9000f17 	ldw	r4,60(sp)
   152b4:	000d883a 	mov	r6,zero
   152b8:	01d00934 	movhi	r7,16420
   152bc:	001ab440 	call	1ab44 <__muldf3>
   152c0:	81000044 	addi	r4,r16,1
   152c4:	d8800f15 	stw	r2,60(sp)
   152c8:	d8c01015 	stw	r3,64(sp)
   152cc:	001bd2c0 	call	1bd2c <__floatsidf>
   152d0:	d9800f17 	ldw	r6,60(sp)
   152d4:	d9c01017 	ldw	r7,64(sp)
   152d8:	1009883a 	mov	r4,r2
   152dc:	180b883a 	mov	r5,r3
   152e0:	001ab440 	call	1ab44 <__muldf3>
   152e4:	01d00734 	movhi	r7,16412
   152e8:	000d883a 	mov	r6,zero
   152ec:	1009883a 	mov	r4,r2
   152f0:	180b883a 	mov	r5,r3
   152f4:	00196700 	call	19670 <__adddf3>
   152f8:	d9c00517 	ldw	r7,20(sp)
   152fc:	047f3034 	movhi	r17,64704
   15300:	1021883a 	mov	r16,r2
   15304:	39ffffc4 	addi	r7,r7,-1
   15308:	d9c01315 	stw	r7,76(sp)
   1530c:	1c63883a 	add	r17,r3,r17
   15310:	db000c17 	ldw	r12,48(sp)
   15314:	003bea06 	br	142c0 <_gp+0xfffef064>
   15318:	dc000915 	stw	r16,36(sp)
   1531c:	003e0e06 	br	14b58 <_gp+0xfffef8fc>
   15320:	01000e44 	movi	r4,57
   15324:	8825883a 	mov	r18,r17
   15328:	9dc00044 	addi	r23,r19,1
   1532c:	99000005 	stb	r4,0(r19)
   15330:	a023883a 	mov	r17,r20
   15334:	dc000915 	stw	r16,36(sp)
   15338:	003da406 	br	149cc <_gp+0xfffef770>
   1533c:	d9801417 	ldw	r6,80(sp)
   15340:	d9c01517 	ldw	r7,84(sp)
   15344:	0009883a 	mov	r4,zero
   15348:	014ff834 	movhi	r5,16352
   1534c:	001b3b00 	call	1b3b0 <__subdf3>
   15350:	880d883a 	mov	r6,r17
   15354:	a00f883a 	mov	r7,r20
   15358:	1009883a 	mov	r4,r2
   1535c:	180b883a 	mov	r5,r3
   15360:	001a9740 	call	1a974 <__gedf2>
   15364:	00bc7c0e 	bge	zero,r2,14558 <_gp+0xfffef2fc>
   15368:	01000c04 	movi	r4,48
   1536c:	00000106 	br	15374 <_dtoa_r+0x1580>
   15370:	102f883a 	mov	r23,r2
   15374:	b8bfffc4 	addi	r2,r23,-1
   15378:	10c00007 	ldb	r3,0(r2)
   1537c:	193ffc26 	beq	r3,r4,15370 <_gp+0xffff0114>
   15380:	d9801317 	ldw	r6,76(sp)
   15384:	d9800515 	stw	r6,20(sp)
   15388:	003c4406 	br	1449c <_gp+0xfffef240>
   1538c:	d9801317 	ldw	r6,76(sp)
   15390:	d9800515 	stw	r6,20(sp)
   15394:	003cea06 	br	14740 <_gp+0xfffef4e4>
   15398:	dd800f17 	ldw	r22,60(sp)
   1539c:	dcc01017 	ldw	r19,64(sp)
   153a0:	dc801217 	ldw	r18,72(sp)
   153a4:	003c6c06 	br	14558 <_gp+0xfffef2fc>
   153a8:	903e031e 	bne	r18,zero,14bb8 <_gp+0xfffef95c>
   153ac:	003ebb06 	br	14e9c <_gp+0xfffefc40>
   153b0:	103e6c1e 	bne	r2,zero,14d64 <_gp+0xfffefb08>
   153b4:	4080004c 	andi	r2,r8,1
   153b8:	103e6a26 	beq	r2,zero,14d64 <_gp+0xfffefb08>
   153bc:	003e6606 	br	14d58 <_gp+0xfffefafc>
   153c0:	d8c00317 	ldw	r3,12(sp)
   153c4:	00800084 	movi	r2,2
   153c8:	10c02916 	blt	r2,r3,15470 <_dtoa_r+0x167c>
   153cc:	d9000c17 	ldw	r4,48(sp)
   153d0:	003e8806 	br	14df4 <_gp+0xfffefb98>
   153d4:	04000084 	movi	r16,2
   153d8:	003b9d06 	br	14250 <_gp+0xfffeeff4>
   153dc:	d9001317 	ldw	r4,76(sp)
   153e0:	d9000515 	stw	r4,20(sp)
   153e4:	003cd606 	br	14740 <_gp+0xfffef4e4>
   153e8:	d8801317 	ldw	r2,76(sp)
   153ec:	d8800515 	stw	r2,20(sp)
   153f0:	003c2a06 	br	1449c <_gp+0xfffef240>
   153f4:	d9800317 	ldw	r6,12(sp)
   153f8:	00800084 	movi	r2,2
   153fc:	11801516 	blt	r2,r6,15454 <_dtoa_r+0x1660>
   15400:	d9c00c17 	ldw	r7,48(sp)
   15404:	d9c00615 	stw	r7,24(sp)
   15408:	003df706 	br	14be8 <_gp+0xfffef98c>
   1540c:	193d3926 	beq	r3,r4,148f4 <_gp+0xfffef698>
   15410:	00c00f04 	movi	r3,60
   15414:	1885c83a 	sub	r2,r3,r2
   15418:	003ddf06 	br	14b98 <_gp+0xfffef93c>
   1541c:	e009883a 	mov	r4,fp
   15420:	e0001115 	stw	zero,68(fp)
   15424:	000b883a 	mov	r5,zero
   15428:	0015bb80 	call	15bb8 <_Balloc>
   1542c:	d8800715 	stw	r2,28(sp)
   15430:	d8c00717 	ldw	r3,28(sp)
   15434:	00bfffc4 	movi	r2,-1
   15438:	01000044 	movi	r4,1
   1543c:	d8800c15 	stw	r2,48(sp)
   15440:	e0c01015 	stw	r3,64(fp)
   15444:	d9000b15 	stw	r4,44(sp)
   15448:	d8800615 	stw	r2,24(sp)
   1544c:	d8002215 	stw	zero,136(sp)
   15450:	003c4106 	br	14558 <_gp+0xfffef2fc>
   15454:	d8c00c17 	ldw	r3,48(sp)
   15458:	d8c00615 	stw	r3,24(sp)
   1545c:	003e7006 	br	14e20 <_gp+0xfffefbc4>
   15460:	04400044 	movi	r17,1
   15464:	003b2006 	br	140e8 <_gp+0xfffeee8c>
   15468:	000b883a 	mov	r5,zero
   1546c:	003b3d06 	br	14164 <_gp+0xfffeef08>
   15470:	d8800c17 	ldw	r2,48(sp)
   15474:	d8800615 	stw	r2,24(sp)
   15478:	003e6906 	br	14e20 <_gp+0xfffefbc4>

0001547c <_malloc_trim_r>:
   1547c:	defffb04 	addi	sp,sp,-20
   15480:	dcc00315 	stw	r19,12(sp)
   15484:	04c000b4 	movhi	r19,2
   15488:	dc800215 	stw	r18,8(sp)
   1548c:	dc400115 	stw	r17,4(sp)
   15490:	dc000015 	stw	r16,0(sp)
   15494:	dfc00415 	stw	ra,16(sp)
   15498:	2821883a 	mov	r16,r5
   1549c:	9cf35604 	addi	r19,r19,-12968
   154a0:	2025883a 	mov	r18,r4
   154a4:	001c0640 	call	1c064 <__malloc_lock>
   154a8:	98800217 	ldw	r2,8(r19)
   154ac:	14400117 	ldw	r17,4(r2)
   154b0:	00bfff04 	movi	r2,-4
   154b4:	88a2703a 	and	r17,r17,r2
   154b8:	8c21c83a 	sub	r16,r17,r16
   154bc:	8403fbc4 	addi	r16,r16,4079
   154c0:	8020d33a 	srli	r16,r16,12
   154c4:	0083ffc4 	movi	r2,4095
   154c8:	843fffc4 	addi	r16,r16,-1
   154cc:	8020933a 	slli	r16,r16,12
   154d0:	1400060e 	bge	r2,r16,154ec <_malloc_trim_r+0x70>
   154d4:	000b883a 	mov	r5,zero
   154d8:	9009883a 	mov	r4,r18
   154dc:	00117e00 	call	117e0 <_sbrk_r>
   154e0:	98c00217 	ldw	r3,8(r19)
   154e4:	1c47883a 	add	r3,r3,r17
   154e8:	10c00a26 	beq	r2,r3,15514 <_malloc_trim_r+0x98>
   154ec:	9009883a 	mov	r4,r18
   154f0:	001c0680 	call	1c068 <__malloc_unlock>
   154f4:	0005883a 	mov	r2,zero
   154f8:	dfc00417 	ldw	ra,16(sp)
   154fc:	dcc00317 	ldw	r19,12(sp)
   15500:	dc800217 	ldw	r18,8(sp)
   15504:	dc400117 	ldw	r17,4(sp)
   15508:	dc000017 	ldw	r16,0(sp)
   1550c:	dec00504 	addi	sp,sp,20
   15510:	f800283a 	ret
   15514:	040bc83a 	sub	r5,zero,r16
   15518:	9009883a 	mov	r4,r18
   1551c:	00117e00 	call	117e0 <_sbrk_r>
   15520:	00ffffc4 	movi	r3,-1
   15524:	10c00d26 	beq	r2,r3,1555c <_malloc_trim_r+0xe0>
   15528:	00c000b4 	movhi	r3,2
   1552c:	18f71704 	addi	r3,r3,-9124
   15530:	18800017 	ldw	r2,0(r3)
   15534:	99000217 	ldw	r4,8(r19)
   15538:	8c23c83a 	sub	r17,r17,r16
   1553c:	8c400054 	ori	r17,r17,1
   15540:	1421c83a 	sub	r16,r2,r16
   15544:	24400115 	stw	r17,4(r4)
   15548:	9009883a 	mov	r4,r18
   1554c:	1c000015 	stw	r16,0(r3)
   15550:	001c0680 	call	1c068 <__malloc_unlock>
   15554:	00800044 	movi	r2,1
   15558:	003fe706 	br	154f8 <_gp+0xffff029c>
   1555c:	000b883a 	mov	r5,zero
   15560:	9009883a 	mov	r4,r18
   15564:	00117e00 	call	117e0 <_sbrk_r>
   15568:	99000217 	ldw	r4,8(r19)
   1556c:	014003c4 	movi	r5,15
   15570:	1107c83a 	sub	r3,r2,r4
   15574:	28ffdd0e 	bge	r5,r3,154ec <_gp+0xffff0290>
   15578:	014000b4 	movhi	r5,2
   1557c:	29749a04 	addi	r5,r5,-11672
   15580:	29400017 	ldw	r5,0(r5)
   15584:	18c00054 	ori	r3,r3,1
   15588:	20c00115 	stw	r3,4(r4)
   1558c:	00c000b4 	movhi	r3,2
   15590:	1145c83a 	sub	r2,r2,r5
   15594:	18f71704 	addi	r3,r3,-9124
   15598:	18800015 	stw	r2,0(r3)
   1559c:	003fd306 	br	154ec <_gp+0xffff0290>

000155a0 <_free_r>:
   155a0:	28004126 	beq	r5,zero,156a8 <_free_r+0x108>
   155a4:	defffd04 	addi	sp,sp,-12
   155a8:	dc400115 	stw	r17,4(sp)
   155ac:	dc000015 	stw	r16,0(sp)
   155b0:	2023883a 	mov	r17,r4
   155b4:	2821883a 	mov	r16,r5
   155b8:	dfc00215 	stw	ra,8(sp)
   155bc:	001c0640 	call	1c064 <__malloc_lock>
   155c0:	81ffff17 	ldw	r7,-4(r16)
   155c4:	00bfff84 	movi	r2,-2
   155c8:	010000b4 	movhi	r4,2
   155cc:	81bffe04 	addi	r6,r16,-8
   155d0:	3884703a 	and	r2,r7,r2
   155d4:	21335604 	addi	r4,r4,-12968
   155d8:	308b883a 	add	r5,r6,r2
   155dc:	2a400117 	ldw	r9,4(r5)
   155e0:	22000217 	ldw	r8,8(r4)
   155e4:	00ffff04 	movi	r3,-4
   155e8:	48c6703a 	and	r3,r9,r3
   155ec:	2a005726 	beq	r5,r8,1574c <_free_r+0x1ac>
   155f0:	28c00115 	stw	r3,4(r5)
   155f4:	39c0004c 	andi	r7,r7,1
   155f8:	3800091e 	bne	r7,zero,15620 <_free_r+0x80>
   155fc:	823ffe17 	ldw	r8,-8(r16)
   15600:	22400204 	addi	r9,r4,8
   15604:	320dc83a 	sub	r6,r6,r8
   15608:	31c00217 	ldw	r7,8(r6)
   1560c:	1205883a 	add	r2,r2,r8
   15610:	3a406526 	beq	r7,r9,157a8 <_free_r+0x208>
   15614:	32000317 	ldw	r8,12(r6)
   15618:	3a000315 	stw	r8,12(r7)
   1561c:	41c00215 	stw	r7,8(r8)
   15620:	28cf883a 	add	r7,r5,r3
   15624:	39c00117 	ldw	r7,4(r7)
   15628:	39c0004c 	andi	r7,r7,1
   1562c:	38003a26 	beq	r7,zero,15718 <_free_r+0x178>
   15630:	10c00054 	ori	r3,r2,1
   15634:	30c00115 	stw	r3,4(r6)
   15638:	3087883a 	add	r3,r6,r2
   1563c:	18800015 	stw	r2,0(r3)
   15640:	00c07fc4 	movi	r3,511
   15644:	18801936 	bltu	r3,r2,156ac <_free_r+0x10c>
   15648:	1004d0fa 	srli	r2,r2,3
   1564c:	01c00044 	movi	r7,1
   15650:	21400117 	ldw	r5,4(r4)
   15654:	10c00044 	addi	r3,r2,1
   15658:	18c7883a 	add	r3,r3,r3
   1565c:	1005d0ba 	srai	r2,r2,2
   15660:	18c7883a 	add	r3,r3,r3
   15664:	18c7883a 	add	r3,r3,r3
   15668:	1907883a 	add	r3,r3,r4
   1566c:	3884983a 	sll	r2,r7,r2
   15670:	19c00017 	ldw	r7,0(r3)
   15674:	1a3ffe04 	addi	r8,r3,-8
   15678:	1144b03a 	or	r2,r2,r5
   1567c:	32000315 	stw	r8,12(r6)
   15680:	31c00215 	stw	r7,8(r6)
   15684:	20800115 	stw	r2,4(r4)
   15688:	19800015 	stw	r6,0(r3)
   1568c:	39800315 	stw	r6,12(r7)
   15690:	8809883a 	mov	r4,r17
   15694:	dfc00217 	ldw	ra,8(sp)
   15698:	dc400117 	ldw	r17,4(sp)
   1569c:	dc000017 	ldw	r16,0(sp)
   156a0:	dec00304 	addi	sp,sp,12
   156a4:	001c0681 	jmpi	1c068 <__malloc_unlock>
   156a8:	f800283a 	ret
   156ac:	100ad27a 	srli	r5,r2,9
   156b0:	00c00104 	movi	r3,4
   156b4:	19404a36 	bltu	r3,r5,157e0 <_free_r+0x240>
   156b8:	100ad1ba 	srli	r5,r2,6
   156bc:	28c00e44 	addi	r3,r5,57
   156c0:	18c7883a 	add	r3,r3,r3
   156c4:	29400e04 	addi	r5,r5,56
   156c8:	18c7883a 	add	r3,r3,r3
   156cc:	18c7883a 	add	r3,r3,r3
   156d0:	1909883a 	add	r4,r3,r4
   156d4:	20c00017 	ldw	r3,0(r4)
   156d8:	01c000b4 	movhi	r7,2
   156dc:	213ffe04 	addi	r4,r4,-8
   156e0:	39f35604 	addi	r7,r7,-12968
   156e4:	20c04426 	beq	r4,r3,157f8 <_free_r+0x258>
   156e8:	01ffff04 	movi	r7,-4
   156ec:	19400117 	ldw	r5,4(r3)
   156f0:	29ca703a 	and	r5,r5,r7
   156f4:	1140022e 	bgeu	r2,r5,15700 <_free_r+0x160>
   156f8:	18c00217 	ldw	r3,8(r3)
   156fc:	20fffb1e 	bne	r4,r3,156ec <_gp+0xffff0490>
   15700:	19000317 	ldw	r4,12(r3)
   15704:	31000315 	stw	r4,12(r6)
   15708:	30c00215 	stw	r3,8(r6)
   1570c:	21800215 	stw	r6,8(r4)
   15710:	19800315 	stw	r6,12(r3)
   15714:	003fde06 	br	15690 <_gp+0xffff0434>
   15718:	29c00217 	ldw	r7,8(r5)
   1571c:	10c5883a 	add	r2,r2,r3
   15720:	00c000b4 	movhi	r3,2
   15724:	18f35804 	addi	r3,r3,-12960
   15728:	38c03b26 	beq	r7,r3,15818 <_free_r+0x278>
   1572c:	2a000317 	ldw	r8,12(r5)
   15730:	11400054 	ori	r5,r2,1
   15734:	3087883a 	add	r3,r6,r2
   15738:	3a000315 	stw	r8,12(r7)
   1573c:	41c00215 	stw	r7,8(r8)
   15740:	31400115 	stw	r5,4(r6)
   15744:	18800015 	stw	r2,0(r3)
   15748:	003fbd06 	br	15640 <_gp+0xffff03e4>
   1574c:	39c0004c 	andi	r7,r7,1
   15750:	10c5883a 	add	r2,r2,r3
   15754:	3800071e 	bne	r7,zero,15774 <_free_r+0x1d4>
   15758:	81fffe17 	ldw	r7,-8(r16)
   1575c:	31cdc83a 	sub	r6,r6,r7
   15760:	30c00317 	ldw	r3,12(r6)
   15764:	31400217 	ldw	r5,8(r6)
   15768:	11c5883a 	add	r2,r2,r7
   1576c:	28c00315 	stw	r3,12(r5)
   15770:	19400215 	stw	r5,8(r3)
   15774:	10c00054 	ori	r3,r2,1
   15778:	30c00115 	stw	r3,4(r6)
   1577c:	00c000b4 	movhi	r3,2
   15780:	18f49b04 	addi	r3,r3,-11668
   15784:	18c00017 	ldw	r3,0(r3)
   15788:	21800215 	stw	r6,8(r4)
   1578c:	10ffc036 	bltu	r2,r3,15690 <_gp+0xffff0434>
   15790:	008000b4 	movhi	r2,2
   15794:	10b70d04 	addi	r2,r2,-9164
   15798:	11400017 	ldw	r5,0(r2)
   1579c:	8809883a 	mov	r4,r17
   157a0:	001547c0 	call	1547c <_malloc_trim_r>
   157a4:	003fba06 	br	15690 <_gp+0xffff0434>
   157a8:	28c9883a 	add	r4,r5,r3
   157ac:	21000117 	ldw	r4,4(r4)
   157b0:	2100004c 	andi	r4,r4,1
   157b4:	2000391e 	bne	r4,zero,1589c <_free_r+0x2fc>
   157b8:	29c00217 	ldw	r7,8(r5)
   157bc:	29000317 	ldw	r4,12(r5)
   157c0:	1885883a 	add	r2,r3,r2
   157c4:	10c00054 	ori	r3,r2,1
   157c8:	39000315 	stw	r4,12(r7)
   157cc:	21c00215 	stw	r7,8(r4)
   157d0:	30c00115 	stw	r3,4(r6)
   157d4:	308d883a 	add	r6,r6,r2
   157d8:	30800015 	stw	r2,0(r6)
   157dc:	003fac06 	br	15690 <_gp+0xffff0434>
   157e0:	00c00504 	movi	r3,20
   157e4:	19401536 	bltu	r3,r5,1583c <_free_r+0x29c>
   157e8:	28c01704 	addi	r3,r5,92
   157ec:	18c7883a 	add	r3,r3,r3
   157f0:	294016c4 	addi	r5,r5,91
   157f4:	003fb406 	br	156c8 <_gp+0xffff046c>
   157f8:	280bd0ba 	srai	r5,r5,2
   157fc:	00c00044 	movi	r3,1
   15800:	38800117 	ldw	r2,4(r7)
   15804:	194a983a 	sll	r5,r3,r5
   15808:	2007883a 	mov	r3,r4
   1580c:	2884b03a 	or	r2,r5,r2
   15810:	38800115 	stw	r2,4(r7)
   15814:	003fbb06 	br	15704 <_gp+0xffff04a8>
   15818:	21800515 	stw	r6,20(r4)
   1581c:	21800415 	stw	r6,16(r4)
   15820:	10c00054 	ori	r3,r2,1
   15824:	31c00315 	stw	r7,12(r6)
   15828:	31c00215 	stw	r7,8(r6)
   1582c:	30c00115 	stw	r3,4(r6)
   15830:	308d883a 	add	r6,r6,r2
   15834:	30800015 	stw	r2,0(r6)
   15838:	003f9506 	br	15690 <_gp+0xffff0434>
   1583c:	00c01504 	movi	r3,84
   15840:	19400536 	bltu	r3,r5,15858 <_free_r+0x2b8>
   15844:	100ad33a 	srli	r5,r2,12
   15848:	28c01bc4 	addi	r3,r5,111
   1584c:	18c7883a 	add	r3,r3,r3
   15850:	29401b84 	addi	r5,r5,110
   15854:	003f9c06 	br	156c8 <_gp+0xffff046c>
   15858:	00c05504 	movi	r3,340
   1585c:	19400536 	bltu	r3,r5,15874 <_free_r+0x2d4>
   15860:	100ad3fa 	srli	r5,r2,15
   15864:	28c01e04 	addi	r3,r5,120
   15868:	18c7883a 	add	r3,r3,r3
   1586c:	29401dc4 	addi	r5,r5,119
   15870:	003f9506 	br	156c8 <_gp+0xffff046c>
   15874:	00c15504 	movi	r3,1364
   15878:	19400536 	bltu	r3,r5,15890 <_free_r+0x2f0>
   1587c:	100ad4ba 	srli	r5,r2,18
   15880:	28c01f44 	addi	r3,r5,125
   15884:	18c7883a 	add	r3,r3,r3
   15888:	29401f04 	addi	r5,r5,124
   1588c:	003f8e06 	br	156c8 <_gp+0xffff046c>
   15890:	00c03f84 	movi	r3,254
   15894:	01401f84 	movi	r5,126
   15898:	003f8b06 	br	156c8 <_gp+0xffff046c>
   1589c:	10c00054 	ori	r3,r2,1
   158a0:	30c00115 	stw	r3,4(r6)
   158a4:	308d883a 	add	r6,r6,r2
   158a8:	30800015 	stw	r2,0(r6)
   158ac:	003f7806 	br	15690 <_gp+0xffff0434>

000158b0 <_setlocale_r>:
   158b0:	30001b26 	beq	r6,zero,15920 <_setlocale_r+0x70>
   158b4:	014000b4 	movhi	r5,2
   158b8:	defffe04 	addi	sp,sp,-8
   158bc:	2971b004 	addi	r5,r5,-14656
   158c0:	3009883a 	mov	r4,r6
   158c4:	dc000015 	stw	r16,0(sp)
   158c8:	dfc00115 	stw	ra,4(sp)
   158cc:	3021883a 	mov	r16,r6
   158d0:	00118340 	call	11834 <strcmp>
   158d4:	1000061e 	bne	r2,zero,158f0 <_setlocale_r+0x40>
   158d8:	008000b4 	movhi	r2,2
   158dc:	10b19204 	addi	r2,r2,-14776
   158e0:	dfc00117 	ldw	ra,4(sp)
   158e4:	dc000017 	ldw	r16,0(sp)
   158e8:	dec00204 	addi	sp,sp,8
   158ec:	f800283a 	ret
   158f0:	014000b4 	movhi	r5,2
   158f4:	29719204 	addi	r5,r5,-14776
   158f8:	8009883a 	mov	r4,r16
   158fc:	00118340 	call	11834 <strcmp>
   15900:	103ff526 	beq	r2,zero,158d8 <_gp+0xffff067c>
   15904:	014000b4 	movhi	r5,2
   15908:	29716704 	addi	r5,r5,-14948
   1590c:	8009883a 	mov	r4,r16
   15910:	00118340 	call	11834 <strcmp>
   15914:	103ff026 	beq	r2,zero,158d8 <_gp+0xffff067c>
   15918:	0005883a 	mov	r2,zero
   1591c:	003ff006 	br	158e0 <_gp+0xffff0684>
   15920:	008000b4 	movhi	r2,2
   15924:	10b19204 	addi	r2,r2,-14776
   15928:	f800283a 	ret

0001592c <__locale_charset>:
   1592c:	008000b4 	movhi	r2,2
   15930:	10b46004 	addi	r2,r2,-11904
   15934:	f800283a 	ret

00015938 <__locale_mb_cur_max>:
   15938:	008000b4 	movhi	r2,2
   1593c:	10b49c04 	addi	r2,r2,-11664
   15940:	10800017 	ldw	r2,0(r2)
   15944:	f800283a 	ret

00015948 <__locale_msgcharset>:
   15948:	008000b4 	movhi	r2,2
   1594c:	10b45804 	addi	r2,r2,-11936
   15950:	f800283a 	ret

00015954 <__locale_cjk_lang>:
   15954:	0005883a 	mov	r2,zero
   15958:	f800283a 	ret

0001595c <_localeconv_r>:
   1595c:	008000b4 	movhi	r2,2
   15960:	10b46804 	addi	r2,r2,-11872
   15964:	f800283a 	ret

00015968 <setlocale>:
   15968:	008000b4 	movhi	r2,2
   1596c:	10b49904 	addi	r2,r2,-11676
   15970:	280d883a 	mov	r6,r5
   15974:	200b883a 	mov	r5,r4
   15978:	11000017 	ldw	r4,0(r2)
   1597c:	00158b01 	jmpi	158b0 <_setlocale_r>

00015980 <localeconv>:
   15980:	008000b4 	movhi	r2,2
   15984:	10b46804 	addi	r2,r2,-11872
   15988:	f800283a 	ret

0001598c <memchr>:
   1598c:	208000cc 	andi	r2,r4,3
   15990:	280f883a 	mov	r7,r5
   15994:	10003426 	beq	r2,zero,15a68 <memchr+0xdc>
   15998:	30bfffc4 	addi	r2,r6,-1
   1599c:	30001a26 	beq	r6,zero,15a08 <memchr+0x7c>
   159a0:	20c00003 	ldbu	r3,0(r4)
   159a4:	29803fcc 	andi	r6,r5,255
   159a8:	30c0051e 	bne	r6,r3,159c0 <memchr+0x34>
   159ac:	00001806 	br	15a10 <memchr+0x84>
   159b0:	10001526 	beq	r2,zero,15a08 <memchr+0x7c>
   159b4:	20c00003 	ldbu	r3,0(r4)
   159b8:	10bfffc4 	addi	r2,r2,-1
   159bc:	30c01426 	beq	r6,r3,15a10 <memchr+0x84>
   159c0:	21000044 	addi	r4,r4,1
   159c4:	20c000cc 	andi	r3,r4,3
   159c8:	183ff91e 	bne	r3,zero,159b0 <_gp+0xffff0754>
   159cc:	020000c4 	movi	r8,3
   159d0:	40801136 	bltu	r8,r2,15a18 <memchr+0x8c>
   159d4:	10000c26 	beq	r2,zero,15a08 <memchr+0x7c>
   159d8:	20c00003 	ldbu	r3,0(r4)
   159dc:	29403fcc 	andi	r5,r5,255
   159e0:	28c00b26 	beq	r5,r3,15a10 <memchr+0x84>
   159e4:	20c00044 	addi	r3,r4,1
   159e8:	39803fcc 	andi	r6,r7,255
   159ec:	2089883a 	add	r4,r4,r2
   159f0:	00000306 	br	15a00 <memchr+0x74>
   159f4:	18c00044 	addi	r3,r3,1
   159f8:	197fffc3 	ldbu	r5,-1(r3)
   159fc:	31400526 	beq	r6,r5,15a14 <memchr+0x88>
   15a00:	1805883a 	mov	r2,r3
   15a04:	20fffb1e 	bne	r4,r3,159f4 <_gp+0xffff0798>
   15a08:	0005883a 	mov	r2,zero
   15a0c:	f800283a 	ret
   15a10:	2005883a 	mov	r2,r4
   15a14:	f800283a 	ret
   15a18:	28c03fcc 	andi	r3,r5,255
   15a1c:	1812923a 	slli	r9,r3,8
   15a20:	02ffbff4 	movhi	r11,65279
   15a24:	02a02074 	movhi	r10,32897
   15a28:	48d2b03a 	or	r9,r9,r3
   15a2c:	4806943a 	slli	r3,r9,16
   15a30:	5affbfc4 	addi	r11,r11,-257
   15a34:	52a02004 	addi	r10,r10,-32640
   15a38:	48d2b03a 	or	r9,r9,r3
   15a3c:	20c00017 	ldw	r3,0(r4)
   15a40:	48c6f03a 	xor	r3,r9,r3
   15a44:	1acd883a 	add	r6,r3,r11
   15a48:	00c6303a 	nor	r3,zero,r3
   15a4c:	30c6703a 	and	r3,r6,r3
   15a50:	1a86703a 	and	r3,r3,r10
   15a54:	183fe01e 	bne	r3,zero,159d8 <_gp+0xffff077c>
   15a58:	10bfff04 	addi	r2,r2,-4
   15a5c:	21000104 	addi	r4,r4,4
   15a60:	40bff636 	bltu	r8,r2,15a3c <_gp+0xffff07e0>
   15a64:	003fdb06 	br	159d4 <_gp+0xffff0778>
   15a68:	3005883a 	mov	r2,r6
   15a6c:	003fd706 	br	159cc <_gp+0xffff0770>

00015a70 <memcpy>:
   15a70:	defffd04 	addi	sp,sp,-12
   15a74:	dfc00215 	stw	ra,8(sp)
   15a78:	dc400115 	stw	r17,4(sp)
   15a7c:	dc000015 	stw	r16,0(sp)
   15a80:	00c003c4 	movi	r3,15
   15a84:	2005883a 	mov	r2,r4
   15a88:	1980452e 	bgeu	r3,r6,15ba0 <memcpy+0x130>
   15a8c:	2906b03a 	or	r3,r5,r4
   15a90:	18c000cc 	andi	r3,r3,3
   15a94:	1800441e 	bne	r3,zero,15ba8 <memcpy+0x138>
   15a98:	347ffc04 	addi	r17,r6,-16
   15a9c:	8822d13a 	srli	r17,r17,4
   15aa0:	28c00104 	addi	r3,r5,4
   15aa4:	23400104 	addi	r13,r4,4
   15aa8:	8820913a 	slli	r16,r17,4
   15aac:	2b000204 	addi	r12,r5,8
   15ab0:	22c00204 	addi	r11,r4,8
   15ab4:	84000504 	addi	r16,r16,20
   15ab8:	2a800304 	addi	r10,r5,12
   15abc:	22400304 	addi	r9,r4,12
   15ac0:	2c21883a 	add	r16,r5,r16
   15ac4:	2811883a 	mov	r8,r5
   15ac8:	200f883a 	mov	r7,r4
   15acc:	41000017 	ldw	r4,0(r8)
   15ad0:	1fc00017 	ldw	ra,0(r3)
   15ad4:	63c00017 	ldw	r15,0(r12)
   15ad8:	39000015 	stw	r4,0(r7)
   15adc:	53800017 	ldw	r14,0(r10)
   15ae0:	6fc00015 	stw	ra,0(r13)
   15ae4:	5bc00015 	stw	r15,0(r11)
   15ae8:	4b800015 	stw	r14,0(r9)
   15aec:	18c00404 	addi	r3,r3,16
   15af0:	39c00404 	addi	r7,r7,16
   15af4:	42000404 	addi	r8,r8,16
   15af8:	6b400404 	addi	r13,r13,16
   15afc:	63000404 	addi	r12,r12,16
   15b00:	5ac00404 	addi	r11,r11,16
   15b04:	52800404 	addi	r10,r10,16
   15b08:	4a400404 	addi	r9,r9,16
   15b0c:	1c3fef1e 	bne	r3,r16,15acc <_gp+0xffff0870>
   15b10:	89c00044 	addi	r7,r17,1
   15b14:	380e913a 	slli	r7,r7,4
   15b18:	310003cc 	andi	r4,r6,15
   15b1c:	02c000c4 	movi	r11,3
   15b20:	11c7883a 	add	r3,r2,r7
   15b24:	29cb883a 	add	r5,r5,r7
   15b28:	5900212e 	bgeu	r11,r4,15bb0 <memcpy+0x140>
   15b2c:	1813883a 	mov	r9,r3
   15b30:	2811883a 	mov	r8,r5
   15b34:	200f883a 	mov	r7,r4
   15b38:	42800017 	ldw	r10,0(r8)
   15b3c:	4a400104 	addi	r9,r9,4
   15b40:	39ffff04 	addi	r7,r7,-4
   15b44:	4abfff15 	stw	r10,-4(r9)
   15b48:	42000104 	addi	r8,r8,4
   15b4c:	59fffa36 	bltu	r11,r7,15b38 <_gp+0xffff08dc>
   15b50:	213fff04 	addi	r4,r4,-4
   15b54:	2008d0ba 	srli	r4,r4,2
   15b58:	318000cc 	andi	r6,r6,3
   15b5c:	21000044 	addi	r4,r4,1
   15b60:	2109883a 	add	r4,r4,r4
   15b64:	2109883a 	add	r4,r4,r4
   15b68:	1907883a 	add	r3,r3,r4
   15b6c:	290b883a 	add	r5,r5,r4
   15b70:	30000626 	beq	r6,zero,15b8c <memcpy+0x11c>
   15b74:	198d883a 	add	r6,r3,r6
   15b78:	29c00003 	ldbu	r7,0(r5)
   15b7c:	18c00044 	addi	r3,r3,1
   15b80:	29400044 	addi	r5,r5,1
   15b84:	19ffffc5 	stb	r7,-1(r3)
   15b88:	19bffb1e 	bne	r3,r6,15b78 <_gp+0xffff091c>
   15b8c:	dfc00217 	ldw	ra,8(sp)
   15b90:	dc400117 	ldw	r17,4(sp)
   15b94:	dc000017 	ldw	r16,0(sp)
   15b98:	dec00304 	addi	sp,sp,12
   15b9c:	f800283a 	ret
   15ba0:	2007883a 	mov	r3,r4
   15ba4:	003ff206 	br	15b70 <_gp+0xffff0914>
   15ba8:	2007883a 	mov	r3,r4
   15bac:	003ff106 	br	15b74 <_gp+0xffff0918>
   15bb0:	200d883a 	mov	r6,r4
   15bb4:	003fee06 	br	15b70 <_gp+0xffff0914>

00015bb8 <_Balloc>:
   15bb8:	20801317 	ldw	r2,76(r4)
   15bbc:	defffc04 	addi	sp,sp,-16
   15bc0:	dc400115 	stw	r17,4(sp)
   15bc4:	dc000015 	stw	r16,0(sp)
   15bc8:	dfc00315 	stw	ra,12(sp)
   15bcc:	dc800215 	stw	r18,8(sp)
   15bd0:	2023883a 	mov	r17,r4
   15bd4:	2821883a 	mov	r16,r5
   15bd8:	10000f26 	beq	r2,zero,15c18 <_Balloc+0x60>
   15bdc:	8407883a 	add	r3,r16,r16
   15be0:	18c7883a 	add	r3,r3,r3
   15be4:	10c7883a 	add	r3,r2,r3
   15be8:	18800017 	ldw	r2,0(r3)
   15bec:	10001126 	beq	r2,zero,15c34 <_Balloc+0x7c>
   15bf0:	11000017 	ldw	r4,0(r2)
   15bf4:	19000015 	stw	r4,0(r3)
   15bf8:	10000415 	stw	zero,16(r2)
   15bfc:	10000315 	stw	zero,12(r2)
   15c00:	dfc00317 	ldw	ra,12(sp)
   15c04:	dc800217 	ldw	r18,8(sp)
   15c08:	dc400117 	ldw	r17,4(sp)
   15c0c:	dc000017 	ldw	r16,0(sp)
   15c10:	dec00404 	addi	sp,sp,16
   15c14:	f800283a 	ret
   15c18:	01800844 	movi	r6,33
   15c1c:	01400104 	movi	r5,4
   15c20:	00182ec0 	call	182ec <_calloc_r>
   15c24:	88801315 	stw	r2,76(r17)
   15c28:	103fec1e 	bne	r2,zero,15bdc <_gp+0xffff0980>
   15c2c:	0005883a 	mov	r2,zero
   15c30:	003ff306 	br	15c00 <_gp+0xffff09a4>
   15c34:	01400044 	movi	r5,1
   15c38:	2c24983a 	sll	r18,r5,r16
   15c3c:	8809883a 	mov	r4,r17
   15c40:	91800144 	addi	r6,r18,5
   15c44:	318d883a 	add	r6,r6,r6
   15c48:	318d883a 	add	r6,r6,r6
   15c4c:	00182ec0 	call	182ec <_calloc_r>
   15c50:	103ff626 	beq	r2,zero,15c2c <_gp+0xffff09d0>
   15c54:	14000115 	stw	r16,4(r2)
   15c58:	14800215 	stw	r18,8(r2)
   15c5c:	003fe606 	br	15bf8 <_gp+0xffff099c>

00015c60 <_Bfree>:
   15c60:	28000826 	beq	r5,zero,15c84 <_Bfree+0x24>
   15c64:	28c00117 	ldw	r3,4(r5)
   15c68:	20801317 	ldw	r2,76(r4)
   15c6c:	18c7883a 	add	r3,r3,r3
   15c70:	18c7883a 	add	r3,r3,r3
   15c74:	10c5883a 	add	r2,r2,r3
   15c78:	10c00017 	ldw	r3,0(r2)
   15c7c:	28c00015 	stw	r3,0(r5)
   15c80:	11400015 	stw	r5,0(r2)
   15c84:	f800283a 	ret

00015c88 <__multadd>:
   15c88:	defff704 	addi	sp,sp,-36
   15c8c:	dc800215 	stw	r18,8(sp)
   15c90:	2c800417 	ldw	r18,16(r5)
   15c94:	dd800615 	stw	r22,24(sp)
   15c98:	dd400515 	stw	r21,20(sp)
   15c9c:	dd000415 	stw	r20,16(sp)
   15ca0:	dcc00315 	stw	r19,12(sp)
   15ca4:	dc400115 	stw	r17,4(sp)
   15ca8:	dc000015 	stw	r16,0(sp)
   15cac:	dfc00815 	stw	ra,32(sp)
   15cb0:	ddc00715 	stw	r23,28(sp)
   15cb4:	2827883a 	mov	r19,r5
   15cb8:	2029883a 	mov	r20,r4
   15cbc:	3023883a 	mov	r17,r6
   15cc0:	3821883a 	mov	r16,r7
   15cc4:	2d400504 	addi	r21,r5,20
   15cc8:	002d883a 	mov	r22,zero
   15ccc:	adc00017 	ldw	r23,0(r21)
   15cd0:	880b883a 	mov	r5,r17
   15cd4:	ad400104 	addi	r21,r21,4
   15cd8:	b93fffcc 	andi	r4,r23,65535
   15cdc:	00196480 	call	19648 <__mulsi3>
   15ce0:	b808d43a 	srli	r4,r23,16
   15ce4:	880b883a 	mov	r5,r17
   15ce8:	1421883a 	add	r16,r2,r16
   15cec:	00196480 	call	19648 <__mulsi3>
   15cf0:	800ed43a 	srli	r7,r16,16
   15cf4:	80ffffcc 	andi	r3,r16,65535
   15cf8:	b5800044 	addi	r22,r22,1
   15cfc:	11c5883a 	add	r2,r2,r7
   15d00:	100e943a 	slli	r7,r2,16
   15d04:	1020d43a 	srli	r16,r2,16
   15d08:	38c7883a 	add	r3,r7,r3
   15d0c:	a8ffff15 	stw	r3,-4(r21)
   15d10:	b4bfee16 	blt	r22,r18,15ccc <_gp+0xffff0a70>
   15d14:	80000926 	beq	r16,zero,15d3c <__multadd+0xb4>
   15d18:	98800217 	ldw	r2,8(r19)
   15d1c:	9080130e 	bge	r18,r2,15d6c <__multadd+0xe4>
   15d20:	90800144 	addi	r2,r18,5
   15d24:	1085883a 	add	r2,r2,r2
   15d28:	1085883a 	add	r2,r2,r2
   15d2c:	9885883a 	add	r2,r19,r2
   15d30:	14000015 	stw	r16,0(r2)
   15d34:	94800044 	addi	r18,r18,1
   15d38:	9c800415 	stw	r18,16(r19)
   15d3c:	9805883a 	mov	r2,r19
   15d40:	dfc00817 	ldw	ra,32(sp)
   15d44:	ddc00717 	ldw	r23,28(sp)
   15d48:	dd800617 	ldw	r22,24(sp)
   15d4c:	dd400517 	ldw	r21,20(sp)
   15d50:	dd000417 	ldw	r20,16(sp)
   15d54:	dcc00317 	ldw	r19,12(sp)
   15d58:	dc800217 	ldw	r18,8(sp)
   15d5c:	dc400117 	ldw	r17,4(sp)
   15d60:	dc000017 	ldw	r16,0(sp)
   15d64:	dec00904 	addi	sp,sp,36
   15d68:	f800283a 	ret
   15d6c:	99400117 	ldw	r5,4(r19)
   15d70:	a009883a 	mov	r4,r20
   15d74:	29400044 	addi	r5,r5,1
   15d78:	0015bb80 	call	15bb8 <_Balloc>
   15d7c:	99800417 	ldw	r6,16(r19)
   15d80:	99400304 	addi	r5,r19,12
   15d84:	11000304 	addi	r4,r2,12
   15d88:	31800084 	addi	r6,r6,2
   15d8c:	318d883a 	add	r6,r6,r6
   15d90:	318d883a 	add	r6,r6,r6
   15d94:	1023883a 	mov	r17,r2
   15d98:	0015a700 	call	15a70 <memcpy>
   15d9c:	98000a26 	beq	r19,zero,15dc8 <__multadd+0x140>
   15da0:	98c00117 	ldw	r3,4(r19)
   15da4:	a0801317 	ldw	r2,76(r20)
   15da8:	18c7883a 	add	r3,r3,r3
   15dac:	18c7883a 	add	r3,r3,r3
   15db0:	10c5883a 	add	r2,r2,r3
   15db4:	10c00017 	ldw	r3,0(r2)
   15db8:	98c00015 	stw	r3,0(r19)
   15dbc:	14c00015 	stw	r19,0(r2)
   15dc0:	8827883a 	mov	r19,r17
   15dc4:	003fd606 	br	15d20 <_gp+0xffff0ac4>
   15dc8:	8827883a 	mov	r19,r17
   15dcc:	003fd406 	br	15d20 <_gp+0xffff0ac4>

00015dd0 <__s2b>:
   15dd0:	defff904 	addi	sp,sp,-28
   15dd4:	dc400115 	stw	r17,4(sp)
   15dd8:	dc000015 	stw	r16,0(sp)
   15ddc:	2023883a 	mov	r17,r4
   15de0:	2821883a 	mov	r16,r5
   15de4:	39000204 	addi	r4,r7,8
   15de8:	01400244 	movi	r5,9
   15dec:	dcc00315 	stw	r19,12(sp)
   15df0:	dc800215 	stw	r18,8(sp)
   15df4:	dfc00615 	stw	ra,24(sp)
   15df8:	dd400515 	stw	r21,20(sp)
   15dfc:	dd000415 	stw	r20,16(sp)
   15e00:	3825883a 	mov	r18,r7
   15e04:	3027883a 	mov	r19,r6
   15e08:	0010bf40 	call	10bf4 <__divsi3>
   15e0c:	00c00044 	movi	r3,1
   15e10:	000b883a 	mov	r5,zero
   15e14:	1880030e 	bge	r3,r2,15e24 <__s2b+0x54>
   15e18:	18c7883a 	add	r3,r3,r3
   15e1c:	29400044 	addi	r5,r5,1
   15e20:	18bffd16 	blt	r3,r2,15e18 <_gp+0xffff0bbc>
   15e24:	8809883a 	mov	r4,r17
   15e28:	0015bb80 	call	15bb8 <_Balloc>
   15e2c:	d8c00717 	ldw	r3,28(sp)
   15e30:	10c00515 	stw	r3,20(r2)
   15e34:	00c00044 	movi	r3,1
   15e38:	10c00415 	stw	r3,16(r2)
   15e3c:	00c00244 	movi	r3,9
   15e40:	1cc0210e 	bge	r3,r19,15ec8 <__s2b+0xf8>
   15e44:	80eb883a 	add	r21,r16,r3
   15e48:	a829883a 	mov	r20,r21
   15e4c:	84e1883a 	add	r16,r16,r19
   15e50:	a1c00007 	ldb	r7,0(r20)
   15e54:	01800284 	movi	r6,10
   15e58:	a5000044 	addi	r20,r20,1
   15e5c:	100b883a 	mov	r5,r2
   15e60:	39fff404 	addi	r7,r7,-48
   15e64:	8809883a 	mov	r4,r17
   15e68:	0015c880 	call	15c88 <__multadd>
   15e6c:	a43ff81e 	bne	r20,r16,15e50 <_gp+0xffff0bf4>
   15e70:	ace1883a 	add	r16,r21,r19
   15e74:	843ffe04 	addi	r16,r16,-8
   15e78:	9c800a0e 	bge	r19,r18,15ea4 <__s2b+0xd4>
   15e7c:	94e5c83a 	sub	r18,r18,r19
   15e80:	84a5883a 	add	r18,r16,r18
   15e84:	81c00007 	ldb	r7,0(r16)
   15e88:	01800284 	movi	r6,10
   15e8c:	84000044 	addi	r16,r16,1
   15e90:	100b883a 	mov	r5,r2
   15e94:	39fff404 	addi	r7,r7,-48
   15e98:	8809883a 	mov	r4,r17
   15e9c:	0015c880 	call	15c88 <__multadd>
   15ea0:	84bff81e 	bne	r16,r18,15e84 <_gp+0xffff0c28>
   15ea4:	dfc00617 	ldw	ra,24(sp)
   15ea8:	dd400517 	ldw	r21,20(sp)
   15eac:	dd000417 	ldw	r20,16(sp)
   15eb0:	dcc00317 	ldw	r19,12(sp)
   15eb4:	dc800217 	ldw	r18,8(sp)
   15eb8:	dc400117 	ldw	r17,4(sp)
   15ebc:	dc000017 	ldw	r16,0(sp)
   15ec0:	dec00704 	addi	sp,sp,28
   15ec4:	f800283a 	ret
   15ec8:	84000284 	addi	r16,r16,10
   15ecc:	1827883a 	mov	r19,r3
   15ed0:	003fe906 	br	15e78 <_gp+0xffff0c1c>

00015ed4 <__hi0bits>:
   15ed4:	20bfffec 	andhi	r2,r4,65535
   15ed8:	1000141e 	bne	r2,zero,15f2c <__hi0bits+0x58>
   15edc:	2008943a 	slli	r4,r4,16
   15ee0:	00800404 	movi	r2,16
   15ee4:	20ffc02c 	andhi	r3,r4,65280
   15ee8:	1800021e 	bne	r3,zero,15ef4 <__hi0bits+0x20>
   15eec:	2008923a 	slli	r4,r4,8
   15ef0:	10800204 	addi	r2,r2,8
   15ef4:	20fc002c 	andhi	r3,r4,61440
   15ef8:	1800021e 	bne	r3,zero,15f04 <__hi0bits+0x30>
   15efc:	2008913a 	slli	r4,r4,4
   15f00:	10800104 	addi	r2,r2,4
   15f04:	20f0002c 	andhi	r3,r4,49152
   15f08:	1800031e 	bne	r3,zero,15f18 <__hi0bits+0x44>
   15f0c:	2109883a 	add	r4,r4,r4
   15f10:	10800084 	addi	r2,r2,2
   15f14:	2109883a 	add	r4,r4,r4
   15f18:	20000316 	blt	r4,zero,15f28 <__hi0bits+0x54>
   15f1c:	2110002c 	andhi	r4,r4,16384
   15f20:	2000041e 	bne	r4,zero,15f34 <__hi0bits+0x60>
   15f24:	00800804 	movi	r2,32
   15f28:	f800283a 	ret
   15f2c:	0005883a 	mov	r2,zero
   15f30:	003fec06 	br	15ee4 <_gp+0xffff0c88>
   15f34:	10800044 	addi	r2,r2,1
   15f38:	f800283a 	ret

00015f3c <__lo0bits>:
   15f3c:	20c00017 	ldw	r3,0(r4)
   15f40:	188001cc 	andi	r2,r3,7
   15f44:	10000826 	beq	r2,zero,15f68 <__lo0bits+0x2c>
   15f48:	1880004c 	andi	r2,r3,1
   15f4c:	1000211e 	bne	r2,zero,15fd4 <__lo0bits+0x98>
   15f50:	1880008c 	andi	r2,r3,2
   15f54:	1000211e 	bne	r2,zero,15fdc <__lo0bits+0xa0>
   15f58:	1806d0ba 	srli	r3,r3,2
   15f5c:	00800084 	movi	r2,2
   15f60:	20c00015 	stw	r3,0(r4)
   15f64:	f800283a 	ret
   15f68:	18bfffcc 	andi	r2,r3,65535
   15f6c:	10001326 	beq	r2,zero,15fbc <__lo0bits+0x80>
   15f70:	0005883a 	mov	r2,zero
   15f74:	19403fcc 	andi	r5,r3,255
   15f78:	2800021e 	bne	r5,zero,15f84 <__lo0bits+0x48>
   15f7c:	1806d23a 	srli	r3,r3,8
   15f80:	10800204 	addi	r2,r2,8
   15f84:	194003cc 	andi	r5,r3,15
   15f88:	2800021e 	bne	r5,zero,15f94 <__lo0bits+0x58>
   15f8c:	1806d13a 	srli	r3,r3,4
   15f90:	10800104 	addi	r2,r2,4
   15f94:	194000cc 	andi	r5,r3,3
   15f98:	2800021e 	bne	r5,zero,15fa4 <__lo0bits+0x68>
   15f9c:	1806d0ba 	srli	r3,r3,2
   15fa0:	10800084 	addi	r2,r2,2
   15fa4:	1940004c 	andi	r5,r3,1
   15fa8:	2800081e 	bne	r5,zero,15fcc <__lo0bits+0x90>
   15fac:	1806d07a 	srli	r3,r3,1
   15fb0:	1800051e 	bne	r3,zero,15fc8 <__lo0bits+0x8c>
   15fb4:	00800804 	movi	r2,32
   15fb8:	f800283a 	ret
   15fbc:	1806d43a 	srli	r3,r3,16
   15fc0:	00800404 	movi	r2,16
   15fc4:	003feb06 	br	15f74 <_gp+0xffff0d18>
   15fc8:	10800044 	addi	r2,r2,1
   15fcc:	20c00015 	stw	r3,0(r4)
   15fd0:	f800283a 	ret
   15fd4:	0005883a 	mov	r2,zero
   15fd8:	f800283a 	ret
   15fdc:	1806d07a 	srli	r3,r3,1
   15fe0:	00800044 	movi	r2,1
   15fe4:	20c00015 	stw	r3,0(r4)
   15fe8:	f800283a 	ret

00015fec <__i2b>:
   15fec:	defffd04 	addi	sp,sp,-12
   15ff0:	dc000015 	stw	r16,0(sp)
   15ff4:	04000044 	movi	r16,1
   15ff8:	dc400115 	stw	r17,4(sp)
   15ffc:	2823883a 	mov	r17,r5
   16000:	800b883a 	mov	r5,r16
   16004:	dfc00215 	stw	ra,8(sp)
   16008:	0015bb80 	call	15bb8 <_Balloc>
   1600c:	14400515 	stw	r17,20(r2)
   16010:	14000415 	stw	r16,16(r2)
   16014:	dfc00217 	ldw	ra,8(sp)
   16018:	dc400117 	ldw	r17,4(sp)
   1601c:	dc000017 	ldw	r16,0(sp)
   16020:	dec00304 	addi	sp,sp,12
   16024:	f800283a 	ret

00016028 <__multiply>:
   16028:	deffef04 	addi	sp,sp,-68
   1602c:	dc400815 	stw	r17,32(sp)
   16030:	dc000715 	stw	r16,28(sp)
   16034:	34400417 	ldw	r17,16(r6)
   16038:	2c000417 	ldw	r16,16(r5)
   1603c:	dd800d15 	stw	r22,52(sp)
   16040:	dc800915 	stw	r18,36(sp)
   16044:	dfc01015 	stw	ra,64(sp)
   16048:	df000f15 	stw	fp,60(sp)
   1604c:	ddc00e15 	stw	r23,56(sp)
   16050:	dd400c15 	stw	r21,48(sp)
   16054:	dd000b15 	stw	r20,44(sp)
   16058:	dcc00a15 	stw	r19,40(sp)
   1605c:	2825883a 	mov	r18,r5
   16060:	302d883a 	mov	r22,r6
   16064:	8440050e 	bge	r16,r17,1607c <__multiply+0x54>
   16068:	8007883a 	mov	r3,r16
   1606c:	3025883a 	mov	r18,r6
   16070:	8821883a 	mov	r16,r17
   16074:	282d883a 	mov	r22,r5
   16078:	1823883a 	mov	r17,r3
   1607c:	90800217 	ldw	r2,8(r18)
   16080:	8447883a 	add	r3,r16,r17
   16084:	d8c00215 	stw	r3,8(sp)
   16088:	91400117 	ldw	r5,4(r18)
   1608c:	10c0010e 	bge	r2,r3,16094 <__multiply+0x6c>
   16090:	29400044 	addi	r5,r5,1
   16094:	0015bb80 	call	15bb8 <_Balloc>
   16098:	d8c00217 	ldw	r3,8(sp)
   1609c:	d8800615 	stw	r2,24(sp)
   160a0:	18eb883a 	add	r21,r3,r3
   160a4:	ad6b883a 	add	r21,r21,r21
   160a8:	10c00504 	addi	r3,r2,20
   160ac:	1d6b883a 	add	r21,r3,r21
   160b0:	d8c00115 	stw	r3,4(sp)
   160b4:	dd400315 	stw	r21,12(sp)
   160b8:	1805883a 	mov	r2,r3
   160bc:	1d40042e 	bgeu	r3,r21,160d0 <__multiply+0xa8>
   160c0:	d8c00317 	ldw	r3,12(sp)
   160c4:	10000015 	stw	zero,0(r2)
   160c8:	10800104 	addi	r2,r2,4
   160cc:	10fffc36 	bltu	r2,r3,160c0 <_gp+0xffff0e64>
   160d0:	8c63883a 	add	r17,r17,r17
   160d4:	b5800504 	addi	r22,r22,20
   160d8:	8c63883a 	add	r17,r17,r17
   160dc:	94800504 	addi	r18,r18,20
   160e0:	8421883a 	add	r16,r16,r16
   160e4:	b463883a 	add	r17,r22,r17
   160e8:	8421883a 	add	r16,r16,r16
   160ec:	dd800015 	stw	r22,0(sp)
   160f0:	dc800415 	stw	r18,16(sp)
   160f4:	dc400515 	stw	r17,20(sp)
   160f8:	9429883a 	add	r20,r18,r16
   160fc:	b4404f2e 	bgeu	r22,r17,1623c <__multiply+0x214>
   16100:	d8c00017 	ldw	r3,0(sp)
   16104:	1c800017 	ldw	r18,0(r3)
   16108:	947fffcc 	andi	r17,r18,65535
   1610c:	88001e26 	beq	r17,zero,16188 <__multiply+0x160>
   16110:	dd800117 	ldw	r22,4(sp)
   16114:	dd400417 	ldw	r21,16(sp)
   16118:	0027883a 	mov	r19,zero
   1611c:	ac800017 	ldw	r18,0(r21)
   16120:	b4000017 	ldw	r16,0(r22)
   16124:	880b883a 	mov	r5,r17
   16128:	913fffcc 	andi	r4,r18,65535
   1612c:	00196480 	call	19648 <__mulsi3>
   16130:	9008d43a 	srli	r4,r18,16
   16134:	84bfffcc 	andi	r18,r16,65535
   16138:	1485883a 	add	r2,r2,r18
   1613c:	14e5883a 	add	r18,r2,r19
   16140:	8020d43a 	srli	r16,r16,16
   16144:	9026d43a 	srli	r19,r18,16
   16148:	880b883a 	mov	r5,r17
   1614c:	00196480 	call	19648 <__mulsi3>
   16150:	1405883a 	add	r2,r2,r16
   16154:	14e1883a 	add	r16,r2,r19
   16158:	90ffffcc 	andi	r3,r18,65535
   1615c:	8024943a 	slli	r18,r16,16
   16160:	ad400104 	addi	r21,r21,4
   16164:	b005883a 	mov	r2,r22
   16168:	90c6b03a 	or	r3,r18,r3
   1616c:	b0c00015 	stw	r3,0(r22)
   16170:	8026d43a 	srli	r19,r16,16
   16174:	b5800104 	addi	r22,r22,4
   16178:	ad3fe836 	bltu	r21,r20,1611c <_gp+0xffff0ec0>
   1617c:	d8c00017 	ldw	r3,0(sp)
   16180:	14c00115 	stw	r19,4(r2)
   16184:	1c800017 	ldw	r18,0(r3)
   16188:	9024d43a 	srli	r18,r18,16
   1618c:	90002226 	beq	r18,zero,16218 <__multiply+0x1f0>
   16190:	d8c00117 	ldw	r3,4(sp)
   16194:	dd800417 	ldw	r22,16(sp)
   16198:	002f883a 	mov	r23,zero
   1619c:	1f000017 	ldw	fp,0(r3)
   161a0:	1823883a 	mov	r17,r3
   161a4:	182b883a 	mov	r21,r3
   161a8:	e021883a 	mov	r16,fp
   161ac:	00000106 	br	161b4 <__multiply+0x18c>
   161b0:	982b883a 	mov	r21,r19
   161b4:	b100000b 	ldhu	r4,0(r22)
   161b8:	8020d43a 	srli	r16,r16,16
   161bc:	900b883a 	mov	r5,r18
   161c0:	00196480 	call	19648 <__mulsi3>
   161c4:	1405883a 	add	r2,r2,r16
   161c8:	15ef883a 	add	r23,r2,r23
   161cc:	b804943a 	slli	r2,r23,16
   161d0:	e0ffffcc 	andi	r3,fp,65535
   161d4:	8c400104 	addi	r17,r17,4
   161d8:	10c6b03a 	or	r3,r2,r3
   161dc:	88ffff15 	stw	r3,-4(r17)
   161e0:	b5800104 	addi	r22,r22,4
   161e4:	b13fff17 	ldw	r4,-4(r22)
   161e8:	acc00104 	addi	r19,r21,4
   161ec:	900b883a 	mov	r5,r18
   161f0:	2008d43a 	srli	r4,r4,16
   161f4:	9c000017 	ldw	r16,0(r19)
   161f8:	00196480 	call	19648 <__mulsi3>
   161fc:	b806d43a 	srli	r3,r23,16
   16200:	813fffcc 	andi	r4,r16,65535
   16204:	1105883a 	add	r2,r2,r4
   16208:	10f9883a 	add	fp,r2,r3
   1620c:	e02ed43a 	srli	r23,fp,16
   16210:	b53fe736 	bltu	r22,r20,161b0 <_gp+0xffff0f54>
   16214:	af000115 	stw	fp,4(r21)
   16218:	d8c00017 	ldw	r3,0(sp)
   1621c:	d9000517 	ldw	r4,20(sp)
   16220:	18c00104 	addi	r3,r3,4
   16224:	d8c00015 	stw	r3,0(sp)
   16228:	d8c00117 	ldw	r3,4(sp)
   1622c:	18c00104 	addi	r3,r3,4
   16230:	d8c00115 	stw	r3,4(sp)
   16234:	d8c00017 	ldw	r3,0(sp)
   16238:	193fb136 	bltu	r3,r4,16100 <_gp+0xffff0ea4>
   1623c:	d8c00217 	ldw	r3,8(sp)
   16240:	00c00c0e 	bge	zero,r3,16274 <__multiply+0x24c>
   16244:	d8c00317 	ldw	r3,12(sp)
   16248:	18bfff17 	ldw	r2,-4(r3)
   1624c:	1d7fff04 	addi	r21,r3,-4
   16250:	10000326 	beq	r2,zero,16260 <__multiply+0x238>
   16254:	00000706 	br	16274 <__multiply+0x24c>
   16258:	a8800017 	ldw	r2,0(r21)
   1625c:	1000051e 	bne	r2,zero,16274 <__multiply+0x24c>
   16260:	d8c00217 	ldw	r3,8(sp)
   16264:	ad7fff04 	addi	r21,r21,-4
   16268:	18ffffc4 	addi	r3,r3,-1
   1626c:	d8c00215 	stw	r3,8(sp)
   16270:	183ff91e 	bne	r3,zero,16258 <_gp+0xffff0ffc>
   16274:	d8c00617 	ldw	r3,24(sp)
   16278:	d9000217 	ldw	r4,8(sp)
   1627c:	1805883a 	mov	r2,r3
   16280:	19000415 	stw	r4,16(r3)
   16284:	dfc01017 	ldw	ra,64(sp)
   16288:	df000f17 	ldw	fp,60(sp)
   1628c:	ddc00e17 	ldw	r23,56(sp)
   16290:	dd800d17 	ldw	r22,52(sp)
   16294:	dd400c17 	ldw	r21,48(sp)
   16298:	dd000b17 	ldw	r20,44(sp)
   1629c:	dcc00a17 	ldw	r19,40(sp)
   162a0:	dc800917 	ldw	r18,36(sp)
   162a4:	dc400817 	ldw	r17,32(sp)
   162a8:	dc000717 	ldw	r16,28(sp)
   162ac:	dec01104 	addi	sp,sp,68
   162b0:	f800283a 	ret

000162b4 <__pow5mult>:
   162b4:	defffa04 	addi	sp,sp,-24
   162b8:	dcc00315 	stw	r19,12(sp)
   162bc:	dc000015 	stw	r16,0(sp)
   162c0:	dfc00515 	stw	ra,20(sp)
   162c4:	dd000415 	stw	r20,16(sp)
   162c8:	dc800215 	stw	r18,8(sp)
   162cc:	dc400115 	stw	r17,4(sp)
   162d0:	308000cc 	andi	r2,r6,3
   162d4:	3021883a 	mov	r16,r6
   162d8:	2027883a 	mov	r19,r4
   162dc:	10002f1e 	bne	r2,zero,1639c <__pow5mult+0xe8>
   162e0:	2825883a 	mov	r18,r5
   162e4:	8021d0ba 	srai	r16,r16,2
   162e8:	80001a26 	beq	r16,zero,16354 <__pow5mult+0xa0>
   162ec:	9c401217 	ldw	r17,72(r19)
   162f0:	8800061e 	bne	r17,zero,1630c <__pow5mult+0x58>
   162f4:	00003406 	br	163c8 <__pow5mult+0x114>
   162f8:	8021d07a 	srai	r16,r16,1
   162fc:	80001526 	beq	r16,zero,16354 <__pow5mult+0xa0>
   16300:	88800017 	ldw	r2,0(r17)
   16304:	10001c26 	beq	r2,zero,16378 <__pow5mult+0xc4>
   16308:	1023883a 	mov	r17,r2
   1630c:	8080004c 	andi	r2,r16,1
   16310:	103ff926 	beq	r2,zero,162f8 <_gp+0xffff109c>
   16314:	880d883a 	mov	r6,r17
   16318:	900b883a 	mov	r5,r18
   1631c:	9809883a 	mov	r4,r19
   16320:	00160280 	call	16028 <__multiply>
   16324:	90001b26 	beq	r18,zero,16394 <__pow5mult+0xe0>
   16328:	91000117 	ldw	r4,4(r18)
   1632c:	98c01317 	ldw	r3,76(r19)
   16330:	8021d07a 	srai	r16,r16,1
   16334:	2109883a 	add	r4,r4,r4
   16338:	2109883a 	add	r4,r4,r4
   1633c:	1907883a 	add	r3,r3,r4
   16340:	19000017 	ldw	r4,0(r3)
   16344:	91000015 	stw	r4,0(r18)
   16348:	1c800015 	stw	r18,0(r3)
   1634c:	1025883a 	mov	r18,r2
   16350:	803feb1e 	bne	r16,zero,16300 <_gp+0xffff10a4>
   16354:	9005883a 	mov	r2,r18
   16358:	dfc00517 	ldw	ra,20(sp)
   1635c:	dd000417 	ldw	r20,16(sp)
   16360:	dcc00317 	ldw	r19,12(sp)
   16364:	dc800217 	ldw	r18,8(sp)
   16368:	dc400117 	ldw	r17,4(sp)
   1636c:	dc000017 	ldw	r16,0(sp)
   16370:	dec00604 	addi	sp,sp,24
   16374:	f800283a 	ret
   16378:	880d883a 	mov	r6,r17
   1637c:	880b883a 	mov	r5,r17
   16380:	9809883a 	mov	r4,r19
   16384:	00160280 	call	16028 <__multiply>
   16388:	88800015 	stw	r2,0(r17)
   1638c:	10000015 	stw	zero,0(r2)
   16390:	003fdd06 	br	16308 <_gp+0xffff10ac>
   16394:	1025883a 	mov	r18,r2
   16398:	003fd706 	br	162f8 <_gp+0xffff109c>
   1639c:	10bfffc4 	addi	r2,r2,-1
   163a0:	1085883a 	add	r2,r2,r2
   163a4:	00c000b4 	movhi	r3,2
   163a8:	18f1b304 	addi	r3,r3,-14644
   163ac:	1085883a 	add	r2,r2,r2
   163b0:	1885883a 	add	r2,r3,r2
   163b4:	11800017 	ldw	r6,0(r2)
   163b8:	000f883a 	mov	r7,zero
   163bc:	0015c880 	call	15c88 <__multadd>
   163c0:	1025883a 	mov	r18,r2
   163c4:	003fc706 	br	162e4 <_gp+0xffff1088>
   163c8:	05000044 	movi	r20,1
   163cc:	a00b883a 	mov	r5,r20
   163d0:	9809883a 	mov	r4,r19
   163d4:	0015bb80 	call	15bb8 <_Balloc>
   163d8:	1023883a 	mov	r17,r2
   163dc:	00809c44 	movi	r2,625
   163e0:	88800515 	stw	r2,20(r17)
   163e4:	8d000415 	stw	r20,16(r17)
   163e8:	9c401215 	stw	r17,72(r19)
   163ec:	88000015 	stw	zero,0(r17)
   163f0:	003fc606 	br	1630c <_gp+0xffff10b0>

000163f4 <__lshift>:
   163f4:	defff904 	addi	sp,sp,-28
   163f8:	dd400515 	stw	r21,20(sp)
   163fc:	dcc00315 	stw	r19,12(sp)
   16400:	302bd17a 	srai	r21,r6,5
   16404:	2cc00417 	ldw	r19,16(r5)
   16408:	28800217 	ldw	r2,8(r5)
   1640c:	dd000415 	stw	r20,16(sp)
   16410:	ace7883a 	add	r19,r21,r19
   16414:	dc800215 	stw	r18,8(sp)
   16418:	dc400115 	stw	r17,4(sp)
   1641c:	dc000015 	stw	r16,0(sp)
   16420:	dfc00615 	stw	ra,24(sp)
   16424:	9c000044 	addi	r16,r19,1
   16428:	2823883a 	mov	r17,r5
   1642c:	3029883a 	mov	r20,r6
   16430:	2025883a 	mov	r18,r4
   16434:	29400117 	ldw	r5,4(r5)
   16438:	1400030e 	bge	r2,r16,16448 <__lshift+0x54>
   1643c:	1085883a 	add	r2,r2,r2
   16440:	29400044 	addi	r5,r5,1
   16444:	143ffd16 	blt	r2,r16,1643c <_gp+0xffff11e0>
   16448:	9009883a 	mov	r4,r18
   1644c:	0015bb80 	call	15bb8 <_Balloc>
   16450:	10c00504 	addi	r3,r2,20
   16454:	0540070e 	bge	zero,r21,16474 <__lshift+0x80>
   16458:	ad6b883a 	add	r21,r21,r21
   1645c:	ad6b883a 	add	r21,r21,r21
   16460:	1809883a 	mov	r4,r3
   16464:	1d47883a 	add	r3,r3,r21
   16468:	20000015 	stw	zero,0(r4)
   1646c:	21000104 	addi	r4,r4,4
   16470:	193ffd1e 	bne	r3,r4,16468 <_gp+0xffff120c>
   16474:	8a000417 	ldw	r8,16(r17)
   16478:	89000504 	addi	r4,r17,20
   1647c:	a18007cc 	andi	r6,r20,31
   16480:	4211883a 	add	r8,r8,r8
   16484:	4211883a 	add	r8,r8,r8
   16488:	2211883a 	add	r8,r4,r8
   1648c:	30002326 	beq	r6,zero,1651c <__lshift+0x128>
   16490:	02400804 	movi	r9,32
   16494:	4993c83a 	sub	r9,r9,r6
   16498:	000b883a 	mov	r5,zero
   1649c:	21c00017 	ldw	r7,0(r4)
   164a0:	1815883a 	mov	r10,r3
   164a4:	18c00104 	addi	r3,r3,4
   164a8:	398e983a 	sll	r7,r7,r6
   164ac:	21000104 	addi	r4,r4,4
   164b0:	394ab03a 	or	r5,r7,r5
   164b4:	197fff15 	stw	r5,-4(r3)
   164b8:	217fff17 	ldw	r5,-4(r4)
   164bc:	2a4ad83a 	srl	r5,r5,r9
   164c0:	223ff636 	bltu	r4,r8,1649c <_gp+0xffff1240>
   164c4:	51400115 	stw	r5,4(r10)
   164c8:	28001a1e 	bne	r5,zero,16534 <__lshift+0x140>
   164cc:	843fffc4 	addi	r16,r16,-1
   164d0:	14000415 	stw	r16,16(r2)
   164d4:	88000826 	beq	r17,zero,164f8 <__lshift+0x104>
   164d8:	89000117 	ldw	r4,4(r17)
   164dc:	90c01317 	ldw	r3,76(r18)
   164e0:	2109883a 	add	r4,r4,r4
   164e4:	2109883a 	add	r4,r4,r4
   164e8:	1907883a 	add	r3,r3,r4
   164ec:	19000017 	ldw	r4,0(r3)
   164f0:	89000015 	stw	r4,0(r17)
   164f4:	1c400015 	stw	r17,0(r3)
   164f8:	dfc00617 	ldw	ra,24(sp)
   164fc:	dd400517 	ldw	r21,20(sp)
   16500:	dd000417 	ldw	r20,16(sp)
   16504:	dcc00317 	ldw	r19,12(sp)
   16508:	dc800217 	ldw	r18,8(sp)
   1650c:	dc400117 	ldw	r17,4(sp)
   16510:	dc000017 	ldw	r16,0(sp)
   16514:	dec00704 	addi	sp,sp,28
   16518:	f800283a 	ret
   1651c:	21400017 	ldw	r5,0(r4)
   16520:	18c00104 	addi	r3,r3,4
   16524:	21000104 	addi	r4,r4,4
   16528:	197fff15 	stw	r5,-4(r3)
   1652c:	223ffb36 	bltu	r4,r8,1651c <_gp+0xffff12c0>
   16530:	003fe606 	br	164cc <_gp+0xffff1270>
   16534:	9c000084 	addi	r16,r19,2
   16538:	003fe406 	br	164cc <_gp+0xffff1270>

0001653c <__mcmp>:
   1653c:	20800417 	ldw	r2,16(r4)
   16540:	28c00417 	ldw	r3,16(r5)
   16544:	10c5c83a 	sub	r2,r2,r3
   16548:	1000111e 	bne	r2,zero,16590 <__mcmp+0x54>
   1654c:	18c7883a 	add	r3,r3,r3
   16550:	18c7883a 	add	r3,r3,r3
   16554:	21000504 	addi	r4,r4,20
   16558:	29400504 	addi	r5,r5,20
   1655c:	20c5883a 	add	r2,r4,r3
   16560:	28cb883a 	add	r5,r5,r3
   16564:	00000106 	br	1656c <__mcmp+0x30>
   16568:	20800a2e 	bgeu	r4,r2,16594 <__mcmp+0x58>
   1656c:	10bfff04 	addi	r2,r2,-4
   16570:	297fff04 	addi	r5,r5,-4
   16574:	11800017 	ldw	r6,0(r2)
   16578:	28c00017 	ldw	r3,0(r5)
   1657c:	30fffa26 	beq	r6,r3,16568 <_gp+0xffff130c>
   16580:	30c00236 	bltu	r6,r3,1658c <__mcmp+0x50>
   16584:	00800044 	movi	r2,1
   16588:	f800283a 	ret
   1658c:	00bfffc4 	movi	r2,-1
   16590:	f800283a 	ret
   16594:	0005883a 	mov	r2,zero
   16598:	f800283a 	ret

0001659c <__mdiff>:
   1659c:	28c00417 	ldw	r3,16(r5)
   165a0:	30800417 	ldw	r2,16(r6)
   165a4:	defffa04 	addi	sp,sp,-24
   165a8:	dcc00315 	stw	r19,12(sp)
   165ac:	dc800215 	stw	r18,8(sp)
   165b0:	dfc00515 	stw	ra,20(sp)
   165b4:	dd000415 	stw	r20,16(sp)
   165b8:	dc400115 	stw	r17,4(sp)
   165bc:	dc000015 	stw	r16,0(sp)
   165c0:	1887c83a 	sub	r3,r3,r2
   165c4:	2825883a 	mov	r18,r5
   165c8:	3027883a 	mov	r19,r6
   165cc:	1800141e 	bne	r3,zero,16620 <__mdiff+0x84>
   165d0:	1085883a 	add	r2,r2,r2
   165d4:	1085883a 	add	r2,r2,r2
   165d8:	2a000504 	addi	r8,r5,20
   165dc:	34000504 	addi	r16,r6,20
   165e0:	4087883a 	add	r3,r8,r2
   165e4:	8085883a 	add	r2,r16,r2
   165e8:	00000106 	br	165f0 <__mdiff+0x54>
   165ec:	40c0592e 	bgeu	r8,r3,16754 <__mdiff+0x1b8>
   165f0:	18ffff04 	addi	r3,r3,-4
   165f4:	10bfff04 	addi	r2,r2,-4
   165f8:	19c00017 	ldw	r7,0(r3)
   165fc:	11400017 	ldw	r5,0(r2)
   16600:	397ffa26 	beq	r7,r5,165ec <_gp+0xffff1390>
   16604:	3940592e 	bgeu	r7,r5,1676c <__mdiff+0x1d0>
   16608:	9005883a 	mov	r2,r18
   1660c:	4023883a 	mov	r17,r8
   16610:	9825883a 	mov	r18,r19
   16614:	05000044 	movi	r20,1
   16618:	1027883a 	mov	r19,r2
   1661c:	00000406 	br	16630 <__mdiff+0x94>
   16620:	18005616 	blt	r3,zero,1677c <__mdiff+0x1e0>
   16624:	34400504 	addi	r17,r6,20
   16628:	2c000504 	addi	r16,r5,20
   1662c:	0029883a 	mov	r20,zero
   16630:	91400117 	ldw	r5,4(r18)
   16634:	0015bb80 	call	15bb8 <_Balloc>
   16638:	92400417 	ldw	r9,16(r18)
   1663c:	9b000417 	ldw	r12,16(r19)
   16640:	12c00504 	addi	r11,r2,20
   16644:	4a51883a 	add	r8,r9,r9
   16648:	6319883a 	add	r12,r12,r12
   1664c:	4211883a 	add	r8,r8,r8
   16650:	6319883a 	add	r12,r12,r12
   16654:	15000315 	stw	r20,12(r2)
   16658:	8211883a 	add	r8,r16,r8
   1665c:	8b19883a 	add	r12,r17,r12
   16660:	0007883a 	mov	r3,zero
   16664:	81400017 	ldw	r5,0(r16)
   16668:	89c00017 	ldw	r7,0(r17)
   1666c:	59800104 	addi	r6,r11,4
   16670:	293fffcc 	andi	r4,r5,65535
   16674:	20c7883a 	add	r3,r4,r3
   16678:	393fffcc 	andi	r4,r7,65535
   1667c:	1909c83a 	sub	r4,r3,r4
   16680:	280ad43a 	srli	r5,r5,16
   16684:	380ed43a 	srli	r7,r7,16
   16688:	2007d43a 	srai	r3,r4,16
   1668c:	213fffcc 	andi	r4,r4,65535
   16690:	29cbc83a 	sub	r5,r5,r7
   16694:	28c7883a 	add	r3,r5,r3
   16698:	180a943a 	slli	r5,r3,16
   1669c:	8c400104 	addi	r17,r17,4
   166a0:	84000104 	addi	r16,r16,4
   166a4:	2908b03a 	or	r4,r5,r4
   166a8:	59000015 	stw	r4,0(r11)
   166ac:	1807d43a 	srai	r3,r3,16
   166b0:	3015883a 	mov	r10,r6
   166b4:	3017883a 	mov	r11,r6
   166b8:	8b3fea36 	bltu	r17,r12,16664 <_gp+0xffff1408>
   166bc:	8200162e 	bgeu	r16,r8,16718 <__mdiff+0x17c>
   166c0:	8017883a 	mov	r11,r16
   166c4:	59400017 	ldw	r5,0(r11)
   166c8:	31800104 	addi	r6,r6,4
   166cc:	5ac00104 	addi	r11,r11,4
   166d0:	293fffcc 	andi	r4,r5,65535
   166d4:	20c7883a 	add	r3,r4,r3
   166d8:	280ed43a 	srli	r7,r5,16
   166dc:	180bd43a 	srai	r5,r3,16
   166e0:	193fffcc 	andi	r4,r3,65535
   166e4:	3947883a 	add	r3,r7,r5
   166e8:	180a943a 	slli	r5,r3,16
   166ec:	1807d43a 	srai	r3,r3,16
   166f0:	2908b03a 	or	r4,r5,r4
   166f4:	313fff15 	stw	r4,-4(r6)
   166f8:	5a3ff236 	bltu	r11,r8,166c4 <_gp+0xffff1468>
   166fc:	0406303a 	nor	r3,zero,r16
   16700:	1a07883a 	add	r3,r3,r8
   16704:	1806d0ba 	srli	r3,r3,2
   16708:	18c00044 	addi	r3,r3,1
   1670c:	18c7883a 	add	r3,r3,r3
   16710:	18c7883a 	add	r3,r3,r3
   16714:	50d5883a 	add	r10,r10,r3
   16718:	50ffff04 	addi	r3,r10,-4
   1671c:	2000041e 	bne	r4,zero,16730 <__mdiff+0x194>
   16720:	18ffff04 	addi	r3,r3,-4
   16724:	19000017 	ldw	r4,0(r3)
   16728:	4a7fffc4 	addi	r9,r9,-1
   1672c:	203ffc26 	beq	r4,zero,16720 <_gp+0xffff14c4>
   16730:	12400415 	stw	r9,16(r2)
   16734:	dfc00517 	ldw	ra,20(sp)
   16738:	dd000417 	ldw	r20,16(sp)
   1673c:	dcc00317 	ldw	r19,12(sp)
   16740:	dc800217 	ldw	r18,8(sp)
   16744:	dc400117 	ldw	r17,4(sp)
   16748:	dc000017 	ldw	r16,0(sp)
   1674c:	dec00604 	addi	sp,sp,24
   16750:	f800283a 	ret
   16754:	000b883a 	mov	r5,zero
   16758:	0015bb80 	call	15bb8 <_Balloc>
   1675c:	00c00044 	movi	r3,1
   16760:	10c00415 	stw	r3,16(r2)
   16764:	10000515 	stw	zero,20(r2)
   16768:	003ff206 	br	16734 <_gp+0xffff14d8>
   1676c:	8023883a 	mov	r17,r16
   16770:	0029883a 	mov	r20,zero
   16774:	4021883a 	mov	r16,r8
   16778:	003fad06 	br	16630 <_gp+0xffff13d4>
   1677c:	9005883a 	mov	r2,r18
   16780:	94400504 	addi	r17,r18,20
   16784:	9c000504 	addi	r16,r19,20
   16788:	9825883a 	mov	r18,r19
   1678c:	05000044 	movi	r20,1
   16790:	1027883a 	mov	r19,r2
   16794:	003fa606 	br	16630 <_gp+0xffff13d4>

00016798 <__ulp>:
   16798:	295ffc2c 	andhi	r5,r5,32752
   1679c:	00bf3034 	movhi	r2,64704
   167a0:	2887883a 	add	r3,r5,r2
   167a4:	00c0020e 	bge	zero,r3,167b0 <__ulp+0x18>
   167a8:	0005883a 	mov	r2,zero
   167ac:	f800283a 	ret
   167b0:	00c7c83a 	sub	r3,zero,r3
   167b4:	1807d53a 	srai	r3,r3,20
   167b8:	008004c4 	movi	r2,19
   167bc:	10c00b0e 	bge	r2,r3,167ec <__ulp+0x54>
   167c0:	18bffb04 	addi	r2,r3,-20
   167c4:	01000784 	movi	r4,30
   167c8:	0007883a 	mov	r3,zero
   167cc:	20800516 	blt	r4,r2,167e4 <__ulp+0x4c>
   167d0:	010007c4 	movi	r4,31
   167d4:	2089c83a 	sub	r4,r4,r2
   167d8:	00800044 	movi	r2,1
   167dc:	1104983a 	sll	r2,r2,r4
   167e0:	f800283a 	ret
   167e4:	00800044 	movi	r2,1
   167e8:	f800283a 	ret
   167ec:	01400234 	movhi	r5,8
   167f0:	28c7d83a 	sra	r3,r5,r3
   167f4:	0005883a 	mov	r2,zero
   167f8:	f800283a 	ret

000167fc <__b2d>:
   167fc:	defffa04 	addi	sp,sp,-24
   16800:	dc000015 	stw	r16,0(sp)
   16804:	24000417 	ldw	r16,16(r4)
   16808:	dc400115 	stw	r17,4(sp)
   1680c:	24400504 	addi	r17,r4,20
   16810:	8421883a 	add	r16,r16,r16
   16814:	8421883a 	add	r16,r16,r16
   16818:	8c21883a 	add	r16,r17,r16
   1681c:	dc800215 	stw	r18,8(sp)
   16820:	84bfff17 	ldw	r18,-4(r16)
   16824:	dd000415 	stw	r20,16(sp)
   16828:	dcc00315 	stw	r19,12(sp)
   1682c:	9009883a 	mov	r4,r18
   16830:	2829883a 	mov	r20,r5
   16834:	dfc00515 	stw	ra,20(sp)
   16838:	0015ed40 	call	15ed4 <__hi0bits>
   1683c:	00c00804 	movi	r3,32
   16840:	1889c83a 	sub	r4,r3,r2
   16844:	a1000015 	stw	r4,0(r20)
   16848:	01000284 	movi	r4,10
   1684c:	84ffff04 	addi	r19,r16,-4
   16850:	20801216 	blt	r4,r2,1689c <__b2d+0xa0>
   16854:	018002c4 	movi	r6,11
   16858:	308dc83a 	sub	r6,r6,r2
   1685c:	9186d83a 	srl	r3,r18,r6
   16860:	18cffc34 	orhi	r3,r3,16368
   16864:	8cc0212e 	bgeu	r17,r19,168ec <__b2d+0xf0>
   16868:	813ffe17 	ldw	r4,-8(r16)
   1686c:	218cd83a 	srl	r6,r4,r6
   16870:	10800544 	addi	r2,r2,21
   16874:	9084983a 	sll	r2,r18,r2
   16878:	1184b03a 	or	r2,r2,r6
   1687c:	dfc00517 	ldw	ra,20(sp)
   16880:	dd000417 	ldw	r20,16(sp)
   16884:	dcc00317 	ldw	r19,12(sp)
   16888:	dc800217 	ldw	r18,8(sp)
   1688c:	dc400117 	ldw	r17,4(sp)
   16890:	dc000017 	ldw	r16,0(sp)
   16894:	dec00604 	addi	sp,sp,24
   16898:	f800283a 	ret
   1689c:	8cc00f2e 	bgeu	r17,r19,168dc <__b2d+0xe0>
   168a0:	117ffd44 	addi	r5,r2,-11
   168a4:	80bffe17 	ldw	r2,-8(r16)
   168a8:	28000e26 	beq	r5,zero,168e4 <__b2d+0xe8>
   168ac:	1949c83a 	sub	r4,r3,r5
   168b0:	9164983a 	sll	r18,r18,r5
   168b4:	1106d83a 	srl	r3,r2,r4
   168b8:	81bffe04 	addi	r6,r16,-8
   168bc:	948ffc34 	orhi	r18,r18,16368
   168c0:	90c6b03a 	or	r3,r18,r3
   168c4:	89800e2e 	bgeu	r17,r6,16900 <__b2d+0x104>
   168c8:	81bffd17 	ldw	r6,-12(r16)
   168cc:	1144983a 	sll	r2,r2,r5
   168d0:	310ad83a 	srl	r5,r6,r4
   168d4:	2884b03a 	or	r2,r5,r2
   168d8:	003fe806 	br	1687c <_gp+0xffff1620>
   168dc:	10bffd44 	addi	r2,r2,-11
   168e0:	1000041e 	bne	r2,zero,168f4 <__b2d+0xf8>
   168e4:	90cffc34 	orhi	r3,r18,16368
   168e8:	003fe406 	br	1687c <_gp+0xffff1620>
   168ec:	000d883a 	mov	r6,zero
   168f0:	003fdf06 	br	16870 <_gp+0xffff1614>
   168f4:	90a4983a 	sll	r18,r18,r2
   168f8:	0005883a 	mov	r2,zero
   168fc:	003ff906 	br	168e4 <_gp+0xffff1688>
   16900:	1144983a 	sll	r2,r2,r5
   16904:	003fdd06 	br	1687c <_gp+0xffff1620>

00016908 <__d2b>:
   16908:	defff804 	addi	sp,sp,-32
   1690c:	dc000215 	stw	r16,8(sp)
   16910:	3021883a 	mov	r16,r6
   16914:	dc400315 	stw	r17,12(sp)
   16918:	8022907a 	slli	r17,r16,1
   1691c:	dd000615 	stw	r20,24(sp)
   16920:	2829883a 	mov	r20,r5
   16924:	01400044 	movi	r5,1
   16928:	dcc00515 	stw	r19,20(sp)
   1692c:	dc800415 	stw	r18,16(sp)
   16930:	dfc00715 	stw	ra,28(sp)
   16934:	3825883a 	mov	r18,r7
   16938:	8822d57a 	srli	r17,r17,21
   1693c:	0015bb80 	call	15bb8 <_Balloc>
   16940:	1027883a 	mov	r19,r2
   16944:	00800434 	movhi	r2,16
   16948:	10bfffc4 	addi	r2,r2,-1
   1694c:	808c703a 	and	r6,r16,r2
   16950:	88000126 	beq	r17,zero,16958 <__d2b+0x50>
   16954:	31800434 	orhi	r6,r6,16
   16958:	d9800015 	stw	r6,0(sp)
   1695c:	a0002426 	beq	r20,zero,169f0 <__d2b+0xe8>
   16960:	d9000104 	addi	r4,sp,4
   16964:	dd000115 	stw	r20,4(sp)
   16968:	0015f3c0 	call	15f3c <__lo0bits>
   1696c:	d8c00017 	ldw	r3,0(sp)
   16970:	10002f1e 	bne	r2,zero,16a30 <__d2b+0x128>
   16974:	d9000117 	ldw	r4,4(sp)
   16978:	99000515 	stw	r4,20(r19)
   1697c:	1821003a 	cmpeq	r16,r3,zero
   16980:	01000084 	movi	r4,2
   16984:	2421c83a 	sub	r16,r4,r16
   16988:	98c00615 	stw	r3,24(r19)
   1698c:	9c000415 	stw	r16,16(r19)
   16990:	88001f1e 	bne	r17,zero,16a10 <__d2b+0x108>
   16994:	10bef384 	addi	r2,r2,-1074
   16998:	90800015 	stw	r2,0(r18)
   1699c:	00900034 	movhi	r2,16384
   169a0:	10bfffc4 	addi	r2,r2,-1
   169a4:	8085883a 	add	r2,r16,r2
   169a8:	1085883a 	add	r2,r2,r2
   169ac:	1085883a 	add	r2,r2,r2
   169b0:	9885883a 	add	r2,r19,r2
   169b4:	11000517 	ldw	r4,20(r2)
   169b8:	8020917a 	slli	r16,r16,5
   169bc:	0015ed40 	call	15ed4 <__hi0bits>
   169c0:	d8c00817 	ldw	r3,32(sp)
   169c4:	8085c83a 	sub	r2,r16,r2
   169c8:	18800015 	stw	r2,0(r3)
   169cc:	9805883a 	mov	r2,r19
   169d0:	dfc00717 	ldw	ra,28(sp)
   169d4:	dd000617 	ldw	r20,24(sp)
   169d8:	dcc00517 	ldw	r19,20(sp)
   169dc:	dc800417 	ldw	r18,16(sp)
   169e0:	dc400317 	ldw	r17,12(sp)
   169e4:	dc000217 	ldw	r16,8(sp)
   169e8:	dec00804 	addi	sp,sp,32
   169ec:	f800283a 	ret
   169f0:	d809883a 	mov	r4,sp
   169f4:	0015f3c0 	call	15f3c <__lo0bits>
   169f8:	d8c00017 	ldw	r3,0(sp)
   169fc:	04000044 	movi	r16,1
   16a00:	9c000415 	stw	r16,16(r19)
   16a04:	98c00515 	stw	r3,20(r19)
   16a08:	10800804 	addi	r2,r2,32
   16a0c:	883fe126 	beq	r17,zero,16994 <_gp+0xffff1738>
   16a10:	00c00d44 	movi	r3,53
   16a14:	8c7ef344 	addi	r17,r17,-1075
   16a18:	88a3883a 	add	r17,r17,r2
   16a1c:	1885c83a 	sub	r2,r3,r2
   16a20:	d8c00817 	ldw	r3,32(sp)
   16a24:	94400015 	stw	r17,0(r18)
   16a28:	18800015 	stw	r2,0(r3)
   16a2c:	003fe706 	br	169cc <_gp+0xffff1770>
   16a30:	01000804 	movi	r4,32
   16a34:	2089c83a 	sub	r4,r4,r2
   16a38:	1908983a 	sll	r4,r3,r4
   16a3c:	d9400117 	ldw	r5,4(sp)
   16a40:	1886d83a 	srl	r3,r3,r2
   16a44:	2148b03a 	or	r4,r4,r5
   16a48:	99000515 	stw	r4,20(r19)
   16a4c:	d8c00015 	stw	r3,0(sp)
   16a50:	003fca06 	br	1697c <_gp+0xffff1720>

00016a54 <__ratio>:
   16a54:	defff904 	addi	sp,sp,-28
   16a58:	dc400315 	stw	r17,12(sp)
   16a5c:	2823883a 	mov	r17,r5
   16a60:	d9400104 	addi	r5,sp,4
   16a64:	dfc00615 	stw	ra,24(sp)
   16a68:	dcc00515 	stw	r19,20(sp)
   16a6c:	dc800415 	stw	r18,16(sp)
   16a70:	2027883a 	mov	r19,r4
   16a74:	dc000215 	stw	r16,8(sp)
   16a78:	00167fc0 	call	167fc <__b2d>
   16a7c:	d80b883a 	mov	r5,sp
   16a80:	8809883a 	mov	r4,r17
   16a84:	1025883a 	mov	r18,r2
   16a88:	1821883a 	mov	r16,r3
   16a8c:	00167fc0 	call	167fc <__b2d>
   16a90:	8a000417 	ldw	r8,16(r17)
   16a94:	99000417 	ldw	r4,16(r19)
   16a98:	d9400117 	ldw	r5,4(sp)
   16a9c:	2209c83a 	sub	r4,r4,r8
   16aa0:	2010917a 	slli	r8,r4,5
   16aa4:	d9000017 	ldw	r4,0(sp)
   16aa8:	2909c83a 	sub	r4,r5,r4
   16aac:	4109883a 	add	r4,r8,r4
   16ab0:	01000e0e 	bge	zero,r4,16aec <__ratio+0x98>
   16ab4:	2008953a 	slli	r4,r4,20
   16ab8:	2421883a 	add	r16,r4,r16
   16abc:	100d883a 	mov	r6,r2
   16ac0:	180f883a 	mov	r7,r3
   16ac4:	9009883a 	mov	r4,r18
   16ac8:	800b883a 	mov	r5,r16
   16acc:	0019f1c0 	call	19f1c <__divdf3>
   16ad0:	dfc00617 	ldw	ra,24(sp)
   16ad4:	dcc00517 	ldw	r19,20(sp)
   16ad8:	dc800417 	ldw	r18,16(sp)
   16adc:	dc400317 	ldw	r17,12(sp)
   16ae0:	dc000217 	ldw	r16,8(sp)
   16ae4:	dec00704 	addi	sp,sp,28
   16ae8:	f800283a 	ret
   16aec:	2008953a 	slli	r4,r4,20
   16af0:	1907c83a 	sub	r3,r3,r4
   16af4:	003ff106 	br	16abc <_gp+0xffff1860>

00016af8 <_mprec_log10>:
   16af8:	defffe04 	addi	sp,sp,-8
   16afc:	dc000015 	stw	r16,0(sp)
   16b00:	dfc00115 	stw	ra,4(sp)
   16b04:	008005c4 	movi	r2,23
   16b08:	2021883a 	mov	r16,r4
   16b0c:	11000d0e 	bge	r2,r4,16b44 <_mprec_log10+0x4c>
   16b10:	0005883a 	mov	r2,zero
   16b14:	00cffc34 	movhi	r3,16368
   16b18:	843fffc4 	addi	r16,r16,-1
   16b1c:	000d883a 	mov	r6,zero
   16b20:	01d00934 	movhi	r7,16420
   16b24:	1009883a 	mov	r4,r2
   16b28:	180b883a 	mov	r5,r3
   16b2c:	001ab440 	call	1ab44 <__muldf3>
   16b30:	803ff91e 	bne	r16,zero,16b18 <_gp+0xffff18bc>
   16b34:	dfc00117 	ldw	ra,4(sp)
   16b38:	dc000017 	ldw	r16,0(sp)
   16b3c:	dec00204 	addi	sp,sp,8
   16b40:	f800283a 	ret
   16b44:	202090fa 	slli	r16,r4,3
   16b48:	008000b4 	movhi	r2,2
   16b4c:	10b1ca04 	addi	r2,r2,-14552
   16b50:	1421883a 	add	r16,r2,r16
   16b54:	80800017 	ldw	r2,0(r16)
   16b58:	80c00117 	ldw	r3,4(r16)
   16b5c:	dfc00117 	ldw	ra,4(sp)
   16b60:	dc000017 	ldw	r16,0(sp)
   16b64:	dec00204 	addi	sp,sp,8
   16b68:	f800283a 	ret

00016b6c <__copybits>:
   16b6c:	297fffc4 	addi	r5,r5,-1
   16b70:	280fd17a 	srai	r7,r5,5
   16b74:	30c00417 	ldw	r3,16(r6)
   16b78:	30800504 	addi	r2,r6,20
   16b7c:	39c00044 	addi	r7,r7,1
   16b80:	18c7883a 	add	r3,r3,r3
   16b84:	39cf883a 	add	r7,r7,r7
   16b88:	18c7883a 	add	r3,r3,r3
   16b8c:	39cf883a 	add	r7,r7,r7
   16b90:	10c7883a 	add	r3,r2,r3
   16b94:	21cf883a 	add	r7,r4,r7
   16b98:	10c00d2e 	bgeu	r2,r3,16bd0 <__copybits+0x64>
   16b9c:	200b883a 	mov	r5,r4
   16ba0:	12000017 	ldw	r8,0(r2)
   16ba4:	29400104 	addi	r5,r5,4
   16ba8:	10800104 	addi	r2,r2,4
   16bac:	2a3fff15 	stw	r8,-4(r5)
   16bb0:	10fffb36 	bltu	r2,r3,16ba0 <_gp+0xffff1944>
   16bb4:	1985c83a 	sub	r2,r3,r6
   16bb8:	10bffac4 	addi	r2,r2,-21
   16bbc:	1004d0ba 	srli	r2,r2,2
   16bc0:	10800044 	addi	r2,r2,1
   16bc4:	1085883a 	add	r2,r2,r2
   16bc8:	1085883a 	add	r2,r2,r2
   16bcc:	2089883a 	add	r4,r4,r2
   16bd0:	21c0032e 	bgeu	r4,r7,16be0 <__copybits+0x74>
   16bd4:	20000015 	stw	zero,0(r4)
   16bd8:	21000104 	addi	r4,r4,4
   16bdc:	21fffd36 	bltu	r4,r7,16bd4 <_gp+0xffff1978>
   16be0:	f800283a 	ret

00016be4 <__any_on>:
   16be4:	20c00417 	ldw	r3,16(r4)
   16be8:	2805d17a 	srai	r2,r5,5
   16bec:	21000504 	addi	r4,r4,20
   16bf0:	18800d0e 	bge	r3,r2,16c28 <__any_on+0x44>
   16bf4:	18c7883a 	add	r3,r3,r3
   16bf8:	18c7883a 	add	r3,r3,r3
   16bfc:	20c7883a 	add	r3,r4,r3
   16c00:	20c0192e 	bgeu	r4,r3,16c68 <__any_on+0x84>
   16c04:	18bfff17 	ldw	r2,-4(r3)
   16c08:	18ffff04 	addi	r3,r3,-4
   16c0c:	1000041e 	bne	r2,zero,16c20 <__any_on+0x3c>
   16c10:	20c0142e 	bgeu	r4,r3,16c64 <__any_on+0x80>
   16c14:	18ffff04 	addi	r3,r3,-4
   16c18:	19400017 	ldw	r5,0(r3)
   16c1c:	283ffc26 	beq	r5,zero,16c10 <_gp+0xffff19b4>
   16c20:	00800044 	movi	r2,1
   16c24:	f800283a 	ret
   16c28:	10c00a0e 	bge	r2,r3,16c54 <__any_on+0x70>
   16c2c:	1085883a 	add	r2,r2,r2
   16c30:	1085883a 	add	r2,r2,r2
   16c34:	294007cc 	andi	r5,r5,31
   16c38:	2087883a 	add	r3,r4,r2
   16c3c:	283ff026 	beq	r5,zero,16c00 <_gp+0xffff19a4>
   16c40:	19800017 	ldw	r6,0(r3)
   16c44:	3144d83a 	srl	r2,r6,r5
   16c48:	114a983a 	sll	r5,r2,r5
   16c4c:	317ff41e 	bne	r6,r5,16c20 <_gp+0xffff19c4>
   16c50:	003feb06 	br	16c00 <_gp+0xffff19a4>
   16c54:	1085883a 	add	r2,r2,r2
   16c58:	1085883a 	add	r2,r2,r2
   16c5c:	2087883a 	add	r3,r4,r2
   16c60:	003fe706 	br	16c00 <_gp+0xffff19a4>
   16c64:	f800283a 	ret
   16c68:	0005883a 	mov	r2,zero
   16c6c:	f800283a 	ret

00016c70 <__fpclassifyd>:
   16c70:	00a00034 	movhi	r2,32768
   16c74:	10bfffc4 	addi	r2,r2,-1
   16c78:	2884703a 	and	r2,r5,r2
   16c7c:	10000726 	beq	r2,zero,16c9c <__fpclassifyd+0x2c>
   16c80:	00fffc34 	movhi	r3,65520
   16c84:	019ff834 	movhi	r6,32736
   16c88:	28c7883a 	add	r3,r5,r3
   16c8c:	31bfffc4 	addi	r6,r6,-1
   16c90:	30c00536 	bltu	r6,r3,16ca8 <__fpclassifyd+0x38>
   16c94:	00800104 	movi	r2,4
   16c98:	f800283a 	ret
   16c9c:	2000021e 	bne	r4,zero,16ca8 <__fpclassifyd+0x38>
   16ca0:	00800084 	movi	r2,2
   16ca4:	f800283a 	ret
   16ca8:	00dffc34 	movhi	r3,32752
   16cac:	019ff834 	movhi	r6,32736
   16cb0:	28cb883a 	add	r5,r5,r3
   16cb4:	31bfffc4 	addi	r6,r6,-1
   16cb8:	317ff62e 	bgeu	r6,r5,16c94 <_gp+0xffff1a38>
   16cbc:	01400434 	movhi	r5,16
   16cc0:	297fffc4 	addi	r5,r5,-1
   16cc4:	28800236 	bltu	r5,r2,16cd0 <__fpclassifyd+0x60>
   16cc8:	008000c4 	movi	r2,3
   16ccc:	f800283a 	ret
   16cd0:	10c00226 	beq	r2,r3,16cdc <__fpclassifyd+0x6c>
   16cd4:	0005883a 	mov	r2,zero
   16cd8:	f800283a 	ret
   16cdc:	2005003a 	cmpeq	r2,r4,zero
   16ce0:	f800283a 	ret

00016ce4 <strlen>:
   16ce4:	208000cc 	andi	r2,r4,3
   16ce8:	10002026 	beq	r2,zero,16d6c <strlen+0x88>
   16cec:	20800007 	ldb	r2,0(r4)
   16cf0:	10002026 	beq	r2,zero,16d74 <strlen+0x90>
   16cf4:	2005883a 	mov	r2,r4
   16cf8:	00000206 	br	16d04 <strlen+0x20>
   16cfc:	10c00007 	ldb	r3,0(r2)
   16d00:	18001826 	beq	r3,zero,16d64 <strlen+0x80>
   16d04:	10800044 	addi	r2,r2,1
   16d08:	10c000cc 	andi	r3,r2,3
   16d0c:	183ffb1e 	bne	r3,zero,16cfc <_gp+0xffff1aa0>
   16d10:	10c00017 	ldw	r3,0(r2)
   16d14:	01ffbff4 	movhi	r7,65279
   16d18:	39ffbfc4 	addi	r7,r7,-257
   16d1c:	00ca303a 	nor	r5,zero,r3
   16d20:	01a02074 	movhi	r6,32897
   16d24:	19c7883a 	add	r3,r3,r7
   16d28:	31a02004 	addi	r6,r6,-32640
   16d2c:	1946703a 	and	r3,r3,r5
   16d30:	1986703a 	and	r3,r3,r6
   16d34:	1800091e 	bne	r3,zero,16d5c <strlen+0x78>
   16d38:	10800104 	addi	r2,r2,4
   16d3c:	10c00017 	ldw	r3,0(r2)
   16d40:	19cb883a 	add	r5,r3,r7
   16d44:	00c6303a 	nor	r3,zero,r3
   16d48:	28c6703a 	and	r3,r5,r3
   16d4c:	1986703a 	and	r3,r3,r6
   16d50:	183ff926 	beq	r3,zero,16d38 <_gp+0xffff1adc>
   16d54:	00000106 	br	16d5c <strlen+0x78>
   16d58:	10800044 	addi	r2,r2,1
   16d5c:	10c00007 	ldb	r3,0(r2)
   16d60:	183ffd1e 	bne	r3,zero,16d58 <_gp+0xffff1afc>
   16d64:	1105c83a 	sub	r2,r2,r4
   16d68:	f800283a 	ret
   16d6c:	2005883a 	mov	r2,r4
   16d70:	003fe706 	br	16d10 <_gp+0xffff1ab4>
   16d74:	0005883a 	mov	r2,zero
   16d78:	f800283a 	ret

00016d7c <__ssprint_r>:
   16d7c:	30800217 	ldw	r2,8(r6)
   16d80:	defff604 	addi	sp,sp,-40
   16d84:	dc800215 	stw	r18,8(sp)
   16d88:	dfc00915 	stw	ra,36(sp)
   16d8c:	df000815 	stw	fp,32(sp)
   16d90:	ddc00715 	stw	r23,28(sp)
   16d94:	dd800615 	stw	r22,24(sp)
   16d98:	dd400515 	stw	r21,20(sp)
   16d9c:	dd000415 	stw	r20,16(sp)
   16da0:	dcc00315 	stw	r19,12(sp)
   16da4:	dc400115 	stw	r17,4(sp)
   16da8:	dc000015 	stw	r16,0(sp)
   16dac:	3025883a 	mov	r18,r6
   16db0:	10005826 	beq	r2,zero,16f14 <__ssprint_r+0x198>
   16db4:	2027883a 	mov	r19,r4
   16db8:	35c00017 	ldw	r23,0(r6)
   16dbc:	29000017 	ldw	r4,0(r5)
   16dc0:	28800217 	ldw	r2,8(r5)
   16dc4:	2823883a 	mov	r17,r5
   16dc8:	0039883a 	mov	fp,zero
   16dcc:	0021883a 	mov	r16,zero
   16dd0:	80003926 	beq	r16,zero,16eb8 <__ssprint_r+0x13c>
   16dd4:	102b883a 	mov	r21,r2
   16dd8:	102d883a 	mov	r22,r2
   16ddc:	80803a36 	bltu	r16,r2,16ec8 <__ssprint_r+0x14c>
   16de0:	88c0030b 	ldhu	r3,12(r17)
   16de4:	1881200c 	andi	r2,r3,1152
   16de8:	10002626 	beq	r2,zero,16e84 <__ssprint_r+0x108>
   16dec:	88800517 	ldw	r2,20(r17)
   16df0:	89400417 	ldw	r5,16(r17)
   16df4:	81800044 	addi	r6,r16,1
   16df8:	108f883a 	add	r7,r2,r2
   16dfc:	3885883a 	add	r2,r7,r2
   16e00:	100ed7fa 	srli	r7,r2,31
   16e04:	216dc83a 	sub	r22,r4,r5
   16e08:	3589883a 	add	r4,r6,r22
   16e0c:	3885883a 	add	r2,r7,r2
   16e10:	102bd07a 	srai	r21,r2,1
   16e14:	a80d883a 	mov	r6,r21
   16e18:	a900022e 	bgeu	r21,r4,16e24 <__ssprint_r+0xa8>
   16e1c:	202b883a 	mov	r21,r4
   16e20:	200d883a 	mov	r6,r4
   16e24:	18c1000c 	andi	r3,r3,1024
   16e28:	18002a26 	beq	r3,zero,16ed4 <__ssprint_r+0x158>
   16e2c:	300b883a 	mov	r5,r6
   16e30:	9809883a 	mov	r4,r19
   16e34:	0010eac0 	call	10eac <_malloc_r>
   16e38:	1029883a 	mov	r20,r2
   16e3c:	10002c26 	beq	r2,zero,16ef0 <__ssprint_r+0x174>
   16e40:	89400417 	ldw	r5,16(r17)
   16e44:	b00d883a 	mov	r6,r22
   16e48:	1009883a 	mov	r4,r2
   16e4c:	0015a700 	call	15a70 <memcpy>
   16e50:	8880030b 	ldhu	r2,12(r17)
   16e54:	00fedfc4 	movi	r3,-1153
   16e58:	10c4703a 	and	r2,r2,r3
   16e5c:	10802014 	ori	r2,r2,128
   16e60:	8880030d 	sth	r2,12(r17)
   16e64:	a589883a 	add	r4,r20,r22
   16e68:	adadc83a 	sub	r22,r21,r22
   16e6c:	8d400515 	stw	r21,20(r17)
   16e70:	8d800215 	stw	r22,8(r17)
   16e74:	8d000415 	stw	r20,16(r17)
   16e78:	89000015 	stw	r4,0(r17)
   16e7c:	802b883a 	mov	r21,r16
   16e80:	802d883a 	mov	r22,r16
   16e84:	b00d883a 	mov	r6,r22
   16e88:	e00b883a 	mov	r5,fp
   16e8c:	00183c80 	call	183c8 <memmove>
   16e90:	88800217 	ldw	r2,8(r17)
   16e94:	89000017 	ldw	r4,0(r17)
   16e98:	90c00217 	ldw	r3,8(r18)
   16e9c:	1545c83a 	sub	r2,r2,r21
   16ea0:	2589883a 	add	r4,r4,r22
   16ea4:	88800215 	stw	r2,8(r17)
   16ea8:	89000015 	stw	r4,0(r17)
   16eac:	1c21c83a 	sub	r16,r3,r16
   16eb0:	94000215 	stw	r16,8(r18)
   16eb4:	80001726 	beq	r16,zero,16f14 <__ssprint_r+0x198>
   16eb8:	bf000017 	ldw	fp,0(r23)
   16ebc:	bc000117 	ldw	r16,4(r23)
   16ec0:	bdc00204 	addi	r23,r23,8
   16ec4:	003fc206 	br	16dd0 <_gp+0xffff1b74>
   16ec8:	802b883a 	mov	r21,r16
   16ecc:	802d883a 	mov	r22,r16
   16ed0:	003fec06 	br	16e84 <_gp+0xffff1c28>
   16ed4:	9809883a 	mov	r4,r19
   16ed8:	00185240 	call	18524 <_realloc_r>
   16edc:	1029883a 	mov	r20,r2
   16ee0:	103fe01e 	bne	r2,zero,16e64 <_gp+0xffff1c08>
   16ee4:	89400417 	ldw	r5,16(r17)
   16ee8:	9809883a 	mov	r4,r19
   16eec:	00155a00 	call	155a0 <_free_r>
   16ef0:	88c0030b 	ldhu	r3,12(r17)
   16ef4:	00800304 	movi	r2,12
   16ef8:	98800015 	stw	r2,0(r19)
   16efc:	18c01014 	ori	r3,r3,64
   16f00:	88c0030d 	sth	r3,12(r17)
   16f04:	00bfffc4 	movi	r2,-1
   16f08:	90000215 	stw	zero,8(r18)
   16f0c:	90000115 	stw	zero,4(r18)
   16f10:	00000206 	br	16f1c <__ssprint_r+0x1a0>
   16f14:	90000115 	stw	zero,4(r18)
   16f18:	0005883a 	mov	r2,zero
   16f1c:	dfc00917 	ldw	ra,36(sp)
   16f20:	df000817 	ldw	fp,32(sp)
   16f24:	ddc00717 	ldw	r23,28(sp)
   16f28:	dd800617 	ldw	r22,24(sp)
   16f2c:	dd400517 	ldw	r21,20(sp)
   16f30:	dd000417 	ldw	r20,16(sp)
   16f34:	dcc00317 	ldw	r19,12(sp)
   16f38:	dc800217 	ldw	r18,8(sp)
   16f3c:	dc400117 	ldw	r17,4(sp)
   16f40:	dc000017 	ldw	r16,0(sp)
   16f44:	dec00a04 	addi	sp,sp,40
   16f48:	f800283a 	ret

00016f4c <___svfiprintf_internal_r>:
   16f4c:	2880030b 	ldhu	r2,12(r5)
   16f50:	deffc804 	addi	sp,sp,-224
   16f54:	dcc03115 	stw	r19,196(sp)
   16f58:	dfc03715 	stw	ra,220(sp)
   16f5c:	df003615 	stw	fp,216(sp)
   16f60:	ddc03515 	stw	r23,212(sp)
   16f64:	dd803415 	stw	r22,208(sp)
   16f68:	dd403315 	stw	r21,204(sp)
   16f6c:	dd003215 	stw	r20,200(sp)
   16f70:	dc803015 	stw	r18,192(sp)
   16f74:	dc402f15 	stw	r17,188(sp)
   16f78:	dc002e15 	stw	r16,184(sp)
   16f7c:	d9402315 	stw	r5,140(sp)
   16f80:	d9002715 	stw	r4,156(sp)
   16f84:	1080200c 	andi	r2,r2,128
   16f88:	d9c02415 	stw	r7,144(sp)
   16f8c:	3027883a 	mov	r19,r6
   16f90:	10000226 	beq	r2,zero,16f9c <___svfiprintf_internal_r+0x50>
   16f94:	28800417 	ldw	r2,16(r5)
   16f98:	10046d26 	beq	r2,zero,18150 <___svfiprintf_internal_r+0x1204>
   16f9c:	d8801a04 	addi	r2,sp,104
   16fa0:	d8c019c4 	addi	r3,sp,103
   16fa4:	058000b4 	movhi	r22,2
   16fa8:	10c9c83a 	sub	r4,r2,r3
   16fac:	b5b1fc04 	addi	r22,r22,-14352
   16fb0:	d8801e15 	stw	r2,120(sp)
   16fb4:	d8c01f15 	stw	r3,124(sp)
   16fb8:	dec01a15 	stw	sp,104(sp)
   16fbc:	d8001c15 	stw	zero,112(sp)
   16fc0:	d8001b15 	stw	zero,108(sp)
   16fc4:	d811883a 	mov	r8,sp
   16fc8:	d8002915 	stw	zero,164(sp)
   16fcc:	d8002615 	stw	zero,152(sp)
   16fd0:	d9002c15 	stw	r4,176(sp)
   16fd4:	98800007 	ldb	r2,0(r19)
   16fd8:	10031426 	beq	r2,zero,17c2c <___svfiprintf_internal_r+0xce0>
   16fdc:	00c00944 	movi	r3,37
   16fe0:	9825883a 	mov	r18,r19
   16fe4:	10c0021e 	bne	r2,r3,16ff0 <___svfiprintf_internal_r+0xa4>
   16fe8:	00001406 	br	1703c <___svfiprintf_internal_r+0xf0>
   16fec:	10c00326 	beq	r2,r3,16ffc <___svfiprintf_internal_r+0xb0>
   16ff0:	94800044 	addi	r18,r18,1
   16ff4:	90800007 	ldb	r2,0(r18)
   16ff8:	103ffc1e 	bne	r2,zero,16fec <_gp+0xffff1d90>
   16ffc:	94e1c83a 	sub	r16,r18,r19
   17000:	80000e26 	beq	r16,zero,1703c <___svfiprintf_internal_r+0xf0>
   17004:	d8c01c17 	ldw	r3,112(sp)
   17008:	d8801b17 	ldw	r2,108(sp)
   1700c:	44c00015 	stw	r19,0(r8)
   17010:	1c07883a 	add	r3,r3,r16
   17014:	10800044 	addi	r2,r2,1
   17018:	d8c01c15 	stw	r3,112(sp)
   1701c:	44000115 	stw	r16,4(r8)
   17020:	d8801b15 	stw	r2,108(sp)
   17024:	00c001c4 	movi	r3,7
   17028:	18835c16 	blt	r3,r2,17d9c <___svfiprintf_internal_r+0xe50>
   1702c:	42000204 	addi	r8,r8,8
   17030:	d9402617 	ldw	r5,152(sp)
   17034:	2c0b883a 	add	r5,r5,r16
   17038:	d9402615 	stw	r5,152(sp)
   1703c:	90800007 	ldb	r2,0(r18)
   17040:	1002fc26 	beq	r2,zero,17c34 <___svfiprintf_internal_r+0xce8>
   17044:	0023883a 	mov	r17,zero
   17048:	00bfffc4 	movi	r2,-1
   1704c:	0021883a 	mov	r16,zero
   17050:	94c00044 	addi	r19,r18,1
   17054:	90c00047 	ldb	r3,1(r18)
   17058:	dc402105 	stb	r17,132(sp)
   1705c:	d8001d85 	stb	zero,118(sp)
   17060:	002b883a 	mov	r21,zero
   17064:	d8802015 	stw	r2,128(sp)
   17068:	d8002515 	stw	zero,148(sp)
   1706c:	04801604 	movi	r18,88
   17070:	05000244 	movi	r20,9
   17074:	402f883a 	mov	r23,r8
   17078:	8023883a 	mov	r17,r16
   1707c:	9cc00044 	addi	r19,r19,1
   17080:	18bff804 	addi	r2,r3,-32
   17084:	9081fb36 	bltu	r18,r2,17874 <___svfiprintf_internal_r+0x928>
   17088:	100490ba 	slli	r2,r2,2
   1708c:	01000074 	movhi	r4,1
   17090:	211c2804 	addi	r4,r4,28832
   17094:	1105883a 	add	r2,r2,r4
   17098:	10800017 	ldw	r2,0(r2)
   1709c:	1000683a 	jmp	r2
   170a0:	000172a0 	cmpeqi	zero,zero,1482
   170a4:	00017874 	movhi	zero,1505
   170a8:	00017874 	movhi	zero,1505
   170ac:	00017294 	movui	zero,1482
   170b0:	00017874 	movhi	zero,1505
   170b4:	00017874 	movhi	zero,1505
   170b8:	00017874 	movhi	zero,1505
   170bc:	00017874 	movhi	zero,1505
   170c0:	00017874 	movhi	zero,1505
   170c4:	00017874 	movhi	zero,1505
   170c8:	00017204 	movi	zero,1480
   170cc:	00017400 	call	1740 <__alt_mem_onchip_memory-0xe8c0>
   170d0:	00017874 	movhi	zero,1505
   170d4:	0001722c 	andhi	zero,zero,1480
   170d8:	000178b0 	cmpltui	zero,zero,1506
   170dc:	00017874 	movhi	zero,1505
   170e0:	000178a4 	muli	zero,zero,1506
   170e4:	00017838 	rdprs	zero,zero,1504
   170e8:	00017838 	rdprs	zero,zero,1504
   170ec:	00017838 	rdprs	zero,zero,1504
   170f0:	00017838 	rdprs	zero,zero,1504
   170f4:	00017838 	rdprs	zero,zero,1504
   170f8:	00017838 	rdprs	zero,zero,1504
   170fc:	00017838 	rdprs	zero,zero,1504
   17100:	00017838 	rdprs	zero,zero,1504
   17104:	00017838 	rdprs	zero,zero,1504
   17108:	00017874 	movhi	zero,1505
   1710c:	00017874 	movhi	zero,1505
   17110:	00017874 	movhi	zero,1505
   17114:	00017874 	movhi	zero,1505
   17118:	00017874 	movhi	zero,1505
   1711c:	00017874 	movhi	zero,1505
   17120:	00017874 	movhi	zero,1505
   17124:	00017874 	movhi	zero,1505
   17128:	00017874 	movhi	zero,1505
   1712c:	00017874 	movhi	zero,1505
   17130:	000177bc 	xorhi	zero,zero,1502
   17134:	00017874 	movhi	zero,1505
   17138:	00017874 	movhi	zero,1505
   1713c:	00017874 	movhi	zero,1505
   17140:	00017874 	movhi	zero,1505
   17144:	00017874 	movhi	zero,1505
   17148:	00017874 	movhi	zero,1505
   1714c:	00017874 	movhi	zero,1505
   17150:	00017874 	movhi	zero,1505
   17154:	00017874 	movhi	zero,1505
   17158:	00017874 	movhi	zero,1505
   1715c:	0001796c 	andhi	zero,zero,1509
   17160:	00017874 	movhi	zero,1505
   17164:	00017874 	movhi	zero,1505
   17168:	00017874 	movhi	zero,1505
   1716c:	00017874 	movhi	zero,1505
   17170:	00017874 	movhi	zero,1505
   17174:	000178f8 	rdprs	zero,zero,1507
   17178:	00017874 	movhi	zero,1505
   1717c:	00017874 	movhi	zero,1505
   17180:	000175f8 	rdprs	zero,zero,1495
   17184:	00017874 	movhi	zero,1505
   17188:	00017874 	movhi	zero,1505
   1718c:	00017874 	movhi	zero,1505
   17190:	00017874 	movhi	zero,1505
   17194:	00017874 	movhi	zero,1505
   17198:	00017874 	movhi	zero,1505
   1719c:	00017874 	movhi	zero,1505
   171a0:	00017874 	movhi	zero,1505
   171a4:	00017874 	movhi	zero,1505
   171a8:	00017874 	movhi	zero,1505
   171ac:	000174c4 	movi	zero,1491
   171b0:	000176a8 	cmpgeui	zero,zero,1498
   171b4:	00017874 	movhi	zero,1505
   171b8:	00017874 	movhi	zero,1505
   171bc:	00017874 	movhi	zero,1505
   171c0:	0001769c 	xori	zero,zero,1498
   171c4:	000176a8 	cmpgeui	zero,zero,1498
   171c8:	00017874 	movhi	zero,1505
   171cc:	00017874 	movhi	zero,1505
   171d0:	00017688 	cmpgei	zero,zero,1498
   171d4:	00017874 	movhi	zero,1505
   171d8:	00017648 	cmpgei	zero,zero,1497
   171dc:	00017414 	movui	zero,1488
   171e0:	00017238 	rdprs	zero,zero,1480
   171e4:	000177b0 	cmpltui	zero,zero,1502
   171e8:	00017874 	movhi	zero,1505
   171ec:	0001775c 	xori	zero,zero,1501
   171f0:	00017874 	movhi	zero,1505
   171f4:	00017378 	rdprs	zero,zero,1485
   171f8:	00017874 	movhi	zero,1505
   171fc:	00017874 	movhi	zero,1505
   17200:	000172c4 	movi	zero,1483
   17204:	d9002417 	ldw	r4,144(sp)
   17208:	d9402417 	ldw	r5,144(sp)
   1720c:	21000017 	ldw	r4,0(r4)
   17210:	28800104 	addi	r2,r5,4
   17214:	d9002515 	stw	r4,148(sp)
   17218:	20032b0e 	bge	r4,zero,17ec8 <___svfiprintf_internal_r+0xf7c>
   1721c:	d8c02517 	ldw	r3,148(sp)
   17220:	d8802415 	stw	r2,144(sp)
   17224:	00c7c83a 	sub	r3,zero,r3
   17228:	d8c02515 	stw	r3,148(sp)
   1722c:	8c400114 	ori	r17,r17,4
   17230:	98c00007 	ldb	r3,0(r19)
   17234:	003f9106 	br	1707c <_gp+0xffff1e20>
   17238:	00800c04 	movi	r2,48
   1723c:	d9402417 	ldw	r5,144(sp)
   17240:	d9002017 	ldw	r4,128(sp)
   17244:	d8801d05 	stb	r2,116(sp)
   17248:	00801e04 	movi	r2,120
   1724c:	d8801d45 	stb	r2,117(sp)
   17250:	d8001d85 	stb	zero,118(sp)
   17254:	b811883a 	mov	r8,r23
   17258:	28c00104 	addi	r3,r5,4
   1725c:	2c800017 	ldw	r18,0(r5)
   17260:	0029883a 	mov	r20,zero
   17264:	88800094 	ori	r2,r17,2
   17268:	20036316 	blt	r4,zero,17ff8 <___svfiprintf_internal_r+0x10ac>
   1726c:	00bfdfc4 	movi	r2,-129
   17270:	88a0703a 	and	r16,r17,r2
   17274:	d8c02415 	stw	r3,144(sp)
   17278:	84000094 	ori	r16,r16,2
   1727c:	90031c26 	beq	r18,zero,17ef0 <___svfiprintf_internal_r+0xfa4>
   17280:	014000b4 	movhi	r5,2
   17284:	29719c04 	addi	r5,r5,-14736
   17288:	002b883a 	mov	r21,zero
   1728c:	d9402915 	stw	r5,164(sp)
   17290:	00002906 	br	17338 <___svfiprintf_internal_r+0x3ec>
   17294:	8c400054 	ori	r17,r17,1
   17298:	98c00007 	ldb	r3,0(r19)
   1729c:	003f7706 	br	1707c <_gp+0xffff1e20>
   172a0:	a8803fcc 	andi	r2,r21,255
   172a4:	1080201c 	xori	r2,r2,128
   172a8:	10bfe004 	addi	r2,r2,-128
   172ac:	10032a1e 	bne	r2,zero,17f58 <___svfiprintf_internal_r+0x100c>
   172b0:	00c00044 	movi	r3,1
   172b4:	d8c02105 	stb	r3,132(sp)
   172b8:	05400804 	movi	r21,32
   172bc:	98c00007 	ldb	r3,0(r19)
   172c0:	003f6e06 	br	1707c <_gp+0xffff1e20>
   172c4:	8821883a 	mov	r16,r17
   172c8:	dc402103 	ldbu	r17,132(sp)
   172cc:	b811883a 	mov	r8,r23
   172d0:	8c403fcc 	andi	r17,r17,255
   172d4:	8803f01e 	bne	r17,zero,18298 <___svfiprintf_internal_r+0x134c>
   172d8:	008000b4 	movhi	r2,2
   172dc:	10b19c04 	addi	r2,r2,-14736
   172e0:	d8802915 	stw	r2,164(sp)
   172e4:	8080080c 	andi	r2,r16,32
   172e8:	1000cd26 	beq	r2,zero,17620 <___svfiprintf_internal_r+0x6d4>
   172ec:	d9002417 	ldw	r4,144(sp)
   172f0:	24800017 	ldw	r18,0(r4)
   172f4:	25000117 	ldw	r20,4(r4)
   172f8:	21000204 	addi	r4,r4,8
   172fc:	d9002415 	stw	r4,144(sp)
   17300:	8080004c 	andi	r2,r16,1
   17304:	1002c726 	beq	r2,zero,17e24 <___svfiprintf_internal_r+0xed8>
   17308:	9504b03a 	or	r2,r18,r20
   1730c:	1003061e 	bne	r2,zero,17f28 <___svfiprintf_internal_r+0xfdc>
   17310:	d9002017 	ldw	r4,128(sp)
   17314:	d8001d85 	stb	zero,118(sp)
   17318:	20033e16 	blt	r4,zero,18014 <___svfiprintf_internal_r+0x10c8>
   1731c:	00bfdfc4 	movi	r2,-129
   17320:	80a0703a 	and	r16,r16,r2
   17324:	d9402017 	ldw	r5,128(sp)
   17328:	002b883a 	mov	r21,zero
   1732c:	28002826 	beq	r5,zero,173d0 <___svfiprintf_internal_r+0x484>
   17330:	0025883a 	mov	r18,zero
   17334:	0029883a 	mov	r20,zero
   17338:	d9002917 	ldw	r4,164(sp)
   1733c:	dc401a04 	addi	r17,sp,104
   17340:	908003cc 	andi	r2,r18,15
   17344:	a006973a 	slli	r3,r20,28
   17348:	2085883a 	add	r2,r4,r2
   1734c:	9024d13a 	srli	r18,r18,4
   17350:	10800003 	ldbu	r2,0(r2)
   17354:	a028d13a 	srli	r20,r20,4
   17358:	8c7fffc4 	addi	r17,r17,-1
   1735c:	1ca4b03a 	or	r18,r3,r18
   17360:	88800005 	stb	r2,0(r17)
   17364:	9504b03a 	or	r2,r18,r20
   17368:	103ff51e 	bne	r2,zero,17340 <_gp+0xffff20e4>
   1736c:	d8801e17 	ldw	r2,120(sp)
   17370:	1469c83a 	sub	r20,r2,r17
   17374:	00001906 	br	173dc <___svfiprintf_internal_r+0x490>
   17378:	8821883a 	mov	r16,r17
   1737c:	dc402103 	ldbu	r17,132(sp)
   17380:	b811883a 	mov	r8,r23
   17384:	8c403fcc 	andi	r17,r17,255
   17388:	8803d01e 	bne	r17,zero,182cc <___svfiprintf_internal_r+0x1380>
   1738c:	8080080c 	andi	r2,r16,32
   17390:	10016126 	beq	r2,zero,17918 <___svfiprintf_internal_r+0x9cc>
   17394:	d9002417 	ldw	r4,144(sp)
   17398:	d9402017 	ldw	r5,128(sp)
   1739c:	d8001d85 	stb	zero,118(sp)
   173a0:	20c00204 	addi	r3,r4,8
   173a4:	24800017 	ldw	r18,0(r4)
   173a8:	25000117 	ldw	r20,4(r4)
   173ac:	28030f16 	blt	r5,zero,17fec <___svfiprintf_internal_r+0x10a0>
   173b0:	013fdfc4 	movi	r4,-129
   173b4:	9504b03a 	or	r2,r18,r20
   173b8:	d8c02415 	stw	r3,144(sp)
   173bc:	8120703a 	and	r16,r16,r4
   173c0:	002b883a 	mov	r21,zero
   173c4:	1000cd1e 	bne	r2,zero,176fc <___svfiprintf_internal_r+0x7b0>
   173c8:	d8c02017 	ldw	r3,128(sp)
   173cc:	1803141e 	bne	r3,zero,18020 <___svfiprintf_internal_r+0x10d4>
   173d0:	d8002015 	stw	zero,128(sp)
   173d4:	0029883a 	mov	r20,zero
   173d8:	dc401a04 	addi	r17,sp,104
   173dc:	dc802017 	ldw	r18,128(sp)
   173e0:	9500010e 	bge	r18,r20,173e8 <___svfiprintf_internal_r+0x49c>
   173e4:	a025883a 	mov	r18,r20
   173e8:	ad403fcc 	andi	r21,r21,255
   173ec:	ad40201c 	xori	r21,r21,128
   173f0:	ad7fe004 	addi	r21,r21,-128
   173f4:	a8003f26 	beq	r21,zero,174f4 <___svfiprintf_internal_r+0x5a8>
   173f8:	94800044 	addi	r18,r18,1
   173fc:	00003d06 	br	174f4 <___svfiprintf_internal_r+0x5a8>
   17400:	00c00044 	movi	r3,1
   17404:	d8c02105 	stb	r3,132(sp)
   17408:	05400ac4 	movi	r21,43
   1740c:	98c00007 	ldb	r3,0(r19)
   17410:	003f1a06 	br	1707c <_gp+0xffff1e20>
   17414:	8821883a 	mov	r16,r17
   17418:	dc402103 	ldbu	r17,132(sp)
   1741c:	b811883a 	mov	r8,r23
   17420:	8c403fcc 	andi	r17,r17,255
   17424:	8803a71e 	bne	r17,zero,182c4 <___svfiprintf_internal_r+0x1378>
   17428:	8080080c 	andi	r2,r16,32
   1742c:	10015726 	beq	r2,zero,1798c <___svfiprintf_internal_r+0xa40>
   17430:	d8c02417 	ldw	r3,144(sp)
   17434:	d9002017 	ldw	r4,128(sp)
   17438:	d8001d85 	stb	zero,118(sp)
   1743c:	18800204 	addi	r2,r3,8
   17440:	1c800017 	ldw	r18,0(r3)
   17444:	1d000117 	ldw	r20,4(r3)
   17448:	2002db16 	blt	r4,zero,17fb8 <___svfiprintf_internal_r+0x106c>
   1744c:	013fdfc4 	movi	r4,-129
   17450:	9506b03a 	or	r3,r18,r20
   17454:	d8802415 	stw	r2,144(sp)
   17458:	8120703a 	and	r16,r16,r4
   1745c:	18015826 	beq	r3,zero,179c0 <___svfiprintf_internal_r+0xa74>
   17460:	002b883a 	mov	r21,zero
   17464:	dc401a04 	addi	r17,sp,104
   17468:	9006d0fa 	srli	r3,r18,3
   1746c:	a008977a 	slli	r4,r20,29
   17470:	a028d0fa 	srli	r20,r20,3
   17474:	948001cc 	andi	r18,r18,7
   17478:	90800c04 	addi	r2,r18,48
   1747c:	8c7fffc4 	addi	r17,r17,-1
   17480:	20e4b03a 	or	r18,r4,r3
   17484:	88800005 	stb	r2,0(r17)
   17488:	9506b03a 	or	r3,r18,r20
   1748c:	183ff61e 	bne	r3,zero,17468 <_gp+0xffff220c>
   17490:	80c0004c 	andi	r3,r16,1
   17494:	18028926 	beq	r3,zero,17ebc <___svfiprintf_internal_r+0xf70>
   17498:	10803fcc 	andi	r2,r2,255
   1749c:	1080201c 	xori	r2,r2,128
   174a0:	10bfe004 	addi	r2,r2,-128
   174a4:	00c00c04 	movi	r3,48
   174a8:	10ffb026 	beq	r2,r3,1736c <_gp+0xffff2110>
   174ac:	88ffffc5 	stb	r3,-1(r17)
   174b0:	d8c01e17 	ldw	r3,120(sp)
   174b4:	88bfffc4 	addi	r2,r17,-1
   174b8:	1023883a 	mov	r17,r2
   174bc:	18a9c83a 	sub	r20,r3,r2
   174c0:	003fc606 	br	173dc <_gp+0xffff2180>
   174c4:	d8c02417 	ldw	r3,144(sp)
   174c8:	04800044 	movi	r18,1
   174cc:	8821883a 	mov	r16,r17
   174d0:	18800017 	ldw	r2,0(r3)
   174d4:	18c00104 	addi	r3,r3,4
   174d8:	b811883a 	mov	r8,r23
   174dc:	d8001d85 	stb	zero,118(sp)
   174e0:	d8801005 	stb	r2,64(sp)
   174e4:	d8c02415 	stw	r3,144(sp)
   174e8:	9029883a 	mov	r20,r18
   174ec:	dc401004 	addi	r17,sp,64
   174f0:	d8002015 	stw	zero,128(sp)
   174f4:	80c0008c 	andi	r3,r16,2
   174f8:	d8c02115 	stw	r3,132(sp)
   174fc:	18000126 	beq	r3,zero,17504 <___svfiprintf_internal_r+0x5b8>
   17500:	94800084 	addi	r18,r18,2
   17504:	80c0210c 	andi	r3,r16,132
   17508:	d8c02215 	stw	r3,136(sp)
   1750c:	1801321e 	bne	r3,zero,179d8 <___svfiprintf_internal_r+0xa8c>
   17510:	d9002517 	ldw	r4,148(sp)
   17514:	24b9c83a 	sub	fp,r4,r18
   17518:	07012f0e 	bge	zero,fp,179d8 <___svfiprintf_internal_r+0xa8c>
   1751c:	02400404 	movi	r9,16
   17520:	d8c01c17 	ldw	r3,112(sp)
   17524:	d8801b17 	ldw	r2,108(sp)
   17528:	4f03250e 	bge	r9,fp,181c0 <___svfiprintf_internal_r+0x1274>
   1752c:	010000b4 	movhi	r4,2
   17530:	21320004 	addi	r4,r4,-14336
   17534:	dc002a15 	stw	r16,168(sp)
   17538:	dc402b15 	stw	r17,172(sp)
   1753c:	d9002815 	stw	r4,160(sp)
   17540:	e023883a 	mov	r17,fp
   17544:	482f883a 	mov	r23,r9
   17548:	9839883a 	mov	fp,r19
   1754c:	054001c4 	movi	r21,7
   17550:	9027883a 	mov	r19,r18
   17554:	dc002717 	ldw	r16,156(sp)
   17558:	dc802317 	ldw	r18,140(sp)
   1755c:	00000306 	br	1756c <___svfiprintf_internal_r+0x620>
   17560:	8c7ffc04 	addi	r17,r17,-16
   17564:	42000204 	addi	r8,r8,8
   17568:	bc40130e 	bge	r23,r17,175b8 <___svfiprintf_internal_r+0x66c>
   1756c:	014000b4 	movhi	r5,2
   17570:	18c00404 	addi	r3,r3,16
   17574:	10800044 	addi	r2,r2,1
   17578:	29720004 	addi	r5,r5,-14336
   1757c:	41400015 	stw	r5,0(r8)
   17580:	45c00115 	stw	r23,4(r8)
   17584:	d8c01c15 	stw	r3,112(sp)
   17588:	d8801b15 	stw	r2,108(sp)
   1758c:	a8bff40e 	bge	r21,r2,17560 <_gp+0xffff2304>
   17590:	d9801a04 	addi	r6,sp,104
   17594:	900b883a 	mov	r5,r18
   17598:	8009883a 	mov	r4,r16
   1759c:	0016d7c0 	call	16d7c <__ssprint_r>
   175a0:	1001aa1e 	bne	r2,zero,17c4c <___svfiprintf_internal_r+0xd00>
   175a4:	8c7ffc04 	addi	r17,r17,-16
   175a8:	d8c01c17 	ldw	r3,112(sp)
   175ac:	d8801b17 	ldw	r2,108(sp)
   175b0:	d811883a 	mov	r8,sp
   175b4:	bc7fed16 	blt	r23,r17,1756c <_gp+0xffff2310>
   175b8:	9825883a 	mov	r18,r19
   175bc:	dc002a17 	ldw	r16,168(sp)
   175c0:	e027883a 	mov	r19,fp
   175c4:	8839883a 	mov	fp,r17
   175c8:	dc402b17 	ldw	r17,172(sp)
   175cc:	d9002817 	ldw	r4,160(sp)
   175d0:	e0c7883a 	add	r3,fp,r3
   175d4:	10800044 	addi	r2,r2,1
   175d8:	41000015 	stw	r4,0(r8)
   175dc:	47000115 	stw	fp,4(r8)
   175e0:	d8c01c15 	stw	r3,112(sp)
   175e4:	d8801b15 	stw	r2,108(sp)
   175e8:	010001c4 	movi	r4,7
   175ec:	20821616 	blt	r4,r2,17e48 <___svfiprintf_internal_r+0xefc>
   175f0:	42000204 	addi	r8,r8,8
   175f4:	0000fa06 	br	179e0 <___svfiprintf_internal_r+0xa94>
   175f8:	8821883a 	mov	r16,r17
   175fc:	dc402103 	ldbu	r17,132(sp)
   17600:	b811883a 	mov	r8,r23
   17604:	8c403fcc 	andi	r17,r17,255
   17608:	8803361e 	bne	r17,zero,182e4 <___svfiprintf_internal_r+0x1398>
   1760c:	014000b4 	movhi	r5,2
   17610:	29719704 	addi	r5,r5,-14756
   17614:	d9402915 	stw	r5,164(sp)
   17618:	8080080c 	andi	r2,r16,32
   1761c:	103f331e 	bne	r2,zero,172ec <_gp+0xffff2090>
   17620:	8080040c 	andi	r2,r16,16
   17624:	1002551e 	bne	r2,zero,17f7c <___svfiprintf_internal_r+0x1030>
   17628:	8080100c 	andi	r2,r16,64
   1762c:	1002a626 	beq	r2,zero,180c8 <___svfiprintf_internal_r+0x117c>
   17630:	d8802417 	ldw	r2,144(sp)
   17634:	0029883a 	mov	r20,zero
   17638:	1480000b 	ldhu	r18,0(r2)
   1763c:	10800104 	addi	r2,r2,4
   17640:	d8802415 	stw	r2,144(sp)
   17644:	003f2e06 	br	17300 <_gp+0xffff20a4>
   17648:	8821883a 	mov	r16,r17
   1764c:	dc402103 	ldbu	r17,132(sp)
   17650:	b811883a 	mov	r8,r23
   17654:	8c403fcc 	andi	r17,r17,255
   17658:	88030b1e 	bne	r17,zero,18288 <___svfiprintf_internal_r+0x133c>
   1765c:	8080080c 	andi	r2,r16,32
   17660:	1002271e 	bne	r2,zero,17f00 <___svfiprintf_internal_r+0xfb4>
   17664:	8080040c 	andi	r2,r16,16
   17668:	10028e26 	beq	r2,zero,180a4 <___svfiprintf_internal_r+0x1158>
   1766c:	d8c02417 	ldw	r3,144(sp)
   17670:	d9002617 	ldw	r4,152(sp)
   17674:	18800017 	ldw	r2,0(r3)
   17678:	18c00104 	addi	r3,r3,4
   1767c:	d8c02415 	stw	r3,144(sp)
   17680:	11000015 	stw	r4,0(r2)
   17684:	003e5306 	br	16fd4 <_gp+0xffff1d78>
   17688:	98c00007 	ldb	r3,0(r19)
   1768c:	01401b04 	movi	r5,108
   17690:	19424f26 	beq	r3,r5,17fd0 <___svfiprintf_internal_r+0x1084>
   17694:	8c400414 	ori	r17,r17,16
   17698:	003e7806 	br	1707c <_gp+0xffff1e20>
   1769c:	8c401014 	ori	r17,r17,64
   176a0:	98c00007 	ldb	r3,0(r19)
   176a4:	003e7506 	br	1707c <_gp+0xffff1e20>
   176a8:	8821883a 	mov	r16,r17
   176ac:	dc402103 	ldbu	r17,132(sp)
   176b0:	b811883a 	mov	r8,r23
   176b4:	8c403fcc 	andi	r17,r17,255
   176b8:	8802fe1e 	bne	r17,zero,182b4 <___svfiprintf_internal_r+0x1368>
   176bc:	8080080c 	andi	r2,r16,32
   176c0:	10004626 	beq	r2,zero,177dc <___svfiprintf_internal_r+0x890>
   176c4:	d9002417 	ldw	r4,144(sp)
   176c8:	20800117 	ldw	r2,4(r4)
   176cc:	24800017 	ldw	r18,0(r4)
   176d0:	21000204 	addi	r4,r4,8
   176d4:	d9002415 	stw	r4,144(sp)
   176d8:	1029883a 	mov	r20,r2
   176dc:	10004a16 	blt	r2,zero,17808 <___svfiprintf_internal_r+0x8bc>
   176e0:	d9002017 	ldw	r4,128(sp)
   176e4:	dd401d83 	ldbu	r21,118(sp)
   176e8:	2001eb16 	blt	r4,zero,17e98 <___svfiprintf_internal_r+0xf4c>
   176ec:	00ffdfc4 	movi	r3,-129
   176f0:	9504b03a 	or	r2,r18,r20
   176f4:	80e0703a 	and	r16,r16,r3
   176f8:	103f3326 	beq	r2,zero,173c8 <_gp+0xffff216c>
   176fc:	a0009426 	beq	r20,zero,17950 <___svfiprintf_internal_r+0xa04>
   17700:	dc401a04 	addi	r17,sp,104
   17704:	402f883a 	mov	r23,r8
   17708:	9009883a 	mov	r4,r18
   1770c:	a00b883a 	mov	r5,r20
   17710:	01800284 	movi	r6,10
   17714:	000f883a 	mov	r7,zero
   17718:	00190840 	call	19084 <__umoddi3>
   1771c:	10800c04 	addi	r2,r2,48
   17720:	8c7fffc4 	addi	r17,r17,-1
   17724:	9009883a 	mov	r4,r18
   17728:	a00b883a 	mov	r5,r20
   1772c:	88800005 	stb	r2,0(r17)
   17730:	01800284 	movi	r6,10
   17734:	000f883a 	mov	r7,zero
   17738:	0018a880 	call	18a88 <__udivdi3>
   1773c:	1025883a 	mov	r18,r2
   17740:	10c4b03a 	or	r2,r2,r3
   17744:	1829883a 	mov	r20,r3
   17748:	103fef1e 	bne	r2,zero,17708 <_gp+0xffff24ac>
   1774c:	d9001e17 	ldw	r4,120(sp)
   17750:	b811883a 	mov	r8,r23
   17754:	2469c83a 	sub	r20,r4,r17
   17758:	003f2006 	br	173dc <_gp+0xffff2180>
   1775c:	d8802417 	ldw	r2,144(sp)
   17760:	8821883a 	mov	r16,r17
   17764:	d8001d85 	stb	zero,118(sp)
   17768:	14400017 	ldw	r17,0(r2)
   1776c:	b811883a 	mov	r8,r23
   17770:	15c00104 	addi	r23,r2,4
   17774:	88026c26 	beq	r17,zero,18128 <___svfiprintf_internal_r+0x11dc>
   17778:	d8c02017 	ldw	r3,128(sp)
   1777c:	18025f16 	blt	r3,zero,180fc <___svfiprintf_internal_r+0x11b0>
   17780:	180d883a 	mov	r6,r3
   17784:	000b883a 	mov	r5,zero
   17788:	8809883a 	mov	r4,r17
   1778c:	da002d15 	stw	r8,180(sp)
   17790:	001598c0 	call	1598c <memchr>
   17794:	da002d17 	ldw	r8,180(sp)
   17798:	1002a526 	beq	r2,zero,18230 <___svfiprintf_internal_r+0x12e4>
   1779c:	1469c83a 	sub	r20,r2,r17
   177a0:	dd401d83 	ldbu	r21,118(sp)
   177a4:	ddc02415 	stw	r23,144(sp)
   177a8:	d8002015 	stw	zero,128(sp)
   177ac:	003f0b06 	br	173dc <_gp+0xffff2180>
   177b0:	8c400814 	ori	r17,r17,32
   177b4:	98c00007 	ldb	r3,0(r19)
   177b8:	003e3006 	br	1707c <_gp+0xffff1e20>
   177bc:	8821883a 	mov	r16,r17
   177c0:	dc402103 	ldbu	r17,132(sp)
   177c4:	b811883a 	mov	r8,r23
   177c8:	8c403fcc 	andi	r17,r17,255
   177cc:	8802b01e 	bne	r17,zero,18290 <___svfiprintf_internal_r+0x1344>
   177d0:	84000414 	ori	r16,r16,16
   177d4:	8080080c 	andi	r2,r16,32
   177d8:	103fba1e 	bne	r2,zero,176c4 <_gp+0xffff2468>
   177dc:	8080040c 	andi	r2,r16,16
   177e0:	1001df1e 	bne	r2,zero,17f60 <___svfiprintf_internal_r+0x1014>
   177e4:	8080100c 	andi	r2,r16,64
   177e8:	10023d26 	beq	r2,zero,180e0 <___svfiprintf_internal_r+0x1194>
   177ec:	d8802417 	ldw	r2,144(sp)
   177f0:	1480000f 	ldh	r18,0(r2)
   177f4:	10800104 	addi	r2,r2,4
   177f8:	d8802415 	stw	r2,144(sp)
   177fc:	9029d7fa 	srai	r20,r18,31
   17800:	a005883a 	mov	r2,r20
   17804:	103fb60e 	bge	r2,zero,176e0 <_gp+0xffff2484>
   17808:	d9402017 	ldw	r5,128(sp)
   1780c:	04a5c83a 	sub	r18,zero,r18
   17810:	05400b44 	movi	r21,45
   17814:	9004c03a 	cmpne	r2,r18,zero
   17818:	0529c83a 	sub	r20,zero,r20
   1781c:	dd401d85 	stb	r21,118(sp)
   17820:	a0a9c83a 	sub	r20,r20,r2
   17824:	28026c16 	blt	r5,zero,181d8 <___svfiprintf_internal_r+0x128c>
   17828:	00bfdfc4 	movi	r2,-129
   1782c:	80a0703a 	and	r16,r16,r2
   17830:	a03fb31e 	bne	r20,zero,17700 <_gp+0xffff24a4>
   17834:	00004606 	br	17950 <___svfiprintf_internal_r+0xa04>
   17838:	9839883a 	mov	fp,r19
   1783c:	d8002515 	stw	zero,148(sp)
   17840:	1c3ff404 	addi	r16,r3,-48
   17844:	0009883a 	mov	r4,zero
   17848:	01400284 	movi	r5,10
   1784c:	00196480 	call	19648 <__mulsi3>
   17850:	e0c00007 	ldb	r3,0(fp)
   17854:	8089883a 	add	r4,r16,r2
   17858:	9cc00044 	addi	r19,r19,1
   1785c:	1c3ff404 	addi	r16,r3,-48
   17860:	9839883a 	mov	fp,r19
   17864:	a43ff82e 	bgeu	r20,r16,17848 <_gp+0xffff25ec>
   17868:	d9002515 	stw	r4,148(sp)
   1786c:	18bff804 	addi	r2,r3,-32
   17870:	90be052e 	bgeu	r18,r2,17088 <_gp+0xffff1e2c>
   17874:	8821883a 	mov	r16,r17
   17878:	dc402103 	ldbu	r17,132(sp)
   1787c:	b811883a 	mov	r8,r23
   17880:	8c403fcc 	andi	r17,r17,255
   17884:	88028d1e 	bne	r17,zero,182bc <___svfiprintf_internal_r+0x1370>
   17888:	1800ea26 	beq	r3,zero,17c34 <___svfiprintf_internal_r+0xce8>
   1788c:	04800044 	movi	r18,1
   17890:	d8c01005 	stb	r3,64(sp)
   17894:	d8001d85 	stb	zero,118(sp)
   17898:	9029883a 	mov	r20,r18
   1789c:	dc401004 	addi	r17,sp,64
   178a0:	003f1306 	br	174f0 <_gp+0xffff2294>
   178a4:	8c402014 	ori	r17,r17,128
   178a8:	98c00007 	ldb	r3,0(r19)
   178ac:	003df306 	br	1707c <_gp+0xffff1e20>
   178b0:	98c00007 	ldb	r3,0(r19)
   178b4:	01000a84 	movi	r4,42
   178b8:	9f000044 	addi	fp,r19,1
   178bc:	19026326 	beq	r3,r4,1824c <___svfiprintf_internal_r+0x1300>
   178c0:	1c3ff404 	addi	r16,r3,-48
   178c4:	0009883a 	mov	r4,zero
   178c8:	a4025636 	bltu	r20,r16,18224 <___svfiprintf_internal_r+0x12d8>
   178cc:	01400284 	movi	r5,10
   178d0:	00196480 	call	19648 <__mulsi3>
   178d4:	e0c00007 	ldb	r3,0(fp)
   178d8:	1409883a 	add	r4,r2,r16
   178dc:	e4c00044 	addi	r19,fp,1
   178e0:	1c3ff404 	addi	r16,r3,-48
   178e4:	9839883a 	mov	fp,r19
   178e8:	a43ff82e 	bgeu	r20,r16,178cc <_gp+0xffff2670>
   178ec:	20020c16 	blt	r4,zero,18120 <___svfiprintf_internal_r+0x11d4>
   178f0:	d9002015 	stw	r4,128(sp)
   178f4:	003de206 	br	17080 <_gp+0xffff1e24>
   178f8:	8821883a 	mov	r16,r17
   178fc:	dc402103 	ldbu	r17,132(sp)
   17900:	b811883a 	mov	r8,r23
   17904:	8c403fcc 	andi	r17,r17,255
   17908:	8802721e 	bne	r17,zero,182d4 <___svfiprintf_internal_r+0x1388>
   1790c:	84000414 	ori	r16,r16,16
   17910:	8080080c 	andi	r2,r16,32
   17914:	103e9f1e 	bne	r2,zero,17394 <_gp+0xffff2138>
   17918:	8080040c 	andi	r2,r16,16
   1791c:	10015326 	beq	r2,zero,17e6c <___svfiprintf_internal_r+0xf20>
   17920:	d8c02417 	ldw	r3,144(sp)
   17924:	d9002017 	ldw	r4,128(sp)
   17928:	d8001d85 	stb	zero,118(sp)
   1792c:	18800104 	addi	r2,r3,4
   17930:	1c800017 	ldw	r18,0(r3)
   17934:	0029883a 	mov	r20,zero
   17938:	20015516 	blt	r4,zero,17e90 <___svfiprintf_internal_r+0xf44>
   1793c:	00ffdfc4 	movi	r3,-129
   17940:	d8802415 	stw	r2,144(sp)
   17944:	80e0703a 	and	r16,r16,r3
   17948:	002b883a 	mov	r21,zero
   1794c:	903e9e26 	beq	r18,zero,173c8 <_gp+0xffff216c>
   17950:	00800244 	movi	r2,9
   17954:	14bf6a36 	bltu	r2,r18,17700 <_gp+0xffff24a4>
   17958:	94800c04 	addi	r18,r18,48
   1795c:	dc8019c5 	stb	r18,103(sp)
   17960:	dd002c17 	ldw	r20,176(sp)
   17964:	dc4019c4 	addi	r17,sp,103
   17968:	003e9c06 	br	173dc <_gp+0xffff2180>
   1796c:	8821883a 	mov	r16,r17
   17970:	dc402103 	ldbu	r17,132(sp)
   17974:	b811883a 	mov	r8,r23
   17978:	8c403fcc 	andi	r17,r17,255
   1797c:	8802571e 	bne	r17,zero,182dc <___svfiprintf_internal_r+0x1390>
   17980:	84000414 	ori	r16,r16,16
   17984:	8080080c 	andi	r2,r16,32
   17988:	103ea91e 	bne	r2,zero,17430 <_gp+0xffff21d4>
   1798c:	8080040c 	andi	r2,r16,16
   17990:	10018026 	beq	r2,zero,17f94 <___svfiprintf_internal_r+0x1048>
   17994:	d9402417 	ldw	r5,144(sp)
   17998:	d8c02017 	ldw	r3,128(sp)
   1799c:	d8001d85 	stb	zero,118(sp)
   179a0:	28800104 	addi	r2,r5,4
   179a4:	2c800017 	ldw	r18,0(r5)
   179a8:	0029883a 	mov	r20,zero
   179ac:	18018216 	blt	r3,zero,17fb8 <___svfiprintf_internal_r+0x106c>
   179b0:	00ffdfc4 	movi	r3,-129
   179b4:	d8802415 	stw	r2,144(sp)
   179b8:	80e0703a 	and	r16,r16,r3
   179bc:	903ea81e 	bne	r18,zero,17460 <_gp+0xffff2204>
   179c0:	d8802017 	ldw	r2,128(sp)
   179c4:	002b883a 	mov	r21,zero
   179c8:	1001f226 	beq	r2,zero,18194 <___svfiprintf_internal_r+0x1248>
   179cc:	0025883a 	mov	r18,zero
   179d0:	0029883a 	mov	r20,zero
   179d4:	003ea306 	br	17464 <_gp+0xffff2208>
   179d8:	d8c01c17 	ldw	r3,112(sp)
   179dc:	d8801b17 	ldw	r2,108(sp)
   179e0:	d9001d87 	ldb	r4,118(sp)
   179e4:	20000b26 	beq	r4,zero,17a14 <___svfiprintf_internal_r+0xac8>
   179e8:	d9001d84 	addi	r4,sp,118
   179ec:	18c00044 	addi	r3,r3,1
   179f0:	10800044 	addi	r2,r2,1
   179f4:	41000015 	stw	r4,0(r8)
   179f8:	01000044 	movi	r4,1
   179fc:	41000115 	stw	r4,4(r8)
   17a00:	d8c01c15 	stw	r3,112(sp)
   17a04:	d8801b15 	stw	r2,108(sp)
   17a08:	010001c4 	movi	r4,7
   17a0c:	2080f316 	blt	r4,r2,17ddc <___svfiprintf_internal_r+0xe90>
   17a10:	42000204 	addi	r8,r8,8
   17a14:	d9402117 	ldw	r5,132(sp)
   17a18:	28000b26 	beq	r5,zero,17a48 <___svfiprintf_internal_r+0xafc>
   17a1c:	d9001d04 	addi	r4,sp,116
   17a20:	18c00084 	addi	r3,r3,2
   17a24:	10800044 	addi	r2,r2,1
   17a28:	41000015 	stw	r4,0(r8)
   17a2c:	01000084 	movi	r4,2
   17a30:	41000115 	stw	r4,4(r8)
   17a34:	d8c01c15 	stw	r3,112(sp)
   17a38:	d8801b15 	stw	r2,108(sp)
   17a3c:	010001c4 	movi	r4,7
   17a40:	2080ef16 	blt	r4,r2,17e00 <___svfiprintf_internal_r+0xeb4>
   17a44:	42000204 	addi	r8,r8,8
   17a48:	d9402217 	ldw	r5,136(sp)
   17a4c:	01002004 	movi	r4,128
   17a50:	29008f26 	beq	r5,r4,17c90 <___svfiprintf_internal_r+0xd44>
   17a54:	d9002017 	ldw	r4,128(sp)
   17a58:	252fc83a 	sub	r23,r4,r20
   17a5c:	05c0310e 	bge	zero,r23,17b24 <___svfiprintf_internal_r+0xbd8>
   17a60:	07000404 	movi	fp,16
   17a64:	e5c17d0e 	bge	fp,r23,1805c <___svfiprintf_internal_r+0x1110>
   17a68:	010000b4 	movhi	r4,2
   17a6c:	2131fc04 	addi	r4,r4,-14352
   17a70:	dc002015 	stw	r16,128(sp)
   17a74:	dc402215 	stw	r17,136(sp)
   17a78:	d9002115 	stw	r4,132(sp)
   17a7c:	b823883a 	mov	r17,r23
   17a80:	054001c4 	movi	r21,7
   17a84:	982f883a 	mov	r23,r19
   17a88:	dc002717 	ldw	r16,156(sp)
   17a8c:	9027883a 	mov	r19,r18
   17a90:	dc802317 	ldw	r18,140(sp)
   17a94:	00000306 	br	17aa4 <___svfiprintf_internal_r+0xb58>
   17a98:	8c7ffc04 	addi	r17,r17,-16
   17a9c:	42000204 	addi	r8,r8,8
   17aa0:	e440110e 	bge	fp,r17,17ae8 <___svfiprintf_internal_r+0xb9c>
   17aa4:	18c00404 	addi	r3,r3,16
   17aa8:	10800044 	addi	r2,r2,1
   17aac:	45800015 	stw	r22,0(r8)
   17ab0:	47000115 	stw	fp,4(r8)
   17ab4:	d8c01c15 	stw	r3,112(sp)
   17ab8:	d8801b15 	stw	r2,108(sp)
   17abc:	a8bff60e 	bge	r21,r2,17a98 <_gp+0xffff283c>
   17ac0:	d9801a04 	addi	r6,sp,104
   17ac4:	900b883a 	mov	r5,r18
   17ac8:	8009883a 	mov	r4,r16
   17acc:	0016d7c0 	call	16d7c <__ssprint_r>
   17ad0:	10005e1e 	bne	r2,zero,17c4c <___svfiprintf_internal_r+0xd00>
   17ad4:	8c7ffc04 	addi	r17,r17,-16
   17ad8:	d8c01c17 	ldw	r3,112(sp)
   17adc:	d8801b17 	ldw	r2,108(sp)
   17ae0:	d811883a 	mov	r8,sp
   17ae4:	e47fef16 	blt	fp,r17,17aa4 <_gp+0xffff2848>
   17ae8:	9825883a 	mov	r18,r19
   17aec:	dc002017 	ldw	r16,128(sp)
   17af0:	b827883a 	mov	r19,r23
   17af4:	882f883a 	mov	r23,r17
   17af8:	dc402217 	ldw	r17,136(sp)
   17afc:	d9402117 	ldw	r5,132(sp)
   17b00:	1dc7883a 	add	r3,r3,r23
   17b04:	10800044 	addi	r2,r2,1
   17b08:	41400015 	stw	r5,0(r8)
   17b0c:	45c00115 	stw	r23,4(r8)
   17b10:	d8c01c15 	stw	r3,112(sp)
   17b14:	d8801b15 	stw	r2,108(sp)
   17b18:	010001c4 	movi	r4,7
   17b1c:	2080a616 	blt	r4,r2,17db8 <___svfiprintf_internal_r+0xe6c>
   17b20:	42000204 	addi	r8,r8,8
   17b24:	a0c7883a 	add	r3,r20,r3
   17b28:	10800044 	addi	r2,r2,1
   17b2c:	44400015 	stw	r17,0(r8)
   17b30:	45000115 	stw	r20,4(r8)
   17b34:	d8c01c15 	stw	r3,112(sp)
   17b38:	d8801b15 	stw	r2,108(sp)
   17b3c:	010001c4 	movi	r4,7
   17b40:	20808816 	blt	r4,r2,17d64 <___svfiprintf_internal_r+0xe18>
   17b44:	42000204 	addi	r8,r8,8
   17b48:	8400010c 	andi	r16,r16,4
   17b4c:	80002c26 	beq	r16,zero,17c00 <___svfiprintf_internal_r+0xcb4>
   17b50:	d8802517 	ldw	r2,148(sp)
   17b54:	14a1c83a 	sub	r16,r2,r18
   17b58:	0400290e 	bge	zero,r16,17c00 <___svfiprintf_internal_r+0xcb4>
   17b5c:	04400404 	movi	r17,16
   17b60:	d8801b17 	ldw	r2,108(sp)
   17b64:	8c01a70e 	bge	r17,r16,18204 <___svfiprintf_internal_r+0x12b8>
   17b68:	014000b4 	movhi	r5,2
   17b6c:	29720004 	addi	r5,r5,-14336
   17b70:	d9402815 	stw	r5,160(sp)
   17b74:	050001c4 	movi	r20,7
   17b78:	dd402717 	ldw	r21,156(sp)
   17b7c:	ddc02317 	ldw	r23,140(sp)
   17b80:	00000306 	br	17b90 <___svfiprintf_internal_r+0xc44>
   17b84:	843ffc04 	addi	r16,r16,-16
   17b88:	42000204 	addi	r8,r8,8
   17b8c:	8c00130e 	bge	r17,r16,17bdc <___svfiprintf_internal_r+0xc90>
   17b90:	010000b4 	movhi	r4,2
   17b94:	18c00404 	addi	r3,r3,16
   17b98:	10800044 	addi	r2,r2,1
   17b9c:	21320004 	addi	r4,r4,-14336
   17ba0:	41000015 	stw	r4,0(r8)
   17ba4:	44400115 	stw	r17,4(r8)
   17ba8:	d8c01c15 	stw	r3,112(sp)
   17bac:	d8801b15 	stw	r2,108(sp)
   17bb0:	a0bff40e 	bge	r20,r2,17b84 <_gp+0xffff2928>
   17bb4:	d9801a04 	addi	r6,sp,104
   17bb8:	b80b883a 	mov	r5,r23
   17bbc:	a809883a 	mov	r4,r21
   17bc0:	0016d7c0 	call	16d7c <__ssprint_r>
   17bc4:	1000211e 	bne	r2,zero,17c4c <___svfiprintf_internal_r+0xd00>
   17bc8:	843ffc04 	addi	r16,r16,-16
   17bcc:	d8c01c17 	ldw	r3,112(sp)
   17bd0:	d8801b17 	ldw	r2,108(sp)
   17bd4:	d811883a 	mov	r8,sp
   17bd8:	8c3fed16 	blt	r17,r16,17b90 <_gp+0xffff2934>
   17bdc:	d9402817 	ldw	r5,160(sp)
   17be0:	1c07883a 	add	r3,r3,r16
   17be4:	10800044 	addi	r2,r2,1
   17be8:	41400015 	stw	r5,0(r8)
   17bec:	44000115 	stw	r16,4(r8)
   17bf0:	d8c01c15 	stw	r3,112(sp)
   17bf4:	d8801b15 	stw	r2,108(sp)
   17bf8:	010001c4 	movi	r4,7
   17bfc:	2080b516 	blt	r4,r2,17ed4 <___svfiprintf_internal_r+0xf88>
   17c00:	d8802517 	ldw	r2,148(sp)
   17c04:	1480010e 	bge	r2,r18,17c0c <___svfiprintf_internal_r+0xcc0>
   17c08:	9005883a 	mov	r2,r18
   17c0c:	d9002617 	ldw	r4,152(sp)
   17c10:	2089883a 	add	r4,r4,r2
   17c14:	d9002615 	stw	r4,152(sp)
   17c18:	18005a1e 	bne	r3,zero,17d84 <___svfiprintf_internal_r+0xe38>
   17c1c:	98800007 	ldb	r2,0(r19)
   17c20:	d8001b15 	stw	zero,108(sp)
   17c24:	d811883a 	mov	r8,sp
   17c28:	103cec1e 	bne	r2,zero,16fdc <_gp+0xffff1d80>
   17c2c:	9825883a 	mov	r18,r19
   17c30:	003d0206 	br	1703c <_gp+0xffff1de0>
   17c34:	d8801c17 	ldw	r2,112(sp)
   17c38:	10000426 	beq	r2,zero,17c4c <___svfiprintf_internal_r+0xd00>
   17c3c:	d9402317 	ldw	r5,140(sp)
   17c40:	d9002717 	ldw	r4,156(sp)
   17c44:	d9801a04 	addi	r6,sp,104
   17c48:	0016d7c0 	call	16d7c <__ssprint_r>
   17c4c:	d9402317 	ldw	r5,140(sp)
   17c50:	d8802617 	ldw	r2,152(sp)
   17c54:	28c0030b 	ldhu	r3,12(r5)
   17c58:	18c0100c 	andi	r3,r3,64
   17c5c:	18015c1e 	bne	r3,zero,181d0 <___svfiprintf_internal_r+0x1284>
   17c60:	dfc03717 	ldw	ra,220(sp)
   17c64:	df003617 	ldw	fp,216(sp)
   17c68:	ddc03517 	ldw	r23,212(sp)
   17c6c:	dd803417 	ldw	r22,208(sp)
   17c70:	dd403317 	ldw	r21,204(sp)
   17c74:	dd003217 	ldw	r20,200(sp)
   17c78:	dcc03117 	ldw	r19,196(sp)
   17c7c:	dc803017 	ldw	r18,192(sp)
   17c80:	dc402f17 	ldw	r17,188(sp)
   17c84:	dc002e17 	ldw	r16,184(sp)
   17c88:	dec03804 	addi	sp,sp,224
   17c8c:	f800283a 	ret
   17c90:	d9002517 	ldw	r4,148(sp)
   17c94:	24afc83a 	sub	r23,r4,r18
   17c98:	05ff6e0e 	bge	zero,r23,17a54 <_gp+0xffff27f8>
   17c9c:	07000404 	movi	fp,16
   17ca0:	e5c15c0e 	bge	fp,r23,18214 <___svfiprintf_internal_r+0x12c8>
   17ca4:	010000b4 	movhi	r4,2
   17ca8:	2131fc04 	addi	r4,r4,-14352
   17cac:	dc002215 	stw	r16,136(sp)
   17cb0:	dc402815 	stw	r17,160(sp)
   17cb4:	d9002115 	stw	r4,132(sp)
   17cb8:	b823883a 	mov	r17,r23
   17cbc:	054001c4 	movi	r21,7
   17cc0:	982f883a 	mov	r23,r19
   17cc4:	dc002717 	ldw	r16,156(sp)
   17cc8:	9027883a 	mov	r19,r18
   17ccc:	dc802317 	ldw	r18,140(sp)
   17cd0:	00000306 	br	17ce0 <___svfiprintf_internal_r+0xd94>
   17cd4:	8c7ffc04 	addi	r17,r17,-16
   17cd8:	42000204 	addi	r8,r8,8
   17cdc:	e440110e 	bge	fp,r17,17d24 <___svfiprintf_internal_r+0xdd8>
   17ce0:	18c00404 	addi	r3,r3,16
   17ce4:	10800044 	addi	r2,r2,1
   17ce8:	45800015 	stw	r22,0(r8)
   17cec:	47000115 	stw	fp,4(r8)
   17cf0:	d8c01c15 	stw	r3,112(sp)
   17cf4:	d8801b15 	stw	r2,108(sp)
   17cf8:	a8bff60e 	bge	r21,r2,17cd4 <_gp+0xffff2a78>
   17cfc:	d9801a04 	addi	r6,sp,104
   17d00:	900b883a 	mov	r5,r18
   17d04:	8009883a 	mov	r4,r16
   17d08:	0016d7c0 	call	16d7c <__ssprint_r>
   17d0c:	103fcf1e 	bne	r2,zero,17c4c <_gp+0xffff29f0>
   17d10:	8c7ffc04 	addi	r17,r17,-16
   17d14:	d8c01c17 	ldw	r3,112(sp)
   17d18:	d8801b17 	ldw	r2,108(sp)
   17d1c:	d811883a 	mov	r8,sp
   17d20:	e47fef16 	blt	fp,r17,17ce0 <_gp+0xffff2a84>
   17d24:	9825883a 	mov	r18,r19
   17d28:	dc002217 	ldw	r16,136(sp)
   17d2c:	b827883a 	mov	r19,r23
   17d30:	882f883a 	mov	r23,r17
   17d34:	dc402817 	ldw	r17,160(sp)
   17d38:	d9402117 	ldw	r5,132(sp)
   17d3c:	1dc7883a 	add	r3,r3,r23
   17d40:	10800044 	addi	r2,r2,1
   17d44:	41400015 	stw	r5,0(r8)
   17d48:	45c00115 	stw	r23,4(r8)
   17d4c:	d8c01c15 	stw	r3,112(sp)
   17d50:	d8801b15 	stw	r2,108(sp)
   17d54:	010001c4 	movi	r4,7
   17d58:	2080b716 	blt	r4,r2,18038 <___svfiprintf_internal_r+0x10ec>
   17d5c:	42000204 	addi	r8,r8,8
   17d60:	003f3c06 	br	17a54 <_gp+0xffff27f8>
   17d64:	d9402317 	ldw	r5,140(sp)
   17d68:	d9002717 	ldw	r4,156(sp)
   17d6c:	d9801a04 	addi	r6,sp,104
   17d70:	0016d7c0 	call	16d7c <__ssprint_r>
   17d74:	103fb51e 	bne	r2,zero,17c4c <_gp+0xffff29f0>
   17d78:	d8c01c17 	ldw	r3,112(sp)
   17d7c:	d811883a 	mov	r8,sp
   17d80:	003f7106 	br	17b48 <_gp+0xffff28ec>
   17d84:	d9402317 	ldw	r5,140(sp)
   17d88:	d9002717 	ldw	r4,156(sp)
   17d8c:	d9801a04 	addi	r6,sp,104
   17d90:	0016d7c0 	call	16d7c <__ssprint_r>
   17d94:	103fa126 	beq	r2,zero,17c1c <_gp+0xffff29c0>
   17d98:	003fac06 	br	17c4c <_gp+0xffff29f0>
   17d9c:	d9402317 	ldw	r5,140(sp)
   17da0:	d9002717 	ldw	r4,156(sp)
   17da4:	d9801a04 	addi	r6,sp,104
   17da8:	0016d7c0 	call	16d7c <__ssprint_r>
   17dac:	103fa71e 	bne	r2,zero,17c4c <_gp+0xffff29f0>
   17db0:	d811883a 	mov	r8,sp
   17db4:	003c9e06 	br	17030 <_gp+0xffff1dd4>
   17db8:	d9402317 	ldw	r5,140(sp)
   17dbc:	d9002717 	ldw	r4,156(sp)
   17dc0:	d9801a04 	addi	r6,sp,104
   17dc4:	0016d7c0 	call	16d7c <__ssprint_r>
   17dc8:	103fa01e 	bne	r2,zero,17c4c <_gp+0xffff29f0>
   17dcc:	d8c01c17 	ldw	r3,112(sp)
   17dd0:	d8801b17 	ldw	r2,108(sp)
   17dd4:	d811883a 	mov	r8,sp
   17dd8:	003f5206 	br	17b24 <_gp+0xffff28c8>
   17ddc:	d9402317 	ldw	r5,140(sp)
   17de0:	d9002717 	ldw	r4,156(sp)
   17de4:	d9801a04 	addi	r6,sp,104
   17de8:	0016d7c0 	call	16d7c <__ssprint_r>
   17dec:	103f971e 	bne	r2,zero,17c4c <_gp+0xffff29f0>
   17df0:	d8c01c17 	ldw	r3,112(sp)
   17df4:	d8801b17 	ldw	r2,108(sp)
   17df8:	d811883a 	mov	r8,sp
   17dfc:	003f0506 	br	17a14 <_gp+0xffff27b8>
   17e00:	d9402317 	ldw	r5,140(sp)
   17e04:	d9002717 	ldw	r4,156(sp)
   17e08:	d9801a04 	addi	r6,sp,104
   17e0c:	0016d7c0 	call	16d7c <__ssprint_r>
   17e10:	103f8e1e 	bne	r2,zero,17c4c <_gp+0xffff29f0>
   17e14:	d8c01c17 	ldw	r3,112(sp)
   17e18:	d8801b17 	ldw	r2,108(sp)
   17e1c:	d811883a 	mov	r8,sp
   17e20:	003f0906 	br	17a48 <_gp+0xffff27ec>
   17e24:	d9402017 	ldw	r5,128(sp)
   17e28:	d8001d85 	stb	zero,118(sp)
   17e2c:	28007716 	blt	r5,zero,1800c <___svfiprintf_internal_r+0x10c0>
   17e30:	00ffdfc4 	movi	r3,-129
   17e34:	9504b03a 	or	r2,r18,r20
   17e38:	80e0703a 	and	r16,r16,r3
   17e3c:	103d3926 	beq	r2,zero,17324 <_gp+0xffff20c8>
   17e40:	002b883a 	mov	r21,zero
   17e44:	003d3c06 	br	17338 <_gp+0xffff20dc>
   17e48:	d9402317 	ldw	r5,140(sp)
   17e4c:	d9002717 	ldw	r4,156(sp)
   17e50:	d9801a04 	addi	r6,sp,104
   17e54:	0016d7c0 	call	16d7c <__ssprint_r>
   17e58:	103f7c1e 	bne	r2,zero,17c4c <_gp+0xffff29f0>
   17e5c:	d8c01c17 	ldw	r3,112(sp)
   17e60:	d8801b17 	ldw	r2,108(sp)
   17e64:	d811883a 	mov	r8,sp
   17e68:	003edd06 	br	179e0 <_gp+0xffff2784>
   17e6c:	8080100c 	andi	r2,r16,64
   17e70:	d8001d85 	stb	zero,118(sp)
   17e74:	10008426 	beq	r2,zero,18088 <___svfiprintf_internal_r+0x113c>
   17e78:	d9402417 	ldw	r5,144(sp)
   17e7c:	d8c02017 	ldw	r3,128(sp)
   17e80:	0029883a 	mov	r20,zero
   17e84:	28800104 	addi	r2,r5,4
   17e88:	2c80000b 	ldhu	r18,0(r5)
   17e8c:	183eab0e 	bge	r3,zero,1793c <_gp+0xffff26e0>
   17e90:	d8802415 	stw	r2,144(sp)
   17e94:	002b883a 	mov	r21,zero
   17e98:	9504b03a 	or	r2,r18,r20
   17e9c:	103e171e 	bne	r2,zero,176fc <_gp+0xffff24a0>
   17ea0:	00800044 	movi	r2,1
   17ea4:	10803fcc 	andi	r2,r2,255
   17ea8:	00c00044 	movi	r3,1
   17eac:	10c05c26 	beq	r2,r3,18020 <___svfiprintf_internal_r+0x10d4>
   17eb0:	00c00084 	movi	r3,2
   17eb4:	10fd1e26 	beq	r2,r3,17330 <_gp+0xffff20d4>
   17eb8:	003ec406 	br	179cc <_gp+0xffff2770>
   17ebc:	d9401e17 	ldw	r5,120(sp)
   17ec0:	2c69c83a 	sub	r20,r5,r17
   17ec4:	003d4506 	br	173dc <_gp+0xffff2180>
   17ec8:	d8802415 	stw	r2,144(sp)
   17ecc:	98c00007 	ldb	r3,0(r19)
   17ed0:	003c6a06 	br	1707c <_gp+0xffff1e20>
   17ed4:	d9402317 	ldw	r5,140(sp)
   17ed8:	d9002717 	ldw	r4,156(sp)
   17edc:	d9801a04 	addi	r6,sp,104
   17ee0:	0016d7c0 	call	16d7c <__ssprint_r>
   17ee4:	103f591e 	bne	r2,zero,17c4c <_gp+0xffff29f0>
   17ee8:	d8c01c17 	ldw	r3,112(sp)
   17eec:	003f4406 	br	17c00 <_gp+0xffff29a4>
   17ef0:	014000b4 	movhi	r5,2
   17ef4:	29719c04 	addi	r5,r5,-14736
   17ef8:	d9402915 	stw	r5,164(sp)
   17efc:	003d0906 	br	17324 <_gp+0xffff20c8>
   17f00:	d8c02417 	ldw	r3,144(sp)
   17f04:	d9002617 	ldw	r4,152(sp)
   17f08:	d9402417 	ldw	r5,144(sp)
   17f0c:	18800017 	ldw	r2,0(r3)
   17f10:	2007d7fa 	srai	r3,r4,31
   17f14:	29400104 	addi	r5,r5,4
   17f18:	d9402415 	stw	r5,144(sp)
   17f1c:	11000015 	stw	r4,0(r2)
   17f20:	10c00115 	stw	r3,4(r2)
   17f24:	003c2b06 	br	16fd4 <_gp+0xffff1d78>
   17f28:	d8c01d45 	stb	r3,117(sp)
   17f2c:	d8c02017 	ldw	r3,128(sp)
   17f30:	00800c04 	movi	r2,48
   17f34:	d8801d05 	stb	r2,116(sp)
   17f38:	d8001d85 	stb	zero,118(sp)
   17f3c:	80800094 	ori	r2,r16,2
   17f40:	1800ac16 	blt	r3,zero,181f4 <___svfiprintf_internal_r+0x12a8>
   17f44:	00bfdfc4 	movi	r2,-129
   17f48:	80a0703a 	and	r16,r16,r2
   17f4c:	84000094 	ori	r16,r16,2
   17f50:	002b883a 	mov	r21,zero
   17f54:	003cf806 	br	17338 <_gp+0xffff20dc>
   17f58:	98c00007 	ldb	r3,0(r19)
   17f5c:	003c4706 	br	1707c <_gp+0xffff1e20>
   17f60:	d9402417 	ldw	r5,144(sp)
   17f64:	2c800017 	ldw	r18,0(r5)
   17f68:	29400104 	addi	r5,r5,4
   17f6c:	d9402415 	stw	r5,144(sp)
   17f70:	9029d7fa 	srai	r20,r18,31
   17f74:	a005883a 	mov	r2,r20
   17f78:	003dd806 	br	176dc <_gp+0xffff2480>
   17f7c:	d9402417 	ldw	r5,144(sp)
   17f80:	0029883a 	mov	r20,zero
   17f84:	2c800017 	ldw	r18,0(r5)
   17f88:	29400104 	addi	r5,r5,4
   17f8c:	d9402415 	stw	r5,144(sp)
   17f90:	003cdb06 	br	17300 <_gp+0xffff20a4>
   17f94:	8080100c 	andi	r2,r16,64
   17f98:	d8001d85 	stb	zero,118(sp)
   17f9c:	10003326 	beq	r2,zero,1806c <___svfiprintf_internal_r+0x1120>
   17fa0:	d9002417 	ldw	r4,144(sp)
   17fa4:	d9402017 	ldw	r5,128(sp)
   17fa8:	0029883a 	mov	r20,zero
   17fac:	20800104 	addi	r2,r4,4
   17fb0:	2480000b 	ldhu	r18,0(r4)
   17fb4:	283e7e0e 	bge	r5,zero,179b0 <_gp+0xffff2754>
   17fb8:	9506b03a 	or	r3,r18,r20
   17fbc:	d8802415 	stw	r2,144(sp)
   17fc0:	183d271e 	bne	r3,zero,17460 <_gp+0xffff2204>
   17fc4:	002b883a 	mov	r21,zero
   17fc8:	0005883a 	mov	r2,zero
   17fcc:	003fb506 	br	17ea4 <_gp+0xffff2c48>
   17fd0:	98c00043 	ldbu	r3,1(r19)
   17fd4:	8c400814 	ori	r17,r17,32
   17fd8:	9cc00044 	addi	r19,r19,1
   17fdc:	18c03fcc 	andi	r3,r3,255
   17fe0:	18c0201c 	xori	r3,r3,128
   17fe4:	18ffe004 	addi	r3,r3,-128
   17fe8:	003c2406 	br	1707c <_gp+0xffff1e20>
   17fec:	d8c02415 	stw	r3,144(sp)
   17ff0:	002b883a 	mov	r21,zero
   17ff4:	003fa806 	br	17e98 <_gp+0xffff2c3c>
   17ff8:	010000b4 	movhi	r4,2
   17ffc:	21319c04 	addi	r4,r4,-14736
   18000:	d9002915 	stw	r4,164(sp)
   18004:	d8c02415 	stw	r3,144(sp)
   18008:	1021883a 	mov	r16,r2
   1800c:	9504b03a 	or	r2,r18,r20
   18010:	103f8b1e 	bne	r2,zero,17e40 <_gp+0xffff2be4>
   18014:	002b883a 	mov	r21,zero
   18018:	00800084 	movi	r2,2
   1801c:	003fa106 	br	17ea4 <_gp+0xffff2c48>
   18020:	0025883a 	mov	r18,zero
   18024:	94800c04 	addi	r18,r18,48
   18028:	dc8019c5 	stb	r18,103(sp)
   1802c:	dd002c17 	ldw	r20,176(sp)
   18030:	dc4019c4 	addi	r17,sp,103
   18034:	003ce906 	br	173dc <_gp+0xffff2180>
   18038:	d9402317 	ldw	r5,140(sp)
   1803c:	d9002717 	ldw	r4,156(sp)
   18040:	d9801a04 	addi	r6,sp,104
   18044:	0016d7c0 	call	16d7c <__ssprint_r>
   18048:	103f001e 	bne	r2,zero,17c4c <_gp+0xffff29f0>
   1804c:	d8c01c17 	ldw	r3,112(sp)
   18050:	d8801b17 	ldw	r2,108(sp)
   18054:	d811883a 	mov	r8,sp
   18058:	003e7e06 	br	17a54 <_gp+0xffff27f8>
   1805c:	014000b4 	movhi	r5,2
   18060:	2971fc04 	addi	r5,r5,-14352
   18064:	d9402115 	stw	r5,132(sp)
   18068:	003ea406 	br	17afc <_gp+0xffff28a0>
   1806c:	d8c02417 	ldw	r3,144(sp)
   18070:	d9002017 	ldw	r4,128(sp)
   18074:	0029883a 	mov	r20,zero
   18078:	18800104 	addi	r2,r3,4
   1807c:	1c800017 	ldw	r18,0(r3)
   18080:	203e4b0e 	bge	r4,zero,179b0 <_gp+0xffff2754>
   18084:	003fcc06 	br	17fb8 <_gp+0xffff2d5c>
   18088:	d9002417 	ldw	r4,144(sp)
   1808c:	d9402017 	ldw	r5,128(sp)
   18090:	0029883a 	mov	r20,zero
   18094:	20800104 	addi	r2,r4,4
   18098:	24800017 	ldw	r18,0(r4)
   1809c:	283e270e 	bge	r5,zero,1793c <_gp+0xffff26e0>
   180a0:	003f7b06 	br	17e90 <_gp+0xffff2c34>
   180a4:	8400100c 	andi	r16,r16,64
   180a8:	80003326 	beq	r16,zero,18178 <___svfiprintf_internal_r+0x122c>
   180ac:	d9402417 	ldw	r5,144(sp)
   180b0:	d8c02617 	ldw	r3,152(sp)
   180b4:	28800017 	ldw	r2,0(r5)
   180b8:	29400104 	addi	r5,r5,4
   180bc:	d9402415 	stw	r5,144(sp)
   180c0:	10c0000d 	sth	r3,0(r2)
   180c4:	003bc306 	br	16fd4 <_gp+0xffff1d78>
   180c8:	d9002417 	ldw	r4,144(sp)
   180cc:	0029883a 	mov	r20,zero
   180d0:	24800017 	ldw	r18,0(r4)
   180d4:	21000104 	addi	r4,r4,4
   180d8:	d9002415 	stw	r4,144(sp)
   180dc:	003c8806 	br	17300 <_gp+0xffff20a4>
   180e0:	d8c02417 	ldw	r3,144(sp)
   180e4:	1c800017 	ldw	r18,0(r3)
   180e8:	18c00104 	addi	r3,r3,4
   180ec:	d8c02415 	stw	r3,144(sp)
   180f0:	9029d7fa 	srai	r20,r18,31
   180f4:	a005883a 	mov	r2,r20
   180f8:	003d7806 	br	176dc <_gp+0xffff2480>
   180fc:	8809883a 	mov	r4,r17
   18100:	da002d15 	stw	r8,180(sp)
   18104:	0016ce40 	call	16ce4 <strlen>
   18108:	1029883a 	mov	r20,r2
   1810c:	dd401d83 	ldbu	r21,118(sp)
   18110:	ddc02415 	stw	r23,144(sp)
   18114:	d8002015 	stw	zero,128(sp)
   18118:	da002d17 	ldw	r8,180(sp)
   1811c:	003caf06 	br	173dc <_gp+0xffff2180>
   18120:	013fffc4 	movi	r4,-1
   18124:	003df206 	br	178f0 <_gp+0xffff2694>
   18128:	dd002017 	ldw	r20,128(sp)
   1812c:	00800184 	movi	r2,6
   18130:	1500012e 	bgeu	r2,r20,18138 <___svfiprintf_internal_r+0x11ec>
   18134:	1029883a 	mov	r20,r2
   18138:	a025883a 	mov	r18,r20
   1813c:	a0004116 	blt	r20,zero,18244 <___svfiprintf_internal_r+0x12f8>
   18140:	044000b4 	movhi	r17,2
   18144:	ddc02415 	stw	r23,144(sp)
   18148:	8c71a104 	addi	r17,r17,-14716
   1814c:	003ce806 	br	174f0 <_gp+0xffff2294>
   18150:	04001004 	movi	r16,64
   18154:	800b883a 	mov	r5,r16
   18158:	0010eac0 	call	10eac <_malloc_r>
   1815c:	d8c02317 	ldw	r3,140(sp)
   18160:	18800015 	stw	r2,0(r3)
   18164:	18800415 	stw	r2,16(r3)
   18168:	10004d26 	beq	r2,zero,182a0 <___svfiprintf_internal_r+0x1354>
   1816c:	d9402317 	ldw	r5,140(sp)
   18170:	2c000515 	stw	r16,20(r5)
   18174:	003b8906 	br	16f9c <_gp+0xffff1d40>
   18178:	d9002417 	ldw	r4,144(sp)
   1817c:	d9402617 	ldw	r5,152(sp)
   18180:	20800017 	ldw	r2,0(r4)
   18184:	21000104 	addi	r4,r4,4
   18188:	d9002415 	stw	r4,144(sp)
   1818c:	11400015 	stw	r5,0(r2)
   18190:	003b9006 	br	16fd4 <_gp+0xffff1d78>
   18194:	8080004c 	andi	r2,r16,1
   18198:	002b883a 	mov	r21,zero
   1819c:	10000526 	beq	r2,zero,181b4 <___svfiprintf_internal_r+0x1268>
   181a0:	00800c04 	movi	r2,48
   181a4:	d88019c5 	stb	r2,103(sp)
   181a8:	dd002c17 	ldw	r20,176(sp)
   181ac:	dc4019c4 	addi	r17,sp,103
   181b0:	003c8a06 	br	173dc <_gp+0xffff2180>
   181b4:	0029883a 	mov	r20,zero
   181b8:	dc401a04 	addi	r17,sp,104
   181bc:	003c8706 	br	173dc <_gp+0xffff2180>
   181c0:	014000b4 	movhi	r5,2
   181c4:	29720004 	addi	r5,r5,-14336
   181c8:	d9402815 	stw	r5,160(sp)
   181cc:	003cff06 	br	175cc <_gp+0xffff2370>
   181d0:	00bfffc4 	movi	r2,-1
   181d4:	003ea206 	br	17c60 <_gp+0xffff2a04>
   181d8:	00800044 	movi	r2,1
   181dc:	10803fcc 	andi	r2,r2,255
   181e0:	00c00044 	movi	r3,1
   181e4:	10fd4526 	beq	r2,r3,176fc <_gp+0xffff24a0>
   181e8:	00c00084 	movi	r3,2
   181ec:	10fc5226 	beq	r2,r3,17338 <_gp+0xffff20dc>
   181f0:	003c9c06 	br	17464 <_gp+0xffff2208>
   181f4:	1021883a 	mov	r16,r2
   181f8:	002b883a 	mov	r21,zero
   181fc:	00800084 	movi	r2,2
   18200:	003ff606 	br	181dc <_gp+0xffff2f80>
   18204:	010000b4 	movhi	r4,2
   18208:	21320004 	addi	r4,r4,-14336
   1820c:	d9002815 	stw	r4,160(sp)
   18210:	003e7206 	br	17bdc <_gp+0xffff2980>
   18214:	014000b4 	movhi	r5,2
   18218:	2971fc04 	addi	r5,r5,-14352
   1821c:	d9402115 	stw	r5,132(sp)
   18220:	003ec506 	br	17d38 <_gp+0xffff2adc>
   18224:	e027883a 	mov	r19,fp
   18228:	d8002015 	stw	zero,128(sp)
   1822c:	003b9406 	br	17080 <_gp+0xffff1e24>
   18230:	dd002017 	ldw	r20,128(sp)
   18234:	dd401d83 	ldbu	r21,118(sp)
   18238:	ddc02415 	stw	r23,144(sp)
   1823c:	d8002015 	stw	zero,128(sp)
   18240:	003c6606 	br	173dc <_gp+0xffff2180>
   18244:	0025883a 	mov	r18,zero
   18248:	003fbd06 	br	18140 <_gp+0xffff2ee4>
   1824c:	d9402417 	ldw	r5,144(sp)
   18250:	d8c02417 	ldw	r3,144(sp)
   18254:	29400017 	ldw	r5,0(r5)
   18258:	19000104 	addi	r4,r3,4
   1825c:	d9002415 	stw	r4,144(sp)
   18260:	d9402015 	stw	r5,128(sp)
   18264:	98c00043 	ldbu	r3,1(r19)
   18268:	e027883a 	mov	r19,fp
   1826c:	283f5b0e 	bge	r5,zero,17fdc <_gp+0xffff2d80>
   18270:	18c03fcc 	andi	r3,r3,255
   18274:	013fffc4 	movi	r4,-1
   18278:	18c0201c 	xori	r3,r3,128
   1827c:	d9002015 	stw	r4,128(sp)
   18280:	18ffe004 	addi	r3,r3,-128
   18284:	003b7d06 	br	1707c <_gp+0xffff1e20>
   18288:	dd401d85 	stb	r21,118(sp)
   1828c:	003cf306 	br	1765c <_gp+0xffff2400>
   18290:	dd401d85 	stb	r21,118(sp)
   18294:	003d4e06 	br	177d0 <_gp+0xffff2574>
   18298:	dd401d85 	stb	r21,118(sp)
   1829c:	003c0e06 	br	172d8 <_gp+0xffff207c>
   182a0:	d9002717 	ldw	r4,156(sp)
   182a4:	00800304 	movi	r2,12
   182a8:	20800015 	stw	r2,0(r4)
   182ac:	00bfffc4 	movi	r2,-1
   182b0:	003e6b06 	br	17c60 <_gp+0xffff2a04>
   182b4:	dd401d85 	stb	r21,118(sp)
   182b8:	003d0006 	br	176bc <_gp+0xffff2460>
   182bc:	dd401d85 	stb	r21,118(sp)
   182c0:	003d7106 	br	17888 <_gp+0xffff262c>
   182c4:	dd401d85 	stb	r21,118(sp)
   182c8:	003c5706 	br	17428 <_gp+0xffff21cc>
   182cc:	dd401d85 	stb	r21,118(sp)
   182d0:	003c2e06 	br	1738c <_gp+0xffff2130>
   182d4:	dd401d85 	stb	r21,118(sp)
   182d8:	003d8c06 	br	1790c <_gp+0xffff26b0>
   182dc:	dd401d85 	stb	r21,118(sp)
   182e0:	003da706 	br	17980 <_gp+0xffff2724>
   182e4:	dd401d85 	stb	r21,118(sp)
   182e8:	003cc806 	br	1760c <_gp+0xffff23b0>

000182ec <_calloc_r>:
   182ec:	defffe04 	addi	sp,sp,-8
   182f0:	2805883a 	mov	r2,r5
   182f4:	dc000015 	stw	r16,0(sp)
   182f8:	300b883a 	mov	r5,r6
   182fc:	2021883a 	mov	r16,r4
   18300:	1009883a 	mov	r4,r2
   18304:	dfc00115 	stw	ra,4(sp)
   18308:	00196480 	call	19648 <__mulsi3>
   1830c:	100b883a 	mov	r5,r2
   18310:	8009883a 	mov	r4,r16
   18314:	0010eac0 	call	10eac <_malloc_r>
   18318:	10002926 	beq	r2,zero,183c0 <_calloc_r+0xd4>
   1831c:	11bfff17 	ldw	r6,-4(r2)
   18320:	1021883a 	mov	r16,r2
   18324:	00bfff04 	movi	r2,-4
   18328:	308c703a 	and	r6,r6,r2
   1832c:	00c00904 	movi	r3,36
   18330:	308d883a 	add	r6,r6,r2
   18334:	19801636 	bltu	r3,r6,18390 <_calloc_r+0xa4>
   18338:	008004c4 	movi	r2,19
   1833c:	11800b2e 	bgeu	r2,r6,1836c <_calloc_r+0x80>
   18340:	80000015 	stw	zero,0(r16)
   18344:	80000115 	stw	zero,4(r16)
   18348:	008006c4 	movi	r2,27
   1834c:	11801a2e 	bgeu	r2,r6,183b8 <_calloc_r+0xcc>
   18350:	80000215 	stw	zero,8(r16)
   18354:	80000315 	stw	zero,12(r16)
   18358:	30c0151e 	bne	r6,r3,183b0 <_calloc_r+0xc4>
   1835c:	80000415 	stw	zero,16(r16)
   18360:	80800604 	addi	r2,r16,24
   18364:	80000515 	stw	zero,20(r16)
   18368:	00000106 	br	18370 <_calloc_r+0x84>
   1836c:	8005883a 	mov	r2,r16
   18370:	10000015 	stw	zero,0(r2)
   18374:	10000115 	stw	zero,4(r2)
   18378:	10000215 	stw	zero,8(r2)
   1837c:	8005883a 	mov	r2,r16
   18380:	dfc00117 	ldw	ra,4(sp)
   18384:	dc000017 	ldw	r16,0(sp)
   18388:	dec00204 	addi	sp,sp,8
   1838c:	f800283a 	ret
   18390:	000b883a 	mov	r5,zero
   18394:	8009883a 	mov	r4,r16
   18398:	00116b80 	call	116b8 <memset>
   1839c:	8005883a 	mov	r2,r16
   183a0:	dfc00117 	ldw	ra,4(sp)
   183a4:	dc000017 	ldw	r16,0(sp)
   183a8:	dec00204 	addi	sp,sp,8
   183ac:	f800283a 	ret
   183b0:	80800404 	addi	r2,r16,16
   183b4:	003fee06 	br	18370 <_gp+0xffff3114>
   183b8:	80800204 	addi	r2,r16,8
   183bc:	003fec06 	br	18370 <_gp+0xffff3114>
   183c0:	0005883a 	mov	r2,zero
   183c4:	003fee06 	br	18380 <_gp+0xffff3124>

000183c8 <memmove>:
   183c8:	2005883a 	mov	r2,r4
   183cc:	29000b2e 	bgeu	r5,r4,183fc <memmove+0x34>
   183d0:	298f883a 	add	r7,r5,r6
   183d4:	21c0092e 	bgeu	r4,r7,183fc <memmove+0x34>
   183d8:	2187883a 	add	r3,r4,r6
   183dc:	198bc83a 	sub	r5,r3,r6
   183e0:	30004826 	beq	r6,zero,18504 <memmove+0x13c>
   183e4:	39ffffc4 	addi	r7,r7,-1
   183e8:	39000003 	ldbu	r4,0(r7)
   183ec:	18ffffc4 	addi	r3,r3,-1
   183f0:	19000005 	stb	r4,0(r3)
   183f4:	28fffb1e 	bne	r5,r3,183e4 <_gp+0xffff3188>
   183f8:	f800283a 	ret
   183fc:	00c003c4 	movi	r3,15
   18400:	1980412e 	bgeu	r3,r6,18508 <memmove+0x140>
   18404:	2886b03a 	or	r3,r5,r2
   18408:	18c000cc 	andi	r3,r3,3
   1840c:	1800401e 	bne	r3,zero,18510 <memmove+0x148>
   18410:	33fffc04 	addi	r15,r6,-16
   18414:	781ed13a 	srli	r15,r15,4
   18418:	28c00104 	addi	r3,r5,4
   1841c:	13400104 	addi	r13,r2,4
   18420:	781c913a 	slli	r14,r15,4
   18424:	2b000204 	addi	r12,r5,8
   18428:	12c00204 	addi	r11,r2,8
   1842c:	73800504 	addi	r14,r14,20
   18430:	2a800304 	addi	r10,r5,12
   18434:	12400304 	addi	r9,r2,12
   18438:	2b9d883a 	add	r14,r5,r14
   1843c:	2811883a 	mov	r8,r5
   18440:	100f883a 	mov	r7,r2
   18444:	41000017 	ldw	r4,0(r8)
   18448:	39c00404 	addi	r7,r7,16
   1844c:	18c00404 	addi	r3,r3,16
   18450:	393ffc15 	stw	r4,-16(r7)
   18454:	193ffc17 	ldw	r4,-16(r3)
   18458:	6b400404 	addi	r13,r13,16
   1845c:	5ac00404 	addi	r11,r11,16
   18460:	693ffc15 	stw	r4,-16(r13)
   18464:	61000017 	ldw	r4,0(r12)
   18468:	4a400404 	addi	r9,r9,16
   1846c:	42000404 	addi	r8,r8,16
   18470:	593ffc15 	stw	r4,-16(r11)
   18474:	51000017 	ldw	r4,0(r10)
   18478:	63000404 	addi	r12,r12,16
   1847c:	52800404 	addi	r10,r10,16
   18480:	493ffc15 	stw	r4,-16(r9)
   18484:	1bbfef1e 	bne	r3,r14,18444 <_gp+0xffff31e8>
   18488:	79000044 	addi	r4,r15,1
   1848c:	2008913a 	slli	r4,r4,4
   18490:	328003cc 	andi	r10,r6,15
   18494:	02c000c4 	movi	r11,3
   18498:	1107883a 	add	r3,r2,r4
   1849c:	290b883a 	add	r5,r5,r4
   184a0:	5a801e2e 	bgeu	r11,r10,1851c <memmove+0x154>
   184a4:	1813883a 	mov	r9,r3
   184a8:	2811883a 	mov	r8,r5
   184ac:	500f883a 	mov	r7,r10
   184b0:	41000017 	ldw	r4,0(r8)
   184b4:	4a400104 	addi	r9,r9,4
   184b8:	39ffff04 	addi	r7,r7,-4
   184bc:	493fff15 	stw	r4,-4(r9)
   184c0:	42000104 	addi	r8,r8,4
   184c4:	59fffa36 	bltu	r11,r7,184b0 <_gp+0xffff3254>
   184c8:	513fff04 	addi	r4,r10,-4
   184cc:	2008d0ba 	srli	r4,r4,2
   184d0:	318000cc 	andi	r6,r6,3
   184d4:	21000044 	addi	r4,r4,1
   184d8:	2109883a 	add	r4,r4,r4
   184dc:	2109883a 	add	r4,r4,r4
   184e0:	1907883a 	add	r3,r3,r4
   184e4:	290b883a 	add	r5,r5,r4
   184e8:	30000b26 	beq	r6,zero,18518 <memmove+0x150>
   184ec:	198d883a 	add	r6,r3,r6
   184f0:	29c00003 	ldbu	r7,0(r5)
   184f4:	18c00044 	addi	r3,r3,1
   184f8:	29400044 	addi	r5,r5,1
   184fc:	19ffffc5 	stb	r7,-1(r3)
   18500:	19bffb1e 	bne	r3,r6,184f0 <_gp+0xffff3294>
   18504:	f800283a 	ret
   18508:	1007883a 	mov	r3,r2
   1850c:	003ff606 	br	184e8 <_gp+0xffff328c>
   18510:	1007883a 	mov	r3,r2
   18514:	003ff506 	br	184ec <_gp+0xffff3290>
   18518:	f800283a 	ret
   1851c:	500d883a 	mov	r6,r10
   18520:	003ff106 	br	184e8 <_gp+0xffff328c>

00018524 <_realloc_r>:
   18524:	defff604 	addi	sp,sp,-40
   18528:	dc800215 	stw	r18,8(sp)
   1852c:	dfc00915 	stw	ra,36(sp)
   18530:	df000815 	stw	fp,32(sp)
   18534:	ddc00715 	stw	r23,28(sp)
   18538:	dd800615 	stw	r22,24(sp)
   1853c:	dd400515 	stw	r21,20(sp)
   18540:	dd000415 	stw	r20,16(sp)
   18544:	dcc00315 	stw	r19,12(sp)
   18548:	dc400115 	stw	r17,4(sp)
   1854c:	dc000015 	stw	r16,0(sp)
   18550:	3025883a 	mov	r18,r6
   18554:	2800b726 	beq	r5,zero,18834 <_realloc_r+0x310>
   18558:	282b883a 	mov	r21,r5
   1855c:	2029883a 	mov	r20,r4
   18560:	001c0640 	call	1c064 <__malloc_lock>
   18564:	a8bfff17 	ldw	r2,-4(r21)
   18568:	043fff04 	movi	r16,-4
   1856c:	90c002c4 	addi	r3,r18,11
   18570:	01000584 	movi	r4,22
   18574:	acfffe04 	addi	r19,r21,-8
   18578:	1420703a 	and	r16,r2,r16
   1857c:	20c0332e 	bgeu	r4,r3,1864c <_realloc_r+0x128>
   18580:	047ffe04 	movi	r17,-8
   18584:	1c62703a 	and	r17,r3,r17
   18588:	8807883a 	mov	r3,r17
   1858c:	88005816 	blt	r17,zero,186f0 <_realloc_r+0x1cc>
   18590:	8c805736 	bltu	r17,r18,186f0 <_realloc_r+0x1cc>
   18594:	80c0300e 	bge	r16,r3,18658 <_realloc_r+0x134>
   18598:	070000b4 	movhi	fp,2
   1859c:	e7335604 	addi	fp,fp,-12968
   185a0:	e1c00217 	ldw	r7,8(fp)
   185a4:	9c09883a 	add	r4,r19,r16
   185a8:	22000117 	ldw	r8,4(r4)
   185ac:	21c06326 	beq	r4,r7,1873c <_realloc_r+0x218>
   185b0:	017fff84 	movi	r5,-2
   185b4:	414a703a 	and	r5,r8,r5
   185b8:	214b883a 	add	r5,r4,r5
   185bc:	29800117 	ldw	r6,4(r5)
   185c0:	3180004c 	andi	r6,r6,1
   185c4:	30003f26 	beq	r6,zero,186c4 <_realloc_r+0x1a0>
   185c8:	1080004c 	andi	r2,r2,1
   185cc:	10008326 	beq	r2,zero,187dc <_realloc_r+0x2b8>
   185d0:	900b883a 	mov	r5,r18
   185d4:	a009883a 	mov	r4,r20
   185d8:	0010eac0 	call	10eac <_malloc_r>
   185dc:	1025883a 	mov	r18,r2
   185e0:	10011e26 	beq	r2,zero,18a5c <_realloc_r+0x538>
   185e4:	a93fff17 	ldw	r4,-4(r21)
   185e8:	10fffe04 	addi	r3,r2,-8
   185ec:	00bfff84 	movi	r2,-2
   185f0:	2084703a 	and	r2,r4,r2
   185f4:	9885883a 	add	r2,r19,r2
   185f8:	1880ee26 	beq	r3,r2,189b4 <_realloc_r+0x490>
   185fc:	81bfff04 	addi	r6,r16,-4
   18600:	00800904 	movi	r2,36
   18604:	1180b836 	bltu	r2,r6,188e8 <_realloc_r+0x3c4>
   18608:	00c004c4 	movi	r3,19
   1860c:	19809636 	bltu	r3,r6,18868 <_realloc_r+0x344>
   18610:	9005883a 	mov	r2,r18
   18614:	a807883a 	mov	r3,r21
   18618:	19000017 	ldw	r4,0(r3)
   1861c:	11000015 	stw	r4,0(r2)
   18620:	19000117 	ldw	r4,4(r3)
   18624:	11000115 	stw	r4,4(r2)
   18628:	18c00217 	ldw	r3,8(r3)
   1862c:	10c00215 	stw	r3,8(r2)
   18630:	a80b883a 	mov	r5,r21
   18634:	a009883a 	mov	r4,r20
   18638:	00155a00 	call	155a0 <_free_r>
   1863c:	a009883a 	mov	r4,r20
   18640:	001c0680 	call	1c068 <__malloc_unlock>
   18644:	9005883a 	mov	r2,r18
   18648:	00001206 	br	18694 <_realloc_r+0x170>
   1864c:	00c00404 	movi	r3,16
   18650:	1823883a 	mov	r17,r3
   18654:	003fce06 	br	18590 <_gp+0xffff3334>
   18658:	a825883a 	mov	r18,r21
   1865c:	8445c83a 	sub	r2,r16,r17
   18660:	00c003c4 	movi	r3,15
   18664:	18802636 	bltu	r3,r2,18700 <_realloc_r+0x1dc>
   18668:	99800117 	ldw	r6,4(r19)
   1866c:	9c07883a 	add	r3,r19,r16
   18670:	3180004c 	andi	r6,r6,1
   18674:	3420b03a 	or	r16,r6,r16
   18678:	9c000115 	stw	r16,4(r19)
   1867c:	18800117 	ldw	r2,4(r3)
   18680:	10800054 	ori	r2,r2,1
   18684:	18800115 	stw	r2,4(r3)
   18688:	a009883a 	mov	r4,r20
   1868c:	001c0680 	call	1c068 <__malloc_unlock>
   18690:	9005883a 	mov	r2,r18
   18694:	dfc00917 	ldw	ra,36(sp)
   18698:	df000817 	ldw	fp,32(sp)
   1869c:	ddc00717 	ldw	r23,28(sp)
   186a0:	dd800617 	ldw	r22,24(sp)
   186a4:	dd400517 	ldw	r21,20(sp)
   186a8:	dd000417 	ldw	r20,16(sp)
   186ac:	dcc00317 	ldw	r19,12(sp)
   186b0:	dc800217 	ldw	r18,8(sp)
   186b4:	dc400117 	ldw	r17,4(sp)
   186b8:	dc000017 	ldw	r16,0(sp)
   186bc:	dec00a04 	addi	sp,sp,40
   186c0:	f800283a 	ret
   186c4:	017fff04 	movi	r5,-4
   186c8:	414a703a 	and	r5,r8,r5
   186cc:	814d883a 	add	r6,r16,r5
   186d0:	30c01f16 	blt	r6,r3,18750 <_realloc_r+0x22c>
   186d4:	20800317 	ldw	r2,12(r4)
   186d8:	20c00217 	ldw	r3,8(r4)
   186dc:	a825883a 	mov	r18,r21
   186e0:	3021883a 	mov	r16,r6
   186e4:	18800315 	stw	r2,12(r3)
   186e8:	10c00215 	stw	r3,8(r2)
   186ec:	003fdb06 	br	1865c <_gp+0xffff3400>
   186f0:	00800304 	movi	r2,12
   186f4:	a0800015 	stw	r2,0(r20)
   186f8:	0005883a 	mov	r2,zero
   186fc:	003fe506 	br	18694 <_gp+0xffff3438>
   18700:	98c00117 	ldw	r3,4(r19)
   18704:	9c4b883a 	add	r5,r19,r17
   18708:	11000054 	ori	r4,r2,1
   1870c:	18c0004c 	andi	r3,r3,1
   18710:	1c62b03a 	or	r17,r3,r17
   18714:	9c400115 	stw	r17,4(r19)
   18718:	29000115 	stw	r4,4(r5)
   1871c:	2885883a 	add	r2,r5,r2
   18720:	10c00117 	ldw	r3,4(r2)
   18724:	29400204 	addi	r5,r5,8
   18728:	a009883a 	mov	r4,r20
   1872c:	18c00054 	ori	r3,r3,1
   18730:	10c00115 	stw	r3,4(r2)
   18734:	00155a00 	call	155a0 <_free_r>
   18738:	003fd306 	br	18688 <_gp+0xffff342c>
   1873c:	017fff04 	movi	r5,-4
   18740:	414a703a 	and	r5,r8,r5
   18744:	89800404 	addi	r6,r17,16
   18748:	8151883a 	add	r8,r16,r5
   1874c:	4180590e 	bge	r8,r6,188b4 <_realloc_r+0x390>
   18750:	1080004c 	andi	r2,r2,1
   18754:	103f9e1e 	bne	r2,zero,185d0 <_gp+0xffff3374>
   18758:	adbffe17 	ldw	r22,-8(r21)
   1875c:	00bfff04 	movi	r2,-4
   18760:	9dadc83a 	sub	r22,r19,r22
   18764:	b1800117 	ldw	r6,4(r22)
   18768:	3084703a 	and	r2,r6,r2
   1876c:	20002026 	beq	r4,zero,187f0 <_realloc_r+0x2cc>
   18770:	80af883a 	add	r23,r16,r2
   18774:	b96f883a 	add	r23,r23,r5
   18778:	21c05f26 	beq	r4,r7,188f8 <_realloc_r+0x3d4>
   1877c:	b8c01c16 	blt	r23,r3,187f0 <_realloc_r+0x2cc>
   18780:	20800317 	ldw	r2,12(r4)
   18784:	20c00217 	ldw	r3,8(r4)
   18788:	81bfff04 	addi	r6,r16,-4
   1878c:	01000904 	movi	r4,36
   18790:	18800315 	stw	r2,12(r3)
   18794:	10c00215 	stw	r3,8(r2)
   18798:	b0c00217 	ldw	r3,8(r22)
   1879c:	b0800317 	ldw	r2,12(r22)
   187a0:	b4800204 	addi	r18,r22,8
   187a4:	18800315 	stw	r2,12(r3)
   187a8:	10c00215 	stw	r3,8(r2)
   187ac:	21801b36 	bltu	r4,r6,1881c <_realloc_r+0x2f8>
   187b0:	008004c4 	movi	r2,19
   187b4:	1180352e 	bgeu	r2,r6,1888c <_realloc_r+0x368>
   187b8:	a8800017 	ldw	r2,0(r21)
   187bc:	b0800215 	stw	r2,8(r22)
   187c0:	a8800117 	ldw	r2,4(r21)
   187c4:	b0800315 	stw	r2,12(r22)
   187c8:	008006c4 	movi	r2,27
   187cc:	11807f36 	bltu	r2,r6,189cc <_realloc_r+0x4a8>
   187d0:	b0800404 	addi	r2,r22,16
   187d4:	ad400204 	addi	r21,r21,8
   187d8:	00002d06 	br	18890 <_realloc_r+0x36c>
   187dc:	adbffe17 	ldw	r22,-8(r21)
   187e0:	00bfff04 	movi	r2,-4
   187e4:	9dadc83a 	sub	r22,r19,r22
   187e8:	b1000117 	ldw	r4,4(r22)
   187ec:	2084703a 	and	r2,r4,r2
   187f0:	b03f7726 	beq	r22,zero,185d0 <_gp+0xffff3374>
   187f4:	80af883a 	add	r23,r16,r2
   187f8:	b8ff7516 	blt	r23,r3,185d0 <_gp+0xffff3374>
   187fc:	b0800317 	ldw	r2,12(r22)
   18800:	b0c00217 	ldw	r3,8(r22)
   18804:	81bfff04 	addi	r6,r16,-4
   18808:	01000904 	movi	r4,36
   1880c:	18800315 	stw	r2,12(r3)
   18810:	10c00215 	stw	r3,8(r2)
   18814:	b4800204 	addi	r18,r22,8
   18818:	21bfe52e 	bgeu	r4,r6,187b0 <_gp+0xffff3554>
   1881c:	a80b883a 	mov	r5,r21
   18820:	9009883a 	mov	r4,r18
   18824:	00183c80 	call	183c8 <memmove>
   18828:	b821883a 	mov	r16,r23
   1882c:	b027883a 	mov	r19,r22
   18830:	003f8a06 	br	1865c <_gp+0xffff3400>
   18834:	300b883a 	mov	r5,r6
   18838:	dfc00917 	ldw	ra,36(sp)
   1883c:	df000817 	ldw	fp,32(sp)
   18840:	ddc00717 	ldw	r23,28(sp)
   18844:	dd800617 	ldw	r22,24(sp)
   18848:	dd400517 	ldw	r21,20(sp)
   1884c:	dd000417 	ldw	r20,16(sp)
   18850:	dcc00317 	ldw	r19,12(sp)
   18854:	dc800217 	ldw	r18,8(sp)
   18858:	dc400117 	ldw	r17,4(sp)
   1885c:	dc000017 	ldw	r16,0(sp)
   18860:	dec00a04 	addi	sp,sp,40
   18864:	0010eac1 	jmpi	10eac <_malloc_r>
   18868:	a8c00017 	ldw	r3,0(r21)
   1886c:	90c00015 	stw	r3,0(r18)
   18870:	a8c00117 	ldw	r3,4(r21)
   18874:	90c00115 	stw	r3,4(r18)
   18878:	00c006c4 	movi	r3,27
   1887c:	19804536 	bltu	r3,r6,18994 <_realloc_r+0x470>
   18880:	90800204 	addi	r2,r18,8
   18884:	a8c00204 	addi	r3,r21,8
   18888:	003f6306 	br	18618 <_gp+0xffff33bc>
   1888c:	9005883a 	mov	r2,r18
   18890:	a8c00017 	ldw	r3,0(r21)
   18894:	b821883a 	mov	r16,r23
   18898:	b027883a 	mov	r19,r22
   1889c:	10c00015 	stw	r3,0(r2)
   188a0:	a8c00117 	ldw	r3,4(r21)
   188a4:	10c00115 	stw	r3,4(r2)
   188a8:	a8c00217 	ldw	r3,8(r21)
   188ac:	10c00215 	stw	r3,8(r2)
   188b0:	003f6a06 	br	1865c <_gp+0xffff3400>
   188b4:	9c67883a 	add	r19,r19,r17
   188b8:	4445c83a 	sub	r2,r8,r17
   188bc:	e4c00215 	stw	r19,8(fp)
   188c0:	10800054 	ori	r2,r2,1
   188c4:	98800115 	stw	r2,4(r19)
   188c8:	a8bfff17 	ldw	r2,-4(r21)
   188cc:	a009883a 	mov	r4,r20
   188d0:	1080004c 	andi	r2,r2,1
   188d4:	1462b03a 	or	r17,r2,r17
   188d8:	ac7fff15 	stw	r17,-4(r21)
   188dc:	001c0680 	call	1c068 <__malloc_unlock>
   188e0:	a805883a 	mov	r2,r21
   188e4:	003f6b06 	br	18694 <_gp+0xffff3438>
   188e8:	a80b883a 	mov	r5,r21
   188ec:	9009883a 	mov	r4,r18
   188f0:	00183c80 	call	183c8 <memmove>
   188f4:	003f4e06 	br	18630 <_gp+0xffff33d4>
   188f8:	89000404 	addi	r4,r17,16
   188fc:	b93fbc16 	blt	r23,r4,187f0 <_gp+0xffff3594>
   18900:	b0800317 	ldw	r2,12(r22)
   18904:	b0c00217 	ldw	r3,8(r22)
   18908:	81bfff04 	addi	r6,r16,-4
   1890c:	01000904 	movi	r4,36
   18910:	18800315 	stw	r2,12(r3)
   18914:	10c00215 	stw	r3,8(r2)
   18918:	b4800204 	addi	r18,r22,8
   1891c:	21804336 	bltu	r4,r6,18a2c <_realloc_r+0x508>
   18920:	008004c4 	movi	r2,19
   18924:	11803f2e 	bgeu	r2,r6,18a24 <_realloc_r+0x500>
   18928:	a8800017 	ldw	r2,0(r21)
   1892c:	b0800215 	stw	r2,8(r22)
   18930:	a8800117 	ldw	r2,4(r21)
   18934:	b0800315 	stw	r2,12(r22)
   18938:	008006c4 	movi	r2,27
   1893c:	11803f36 	bltu	r2,r6,18a3c <_realloc_r+0x518>
   18940:	b0800404 	addi	r2,r22,16
   18944:	ad400204 	addi	r21,r21,8
   18948:	a8c00017 	ldw	r3,0(r21)
   1894c:	10c00015 	stw	r3,0(r2)
   18950:	a8c00117 	ldw	r3,4(r21)
   18954:	10c00115 	stw	r3,4(r2)
   18958:	a8c00217 	ldw	r3,8(r21)
   1895c:	10c00215 	stw	r3,8(r2)
   18960:	b447883a 	add	r3,r22,r17
   18964:	bc45c83a 	sub	r2,r23,r17
   18968:	e0c00215 	stw	r3,8(fp)
   1896c:	10800054 	ori	r2,r2,1
   18970:	18800115 	stw	r2,4(r3)
   18974:	b0800117 	ldw	r2,4(r22)
   18978:	a009883a 	mov	r4,r20
   1897c:	1080004c 	andi	r2,r2,1
   18980:	1462b03a 	or	r17,r2,r17
   18984:	b4400115 	stw	r17,4(r22)
   18988:	001c0680 	call	1c068 <__malloc_unlock>
   1898c:	9005883a 	mov	r2,r18
   18990:	003f4006 	br	18694 <_gp+0xffff3438>
   18994:	a8c00217 	ldw	r3,8(r21)
   18998:	90c00215 	stw	r3,8(r18)
   1899c:	a8c00317 	ldw	r3,12(r21)
   189a0:	90c00315 	stw	r3,12(r18)
   189a4:	30801126 	beq	r6,r2,189ec <_realloc_r+0x4c8>
   189a8:	90800404 	addi	r2,r18,16
   189ac:	a8c00404 	addi	r3,r21,16
   189b0:	003f1906 	br	18618 <_gp+0xffff33bc>
   189b4:	90ffff17 	ldw	r3,-4(r18)
   189b8:	00bfff04 	movi	r2,-4
   189bc:	a825883a 	mov	r18,r21
   189c0:	1884703a 	and	r2,r3,r2
   189c4:	80a1883a 	add	r16,r16,r2
   189c8:	003f2406 	br	1865c <_gp+0xffff3400>
   189cc:	a8800217 	ldw	r2,8(r21)
   189d0:	b0800415 	stw	r2,16(r22)
   189d4:	a8800317 	ldw	r2,12(r21)
   189d8:	b0800515 	stw	r2,20(r22)
   189dc:	31000a26 	beq	r6,r4,18a08 <_realloc_r+0x4e4>
   189e0:	b0800604 	addi	r2,r22,24
   189e4:	ad400404 	addi	r21,r21,16
   189e8:	003fa906 	br	18890 <_gp+0xffff3634>
   189ec:	a9000417 	ldw	r4,16(r21)
   189f0:	90800604 	addi	r2,r18,24
   189f4:	a8c00604 	addi	r3,r21,24
   189f8:	91000415 	stw	r4,16(r18)
   189fc:	a9000517 	ldw	r4,20(r21)
   18a00:	91000515 	stw	r4,20(r18)
   18a04:	003f0406 	br	18618 <_gp+0xffff33bc>
   18a08:	a8c00417 	ldw	r3,16(r21)
   18a0c:	ad400604 	addi	r21,r21,24
   18a10:	b0800804 	addi	r2,r22,32
   18a14:	b0c00615 	stw	r3,24(r22)
   18a18:	a8ffff17 	ldw	r3,-4(r21)
   18a1c:	b0c00715 	stw	r3,28(r22)
   18a20:	003f9b06 	br	18890 <_gp+0xffff3634>
   18a24:	9005883a 	mov	r2,r18
   18a28:	003fc706 	br	18948 <_gp+0xffff36ec>
   18a2c:	a80b883a 	mov	r5,r21
   18a30:	9009883a 	mov	r4,r18
   18a34:	00183c80 	call	183c8 <memmove>
   18a38:	003fc906 	br	18960 <_gp+0xffff3704>
   18a3c:	a8800217 	ldw	r2,8(r21)
   18a40:	b0800415 	stw	r2,16(r22)
   18a44:	a8800317 	ldw	r2,12(r21)
   18a48:	b0800515 	stw	r2,20(r22)
   18a4c:	31000726 	beq	r6,r4,18a6c <_realloc_r+0x548>
   18a50:	b0800604 	addi	r2,r22,24
   18a54:	ad400404 	addi	r21,r21,16
   18a58:	003fbb06 	br	18948 <_gp+0xffff36ec>
   18a5c:	a009883a 	mov	r4,r20
   18a60:	001c0680 	call	1c068 <__malloc_unlock>
   18a64:	0005883a 	mov	r2,zero
   18a68:	003f0a06 	br	18694 <_gp+0xffff3438>
   18a6c:	a8c00417 	ldw	r3,16(r21)
   18a70:	ad400604 	addi	r21,r21,24
   18a74:	b0800804 	addi	r2,r22,32
   18a78:	b0c00615 	stw	r3,24(r22)
   18a7c:	a8ffff17 	ldw	r3,-4(r21)
   18a80:	b0c00715 	stw	r3,28(r22)
   18a84:	003fb006 	br	18948 <_gp+0xffff36ec>

00018a88 <__udivdi3>:
   18a88:	defff404 	addi	sp,sp,-48
   18a8c:	dcc00515 	stw	r19,20(sp)
   18a90:	dc000215 	stw	r16,8(sp)
   18a94:	dfc00b15 	stw	ra,44(sp)
   18a98:	df000a15 	stw	fp,40(sp)
   18a9c:	ddc00915 	stw	r23,36(sp)
   18aa0:	dd800815 	stw	r22,32(sp)
   18aa4:	dd400715 	stw	r21,28(sp)
   18aa8:	dd000615 	stw	r20,24(sp)
   18aac:	dc800415 	stw	r18,16(sp)
   18ab0:	dc400315 	stw	r17,12(sp)
   18ab4:	2027883a 	mov	r19,r4
   18ab8:	2821883a 	mov	r16,r5
   18abc:	3800461e 	bne	r7,zero,18bd8 <__udivdi3+0x150>
   18ac0:	3023883a 	mov	r17,r6
   18ac4:	2025883a 	mov	r18,r4
   18ac8:	2980572e 	bgeu	r5,r6,18c28 <__udivdi3+0x1a0>
   18acc:	00bfffd4 	movui	r2,65535
   18ad0:	282d883a 	mov	r22,r5
   18ad4:	1180b236 	bltu	r2,r6,18da0 <__udivdi3+0x318>
   18ad8:	00803fc4 	movi	r2,255
   18adc:	1185803a 	cmpltu	r2,r2,r6
   18ae0:	100490fa 	slli	r2,r2,3
   18ae4:	3086d83a 	srl	r3,r6,r2
   18ae8:	010000b4 	movhi	r4,2
   18aec:	21320404 	addi	r4,r4,-14320
   18af0:	20c7883a 	add	r3,r4,r3
   18af4:	18c00003 	ldbu	r3,0(r3)
   18af8:	1885883a 	add	r2,r3,r2
   18afc:	00c00804 	movi	r3,32
   18b00:	1887c83a 	sub	r3,r3,r2
   18b04:	18000526 	beq	r3,zero,18b1c <__udivdi3+0x94>
   18b08:	80e0983a 	sll	r16,r16,r3
   18b0c:	9884d83a 	srl	r2,r19,r2
   18b10:	30e2983a 	sll	r17,r6,r3
   18b14:	98e4983a 	sll	r18,r19,r3
   18b18:	142cb03a 	or	r22,r2,r16
   18b1c:	882ad43a 	srli	r21,r17,16
   18b20:	b009883a 	mov	r4,r22
   18b24:	8d3fffcc 	andi	r20,r17,65535
   18b28:	a80b883a 	mov	r5,r21
   18b2c:	0010d500 	call	10d50 <__umodsi3>
   18b30:	b009883a 	mov	r4,r22
   18b34:	a80b883a 	mov	r5,r21
   18b38:	1027883a 	mov	r19,r2
   18b3c:	0010cec0 	call	10cec <__udivsi3>
   18b40:	100b883a 	mov	r5,r2
   18b44:	a009883a 	mov	r4,r20
   18b48:	102d883a 	mov	r22,r2
   18b4c:	00196480 	call	19648 <__mulsi3>
   18b50:	9826943a 	slli	r19,r19,16
   18b54:	9006d43a 	srli	r3,r18,16
   18b58:	1cc6b03a 	or	r3,r3,r19
   18b5c:	1880052e 	bgeu	r3,r2,18b74 <__udivdi3+0xec>
   18b60:	1c47883a 	add	r3,r3,r17
   18b64:	b13fffc4 	addi	r4,r22,-1
   18b68:	1c400136 	bltu	r3,r17,18b70 <__udivdi3+0xe8>
   18b6c:	18814236 	bltu	r3,r2,19078 <__udivdi3+0x5f0>
   18b70:	202d883a 	mov	r22,r4
   18b74:	18a1c83a 	sub	r16,r3,r2
   18b78:	8009883a 	mov	r4,r16
   18b7c:	a80b883a 	mov	r5,r21
   18b80:	0010d500 	call	10d50 <__umodsi3>
   18b84:	1027883a 	mov	r19,r2
   18b88:	8009883a 	mov	r4,r16
   18b8c:	a80b883a 	mov	r5,r21
   18b90:	9826943a 	slli	r19,r19,16
   18b94:	0010cec0 	call	10cec <__udivsi3>
   18b98:	100b883a 	mov	r5,r2
   18b9c:	a009883a 	mov	r4,r20
   18ba0:	94bfffcc 	andi	r18,r18,65535
   18ba4:	1021883a 	mov	r16,r2
   18ba8:	94e4b03a 	or	r18,r18,r19
   18bac:	00196480 	call	19648 <__mulsi3>
   18bb0:	9080052e 	bgeu	r18,r2,18bc8 <__udivdi3+0x140>
   18bb4:	8ca5883a 	add	r18,r17,r18
   18bb8:	80ffffc4 	addi	r3,r16,-1
   18bbc:	94410c36 	bltu	r18,r17,18ff0 <__udivdi3+0x568>
   18bc0:	90810b2e 	bgeu	r18,r2,18ff0 <__udivdi3+0x568>
   18bc4:	843fff84 	addi	r16,r16,-2
   18bc8:	b004943a 	slli	r2,r22,16
   18bcc:	0007883a 	mov	r3,zero
   18bd0:	1404b03a 	or	r2,r2,r16
   18bd4:	00005e06 	br	18d50 <__udivdi3+0x2c8>
   18bd8:	29c05b36 	bltu	r5,r7,18d48 <__udivdi3+0x2c0>
   18bdc:	00bfffd4 	movui	r2,65535
   18be0:	11c0672e 	bgeu	r2,r7,18d80 <__udivdi3+0x2f8>
   18be4:	00804034 	movhi	r2,256
   18be8:	10bfffc4 	addi	r2,r2,-1
   18bec:	11c10a36 	bltu	r2,r7,19018 <__udivdi3+0x590>
   18bf0:	00800404 	movi	r2,16
   18bf4:	3886d83a 	srl	r3,r7,r2
   18bf8:	010000b4 	movhi	r4,2
   18bfc:	21320404 	addi	r4,r4,-14320
   18c00:	20c7883a 	add	r3,r4,r3
   18c04:	18c00003 	ldbu	r3,0(r3)
   18c08:	05c00804 	movi	r23,32
   18c0c:	1885883a 	add	r2,r3,r2
   18c10:	b8afc83a 	sub	r23,r23,r2
   18c14:	b800671e 	bne	r23,zero,18db4 <__udivdi3+0x32c>
   18c18:	3c010536 	bltu	r7,r16,19030 <__udivdi3+0x5a8>
   18c1c:	9985403a 	cmpgeu	r2,r19,r6
   18c20:	0007883a 	mov	r3,zero
   18c24:	00004a06 	br	18d50 <__udivdi3+0x2c8>
   18c28:	3000041e 	bne	r6,zero,18c3c <__udivdi3+0x1b4>
   18c2c:	000b883a 	mov	r5,zero
   18c30:	01000044 	movi	r4,1
   18c34:	0010cec0 	call	10cec <__udivsi3>
   18c38:	1023883a 	mov	r17,r2
   18c3c:	00bfffd4 	movui	r2,65535
   18c40:	1440532e 	bgeu	r2,r17,18d90 <__udivdi3+0x308>
   18c44:	00804034 	movhi	r2,256
   18c48:	10bfffc4 	addi	r2,r2,-1
   18c4c:	1440f436 	bltu	r2,r17,19020 <__udivdi3+0x598>
   18c50:	00800404 	movi	r2,16
   18c54:	8886d83a 	srl	r3,r17,r2
   18c58:	010000b4 	movhi	r4,2
   18c5c:	21320404 	addi	r4,r4,-14320
   18c60:	20c7883a 	add	r3,r4,r3
   18c64:	18c00003 	ldbu	r3,0(r3)
   18c68:	1885883a 	add	r2,r3,r2
   18c6c:	00c00804 	movi	r3,32
   18c70:	1887c83a 	sub	r3,r3,r2
   18c74:	1800a51e 	bne	r3,zero,18f0c <__udivdi3+0x484>
   18c78:	882ad43a 	srli	r21,r17,16
   18c7c:	8461c83a 	sub	r16,r16,r17
   18c80:	8d3fffcc 	andi	r20,r17,65535
   18c84:	00c00044 	movi	r3,1
   18c88:	a80b883a 	mov	r5,r21
   18c8c:	8009883a 	mov	r4,r16
   18c90:	d8c00115 	stw	r3,4(sp)
   18c94:	0010d500 	call	10d50 <__umodsi3>
   18c98:	a80b883a 	mov	r5,r21
   18c9c:	8009883a 	mov	r4,r16
   18ca0:	1027883a 	mov	r19,r2
   18ca4:	0010cec0 	call	10cec <__udivsi3>
   18ca8:	a00b883a 	mov	r5,r20
   18cac:	1009883a 	mov	r4,r2
   18cb0:	102d883a 	mov	r22,r2
   18cb4:	00196480 	call	19648 <__mulsi3>
   18cb8:	9826943a 	slli	r19,r19,16
   18cbc:	900ed43a 	srli	r7,r18,16
   18cc0:	d8c00117 	ldw	r3,4(sp)
   18cc4:	3cceb03a 	or	r7,r7,r19
   18cc8:	3880052e 	bgeu	r7,r2,18ce0 <__udivdi3+0x258>
   18ccc:	3c4f883a 	add	r7,r7,r17
   18cd0:	b13fffc4 	addi	r4,r22,-1
   18cd4:	3c400136 	bltu	r7,r17,18cdc <__udivdi3+0x254>
   18cd8:	3880e436 	bltu	r7,r2,1906c <__udivdi3+0x5e4>
   18cdc:	202d883a 	mov	r22,r4
   18ce0:	38a1c83a 	sub	r16,r7,r2
   18ce4:	8009883a 	mov	r4,r16
   18ce8:	a80b883a 	mov	r5,r21
   18cec:	d8c00115 	stw	r3,4(sp)
   18cf0:	0010d500 	call	10d50 <__umodsi3>
   18cf4:	1027883a 	mov	r19,r2
   18cf8:	8009883a 	mov	r4,r16
   18cfc:	a80b883a 	mov	r5,r21
   18d00:	9826943a 	slli	r19,r19,16
   18d04:	0010cec0 	call	10cec <__udivsi3>
   18d08:	a00b883a 	mov	r5,r20
   18d0c:	1009883a 	mov	r4,r2
   18d10:	94bfffcc 	andi	r18,r18,65535
   18d14:	1021883a 	mov	r16,r2
   18d18:	94e4b03a 	or	r18,r18,r19
   18d1c:	00196480 	call	19648 <__mulsi3>
   18d20:	d8c00117 	ldw	r3,4(sp)
   18d24:	9080052e 	bgeu	r18,r2,18d3c <__udivdi3+0x2b4>
   18d28:	8ca5883a 	add	r18,r17,r18
   18d2c:	813fffc4 	addi	r4,r16,-1
   18d30:	9440ad36 	bltu	r18,r17,18fe8 <__udivdi3+0x560>
   18d34:	9080ac2e 	bgeu	r18,r2,18fe8 <__udivdi3+0x560>
   18d38:	843fff84 	addi	r16,r16,-2
   18d3c:	b004943a 	slli	r2,r22,16
   18d40:	1404b03a 	or	r2,r2,r16
   18d44:	00000206 	br	18d50 <__udivdi3+0x2c8>
   18d48:	0007883a 	mov	r3,zero
   18d4c:	0005883a 	mov	r2,zero
   18d50:	dfc00b17 	ldw	ra,44(sp)
   18d54:	df000a17 	ldw	fp,40(sp)
   18d58:	ddc00917 	ldw	r23,36(sp)
   18d5c:	dd800817 	ldw	r22,32(sp)
   18d60:	dd400717 	ldw	r21,28(sp)
   18d64:	dd000617 	ldw	r20,24(sp)
   18d68:	dcc00517 	ldw	r19,20(sp)
   18d6c:	dc800417 	ldw	r18,16(sp)
   18d70:	dc400317 	ldw	r17,12(sp)
   18d74:	dc000217 	ldw	r16,8(sp)
   18d78:	dec00c04 	addi	sp,sp,48
   18d7c:	f800283a 	ret
   18d80:	00803fc4 	movi	r2,255
   18d84:	11c5803a 	cmpltu	r2,r2,r7
   18d88:	100490fa 	slli	r2,r2,3
   18d8c:	003f9906 	br	18bf4 <_gp+0xffff3998>
   18d90:	00803fc4 	movi	r2,255
   18d94:	1445803a 	cmpltu	r2,r2,r17
   18d98:	100490fa 	slli	r2,r2,3
   18d9c:	003fad06 	br	18c54 <_gp+0xffff39f8>
   18da0:	00804034 	movhi	r2,256
   18da4:	10bfffc4 	addi	r2,r2,-1
   18da8:	11809f36 	bltu	r2,r6,19028 <__udivdi3+0x5a0>
   18dac:	00800404 	movi	r2,16
   18db0:	003f4c06 	br	18ae4 <_gp+0xffff3888>
   18db4:	3dce983a 	sll	r7,r7,r23
   18db8:	30b8d83a 	srl	fp,r6,r2
   18dbc:	80a2d83a 	srl	r17,r16,r2
   18dc0:	35cc983a 	sll	r6,r6,r23
   18dc4:	3f38b03a 	or	fp,r7,fp
   18dc8:	e024d43a 	srli	r18,fp,16
   18dcc:	9884d83a 	srl	r2,r19,r2
   18dd0:	85e0983a 	sll	r16,r16,r23
   18dd4:	8809883a 	mov	r4,r17
   18dd8:	900b883a 	mov	r5,r18
   18ddc:	d9800015 	stw	r6,0(sp)
   18de0:	1420b03a 	or	r16,r2,r16
   18de4:	0010d500 	call	10d50 <__umodsi3>
   18de8:	900b883a 	mov	r5,r18
   18dec:	8809883a 	mov	r4,r17
   18df0:	1029883a 	mov	r20,r2
   18df4:	e5bfffcc 	andi	r22,fp,65535
   18df8:	0010cec0 	call	10cec <__udivsi3>
   18dfc:	100b883a 	mov	r5,r2
   18e00:	b009883a 	mov	r4,r22
   18e04:	102b883a 	mov	r21,r2
   18e08:	00196480 	call	19648 <__mulsi3>
   18e0c:	a028943a 	slli	r20,r20,16
   18e10:	8006d43a 	srli	r3,r16,16
   18e14:	1d06b03a 	or	r3,r3,r20
   18e18:	1880042e 	bgeu	r3,r2,18e2c <__udivdi3+0x3a4>
   18e1c:	1f07883a 	add	r3,r3,fp
   18e20:	a93fffc4 	addi	r4,r21,-1
   18e24:	1f00892e 	bgeu	r3,fp,1904c <__udivdi3+0x5c4>
   18e28:	202b883a 	mov	r21,r4
   18e2c:	18a3c83a 	sub	r17,r3,r2
   18e30:	8809883a 	mov	r4,r17
   18e34:	900b883a 	mov	r5,r18
   18e38:	0010d500 	call	10d50 <__umodsi3>
   18e3c:	1029883a 	mov	r20,r2
   18e40:	8809883a 	mov	r4,r17
   18e44:	900b883a 	mov	r5,r18
   18e48:	a028943a 	slli	r20,r20,16
   18e4c:	0010cec0 	call	10cec <__udivsi3>
   18e50:	100b883a 	mov	r5,r2
   18e54:	b009883a 	mov	r4,r22
   18e58:	843fffcc 	andi	r16,r16,65535
   18e5c:	1023883a 	mov	r17,r2
   18e60:	8520b03a 	or	r16,r16,r20
   18e64:	00196480 	call	19648 <__mulsi3>
   18e68:	8080042e 	bgeu	r16,r2,18e7c <__udivdi3+0x3f4>
   18e6c:	8721883a 	add	r16,r16,fp
   18e70:	88ffffc4 	addi	r3,r17,-1
   18e74:	8700712e 	bgeu	r16,fp,1903c <__udivdi3+0x5b4>
   18e78:	1823883a 	mov	r17,r3
   18e7c:	a80e943a 	slli	r7,r21,16
   18e80:	d8c00017 	ldw	r3,0(sp)
   18e84:	80a1c83a 	sub	r16,r16,r2
   18e88:	3c64b03a 	or	r18,r7,r17
   18e8c:	1d3fffcc 	andi	r20,r3,65535
   18e90:	9022d43a 	srli	r17,r18,16
   18e94:	95bfffcc 	andi	r22,r18,65535
   18e98:	a00b883a 	mov	r5,r20
   18e9c:	b009883a 	mov	r4,r22
   18ea0:	182ad43a 	srli	r21,r3,16
   18ea4:	00196480 	call	19648 <__mulsi3>
   18ea8:	a00b883a 	mov	r5,r20
   18eac:	8809883a 	mov	r4,r17
   18eb0:	1039883a 	mov	fp,r2
   18eb4:	00196480 	call	19648 <__mulsi3>
   18eb8:	8809883a 	mov	r4,r17
   18ebc:	a80b883a 	mov	r5,r21
   18ec0:	1029883a 	mov	r20,r2
   18ec4:	00196480 	call	19648 <__mulsi3>
   18ec8:	a80b883a 	mov	r5,r21
   18ecc:	b009883a 	mov	r4,r22
   18ed0:	1023883a 	mov	r17,r2
   18ed4:	00196480 	call	19648 <__mulsi3>
   18ed8:	e006d43a 	srli	r3,fp,16
   18edc:	1505883a 	add	r2,r2,r20
   18ee0:	1887883a 	add	r3,r3,r2
   18ee4:	1d00022e 	bgeu	r3,r20,18ef0 <__udivdi3+0x468>
   18ee8:	00800074 	movhi	r2,1
   18eec:	88a3883a 	add	r17,r17,r2
   18ef0:	1804d43a 	srli	r2,r3,16
   18ef4:	1463883a 	add	r17,r2,r17
   18ef8:	84404436 	bltu	r16,r17,1900c <__udivdi3+0x584>
   18efc:	84403e26 	beq	r16,r17,18ff8 <__udivdi3+0x570>
   18f00:	9005883a 	mov	r2,r18
   18f04:	0007883a 	mov	r3,zero
   18f08:	003f9106 	br	18d50 <_gp+0xffff3af4>
   18f0c:	88e2983a 	sll	r17,r17,r3
   18f10:	80aed83a 	srl	r23,r16,r2
   18f14:	80e0983a 	sll	r16,r16,r3
   18f18:	882ad43a 	srli	r21,r17,16
   18f1c:	9884d83a 	srl	r2,r19,r2
   18f20:	b809883a 	mov	r4,r23
   18f24:	a80b883a 	mov	r5,r21
   18f28:	98e4983a 	sll	r18,r19,r3
   18f2c:	142cb03a 	or	r22,r2,r16
   18f30:	0010d500 	call	10d50 <__umodsi3>
   18f34:	b809883a 	mov	r4,r23
   18f38:	a80b883a 	mov	r5,r21
   18f3c:	1027883a 	mov	r19,r2
   18f40:	8d3fffcc 	andi	r20,r17,65535
   18f44:	0010cec0 	call	10cec <__udivsi3>
   18f48:	a009883a 	mov	r4,r20
   18f4c:	100b883a 	mov	r5,r2
   18f50:	102f883a 	mov	r23,r2
   18f54:	00196480 	call	19648 <__mulsi3>
   18f58:	9826943a 	slli	r19,r19,16
   18f5c:	b008d43a 	srli	r4,r22,16
   18f60:	24c8b03a 	or	r4,r4,r19
   18f64:	2080062e 	bgeu	r4,r2,18f80 <__udivdi3+0x4f8>
   18f68:	2449883a 	add	r4,r4,r17
   18f6c:	b8ffffc4 	addi	r3,r23,-1
   18f70:	24403c36 	bltu	r4,r17,19064 <__udivdi3+0x5dc>
   18f74:	20803b2e 	bgeu	r4,r2,19064 <__udivdi3+0x5dc>
   18f78:	bdffff84 	addi	r23,r23,-2
   18f7c:	2449883a 	add	r4,r4,r17
   18f80:	20a1c83a 	sub	r16,r4,r2
   18f84:	a80b883a 	mov	r5,r21
   18f88:	8009883a 	mov	r4,r16
   18f8c:	0010d500 	call	10d50 <__umodsi3>
   18f90:	a80b883a 	mov	r5,r21
   18f94:	8009883a 	mov	r4,r16
   18f98:	1027883a 	mov	r19,r2
   18f9c:	0010cec0 	call	10cec <__udivsi3>
   18fa0:	a009883a 	mov	r4,r20
   18fa4:	100b883a 	mov	r5,r2
   18fa8:	9826943a 	slli	r19,r19,16
   18fac:	1039883a 	mov	fp,r2
   18fb0:	00196480 	call	19648 <__mulsi3>
   18fb4:	b13fffcc 	andi	r4,r22,65535
   18fb8:	24c8b03a 	or	r4,r4,r19
   18fbc:	2080062e 	bgeu	r4,r2,18fd8 <__udivdi3+0x550>
   18fc0:	2449883a 	add	r4,r4,r17
   18fc4:	e0ffffc4 	addi	r3,fp,-1
   18fc8:	24402436 	bltu	r4,r17,1905c <__udivdi3+0x5d4>
   18fcc:	2080232e 	bgeu	r4,r2,1905c <__udivdi3+0x5d4>
   18fd0:	e73fff84 	addi	fp,fp,-2
   18fd4:	2449883a 	add	r4,r4,r17
   18fd8:	b82e943a 	slli	r23,r23,16
   18fdc:	20a1c83a 	sub	r16,r4,r2
   18fe0:	bf06b03a 	or	r3,r23,fp
   18fe4:	003f2806 	br	18c88 <_gp+0xffff3a2c>
   18fe8:	2021883a 	mov	r16,r4
   18fec:	003f5306 	br	18d3c <_gp+0xffff3ae0>
   18ff0:	1821883a 	mov	r16,r3
   18ff4:	003ef406 	br	18bc8 <_gp+0xffff396c>
   18ff8:	1806943a 	slli	r3,r3,16
   18ffc:	9de6983a 	sll	r19,r19,r23
   19000:	e73fffcc 	andi	fp,fp,65535
   19004:	1f07883a 	add	r3,r3,fp
   19008:	98ffbd2e 	bgeu	r19,r3,18f00 <_gp+0xffff3ca4>
   1900c:	90bfffc4 	addi	r2,r18,-1
   19010:	0007883a 	mov	r3,zero
   19014:	003f4e06 	br	18d50 <_gp+0xffff3af4>
   19018:	00800604 	movi	r2,24
   1901c:	003ef506 	br	18bf4 <_gp+0xffff3998>
   19020:	00800604 	movi	r2,24
   19024:	003f0b06 	br	18c54 <_gp+0xffff39f8>
   19028:	00800604 	movi	r2,24
   1902c:	003ead06 	br	18ae4 <_gp+0xffff3888>
   19030:	0007883a 	mov	r3,zero
   19034:	00800044 	movi	r2,1
   19038:	003f4506 	br	18d50 <_gp+0xffff3af4>
   1903c:	80bf8e2e 	bgeu	r16,r2,18e78 <_gp+0xffff3c1c>
   19040:	8c7fff84 	addi	r17,r17,-2
   19044:	8721883a 	add	r16,r16,fp
   19048:	003f8c06 	br	18e7c <_gp+0xffff3c20>
   1904c:	18bf762e 	bgeu	r3,r2,18e28 <_gp+0xffff3bcc>
   19050:	ad7fff84 	addi	r21,r21,-2
   19054:	1f07883a 	add	r3,r3,fp
   19058:	003f7406 	br	18e2c <_gp+0xffff3bd0>
   1905c:	1839883a 	mov	fp,r3
   19060:	003fdd06 	br	18fd8 <_gp+0xffff3d7c>
   19064:	182f883a 	mov	r23,r3
   19068:	003fc506 	br	18f80 <_gp+0xffff3d24>
   1906c:	b5bfff84 	addi	r22,r22,-2
   19070:	3c4f883a 	add	r7,r7,r17
   19074:	003f1a06 	br	18ce0 <_gp+0xffff3a84>
   19078:	b5bfff84 	addi	r22,r22,-2
   1907c:	1c47883a 	add	r3,r3,r17
   19080:	003ebc06 	br	18b74 <_gp+0xffff3918>

00019084 <__umoddi3>:
   19084:	defff304 	addi	sp,sp,-52
   19088:	df000b15 	stw	fp,44(sp)
   1908c:	dc400415 	stw	r17,16(sp)
   19090:	dc000315 	stw	r16,12(sp)
   19094:	dfc00c15 	stw	ra,48(sp)
   19098:	ddc00a15 	stw	r23,40(sp)
   1909c:	dd800915 	stw	r22,36(sp)
   190a0:	dd400815 	stw	r21,32(sp)
   190a4:	dd000715 	stw	r20,28(sp)
   190a8:	dcc00615 	stw	r19,24(sp)
   190ac:	dc800515 	stw	r18,20(sp)
   190b0:	2021883a 	mov	r16,r4
   190b4:	2823883a 	mov	r17,r5
   190b8:	2839883a 	mov	fp,r5
   190bc:	3800401e 	bne	r7,zero,191c0 <__umoddi3+0x13c>
   190c0:	3027883a 	mov	r19,r6
   190c4:	2029883a 	mov	r20,r4
   190c8:	2980552e 	bgeu	r5,r6,19220 <__umoddi3+0x19c>
   190cc:	00bfffd4 	movui	r2,65535
   190d0:	1180a236 	bltu	r2,r6,1935c <__umoddi3+0x2d8>
   190d4:	01003fc4 	movi	r4,255
   190d8:	2189803a 	cmpltu	r4,r4,r6
   190dc:	200890fa 	slli	r4,r4,3
   190e0:	3104d83a 	srl	r2,r6,r4
   190e4:	00c000b4 	movhi	r3,2
   190e8:	18f20404 	addi	r3,r3,-14320
   190ec:	1885883a 	add	r2,r3,r2
   190f0:	10c00003 	ldbu	r3,0(r2)
   190f4:	00800804 	movi	r2,32
   190f8:	1909883a 	add	r4,r3,r4
   190fc:	1125c83a 	sub	r18,r2,r4
   19100:	90000526 	beq	r18,zero,19118 <__umoddi3+0x94>
   19104:	8ca2983a 	sll	r17,r17,r18
   19108:	8108d83a 	srl	r4,r16,r4
   1910c:	34a6983a 	sll	r19,r6,r18
   19110:	84a8983a 	sll	r20,r16,r18
   19114:	2478b03a 	or	fp,r4,r17
   19118:	982cd43a 	srli	r22,r19,16
   1911c:	e009883a 	mov	r4,fp
   19120:	9dffffcc 	andi	r23,r19,65535
   19124:	b00b883a 	mov	r5,r22
   19128:	0010d500 	call	10d50 <__umodsi3>
   1912c:	b00b883a 	mov	r5,r22
   19130:	e009883a 	mov	r4,fp
   19134:	102b883a 	mov	r21,r2
   19138:	0010cec0 	call	10cec <__udivsi3>
   1913c:	100b883a 	mov	r5,r2
   19140:	b809883a 	mov	r4,r23
   19144:	00196480 	call	19648 <__mulsi3>
   19148:	a82a943a 	slli	r21,r21,16
   1914c:	a006d43a 	srli	r3,r20,16
   19150:	1d46b03a 	or	r3,r3,r21
   19154:	1880032e 	bgeu	r3,r2,19164 <__umoddi3+0xe0>
   19158:	1cc7883a 	add	r3,r3,r19
   1915c:	1cc00136 	bltu	r3,r19,19164 <__umoddi3+0xe0>
   19160:	18813136 	bltu	r3,r2,19628 <__umoddi3+0x5a4>
   19164:	18a1c83a 	sub	r16,r3,r2
   19168:	b00b883a 	mov	r5,r22
   1916c:	8009883a 	mov	r4,r16
   19170:	0010d500 	call	10d50 <__umodsi3>
   19174:	b00b883a 	mov	r5,r22
   19178:	8009883a 	mov	r4,r16
   1917c:	1023883a 	mov	r17,r2
   19180:	0010cec0 	call	10cec <__udivsi3>
   19184:	100b883a 	mov	r5,r2
   19188:	b809883a 	mov	r4,r23
   1918c:	8822943a 	slli	r17,r17,16
   19190:	00196480 	call	19648 <__mulsi3>
   19194:	a0ffffcc 	andi	r3,r20,65535
   19198:	1c46b03a 	or	r3,r3,r17
   1919c:	1880042e 	bgeu	r3,r2,191b0 <__umoddi3+0x12c>
   191a0:	1cc7883a 	add	r3,r3,r19
   191a4:	1cc00236 	bltu	r3,r19,191b0 <__umoddi3+0x12c>
   191a8:	1880012e 	bgeu	r3,r2,191b0 <__umoddi3+0x12c>
   191ac:	1cc7883a 	add	r3,r3,r19
   191b0:	1885c83a 	sub	r2,r3,r2
   191b4:	1484d83a 	srl	r2,r2,r18
   191b8:	0007883a 	mov	r3,zero
   191bc:	00005306 	br	1930c <__umoddi3+0x288>
   191c0:	29c05036 	bltu	r5,r7,19304 <__umoddi3+0x280>
   191c4:	00bfffd4 	movui	r2,65535
   191c8:	11c05c2e 	bgeu	r2,r7,1933c <__umoddi3+0x2b8>
   191cc:	00804034 	movhi	r2,256
   191d0:	10bfffc4 	addi	r2,r2,-1
   191d4:	11c10636 	bltu	r2,r7,195f0 <__umoddi3+0x56c>
   191d8:	01000404 	movi	r4,16
   191dc:	3904d83a 	srl	r2,r7,r4
   191e0:	00c000b4 	movhi	r3,2
   191e4:	18f20404 	addi	r3,r3,-14320
   191e8:	1885883a 	add	r2,r3,r2
   191ec:	14c00003 	ldbu	r19,0(r2)
   191f0:	00c00804 	movi	r3,32
   191f4:	9927883a 	add	r19,r19,r4
   191f8:	1ce9c83a 	sub	r20,r3,r19
   191fc:	a0005c1e 	bne	r20,zero,19370 <__umoddi3+0x2ec>
   19200:	3c400136 	bltu	r7,r17,19208 <__umoddi3+0x184>
   19204:	81810a36 	bltu	r16,r6,19630 <__umoddi3+0x5ac>
   19208:	8185c83a 	sub	r2,r16,r6
   1920c:	89e3c83a 	sub	r17,r17,r7
   19210:	8089803a 	cmpltu	r4,r16,r2
   19214:	8939c83a 	sub	fp,r17,r4
   19218:	e007883a 	mov	r3,fp
   1921c:	00003b06 	br	1930c <__umoddi3+0x288>
   19220:	3000041e 	bne	r6,zero,19234 <__umoddi3+0x1b0>
   19224:	000b883a 	mov	r5,zero
   19228:	01000044 	movi	r4,1
   1922c:	0010cec0 	call	10cec <__udivsi3>
   19230:	1027883a 	mov	r19,r2
   19234:	00bfffd4 	movui	r2,65535
   19238:	14c0442e 	bgeu	r2,r19,1934c <__umoddi3+0x2c8>
   1923c:	00804034 	movhi	r2,256
   19240:	10bfffc4 	addi	r2,r2,-1
   19244:	14c0ec36 	bltu	r2,r19,195f8 <__umoddi3+0x574>
   19248:	00800404 	movi	r2,16
   1924c:	9886d83a 	srl	r3,r19,r2
   19250:	010000b4 	movhi	r4,2
   19254:	21320404 	addi	r4,r4,-14320
   19258:	20c7883a 	add	r3,r4,r3
   1925c:	18c00003 	ldbu	r3,0(r3)
   19260:	1887883a 	add	r3,r3,r2
   19264:	00800804 	movi	r2,32
   19268:	10e5c83a 	sub	r18,r2,r3
   1926c:	9000ab1e 	bne	r18,zero,1951c <__umoddi3+0x498>
   19270:	982cd43a 	srli	r22,r19,16
   19274:	8ce3c83a 	sub	r17,r17,r19
   19278:	9dffffcc 	andi	r23,r19,65535
   1927c:	b00b883a 	mov	r5,r22
   19280:	8809883a 	mov	r4,r17
   19284:	0010d500 	call	10d50 <__umodsi3>
   19288:	b00b883a 	mov	r5,r22
   1928c:	8809883a 	mov	r4,r17
   19290:	102b883a 	mov	r21,r2
   19294:	0010cec0 	call	10cec <__udivsi3>
   19298:	b80b883a 	mov	r5,r23
   1929c:	1009883a 	mov	r4,r2
   192a0:	00196480 	call	19648 <__mulsi3>
   192a4:	a82a943a 	slli	r21,r21,16
   192a8:	a006d43a 	srli	r3,r20,16
   192ac:	1d46b03a 	or	r3,r3,r21
   192b0:	1880042e 	bgeu	r3,r2,192c4 <__umoddi3+0x240>
   192b4:	1cc7883a 	add	r3,r3,r19
   192b8:	1cc00236 	bltu	r3,r19,192c4 <__umoddi3+0x240>
   192bc:	1880012e 	bgeu	r3,r2,192c4 <__umoddi3+0x240>
   192c0:	1cc7883a 	add	r3,r3,r19
   192c4:	18a1c83a 	sub	r16,r3,r2
   192c8:	b00b883a 	mov	r5,r22
   192cc:	8009883a 	mov	r4,r16
   192d0:	0010d500 	call	10d50 <__umodsi3>
   192d4:	1023883a 	mov	r17,r2
   192d8:	b00b883a 	mov	r5,r22
   192dc:	8009883a 	mov	r4,r16
   192e0:	0010cec0 	call	10cec <__udivsi3>
   192e4:	8822943a 	slli	r17,r17,16
   192e8:	b80b883a 	mov	r5,r23
   192ec:	1009883a 	mov	r4,r2
   192f0:	00196480 	call	19648 <__mulsi3>
   192f4:	a53fffcc 	andi	r20,r20,65535
   192f8:	a446b03a 	or	r3,r20,r17
   192fc:	18bfac2e 	bgeu	r3,r2,191b0 <_gp+0xffff3f54>
   19300:	003fa706 	br	191a0 <_gp+0xffff3f44>
   19304:	2005883a 	mov	r2,r4
   19308:	2807883a 	mov	r3,r5
   1930c:	dfc00c17 	ldw	ra,48(sp)
   19310:	df000b17 	ldw	fp,44(sp)
   19314:	ddc00a17 	ldw	r23,40(sp)
   19318:	dd800917 	ldw	r22,36(sp)
   1931c:	dd400817 	ldw	r21,32(sp)
   19320:	dd000717 	ldw	r20,28(sp)
   19324:	dcc00617 	ldw	r19,24(sp)
   19328:	dc800517 	ldw	r18,20(sp)
   1932c:	dc400417 	ldw	r17,16(sp)
   19330:	dc000317 	ldw	r16,12(sp)
   19334:	dec00d04 	addi	sp,sp,52
   19338:	f800283a 	ret
   1933c:	04c03fc4 	movi	r19,255
   19340:	99c9803a 	cmpltu	r4,r19,r7
   19344:	200890fa 	slli	r4,r4,3
   19348:	003fa406 	br	191dc <_gp+0xffff3f80>
   1934c:	00803fc4 	movi	r2,255
   19350:	14c5803a 	cmpltu	r2,r2,r19
   19354:	100490fa 	slli	r2,r2,3
   19358:	003fbc06 	br	1924c <_gp+0xffff3ff0>
   1935c:	00804034 	movhi	r2,256
   19360:	10bfffc4 	addi	r2,r2,-1
   19364:	1180a636 	bltu	r2,r6,19600 <__umoddi3+0x57c>
   19368:	01000404 	movi	r4,16
   1936c:	003f5c06 	br	190e0 <_gp+0xffff3e84>
   19370:	3d0e983a 	sll	r7,r7,r20
   19374:	34ead83a 	srl	r21,r6,r19
   19378:	8cc6d83a 	srl	r3,r17,r19
   1937c:	8d10983a 	sll	r8,r17,r20
   19380:	3d6ab03a 	or	r21,r7,r21
   19384:	a82cd43a 	srli	r22,r21,16
   19388:	84e2d83a 	srl	r17,r16,r19
   1938c:	1809883a 	mov	r4,r3
   19390:	b00b883a 	mov	r5,r22
   19394:	8a22b03a 	or	r17,r17,r8
   19398:	3524983a 	sll	r18,r6,r20
   1939c:	dc400015 	stw	r17,0(sp)
   193a0:	d8c00115 	stw	r3,4(sp)
   193a4:	0010d500 	call	10d50 <__umodsi3>
   193a8:	d8c00117 	ldw	r3,4(sp)
   193ac:	b00b883a 	mov	r5,r22
   193b0:	1039883a 	mov	fp,r2
   193b4:	1809883a 	mov	r4,r3
   193b8:	0010cec0 	call	10cec <__udivsi3>
   193bc:	adffffcc 	andi	r23,r21,65535
   193c0:	100b883a 	mov	r5,r2
   193c4:	b809883a 	mov	r4,r23
   193c8:	1023883a 	mov	r17,r2
   193cc:	00196480 	call	19648 <__mulsi3>
   193d0:	d9400017 	ldw	r5,0(sp)
   193d4:	e008943a 	slli	r4,fp,16
   193d8:	8520983a 	sll	r16,r16,r20
   193dc:	2806d43a 	srli	r3,r5,16
   193e0:	1906b03a 	or	r3,r3,r4
   193e4:	1880042e 	bgeu	r3,r2,193f8 <__umoddi3+0x374>
   193e8:	1d47883a 	add	r3,r3,r21
   193ec:	893fffc4 	addi	r4,r17,-1
   193f0:	1d40892e 	bgeu	r3,r21,19618 <__umoddi3+0x594>
   193f4:	2023883a 	mov	r17,r4
   193f8:	18b9c83a 	sub	fp,r3,r2
   193fc:	b00b883a 	mov	r5,r22
   19400:	e009883a 	mov	r4,fp
   19404:	0010d500 	call	10d50 <__umodsi3>
   19408:	b00b883a 	mov	r5,r22
   1940c:	e009883a 	mov	r4,fp
   19410:	d8800215 	stw	r2,8(sp)
   19414:	0010cec0 	call	10cec <__udivsi3>
   19418:	100b883a 	mov	r5,r2
   1941c:	b809883a 	mov	r4,r23
   19420:	102d883a 	mov	r22,r2
   19424:	00196480 	call	19648 <__mulsi3>
   19428:	d9800217 	ldw	r6,8(sp)
   1942c:	d8c00017 	ldw	r3,0(sp)
   19430:	300c943a 	slli	r6,r6,16
   19434:	1a3fffcc 	andi	r8,r3,65535
   19438:	4190b03a 	or	r8,r8,r6
   1943c:	4080042e 	bgeu	r8,r2,19450 <__umoddi3+0x3cc>
   19440:	4551883a 	add	r8,r8,r21
   19444:	b0ffffc4 	addi	r3,r22,-1
   19448:	45406f2e 	bgeu	r8,r21,19608 <__umoddi3+0x584>
   1944c:	182d883a 	mov	r22,r3
   19450:	880e943a 	slli	r7,r17,16
   19454:	9006d43a 	srli	r3,r18,16
   19458:	91bfffcc 	andi	r6,r18,65535
   1945c:	3dacb03a 	or	r22,r7,r22
   19460:	b02ed43a 	srli	r23,r22,16
   19464:	b5bfffcc 	andi	r22,r22,65535
   19468:	300b883a 	mov	r5,r6
   1946c:	b009883a 	mov	r4,r22
   19470:	40a3c83a 	sub	r17,r8,r2
   19474:	d8c00115 	stw	r3,4(sp)
   19478:	d9800215 	stw	r6,8(sp)
   1947c:	00196480 	call	19648 <__mulsi3>
   19480:	d9800217 	ldw	r6,8(sp)
   19484:	b809883a 	mov	r4,r23
   19488:	1039883a 	mov	fp,r2
   1948c:	300b883a 	mov	r5,r6
   19490:	00196480 	call	19648 <__mulsi3>
   19494:	d8c00117 	ldw	r3,4(sp)
   19498:	b809883a 	mov	r4,r23
   1949c:	d8800215 	stw	r2,8(sp)
   194a0:	180b883a 	mov	r5,r3
   194a4:	00196480 	call	19648 <__mulsi3>
   194a8:	d8c00117 	ldw	r3,4(sp)
   194ac:	b009883a 	mov	r4,r22
   194b0:	102f883a 	mov	r23,r2
   194b4:	180b883a 	mov	r5,r3
   194b8:	00196480 	call	19648 <__mulsi3>
   194bc:	d9800217 	ldw	r6,8(sp)
   194c0:	e006d43a 	srli	r3,fp,16
   194c4:	1185883a 	add	r2,r2,r6
   194c8:	1885883a 	add	r2,r3,r2
   194cc:	1180022e 	bgeu	r2,r6,194d8 <__umoddi3+0x454>
   194d0:	00c00074 	movhi	r3,1
   194d4:	b8ef883a 	add	r23,r23,r3
   194d8:	1006d43a 	srli	r3,r2,16
   194dc:	1004943a 	slli	r2,r2,16
   194e0:	e73fffcc 	andi	fp,fp,65535
   194e4:	1dc7883a 	add	r3,r3,r23
   194e8:	1739883a 	add	fp,r2,fp
   194ec:	88c03a36 	bltu	r17,r3,195d8 <__umoddi3+0x554>
   194f0:	88c05126 	beq	r17,r3,19638 <__umoddi3+0x5b4>
   194f4:	88c9c83a 	sub	r4,r17,r3
   194f8:	e00f883a 	mov	r7,fp
   194fc:	81cfc83a 	sub	r7,r16,r7
   19500:	81c7803a 	cmpltu	r3,r16,r7
   19504:	20c7c83a 	sub	r3,r4,r3
   19508:	1cc4983a 	sll	r2,r3,r19
   1950c:	3d0ed83a 	srl	r7,r7,r20
   19510:	1d06d83a 	srl	r3,r3,r20
   19514:	11c4b03a 	or	r2,r2,r7
   19518:	003f7c06 	br	1930c <_gp+0xffff40b0>
   1951c:	9ca6983a 	sll	r19,r19,r18
   19520:	88f8d83a 	srl	fp,r17,r3
   19524:	80c4d83a 	srl	r2,r16,r3
   19528:	982cd43a 	srli	r22,r19,16
   1952c:	8ca2983a 	sll	r17,r17,r18
   19530:	e009883a 	mov	r4,fp
   19534:	b00b883a 	mov	r5,r22
   19538:	146ab03a 	or	r21,r2,r17
   1953c:	0010d500 	call	10d50 <__umodsi3>
   19540:	b00b883a 	mov	r5,r22
   19544:	e009883a 	mov	r4,fp
   19548:	1029883a 	mov	r20,r2
   1954c:	9dffffcc 	andi	r23,r19,65535
   19550:	0010cec0 	call	10cec <__udivsi3>
   19554:	b809883a 	mov	r4,r23
   19558:	100b883a 	mov	r5,r2
   1955c:	00196480 	call	19648 <__mulsi3>
   19560:	a008943a 	slli	r4,r20,16
   19564:	a806d43a 	srli	r3,r21,16
   19568:	84a8983a 	sll	r20,r16,r18
   1956c:	1906b03a 	or	r3,r3,r4
   19570:	1880042e 	bgeu	r3,r2,19584 <__umoddi3+0x500>
   19574:	1cc7883a 	add	r3,r3,r19
   19578:	1cc00236 	bltu	r3,r19,19584 <__umoddi3+0x500>
   1957c:	1880012e 	bgeu	r3,r2,19584 <__umoddi3+0x500>
   19580:	1cc7883a 	add	r3,r3,r19
   19584:	18a3c83a 	sub	r17,r3,r2
   19588:	b00b883a 	mov	r5,r22
   1958c:	8809883a 	mov	r4,r17
   19590:	0010d500 	call	10d50 <__umodsi3>
   19594:	b00b883a 	mov	r5,r22
   19598:	8809883a 	mov	r4,r17
   1959c:	1021883a 	mov	r16,r2
   195a0:	0010cec0 	call	10cec <__udivsi3>
   195a4:	100b883a 	mov	r5,r2
   195a8:	b809883a 	mov	r4,r23
   195ac:	8020943a 	slli	r16,r16,16
   195b0:	00196480 	call	19648 <__mulsi3>
   195b4:	a8ffffcc 	andi	r3,r21,65535
   195b8:	1c06b03a 	or	r3,r3,r16
   195bc:	1880042e 	bgeu	r3,r2,195d0 <__umoddi3+0x54c>
   195c0:	1cc7883a 	add	r3,r3,r19
   195c4:	1cc00236 	bltu	r3,r19,195d0 <__umoddi3+0x54c>
   195c8:	1880012e 	bgeu	r3,r2,195d0 <__umoddi3+0x54c>
   195cc:	1cc7883a 	add	r3,r3,r19
   195d0:	18a3c83a 	sub	r17,r3,r2
   195d4:	003f2906 	br	1927c <_gp+0xffff4020>
   195d8:	e48fc83a 	sub	r7,fp,r18
   195dc:	1d49c83a 	sub	r4,r3,r21
   195e0:	e1f9803a 	cmpltu	fp,fp,r7
   195e4:	2739c83a 	sub	fp,r4,fp
   195e8:	8f09c83a 	sub	r4,r17,fp
   195ec:	003fc306 	br	194fc <_gp+0xffff42a0>
   195f0:	01000604 	movi	r4,24
   195f4:	003ef906 	br	191dc <_gp+0xffff3f80>
   195f8:	00800604 	movi	r2,24
   195fc:	003f1306 	br	1924c <_gp+0xffff3ff0>
   19600:	01000604 	movi	r4,24
   19604:	003eb606 	br	190e0 <_gp+0xffff3e84>
   19608:	40bf902e 	bgeu	r8,r2,1944c <_gp+0xffff41f0>
   1960c:	b5bfff84 	addi	r22,r22,-2
   19610:	4551883a 	add	r8,r8,r21
   19614:	003f8e06 	br	19450 <_gp+0xffff41f4>
   19618:	18bf762e 	bgeu	r3,r2,193f4 <_gp+0xffff4198>
   1961c:	8c7fff84 	addi	r17,r17,-2
   19620:	1d47883a 	add	r3,r3,r21
   19624:	003f7406 	br	193f8 <_gp+0xffff419c>
   19628:	1cc7883a 	add	r3,r3,r19
   1962c:	003ecd06 	br	19164 <_gp+0xffff3f08>
   19630:	8005883a 	mov	r2,r16
   19634:	003ef806 	br	19218 <_gp+0xffff3fbc>
   19638:	873fe736 	bltu	r16,fp,195d8 <_gp+0xffff437c>
   1963c:	e00f883a 	mov	r7,fp
   19640:	0009883a 	mov	r4,zero
   19644:	003fad06 	br	194fc <_gp+0xffff42a0>

00019648 <__mulsi3>:
   19648:	0005883a 	mov	r2,zero
   1964c:	20000726 	beq	r4,zero,1966c <__mulsi3+0x24>
   19650:	20c0004c 	andi	r3,r4,1
   19654:	2008d07a 	srli	r4,r4,1
   19658:	18000126 	beq	r3,zero,19660 <__mulsi3+0x18>
   1965c:	1145883a 	add	r2,r2,r5
   19660:	294b883a 	add	r5,r5,r5
   19664:	203ffa1e 	bne	r4,zero,19650 <_gp+0xffff43f4>
   19668:	f800283a 	ret
   1966c:	f800283a 	ret

00019670 <__adddf3>:
   19670:	02c00434 	movhi	r11,16
   19674:	5affffc4 	addi	r11,r11,-1
   19678:	2806d7fa 	srli	r3,r5,31
   1967c:	2ad4703a 	and	r10,r5,r11
   19680:	3ad2703a 	and	r9,r7,r11
   19684:	3804d53a 	srli	r2,r7,20
   19688:	3018d77a 	srli	r12,r6,29
   1968c:	280ad53a 	srli	r5,r5,20
   19690:	501490fa 	slli	r10,r10,3
   19694:	2010d77a 	srli	r8,r4,29
   19698:	481290fa 	slli	r9,r9,3
   1969c:	380ed7fa 	srli	r7,r7,31
   196a0:	defffb04 	addi	sp,sp,-20
   196a4:	dc800215 	stw	r18,8(sp)
   196a8:	dc400115 	stw	r17,4(sp)
   196ac:	dc000015 	stw	r16,0(sp)
   196b0:	dfc00415 	stw	ra,16(sp)
   196b4:	dcc00315 	stw	r19,12(sp)
   196b8:	1c803fcc 	andi	r18,r3,255
   196bc:	2c01ffcc 	andi	r16,r5,2047
   196c0:	5210b03a 	or	r8,r10,r8
   196c4:	202290fa 	slli	r17,r4,3
   196c8:	1081ffcc 	andi	r2,r2,2047
   196cc:	4b12b03a 	or	r9,r9,r12
   196d0:	300c90fa 	slli	r6,r6,3
   196d4:	91c07526 	beq	r18,r7,198ac <__adddf3+0x23c>
   196d8:	8087c83a 	sub	r3,r16,r2
   196dc:	00c0ab0e 	bge	zero,r3,1998c <__adddf3+0x31c>
   196e0:	10002a1e 	bne	r2,zero,1978c <__adddf3+0x11c>
   196e4:	4984b03a 	or	r2,r9,r6
   196e8:	1000961e 	bne	r2,zero,19944 <__adddf3+0x2d4>
   196ec:	888001cc 	andi	r2,r17,7
   196f0:	10000726 	beq	r2,zero,19710 <__adddf3+0xa0>
   196f4:	888003cc 	andi	r2,r17,15
   196f8:	00c00104 	movi	r3,4
   196fc:	10c00426 	beq	r2,r3,19710 <__adddf3+0xa0>
   19700:	88c7883a 	add	r3,r17,r3
   19704:	1c63803a 	cmpltu	r17,r3,r17
   19708:	4451883a 	add	r8,r8,r17
   1970c:	1823883a 	mov	r17,r3
   19710:	4080202c 	andhi	r2,r8,128
   19714:	10005926 	beq	r2,zero,1987c <__adddf3+0x20c>
   19718:	84000044 	addi	r16,r16,1
   1971c:	0081ffc4 	movi	r2,2047
   19720:	8080ba26 	beq	r16,r2,19a0c <__adddf3+0x39c>
   19724:	00bfe034 	movhi	r2,65408
   19728:	10bfffc4 	addi	r2,r2,-1
   1972c:	4090703a 	and	r8,r8,r2
   19730:	4004977a 	slli	r2,r8,29
   19734:	4010927a 	slli	r8,r8,9
   19738:	8822d0fa 	srli	r17,r17,3
   1973c:	8401ffcc 	andi	r16,r16,2047
   19740:	4010d33a 	srli	r8,r8,12
   19744:	9007883a 	mov	r3,r18
   19748:	1444b03a 	or	r2,r2,r17
   1974c:	8401ffcc 	andi	r16,r16,2047
   19750:	8020953a 	slli	r16,r16,20
   19754:	18c03fcc 	andi	r3,r3,255
   19758:	01000434 	movhi	r4,16
   1975c:	213fffc4 	addi	r4,r4,-1
   19760:	180697fa 	slli	r3,r3,31
   19764:	4110703a 	and	r8,r8,r4
   19768:	4410b03a 	or	r8,r8,r16
   1976c:	40c6b03a 	or	r3,r8,r3
   19770:	dfc00417 	ldw	ra,16(sp)
   19774:	dcc00317 	ldw	r19,12(sp)
   19778:	dc800217 	ldw	r18,8(sp)
   1977c:	dc400117 	ldw	r17,4(sp)
   19780:	dc000017 	ldw	r16,0(sp)
   19784:	dec00504 	addi	sp,sp,20
   19788:	f800283a 	ret
   1978c:	0081ffc4 	movi	r2,2047
   19790:	80bfd626 	beq	r16,r2,196ec <_gp+0xffff4490>
   19794:	4a402034 	orhi	r9,r9,128
   19798:	00800e04 	movi	r2,56
   1979c:	10c09f16 	blt	r2,r3,19a1c <__adddf3+0x3ac>
   197a0:	008007c4 	movi	r2,31
   197a4:	10c0c216 	blt	r2,r3,19ab0 <__adddf3+0x440>
   197a8:	00800804 	movi	r2,32
   197ac:	10c5c83a 	sub	r2,r2,r3
   197b0:	488a983a 	sll	r5,r9,r2
   197b4:	30c8d83a 	srl	r4,r6,r3
   197b8:	3084983a 	sll	r2,r6,r2
   197bc:	48c6d83a 	srl	r3,r9,r3
   197c0:	290cb03a 	or	r6,r5,r4
   197c4:	1004c03a 	cmpne	r2,r2,zero
   197c8:	308cb03a 	or	r6,r6,r2
   197cc:	898dc83a 	sub	r6,r17,r6
   197d0:	89a3803a 	cmpltu	r17,r17,r6
   197d4:	40d1c83a 	sub	r8,r8,r3
   197d8:	4451c83a 	sub	r8,r8,r17
   197dc:	3023883a 	mov	r17,r6
   197e0:	4080202c 	andhi	r2,r8,128
   197e4:	10002326 	beq	r2,zero,19874 <__adddf3+0x204>
   197e8:	04c02034 	movhi	r19,128
   197ec:	9cffffc4 	addi	r19,r19,-1
   197f0:	44e6703a 	and	r19,r8,r19
   197f4:	98007626 	beq	r19,zero,199d0 <__adddf3+0x360>
   197f8:	9809883a 	mov	r4,r19
   197fc:	001beb00 	call	1beb0 <__clzsi2>
   19800:	10fffe04 	addi	r3,r2,-8
   19804:	010007c4 	movi	r4,31
   19808:	20c07716 	blt	r4,r3,199e8 <__adddf3+0x378>
   1980c:	00800804 	movi	r2,32
   19810:	10c5c83a 	sub	r2,r2,r3
   19814:	8884d83a 	srl	r2,r17,r2
   19818:	98d0983a 	sll	r8,r19,r3
   1981c:	88e2983a 	sll	r17,r17,r3
   19820:	1204b03a 	or	r2,r2,r8
   19824:	1c007416 	blt	r3,r16,199f8 <__adddf3+0x388>
   19828:	1c21c83a 	sub	r16,r3,r16
   1982c:	82000044 	addi	r8,r16,1
   19830:	00c007c4 	movi	r3,31
   19834:	1a009116 	blt	r3,r8,19a7c <__adddf3+0x40c>
   19838:	00c00804 	movi	r3,32
   1983c:	1a07c83a 	sub	r3,r3,r8
   19840:	8a08d83a 	srl	r4,r17,r8
   19844:	88e2983a 	sll	r17,r17,r3
   19848:	10c6983a 	sll	r3,r2,r3
   1984c:	1210d83a 	srl	r8,r2,r8
   19850:	8804c03a 	cmpne	r2,r17,zero
   19854:	1906b03a 	or	r3,r3,r4
   19858:	18a2b03a 	or	r17,r3,r2
   1985c:	0021883a 	mov	r16,zero
   19860:	003fa206 	br	196ec <_gp+0xffff4490>
   19864:	1890b03a 	or	r8,r3,r2
   19868:	40017d26 	beq	r8,zero,19e60 <__adddf3+0x7f0>
   1986c:	1011883a 	mov	r8,r2
   19870:	1823883a 	mov	r17,r3
   19874:	888001cc 	andi	r2,r17,7
   19878:	103f9e1e 	bne	r2,zero,196f4 <_gp+0xffff4498>
   1987c:	4004977a 	slli	r2,r8,29
   19880:	8822d0fa 	srli	r17,r17,3
   19884:	4010d0fa 	srli	r8,r8,3
   19888:	9007883a 	mov	r3,r18
   1988c:	1444b03a 	or	r2,r2,r17
   19890:	0101ffc4 	movi	r4,2047
   19894:	81002426 	beq	r16,r4,19928 <__adddf3+0x2b8>
   19898:	8120703a 	and	r16,r16,r4
   1989c:	01000434 	movhi	r4,16
   198a0:	213fffc4 	addi	r4,r4,-1
   198a4:	4110703a 	and	r8,r8,r4
   198a8:	003fa806 	br	1974c <_gp+0xffff44f0>
   198ac:	8089c83a 	sub	r4,r16,r2
   198b0:	01005e0e 	bge	zero,r4,19a2c <__adddf3+0x3bc>
   198b4:	10002b26 	beq	r2,zero,19964 <__adddf3+0x2f4>
   198b8:	0081ffc4 	movi	r2,2047
   198bc:	80bf8b26 	beq	r16,r2,196ec <_gp+0xffff4490>
   198c0:	4a402034 	orhi	r9,r9,128
   198c4:	00800e04 	movi	r2,56
   198c8:	1100a40e 	bge	r2,r4,19b5c <__adddf3+0x4ec>
   198cc:	498cb03a 	or	r6,r9,r6
   198d0:	300ac03a 	cmpne	r5,r6,zero
   198d4:	0013883a 	mov	r9,zero
   198d8:	2c4b883a 	add	r5,r5,r17
   198dc:	2c63803a 	cmpltu	r17,r5,r17
   198e0:	4a11883a 	add	r8,r9,r8
   198e4:	8a11883a 	add	r8,r17,r8
   198e8:	2823883a 	mov	r17,r5
   198ec:	4080202c 	andhi	r2,r8,128
   198f0:	103fe026 	beq	r2,zero,19874 <_gp+0xffff4618>
   198f4:	84000044 	addi	r16,r16,1
   198f8:	0081ffc4 	movi	r2,2047
   198fc:	8080d226 	beq	r16,r2,19c48 <__adddf3+0x5d8>
   19900:	00bfe034 	movhi	r2,65408
   19904:	10bfffc4 	addi	r2,r2,-1
   19908:	4090703a 	and	r8,r8,r2
   1990c:	880ad07a 	srli	r5,r17,1
   19910:	400897fa 	slli	r4,r8,31
   19914:	88c0004c 	andi	r3,r17,1
   19918:	28e2b03a 	or	r17,r5,r3
   1991c:	4010d07a 	srli	r8,r8,1
   19920:	2462b03a 	or	r17,r4,r17
   19924:	003f7106 	br	196ec <_gp+0xffff4490>
   19928:	4088b03a 	or	r4,r8,r2
   1992c:	20014526 	beq	r4,zero,19e44 <__adddf3+0x7d4>
   19930:	01000434 	movhi	r4,16
   19934:	42000234 	orhi	r8,r8,8
   19938:	213fffc4 	addi	r4,r4,-1
   1993c:	4110703a 	and	r8,r8,r4
   19940:	003f8206 	br	1974c <_gp+0xffff44f0>
   19944:	18ffffc4 	addi	r3,r3,-1
   19948:	1800491e 	bne	r3,zero,19a70 <__adddf3+0x400>
   1994c:	898bc83a 	sub	r5,r17,r6
   19950:	8963803a 	cmpltu	r17,r17,r5
   19954:	4251c83a 	sub	r8,r8,r9
   19958:	4451c83a 	sub	r8,r8,r17
   1995c:	2823883a 	mov	r17,r5
   19960:	003f9f06 	br	197e0 <_gp+0xffff4584>
   19964:	4984b03a 	or	r2,r9,r6
   19968:	103f6026 	beq	r2,zero,196ec <_gp+0xffff4490>
   1996c:	213fffc4 	addi	r4,r4,-1
   19970:	2000931e 	bne	r4,zero,19bc0 <__adddf3+0x550>
   19974:	898d883a 	add	r6,r17,r6
   19978:	3463803a 	cmpltu	r17,r6,r17
   1997c:	4251883a 	add	r8,r8,r9
   19980:	8a11883a 	add	r8,r17,r8
   19984:	3023883a 	mov	r17,r6
   19988:	003fd806 	br	198ec <_gp+0xffff4690>
   1998c:	1800541e 	bne	r3,zero,19ae0 <__adddf3+0x470>
   19990:	80800044 	addi	r2,r16,1
   19994:	1081ffcc 	andi	r2,r2,2047
   19998:	00c00044 	movi	r3,1
   1999c:	1880a00e 	bge	r3,r2,19c20 <__adddf3+0x5b0>
   199a0:	8989c83a 	sub	r4,r17,r6
   199a4:	8905803a 	cmpltu	r2,r17,r4
   199a8:	4267c83a 	sub	r19,r8,r9
   199ac:	98a7c83a 	sub	r19,r19,r2
   199b0:	9880202c 	andhi	r2,r19,128
   199b4:	10006326 	beq	r2,zero,19b44 <__adddf3+0x4d4>
   199b8:	3463c83a 	sub	r17,r6,r17
   199bc:	4a07c83a 	sub	r3,r9,r8
   199c0:	344d803a 	cmpltu	r6,r6,r17
   199c4:	19a7c83a 	sub	r19,r3,r6
   199c8:	3825883a 	mov	r18,r7
   199cc:	983f8a1e 	bne	r19,zero,197f8 <_gp+0xffff459c>
   199d0:	8809883a 	mov	r4,r17
   199d4:	001beb00 	call	1beb0 <__clzsi2>
   199d8:	10800804 	addi	r2,r2,32
   199dc:	10fffe04 	addi	r3,r2,-8
   199e0:	010007c4 	movi	r4,31
   199e4:	20ff890e 	bge	r4,r3,1980c <_gp+0xffff45b0>
   199e8:	10bff604 	addi	r2,r2,-40
   199ec:	8884983a 	sll	r2,r17,r2
   199f0:	0023883a 	mov	r17,zero
   199f4:	1c3f8c0e 	bge	r3,r16,19828 <_gp+0xffff45cc>
   199f8:	023fe034 	movhi	r8,65408
   199fc:	423fffc4 	addi	r8,r8,-1
   19a00:	80e1c83a 	sub	r16,r16,r3
   19a04:	1210703a 	and	r8,r2,r8
   19a08:	003f3806 	br	196ec <_gp+0xffff4490>
   19a0c:	9007883a 	mov	r3,r18
   19a10:	0011883a 	mov	r8,zero
   19a14:	0005883a 	mov	r2,zero
   19a18:	003f4c06 	br	1974c <_gp+0xffff44f0>
   19a1c:	498cb03a 	or	r6,r9,r6
   19a20:	300cc03a 	cmpne	r6,r6,zero
   19a24:	0007883a 	mov	r3,zero
   19a28:	003f6806 	br	197cc <_gp+0xffff4570>
   19a2c:	20009c1e 	bne	r4,zero,19ca0 <__adddf3+0x630>
   19a30:	80800044 	addi	r2,r16,1
   19a34:	1141ffcc 	andi	r5,r2,2047
   19a38:	01000044 	movi	r4,1
   19a3c:	2140670e 	bge	r4,r5,19bdc <__adddf3+0x56c>
   19a40:	0101ffc4 	movi	r4,2047
   19a44:	11007f26 	beq	r2,r4,19c44 <__adddf3+0x5d4>
   19a48:	898d883a 	add	r6,r17,r6
   19a4c:	4247883a 	add	r3,r8,r9
   19a50:	3451803a 	cmpltu	r8,r6,r17
   19a54:	40d1883a 	add	r8,r8,r3
   19a58:	402297fa 	slli	r17,r8,31
   19a5c:	300cd07a 	srli	r6,r6,1
   19a60:	4010d07a 	srli	r8,r8,1
   19a64:	1021883a 	mov	r16,r2
   19a68:	89a2b03a 	or	r17,r17,r6
   19a6c:	003f1f06 	br	196ec <_gp+0xffff4490>
   19a70:	0081ffc4 	movi	r2,2047
   19a74:	80bf481e 	bne	r16,r2,19798 <_gp+0xffff453c>
   19a78:	003f1c06 	br	196ec <_gp+0xffff4490>
   19a7c:	843ff844 	addi	r16,r16,-31
   19a80:	01000804 	movi	r4,32
   19a84:	1406d83a 	srl	r3,r2,r16
   19a88:	41005026 	beq	r8,r4,19bcc <__adddf3+0x55c>
   19a8c:	01001004 	movi	r4,64
   19a90:	2211c83a 	sub	r8,r4,r8
   19a94:	1204983a 	sll	r2,r2,r8
   19a98:	88a2b03a 	or	r17,r17,r2
   19a9c:	8822c03a 	cmpne	r17,r17,zero
   19aa0:	1c62b03a 	or	r17,r3,r17
   19aa4:	0011883a 	mov	r8,zero
   19aa8:	0021883a 	mov	r16,zero
   19aac:	003f7106 	br	19874 <_gp+0xffff4618>
   19ab0:	193ff804 	addi	r4,r3,-32
   19ab4:	00800804 	movi	r2,32
   19ab8:	4908d83a 	srl	r4,r9,r4
   19abc:	18804526 	beq	r3,r2,19bd4 <__adddf3+0x564>
   19ac0:	00801004 	movi	r2,64
   19ac4:	10c5c83a 	sub	r2,r2,r3
   19ac8:	4886983a 	sll	r3,r9,r2
   19acc:	198cb03a 	or	r6,r3,r6
   19ad0:	300cc03a 	cmpne	r6,r6,zero
   19ad4:	218cb03a 	or	r6,r4,r6
   19ad8:	0007883a 	mov	r3,zero
   19adc:	003f3b06 	br	197cc <_gp+0xffff4570>
   19ae0:	80002a26 	beq	r16,zero,19b8c <__adddf3+0x51c>
   19ae4:	0101ffc4 	movi	r4,2047
   19ae8:	11006826 	beq	r2,r4,19c8c <__adddf3+0x61c>
   19aec:	00c7c83a 	sub	r3,zero,r3
   19af0:	42002034 	orhi	r8,r8,128
   19af4:	01000e04 	movi	r4,56
   19af8:	20c07c16 	blt	r4,r3,19cec <__adddf3+0x67c>
   19afc:	010007c4 	movi	r4,31
   19b00:	20c0da16 	blt	r4,r3,19e6c <__adddf3+0x7fc>
   19b04:	01000804 	movi	r4,32
   19b08:	20c9c83a 	sub	r4,r4,r3
   19b0c:	4114983a 	sll	r10,r8,r4
   19b10:	88cad83a 	srl	r5,r17,r3
   19b14:	8908983a 	sll	r4,r17,r4
   19b18:	40c6d83a 	srl	r3,r8,r3
   19b1c:	5162b03a 	or	r17,r10,r5
   19b20:	2008c03a 	cmpne	r4,r4,zero
   19b24:	8922b03a 	or	r17,r17,r4
   19b28:	3463c83a 	sub	r17,r6,r17
   19b2c:	48c7c83a 	sub	r3,r9,r3
   19b30:	344d803a 	cmpltu	r6,r6,r17
   19b34:	1991c83a 	sub	r8,r3,r6
   19b38:	1021883a 	mov	r16,r2
   19b3c:	3825883a 	mov	r18,r7
   19b40:	003f2706 	br	197e0 <_gp+0xffff4584>
   19b44:	24d0b03a 	or	r8,r4,r19
   19b48:	40001b1e 	bne	r8,zero,19bb8 <__adddf3+0x548>
   19b4c:	0005883a 	mov	r2,zero
   19b50:	0007883a 	mov	r3,zero
   19b54:	0021883a 	mov	r16,zero
   19b58:	003f4d06 	br	19890 <_gp+0xffff4634>
   19b5c:	008007c4 	movi	r2,31
   19b60:	11003c16 	blt	r2,r4,19c54 <__adddf3+0x5e4>
   19b64:	00800804 	movi	r2,32
   19b68:	1105c83a 	sub	r2,r2,r4
   19b6c:	488e983a 	sll	r7,r9,r2
   19b70:	310ad83a 	srl	r5,r6,r4
   19b74:	3084983a 	sll	r2,r6,r2
   19b78:	4912d83a 	srl	r9,r9,r4
   19b7c:	394ab03a 	or	r5,r7,r5
   19b80:	1004c03a 	cmpne	r2,r2,zero
   19b84:	288ab03a 	or	r5,r5,r2
   19b88:	003f5306 	br	198d8 <_gp+0xffff467c>
   19b8c:	4448b03a 	or	r4,r8,r17
   19b90:	20003e26 	beq	r4,zero,19c8c <__adddf3+0x61c>
   19b94:	00c6303a 	nor	r3,zero,r3
   19b98:	18003a1e 	bne	r3,zero,19c84 <__adddf3+0x614>
   19b9c:	3463c83a 	sub	r17,r6,r17
   19ba0:	4a07c83a 	sub	r3,r9,r8
   19ba4:	344d803a 	cmpltu	r6,r6,r17
   19ba8:	1991c83a 	sub	r8,r3,r6
   19bac:	1021883a 	mov	r16,r2
   19bb0:	3825883a 	mov	r18,r7
   19bb4:	003f0a06 	br	197e0 <_gp+0xffff4584>
   19bb8:	2023883a 	mov	r17,r4
   19bbc:	003f0d06 	br	197f4 <_gp+0xffff4598>
   19bc0:	0081ffc4 	movi	r2,2047
   19bc4:	80bf3f1e 	bne	r16,r2,198c4 <_gp+0xffff4668>
   19bc8:	003ec806 	br	196ec <_gp+0xffff4490>
   19bcc:	0005883a 	mov	r2,zero
   19bd0:	003fb106 	br	19a98 <_gp+0xffff483c>
   19bd4:	0007883a 	mov	r3,zero
   19bd8:	003fbc06 	br	19acc <_gp+0xffff4870>
   19bdc:	4444b03a 	or	r2,r8,r17
   19be0:	8000871e 	bne	r16,zero,19e00 <__adddf3+0x790>
   19be4:	1000ba26 	beq	r2,zero,19ed0 <__adddf3+0x860>
   19be8:	4984b03a 	or	r2,r9,r6
   19bec:	103ebf26 	beq	r2,zero,196ec <_gp+0xffff4490>
   19bf0:	8985883a 	add	r2,r17,r6
   19bf4:	4247883a 	add	r3,r8,r9
   19bf8:	1451803a 	cmpltu	r8,r2,r17
   19bfc:	40d1883a 	add	r8,r8,r3
   19c00:	40c0202c 	andhi	r3,r8,128
   19c04:	1023883a 	mov	r17,r2
   19c08:	183f1a26 	beq	r3,zero,19874 <_gp+0xffff4618>
   19c0c:	00bfe034 	movhi	r2,65408
   19c10:	10bfffc4 	addi	r2,r2,-1
   19c14:	2021883a 	mov	r16,r4
   19c18:	4090703a 	and	r8,r8,r2
   19c1c:	003eb306 	br	196ec <_gp+0xffff4490>
   19c20:	4444b03a 	or	r2,r8,r17
   19c24:	8000291e 	bne	r16,zero,19ccc <__adddf3+0x65c>
   19c28:	10004b1e 	bne	r2,zero,19d58 <__adddf3+0x6e8>
   19c2c:	4990b03a 	or	r8,r9,r6
   19c30:	40008b26 	beq	r8,zero,19e60 <__adddf3+0x7f0>
   19c34:	4811883a 	mov	r8,r9
   19c38:	3023883a 	mov	r17,r6
   19c3c:	3825883a 	mov	r18,r7
   19c40:	003eaa06 	br	196ec <_gp+0xffff4490>
   19c44:	1021883a 	mov	r16,r2
   19c48:	0011883a 	mov	r8,zero
   19c4c:	0005883a 	mov	r2,zero
   19c50:	003f0f06 	br	19890 <_gp+0xffff4634>
   19c54:	217ff804 	addi	r5,r4,-32
   19c58:	00800804 	movi	r2,32
   19c5c:	494ad83a 	srl	r5,r9,r5
   19c60:	20807d26 	beq	r4,r2,19e58 <__adddf3+0x7e8>
   19c64:	00801004 	movi	r2,64
   19c68:	1109c83a 	sub	r4,r2,r4
   19c6c:	4912983a 	sll	r9,r9,r4
   19c70:	498cb03a 	or	r6,r9,r6
   19c74:	300cc03a 	cmpne	r6,r6,zero
   19c78:	298ab03a 	or	r5,r5,r6
   19c7c:	0013883a 	mov	r9,zero
   19c80:	003f1506 	br	198d8 <_gp+0xffff467c>
   19c84:	0101ffc4 	movi	r4,2047
   19c88:	113f9a1e 	bne	r2,r4,19af4 <_gp+0xffff4898>
   19c8c:	4811883a 	mov	r8,r9
   19c90:	3023883a 	mov	r17,r6
   19c94:	1021883a 	mov	r16,r2
   19c98:	3825883a 	mov	r18,r7
   19c9c:	003e9306 	br	196ec <_gp+0xffff4490>
   19ca0:	8000161e 	bne	r16,zero,19cfc <__adddf3+0x68c>
   19ca4:	444ab03a 	or	r5,r8,r17
   19ca8:	28005126 	beq	r5,zero,19df0 <__adddf3+0x780>
   19cac:	0108303a 	nor	r4,zero,r4
   19cb0:	20004d1e 	bne	r4,zero,19de8 <__adddf3+0x778>
   19cb4:	89a3883a 	add	r17,r17,r6
   19cb8:	4253883a 	add	r9,r8,r9
   19cbc:	898d803a 	cmpltu	r6,r17,r6
   19cc0:	3251883a 	add	r8,r6,r9
   19cc4:	1021883a 	mov	r16,r2
   19cc8:	003f0806 	br	198ec <_gp+0xffff4690>
   19ccc:	1000301e 	bne	r2,zero,19d90 <__adddf3+0x720>
   19cd0:	4984b03a 	or	r2,r9,r6
   19cd4:	10007126 	beq	r2,zero,19e9c <__adddf3+0x82c>
   19cd8:	4811883a 	mov	r8,r9
   19cdc:	3023883a 	mov	r17,r6
   19ce0:	3825883a 	mov	r18,r7
   19ce4:	0401ffc4 	movi	r16,2047
   19ce8:	003e8006 	br	196ec <_gp+0xffff4490>
   19cec:	4462b03a 	or	r17,r8,r17
   19cf0:	8822c03a 	cmpne	r17,r17,zero
   19cf4:	0007883a 	mov	r3,zero
   19cf8:	003f8b06 	br	19b28 <_gp+0xffff48cc>
   19cfc:	0141ffc4 	movi	r5,2047
   19d00:	11403b26 	beq	r2,r5,19df0 <__adddf3+0x780>
   19d04:	0109c83a 	sub	r4,zero,r4
   19d08:	42002034 	orhi	r8,r8,128
   19d0c:	01400e04 	movi	r5,56
   19d10:	29006716 	blt	r5,r4,19eb0 <__adddf3+0x840>
   19d14:	014007c4 	movi	r5,31
   19d18:	29007016 	blt	r5,r4,19edc <__adddf3+0x86c>
   19d1c:	01400804 	movi	r5,32
   19d20:	290bc83a 	sub	r5,r5,r4
   19d24:	4154983a 	sll	r10,r8,r5
   19d28:	890ed83a 	srl	r7,r17,r4
   19d2c:	894a983a 	sll	r5,r17,r5
   19d30:	4108d83a 	srl	r4,r8,r4
   19d34:	51e2b03a 	or	r17,r10,r7
   19d38:	280ac03a 	cmpne	r5,r5,zero
   19d3c:	8962b03a 	or	r17,r17,r5
   19d40:	89a3883a 	add	r17,r17,r6
   19d44:	2253883a 	add	r9,r4,r9
   19d48:	898d803a 	cmpltu	r6,r17,r6
   19d4c:	3251883a 	add	r8,r6,r9
   19d50:	1021883a 	mov	r16,r2
   19d54:	003ee506 	br	198ec <_gp+0xffff4690>
   19d58:	4984b03a 	or	r2,r9,r6
   19d5c:	103e6326 	beq	r2,zero,196ec <_gp+0xffff4490>
   19d60:	8987c83a 	sub	r3,r17,r6
   19d64:	88c9803a 	cmpltu	r4,r17,r3
   19d68:	4245c83a 	sub	r2,r8,r9
   19d6c:	1105c83a 	sub	r2,r2,r4
   19d70:	1100202c 	andhi	r4,r2,128
   19d74:	203ebb26 	beq	r4,zero,19864 <_gp+0xffff4608>
   19d78:	3463c83a 	sub	r17,r6,r17
   19d7c:	4a07c83a 	sub	r3,r9,r8
   19d80:	344d803a 	cmpltu	r6,r6,r17
   19d84:	1991c83a 	sub	r8,r3,r6
   19d88:	3825883a 	mov	r18,r7
   19d8c:	003e5706 	br	196ec <_gp+0xffff4490>
   19d90:	4984b03a 	or	r2,r9,r6
   19d94:	10002e26 	beq	r2,zero,19e50 <__adddf3+0x7e0>
   19d98:	4004d0fa 	srli	r2,r8,3
   19d9c:	8822d0fa 	srli	r17,r17,3
   19da0:	4010977a 	slli	r8,r8,29
   19da4:	10c0022c 	andhi	r3,r2,8
   19da8:	4462b03a 	or	r17,r8,r17
   19dac:	18000826 	beq	r3,zero,19dd0 <__adddf3+0x760>
   19db0:	4808d0fa 	srli	r4,r9,3
   19db4:	20c0022c 	andhi	r3,r4,8
   19db8:	1800051e 	bne	r3,zero,19dd0 <__adddf3+0x760>
   19dbc:	300cd0fa 	srli	r6,r6,3
   19dc0:	4806977a 	slli	r3,r9,29
   19dc4:	2005883a 	mov	r2,r4
   19dc8:	3825883a 	mov	r18,r7
   19dcc:	19a2b03a 	or	r17,r3,r6
   19dd0:	8810d77a 	srli	r8,r17,29
   19dd4:	100490fa 	slli	r2,r2,3
   19dd8:	882290fa 	slli	r17,r17,3
   19ddc:	0401ffc4 	movi	r16,2047
   19de0:	4090b03a 	or	r8,r8,r2
   19de4:	003e4106 	br	196ec <_gp+0xffff4490>
   19de8:	0141ffc4 	movi	r5,2047
   19dec:	117fc71e 	bne	r2,r5,19d0c <_gp+0xffff4ab0>
   19df0:	4811883a 	mov	r8,r9
   19df4:	3023883a 	mov	r17,r6
   19df8:	1021883a 	mov	r16,r2
   19dfc:	003e3b06 	br	196ec <_gp+0xffff4490>
   19e00:	10002f26 	beq	r2,zero,19ec0 <__adddf3+0x850>
   19e04:	4984b03a 	or	r2,r9,r6
   19e08:	10001126 	beq	r2,zero,19e50 <__adddf3+0x7e0>
   19e0c:	4004d0fa 	srli	r2,r8,3
   19e10:	8822d0fa 	srli	r17,r17,3
   19e14:	4010977a 	slli	r8,r8,29
   19e18:	10c0022c 	andhi	r3,r2,8
   19e1c:	4462b03a 	or	r17,r8,r17
   19e20:	183feb26 	beq	r3,zero,19dd0 <_gp+0xffff4b74>
   19e24:	4808d0fa 	srli	r4,r9,3
   19e28:	20c0022c 	andhi	r3,r4,8
   19e2c:	183fe81e 	bne	r3,zero,19dd0 <_gp+0xffff4b74>
   19e30:	300cd0fa 	srli	r6,r6,3
   19e34:	4806977a 	slli	r3,r9,29
   19e38:	2005883a 	mov	r2,r4
   19e3c:	19a2b03a 	or	r17,r3,r6
   19e40:	003fe306 	br	19dd0 <_gp+0xffff4b74>
   19e44:	0011883a 	mov	r8,zero
   19e48:	0005883a 	mov	r2,zero
   19e4c:	003e3f06 	br	1974c <_gp+0xffff44f0>
   19e50:	0401ffc4 	movi	r16,2047
   19e54:	003e2506 	br	196ec <_gp+0xffff4490>
   19e58:	0013883a 	mov	r9,zero
   19e5c:	003f8406 	br	19c70 <_gp+0xffff4a14>
   19e60:	0005883a 	mov	r2,zero
   19e64:	0007883a 	mov	r3,zero
   19e68:	003e8906 	br	19890 <_gp+0xffff4634>
   19e6c:	197ff804 	addi	r5,r3,-32
   19e70:	01000804 	movi	r4,32
   19e74:	414ad83a 	srl	r5,r8,r5
   19e78:	19002426 	beq	r3,r4,19f0c <__adddf3+0x89c>
   19e7c:	01001004 	movi	r4,64
   19e80:	20c7c83a 	sub	r3,r4,r3
   19e84:	40c6983a 	sll	r3,r8,r3
   19e88:	1c46b03a 	or	r3,r3,r17
   19e8c:	1806c03a 	cmpne	r3,r3,zero
   19e90:	28e2b03a 	or	r17,r5,r3
   19e94:	0007883a 	mov	r3,zero
   19e98:	003f2306 	br	19b28 <_gp+0xffff48cc>
   19e9c:	0007883a 	mov	r3,zero
   19ea0:	5811883a 	mov	r8,r11
   19ea4:	00bfffc4 	movi	r2,-1
   19ea8:	0401ffc4 	movi	r16,2047
   19eac:	003e7806 	br	19890 <_gp+0xffff4634>
   19eb0:	4462b03a 	or	r17,r8,r17
   19eb4:	8822c03a 	cmpne	r17,r17,zero
   19eb8:	0009883a 	mov	r4,zero
   19ebc:	003fa006 	br	19d40 <_gp+0xffff4ae4>
   19ec0:	4811883a 	mov	r8,r9
   19ec4:	3023883a 	mov	r17,r6
   19ec8:	0401ffc4 	movi	r16,2047
   19ecc:	003e0706 	br	196ec <_gp+0xffff4490>
   19ed0:	4811883a 	mov	r8,r9
   19ed4:	3023883a 	mov	r17,r6
   19ed8:	003e0406 	br	196ec <_gp+0xffff4490>
   19edc:	21fff804 	addi	r7,r4,-32
   19ee0:	01400804 	movi	r5,32
   19ee4:	41ced83a 	srl	r7,r8,r7
   19ee8:	21400a26 	beq	r4,r5,19f14 <__adddf3+0x8a4>
   19eec:	01401004 	movi	r5,64
   19ef0:	2909c83a 	sub	r4,r5,r4
   19ef4:	4108983a 	sll	r4,r8,r4
   19ef8:	2448b03a 	or	r4,r4,r17
   19efc:	2008c03a 	cmpne	r4,r4,zero
   19f00:	3922b03a 	or	r17,r7,r4
   19f04:	0009883a 	mov	r4,zero
   19f08:	003f8d06 	br	19d40 <_gp+0xffff4ae4>
   19f0c:	0007883a 	mov	r3,zero
   19f10:	003fdd06 	br	19e88 <_gp+0xffff4c2c>
   19f14:	0009883a 	mov	r4,zero
   19f18:	003ff706 	br	19ef8 <_gp+0xffff4c9c>

00019f1c <__divdf3>:
   19f1c:	defff004 	addi	sp,sp,-64
   19f20:	dc800815 	stw	r18,32(sp)
   19f24:	2824d53a 	srli	r18,r5,20
   19f28:	dd800c15 	stw	r22,48(sp)
   19f2c:	282cd7fa 	srli	r22,r5,31
   19f30:	dc000615 	stw	r16,24(sp)
   19f34:	04000434 	movhi	r16,16
   19f38:	843fffc4 	addi	r16,r16,-1
   19f3c:	dfc00f15 	stw	ra,60(sp)
   19f40:	df000e15 	stw	fp,56(sp)
   19f44:	ddc00d15 	stw	r23,52(sp)
   19f48:	dd400b15 	stw	r21,44(sp)
   19f4c:	dd000a15 	stw	r20,40(sp)
   19f50:	dcc00915 	stw	r19,36(sp)
   19f54:	dc400715 	stw	r17,28(sp)
   19f58:	9481ffcc 	andi	r18,r18,2047
   19f5c:	2c20703a 	and	r16,r5,r16
   19f60:	b2003fcc 	andi	r8,r22,255
   19f64:	90006126 	beq	r18,zero,1a0ec <__divdf3+0x1d0>
   19f68:	0081ffc4 	movi	r2,2047
   19f6c:	202b883a 	mov	r21,r4
   19f70:	90803726 	beq	r18,r2,1a050 <__divdf3+0x134>
   19f74:	80800434 	orhi	r2,r16,16
   19f78:	100490fa 	slli	r2,r2,3
   19f7c:	2020d77a 	srli	r16,r4,29
   19f80:	202a90fa 	slli	r21,r4,3
   19f84:	94bf0044 	addi	r18,r18,-1023
   19f88:	80a0b03a 	or	r16,r16,r2
   19f8c:	0013883a 	mov	r9,zero
   19f90:	000b883a 	mov	r5,zero
   19f94:	3806d53a 	srli	r3,r7,20
   19f98:	382ed7fa 	srli	r23,r7,31
   19f9c:	04400434 	movhi	r17,16
   19fa0:	8c7fffc4 	addi	r17,r17,-1
   19fa4:	18c1ffcc 	andi	r3,r3,2047
   19fa8:	3029883a 	mov	r20,r6
   19fac:	3c62703a 	and	r17,r7,r17
   19fb0:	bf003fcc 	andi	fp,r23,255
   19fb4:	18006e26 	beq	r3,zero,1a170 <__divdf3+0x254>
   19fb8:	0081ffc4 	movi	r2,2047
   19fbc:	18806626 	beq	r3,r2,1a158 <__divdf3+0x23c>
   19fc0:	88800434 	orhi	r2,r17,16
   19fc4:	100490fa 	slli	r2,r2,3
   19fc8:	3022d77a 	srli	r17,r6,29
   19fcc:	302890fa 	slli	r20,r6,3
   19fd0:	18ff0044 	addi	r3,r3,-1023
   19fd4:	88a2b03a 	or	r17,r17,r2
   19fd8:	000f883a 	mov	r7,zero
   19fdc:	b5e6f03a 	xor	r19,r22,r23
   19fe0:	3a4cb03a 	or	r6,r7,r9
   19fe4:	008003c4 	movi	r2,15
   19fe8:	9809883a 	mov	r4,r19
   19fec:	90c7c83a 	sub	r3,r18,r3
   19ff0:	9cc03fcc 	andi	r19,r19,255
   19ff4:	11809636 	bltu	r2,r6,1a250 <__divdf3+0x334>
   19ff8:	300c90ba 	slli	r6,r6,2
   19ffc:	008000b4 	movhi	r2,2
   1a000:	10a80404 	addi	r2,r2,-24560
   1a004:	308d883a 	add	r6,r6,r2
   1a008:	30800017 	ldw	r2,0(r6)
   1a00c:	1000683a 	jmp	r2
   1a010:	0001a250 	cmplti	zero,zero,1673
   1a014:	0001a088 	cmpgei	zero,zero,1666
   1a018:	0001a240 	call	1a24 <__alt_mem_onchip_memory-0xe5dc>
   1a01c:	0001a07c 	xorhi	zero,zero,1665
   1a020:	0001a240 	call	1a24 <__alt_mem_onchip_memory-0xe5dc>
   1a024:	0001a214 	movui	zero,1672
   1a028:	0001a240 	call	1a24 <__alt_mem_onchip_memory-0xe5dc>
   1a02c:	0001a07c 	xorhi	zero,zero,1665
   1a030:	0001a088 	cmpgei	zero,zero,1666
   1a034:	0001a088 	cmpgei	zero,zero,1666
   1a038:	0001a214 	movui	zero,1672
   1a03c:	0001a07c 	xorhi	zero,zero,1665
   1a040:	0001a06c 	andhi	zero,zero,1665
   1a044:	0001a06c 	andhi	zero,zero,1665
   1a048:	0001a06c 	andhi	zero,zero,1665
   1a04c:	0001a5d8 	cmpnei	zero,zero,1687
   1a050:	2404b03a 	or	r2,r4,r16
   1a054:	10006c1e 	bne	r2,zero,1a208 <__divdf3+0x2ec>
   1a058:	02400204 	movi	r9,8
   1a05c:	0021883a 	mov	r16,zero
   1a060:	002b883a 	mov	r21,zero
   1a064:	01400084 	movi	r5,2
   1a068:	003fca06 	br	19f94 <_gp+0xffff4d38>
   1a06c:	8023883a 	mov	r17,r16
   1a070:	a829883a 	mov	r20,r21
   1a074:	4039883a 	mov	fp,r8
   1a078:	280f883a 	mov	r7,r5
   1a07c:	00800084 	movi	r2,2
   1a080:	3881601e 	bne	r7,r2,1a604 <__divdf3+0x6e8>
   1a084:	e027883a 	mov	r19,fp
   1a088:	9900004c 	andi	r4,r19,1
   1a08c:	0081ffc4 	movi	r2,2047
   1a090:	0021883a 	mov	r16,zero
   1a094:	002b883a 	mov	r21,zero
   1a098:	1004953a 	slli	r2,r2,20
   1a09c:	20c03fcc 	andi	r3,r4,255
   1a0a0:	01400434 	movhi	r5,16
   1a0a4:	297fffc4 	addi	r5,r5,-1
   1a0a8:	180697fa 	slli	r3,r3,31
   1a0ac:	8160703a 	and	r16,r16,r5
   1a0b0:	80a0b03a 	or	r16,r16,r2
   1a0b4:	80c6b03a 	or	r3,r16,r3
   1a0b8:	a805883a 	mov	r2,r21
   1a0bc:	dfc00f17 	ldw	ra,60(sp)
   1a0c0:	df000e17 	ldw	fp,56(sp)
   1a0c4:	ddc00d17 	ldw	r23,52(sp)
   1a0c8:	dd800c17 	ldw	r22,48(sp)
   1a0cc:	dd400b17 	ldw	r21,44(sp)
   1a0d0:	dd000a17 	ldw	r20,40(sp)
   1a0d4:	dcc00917 	ldw	r19,36(sp)
   1a0d8:	dc800817 	ldw	r18,32(sp)
   1a0dc:	dc400717 	ldw	r17,28(sp)
   1a0e0:	dc000617 	ldw	r16,24(sp)
   1a0e4:	dec01004 	addi	sp,sp,64
   1a0e8:	f800283a 	ret
   1a0ec:	2404b03a 	or	r2,r4,r16
   1a0f0:	2023883a 	mov	r17,r4
   1a0f4:	10003f26 	beq	r2,zero,1a1f4 <__divdf3+0x2d8>
   1a0f8:	80015e26 	beq	r16,zero,1a674 <__divdf3+0x758>
   1a0fc:	8009883a 	mov	r4,r16
   1a100:	d9800215 	stw	r6,8(sp)
   1a104:	d9c00515 	stw	r7,20(sp)
   1a108:	da000415 	stw	r8,16(sp)
   1a10c:	001beb00 	call	1beb0 <__clzsi2>
   1a110:	d9800217 	ldw	r6,8(sp)
   1a114:	d9c00517 	ldw	r7,20(sp)
   1a118:	da000417 	ldw	r8,16(sp)
   1a11c:	113ffd44 	addi	r4,r2,-11
   1a120:	00c00704 	movi	r3,28
   1a124:	19014f16 	blt	r3,r4,1a664 <__divdf3+0x748>
   1a128:	00c00744 	movi	r3,29
   1a12c:	157ffe04 	addi	r21,r2,-8
   1a130:	1907c83a 	sub	r3,r3,r4
   1a134:	8560983a 	sll	r16,r16,r21
   1a138:	88c6d83a 	srl	r3,r17,r3
   1a13c:	8d6a983a 	sll	r21,r17,r21
   1a140:	1c20b03a 	or	r16,r3,r16
   1a144:	1080fcc4 	addi	r2,r2,1011
   1a148:	00a5c83a 	sub	r18,zero,r2
   1a14c:	0013883a 	mov	r9,zero
   1a150:	000b883a 	mov	r5,zero
   1a154:	003f8f06 	br	19f94 <_gp+0xffff4d38>
   1a158:	3444b03a 	or	r2,r6,r17
   1a15c:	1000231e 	bne	r2,zero,1a1ec <__divdf3+0x2d0>
   1a160:	0023883a 	mov	r17,zero
   1a164:	0029883a 	mov	r20,zero
   1a168:	01c00084 	movi	r7,2
   1a16c:	003f9b06 	br	19fdc <_gp+0xffff4d80>
   1a170:	3444b03a 	or	r2,r6,r17
   1a174:	10001926 	beq	r2,zero,1a1dc <__divdf3+0x2c0>
   1a178:	88014b26 	beq	r17,zero,1a6a8 <__divdf3+0x78c>
   1a17c:	8809883a 	mov	r4,r17
   1a180:	d9400115 	stw	r5,4(sp)
   1a184:	d9800215 	stw	r6,8(sp)
   1a188:	da000415 	stw	r8,16(sp)
   1a18c:	da400315 	stw	r9,12(sp)
   1a190:	001beb00 	call	1beb0 <__clzsi2>
   1a194:	d9400117 	ldw	r5,4(sp)
   1a198:	d9800217 	ldw	r6,8(sp)
   1a19c:	da000417 	ldw	r8,16(sp)
   1a1a0:	da400317 	ldw	r9,12(sp)
   1a1a4:	113ffd44 	addi	r4,r2,-11
   1a1a8:	00c00704 	movi	r3,28
   1a1ac:	19013a16 	blt	r3,r4,1a698 <__divdf3+0x77c>
   1a1b0:	00c00744 	movi	r3,29
   1a1b4:	153ffe04 	addi	r20,r2,-8
   1a1b8:	1907c83a 	sub	r3,r3,r4
   1a1bc:	8d22983a 	sll	r17,r17,r20
   1a1c0:	30c6d83a 	srl	r3,r6,r3
   1a1c4:	3528983a 	sll	r20,r6,r20
   1a1c8:	1c62b03a 	or	r17,r3,r17
   1a1cc:	1080fcc4 	addi	r2,r2,1011
   1a1d0:	0087c83a 	sub	r3,zero,r2
   1a1d4:	000f883a 	mov	r7,zero
   1a1d8:	003f8006 	br	19fdc <_gp+0xffff4d80>
   1a1dc:	0023883a 	mov	r17,zero
   1a1e0:	0029883a 	mov	r20,zero
   1a1e4:	01c00044 	movi	r7,1
   1a1e8:	003f7c06 	br	19fdc <_gp+0xffff4d80>
   1a1ec:	01c000c4 	movi	r7,3
   1a1f0:	003f7a06 	br	19fdc <_gp+0xffff4d80>
   1a1f4:	02400104 	movi	r9,4
   1a1f8:	0021883a 	mov	r16,zero
   1a1fc:	002b883a 	mov	r21,zero
   1a200:	01400044 	movi	r5,1
   1a204:	003f6306 	br	19f94 <_gp+0xffff4d38>
   1a208:	02400304 	movi	r9,12
   1a20c:	014000c4 	movi	r5,3
   1a210:	003f6006 	br	19f94 <_gp+0xffff4d38>
   1a214:	04000434 	movhi	r16,16
   1a218:	0009883a 	mov	r4,zero
   1a21c:	843fffc4 	addi	r16,r16,-1
   1a220:	057fffc4 	movi	r21,-1
   1a224:	0081ffc4 	movi	r2,2047
   1a228:	003f9b06 	br	1a098 <_gp+0xffff4e3c>
   1a22c:	00c00044 	movi	r3,1
   1a230:	1887c83a 	sub	r3,r3,r2
   1a234:	01000e04 	movi	r4,56
   1a238:	20c1530e 	bge	r4,r3,1a788 <__divdf3+0x86c>
   1a23c:	9900004c 	andi	r4,r19,1
   1a240:	0005883a 	mov	r2,zero
   1a244:	0021883a 	mov	r16,zero
   1a248:	002b883a 	mov	r21,zero
   1a24c:	003f9206 	br	1a098 <_gp+0xffff4e3c>
   1a250:	8c012e36 	bltu	r17,r16,1a70c <__divdf3+0x7f0>
   1a254:	84412c26 	beq	r16,r17,1a708 <__divdf3+0x7ec>
   1a258:	a82f883a 	mov	r23,r21
   1a25c:	18ffffc4 	addi	r3,r3,-1
   1a260:	002b883a 	mov	r21,zero
   1a264:	a004d63a 	srli	r2,r20,24
   1a268:	8822923a 	slli	r17,r17,8
   1a26c:	a028923a 	slli	r20,r20,8
   1a270:	8009883a 	mov	r4,r16
   1a274:	88acb03a 	or	r22,r17,r2
   1a278:	dd000015 	stw	r20,0(sp)
   1a27c:	b028d43a 	srli	r20,r22,16
   1a280:	d8c00215 	stw	r3,8(sp)
   1a284:	b4bfffcc 	andi	r18,r22,65535
   1a288:	a00b883a 	mov	r5,r20
   1a28c:	0010cec0 	call	10cec <__udivsi3>
   1a290:	100b883a 	mov	r5,r2
   1a294:	9009883a 	mov	r4,r18
   1a298:	1023883a 	mov	r17,r2
   1a29c:	00196480 	call	19648 <__mulsi3>
   1a2a0:	8009883a 	mov	r4,r16
   1a2a4:	a00b883a 	mov	r5,r20
   1a2a8:	1039883a 	mov	fp,r2
   1a2ac:	0010d500 	call	10d50 <__umodsi3>
   1a2b0:	1004943a 	slli	r2,r2,16
   1a2b4:	b808d43a 	srli	r4,r23,16
   1a2b8:	d8c00217 	ldw	r3,8(sp)
   1a2bc:	2084b03a 	or	r2,r4,r2
   1a2c0:	1700062e 	bgeu	r2,fp,1a2dc <__divdf3+0x3c0>
   1a2c4:	1585883a 	add	r2,r2,r22
   1a2c8:	893fffc4 	addi	r4,r17,-1
   1a2cc:	15811d36 	bltu	r2,r22,1a744 <__divdf3+0x828>
   1a2d0:	17011c2e 	bgeu	r2,fp,1a744 <__divdf3+0x828>
   1a2d4:	8c7fff84 	addi	r17,r17,-2
   1a2d8:	1585883a 	add	r2,r2,r22
   1a2dc:	1739c83a 	sub	fp,r2,fp
   1a2e0:	a00b883a 	mov	r5,r20
   1a2e4:	e009883a 	mov	r4,fp
   1a2e8:	d8c00215 	stw	r3,8(sp)
   1a2ec:	0010cec0 	call	10cec <__udivsi3>
   1a2f0:	100b883a 	mov	r5,r2
   1a2f4:	9009883a 	mov	r4,r18
   1a2f8:	1021883a 	mov	r16,r2
   1a2fc:	00196480 	call	19648 <__mulsi3>
   1a300:	a00b883a 	mov	r5,r20
   1a304:	e009883a 	mov	r4,fp
   1a308:	d8800415 	stw	r2,16(sp)
   1a30c:	0010d500 	call	10d50 <__umodsi3>
   1a310:	1004943a 	slli	r2,r2,16
   1a314:	da000417 	ldw	r8,16(sp)
   1a318:	bdffffcc 	andi	r23,r23,65535
   1a31c:	b884b03a 	or	r2,r23,r2
   1a320:	d8c00217 	ldw	r3,8(sp)
   1a324:	1200062e 	bgeu	r2,r8,1a340 <__divdf3+0x424>
   1a328:	1585883a 	add	r2,r2,r22
   1a32c:	813fffc4 	addi	r4,r16,-1
   1a330:	15810236 	bltu	r2,r22,1a73c <__divdf3+0x820>
   1a334:	1201012e 	bgeu	r2,r8,1a73c <__divdf3+0x820>
   1a338:	843fff84 	addi	r16,r16,-2
   1a33c:	1585883a 	add	r2,r2,r22
   1a340:	8822943a 	slli	r17,r17,16
   1a344:	d9800017 	ldw	r6,0(sp)
   1a348:	1211c83a 	sub	r8,r2,r8
   1a34c:	8c22b03a 	or	r17,r17,r16
   1a350:	373fffcc 	andi	fp,r6,65535
   1a354:	8abfffcc 	andi	r10,r17,65535
   1a358:	8820d43a 	srli	r16,r17,16
   1a35c:	5009883a 	mov	r4,r10
   1a360:	e00b883a 	mov	r5,fp
   1a364:	302ed43a 	srli	r23,r6,16
   1a368:	d8c00215 	stw	r3,8(sp)
   1a36c:	da000415 	stw	r8,16(sp)
   1a370:	da800115 	stw	r10,4(sp)
   1a374:	00196480 	call	19648 <__mulsi3>
   1a378:	800b883a 	mov	r5,r16
   1a37c:	e009883a 	mov	r4,fp
   1a380:	d8800515 	stw	r2,20(sp)
   1a384:	00196480 	call	19648 <__mulsi3>
   1a388:	8009883a 	mov	r4,r16
   1a38c:	b80b883a 	mov	r5,r23
   1a390:	d8800315 	stw	r2,12(sp)
   1a394:	00196480 	call	19648 <__mulsi3>
   1a398:	da800117 	ldw	r10,4(sp)
   1a39c:	b80b883a 	mov	r5,r23
   1a3a0:	1021883a 	mov	r16,r2
   1a3a4:	5009883a 	mov	r4,r10
   1a3a8:	00196480 	call	19648 <__mulsi3>
   1a3ac:	d9c00517 	ldw	r7,20(sp)
   1a3b0:	da400317 	ldw	r9,12(sp)
   1a3b4:	d8c00217 	ldw	r3,8(sp)
   1a3b8:	3808d43a 	srli	r4,r7,16
   1a3bc:	1245883a 	add	r2,r2,r9
   1a3c0:	da000417 	ldw	r8,16(sp)
   1a3c4:	2085883a 	add	r2,r4,r2
   1a3c8:	1240022e 	bgeu	r2,r9,1a3d4 <__divdf3+0x4b8>
   1a3cc:	01000074 	movhi	r4,1
   1a3d0:	8121883a 	add	r16,r16,r4
   1a3d4:	1008d43a 	srli	r4,r2,16
   1a3d8:	1004943a 	slli	r2,r2,16
   1a3dc:	39ffffcc 	andi	r7,r7,65535
   1a3e0:	2409883a 	add	r4,r4,r16
   1a3e4:	11c5883a 	add	r2,r2,r7
   1a3e8:	4100bb36 	bltu	r8,r4,1a6d8 <__divdf3+0x7bc>
   1a3ec:	4100d726 	beq	r8,r4,1a74c <__divdf3+0x830>
   1a3f0:	4109c83a 	sub	r4,r8,r4
   1a3f4:	a8a1c83a 	sub	r16,r21,r2
   1a3f8:	ac2b803a 	cmpltu	r21,r21,r16
   1a3fc:	256bc83a 	sub	r21,r4,r21
   1a400:	b540d926 	beq	r22,r21,1a768 <__divdf3+0x84c>
   1a404:	a00b883a 	mov	r5,r20
   1a408:	a809883a 	mov	r4,r21
   1a40c:	d8c00215 	stw	r3,8(sp)
   1a410:	0010cec0 	call	10cec <__udivsi3>
   1a414:	100b883a 	mov	r5,r2
   1a418:	9009883a 	mov	r4,r18
   1a41c:	d8800515 	stw	r2,20(sp)
   1a420:	00196480 	call	19648 <__mulsi3>
   1a424:	a809883a 	mov	r4,r21
   1a428:	a00b883a 	mov	r5,r20
   1a42c:	d8800415 	stw	r2,16(sp)
   1a430:	0010d500 	call	10d50 <__umodsi3>
   1a434:	1004943a 	slli	r2,r2,16
   1a438:	8008d43a 	srli	r4,r16,16
   1a43c:	da000417 	ldw	r8,16(sp)
   1a440:	d8c00217 	ldw	r3,8(sp)
   1a444:	2084b03a 	or	r2,r4,r2
   1a448:	d9c00517 	ldw	r7,20(sp)
   1a44c:	1200062e 	bgeu	r2,r8,1a468 <__divdf3+0x54c>
   1a450:	1585883a 	add	r2,r2,r22
   1a454:	393fffc4 	addi	r4,r7,-1
   1a458:	1580c536 	bltu	r2,r22,1a770 <__divdf3+0x854>
   1a45c:	1200c42e 	bgeu	r2,r8,1a770 <__divdf3+0x854>
   1a460:	39ffff84 	addi	r7,r7,-2
   1a464:	1585883a 	add	r2,r2,r22
   1a468:	122bc83a 	sub	r21,r2,r8
   1a46c:	a00b883a 	mov	r5,r20
   1a470:	a809883a 	mov	r4,r21
   1a474:	d8c00215 	stw	r3,8(sp)
   1a478:	d9c00515 	stw	r7,20(sp)
   1a47c:	0010cec0 	call	10cec <__udivsi3>
   1a480:	9009883a 	mov	r4,r18
   1a484:	100b883a 	mov	r5,r2
   1a488:	d8800415 	stw	r2,16(sp)
   1a48c:	00196480 	call	19648 <__mulsi3>
   1a490:	a809883a 	mov	r4,r21
   1a494:	a00b883a 	mov	r5,r20
   1a498:	1025883a 	mov	r18,r2
   1a49c:	0010d500 	call	10d50 <__umodsi3>
   1a4a0:	1004943a 	slli	r2,r2,16
   1a4a4:	813fffcc 	andi	r4,r16,65535
   1a4a8:	d8c00217 	ldw	r3,8(sp)
   1a4ac:	20a0b03a 	or	r16,r4,r2
   1a4b0:	d9c00517 	ldw	r7,20(sp)
   1a4b4:	da000417 	ldw	r8,16(sp)
   1a4b8:	8480062e 	bgeu	r16,r18,1a4d4 <__divdf3+0x5b8>
   1a4bc:	85a1883a 	add	r16,r16,r22
   1a4c0:	40bfffc4 	addi	r2,r8,-1
   1a4c4:	8580ac36 	bltu	r16,r22,1a778 <__divdf3+0x85c>
   1a4c8:	8480ab2e 	bgeu	r16,r18,1a778 <__divdf3+0x85c>
   1a4cc:	423fff84 	addi	r8,r8,-2
   1a4d0:	85a1883a 	add	r16,r16,r22
   1a4d4:	3804943a 	slli	r2,r7,16
   1a4d8:	84a1c83a 	sub	r16,r16,r18
   1a4dc:	e009883a 	mov	r4,fp
   1a4e0:	1228b03a 	or	r20,r2,r8
   1a4e4:	a1ffffcc 	andi	r7,r20,65535
   1a4e8:	a024d43a 	srli	r18,r20,16
   1a4ec:	380b883a 	mov	r5,r7
   1a4f0:	d8c00215 	stw	r3,8(sp)
   1a4f4:	d9c00515 	stw	r7,20(sp)
   1a4f8:	00196480 	call	19648 <__mulsi3>
   1a4fc:	900b883a 	mov	r5,r18
   1a500:	e009883a 	mov	r4,fp
   1a504:	102b883a 	mov	r21,r2
   1a508:	00196480 	call	19648 <__mulsi3>
   1a50c:	900b883a 	mov	r5,r18
   1a510:	b809883a 	mov	r4,r23
   1a514:	1039883a 	mov	fp,r2
   1a518:	00196480 	call	19648 <__mulsi3>
   1a51c:	d9c00517 	ldw	r7,20(sp)
   1a520:	b80b883a 	mov	r5,r23
   1a524:	1025883a 	mov	r18,r2
   1a528:	3809883a 	mov	r4,r7
   1a52c:	00196480 	call	19648 <__mulsi3>
   1a530:	a808d43a 	srli	r4,r21,16
   1a534:	1705883a 	add	r2,r2,fp
   1a538:	d8c00217 	ldw	r3,8(sp)
   1a53c:	2085883a 	add	r2,r4,r2
   1a540:	1700022e 	bgeu	r2,fp,1a54c <__divdf3+0x630>
   1a544:	01000074 	movhi	r4,1
   1a548:	9125883a 	add	r18,r18,r4
   1a54c:	1008d43a 	srli	r4,r2,16
   1a550:	1004943a 	slli	r2,r2,16
   1a554:	ad7fffcc 	andi	r21,r21,65535
   1a558:	2489883a 	add	r4,r4,r18
   1a55c:	1545883a 	add	r2,r2,r21
   1a560:	81003836 	bltu	r16,r4,1a644 <__divdf3+0x728>
   1a564:	81003626 	beq	r16,r4,1a640 <__divdf3+0x724>
   1a568:	a5000054 	ori	r20,r20,1
   1a56c:	1880ffc4 	addi	r2,r3,1023
   1a570:	00bf2e0e 	bge	zero,r2,1a22c <_gp+0xffff4fd0>
   1a574:	a10001cc 	andi	r4,r20,7
   1a578:	20000726 	beq	r4,zero,1a598 <__divdf3+0x67c>
   1a57c:	a10003cc 	andi	r4,r20,15
   1a580:	01400104 	movi	r5,4
   1a584:	21400426 	beq	r4,r5,1a598 <__divdf3+0x67c>
   1a588:	a149883a 	add	r4,r20,r5
   1a58c:	2529803a 	cmpltu	r20,r4,r20
   1a590:	8d23883a 	add	r17,r17,r20
   1a594:	2029883a 	mov	r20,r4
   1a598:	8900402c 	andhi	r4,r17,256
   1a59c:	20000426 	beq	r4,zero,1a5b0 <__divdf3+0x694>
   1a5a0:	18810004 	addi	r2,r3,1024
   1a5a4:	00ffc034 	movhi	r3,65280
   1a5a8:	18ffffc4 	addi	r3,r3,-1
   1a5ac:	88e2703a 	and	r17,r17,r3
   1a5b0:	00c1ff84 	movi	r3,2046
   1a5b4:	18beb416 	blt	r3,r2,1a088 <_gp+0xffff4e2c>
   1a5b8:	a028d0fa 	srli	r20,r20,3
   1a5bc:	882a977a 	slli	r21,r17,29
   1a5c0:	8820927a 	slli	r16,r17,9
   1a5c4:	1081ffcc 	andi	r2,r2,2047
   1a5c8:	ad2ab03a 	or	r21,r21,r20
   1a5cc:	8020d33a 	srli	r16,r16,12
   1a5d0:	9900004c 	andi	r4,r19,1
   1a5d4:	003eb006 	br	1a098 <_gp+0xffff4e3c>
   1a5d8:	8080022c 	andhi	r2,r16,8
   1a5dc:	10001226 	beq	r2,zero,1a628 <__divdf3+0x70c>
   1a5e0:	8880022c 	andhi	r2,r17,8
   1a5e4:	1000101e 	bne	r2,zero,1a628 <__divdf3+0x70c>
   1a5e8:	00800434 	movhi	r2,16
   1a5ec:	8c000234 	orhi	r16,r17,8
   1a5f0:	10bfffc4 	addi	r2,r2,-1
   1a5f4:	b809883a 	mov	r4,r23
   1a5f8:	80a0703a 	and	r16,r16,r2
   1a5fc:	a02b883a 	mov	r21,r20
   1a600:	003f0806 	br	1a224 <_gp+0xffff4fc8>
   1a604:	008000c4 	movi	r2,3
   1a608:	3880b126 	beq	r7,r2,1a8d0 <__divdf3+0x9b4>
   1a60c:	00800044 	movi	r2,1
   1a610:	38805b1e 	bne	r7,r2,1a780 <__divdf3+0x864>
   1a614:	e009883a 	mov	r4,fp
   1a618:	0005883a 	mov	r2,zero
   1a61c:	0021883a 	mov	r16,zero
   1a620:	002b883a 	mov	r21,zero
   1a624:	003e9c06 	br	1a098 <_gp+0xffff4e3c>
   1a628:	00800434 	movhi	r2,16
   1a62c:	84000234 	orhi	r16,r16,8
   1a630:	10bfffc4 	addi	r2,r2,-1
   1a634:	b009883a 	mov	r4,r22
   1a638:	80a0703a 	and	r16,r16,r2
   1a63c:	003ef906 	br	1a224 <_gp+0xffff4fc8>
   1a640:	103fca26 	beq	r2,zero,1a56c <_gp+0xffff5310>
   1a644:	b421883a 	add	r16,r22,r16
   1a648:	a17fffc4 	addi	r5,r20,-1
   1a64c:	8580422e 	bgeu	r16,r22,1a758 <__divdf3+0x83c>
   1a650:	2829883a 	mov	r20,r5
   1a654:	813fc41e 	bne	r16,r4,1a568 <_gp+0xffff530c>
   1a658:	d9800017 	ldw	r6,0(sp)
   1a65c:	30bfc21e 	bne	r6,r2,1a568 <_gp+0xffff530c>
   1a660:	003fc206 	br	1a56c <_gp+0xffff5310>
   1a664:	143ff604 	addi	r16,r2,-40
   1a668:	8c20983a 	sll	r16,r17,r16
   1a66c:	002b883a 	mov	r21,zero
   1a670:	003eb406 	br	1a144 <_gp+0xffff4ee8>
   1a674:	d9800215 	stw	r6,8(sp)
   1a678:	d9c00515 	stw	r7,20(sp)
   1a67c:	da000415 	stw	r8,16(sp)
   1a680:	001beb00 	call	1beb0 <__clzsi2>
   1a684:	10800804 	addi	r2,r2,32
   1a688:	da000417 	ldw	r8,16(sp)
   1a68c:	d9c00517 	ldw	r7,20(sp)
   1a690:	d9800217 	ldw	r6,8(sp)
   1a694:	003ea106 	br	1a11c <_gp+0xffff4ec0>
   1a698:	147ff604 	addi	r17,r2,-40
   1a69c:	3462983a 	sll	r17,r6,r17
   1a6a0:	0029883a 	mov	r20,zero
   1a6a4:	003ec906 	br	1a1cc <_gp+0xffff4f70>
   1a6a8:	3009883a 	mov	r4,r6
   1a6ac:	d9400115 	stw	r5,4(sp)
   1a6b0:	d9800215 	stw	r6,8(sp)
   1a6b4:	da000415 	stw	r8,16(sp)
   1a6b8:	da400315 	stw	r9,12(sp)
   1a6bc:	001beb00 	call	1beb0 <__clzsi2>
   1a6c0:	10800804 	addi	r2,r2,32
   1a6c4:	da400317 	ldw	r9,12(sp)
   1a6c8:	da000417 	ldw	r8,16(sp)
   1a6cc:	d9800217 	ldw	r6,8(sp)
   1a6d0:	d9400117 	ldw	r5,4(sp)
   1a6d4:	003eb306 	br	1a1a4 <_gp+0xffff4f48>
   1a6d8:	d9800017 	ldw	r6,0(sp)
   1a6dc:	a9ab883a 	add	r21,r21,r6
   1a6e0:	a98b803a 	cmpltu	r5,r21,r6
   1a6e4:	2d8b883a 	add	r5,r5,r22
   1a6e8:	2a11883a 	add	r8,r5,r8
   1a6ec:	897fffc4 	addi	r5,r17,-1
   1a6f0:	b2000c2e 	bgeu	r22,r8,1a724 <__divdf3+0x808>
   1a6f4:	41003f36 	bltu	r8,r4,1a7f4 <__divdf3+0x8d8>
   1a6f8:	22006c26 	beq	r4,r8,1a8ac <__divdf3+0x990>
   1a6fc:	4109c83a 	sub	r4,r8,r4
   1a700:	2823883a 	mov	r17,r5
   1a704:	003f3b06 	br	1a3f4 <_gp+0xffff5198>
   1a708:	ad3ed336 	bltu	r21,r20,1a258 <_gp+0xffff4ffc>
   1a70c:	a804d07a 	srli	r2,r21,1
   1a710:	802e97fa 	slli	r23,r16,31
   1a714:	a82a97fa 	slli	r21,r21,31
   1a718:	8020d07a 	srli	r16,r16,1
   1a71c:	b8aeb03a 	or	r23,r23,r2
   1a720:	003ed006 	br	1a264 <_gp+0xffff5008>
   1a724:	b23ff51e 	bne	r22,r8,1a6fc <_gp+0xffff54a0>
   1a728:	d9800017 	ldw	r6,0(sp)
   1a72c:	a9bff12e 	bgeu	r21,r6,1a6f4 <_gp+0xffff5498>
   1a730:	b109c83a 	sub	r4,r22,r4
   1a734:	2823883a 	mov	r17,r5
   1a738:	003f2e06 	br	1a3f4 <_gp+0xffff5198>
   1a73c:	2021883a 	mov	r16,r4
   1a740:	003eff06 	br	1a340 <_gp+0xffff50e4>
   1a744:	2023883a 	mov	r17,r4
   1a748:	003ee406 	br	1a2dc <_gp+0xffff5080>
   1a74c:	a8bfe236 	bltu	r21,r2,1a6d8 <_gp+0xffff547c>
   1a750:	0009883a 	mov	r4,zero
   1a754:	003f2706 	br	1a3f4 <_gp+0xffff5198>
   1a758:	81002d36 	bltu	r16,r4,1a810 <__divdf3+0x8f4>
   1a75c:	24005626 	beq	r4,r16,1a8b8 <__divdf3+0x99c>
   1a760:	2829883a 	mov	r20,r5
   1a764:	003f8006 	br	1a568 <_gp+0xffff530c>
   1a768:	053fffc4 	movi	r20,-1
   1a76c:	003f7f06 	br	1a56c <_gp+0xffff5310>
   1a770:	200f883a 	mov	r7,r4
   1a774:	003f3c06 	br	1a468 <_gp+0xffff520c>
   1a778:	1011883a 	mov	r8,r2
   1a77c:	003f5506 	br	1a4d4 <_gp+0xffff5278>
   1a780:	e027883a 	mov	r19,fp
   1a784:	003f7906 	br	1a56c <_gp+0xffff5310>
   1a788:	010007c4 	movi	r4,31
   1a78c:	20c02816 	blt	r4,r3,1a830 <__divdf3+0x914>
   1a790:	00800804 	movi	r2,32
   1a794:	10c5c83a 	sub	r2,r2,r3
   1a798:	888a983a 	sll	r5,r17,r2
   1a79c:	a0c8d83a 	srl	r4,r20,r3
   1a7a0:	a084983a 	sll	r2,r20,r2
   1a7a4:	88e2d83a 	srl	r17,r17,r3
   1a7a8:	2906b03a 	or	r3,r5,r4
   1a7ac:	1004c03a 	cmpne	r2,r2,zero
   1a7b0:	1886b03a 	or	r3,r3,r2
   1a7b4:	188001cc 	andi	r2,r3,7
   1a7b8:	10000726 	beq	r2,zero,1a7d8 <__divdf3+0x8bc>
   1a7bc:	188003cc 	andi	r2,r3,15
   1a7c0:	01000104 	movi	r4,4
   1a7c4:	11000426 	beq	r2,r4,1a7d8 <__divdf3+0x8bc>
   1a7c8:	1805883a 	mov	r2,r3
   1a7cc:	10c00104 	addi	r3,r2,4
   1a7d0:	1885803a 	cmpltu	r2,r3,r2
   1a7d4:	88a3883a 	add	r17,r17,r2
   1a7d8:	8880202c 	andhi	r2,r17,128
   1a7dc:	10002926 	beq	r2,zero,1a884 <__divdf3+0x968>
   1a7e0:	9900004c 	andi	r4,r19,1
   1a7e4:	00800044 	movi	r2,1
   1a7e8:	0021883a 	mov	r16,zero
   1a7ec:	002b883a 	mov	r21,zero
   1a7f0:	003e2906 	br	1a098 <_gp+0xffff4e3c>
   1a7f4:	d9800017 	ldw	r6,0(sp)
   1a7f8:	8c7fff84 	addi	r17,r17,-2
   1a7fc:	a9ab883a 	add	r21,r21,r6
   1a800:	a98b803a 	cmpltu	r5,r21,r6
   1a804:	2d8b883a 	add	r5,r5,r22
   1a808:	2a11883a 	add	r8,r5,r8
   1a80c:	003ef806 	br	1a3f0 <_gp+0xffff5194>
   1a810:	d9800017 	ldw	r6,0(sp)
   1a814:	318f883a 	add	r7,r6,r6
   1a818:	398b803a 	cmpltu	r5,r7,r6
   1a81c:	2d8d883a 	add	r6,r5,r22
   1a820:	81a1883a 	add	r16,r16,r6
   1a824:	a17fff84 	addi	r5,r20,-2
   1a828:	d9c00015 	stw	r7,0(sp)
   1a82c:	003f8806 	br	1a650 <_gp+0xffff53f4>
   1a830:	013ff844 	movi	r4,-31
   1a834:	2085c83a 	sub	r2,r4,r2
   1a838:	8888d83a 	srl	r4,r17,r2
   1a83c:	00800804 	movi	r2,32
   1a840:	18802126 	beq	r3,r2,1a8c8 <__divdf3+0x9ac>
   1a844:	04001004 	movi	r16,64
   1a848:	80c7c83a 	sub	r3,r16,r3
   1a84c:	88e0983a 	sll	r16,r17,r3
   1a850:	8504b03a 	or	r2,r16,r20
   1a854:	1004c03a 	cmpne	r2,r2,zero
   1a858:	2084b03a 	or	r2,r4,r2
   1a85c:	144001cc 	andi	r17,r2,7
   1a860:	88000d1e 	bne	r17,zero,1a898 <__divdf3+0x97c>
   1a864:	0021883a 	mov	r16,zero
   1a868:	102ad0fa 	srli	r21,r2,3
   1a86c:	9900004c 	andi	r4,r19,1
   1a870:	0005883a 	mov	r2,zero
   1a874:	ac6ab03a 	or	r21,r21,r17
   1a878:	003e0706 	br	1a098 <_gp+0xffff4e3c>
   1a87c:	1007883a 	mov	r3,r2
   1a880:	0023883a 	mov	r17,zero
   1a884:	8820927a 	slli	r16,r17,9
   1a888:	1805883a 	mov	r2,r3
   1a88c:	8822977a 	slli	r17,r17,29
   1a890:	8020d33a 	srli	r16,r16,12
   1a894:	003ff406 	br	1a868 <_gp+0xffff560c>
   1a898:	10c003cc 	andi	r3,r2,15
   1a89c:	01000104 	movi	r4,4
   1a8a0:	193ff626 	beq	r3,r4,1a87c <_gp+0xffff5620>
   1a8a4:	0023883a 	mov	r17,zero
   1a8a8:	003fc806 	br	1a7cc <_gp+0xffff5570>
   1a8ac:	a8bfd136 	bltu	r21,r2,1a7f4 <_gp+0xffff5598>
   1a8b0:	2823883a 	mov	r17,r5
   1a8b4:	003fa606 	br	1a750 <_gp+0xffff54f4>
   1a8b8:	d9800017 	ldw	r6,0(sp)
   1a8bc:	30bfd436 	bltu	r6,r2,1a810 <_gp+0xffff55b4>
   1a8c0:	2829883a 	mov	r20,r5
   1a8c4:	003f6406 	br	1a658 <_gp+0xffff53fc>
   1a8c8:	0021883a 	mov	r16,zero
   1a8cc:	003fe006 	br	1a850 <_gp+0xffff55f4>
   1a8d0:	00800434 	movhi	r2,16
   1a8d4:	8c000234 	orhi	r16,r17,8
   1a8d8:	10bfffc4 	addi	r2,r2,-1
   1a8dc:	e009883a 	mov	r4,fp
   1a8e0:	80a0703a 	and	r16,r16,r2
   1a8e4:	a02b883a 	mov	r21,r20
   1a8e8:	003e4e06 	br	1a224 <_gp+0xffff4fc8>

0001a8ec <__eqdf2>:
   1a8ec:	2804d53a 	srli	r2,r5,20
   1a8f0:	3806d53a 	srli	r3,r7,20
   1a8f4:	02000434 	movhi	r8,16
   1a8f8:	423fffc4 	addi	r8,r8,-1
   1a8fc:	1081ffcc 	andi	r2,r2,2047
   1a900:	0281ffc4 	movi	r10,2047
   1a904:	2a12703a 	and	r9,r5,r8
   1a908:	18c1ffcc 	andi	r3,r3,2047
   1a90c:	3a10703a 	and	r8,r7,r8
   1a910:	280ad7fa 	srli	r5,r5,31
   1a914:	380ed7fa 	srli	r7,r7,31
   1a918:	12801026 	beq	r2,r10,1a95c <__eqdf2+0x70>
   1a91c:	0281ffc4 	movi	r10,2047
   1a920:	1a800a26 	beq	r3,r10,1a94c <__eqdf2+0x60>
   1a924:	10c00226 	beq	r2,r3,1a930 <__eqdf2+0x44>
   1a928:	00800044 	movi	r2,1
   1a92c:	f800283a 	ret
   1a930:	4a3ffd1e 	bne	r9,r8,1a928 <_gp+0xffff56cc>
   1a934:	21bffc1e 	bne	r4,r6,1a928 <_gp+0xffff56cc>
   1a938:	29c00c26 	beq	r5,r7,1a96c <__eqdf2+0x80>
   1a93c:	103ffa1e 	bne	r2,zero,1a928 <_gp+0xffff56cc>
   1a940:	2244b03a 	or	r2,r4,r9
   1a944:	1004c03a 	cmpne	r2,r2,zero
   1a948:	f800283a 	ret
   1a94c:	3214b03a 	or	r10,r6,r8
   1a950:	503ff426 	beq	r10,zero,1a924 <_gp+0xffff56c8>
   1a954:	00800044 	movi	r2,1
   1a958:	f800283a 	ret
   1a95c:	2254b03a 	or	r10,r4,r9
   1a960:	503fee26 	beq	r10,zero,1a91c <_gp+0xffff56c0>
   1a964:	00800044 	movi	r2,1
   1a968:	f800283a 	ret
   1a96c:	0005883a 	mov	r2,zero
   1a970:	f800283a 	ret

0001a974 <__gedf2>:
   1a974:	2804d53a 	srli	r2,r5,20
   1a978:	3806d53a 	srli	r3,r7,20
   1a97c:	02000434 	movhi	r8,16
   1a980:	423fffc4 	addi	r8,r8,-1
   1a984:	1081ffcc 	andi	r2,r2,2047
   1a988:	0241ffc4 	movi	r9,2047
   1a98c:	2a14703a 	and	r10,r5,r8
   1a990:	18c1ffcc 	andi	r3,r3,2047
   1a994:	3a10703a 	and	r8,r7,r8
   1a998:	280ad7fa 	srli	r5,r5,31
   1a99c:	380ed7fa 	srli	r7,r7,31
   1a9a0:	12401d26 	beq	r2,r9,1aa18 <__gedf2+0xa4>
   1a9a4:	0241ffc4 	movi	r9,2047
   1a9a8:	1a401226 	beq	r3,r9,1a9f4 <__gedf2+0x80>
   1a9ac:	1000081e 	bne	r2,zero,1a9d0 <__gedf2+0x5c>
   1a9b0:	2296b03a 	or	r11,r4,r10
   1a9b4:	5813003a 	cmpeq	r9,r11,zero
   1a9b8:	1800091e 	bne	r3,zero,1a9e0 <__gedf2+0x6c>
   1a9bc:	3218b03a 	or	r12,r6,r8
   1a9c0:	6000071e 	bne	r12,zero,1a9e0 <__gedf2+0x6c>
   1a9c4:	0005883a 	mov	r2,zero
   1a9c8:	5800101e 	bne	r11,zero,1aa0c <__gedf2+0x98>
   1a9cc:	f800283a 	ret
   1a9d0:	18000c1e 	bne	r3,zero,1aa04 <__gedf2+0x90>
   1a9d4:	3212b03a 	or	r9,r6,r8
   1a9d8:	48000c26 	beq	r9,zero,1aa0c <__gedf2+0x98>
   1a9dc:	0013883a 	mov	r9,zero
   1a9e0:	39c03fcc 	andi	r7,r7,255
   1a9e4:	48000826 	beq	r9,zero,1aa08 <__gedf2+0x94>
   1a9e8:	38000926 	beq	r7,zero,1aa10 <__gedf2+0x9c>
   1a9ec:	00800044 	movi	r2,1
   1a9f0:	f800283a 	ret
   1a9f4:	3212b03a 	or	r9,r6,r8
   1a9f8:	483fec26 	beq	r9,zero,1a9ac <_gp+0xffff5750>
   1a9fc:	00bfff84 	movi	r2,-2
   1aa00:	f800283a 	ret
   1aa04:	39c03fcc 	andi	r7,r7,255
   1aa08:	29c00626 	beq	r5,r7,1aa24 <__gedf2+0xb0>
   1aa0c:	283ff726 	beq	r5,zero,1a9ec <_gp+0xffff5790>
   1aa10:	00bfffc4 	movi	r2,-1
   1aa14:	f800283a 	ret
   1aa18:	2292b03a 	or	r9,r4,r10
   1aa1c:	483fe126 	beq	r9,zero,1a9a4 <_gp+0xffff5748>
   1aa20:	003ff606 	br	1a9fc <_gp+0xffff57a0>
   1aa24:	18bff916 	blt	r3,r2,1aa0c <_gp+0xffff57b0>
   1aa28:	10c00316 	blt	r2,r3,1aa38 <__gedf2+0xc4>
   1aa2c:	42bff736 	bltu	r8,r10,1aa0c <_gp+0xffff57b0>
   1aa30:	52000326 	beq	r10,r8,1aa40 <__gedf2+0xcc>
   1aa34:	5200042e 	bgeu	r10,r8,1aa48 <__gedf2+0xd4>
   1aa38:	283fec1e 	bne	r5,zero,1a9ec <_gp+0xffff5790>
   1aa3c:	003ff406 	br	1aa10 <_gp+0xffff57b4>
   1aa40:	313ff236 	bltu	r6,r4,1aa0c <_gp+0xffff57b0>
   1aa44:	21bffc36 	bltu	r4,r6,1aa38 <_gp+0xffff57dc>
   1aa48:	0005883a 	mov	r2,zero
   1aa4c:	f800283a 	ret

0001aa50 <__ledf2>:
   1aa50:	2804d53a 	srli	r2,r5,20
   1aa54:	3810d53a 	srli	r8,r7,20
   1aa58:	00c00434 	movhi	r3,16
   1aa5c:	18ffffc4 	addi	r3,r3,-1
   1aa60:	1081ffcc 	andi	r2,r2,2047
   1aa64:	0241ffc4 	movi	r9,2047
   1aa68:	28d4703a 	and	r10,r5,r3
   1aa6c:	4201ffcc 	andi	r8,r8,2047
   1aa70:	38c6703a 	and	r3,r7,r3
   1aa74:	280ad7fa 	srli	r5,r5,31
   1aa78:	380ed7fa 	srli	r7,r7,31
   1aa7c:	12401f26 	beq	r2,r9,1aafc <__ledf2+0xac>
   1aa80:	0241ffc4 	movi	r9,2047
   1aa84:	42401426 	beq	r8,r9,1aad8 <__ledf2+0x88>
   1aa88:	1000091e 	bne	r2,zero,1aab0 <__ledf2+0x60>
   1aa8c:	2296b03a 	or	r11,r4,r10
   1aa90:	5813003a 	cmpeq	r9,r11,zero
   1aa94:	29403fcc 	andi	r5,r5,255
   1aa98:	40000a1e 	bne	r8,zero,1aac4 <__ledf2+0x74>
   1aa9c:	30d8b03a 	or	r12,r6,r3
   1aaa0:	6000081e 	bne	r12,zero,1aac4 <__ledf2+0x74>
   1aaa4:	0005883a 	mov	r2,zero
   1aaa8:	5800111e 	bne	r11,zero,1aaf0 <__ledf2+0xa0>
   1aaac:	f800283a 	ret
   1aab0:	29403fcc 	andi	r5,r5,255
   1aab4:	40000c1e 	bne	r8,zero,1aae8 <__ledf2+0x98>
   1aab8:	30d2b03a 	or	r9,r6,r3
   1aabc:	48000c26 	beq	r9,zero,1aaf0 <__ledf2+0xa0>
   1aac0:	0013883a 	mov	r9,zero
   1aac4:	39c03fcc 	andi	r7,r7,255
   1aac8:	48000826 	beq	r9,zero,1aaec <__ledf2+0x9c>
   1aacc:	38001126 	beq	r7,zero,1ab14 <__ledf2+0xc4>
   1aad0:	00800044 	movi	r2,1
   1aad4:	f800283a 	ret
   1aad8:	30d2b03a 	or	r9,r6,r3
   1aadc:	483fea26 	beq	r9,zero,1aa88 <_gp+0xffff582c>
   1aae0:	00800084 	movi	r2,2
   1aae4:	f800283a 	ret
   1aae8:	39c03fcc 	andi	r7,r7,255
   1aaec:	39400726 	beq	r7,r5,1ab0c <__ledf2+0xbc>
   1aaf0:	2800081e 	bne	r5,zero,1ab14 <__ledf2+0xc4>
   1aaf4:	00800044 	movi	r2,1
   1aaf8:	f800283a 	ret
   1aafc:	2292b03a 	or	r9,r4,r10
   1ab00:	483fdf26 	beq	r9,zero,1aa80 <_gp+0xffff5824>
   1ab04:	00800084 	movi	r2,2
   1ab08:	f800283a 	ret
   1ab0c:	4080030e 	bge	r8,r2,1ab1c <__ledf2+0xcc>
   1ab10:	383fef26 	beq	r7,zero,1aad0 <_gp+0xffff5874>
   1ab14:	00bfffc4 	movi	r2,-1
   1ab18:	f800283a 	ret
   1ab1c:	123feb16 	blt	r2,r8,1aacc <_gp+0xffff5870>
   1ab20:	1abff336 	bltu	r3,r10,1aaf0 <_gp+0xffff5894>
   1ab24:	50c00326 	beq	r10,r3,1ab34 <__ledf2+0xe4>
   1ab28:	50c0042e 	bgeu	r10,r3,1ab3c <__ledf2+0xec>
   1ab2c:	283fe81e 	bne	r5,zero,1aad0 <_gp+0xffff5874>
   1ab30:	003ff806 	br	1ab14 <_gp+0xffff58b8>
   1ab34:	313fee36 	bltu	r6,r4,1aaf0 <_gp+0xffff5894>
   1ab38:	21bffc36 	bltu	r4,r6,1ab2c <_gp+0xffff58d0>
   1ab3c:	0005883a 	mov	r2,zero
   1ab40:	f800283a 	ret

0001ab44 <__muldf3>:
   1ab44:	deffee04 	addi	sp,sp,-72
   1ab48:	dd000c15 	stw	r20,48(sp)
   1ab4c:	2828d53a 	srli	r20,r5,20
   1ab50:	ddc00f15 	stw	r23,60(sp)
   1ab54:	282ed7fa 	srli	r23,r5,31
   1ab58:	dc000815 	stw	r16,32(sp)
   1ab5c:	04000434 	movhi	r16,16
   1ab60:	dcc00b15 	stw	r19,44(sp)
   1ab64:	843fffc4 	addi	r16,r16,-1
   1ab68:	dfc01115 	stw	ra,68(sp)
   1ab6c:	df001015 	stw	fp,64(sp)
   1ab70:	dd800e15 	stw	r22,56(sp)
   1ab74:	dd400d15 	stw	r21,52(sp)
   1ab78:	dc800a15 	stw	r18,40(sp)
   1ab7c:	dc400915 	stw	r17,36(sp)
   1ab80:	a501ffcc 	andi	r20,r20,2047
   1ab84:	2c20703a 	and	r16,r5,r16
   1ab88:	b827883a 	mov	r19,r23
   1ab8c:	ba403fcc 	andi	r9,r23,255
   1ab90:	a0006026 	beq	r20,zero,1ad14 <__muldf3+0x1d0>
   1ab94:	0081ffc4 	movi	r2,2047
   1ab98:	202d883a 	mov	r22,r4
   1ab9c:	a0803626 	beq	r20,r2,1ac78 <__muldf3+0x134>
   1aba0:	84000434 	orhi	r16,r16,16
   1aba4:	200ad77a 	srli	r5,r4,29
   1aba8:	800490fa 	slli	r2,r16,3
   1abac:	202c90fa 	slli	r22,r4,3
   1abb0:	a53f0044 	addi	r20,r20,-1023
   1abb4:	28a0b03a 	or	r16,r5,r2
   1abb8:	002b883a 	mov	r21,zero
   1abbc:	000b883a 	mov	r5,zero
   1abc0:	3804d53a 	srli	r2,r7,20
   1abc4:	3838d7fa 	srli	fp,r7,31
   1abc8:	04400434 	movhi	r17,16
   1abcc:	8c7fffc4 	addi	r17,r17,-1
   1abd0:	1081ffcc 	andi	r2,r2,2047
   1abd4:	3025883a 	mov	r18,r6
   1abd8:	3c62703a 	and	r17,r7,r17
   1abdc:	e2803fcc 	andi	r10,fp,255
   1abe0:	10006d26 	beq	r2,zero,1ad98 <__muldf3+0x254>
   1abe4:	00c1ffc4 	movi	r3,2047
   1abe8:	10c06526 	beq	r2,r3,1ad80 <__muldf3+0x23c>
   1abec:	8c400434 	orhi	r17,r17,16
   1abf0:	300ed77a 	srli	r7,r6,29
   1abf4:	880690fa 	slli	r3,r17,3
   1abf8:	302490fa 	slli	r18,r6,3
   1abfc:	10bf0044 	addi	r2,r2,-1023
   1ac00:	38e2b03a 	or	r17,r7,r3
   1ac04:	000f883a 	mov	r7,zero
   1ac08:	a087883a 	add	r3,r20,r2
   1ac0c:	010003c4 	movi	r4,15
   1ac10:	3d44b03a 	or	r2,r7,r21
   1ac14:	e5ccf03a 	xor	r6,fp,r23
   1ac18:	1a000044 	addi	r8,r3,1
   1ac1c:	20809b36 	bltu	r4,r2,1ae8c <__muldf3+0x348>
   1ac20:	100490ba 	slli	r2,r2,2
   1ac24:	010000b4 	movhi	r4,2
   1ac28:	212b0e04 	addi	r4,r4,-21448
   1ac2c:	1105883a 	add	r2,r2,r4
   1ac30:	10800017 	ldw	r2,0(r2)
   1ac34:	1000683a 	jmp	r2
   1ac38:	0001ae8c 	andi	zero,zero,1722
   1ac3c:	0001ac98 	cmpnei	zero,zero,1714
   1ac40:	0001ac98 	cmpnei	zero,zero,1714
   1ac44:	0001ac94 	movui	zero,1714
   1ac48:	0001ae68 	cmpgeui	zero,zero,1721
   1ac4c:	0001ae68 	cmpgeui	zero,zero,1721
   1ac50:	0001ae50 	cmplti	zero,zero,1721
   1ac54:	0001ac94 	movui	zero,1714
   1ac58:	0001ae68 	cmpgeui	zero,zero,1721
   1ac5c:	0001ae50 	cmplti	zero,zero,1721
   1ac60:	0001ae68 	cmpgeui	zero,zero,1721
   1ac64:	0001ac94 	movui	zero,1714
   1ac68:	0001ae78 	rdprs	zero,zero,1721
   1ac6c:	0001ae78 	rdprs	zero,zero,1721
   1ac70:	0001ae78 	rdprs	zero,zero,1721
   1ac74:	0001b1d8 	cmpnei	zero,zero,1735
   1ac78:	2404b03a 	or	r2,r4,r16
   1ac7c:	1000711e 	bne	r2,zero,1ae44 <__muldf3+0x300>
   1ac80:	05400204 	movi	r21,8
   1ac84:	0021883a 	mov	r16,zero
   1ac88:	002d883a 	mov	r22,zero
   1ac8c:	01400084 	movi	r5,2
   1ac90:	003fcb06 	br	1abc0 <_gp+0xffff5964>
   1ac94:	500d883a 	mov	r6,r10
   1ac98:	00800084 	movi	r2,2
   1ac9c:	38805926 	beq	r7,r2,1ae04 <__muldf3+0x2c0>
   1aca0:	008000c4 	movi	r2,3
   1aca4:	3881bb26 	beq	r7,r2,1b394 <__muldf3+0x850>
   1aca8:	00800044 	movi	r2,1
   1acac:	3881961e 	bne	r7,r2,1b308 <__muldf3+0x7c4>
   1acb0:	3027883a 	mov	r19,r6
   1acb4:	0005883a 	mov	r2,zero
   1acb8:	0021883a 	mov	r16,zero
   1acbc:	002d883a 	mov	r22,zero
   1acc0:	1004953a 	slli	r2,r2,20
   1acc4:	98c03fcc 	andi	r3,r19,255
   1acc8:	04400434 	movhi	r17,16
   1accc:	8c7fffc4 	addi	r17,r17,-1
   1acd0:	180697fa 	slli	r3,r3,31
   1acd4:	8460703a 	and	r16,r16,r17
   1acd8:	80a0b03a 	or	r16,r16,r2
   1acdc:	80c6b03a 	or	r3,r16,r3
   1ace0:	b005883a 	mov	r2,r22
   1ace4:	dfc01117 	ldw	ra,68(sp)
   1ace8:	df001017 	ldw	fp,64(sp)
   1acec:	ddc00f17 	ldw	r23,60(sp)
   1acf0:	dd800e17 	ldw	r22,56(sp)
   1acf4:	dd400d17 	ldw	r21,52(sp)
   1acf8:	dd000c17 	ldw	r20,48(sp)
   1acfc:	dcc00b17 	ldw	r19,44(sp)
   1ad00:	dc800a17 	ldw	r18,40(sp)
   1ad04:	dc400917 	ldw	r17,36(sp)
   1ad08:	dc000817 	ldw	r16,32(sp)
   1ad0c:	dec01204 	addi	sp,sp,72
   1ad10:	f800283a 	ret
   1ad14:	2404b03a 	or	r2,r4,r16
   1ad18:	202b883a 	mov	r21,r4
   1ad1c:	10004426 	beq	r2,zero,1ae30 <__muldf3+0x2ec>
   1ad20:	80015126 	beq	r16,zero,1b268 <__muldf3+0x724>
   1ad24:	8009883a 	mov	r4,r16
   1ad28:	d9800715 	stw	r6,28(sp)
   1ad2c:	d9c00215 	stw	r7,8(sp)
   1ad30:	da400415 	stw	r9,16(sp)
   1ad34:	001beb00 	call	1beb0 <__clzsi2>
   1ad38:	d9800717 	ldw	r6,28(sp)
   1ad3c:	d9c00217 	ldw	r7,8(sp)
   1ad40:	da400417 	ldw	r9,16(sp)
   1ad44:	113ffd44 	addi	r4,r2,-11
   1ad48:	00c00704 	movi	r3,28
   1ad4c:	19014216 	blt	r3,r4,1b258 <__muldf3+0x714>
   1ad50:	00c00744 	movi	r3,29
   1ad54:	15bffe04 	addi	r22,r2,-8
   1ad58:	1907c83a 	sub	r3,r3,r4
   1ad5c:	85a0983a 	sll	r16,r16,r22
   1ad60:	a8c6d83a 	srl	r3,r21,r3
   1ad64:	adac983a 	sll	r22,r21,r22
   1ad68:	1c20b03a 	or	r16,r3,r16
   1ad6c:	1080fcc4 	addi	r2,r2,1011
   1ad70:	00a9c83a 	sub	r20,zero,r2
   1ad74:	002b883a 	mov	r21,zero
   1ad78:	000b883a 	mov	r5,zero
   1ad7c:	003f9006 	br	1abc0 <_gp+0xffff5964>
   1ad80:	3446b03a 	or	r3,r6,r17
   1ad84:	1800281e 	bne	r3,zero,1ae28 <__muldf3+0x2e4>
   1ad88:	0023883a 	mov	r17,zero
   1ad8c:	0025883a 	mov	r18,zero
   1ad90:	01c00084 	movi	r7,2
   1ad94:	003f9c06 	br	1ac08 <_gp+0xffff59ac>
   1ad98:	3446b03a 	or	r3,r6,r17
   1ad9c:	18001e26 	beq	r3,zero,1ae18 <__muldf3+0x2d4>
   1ada0:	88012126 	beq	r17,zero,1b228 <__muldf3+0x6e4>
   1ada4:	8809883a 	mov	r4,r17
   1ada8:	d9400215 	stw	r5,8(sp)
   1adac:	d9800715 	stw	r6,28(sp)
   1adb0:	da400415 	stw	r9,16(sp)
   1adb4:	da800315 	stw	r10,12(sp)
   1adb8:	001beb00 	call	1beb0 <__clzsi2>
   1adbc:	d9400217 	ldw	r5,8(sp)
   1adc0:	d9800717 	ldw	r6,28(sp)
   1adc4:	da400417 	ldw	r9,16(sp)
   1adc8:	da800317 	ldw	r10,12(sp)
   1adcc:	113ffd44 	addi	r4,r2,-11
   1add0:	00c00704 	movi	r3,28
   1add4:	19011016 	blt	r3,r4,1b218 <__muldf3+0x6d4>
   1add8:	00c00744 	movi	r3,29
   1addc:	14bffe04 	addi	r18,r2,-8
   1ade0:	1907c83a 	sub	r3,r3,r4
   1ade4:	8ca2983a 	sll	r17,r17,r18
   1ade8:	30c6d83a 	srl	r3,r6,r3
   1adec:	34a4983a 	sll	r18,r6,r18
   1adf0:	1c62b03a 	or	r17,r3,r17
   1adf4:	1080fcc4 	addi	r2,r2,1011
   1adf8:	0085c83a 	sub	r2,zero,r2
   1adfc:	000f883a 	mov	r7,zero
   1ae00:	003f8106 	br	1ac08 <_gp+0xffff59ac>
   1ae04:	3027883a 	mov	r19,r6
   1ae08:	0081ffc4 	movi	r2,2047
   1ae0c:	0021883a 	mov	r16,zero
   1ae10:	002d883a 	mov	r22,zero
   1ae14:	003faa06 	br	1acc0 <_gp+0xffff5a64>
   1ae18:	0023883a 	mov	r17,zero
   1ae1c:	0025883a 	mov	r18,zero
   1ae20:	01c00044 	movi	r7,1
   1ae24:	003f7806 	br	1ac08 <_gp+0xffff59ac>
   1ae28:	01c000c4 	movi	r7,3
   1ae2c:	003f7606 	br	1ac08 <_gp+0xffff59ac>
   1ae30:	05400104 	movi	r21,4
   1ae34:	0021883a 	mov	r16,zero
   1ae38:	002d883a 	mov	r22,zero
   1ae3c:	01400044 	movi	r5,1
   1ae40:	003f5f06 	br	1abc0 <_gp+0xffff5964>
   1ae44:	05400304 	movi	r21,12
   1ae48:	014000c4 	movi	r5,3
   1ae4c:	003f5c06 	br	1abc0 <_gp+0xffff5964>
   1ae50:	04000434 	movhi	r16,16
   1ae54:	0027883a 	mov	r19,zero
   1ae58:	843fffc4 	addi	r16,r16,-1
   1ae5c:	05bfffc4 	movi	r22,-1
   1ae60:	0081ffc4 	movi	r2,2047
   1ae64:	003f9606 	br	1acc0 <_gp+0xffff5a64>
   1ae68:	8023883a 	mov	r17,r16
   1ae6c:	b025883a 	mov	r18,r22
   1ae70:	280f883a 	mov	r7,r5
   1ae74:	003f8806 	br	1ac98 <_gp+0xffff5a3c>
   1ae78:	8023883a 	mov	r17,r16
   1ae7c:	b025883a 	mov	r18,r22
   1ae80:	480d883a 	mov	r6,r9
   1ae84:	280f883a 	mov	r7,r5
   1ae88:	003f8306 	br	1ac98 <_gp+0xffff5a3c>
   1ae8c:	b026d43a 	srli	r19,r22,16
   1ae90:	902ed43a 	srli	r23,r18,16
   1ae94:	b5bfffcc 	andi	r22,r22,65535
   1ae98:	94bfffcc 	andi	r18,r18,65535
   1ae9c:	b00b883a 	mov	r5,r22
   1aea0:	9009883a 	mov	r4,r18
   1aea4:	d8c00515 	stw	r3,20(sp)
   1aea8:	d9800715 	stw	r6,28(sp)
   1aeac:	da000615 	stw	r8,24(sp)
   1aeb0:	00196480 	call	19648 <__mulsi3>
   1aeb4:	980b883a 	mov	r5,r19
   1aeb8:	9009883a 	mov	r4,r18
   1aebc:	1029883a 	mov	r20,r2
   1aec0:	00196480 	call	19648 <__mulsi3>
   1aec4:	b80b883a 	mov	r5,r23
   1aec8:	9809883a 	mov	r4,r19
   1aecc:	102b883a 	mov	r21,r2
   1aed0:	00196480 	call	19648 <__mulsi3>
   1aed4:	b809883a 	mov	r4,r23
   1aed8:	b00b883a 	mov	r5,r22
   1aedc:	1039883a 	mov	fp,r2
   1aee0:	00196480 	call	19648 <__mulsi3>
   1aee4:	a008d43a 	srli	r4,r20,16
   1aee8:	1545883a 	add	r2,r2,r21
   1aeec:	d8c00517 	ldw	r3,20(sp)
   1aef0:	2085883a 	add	r2,r4,r2
   1aef4:	d9800717 	ldw	r6,28(sp)
   1aef8:	da000617 	ldw	r8,24(sp)
   1aefc:	1540022e 	bgeu	r2,r21,1af08 <__muldf3+0x3c4>
   1af00:	01000074 	movhi	r4,1
   1af04:	e139883a 	add	fp,fp,r4
   1af08:	100e943a 	slli	r7,r2,16
   1af0c:	1004d43a 	srli	r2,r2,16
   1af10:	882ad43a 	srli	r21,r17,16
   1af14:	a53fffcc 	andi	r20,r20,65535
   1af18:	8c7fffcc 	andi	r17,r17,65535
   1af1c:	3d29883a 	add	r20,r7,r20
   1af20:	b00b883a 	mov	r5,r22
   1af24:	8809883a 	mov	r4,r17
   1af28:	d8c00515 	stw	r3,20(sp)
   1af2c:	d9800715 	stw	r6,28(sp)
   1af30:	da000615 	stw	r8,24(sp)
   1af34:	dd000115 	stw	r20,4(sp)
   1af38:	d8800015 	stw	r2,0(sp)
   1af3c:	00196480 	call	19648 <__mulsi3>
   1af40:	980b883a 	mov	r5,r19
   1af44:	8809883a 	mov	r4,r17
   1af48:	d8800215 	stw	r2,8(sp)
   1af4c:	00196480 	call	19648 <__mulsi3>
   1af50:	9809883a 	mov	r4,r19
   1af54:	a80b883a 	mov	r5,r21
   1af58:	1029883a 	mov	r20,r2
   1af5c:	00196480 	call	19648 <__mulsi3>
   1af60:	b00b883a 	mov	r5,r22
   1af64:	a809883a 	mov	r4,r21
   1af68:	d8800415 	stw	r2,16(sp)
   1af6c:	00196480 	call	19648 <__mulsi3>
   1af70:	d9c00217 	ldw	r7,8(sp)
   1af74:	1505883a 	add	r2,r2,r20
   1af78:	d8c00517 	ldw	r3,20(sp)
   1af7c:	3826d43a 	srli	r19,r7,16
   1af80:	d9800717 	ldw	r6,28(sp)
   1af84:	da000617 	ldw	r8,24(sp)
   1af88:	9885883a 	add	r2,r19,r2
   1af8c:	da400417 	ldw	r9,16(sp)
   1af90:	1500022e 	bgeu	r2,r20,1af9c <__muldf3+0x458>
   1af94:	01000074 	movhi	r4,1
   1af98:	4913883a 	add	r9,r9,r4
   1af9c:	1028d43a 	srli	r20,r2,16
   1afa0:	1004943a 	slli	r2,r2,16
   1afa4:	802cd43a 	srli	r22,r16,16
   1afa8:	843fffcc 	andi	r16,r16,65535
   1afac:	3cffffcc 	andi	r19,r7,65535
   1afb0:	9009883a 	mov	r4,r18
   1afb4:	800b883a 	mov	r5,r16
   1afb8:	a269883a 	add	r20,r20,r9
   1afbc:	d8c00515 	stw	r3,20(sp)
   1afc0:	d9800715 	stw	r6,28(sp)
   1afc4:	da000615 	stw	r8,24(sp)
   1afc8:	14e7883a 	add	r19,r2,r19
   1afcc:	00196480 	call	19648 <__mulsi3>
   1afd0:	9009883a 	mov	r4,r18
   1afd4:	b00b883a 	mov	r5,r22
   1afd8:	d8800315 	stw	r2,12(sp)
   1afdc:	00196480 	call	19648 <__mulsi3>
   1afe0:	b809883a 	mov	r4,r23
   1afe4:	b00b883a 	mov	r5,r22
   1afe8:	d8800215 	stw	r2,8(sp)
   1afec:	00196480 	call	19648 <__mulsi3>
   1aff0:	b80b883a 	mov	r5,r23
   1aff4:	8009883a 	mov	r4,r16
   1aff8:	d8800415 	stw	r2,16(sp)
   1affc:	00196480 	call	19648 <__mulsi3>
   1b000:	da800317 	ldw	r10,12(sp)
   1b004:	d9c00217 	ldw	r7,8(sp)
   1b008:	d9000017 	ldw	r4,0(sp)
   1b00c:	502ed43a 	srli	r23,r10,16
   1b010:	11c5883a 	add	r2,r2,r7
   1b014:	24e5883a 	add	r18,r4,r19
   1b018:	b885883a 	add	r2,r23,r2
   1b01c:	d8c00517 	ldw	r3,20(sp)
   1b020:	d9800717 	ldw	r6,28(sp)
   1b024:	da000617 	ldw	r8,24(sp)
   1b028:	da400417 	ldw	r9,16(sp)
   1b02c:	11c0022e 	bgeu	r2,r7,1b038 <__muldf3+0x4f4>
   1b030:	01000074 	movhi	r4,1
   1b034:	4913883a 	add	r9,r9,r4
   1b038:	100ed43a 	srli	r7,r2,16
   1b03c:	1004943a 	slli	r2,r2,16
   1b040:	55ffffcc 	andi	r23,r10,65535
   1b044:	3a53883a 	add	r9,r7,r9
   1b048:	8809883a 	mov	r4,r17
   1b04c:	800b883a 	mov	r5,r16
   1b050:	d8c00515 	stw	r3,20(sp)
   1b054:	d9800715 	stw	r6,28(sp)
   1b058:	da000615 	stw	r8,24(sp)
   1b05c:	da400415 	stw	r9,16(sp)
   1b060:	15ef883a 	add	r23,r2,r23
   1b064:	00196480 	call	19648 <__mulsi3>
   1b068:	8809883a 	mov	r4,r17
   1b06c:	b00b883a 	mov	r5,r22
   1b070:	d8800215 	stw	r2,8(sp)
   1b074:	00196480 	call	19648 <__mulsi3>
   1b078:	b00b883a 	mov	r5,r22
   1b07c:	a809883a 	mov	r4,r21
   1b080:	d8800315 	stw	r2,12(sp)
   1b084:	00196480 	call	19648 <__mulsi3>
   1b088:	8009883a 	mov	r4,r16
   1b08c:	a80b883a 	mov	r5,r21
   1b090:	1023883a 	mov	r17,r2
   1b094:	00196480 	call	19648 <__mulsi3>
   1b098:	d9c00217 	ldw	r7,8(sp)
   1b09c:	da800317 	ldw	r10,12(sp)
   1b0a0:	d8c00517 	ldw	r3,20(sp)
   1b0a4:	3808d43a 	srli	r4,r7,16
   1b0a8:	1285883a 	add	r2,r2,r10
   1b0ac:	d9800717 	ldw	r6,28(sp)
   1b0b0:	2085883a 	add	r2,r4,r2
   1b0b4:	da000617 	ldw	r8,24(sp)
   1b0b8:	da400417 	ldw	r9,16(sp)
   1b0bc:	1280022e 	bgeu	r2,r10,1b0c8 <__muldf3+0x584>
   1b0c0:	01000074 	movhi	r4,1
   1b0c4:	8923883a 	add	r17,r17,r4
   1b0c8:	1008943a 	slli	r4,r2,16
   1b0cc:	39ffffcc 	andi	r7,r7,65535
   1b0d0:	e4b9883a 	add	fp,fp,r18
   1b0d4:	21cf883a 	add	r7,r4,r7
   1b0d8:	e4e7803a 	cmpltu	r19,fp,r19
   1b0dc:	3d0f883a 	add	r7,r7,r20
   1b0e0:	bf39883a 	add	fp,r23,fp
   1b0e4:	99c9883a 	add	r4,r19,r7
   1b0e8:	e5ef803a 	cmpltu	r23,fp,r23
   1b0ec:	490b883a 	add	r5,r9,r4
   1b0f0:	1004d43a 	srli	r2,r2,16
   1b0f4:	b965883a 	add	r18,r23,r5
   1b0f8:	24c9803a 	cmpltu	r4,r4,r19
   1b0fc:	3d29803a 	cmpltu	r20,r7,r20
   1b100:	a128b03a 	or	r20,r20,r4
   1b104:	95ef803a 	cmpltu	r23,r18,r23
   1b108:	2a53803a 	cmpltu	r9,r5,r9
   1b10c:	a0a9883a 	add	r20,r20,r2
   1b110:	4deeb03a 	or	r23,r9,r23
   1b114:	a5ef883a 	add	r23,r20,r23
   1b118:	bc63883a 	add	r17,r23,r17
   1b11c:	e004927a 	slli	r2,fp,9
   1b120:	d9000117 	ldw	r4,4(sp)
   1b124:	882e927a 	slli	r23,r17,9
   1b128:	9022d5fa 	srli	r17,r18,23
   1b12c:	e038d5fa 	srli	fp,fp,23
   1b130:	1104b03a 	or	r2,r2,r4
   1b134:	9024927a 	slli	r18,r18,9
   1b138:	1004c03a 	cmpne	r2,r2,zero
   1b13c:	bc62b03a 	or	r17,r23,r17
   1b140:	1738b03a 	or	fp,r2,fp
   1b144:	8880402c 	andhi	r2,r17,256
   1b148:	e4a4b03a 	or	r18,fp,r18
   1b14c:	10000726 	beq	r2,zero,1b16c <__muldf3+0x628>
   1b150:	9006d07a 	srli	r3,r18,1
   1b154:	880497fa 	slli	r2,r17,31
   1b158:	9480004c 	andi	r18,r18,1
   1b15c:	8822d07a 	srli	r17,r17,1
   1b160:	1ca4b03a 	or	r18,r3,r18
   1b164:	14a4b03a 	or	r18,r2,r18
   1b168:	4007883a 	mov	r3,r8
   1b16c:	1880ffc4 	addi	r2,r3,1023
   1b170:	0080460e 	bge	zero,r2,1b28c <__muldf3+0x748>
   1b174:	910001cc 	andi	r4,r18,7
   1b178:	20000726 	beq	r4,zero,1b198 <__muldf3+0x654>
   1b17c:	910003cc 	andi	r4,r18,15
   1b180:	01400104 	movi	r5,4
   1b184:	21400426 	beq	r4,r5,1b198 <__muldf3+0x654>
   1b188:	9149883a 	add	r4,r18,r5
   1b18c:	24a5803a 	cmpltu	r18,r4,r18
   1b190:	8ca3883a 	add	r17,r17,r18
   1b194:	2025883a 	mov	r18,r4
   1b198:	8900402c 	andhi	r4,r17,256
   1b19c:	20000426 	beq	r4,zero,1b1b0 <__muldf3+0x66c>
   1b1a0:	18810004 	addi	r2,r3,1024
   1b1a4:	00ffc034 	movhi	r3,65280
   1b1a8:	18ffffc4 	addi	r3,r3,-1
   1b1ac:	88e2703a 	and	r17,r17,r3
   1b1b0:	00c1ff84 	movi	r3,2046
   1b1b4:	18bf1316 	blt	r3,r2,1ae04 <_gp+0xffff5ba8>
   1b1b8:	882c977a 	slli	r22,r17,29
   1b1bc:	9024d0fa 	srli	r18,r18,3
   1b1c0:	8822927a 	slli	r17,r17,9
   1b1c4:	1081ffcc 	andi	r2,r2,2047
   1b1c8:	b4acb03a 	or	r22,r22,r18
   1b1cc:	8820d33a 	srli	r16,r17,12
   1b1d0:	3027883a 	mov	r19,r6
   1b1d4:	003eba06 	br	1acc0 <_gp+0xffff5a64>
   1b1d8:	8080022c 	andhi	r2,r16,8
   1b1dc:	10000926 	beq	r2,zero,1b204 <__muldf3+0x6c0>
   1b1e0:	8880022c 	andhi	r2,r17,8
   1b1e4:	1000071e 	bne	r2,zero,1b204 <__muldf3+0x6c0>
   1b1e8:	00800434 	movhi	r2,16
   1b1ec:	8c000234 	orhi	r16,r17,8
   1b1f0:	10bfffc4 	addi	r2,r2,-1
   1b1f4:	e027883a 	mov	r19,fp
   1b1f8:	80a0703a 	and	r16,r16,r2
   1b1fc:	902d883a 	mov	r22,r18
   1b200:	003f1706 	br	1ae60 <_gp+0xffff5c04>
   1b204:	00800434 	movhi	r2,16
   1b208:	84000234 	orhi	r16,r16,8
   1b20c:	10bfffc4 	addi	r2,r2,-1
   1b210:	80a0703a 	and	r16,r16,r2
   1b214:	003f1206 	br	1ae60 <_gp+0xffff5c04>
   1b218:	147ff604 	addi	r17,r2,-40
   1b21c:	3462983a 	sll	r17,r6,r17
   1b220:	0025883a 	mov	r18,zero
   1b224:	003ef306 	br	1adf4 <_gp+0xffff5b98>
   1b228:	3009883a 	mov	r4,r6
   1b22c:	d9400215 	stw	r5,8(sp)
   1b230:	d9800715 	stw	r6,28(sp)
   1b234:	da400415 	stw	r9,16(sp)
   1b238:	da800315 	stw	r10,12(sp)
   1b23c:	001beb00 	call	1beb0 <__clzsi2>
   1b240:	10800804 	addi	r2,r2,32
   1b244:	da800317 	ldw	r10,12(sp)
   1b248:	da400417 	ldw	r9,16(sp)
   1b24c:	d9800717 	ldw	r6,28(sp)
   1b250:	d9400217 	ldw	r5,8(sp)
   1b254:	003edd06 	br	1adcc <_gp+0xffff5b70>
   1b258:	143ff604 	addi	r16,r2,-40
   1b25c:	ac20983a 	sll	r16,r21,r16
   1b260:	002d883a 	mov	r22,zero
   1b264:	003ec106 	br	1ad6c <_gp+0xffff5b10>
   1b268:	d9800715 	stw	r6,28(sp)
   1b26c:	d9c00215 	stw	r7,8(sp)
   1b270:	da400415 	stw	r9,16(sp)
   1b274:	001beb00 	call	1beb0 <__clzsi2>
   1b278:	10800804 	addi	r2,r2,32
   1b27c:	da400417 	ldw	r9,16(sp)
   1b280:	d9c00217 	ldw	r7,8(sp)
   1b284:	d9800717 	ldw	r6,28(sp)
   1b288:	003eae06 	br	1ad44 <_gp+0xffff5ae8>
   1b28c:	00c00044 	movi	r3,1
   1b290:	1887c83a 	sub	r3,r3,r2
   1b294:	01000e04 	movi	r4,56
   1b298:	20fe8516 	blt	r4,r3,1acb0 <_gp+0xffff5a54>
   1b29c:	010007c4 	movi	r4,31
   1b2a0:	20c01b16 	blt	r4,r3,1b310 <__muldf3+0x7cc>
   1b2a4:	00800804 	movi	r2,32
   1b2a8:	10c5c83a 	sub	r2,r2,r3
   1b2ac:	888a983a 	sll	r5,r17,r2
   1b2b0:	90c8d83a 	srl	r4,r18,r3
   1b2b4:	9084983a 	sll	r2,r18,r2
   1b2b8:	88e2d83a 	srl	r17,r17,r3
   1b2bc:	2906b03a 	or	r3,r5,r4
   1b2c0:	1004c03a 	cmpne	r2,r2,zero
   1b2c4:	1886b03a 	or	r3,r3,r2
   1b2c8:	188001cc 	andi	r2,r3,7
   1b2cc:	10000726 	beq	r2,zero,1b2ec <__muldf3+0x7a8>
   1b2d0:	188003cc 	andi	r2,r3,15
   1b2d4:	01000104 	movi	r4,4
   1b2d8:	11000426 	beq	r2,r4,1b2ec <__muldf3+0x7a8>
   1b2dc:	1805883a 	mov	r2,r3
   1b2e0:	10c00104 	addi	r3,r2,4
   1b2e4:	1885803a 	cmpltu	r2,r3,r2
   1b2e8:	88a3883a 	add	r17,r17,r2
   1b2ec:	8880202c 	andhi	r2,r17,128
   1b2f0:	10001c26 	beq	r2,zero,1b364 <__muldf3+0x820>
   1b2f4:	3027883a 	mov	r19,r6
   1b2f8:	00800044 	movi	r2,1
   1b2fc:	0021883a 	mov	r16,zero
   1b300:	002d883a 	mov	r22,zero
   1b304:	003e6e06 	br	1acc0 <_gp+0xffff5a64>
   1b308:	4007883a 	mov	r3,r8
   1b30c:	003f9706 	br	1b16c <_gp+0xffff5f10>
   1b310:	017ff844 	movi	r5,-31
   1b314:	2885c83a 	sub	r2,r5,r2
   1b318:	888ad83a 	srl	r5,r17,r2
   1b31c:	00800804 	movi	r2,32
   1b320:	18801a26 	beq	r3,r2,1b38c <__muldf3+0x848>
   1b324:	01001004 	movi	r4,64
   1b328:	20c7c83a 	sub	r3,r4,r3
   1b32c:	88e2983a 	sll	r17,r17,r3
   1b330:	8ca4b03a 	or	r18,r17,r18
   1b334:	9004c03a 	cmpne	r2,r18,zero
   1b338:	2884b03a 	or	r2,r5,r2
   1b33c:	144001cc 	andi	r17,r2,7
   1b340:	88000d1e 	bne	r17,zero,1b378 <__muldf3+0x834>
   1b344:	0021883a 	mov	r16,zero
   1b348:	102cd0fa 	srli	r22,r2,3
   1b34c:	3027883a 	mov	r19,r6
   1b350:	0005883a 	mov	r2,zero
   1b354:	b46cb03a 	or	r22,r22,r17
   1b358:	003e5906 	br	1acc0 <_gp+0xffff5a64>
   1b35c:	1007883a 	mov	r3,r2
   1b360:	0023883a 	mov	r17,zero
   1b364:	8820927a 	slli	r16,r17,9
   1b368:	1805883a 	mov	r2,r3
   1b36c:	8822977a 	slli	r17,r17,29
   1b370:	8020d33a 	srli	r16,r16,12
   1b374:	003ff406 	br	1b348 <_gp+0xffff60ec>
   1b378:	10c003cc 	andi	r3,r2,15
   1b37c:	01000104 	movi	r4,4
   1b380:	193ff626 	beq	r3,r4,1b35c <_gp+0xffff6100>
   1b384:	0023883a 	mov	r17,zero
   1b388:	003fd506 	br	1b2e0 <_gp+0xffff6084>
   1b38c:	0023883a 	mov	r17,zero
   1b390:	003fe706 	br	1b330 <_gp+0xffff60d4>
   1b394:	00800434 	movhi	r2,16
   1b398:	8c000234 	orhi	r16,r17,8
   1b39c:	10bfffc4 	addi	r2,r2,-1
   1b3a0:	3027883a 	mov	r19,r6
   1b3a4:	80a0703a 	and	r16,r16,r2
   1b3a8:	902d883a 	mov	r22,r18
   1b3ac:	003eac06 	br	1ae60 <_gp+0xffff5c04>

0001b3b0 <__subdf3>:
   1b3b0:	02000434 	movhi	r8,16
   1b3b4:	423fffc4 	addi	r8,r8,-1
   1b3b8:	defffb04 	addi	sp,sp,-20
   1b3bc:	2a14703a 	and	r10,r5,r8
   1b3c0:	3812d53a 	srli	r9,r7,20
   1b3c4:	3a10703a 	and	r8,r7,r8
   1b3c8:	2006d77a 	srli	r3,r4,29
   1b3cc:	3004d77a 	srli	r2,r6,29
   1b3d0:	dc000015 	stw	r16,0(sp)
   1b3d4:	501490fa 	slli	r10,r10,3
   1b3d8:	2820d53a 	srli	r16,r5,20
   1b3dc:	401090fa 	slli	r8,r8,3
   1b3e0:	dc800215 	stw	r18,8(sp)
   1b3e4:	dc400115 	stw	r17,4(sp)
   1b3e8:	dfc00415 	stw	ra,16(sp)
   1b3ec:	202290fa 	slli	r17,r4,3
   1b3f0:	dcc00315 	stw	r19,12(sp)
   1b3f4:	4a41ffcc 	andi	r9,r9,2047
   1b3f8:	0101ffc4 	movi	r4,2047
   1b3fc:	2824d7fa 	srli	r18,r5,31
   1b400:	8401ffcc 	andi	r16,r16,2047
   1b404:	50c6b03a 	or	r3,r10,r3
   1b408:	380ed7fa 	srli	r7,r7,31
   1b40c:	408ab03a 	or	r5,r8,r2
   1b410:	300c90fa 	slli	r6,r6,3
   1b414:	49009626 	beq	r9,r4,1b670 <__subdf3+0x2c0>
   1b418:	39c0005c 	xori	r7,r7,1
   1b41c:	8245c83a 	sub	r2,r16,r9
   1b420:	3c807426 	beq	r7,r18,1b5f4 <__subdf3+0x244>
   1b424:	0080af0e 	bge	zero,r2,1b6e4 <__subdf3+0x334>
   1b428:	48002a1e 	bne	r9,zero,1b4d4 <__subdf3+0x124>
   1b42c:	2988b03a 	or	r4,r5,r6
   1b430:	20009a1e 	bne	r4,zero,1b69c <__subdf3+0x2ec>
   1b434:	888001cc 	andi	r2,r17,7
   1b438:	10000726 	beq	r2,zero,1b458 <__subdf3+0xa8>
   1b43c:	888003cc 	andi	r2,r17,15
   1b440:	01000104 	movi	r4,4
   1b444:	11000426 	beq	r2,r4,1b458 <__subdf3+0xa8>
   1b448:	890b883a 	add	r5,r17,r4
   1b44c:	2c63803a 	cmpltu	r17,r5,r17
   1b450:	1c47883a 	add	r3,r3,r17
   1b454:	2823883a 	mov	r17,r5
   1b458:	1880202c 	andhi	r2,r3,128
   1b45c:	10005926 	beq	r2,zero,1b5c4 <__subdf3+0x214>
   1b460:	84000044 	addi	r16,r16,1
   1b464:	0081ffc4 	movi	r2,2047
   1b468:	8080be26 	beq	r16,r2,1b764 <__subdf3+0x3b4>
   1b46c:	017fe034 	movhi	r5,65408
   1b470:	297fffc4 	addi	r5,r5,-1
   1b474:	1946703a 	and	r3,r3,r5
   1b478:	1804977a 	slli	r2,r3,29
   1b47c:	1806927a 	slli	r3,r3,9
   1b480:	8822d0fa 	srli	r17,r17,3
   1b484:	8401ffcc 	andi	r16,r16,2047
   1b488:	180ad33a 	srli	r5,r3,12
   1b48c:	9100004c 	andi	r4,r18,1
   1b490:	1444b03a 	or	r2,r2,r17
   1b494:	80c1ffcc 	andi	r3,r16,2047
   1b498:	1820953a 	slli	r16,r3,20
   1b49c:	20c03fcc 	andi	r3,r4,255
   1b4a0:	180897fa 	slli	r4,r3,31
   1b4a4:	00c00434 	movhi	r3,16
   1b4a8:	18ffffc4 	addi	r3,r3,-1
   1b4ac:	28c6703a 	and	r3,r5,r3
   1b4b0:	1c06b03a 	or	r3,r3,r16
   1b4b4:	1906b03a 	or	r3,r3,r4
   1b4b8:	dfc00417 	ldw	ra,16(sp)
   1b4bc:	dcc00317 	ldw	r19,12(sp)
   1b4c0:	dc800217 	ldw	r18,8(sp)
   1b4c4:	dc400117 	ldw	r17,4(sp)
   1b4c8:	dc000017 	ldw	r16,0(sp)
   1b4cc:	dec00504 	addi	sp,sp,20
   1b4d0:	f800283a 	ret
   1b4d4:	0101ffc4 	movi	r4,2047
   1b4d8:	813fd626 	beq	r16,r4,1b434 <_gp+0xffff61d8>
   1b4dc:	29402034 	orhi	r5,r5,128
   1b4e0:	01000e04 	movi	r4,56
   1b4e4:	2080a316 	blt	r4,r2,1b774 <__subdf3+0x3c4>
   1b4e8:	010007c4 	movi	r4,31
   1b4ec:	2080c616 	blt	r4,r2,1b808 <__subdf3+0x458>
   1b4f0:	01000804 	movi	r4,32
   1b4f4:	2089c83a 	sub	r4,r4,r2
   1b4f8:	2910983a 	sll	r8,r5,r4
   1b4fc:	308ed83a 	srl	r7,r6,r2
   1b500:	3108983a 	sll	r4,r6,r4
   1b504:	2884d83a 	srl	r2,r5,r2
   1b508:	41ccb03a 	or	r6,r8,r7
   1b50c:	2008c03a 	cmpne	r4,r4,zero
   1b510:	310cb03a 	or	r6,r6,r4
   1b514:	898dc83a 	sub	r6,r17,r6
   1b518:	89a3803a 	cmpltu	r17,r17,r6
   1b51c:	1887c83a 	sub	r3,r3,r2
   1b520:	1c47c83a 	sub	r3,r3,r17
   1b524:	3023883a 	mov	r17,r6
   1b528:	1880202c 	andhi	r2,r3,128
   1b52c:	10002326 	beq	r2,zero,1b5bc <__subdf3+0x20c>
   1b530:	04c02034 	movhi	r19,128
   1b534:	9cffffc4 	addi	r19,r19,-1
   1b538:	1ce6703a 	and	r19,r3,r19
   1b53c:	98007a26 	beq	r19,zero,1b728 <__subdf3+0x378>
   1b540:	9809883a 	mov	r4,r19
   1b544:	001beb00 	call	1beb0 <__clzsi2>
   1b548:	113ffe04 	addi	r4,r2,-8
   1b54c:	00c007c4 	movi	r3,31
   1b550:	19007b16 	blt	r3,r4,1b740 <__subdf3+0x390>
   1b554:	00800804 	movi	r2,32
   1b558:	1105c83a 	sub	r2,r2,r4
   1b55c:	8884d83a 	srl	r2,r17,r2
   1b560:	9906983a 	sll	r3,r19,r4
   1b564:	8922983a 	sll	r17,r17,r4
   1b568:	10c4b03a 	or	r2,r2,r3
   1b56c:	24007816 	blt	r4,r16,1b750 <__subdf3+0x3a0>
   1b570:	2421c83a 	sub	r16,r4,r16
   1b574:	80c00044 	addi	r3,r16,1
   1b578:	010007c4 	movi	r4,31
   1b57c:	20c09516 	blt	r4,r3,1b7d4 <__subdf3+0x424>
   1b580:	01400804 	movi	r5,32
   1b584:	28cbc83a 	sub	r5,r5,r3
   1b588:	88c8d83a 	srl	r4,r17,r3
   1b58c:	8962983a 	sll	r17,r17,r5
   1b590:	114a983a 	sll	r5,r2,r5
   1b594:	10c6d83a 	srl	r3,r2,r3
   1b598:	8804c03a 	cmpne	r2,r17,zero
   1b59c:	290ab03a 	or	r5,r5,r4
   1b5a0:	28a2b03a 	or	r17,r5,r2
   1b5a4:	0021883a 	mov	r16,zero
   1b5a8:	003fa206 	br	1b434 <_gp+0xffff61d8>
   1b5ac:	2090b03a 	or	r8,r4,r2
   1b5b0:	40018e26 	beq	r8,zero,1bbec <__subdf3+0x83c>
   1b5b4:	1007883a 	mov	r3,r2
   1b5b8:	2023883a 	mov	r17,r4
   1b5bc:	888001cc 	andi	r2,r17,7
   1b5c0:	103f9e1e 	bne	r2,zero,1b43c <_gp+0xffff61e0>
   1b5c4:	1804977a 	slli	r2,r3,29
   1b5c8:	8822d0fa 	srli	r17,r17,3
   1b5cc:	1810d0fa 	srli	r8,r3,3
   1b5d0:	9100004c 	andi	r4,r18,1
   1b5d4:	1444b03a 	or	r2,r2,r17
   1b5d8:	00c1ffc4 	movi	r3,2047
   1b5dc:	80c02826 	beq	r16,r3,1b680 <__subdf3+0x2d0>
   1b5e0:	01400434 	movhi	r5,16
   1b5e4:	297fffc4 	addi	r5,r5,-1
   1b5e8:	80e0703a 	and	r16,r16,r3
   1b5ec:	414a703a 	and	r5,r8,r5
   1b5f0:	003fa806 	br	1b494 <_gp+0xffff6238>
   1b5f4:	0080630e 	bge	zero,r2,1b784 <__subdf3+0x3d4>
   1b5f8:	48003026 	beq	r9,zero,1b6bc <__subdf3+0x30c>
   1b5fc:	0101ffc4 	movi	r4,2047
   1b600:	813f8c26 	beq	r16,r4,1b434 <_gp+0xffff61d8>
   1b604:	29402034 	orhi	r5,r5,128
   1b608:	01000e04 	movi	r4,56
   1b60c:	2080a90e 	bge	r4,r2,1b8b4 <__subdf3+0x504>
   1b610:	298cb03a 	or	r6,r5,r6
   1b614:	3012c03a 	cmpne	r9,r6,zero
   1b618:	0005883a 	mov	r2,zero
   1b61c:	4c53883a 	add	r9,r9,r17
   1b620:	4c63803a 	cmpltu	r17,r9,r17
   1b624:	10c7883a 	add	r3,r2,r3
   1b628:	88c7883a 	add	r3,r17,r3
   1b62c:	4823883a 	mov	r17,r9
   1b630:	1880202c 	andhi	r2,r3,128
   1b634:	1000d026 	beq	r2,zero,1b978 <__subdf3+0x5c8>
   1b638:	84000044 	addi	r16,r16,1
   1b63c:	0081ffc4 	movi	r2,2047
   1b640:	8080fe26 	beq	r16,r2,1ba3c <__subdf3+0x68c>
   1b644:	00bfe034 	movhi	r2,65408
   1b648:	10bfffc4 	addi	r2,r2,-1
   1b64c:	1886703a 	and	r3,r3,r2
   1b650:	880ad07a 	srli	r5,r17,1
   1b654:	180497fa 	slli	r2,r3,31
   1b658:	8900004c 	andi	r4,r17,1
   1b65c:	2922b03a 	or	r17,r5,r4
   1b660:	1806d07a 	srli	r3,r3,1
   1b664:	1462b03a 	or	r17,r2,r17
   1b668:	3825883a 	mov	r18,r7
   1b66c:	003f7106 	br	1b434 <_gp+0xffff61d8>
   1b670:	2984b03a 	or	r2,r5,r6
   1b674:	103f6826 	beq	r2,zero,1b418 <_gp+0xffff61bc>
   1b678:	39c03fcc 	andi	r7,r7,255
   1b67c:	003f6706 	br	1b41c <_gp+0xffff61c0>
   1b680:	4086b03a 	or	r3,r8,r2
   1b684:	18015226 	beq	r3,zero,1bbd0 <__subdf3+0x820>
   1b688:	00c00434 	movhi	r3,16
   1b68c:	41400234 	orhi	r5,r8,8
   1b690:	18ffffc4 	addi	r3,r3,-1
   1b694:	28ca703a 	and	r5,r5,r3
   1b698:	003f7e06 	br	1b494 <_gp+0xffff6238>
   1b69c:	10bfffc4 	addi	r2,r2,-1
   1b6a0:	1000491e 	bne	r2,zero,1b7c8 <__subdf3+0x418>
   1b6a4:	898fc83a 	sub	r7,r17,r6
   1b6a8:	89e3803a 	cmpltu	r17,r17,r7
   1b6ac:	1947c83a 	sub	r3,r3,r5
   1b6b0:	1c47c83a 	sub	r3,r3,r17
   1b6b4:	3823883a 	mov	r17,r7
   1b6b8:	003f9b06 	br	1b528 <_gp+0xffff62cc>
   1b6bc:	2988b03a 	or	r4,r5,r6
   1b6c0:	203f5c26 	beq	r4,zero,1b434 <_gp+0xffff61d8>
   1b6c4:	10bfffc4 	addi	r2,r2,-1
   1b6c8:	1000931e 	bne	r2,zero,1b918 <__subdf3+0x568>
   1b6cc:	898d883a 	add	r6,r17,r6
   1b6d0:	3463803a 	cmpltu	r17,r6,r17
   1b6d4:	1947883a 	add	r3,r3,r5
   1b6d8:	88c7883a 	add	r3,r17,r3
   1b6dc:	3023883a 	mov	r17,r6
   1b6e0:	003fd306 	br	1b630 <_gp+0xffff63d4>
   1b6e4:	1000541e 	bne	r2,zero,1b838 <__subdf3+0x488>
   1b6e8:	80800044 	addi	r2,r16,1
   1b6ec:	1081ffcc 	andi	r2,r2,2047
   1b6f0:	01000044 	movi	r4,1
   1b6f4:	2080a20e 	bge	r4,r2,1b980 <__subdf3+0x5d0>
   1b6f8:	8989c83a 	sub	r4,r17,r6
   1b6fc:	8905803a 	cmpltu	r2,r17,r4
   1b700:	1967c83a 	sub	r19,r3,r5
   1b704:	98a7c83a 	sub	r19,r19,r2
   1b708:	9880202c 	andhi	r2,r19,128
   1b70c:	10006326 	beq	r2,zero,1b89c <__subdf3+0x4ec>
   1b710:	3463c83a 	sub	r17,r6,r17
   1b714:	28c7c83a 	sub	r3,r5,r3
   1b718:	344d803a 	cmpltu	r6,r6,r17
   1b71c:	19a7c83a 	sub	r19,r3,r6
   1b720:	3825883a 	mov	r18,r7
   1b724:	983f861e 	bne	r19,zero,1b540 <_gp+0xffff62e4>
   1b728:	8809883a 	mov	r4,r17
   1b72c:	001beb00 	call	1beb0 <__clzsi2>
   1b730:	10800804 	addi	r2,r2,32
   1b734:	113ffe04 	addi	r4,r2,-8
   1b738:	00c007c4 	movi	r3,31
   1b73c:	193f850e 	bge	r3,r4,1b554 <_gp+0xffff62f8>
   1b740:	10bff604 	addi	r2,r2,-40
   1b744:	8884983a 	sll	r2,r17,r2
   1b748:	0023883a 	mov	r17,zero
   1b74c:	243f880e 	bge	r4,r16,1b570 <_gp+0xffff6314>
   1b750:	00ffe034 	movhi	r3,65408
   1b754:	18ffffc4 	addi	r3,r3,-1
   1b758:	8121c83a 	sub	r16,r16,r4
   1b75c:	10c6703a 	and	r3,r2,r3
   1b760:	003f3406 	br	1b434 <_gp+0xffff61d8>
   1b764:	9100004c 	andi	r4,r18,1
   1b768:	000b883a 	mov	r5,zero
   1b76c:	0005883a 	mov	r2,zero
   1b770:	003f4806 	br	1b494 <_gp+0xffff6238>
   1b774:	298cb03a 	or	r6,r5,r6
   1b778:	300cc03a 	cmpne	r6,r6,zero
   1b77c:	0005883a 	mov	r2,zero
   1b780:	003f6406 	br	1b514 <_gp+0xffff62b8>
   1b784:	10009a1e 	bne	r2,zero,1b9f0 <__subdf3+0x640>
   1b788:	82400044 	addi	r9,r16,1
   1b78c:	4881ffcc 	andi	r2,r9,2047
   1b790:	02800044 	movi	r10,1
   1b794:	5080670e 	bge	r10,r2,1b934 <__subdf3+0x584>
   1b798:	0081ffc4 	movi	r2,2047
   1b79c:	4880af26 	beq	r9,r2,1ba5c <__subdf3+0x6ac>
   1b7a0:	898d883a 	add	r6,r17,r6
   1b7a4:	1945883a 	add	r2,r3,r5
   1b7a8:	3447803a 	cmpltu	r3,r6,r17
   1b7ac:	1887883a 	add	r3,r3,r2
   1b7b0:	182297fa 	slli	r17,r3,31
   1b7b4:	300cd07a 	srli	r6,r6,1
   1b7b8:	1806d07a 	srli	r3,r3,1
   1b7bc:	4821883a 	mov	r16,r9
   1b7c0:	89a2b03a 	or	r17,r17,r6
   1b7c4:	003f1b06 	br	1b434 <_gp+0xffff61d8>
   1b7c8:	0101ffc4 	movi	r4,2047
   1b7cc:	813f441e 	bne	r16,r4,1b4e0 <_gp+0xffff6284>
   1b7d0:	003f1806 	br	1b434 <_gp+0xffff61d8>
   1b7d4:	843ff844 	addi	r16,r16,-31
   1b7d8:	01400804 	movi	r5,32
   1b7dc:	1408d83a 	srl	r4,r2,r16
   1b7e0:	19405026 	beq	r3,r5,1b924 <__subdf3+0x574>
   1b7e4:	01401004 	movi	r5,64
   1b7e8:	28c7c83a 	sub	r3,r5,r3
   1b7ec:	10c4983a 	sll	r2,r2,r3
   1b7f0:	88a2b03a 	or	r17,r17,r2
   1b7f4:	8822c03a 	cmpne	r17,r17,zero
   1b7f8:	2462b03a 	or	r17,r4,r17
   1b7fc:	0007883a 	mov	r3,zero
   1b800:	0021883a 	mov	r16,zero
   1b804:	003f6d06 	br	1b5bc <_gp+0xffff6360>
   1b808:	11fff804 	addi	r7,r2,-32
   1b80c:	01000804 	movi	r4,32
   1b810:	29ced83a 	srl	r7,r5,r7
   1b814:	11004526 	beq	r2,r4,1b92c <__subdf3+0x57c>
   1b818:	01001004 	movi	r4,64
   1b81c:	2089c83a 	sub	r4,r4,r2
   1b820:	2904983a 	sll	r2,r5,r4
   1b824:	118cb03a 	or	r6,r2,r6
   1b828:	300cc03a 	cmpne	r6,r6,zero
   1b82c:	398cb03a 	or	r6,r7,r6
   1b830:	0005883a 	mov	r2,zero
   1b834:	003f3706 	br	1b514 <_gp+0xffff62b8>
   1b838:	80002a26 	beq	r16,zero,1b8e4 <__subdf3+0x534>
   1b83c:	0101ffc4 	movi	r4,2047
   1b840:	49006626 	beq	r9,r4,1b9dc <__subdf3+0x62c>
   1b844:	0085c83a 	sub	r2,zero,r2
   1b848:	18c02034 	orhi	r3,r3,128
   1b84c:	01000e04 	movi	r4,56
   1b850:	20807e16 	blt	r4,r2,1ba4c <__subdf3+0x69c>
   1b854:	010007c4 	movi	r4,31
   1b858:	2080e716 	blt	r4,r2,1bbf8 <__subdf3+0x848>
   1b85c:	01000804 	movi	r4,32
   1b860:	2089c83a 	sub	r4,r4,r2
   1b864:	1914983a 	sll	r10,r3,r4
   1b868:	8890d83a 	srl	r8,r17,r2
   1b86c:	8908983a 	sll	r4,r17,r4
   1b870:	1884d83a 	srl	r2,r3,r2
   1b874:	5222b03a 	or	r17,r10,r8
   1b878:	2006c03a 	cmpne	r3,r4,zero
   1b87c:	88e2b03a 	or	r17,r17,r3
   1b880:	3463c83a 	sub	r17,r6,r17
   1b884:	2885c83a 	sub	r2,r5,r2
   1b888:	344d803a 	cmpltu	r6,r6,r17
   1b88c:	1187c83a 	sub	r3,r2,r6
   1b890:	4821883a 	mov	r16,r9
   1b894:	3825883a 	mov	r18,r7
   1b898:	003f2306 	br	1b528 <_gp+0xffff62cc>
   1b89c:	24d0b03a 	or	r8,r4,r19
   1b8a0:	40001b1e 	bne	r8,zero,1b910 <__subdf3+0x560>
   1b8a4:	0005883a 	mov	r2,zero
   1b8a8:	0009883a 	mov	r4,zero
   1b8ac:	0021883a 	mov	r16,zero
   1b8b0:	003f4906 	br	1b5d8 <_gp+0xffff637c>
   1b8b4:	010007c4 	movi	r4,31
   1b8b8:	20803a16 	blt	r4,r2,1b9a4 <__subdf3+0x5f4>
   1b8bc:	01000804 	movi	r4,32
   1b8c0:	2089c83a 	sub	r4,r4,r2
   1b8c4:	2912983a 	sll	r9,r5,r4
   1b8c8:	3090d83a 	srl	r8,r6,r2
   1b8cc:	3108983a 	sll	r4,r6,r4
   1b8d0:	2884d83a 	srl	r2,r5,r2
   1b8d4:	4a12b03a 	or	r9,r9,r8
   1b8d8:	2008c03a 	cmpne	r4,r4,zero
   1b8dc:	4912b03a 	or	r9,r9,r4
   1b8e0:	003f4e06 	br	1b61c <_gp+0xffff63c0>
   1b8e4:	1c48b03a 	or	r4,r3,r17
   1b8e8:	20003c26 	beq	r4,zero,1b9dc <__subdf3+0x62c>
   1b8ec:	0084303a 	nor	r2,zero,r2
   1b8f0:	1000381e 	bne	r2,zero,1b9d4 <__subdf3+0x624>
   1b8f4:	3463c83a 	sub	r17,r6,r17
   1b8f8:	28c5c83a 	sub	r2,r5,r3
   1b8fc:	344d803a 	cmpltu	r6,r6,r17
   1b900:	1187c83a 	sub	r3,r2,r6
   1b904:	4821883a 	mov	r16,r9
   1b908:	3825883a 	mov	r18,r7
   1b90c:	003f0606 	br	1b528 <_gp+0xffff62cc>
   1b910:	2023883a 	mov	r17,r4
   1b914:	003f0906 	br	1b53c <_gp+0xffff62e0>
   1b918:	0101ffc4 	movi	r4,2047
   1b91c:	813f3a1e 	bne	r16,r4,1b608 <_gp+0xffff63ac>
   1b920:	003ec406 	br	1b434 <_gp+0xffff61d8>
   1b924:	0005883a 	mov	r2,zero
   1b928:	003fb106 	br	1b7f0 <_gp+0xffff6594>
   1b92c:	0005883a 	mov	r2,zero
   1b930:	003fbc06 	br	1b824 <_gp+0xffff65c8>
   1b934:	1c44b03a 	or	r2,r3,r17
   1b938:	80008e1e 	bne	r16,zero,1bb74 <__subdf3+0x7c4>
   1b93c:	1000c826 	beq	r2,zero,1bc60 <__subdf3+0x8b0>
   1b940:	2984b03a 	or	r2,r5,r6
   1b944:	103ebb26 	beq	r2,zero,1b434 <_gp+0xffff61d8>
   1b948:	8989883a 	add	r4,r17,r6
   1b94c:	1945883a 	add	r2,r3,r5
   1b950:	2447803a 	cmpltu	r3,r4,r17
   1b954:	1887883a 	add	r3,r3,r2
   1b958:	1880202c 	andhi	r2,r3,128
   1b95c:	2023883a 	mov	r17,r4
   1b960:	103f1626 	beq	r2,zero,1b5bc <_gp+0xffff6360>
   1b964:	00bfe034 	movhi	r2,65408
   1b968:	10bfffc4 	addi	r2,r2,-1
   1b96c:	5021883a 	mov	r16,r10
   1b970:	1886703a 	and	r3,r3,r2
   1b974:	003eaf06 	br	1b434 <_gp+0xffff61d8>
   1b978:	3825883a 	mov	r18,r7
   1b97c:	003f0f06 	br	1b5bc <_gp+0xffff6360>
   1b980:	1c44b03a 	or	r2,r3,r17
   1b984:	8000251e 	bne	r16,zero,1ba1c <__subdf3+0x66c>
   1b988:	1000661e 	bne	r2,zero,1bb24 <__subdf3+0x774>
   1b98c:	2990b03a 	or	r8,r5,r6
   1b990:	40009626 	beq	r8,zero,1bbec <__subdf3+0x83c>
   1b994:	2807883a 	mov	r3,r5
   1b998:	3023883a 	mov	r17,r6
   1b99c:	3825883a 	mov	r18,r7
   1b9a0:	003ea406 	br	1b434 <_gp+0xffff61d8>
   1b9a4:	127ff804 	addi	r9,r2,-32
   1b9a8:	01000804 	movi	r4,32
   1b9ac:	2a52d83a 	srl	r9,r5,r9
   1b9b0:	11008c26 	beq	r2,r4,1bbe4 <__subdf3+0x834>
   1b9b4:	01001004 	movi	r4,64
   1b9b8:	2085c83a 	sub	r2,r4,r2
   1b9bc:	2884983a 	sll	r2,r5,r2
   1b9c0:	118cb03a 	or	r6,r2,r6
   1b9c4:	300cc03a 	cmpne	r6,r6,zero
   1b9c8:	4992b03a 	or	r9,r9,r6
   1b9cc:	0005883a 	mov	r2,zero
   1b9d0:	003f1206 	br	1b61c <_gp+0xffff63c0>
   1b9d4:	0101ffc4 	movi	r4,2047
   1b9d8:	493f9c1e 	bne	r9,r4,1b84c <_gp+0xffff65f0>
   1b9dc:	2807883a 	mov	r3,r5
   1b9e0:	3023883a 	mov	r17,r6
   1b9e4:	4821883a 	mov	r16,r9
   1b9e8:	3825883a 	mov	r18,r7
   1b9ec:	003e9106 	br	1b434 <_gp+0xffff61d8>
   1b9f0:	80001f1e 	bne	r16,zero,1ba70 <__subdf3+0x6c0>
   1b9f4:	1c48b03a 	or	r4,r3,r17
   1b9f8:	20005a26 	beq	r4,zero,1bb64 <__subdf3+0x7b4>
   1b9fc:	0084303a 	nor	r2,zero,r2
   1ba00:	1000561e 	bne	r2,zero,1bb5c <__subdf3+0x7ac>
   1ba04:	89a3883a 	add	r17,r17,r6
   1ba08:	1945883a 	add	r2,r3,r5
   1ba0c:	898d803a 	cmpltu	r6,r17,r6
   1ba10:	3087883a 	add	r3,r6,r2
   1ba14:	4821883a 	mov	r16,r9
   1ba18:	003f0506 	br	1b630 <_gp+0xffff63d4>
   1ba1c:	10002b1e 	bne	r2,zero,1bacc <__subdf3+0x71c>
   1ba20:	2984b03a 	or	r2,r5,r6
   1ba24:	10008026 	beq	r2,zero,1bc28 <__subdf3+0x878>
   1ba28:	2807883a 	mov	r3,r5
   1ba2c:	3023883a 	mov	r17,r6
   1ba30:	3825883a 	mov	r18,r7
   1ba34:	0401ffc4 	movi	r16,2047
   1ba38:	003e7e06 	br	1b434 <_gp+0xffff61d8>
   1ba3c:	3809883a 	mov	r4,r7
   1ba40:	0011883a 	mov	r8,zero
   1ba44:	0005883a 	mov	r2,zero
   1ba48:	003ee306 	br	1b5d8 <_gp+0xffff637c>
   1ba4c:	1c62b03a 	or	r17,r3,r17
   1ba50:	8822c03a 	cmpne	r17,r17,zero
   1ba54:	0005883a 	mov	r2,zero
   1ba58:	003f8906 	br	1b880 <_gp+0xffff6624>
   1ba5c:	3809883a 	mov	r4,r7
   1ba60:	4821883a 	mov	r16,r9
   1ba64:	0011883a 	mov	r8,zero
   1ba68:	0005883a 	mov	r2,zero
   1ba6c:	003eda06 	br	1b5d8 <_gp+0xffff637c>
   1ba70:	0101ffc4 	movi	r4,2047
   1ba74:	49003b26 	beq	r9,r4,1bb64 <__subdf3+0x7b4>
   1ba78:	0085c83a 	sub	r2,zero,r2
   1ba7c:	18c02034 	orhi	r3,r3,128
   1ba80:	01000e04 	movi	r4,56
   1ba84:	20806e16 	blt	r4,r2,1bc40 <__subdf3+0x890>
   1ba88:	010007c4 	movi	r4,31
   1ba8c:	20807716 	blt	r4,r2,1bc6c <__subdf3+0x8bc>
   1ba90:	01000804 	movi	r4,32
   1ba94:	2089c83a 	sub	r4,r4,r2
   1ba98:	1914983a 	sll	r10,r3,r4
   1ba9c:	8890d83a 	srl	r8,r17,r2
   1baa0:	8908983a 	sll	r4,r17,r4
   1baa4:	1884d83a 	srl	r2,r3,r2
   1baa8:	5222b03a 	or	r17,r10,r8
   1baac:	2006c03a 	cmpne	r3,r4,zero
   1bab0:	88e2b03a 	or	r17,r17,r3
   1bab4:	89a3883a 	add	r17,r17,r6
   1bab8:	1145883a 	add	r2,r2,r5
   1babc:	898d803a 	cmpltu	r6,r17,r6
   1bac0:	3087883a 	add	r3,r6,r2
   1bac4:	4821883a 	mov	r16,r9
   1bac8:	003ed906 	br	1b630 <_gp+0xffff63d4>
   1bacc:	2984b03a 	or	r2,r5,r6
   1bad0:	10004226 	beq	r2,zero,1bbdc <__subdf3+0x82c>
   1bad4:	1808d0fa 	srli	r4,r3,3
   1bad8:	8822d0fa 	srli	r17,r17,3
   1badc:	1806977a 	slli	r3,r3,29
   1bae0:	2080022c 	andhi	r2,r4,8
   1bae4:	1c62b03a 	or	r17,r3,r17
   1bae8:	10000826 	beq	r2,zero,1bb0c <__subdf3+0x75c>
   1baec:	2812d0fa 	srli	r9,r5,3
   1baf0:	4880022c 	andhi	r2,r9,8
   1baf4:	1000051e 	bne	r2,zero,1bb0c <__subdf3+0x75c>
   1baf8:	300cd0fa 	srli	r6,r6,3
   1bafc:	2804977a 	slli	r2,r5,29
   1bb00:	4809883a 	mov	r4,r9
   1bb04:	3825883a 	mov	r18,r7
   1bb08:	11a2b03a 	or	r17,r2,r6
   1bb0c:	8806d77a 	srli	r3,r17,29
   1bb10:	200890fa 	slli	r4,r4,3
   1bb14:	882290fa 	slli	r17,r17,3
   1bb18:	0401ffc4 	movi	r16,2047
   1bb1c:	1906b03a 	or	r3,r3,r4
   1bb20:	003e4406 	br	1b434 <_gp+0xffff61d8>
   1bb24:	2984b03a 	or	r2,r5,r6
   1bb28:	103e4226 	beq	r2,zero,1b434 <_gp+0xffff61d8>
   1bb2c:	8989c83a 	sub	r4,r17,r6
   1bb30:	8911803a 	cmpltu	r8,r17,r4
   1bb34:	1945c83a 	sub	r2,r3,r5
   1bb38:	1205c83a 	sub	r2,r2,r8
   1bb3c:	1200202c 	andhi	r8,r2,128
   1bb40:	403e9a26 	beq	r8,zero,1b5ac <_gp+0xffff6350>
   1bb44:	3463c83a 	sub	r17,r6,r17
   1bb48:	28c5c83a 	sub	r2,r5,r3
   1bb4c:	344d803a 	cmpltu	r6,r6,r17
   1bb50:	1187c83a 	sub	r3,r2,r6
   1bb54:	3825883a 	mov	r18,r7
   1bb58:	003e3606 	br	1b434 <_gp+0xffff61d8>
   1bb5c:	0101ffc4 	movi	r4,2047
   1bb60:	493fc71e 	bne	r9,r4,1ba80 <_gp+0xffff6824>
   1bb64:	2807883a 	mov	r3,r5
   1bb68:	3023883a 	mov	r17,r6
   1bb6c:	4821883a 	mov	r16,r9
   1bb70:	003e3006 	br	1b434 <_gp+0xffff61d8>
   1bb74:	10003626 	beq	r2,zero,1bc50 <__subdf3+0x8a0>
   1bb78:	2984b03a 	or	r2,r5,r6
   1bb7c:	10001726 	beq	r2,zero,1bbdc <__subdf3+0x82c>
   1bb80:	1808d0fa 	srli	r4,r3,3
   1bb84:	8822d0fa 	srli	r17,r17,3
   1bb88:	1806977a 	slli	r3,r3,29
   1bb8c:	2080022c 	andhi	r2,r4,8
   1bb90:	1c62b03a 	or	r17,r3,r17
   1bb94:	10000726 	beq	r2,zero,1bbb4 <__subdf3+0x804>
   1bb98:	2812d0fa 	srli	r9,r5,3
   1bb9c:	4880022c 	andhi	r2,r9,8
   1bba0:	1000041e 	bne	r2,zero,1bbb4 <__subdf3+0x804>
   1bba4:	300cd0fa 	srli	r6,r6,3
   1bba8:	2804977a 	slli	r2,r5,29
   1bbac:	4809883a 	mov	r4,r9
   1bbb0:	11a2b03a 	or	r17,r2,r6
   1bbb4:	8806d77a 	srli	r3,r17,29
   1bbb8:	200890fa 	slli	r4,r4,3
   1bbbc:	882290fa 	slli	r17,r17,3
   1bbc0:	3825883a 	mov	r18,r7
   1bbc4:	1906b03a 	or	r3,r3,r4
   1bbc8:	0401ffc4 	movi	r16,2047
   1bbcc:	003e1906 	br	1b434 <_gp+0xffff61d8>
   1bbd0:	000b883a 	mov	r5,zero
   1bbd4:	0005883a 	mov	r2,zero
   1bbd8:	003e2e06 	br	1b494 <_gp+0xffff6238>
   1bbdc:	0401ffc4 	movi	r16,2047
   1bbe0:	003e1406 	br	1b434 <_gp+0xffff61d8>
   1bbe4:	0005883a 	mov	r2,zero
   1bbe8:	003f7506 	br	1b9c0 <_gp+0xffff6764>
   1bbec:	0005883a 	mov	r2,zero
   1bbf0:	0009883a 	mov	r4,zero
   1bbf4:	003e7806 	br	1b5d8 <_gp+0xffff637c>
   1bbf8:	123ff804 	addi	r8,r2,-32
   1bbfc:	01000804 	movi	r4,32
   1bc00:	1a10d83a 	srl	r8,r3,r8
   1bc04:	11002526 	beq	r2,r4,1bc9c <__subdf3+0x8ec>
   1bc08:	01001004 	movi	r4,64
   1bc0c:	2085c83a 	sub	r2,r4,r2
   1bc10:	1884983a 	sll	r2,r3,r2
   1bc14:	1444b03a 	or	r2,r2,r17
   1bc18:	1004c03a 	cmpne	r2,r2,zero
   1bc1c:	40a2b03a 	or	r17,r8,r2
   1bc20:	0005883a 	mov	r2,zero
   1bc24:	003f1606 	br	1b880 <_gp+0xffff6624>
   1bc28:	02000434 	movhi	r8,16
   1bc2c:	0009883a 	mov	r4,zero
   1bc30:	423fffc4 	addi	r8,r8,-1
   1bc34:	00bfffc4 	movi	r2,-1
   1bc38:	0401ffc4 	movi	r16,2047
   1bc3c:	003e6606 	br	1b5d8 <_gp+0xffff637c>
   1bc40:	1c62b03a 	or	r17,r3,r17
   1bc44:	8822c03a 	cmpne	r17,r17,zero
   1bc48:	0005883a 	mov	r2,zero
   1bc4c:	003f9906 	br	1bab4 <_gp+0xffff6858>
   1bc50:	2807883a 	mov	r3,r5
   1bc54:	3023883a 	mov	r17,r6
   1bc58:	0401ffc4 	movi	r16,2047
   1bc5c:	003df506 	br	1b434 <_gp+0xffff61d8>
   1bc60:	2807883a 	mov	r3,r5
   1bc64:	3023883a 	mov	r17,r6
   1bc68:	003df206 	br	1b434 <_gp+0xffff61d8>
   1bc6c:	123ff804 	addi	r8,r2,-32
   1bc70:	01000804 	movi	r4,32
   1bc74:	1a10d83a 	srl	r8,r3,r8
   1bc78:	11000a26 	beq	r2,r4,1bca4 <__subdf3+0x8f4>
   1bc7c:	01001004 	movi	r4,64
   1bc80:	2085c83a 	sub	r2,r4,r2
   1bc84:	1884983a 	sll	r2,r3,r2
   1bc88:	1444b03a 	or	r2,r2,r17
   1bc8c:	1004c03a 	cmpne	r2,r2,zero
   1bc90:	40a2b03a 	or	r17,r8,r2
   1bc94:	0005883a 	mov	r2,zero
   1bc98:	003f8606 	br	1bab4 <_gp+0xffff6858>
   1bc9c:	0005883a 	mov	r2,zero
   1bca0:	003fdc06 	br	1bc14 <_gp+0xffff69b8>
   1bca4:	0005883a 	mov	r2,zero
   1bca8:	003ff706 	br	1bc88 <_gp+0xffff6a2c>

0001bcac <__fixdfsi>:
   1bcac:	280cd53a 	srli	r6,r5,20
   1bcb0:	00c00434 	movhi	r3,16
   1bcb4:	18ffffc4 	addi	r3,r3,-1
   1bcb8:	3181ffcc 	andi	r6,r6,2047
   1bcbc:	01c0ff84 	movi	r7,1022
   1bcc0:	28c6703a 	and	r3,r5,r3
   1bcc4:	280ad7fa 	srli	r5,r5,31
   1bcc8:	3980120e 	bge	r7,r6,1bd14 <__fixdfsi+0x68>
   1bccc:	00810744 	movi	r2,1053
   1bcd0:	11800c16 	blt	r2,r6,1bd04 <__fixdfsi+0x58>
   1bcd4:	00810cc4 	movi	r2,1075
   1bcd8:	1185c83a 	sub	r2,r2,r6
   1bcdc:	01c007c4 	movi	r7,31
   1bce0:	18c00434 	orhi	r3,r3,16
   1bce4:	38800d16 	blt	r7,r2,1bd1c <__fixdfsi+0x70>
   1bce8:	31befb44 	addi	r6,r6,-1043
   1bcec:	2084d83a 	srl	r2,r4,r2
   1bcf0:	1986983a 	sll	r3,r3,r6
   1bcf4:	1884b03a 	or	r2,r3,r2
   1bcf8:	28000726 	beq	r5,zero,1bd18 <__fixdfsi+0x6c>
   1bcfc:	0085c83a 	sub	r2,zero,r2
   1bd00:	f800283a 	ret
   1bd04:	00a00034 	movhi	r2,32768
   1bd08:	10bfffc4 	addi	r2,r2,-1
   1bd0c:	2885883a 	add	r2,r5,r2
   1bd10:	f800283a 	ret
   1bd14:	0005883a 	mov	r2,zero
   1bd18:	f800283a 	ret
   1bd1c:	008104c4 	movi	r2,1043
   1bd20:	1185c83a 	sub	r2,r2,r6
   1bd24:	1884d83a 	srl	r2,r3,r2
   1bd28:	003ff306 	br	1bcf8 <_gp+0xffff6a9c>

0001bd2c <__floatsidf>:
   1bd2c:	defffd04 	addi	sp,sp,-12
   1bd30:	dfc00215 	stw	ra,8(sp)
   1bd34:	dc400115 	stw	r17,4(sp)
   1bd38:	dc000015 	stw	r16,0(sp)
   1bd3c:	20002b26 	beq	r4,zero,1bdec <__floatsidf+0xc0>
   1bd40:	2023883a 	mov	r17,r4
   1bd44:	2020d7fa 	srli	r16,r4,31
   1bd48:	20002d16 	blt	r4,zero,1be00 <__floatsidf+0xd4>
   1bd4c:	8809883a 	mov	r4,r17
   1bd50:	001beb00 	call	1beb0 <__clzsi2>
   1bd54:	01410784 	movi	r5,1054
   1bd58:	288bc83a 	sub	r5,r5,r2
   1bd5c:	01010cc4 	movi	r4,1075
   1bd60:	2149c83a 	sub	r4,r4,r5
   1bd64:	00c007c4 	movi	r3,31
   1bd68:	1900160e 	bge	r3,r4,1bdc4 <__floatsidf+0x98>
   1bd6c:	00c104c4 	movi	r3,1043
   1bd70:	1947c83a 	sub	r3,r3,r5
   1bd74:	88c6983a 	sll	r3,r17,r3
   1bd78:	00800434 	movhi	r2,16
   1bd7c:	10bfffc4 	addi	r2,r2,-1
   1bd80:	1886703a 	and	r3,r3,r2
   1bd84:	2941ffcc 	andi	r5,r5,2047
   1bd88:	800d883a 	mov	r6,r16
   1bd8c:	0005883a 	mov	r2,zero
   1bd90:	280a953a 	slli	r5,r5,20
   1bd94:	31803fcc 	andi	r6,r6,255
   1bd98:	01000434 	movhi	r4,16
   1bd9c:	300c97fa 	slli	r6,r6,31
   1bda0:	213fffc4 	addi	r4,r4,-1
   1bda4:	1906703a 	and	r3,r3,r4
   1bda8:	1946b03a 	or	r3,r3,r5
   1bdac:	1986b03a 	or	r3,r3,r6
   1bdb0:	dfc00217 	ldw	ra,8(sp)
   1bdb4:	dc400117 	ldw	r17,4(sp)
   1bdb8:	dc000017 	ldw	r16,0(sp)
   1bdbc:	dec00304 	addi	sp,sp,12
   1bdc0:	f800283a 	ret
   1bdc4:	00c002c4 	movi	r3,11
   1bdc8:	1887c83a 	sub	r3,r3,r2
   1bdcc:	88c6d83a 	srl	r3,r17,r3
   1bdd0:	8904983a 	sll	r2,r17,r4
   1bdd4:	01000434 	movhi	r4,16
   1bdd8:	213fffc4 	addi	r4,r4,-1
   1bddc:	2941ffcc 	andi	r5,r5,2047
   1bde0:	1906703a 	and	r3,r3,r4
   1bde4:	800d883a 	mov	r6,r16
   1bde8:	003fe906 	br	1bd90 <_gp+0xffff6b34>
   1bdec:	000d883a 	mov	r6,zero
   1bdf0:	000b883a 	mov	r5,zero
   1bdf4:	0007883a 	mov	r3,zero
   1bdf8:	0005883a 	mov	r2,zero
   1bdfc:	003fe406 	br	1bd90 <_gp+0xffff6b34>
   1be00:	0123c83a 	sub	r17,zero,r4
   1be04:	003fd106 	br	1bd4c <_gp+0xffff6af0>

0001be08 <__floatunsidf>:
   1be08:	defffe04 	addi	sp,sp,-8
   1be0c:	dc000015 	stw	r16,0(sp)
   1be10:	dfc00115 	stw	ra,4(sp)
   1be14:	2021883a 	mov	r16,r4
   1be18:	20002226 	beq	r4,zero,1bea4 <__floatunsidf+0x9c>
   1be1c:	001beb00 	call	1beb0 <__clzsi2>
   1be20:	01010784 	movi	r4,1054
   1be24:	2089c83a 	sub	r4,r4,r2
   1be28:	01810cc4 	movi	r6,1075
   1be2c:	310dc83a 	sub	r6,r6,r4
   1be30:	00c007c4 	movi	r3,31
   1be34:	1980120e 	bge	r3,r6,1be80 <__floatunsidf+0x78>
   1be38:	00c104c4 	movi	r3,1043
   1be3c:	1907c83a 	sub	r3,r3,r4
   1be40:	80ca983a 	sll	r5,r16,r3
   1be44:	00800434 	movhi	r2,16
   1be48:	10bfffc4 	addi	r2,r2,-1
   1be4c:	2101ffcc 	andi	r4,r4,2047
   1be50:	0021883a 	mov	r16,zero
   1be54:	288a703a 	and	r5,r5,r2
   1be58:	2008953a 	slli	r4,r4,20
   1be5c:	00c00434 	movhi	r3,16
   1be60:	18ffffc4 	addi	r3,r3,-1
   1be64:	28c6703a 	and	r3,r5,r3
   1be68:	8005883a 	mov	r2,r16
   1be6c:	1906b03a 	or	r3,r3,r4
   1be70:	dfc00117 	ldw	ra,4(sp)
   1be74:	dc000017 	ldw	r16,0(sp)
   1be78:	dec00204 	addi	sp,sp,8
   1be7c:	f800283a 	ret
   1be80:	00c002c4 	movi	r3,11
   1be84:	188bc83a 	sub	r5,r3,r2
   1be88:	814ad83a 	srl	r5,r16,r5
   1be8c:	00c00434 	movhi	r3,16
   1be90:	18ffffc4 	addi	r3,r3,-1
   1be94:	81a0983a 	sll	r16,r16,r6
   1be98:	2101ffcc 	andi	r4,r4,2047
   1be9c:	28ca703a 	and	r5,r5,r3
   1bea0:	003fed06 	br	1be58 <_gp+0xffff6bfc>
   1bea4:	0009883a 	mov	r4,zero
   1bea8:	000b883a 	mov	r5,zero
   1beac:	003fea06 	br	1be58 <_gp+0xffff6bfc>

0001beb0 <__clzsi2>:
   1beb0:	00bfffd4 	movui	r2,65535
   1beb4:	11000536 	bltu	r2,r4,1becc <__clzsi2+0x1c>
   1beb8:	00803fc4 	movi	r2,255
   1bebc:	11000f36 	bltu	r2,r4,1befc <__clzsi2+0x4c>
   1bec0:	00800804 	movi	r2,32
   1bec4:	0007883a 	mov	r3,zero
   1bec8:	00000506 	br	1bee0 <__clzsi2+0x30>
   1becc:	00804034 	movhi	r2,256
   1bed0:	10bfffc4 	addi	r2,r2,-1
   1bed4:	11000c2e 	bgeu	r2,r4,1bf08 <__clzsi2+0x58>
   1bed8:	00800204 	movi	r2,8
   1bedc:	00c00604 	movi	r3,24
   1bee0:	20c8d83a 	srl	r4,r4,r3
   1bee4:	00c000b4 	movhi	r3,2
   1bee8:	18f20404 	addi	r3,r3,-14320
   1beec:	1909883a 	add	r4,r3,r4
   1bef0:	20c00003 	ldbu	r3,0(r4)
   1bef4:	10c5c83a 	sub	r2,r2,r3
   1bef8:	f800283a 	ret
   1befc:	00800604 	movi	r2,24
   1bf00:	00c00204 	movi	r3,8
   1bf04:	003ff606 	br	1bee0 <_gp+0xffff6c84>
   1bf08:	00800404 	movi	r2,16
   1bf0c:	1007883a 	mov	r3,r2
   1bf10:	003ff306 	br	1bee0 <_gp+0xffff6c84>

0001bf14 <alt_getchar>:
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
   1bf14:	008000b4 	movhi	r2,2
   1bf18:	10b48104 	addi	r2,r2,-11772
   1bf1c:	11c00217 	ldw	r7,8(r2)
 * Uses the ALT_DRIVER_READ() macro to call directly to driver if available.
 * Otherwise, uses newlib provided getchar() routine.
 */
int 
alt_getchar(void)
{
   1bf20:	defffe04 	addi	sp,sp,-8
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
   1bf24:	010000b4 	movhi	r4,2
   1bf28:	01800044 	movi	r6,1
   1bf2c:	d80b883a 	mov	r5,sp
   1bf30:	21349e04 	addi	r4,r4,-11656
 * Uses the ALT_DRIVER_READ() macro to call directly to driver if available.
 * Otherwise, uses newlib provided getchar() routine.
 */
int 
alt_getchar(void)
{
   1bf34:	dfc00115 	stw	ra,4(sp)
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
   1bf38:	001c2f00 	call	1c2f0 <altera_avalon_jtag_uart_read>
   1bf3c:	0080020e 	bge	zero,r2,1bf48 <alt_getchar+0x34>
        return -1;
    }
    return c;
   1bf40:	d8800007 	ldb	r2,0(sp)
   1bf44:	00000106 	br	1bf4c <alt_getchar+0x38>
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
        return -1;
   1bf48:	00bfffc4 	movi	r2,-1
    return c;
#else
    return getchar();
#endif
#endif
}
   1bf4c:	dfc00117 	ldw	ra,4(sp)
   1bf50:	dec00204 	addi	sp,sp,8
   1bf54:	f800283a 	ret

0001bf58 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   1bf58:	deffff04 	addi	sp,sp,-4
   1bf5c:	010000b4 	movhi	r4,2
   1bf60:	014000b4 	movhi	r5,2
   1bf64:	dfc00015 	stw	ra,0(sp)
   1bf68:	21324d04 	addi	r4,r4,-14028
   1bf6c:	2974a504 	addi	r5,r5,-11628

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   1bf70:	2140061e 	bne	r4,r5,1bf8c <alt_load+0x34>
   1bf74:	01000074 	movhi	r4,1
   1bf78:	01400074 	movhi	r5,1
   1bf7c:	21000804 	addi	r4,r4,32
   1bf80:	29400804 	addi	r5,r5,32
   1bf84:	2140121e 	bne	r4,r5,1bfd0 <alt_load+0x78>
   1bf88:	00000b06 	br	1bfb8 <alt_load+0x60>
   1bf8c:	00c000b4 	movhi	r3,2
   1bf90:	18f4a504 	addi	r3,r3,-11628
   1bf94:	1907c83a 	sub	r3,r3,r4
   1bf98:	0005883a 	mov	r2,zero
  {
    while( to != end )
   1bf9c:	10fff526 	beq	r2,r3,1bf74 <_gp+0xffff6d18>
    {
      *to++ = *from++;
   1bfa0:	114f883a 	add	r7,r2,r5
   1bfa4:	39c00017 	ldw	r7,0(r7)
   1bfa8:	110d883a 	add	r6,r2,r4
   1bfac:	10800104 	addi	r2,r2,4
   1bfb0:	31c00015 	stw	r7,0(r6)
   1bfb4:	003ff906 	br	1bf9c <_gp+0xffff6d40>
   1bfb8:	010000b4 	movhi	r4,2
   1bfbc:	014000b4 	movhi	r5,2
   1bfc0:	21310104 	addi	r4,r4,-15356
   1bfc4:	29710104 	addi	r5,r5,-15356

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   1bfc8:	2140101e 	bne	r4,r5,1c00c <alt_load+0xb4>
   1bfcc:	00000b06 	br	1bffc <alt_load+0xa4>
   1bfd0:	00c00074 	movhi	r3,1
   1bfd4:	18c00804 	addi	r3,r3,32
   1bfd8:	1907c83a 	sub	r3,r3,r4
   1bfdc:	0005883a 	mov	r2,zero
  {
    while( to != end )
   1bfe0:	10fff526 	beq	r2,r3,1bfb8 <_gp+0xffff6d5c>
    {
      *to++ = *from++;
   1bfe4:	114f883a 	add	r7,r2,r5
   1bfe8:	39c00017 	ldw	r7,0(r7)
   1bfec:	110d883a 	add	r6,r2,r4
   1bff0:	10800104 	addi	r2,r2,4
   1bff4:	31c00015 	stw	r7,0(r6)
   1bff8:	003ff906 	br	1bfe0 <_gp+0xffff6d84>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   1bffc:	001c3800 	call	1c380 <alt_dcache_flush_all>
  alt_icache_flush_all();
}
   1c000:	dfc00017 	ldw	ra,0(sp)
   1c004:	dec00104 	addi	sp,sp,4
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  alt_icache_flush_all();
   1c008:	001c3f81 	jmpi	1c3f8 <alt_icache_flush_all>
   1c00c:	00c000b4 	movhi	r3,2
   1c010:	18f24d04 	addi	r3,r3,-14028
   1c014:	1907c83a 	sub	r3,r3,r4

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   1c018:	0005883a 	mov	r2,zero
  {
    while( to != end )
   1c01c:	18bff726 	beq	r3,r2,1bffc <_gp+0xffff6da0>
    {
      *to++ = *from++;
   1c020:	114f883a 	add	r7,r2,r5
   1c024:	39c00017 	ldw	r7,0(r7)
   1c028:	110d883a 	add	r6,r2,r4
   1c02c:	10800104 	addi	r2,r2,4
   1c030:	31c00015 	stw	r7,0(r6)
   1c034:	003ff906 	br	1c01c <_gp+0xffff6dc0>

0001c038 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   1c038:	deffff04 	addi	sp,sp,-4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   1c03c:	0009883a 	mov	r4,zero
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   1c040:	dfc00015 	stw	ra,0(sp)
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   1c044:	001c2a80 	call	1c2a8 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   1c048:	001c2c80 	call	1c2c8 <alt_sys_init>
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
   1c04c:	d1a27b17 	ldw	r6,-30228(gp)
   1c050:	d1627c17 	ldw	r5,-30224(gp)
   1c054:	d1227d17 	ldw	r4,-30220(gp)
  close(STDOUT_FILENO);
  exit (result);
#endif

  ALT_LOG_PRINT_BOOT("[alt_main.c] After main - we should not be here?.\r\n");
}
   1c058:	dfc00017 	ldw	ra,0(sp)
   1c05c:	dec00104 	addi	sp,sp,4
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
   1c060:	0010bc41 	jmpi	10bc4 <main>

0001c064 <__malloc_lock>:
   1c064:	f800283a 	ret

0001c068 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   1c068:	f800283a 	ret

0001c06c <alt_printf>:
/* 
 * ALT printf function 
 */
void 
alt_printf(const char* fmt, ... )
{
   1c06c:	defff204 	addi	sp,sp,-56
   1c070:	2005883a 	mov	r2,r4
   1c074:	dfc00a15 	stw	ra,40(sp)
   1c078:	df000915 	stw	fp,36(sp)
   1c07c:	ddc00815 	stw	r23,32(sp)
   1c080:	dd800715 	stw	r22,28(sp)
   1c084:	dd400615 	stw	r21,24(sp)
   1c088:	dd000515 	stw	r20,20(sp)
   1c08c:	dcc00415 	stw	r19,16(sp)
   1c090:	dc800315 	stw	r18,12(sp)
   1c094:	dc400215 	stw	r17,8(sp)
   1c098:	dc000115 	stw	r16,4(sp)
   1c09c:	d9400b15 	stw	r5,44(sp)
   1c0a0:	d9800c15 	stw	r6,48(sp)
   1c0a4:	d9c00d15 	stw	r7,52(sp)
    w = fmt;
    while ((c = *w++) != 0)
    {
        /* If not a format escape character, just print  */
        /* character.  Otherwise, process format string. */
        if (c != '%')
   1c0a8:	04000944 	movi	r16,37
 */
void 
alt_printf(const char* fmt, ... )
{
	va_list args;
	va_start(args, fmt);
   1c0ac:	dd400b04 	addi	r21,sp,44
                if (c == '%')
                {
                    /* Process "%" escape sequence. */
                    alt_putchar(c);
                } 
                else if (c == 'c')
   1c0b0:	048018c4 	movi	r18,99
                {
                    int v = va_arg(args, int);
                    alt_putchar(v);
                }
                else if (c == 'x')
   1c0b4:	04c01e04 	movi	r19,120
                        else
                            c = 'a' + digit - 10;
                        alt_putchar(c);
                    }
                }
                else if (c == 's')
   1c0b8:	05001cc4 	movi	r20,115
    const char *w;
    char c;

    /* Process format string. */
    w = fmt;
    while ((c = *w++) != 0)
   1c0bc:	11000007 	ldb	r4,0(r2)
   1c0c0:	20003a26 	beq	r4,zero,1c1ac <alt_printf+0x140>
    {
        /* If not a format escape character, just print  */
        /* character.  Otherwise, process format string. */
        if (c != '%')
   1c0c4:	24000226 	beq	r4,r16,1c0d0 <alt_printf+0x64>
    const char *w;
    char c;

    /* Process format string. */
    w = fmt;
    while ((c = *w++) != 0)
   1c0c8:	14400044 	addi	r17,r2,1
   1c0cc:	00001406 	br	1c120 <alt_printf+0xb4>
        }
        else
        {
            /* Get format character.  If none     */
            /* available, processing is complete. */
            if ((c = *w++) != 0)
   1c0d0:	14400084 	addi	r17,r2,2
   1c0d4:	10800047 	ldb	r2,1(r2)
   1c0d8:	10003426 	beq	r2,zero,1c1ac <alt_printf+0x140>
            {
                if (c == '%')
   1c0dc:	1400021e 	bne	r2,r16,1c0e8 <alt_printf+0x7c>
                {
                    /* Process "%" escape sequence. */
                    alt_putchar(c);
   1c0e0:	8009883a 	mov	r4,r16
   1c0e4:	00000e06 	br	1c120 <alt_printf+0xb4>
                } 
                else if (c == 'c')
   1c0e8:	1480051e 	bne	r2,r18,1c100 <alt_printf+0x94>
                {
                    int v = va_arg(args, int);
                    alt_putchar(v);
   1c0ec:	a9000017 	ldw	r4,0(r21)
                    /* Process "%" escape sequence. */
                    alt_putchar(c);
                } 
                else if (c == 'c')
                {
                    int v = va_arg(args, int);
   1c0f0:	ad800104 	addi	r22,r21,4
   1c0f4:	b02b883a 	mov	r21,r22
                    alt_putchar(v);
   1c0f8:	001c1dc0 	call	1c1dc <alt_putchar>
   1c0fc:	00002906 	br	1c1a4 <alt_printf+0x138>
                }
                else if (c == 'x')
   1c100:	14c0201e 	bne	r2,r19,1c184 <alt_printf+0x118>
                {
                    /* Process hexadecimal number format. */
                    unsigned long v = va_arg(args, unsigned long);
   1c104:	adc00017 	ldw	r23,0(r21)
   1c108:	ad400104 	addi	r21,r21,4
                    unsigned long digit;
                    int digit_shift;

                    /* If the number value is zero, just print and continue. */
                    if (v == 0)
   1c10c:	b8000326 	beq	r23,zero,1c11c <alt_printf+0xb0>
   1c110:	05800704 	movi	r22,28
                        continue;
                    }

                    /* Find first non-zero digit. */
                    digit_shift = 28;
                    while (!(v & (0xF << digit_shift)))
   1c114:	00c003c4 	movi	r3,15
   1c118:	00000306 	br	1c128 <alt_printf+0xbc>
                    int digit_shift;

                    /* If the number value is zero, just print and continue. */
                    if (v == 0)
                    {
                        alt_putchar('0');
   1c11c:	01000c04 	movi	r4,48
   1c120:	001c1dc0 	call	1c1dc <alt_putchar>
                        continue;
   1c124:	00001f06 	br	1c1a4 <alt_printf+0x138>
                    }

                    /* Find first non-zero digit. */
                    digit_shift = 28;
                    while (!(v & (0xF << digit_shift)))
   1c128:	1d84983a 	sll	r2,r3,r22
   1c12c:	15c4703a 	and	r2,r2,r23
   1c130:	1000021e 	bne	r2,zero,1c13c <alt_printf+0xd0>
                        digit_shift -= 4;
   1c134:	b5bfff04 	addi	r22,r22,-4
   1c138:	003ffb06 	br	1c128 <_gp+0xffff6ecc>

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
                    {
                        digit = (v & (0xF << digit_shift)) >> digit_shift;
   1c13c:	070003c4 	movi	fp,15
                        if (digit <= 9)
   1c140:	00c00244 	movi	r3,9
                    digit_shift = 28;
                    while (!(v & (0xF << digit_shift)))
                        digit_shift -= 4;

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
   1c144:	b0001716 	blt	r22,zero,1c1a4 <alt_printf+0x138>
                    {
                        digit = (v & (0xF << digit_shift)) >> digit_shift;
   1c148:	e588983a 	sll	r4,fp,r22
   1c14c:	25c8703a 	and	r4,r4,r23
   1c150:	2588d83a 	srl	r4,r4,r22
                        if (digit <= 9)
   1c154:	19000236 	bltu	r3,r4,1c160 <alt_printf+0xf4>
                            c = '0' + digit;
   1c158:	21000c04 	addi	r4,r4,48
   1c15c:	00000106 	br	1c164 <alt_printf+0xf8>
                        else
                            c = 'a' + digit - 10;
   1c160:	210015c4 	addi	r4,r4,87
                        alt_putchar(c);
   1c164:	21003fcc 	andi	r4,r4,255
   1c168:	2100201c 	xori	r4,r4,128
   1c16c:	213fe004 	addi	r4,r4,-128
   1c170:	d8c00015 	stw	r3,0(sp)
   1c174:	001c1dc0 	call	1c1dc <alt_putchar>
                    digit_shift = 28;
                    while (!(v & (0xF << digit_shift)))
                        digit_shift -= 4;

                    /* Print digits. */
                    for (; digit_shift >= 0; digit_shift -= 4)
   1c178:	b5bfff04 	addi	r22,r22,-4
   1c17c:	d8c00017 	ldw	r3,0(sp)
   1c180:	003ff006 	br	1c144 <_gp+0xffff6ee8>
                        else
                            c = 'a' + digit - 10;
                        alt_putchar(c);
                    }
                }
                else if (c == 's')
   1c184:	1500071e 	bne	r2,r20,1c1a4 <alt_printf+0x138>
                {
                    /* Process string format. */
                    char *s = va_arg(args, char *);
   1c188:	ad800017 	ldw	r22,0(r21)
   1c18c:	ad400104 	addi	r21,r21,4

                    while(*s)
   1c190:	b1000007 	ldb	r4,0(r22)
   1c194:	20000326 	beq	r4,zero,1c1a4 <alt_printf+0x138>
                      alt_putchar(*s++);
   1c198:	b5800044 	addi	r22,r22,1
   1c19c:	001c1dc0 	call	1c1dc <alt_putchar>
   1c1a0:	003ffb06 	br	1c190 <_gp+0xffff6f34>
                    /* Process "%" escape sequence. */
                    alt_putchar(c);
                } 
                else if (c == 'c')
                {
                    int v = va_arg(args, int);
   1c1a4:	8805883a 	mov	r2,r17
   1c1a8:	003fc406 	br	1c0bc <_gp+0xffff6e60>
        }
    }
#ifdef ALT_SEMIHOSTING
    alt_putbufflush();
#endif
}
   1c1ac:	dfc00a17 	ldw	ra,40(sp)
   1c1b0:	df000917 	ldw	fp,36(sp)
   1c1b4:	ddc00817 	ldw	r23,32(sp)
   1c1b8:	dd800717 	ldw	r22,28(sp)
   1c1bc:	dd400617 	ldw	r21,24(sp)
   1c1c0:	dd000517 	ldw	r20,20(sp)
   1c1c4:	dcc00417 	ldw	r19,16(sp)
   1c1c8:	dc800317 	ldw	r18,12(sp)
   1c1cc:	dc400217 	ldw	r17,8(sp)
   1c1d0:	dc000117 	ldw	r16,4(sp)
   1c1d4:	dec00e04 	addi	sp,sp,56
   1c1d8:	f800283a 	ret

0001c1dc <alt_putchar>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided putchar() routine.
 */
int 
alt_putchar(int c)
{
   1c1dc:	defffd04 	addi	sp,sp,-12
   1c1e0:	dc000115 	stw	r16,4(sp)
	char        c1 = (char)(c & 0xff);
    return write(STDOUT_FILENO,&c1,1);
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    char        c1 = (char)(c & 0xff);
   1c1e4:	d9000005 	stb	r4,0(sp)
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided putchar() routine.
 */
int 
alt_putchar(int c)
{
   1c1e8:	2021883a 	mov	r16,r4
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    char        c1 = (char)(c & 0xff);

    if (ALT_DRIVER_WRITE(ALT_STDOUT_DEV, &c1, 1, 0) == -1) {
   1c1ec:	010000b4 	movhi	r4,2
   1c1f0:	000f883a 	mov	r7,zero
   1c1f4:	01800044 	movi	r6,1
   1c1f8:	d80b883a 	mov	r5,sp
   1c1fc:	21349e04 	addi	r4,r4,-11656
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided putchar() routine.
 */
int 
alt_putchar(int c)
{
   1c200:	dfc00215 	stw	ra,8(sp)
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    char        c1 = (char)(c & 0xff);

    if (ALT_DRIVER_WRITE(ALT_STDOUT_DEV, &c1, 1, 0) == -1) {
   1c204:	001c34c0 	call	1c34c <altera_avalon_jtag_uart_write>
   1c208:	00ffffc4 	movi	r3,-1
   1c20c:	10c00126 	beq	r2,r3,1c214 <alt_putchar+0x38>
        return -1;
    }
    return c;
   1c210:	8005883a 	mov	r2,r16
#else
    return putchar(c);
#endif
#endif
}
   1c214:	dfc00217 	ldw	ra,8(sp)
   1c218:	dc000117 	ldw	r16,4(sp)
   1c21c:	dec00304 	addi	sp,sp,12
   1c220:	f800283a 	ret

0001c224 <alt_putstr>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided fputs() routine.
 */
int 
alt_putstr(const char* str)
{
   1c224:	defffe04 	addi	sp,sp,-8
   1c228:	dc000015 	stw	r16,0(sp)
   1c22c:	dfc00115 	stw	ra,4(sp)
   1c230:	2021883a 	mov	r16,r4
#ifdef ALT_SEMIHOSTING
    return write(STDOUT_FILENO,str,strlen(str));
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
   1c234:	0016ce40 	call	16ce4 <strlen>
   1c238:	010000b4 	movhi	r4,2
   1c23c:	000f883a 	mov	r7,zero
   1c240:	100d883a 	mov	r6,r2
   1c244:	800b883a 	mov	r5,r16
   1c248:	21349e04 	addi	r4,r4,-11656
#else
    return fputs(str, stdout);
#endif
#endif
}
   1c24c:	dfc00117 	ldw	ra,4(sp)
   1c250:	dc000017 	ldw	r16,0(sp)
   1c254:	dec00204 	addi	sp,sp,8
#ifdef ALT_SEMIHOSTING
    return write(STDOUT_FILENO,str,strlen(str));
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
   1c258:	001c34c1 	jmpi	1c34c <altera_avalon_jtag_uart_write>

0001c25c <sbrk>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1c25c:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1c260:	00bfff84 	movi	r2,-2
   1c264:	2884703a 	and	r2,r5,r2
   1c268:	1001703a 	wrctl	status,r2
  char *prev_heap_end; 

  context = alt_irq_disable_all();

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   1c26c:	d0a00617 	ldw	r2,-32744(gp)
   1c270:	00ffff04 	movi	r3,-4
   1c274:	108000c4 	addi	r2,r2,3
   1c278:	10c4703a 	and	r2,r2,r3
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   1c27c:	00c000b4 	movhi	r3,2
  char *prev_heap_end; 

  context = alt_irq_disable_all();

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   1c280:	d0a00615 	stw	r2,-32744(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   1c284:	1109883a 	add	r4,r2,r4
   1c288:	18c00004 	addi	r3,r3,0
   1c28c:	1900032e 	bgeu	r3,r4,1c29c <sbrk+0x40>
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1c290:	2801703a 	wrctl	status,r5
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   1c294:	00bfffc4 	movi	r2,-1
   1c298:	f800283a 	ret
  }
#endif

  prev_heap_end = heap_end; 
  heap_end += incr; 
   1c29c:	d1200615 	stw	r4,-32744(gp)
   1c2a0:	2801703a 	wrctl	status,r5
#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
} 
   1c2a4:	f800283a 	ret

0001c2a8 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   1c2a8:	deffff04 	addi	sp,sp,-4
   1c2ac:	dfc00015 	stw	ra,0(sp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
   1c2b0:	001c3fc0 	call	1c3fc <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   1c2b4:	00800044 	movi	r2,1
   1c2b8:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   1c2bc:	dfc00017 	ldw	ra,0(sp)
   1c2c0:	dec00104 	addi	sp,sp,4
   1c2c4:	f800283a 	ret

0001c2c8 <alt_sys_init>:
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   1c2c8:	008000b4 	movhi	r2,2
   1c2cc:	10840004 	addi	r2,r2,4096
   1c2d0:	d0a27f15 	stw	r2,-30212(gp)

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   1c2d4:	010000b4 	movhi	r4,2
   1c2d8:	0080bef4 	movhi	r2,763
   1c2dc:	10bc2004 	addi	r2,r2,-3968
   1c2e0:	d1600904 	addi	r5,gp,-32732
   1c2e4:	21347604 	addi	r4,r4,-11816
   1c2e8:	d0a27e15 	stw	r2,-30216(gp)
   1c2ec:	001c38c1 	jmpi	1c38c <alt_dev_llist_insert>

0001c2f0 <altera_avalon_jtag_uart_read>:

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char* buffer, int space, int flags)
{
  unsigned int base = sp->base;
   1c2f0:	21000017 	ldw	r4,0(r4)

  char * ptr = buffer;
  char * end = buffer + space;
   1c2f4:	298d883a 	add	r6,r5,r6

  while (ptr < end)
   1c2f8:	2805883a 	mov	r2,r5

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    else if (ptr != buffer)
      break;
    else if(flags & O_NONBLOCK)
   1c2fc:	3a10000c 	andi	r8,r7,16384
  unsigned int base = sp->base;

  char * ptr = buffer;
  char * end = buffer + space;

  while (ptr < end)
   1c300:	11800b2e 	bgeu	r2,r6,1c330 <altera_avalon_jtag_uart_read+0x40>
  {
    unsigned int data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   1c304:	20c00037 	ldwio	r3,0(r4)

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
   1c308:	1a60000c 	andi	r9,r3,32768
   1c30c:	48000326 	beq	r9,zero,1c31c <altera_avalon_jtag_uart_read+0x2c>
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   1c310:	10c00005 	stb	r3,0(r2)
   1c314:	10800044 	addi	r2,r2,1
   1c318:	003ff906 	br	1c300 <_gp+0xffff70a4>
    else if (ptr != buffer)
   1c31c:	11400226 	beq	r2,r5,1c328 <altera_avalon_jtag_uart_read+0x38>
      break;   
    
  }

  if (ptr != buffer)
    return ptr - buffer;
   1c320:	1145c83a 	sub	r2,r2,r5
   1c324:	f800283a 	ret

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    else if (ptr != buffer)
      break;
    else if(flags & O_NONBLOCK)
   1c328:	403ff526 	beq	r8,zero,1c300 <_gp+0xffff70a4>
   1c32c:	00000106 	br	1c334 <altera_avalon_jtag_uart_read+0x44>
      break;   
    
  }

  if (ptr != buffer)
   1c330:	117ffb1e 	bne	r2,r5,1c320 <_gp+0xffff70c4>
    return ptr - buffer;
  else if (flags & O_NONBLOCK)
   1c334:	39d0000c 	andi	r7,r7,16384
   1c338:	3800021e 	bne	r7,zero,1c344 <altera_avalon_jtag_uart_read+0x54>
    return -EWOULDBLOCK;
  else
    return -EIO;
   1c33c:	00bffec4 	movi	r2,-5
   1c340:	f800283a 	ret
  }

  if (ptr != buffer)
    return ptr - buffer;
  else if (flags & O_NONBLOCK)
    return -EWOULDBLOCK;
   1c344:	00bffd44 	movi	r2,-11
  else
    return -EIO;
}
   1c348:	f800283a 	ret

0001c34c <altera_avalon_jtag_uart_write>:
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  unsigned int base = sp->base;
   1c34c:	21000017 	ldw	r4,0(r4)
 * one FIFOs worth of data.  But you said you didn't want to use interrupts :-)
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   1c350:	3005883a 	mov	r2,r6
  unsigned int base = sp->base;

  const char * end = ptr + count;
   1c354:	298d883a 	add	r6,r5,r6

  while (ptr < end)
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
   1c358:	21c00104 	addi	r7,r4,4
{
  unsigned int base = sp->base;

  const char * end = ptr + count;

  while (ptr < end)
   1c35c:	2980072e 	bgeu	r5,r6,1c37c <altera_avalon_jtag_uart_write+0x30>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
   1c360:	38c00037 	ldwio	r3,0(r7)
   1c364:	18ffffec 	andhi	r3,r3,65535
   1c368:	183ffc26 	beq	r3,zero,1c35c <_gp+0xffff7100>
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);
   1c36c:	28c00007 	ldb	r3,0(r5)
   1c370:	20c00035 	stwio	r3,0(r4)
   1c374:	29400044 	addi	r5,r5,1
   1c378:	003ff806 	br	1c35c <_gp+0xffff7100>

  return count;
}
   1c37c:	f800283a 	ret

0001c380 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   1c380:	f800283a 	ret

0001c384 <alt_dev_null_write>:
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  return len;
}
   1c384:	3005883a 	mov	r2,r6
   1c388:	f800283a 	ret

0001c38c <alt_dev_llist_insert>:
{
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   1c38c:	20000226 	beq	r4,zero,1c398 <alt_dev_llist_insert+0xc>
   1c390:	20800217 	ldw	r2,8(r4)
   1c394:	1000101e 	bne	r2,zero,1c3d8 <alt_dev_llist_insert+0x4c>

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  return ((alt_errno) ? alt_errno() : &errno);
   1c398:	d0a00d17 	ldw	r2,-32716(gp)
   1c39c:	10000926 	beq	r2,zero,1c3c4 <alt_dev_llist_insert+0x38>
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   1c3a0:	deffff04 	addi	sp,sp,-4
   1c3a4:	dfc00015 	stw	ra,0(sp)
   1c3a8:	103ee83a 	callr	r2
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  {
    ALT_ERRNO = EINVAL;
   1c3ac:	00c00584 	movi	r3,22
   1c3b0:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
   1c3b4:	00bffa84 	movi	r2,-22
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
}
   1c3b8:	dfc00017 	ldw	ra,0(sp)
   1c3bc:	dec00104 	addi	sp,sp,4
   1c3c0:	f800283a 	ret
   1c3c4:	d0a27704 	addi	r2,gp,-30244
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  {
    ALT_ERRNO = EINVAL;
   1c3c8:	00c00584 	movi	r3,22
   1c3cc:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
   1c3d0:	00bffa84 	movi	r2,-22
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
}
   1c3d4:	f800283a 	ret

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  entry->next     = list->next;
   1c3d8:	28800017 	ldw	r2,0(r5)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   1c3dc:	21400115 	stw	r5,4(r4)
  entry->next     = list->next;
   1c3e0:	20800015 	stw	r2,0(r4)

  list->next->previous = entry;
   1c3e4:	28800017 	ldw	r2,0(r5)
   1c3e8:	11000115 	stw	r4,4(r2)
  list->next           = entry;
   1c3ec:	29000015 	stw	r4,0(r5)
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
   1c3f0:	0005883a 	mov	r2,zero
   1c3f4:	f800283a 	ret

0001c3f8 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   1c3f8:	f800283a 	ret

0001c3fc <altera_nios2_gen2_irq_init>:
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    NIOS2_WRITE_IENABLE(0);
   1c3fc:	000170fa 	wrctl	ienable,zero
   1c400:	f800283a 	ret
