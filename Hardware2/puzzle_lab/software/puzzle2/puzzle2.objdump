
puzzle2.elf:     file format elf32-littlenios2
puzzle2.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010180

Program Header:
    LOAD off    0x00001000 vaddr 0x00010000 paddr 0x00010000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00010020 paddr 0x00010020 align 2**12
         filesz 0x0000e060 memsz 0x0000e060 flags r-x
    LOAD off    0x0000f080 vaddr 0x0001e080 paddr 0x0001e9ec align 2**12
         filesz 0x0000096c memsz 0x0000096c flags rw-
    LOAD off    0x00010358 vaddr 0x0001f358 paddr 0x0001f358 align 2**12
         filesz 0x00000000 memsz 0x000004cc flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00010000  00010000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000160  00010020  00010020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000db48  00010180  00010180  00001180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       000003b8  0001dcc8  0001dcc8  0000ecc8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       0000096c  0001e080  0001e9ec  0000f080  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000004cc  0001f358  0001f358  00010358  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory 00000000  0001f824  0001f824  0000f9ec  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0000f9ec  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 00000a50  00000000  00000000  0000fa10  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000154cc  00000000  00000000  00010460  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00005906  00000000  00000000  0002592c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00008117  00000000  00000000  0002b232  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000143c  00000000  00000000  0003334c  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    0000349d  00000000  00000000  00034788  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00017441  00000000  00000000  00037c25  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0004f068  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 00001538  00000000  00000000  0004f078  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  00052f96  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00052f99  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00052f9c  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00052f9d  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00052f9e  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  00052fa2  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  00052fa6  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00052faa  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  00052fb3  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00052fbc  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000c  00000000  00000000  00052fc5  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000023  00000000  00000000  00052fd1  2**0
                  CONTENTS, READONLY
 29 .jdi          00004a13  00000000  00000000  00052ff4  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     000717fd  00000000  00000000  00057a07  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00010000 l    d  .entry	00000000 .entry
00010020 l    d  .exceptions	00000000 .exceptions
00010180 l    d  .text	00000000 .text
0001dcc8 l    d  .rodata	00000000 .rodata
0001e080 l    d  .rwdata	00000000 .rwdata
0001f358 l    d  .bss	00000000 .bss
0001f824 l    d  .onchip_memory	00000000 .onchip_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../puzzle2_bsp//obj/HAL/src/crt0.o
000101b8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 DE_seven_segment_display.c
0001dd54 l     O .rodata	0000002b CSWTCH.30
0001f3e8 l     O .bss	00000014 filter_x.3956
0001f3d4 l     O .bss	00000014 filter_y.3957
0001dd80 l     O .rodata	00000028 h.3955
00000000 l    df *ABS*	00000000 w_log.c
00000000 l    df *ABS*	00000000 e_log.c
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 s_lib_ver.c
00000000 l    df *ABS*	00000000 s_matherr.c
00000000 l    df *ABS*	00000000 s_nan.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 asprintf.c
00000000 l    df *ABS*	00000000 errno.c
00000000 l    df *ABS*	00000000 impure.c
0001e080 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 strstr.c
00014e98 l     F .text	00000104 critical_factorization
00014f9c l     F .text	000003b0 two_way_long_needle
00000000 l    df *ABS*	00000000 vfprintf.c
0001def2 l     O .rodata	00000010 zeroes.4389
0001df02 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 dtoa.c
000179b8 l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
0001e8cc l     O .rwdata	00000020 lc_ctype_charset
0001e8ac l     O .rwdata	00000020 lc_message_charset
0001e8ec l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 mprec.c
0001df30 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0001e054 l     O .rodata	00000010 zeroes.4333
0001e064 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_getchar.c
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0001e9cc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_sys_init.c
0001e924 l     O .rwdata	0000002c accelerometer_spi
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_vars.c
00000000 l    df *ABS*	00000000 altera_up_avalon_accelerometer_spi.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
0001db60 l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
0001f3d0 g     O .bss	00000004 alt_instruction_exception_handler
0001a960 g     F .text	00000074 _mprec_log10
0001aa4c g     F .text	0000008c __any_on
0001df3c g     O .rodata	00000028 __mprec_tinytens
0001d86c g     F .text	0000002c alt_main
00014e08 g     F .text	00000090 strcpy
000105d0 g     F .text	00000014 led_write
0001f724 g     O .bss	00000100 alt_irq
00010f20 g     F .text	0000019c log
0001e9ec g       *ABS*	00000000 __flash_rwdata_start
00012c90 g     F .text	00000088 .hidden __eqdf2
0001f35c g     O .bss	00000004 pause
00010840 g     F .text	00000054 print
0001f824 g       *ABS*	00000000 __alt_heap_start
0001f360 g     O .bss	00000004 dancing
0001023c g     F .text	00000044 print_data
0001f364 g     O .bss	00000004 disp_off
0001969c g     F .text	0000007c _setlocale_r
0001d89c g     F .text	00000004 __malloc_unlock
0001f3c8 g     O .bss	00000004 altera_avalon_timer_ts_freq
0001c298 g     F .text	0000015c memmove
00019a20 g     F .text	000000a8 _Balloc
0001e9ac g     O .rwdata	00000004 timer
0001f368 g     O .bss	00000004 reverse
000101bc g     F .text	00000080 sys_timer_isr
0001044c g     F .text	00000048 read_chars
0001d8a0 g     F .text	00000038 alt_putstr
00012d18 g     F .text	000000dc .hidden __gtdf2
0001e9d0 g     O .rwdata	00000004 jtag_uart
0001dc4c g     F .text	00000008 altera_nios2_gen2_irq_init
00014220 g     F .text	00000010 __errno
00010000 g     F .entry	0000000c __reset
0001da54 g     F .text	00000058 alt_up_accelerometer_spi_read_x_axis
00010020 g       *ABS*	00000000 __flash_exceptions_start
0001f3a8 g     O .bss	00000004 errno
0001ae1c g     F .text	000013a0 ___svfiprintf_internal_r
0001f3c0 g     O .bss	00000004 alt_argv
000269a8 g       *ABS*	00000000 _gp
000102d0 g     F .text	000000b4 generate_text
0001e950 g     O .rwdata	00000030 alt_fd_list
0001dbd4 g     F .text	00000074 alt_find_dev
000198d8 g     F .text	00000148 memcpy
00013fdc g     F .text	000000dc .hidden __floatsidf
0001d518 g     F .text	000000f4 .hidden __ltdf2
0001f36c g     O .bss	00000001 prevLetter
0001dc54 g     F .text	00000074 alt_exception_cause_generated_bad_addr
000117d8 g     F .text	00000074 __fpclassifyd
0001a8bc g     F .text	000000a4 __ratio
0001d96c g     F .text	0000005c altera_avalon_jtag_uart_read
00014230 g     F .text	00000014 malloc
00011958 g     F .text	00000064 .hidden __udivsi3
00010764 g     F .text	00000054 getBinLow
0001df8c g     O .rodata	000000c8 __mprec_tens
00019718 g     F .text	0000000c __locale_charset
0001f3a4 g     O .bss	00000004 __malloc_top_pad
0001f370 g     O .bss	00000004 flag
0001e9c4 g     O .rwdata	00000004 __mb_cur_max
00019748 g     F .text	0000000c _localeconv_r
0001f374 g     O .bss	00000004 length
00019e54 g     F .text	0000003c __i2b
00014b8c g     F .text	00000054 _sbrk_r
0001e9d4 g     O .rwdata	00000004 alt_max_fd
0001f3a0 g     O .bss	00000004 __malloc_max_sbrked_mem
0001d6f8 g     F .text	00000094 alt_irq_register
00011a14 g     F .text	000008ac .hidden __adddf3
0001a664 g     F .text	0000010c __b2d
00010494 g     F .text	000000cc output_switch
0001cf54 g     F .text	000005c4 .hidden __umoddi3
0001e9b0 g     O .rwdata	00000004 __fdlib_version
0001e9b4 g     O .rwdata	00000004 _global_impure_ptr
0001c3f4 g     F .text	00000564 _realloc_r
0001f824 g       *ABS*	00000000 __bss_end
0001d6b4 g     F .text	00000044 alt_getchar
00010730 g     F .text	00000034 getBinLowLow
0001c958 g     F .text	000005fc .hidden __udivdi3
0001df64 g     O .rodata	00000028 __mprec_bigtens
00019c38 g     F .text	00000104 __s2b
0001d60c g     F .text	000000a8 .hidden __floatunsidf
0001a3a4 g     F .text	00000060 __mcmp
0001f3b8 g     O .bss	00000004 alt_irq_active
000100fc g     F .exceptions	00000060 alt_irq_handler
0001e980 g     O .rwdata	00000028 alt_dev_null
0001db5c g     F .text	00000004 alt_dcache_flush_all
00019d3c g     F .text	00000068 __hi0bits
00013f5c g     F .text	00000080 .hidden __fixdfsi
0001e9ec g       *ABS*	00000000 __ram_rwdata_end
00010618 g     F .text	00000070 timer_init
00010000 g       *ABS*	00000000 __alt_mem_onchip_memory
00010894 g     F .text	00000280 print_letters
0001e9d8 g     O .rwdata	00000008 alt_dev_list
0001f424 g     O .bss	00000200 text
0001f378 g     O .bss	00000004 dance_dir
0001e080 g       *ABS*	00000000 __ram_rodata_end
0001d518 g     F .text	000000f4 .hidden __ledf2
0001a11c g     F .text	00000140 __pow5mult
0001f37c g     O .bss	00000001 led
0001f3b4 g     O .bss	00000004 __nlocale_changed
000119bc g     F .text	00000058 .hidden __umodsi3
0001f824 g       *ABS*	00000000 end
0001015c g     F .exceptions	00000024 alt_instruction_exception_entry
00020000 g       *ABS*	00000000 __alt_stack_pointer
000140b8 g     F .text	00000064 .hidden __clzsi2
0001d9c8 g     F .text	00000034 altera_avalon_jtag_uart_write
00010384 g     F .text	000000c8 interpret_command
00014144 g     F .text	00000064 _asprintf_r
00019778 g     F .text	000000e4 memchr
00014be0 g     F .text	00000058 _sprintf_r
0001938c g     F .text	00000310 _free_r
00019724 g     F .text	00000010 __locale_mb_cur_max
0001f3b0 g     O .bss	00000004 __mlocale_changed
0001e9bc g     O .rwdata	00000004 __malloc_sbrk_base
00010180 g     F .text	0000003c _start
0001f380 g     O .bss	00000004 level
0001534c g     F .text	000003b0 strstr
0001a25c g     F .text	00000148 __lshift
0001d944 g     F .text	00000028 alt_sys_init
0001da04 g     F .text	00000014 alt_up_accelerometer_spi_read_address_register
0001ac4c g     F .text	000001d0 __ssprint_r
00019e90 g     F .text	0000028c __multiply
0001411c g     F .text	00000028 .hidden __mulsi3
0001e080 g       *ABS*	00000000 __ram_rwdata_start
0001dcc8 g       *ABS*	00000000 __ram_rodata_start
0001f3fc g     O .bss	00000028 __malloc_current_mallinfo
0001a770 g     F .text	0000014c __d2b
0001daac g     F .text	00000058 alt_up_accelerometer_spi_read_y_axis
0001f384 g     O .bss	00000004 slowdown_toggle
0001985c g     F .text	0000007c memcmp
0001f824 g       *ABS*	00000000 __alt_stack_base
000106b4 g     F .text	0000007c getBinaryLetter
000122c0 g     F .text	000009d0 .hidden __divdf3
0001a9d4 g     F .text	00000078 __copybits
0001e4a4 g     O .rwdata	00000408 __malloc_av_
00012df4 g     F .text	0000086c .hidden __muldf3
0001db68 g     F .text	0000006c alt_dev_llist_insert
0001d898 g     F .text	00000004 __malloc_lock
0001d8d8 g     F .text	0000004c sbrk
000156fc g     F .text	000022bc ___svfprintf_internal_r
0001f624 g     O .bss	00000100 enteredText
0001c1bc g     F .text	000000dc _calloc_r
0001f358 g       *ABS*	00000000 __bss_start
00014a64 g     F .text	00000128 memset
00010b14 g     F .text	0000040c main
0001f3bc g     O .bss	00000004 alt_envp
0001f39c g     O .bss	00000004 __malloc_max_total_mem
00010560 g     F .text	00000070 output_button
0001184c g     F .text	00000008 matherr
00020000 g       *ABS*	00000000 __alt_heap_limit
00017be0 g     F .text	00001688 _dtoa_r
00014258 g     F .text	0000080c _malloc_r
0001e9a8 g     O .rwdata	00000004 life
0001e9e8 g     O .rwdata	00000004 alt_errno
00011860 g     F .text	00000084 .hidden __divsi3
00019268 g     F .text	00000124 _malloc_trim_r
0001aad8 g     F .text	000000dc strcmp
0001dcc8 g       *ABS*	00000000 __flash_rodata_start
00012c90 g     F .text	00000088 .hidden __nedf2
0001d924 g     F .text	00000020 alt_irq_init
00014c38 g     F .text	0000006c sprintf
0001ddac g     O .rodata	00000100 .hidden __clz_tab
000141a8 g     F .text	00000078 asprintf
0001f3ac g     O .bss	00000004 _PathLocale
00019754 g     F .text	00000018 setlocale
0001e9b8 g     O .rwdata	00000004 _impure_ptr
0001f3c4 g     O .bss	00000004 alt_argc
0001f3cc g     O .bss	00000004 altera_avalon_timer_ts_base
00019740 g     F .text	00000008 __locale_cjk_lang
000110bc g     F .text	0000071c __ieee754_log
000107b8 g     F .text	00000054 getBinHigh
00010020 g       .exceptions	00000000 alt_irq_entry
0001a600 g     F .text	00000064 __ulp
0001f358 g     O .bss	00000001 pwm
0001f388 g     O .bss	00000004 toggle
0001e9e0 g     O .rwdata	00000008 alt_fs_list
0001f38c g     O .bss	00000004 speedup_toggle
00011854 g     F .text	0000000c nan
00010020 g       *ABS*	00000000 __ram_exceptions_start
0001d9fc g     F .text	00000008 alt_up_accelerometer_spi_open_dev
0001976c g     F .text	0000000c localeconv
0001f390 g     O .bss	00000004 upsideDown
0001e9ec g       *ABS*	00000000 _edata
0001f394 g     O .bss	00000004 dance_state
0001f824 g       *ABS*	00000000 _end
00010180 g       *ABS*	00000000 __ram_exceptions_end
0001e9c0 g     O .rwdata	00000004 __malloc_trim_threshold
00019734 g     F .text	0000000c __locale_msgcharset
0001a404 g     F .text	000001fc __mdiff
000118e4 g     F .text	00000074 .hidden __modsi3
0001db04 g     F .text	00000058 alt_up_accelerometer_spi_read_z_axis
00020000 g       *ABS*	00000000 __alt_data_end
00010020 g     F .exceptions	00000000 alt_exception
0001080c g     F .text	00000034 getBinHighHigh
000105e4 g     F .text	00000034 convert_read
0001000c g       .entry	00000000 _exit
0001da18 g     F .text	00000020 alt_up_accelerometer_spi_read
0001da38 g     F .text	0000001c alt_up_accelerometer_spi_write
00010688 g     F .text	0000002c getBin
0001abb4 g     F .text	00000098 strlen
00012d18 g     F .text	000000dc .hidden __gedf2
0001dc48 g     F .text	00000004 alt_icache_flush_all
00014ca4 g     F .text	00000164 strchr
0001e9c8 g     O .rwdata	00000004 alt_priority_mask
0001f398 g     O .bss	00000004 re_enter
00013660 g     F .text	000008fc .hidden __subdf3
00019da4 g     F .text	000000b0 __lo0bits
00010280 g     F .text	00000050 send_text
0001d78c g     F .text	000000e0 alt_load
00014244 g     F .text	00000014 free
00019af0 g     F .text	00000148 __multadd
00019ac8 g     F .text	00000028 _Bfree



Disassembly of section .entry:

00010000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   10000:	00400074 	movhi	at,1
    ori r1, r1, %lo(_start)
   10004:	08406014 	ori	at,at,384
    jmp r1
   10008:	0800683a 	jmp	at

0001000c <_exit>:
	...

Disassembly of section .exceptions:

00010020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   10020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   10024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   10028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   1002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   10030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   10034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   10038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   1003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   10040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   10044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   10048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   1004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   10050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   10054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   10058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   1005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   10060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   10064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   10068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   1006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   10070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   10074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   10078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   1007c:	10000326 	beq	r2,zero,1008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   10080:	20000226 	beq	r4,zero,1008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   10084:	00100fc0 	call	100fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   10088:	00000706 	br	100a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   1008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   10090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   10094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   10098:	001015c0 	call	1015c <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   1009c:	1000021e 	bne	r2,zero,100a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   100a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   100a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   100a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   100ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   100b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   100b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   100b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   100bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   100c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   100c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   100c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   100cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   100d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   100d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   100d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   100dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   100e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   100e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   100e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   100ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   100f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   100f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   100f8:	ef80083a 	eret

000100fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   100fc:	defffe04 	addi	sp,sp,-8
   10100:	dfc00115 	stw	ra,4(sp)
   10104:	dc000015 	stw	r16,0(sp)
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   10108:	0007313a 	rdctl	r3,ipending
      if (active & mask)
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
   1010c:	040000b4 	movhi	r16,2
   10110:	843dc904 	addi	r16,r16,-2268

  active = alt_irq_pending ();

  do
  {
    i = 0;
   10114:	000b883a 	mov	r5,zero
    mask = 1;
   10118:	00800044 	movi	r2,1
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   1011c:	1888703a 	and	r4,r3,r2
   10120:	20000b26 	beq	r4,zero,10150 <alt_irq_handler+0x54>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
   10124:	280490fa 	slli	r2,r5,3
   10128:	8085883a 	add	r2,r16,r2
   1012c:	10c00017 	ldw	r3,0(r2)
   10130:	11000117 	ldw	r4,4(r2)
   10134:	183ee83a 	callr	r3
   10138:	0007313a 	rdctl	r3,ipending

    } while (1);

    active = alt_irq_pending ();
    
  } while (active);
   1013c:	183ff51e 	bne	r3,zero,10114 <_gp+0xfffe976c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
   10140:	dfc00117 	ldw	ra,4(sp)
   10144:	dc000017 	ldw	r16,0(sp)
   10148:	dec00204 	addi	sp,sp,8
   1014c:	f800283a 	ret
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
   10150:	1085883a 	add	r2,r2,r2
      i++;
   10154:	29400044 	addi	r5,r5,1

    } while (1);
   10158:	003ff006 	br	1011c <_gp+0xfffe9774>

0001015c <alt_instruction_exception_entry>:
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   1015c:	d0a28a17 	ldw	r2,-30168(gp)
   10160:	10000426 	beq	r2,zero,10174 <alt_instruction_exception_entry+0x18>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   10164:	200b883a 	mov	r5,r4
   10168:	000d883a 	mov	r6,zero
   1016c:	013fffc4 	movi	r4,-1
   10170:	1000683a 	jmp	r2
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   10174:	003da03a 	break	0
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
}
   10178:	0005883a 	mov	r2,zero
   1017c:	f800283a 	ret

Disassembly of section .text:

00010180 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   10180:	06c000b4 	movhi	sp,2
    ori sp, sp, %lo(__alt_stack_pointer)
   10184:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   10188:	068000b4 	movhi	gp,2
    ori gp, gp, %lo(_gp)
   1018c:	d69a6a14 	ori	gp,gp,27048
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   10190:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
   10194:	10bcd614 	ori	r2,r2,62296

    movhi r3, %hi(__bss_end)
   10198:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
   1019c:	18fe0914 	ori	r3,r3,63524

    beq r2, r3, 1f
   101a0:	10c00326 	beq	r2,r3,101b0 <_start+0x30>

0:
    stw zero, (r2)
   101a4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   101a8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   101ac:	10fffd36 	bltu	r2,r3,101a4 <_gp+0xfffe97fc>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   101b0:	001d78c0 	call	1d78c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   101b4:	001d86c0 	call	1d86c <alt_main>

000101b8 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   101b8:	003fff06 	br	101b8 <_gp+0xfffe9810>

000101bc <sys_timer_isr>:
    * led = (8 >> val) | (8 << (8 - val));
    * level = (acc_read >> 1) & 0x1f;
}

void sys_timer_isr() {
    IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_BASE, 0);
   101bc:	008000b4 	movhi	r2,2
   101c0:	10840004 	addi	r2,r2,4096
   101c4:	10000035 	stwio	zero,0(r2)

    if (pwm < abs(level)) {
   101c8:	d0a27617 	ldw	r2,-30248(gp)
   101cc:	d1626c07 	ldb	r5,-30288(gp)
   101d0:	1009883a 	mov	r4,r2
   101d4:	1000010e 	bge	r2,zero,101dc <sys_timer_isr+0x20>
   101d8:	0089c83a 	sub	r4,zero,r2
   101dc:	00c000b4 	movhi	r3,2
   101e0:	18c42004 	addi	r3,r3,4224
   101e4:	2900080e 	bge	r5,r4,10208 <sys_timer_isr+0x4c>

        if (level < 0) {
   101e8:	1000040e 	bge	r2,zero,101fc <sys_timer_isr+0x40>
alt_8 pwm = 0;
alt_u8 led;
int level;

void led_write(alt_u8 led_pattern) {
    IOWR(LED_BASE, 0, led_pattern);
   101ec:	d0a27503 	ldbu	r2,-30252(gp)
   101f0:	1085883a 	add	r2,r2,r2
   101f4:	10803fcc 	andi	r2,r2,255
   101f8:	00000406 	br	1020c <sys_timer_isr+0x50>
   101fc:	d0a27503 	ldbu	r2,-30252(gp)
   10200:	1004d07a 	srli	r2,r2,1
   10204:	00000106 	br	1020c <sys_timer_isr+0x50>
   10208:	d0a27503 	ldbu	r2,-30252(gp)
   1020c:	18800035 	stwio	r2,0(r3)

    } else {
        led_write(led);
    }

    if (pwm > PWM_PERIOD) {
   10210:	d0a26c03 	ldbu	r2,-30288(gp)
   10214:	01000404 	movi	r4,16
   10218:	10c03fcc 	andi	r3,r2,255
   1021c:	18c0201c 	xori	r3,r3,128
   10220:	18ffe004 	addi	r3,r3,-128
   10224:	20c0020e 	bge	r4,r3,10230 <sys_timer_isr+0x74>
        pwm = 0;
   10228:	d0226c05 	stb	zero,-30288(gp)
   1022c:	f800283a 	ret
    } else {
        pwm++;
   10230:	10800044 	addi	r2,r2,1
   10234:	d0a26c05 	stb	r2,-30288(gp)
   10238:	f800283a 	ret

0001023c <print_data>:
char text[2*CHARLIM];//The text that has been adjusted for the allowed letters
int pause, reverse, toggle, speedup_toggle, slowdown_toggle, dance_state, dancing, dance_dir, upsideDown, length, re_enter, disp_off, flag;
int timer = CLOCKINIT;  //Standard speed for movement
int life = 1023;

void print_data(char *accel_x, char *accel_y, char *switchdata, char *buttondata){
   1023c:	defffc04 	addi	sp,sp,-16
	char *printMsg;
	asprintf(&printMsg, "%s %s %s %s\n", accel_x, accel_y, switchdata, buttondata); 	// Print out the strings
   10240:	d9c00115 	stw	r7,4(sp)
   10244:	280f883a 	mov	r7,r5
   10248:	014000b4 	movhi	r5,2
   1024c:	29773204 	addi	r5,r5,-9016
   10250:	d9800015 	stw	r6,0(sp)
   10254:	200d883a 	mov	r6,r4
   10258:	d9000204 	addi	r4,sp,8
char text[2*CHARLIM];//The text that has been adjusted for the allowed letters
int pause, reverse, toggle, speedup_toggle, slowdown_toggle, dance_state, dancing, dance_dir, upsideDown, length, re_enter, disp_off, flag;
int timer = CLOCKINIT;  //Standard speed for movement
int life = 1023;

void print_data(char *accel_x, char *accel_y, char *switchdata, char *buttondata){
   1025c:	dfc00315 	stw	ra,12(sp)
	char *printMsg;
	asprintf(&printMsg, "%s %s %s %s\n", accel_x, accel_y, switchdata, buttondata); 	// Print out the strings
   10260:	00141a80 	call	141a8 <asprintf>
	alt_putstr(printMsg);
   10264:	d9000217 	ldw	r4,8(sp)
   10268:	001d8a00 	call	1d8a0 <alt_putstr>
	free(printMsg);
   1026c:	d9000217 	ldw	r4,8(sp)
   10270:	00142440 	call	14244 <free>
	//memset(accel_x, 0, 4*CHARLIM);
	//memset(accel_y, 0, 4*CHARLIM);
	//memset(switchdata, 0, 4*CHARLIM);
	//memset(buttondata, 0, 4*CHARLIM);
}
   10274:	dfc00317 	ldw	ra,12(sp)
   10278:	dec00404 	addi	sp,sp,16
   1027c:	f800283a 	ret

00010280 <send_text>:

void send_text(char *text) {
   10280:	defffd04 	addi	sp,sp,-12
	char *printMsg;
	asprintf(&printMsg, "<--> %s <--> \n", text); 	// Print out the strings
   10284:	014000b4 	movhi	r5,2
   10288:	200d883a 	mov	r6,r4
   1028c:	29773604 	addi	r5,r5,-9000
	//memset(accel_y, 0, 4*CHARLIM);
	//memset(switchdata, 0, 4*CHARLIM);
	//memset(buttondata, 0, 4*CHARLIM);
}

void send_text(char *text) {
   10290:	dc000115 	stw	r16,4(sp)
   10294:	2021883a 	mov	r16,r4
	char *printMsg;
	asprintf(&printMsg, "<--> %s <--> \n", text); 	// Print out the strings
   10298:	d809883a 	mov	r4,sp
	//memset(accel_y, 0, 4*CHARLIM);
	//memset(switchdata, 0, 4*CHARLIM);
	//memset(buttondata, 0, 4*CHARLIM);
}

void send_text(char *text) {
   1029c:	dfc00215 	stw	ra,8(sp)
	char *printMsg;
	asprintf(&printMsg, "<--> %s <--> \n", text); 	// Print out the strings
   102a0:	00141a80 	call	141a8 <asprintf>
	alt_putstr(printMsg);
   102a4:	d9000017 	ldw	r4,0(sp)
   102a8:	001d8a00 	call	1d8a0 <alt_putstr>
	free(printMsg);
   102ac:	d9000017 	ldw	r4,0(sp)
   102b0:	00142440 	call	14244 <free>
	memset(text, 0, 2*CHARLIM);								// Empty the text buffer for next input
   102b4:	01808004 	movi	r6,512
   102b8:	000b883a 	mov	r5,zero
   102bc:	8009883a 	mov	r4,r16
}
   102c0:	dfc00217 	ldw	ra,8(sp)
   102c4:	dc000117 	ldw	r16,4(sp)
   102c8:	dec00304 	addi	sp,sp,12
void send_text(char *text) {
	char *printMsg;
	asprintf(&printMsg, "<--> %s <--> \n", text); 	// Print out the strings
	alt_putstr(printMsg);
	free(printMsg);
	memset(text, 0, 2*CHARLIM);								// Empty the text buffer for next input
   102cc:	0014a641 	jmpi	14a64 <memset>

000102d0 <generate_text>:
}

char generate_text(char curr, int *length, char *text, int *running) {
   102d0:	2005883a 	mov	r2,r4
	if(curr == '\n') return curr;								// If the line is empty, return nothing.
   102d4:	21003fcc 	andi	r4,r4,255
   102d8:	2100201c 	xori	r4,r4,128
   102dc:	213fe004 	addi	r4,r4,-128
   102e0:	00c00284 	movi	r3,10
   102e4:	20c02626 	beq	r4,r3,10380 <generate_text+0xb0>
	alt_putstr(printMsg);
	free(printMsg);
	memset(text, 0, 2*CHARLIM);								// Empty the text buffer for next input
}

char generate_text(char curr, int *length, char *text, int *running) {
   102e8:	defff804 	addi	sp,sp,-32
   102ec:	dd800615 	stw	r22,24(sp)
   102f0:	dd400515 	stw	r21,20(sp)
   102f4:	dd000415 	stw	r20,16(sp)
   102f8:	dcc00315 	stw	r19,12(sp)
   102fc:	dc800215 	stw	r18,8(sp)
   10300:	dc400115 	stw	r17,4(sp)
   10304:	dc000015 	stw	r16,0(sp)
   10308:	dfc00715 	stw	ra,28(sp)
   1030c:	3829883a 	mov	r20,r7
   10310:	3025883a 	mov	r18,r6
   10314:	2827883a 	mov	r19,r5
	if(curr == '\n') return curr;								// If the line is empty, return nothing.
   10318:	3023883a 	mov	r17,r6
	int idx = 0;										// Keep track of how many characters have been sent down for later printing
	char newCurr = curr;

	while (newCurr != EOF && newCurr != '\n'){						// Keep reading characters until we get to the end of the line
   1031c:	057fffc4 	movi	r21,-1
   10320:	1821883a 	mov	r16,r3
		if (newCurr == QUITLETTER) { *running = 0; }					// If quitting letter is encountered, setting running to 0
   10324:	05801f84 	movi	r22,126
char generate_text(char curr, int *length, char *text, int *running) {
	if(curr == '\n') return curr;								// If the line is empty, return nothing.
	int idx = 0;										// Keep track of how many characters have been sent down for later printing
	char newCurr = curr;

	while (newCurr != EOF && newCurr != '\n'){						// Keep reading characters until we get to the end of the line
   10328:	10c03fcc 	andi	r3,r2,255
   1032c:	18c0201c 	xori	r3,r3,128
   10330:	18ffe004 	addi	r3,r3,-128
   10334:	8c89c83a 	sub	r4,r17,r18
   10338:	1d400726 	beq	r3,r21,10358 <generate_text+0x88>
   1033c:	1c000626 	beq	r3,r16,10358 <generate_text+0x88>
		if (newCurr == QUITLETTER) { *running = 0; }					// If quitting letter is encountered, setting running to 0
   10340:	1d80011e 	bne	r3,r22,10348 <generate_text+0x78>
   10344:	a0000015 	stw	zero,0(r20)
		text[idx] = newCurr;								// Add the next letter to the text buffer
   10348:	88800005 	stb	r2,0(r17)
		idx++;										// Keep track of the number of characters read
		newCurr = alt_getchar();							// Get the next character
   1034c:	001d6b40 	call	1d6b4 <alt_getchar>
   10350:	8c400044 	addi	r17,r17,1
   10354:	003ff406 	br	10328 <_gp+0xfffe9980>
	}
	*length = idx;
   10358:	99000015 	stw	r4,0(r19)

	return newCurr;
}
   1035c:	dfc00717 	ldw	ra,28(sp)
   10360:	dd800617 	ldw	r22,24(sp)
   10364:	dd400517 	ldw	r21,20(sp)
   10368:	dd000417 	ldw	r20,16(sp)
   1036c:	dcc00317 	ldw	r19,12(sp)
   10370:	dc800217 	ldw	r18,8(sp)
   10374:	dc400117 	ldw	r17,4(sp)
   10378:	dc000017 	ldw	r16,0(sp)
   1037c:	dec00804 	addi	sp,sp,32
   10380:	f800283a 	ret

00010384 <interpret_command>:

char * interpret_command(char* command)
{
	if ( strstr(command, "7SEG=") != 0 ) {
   10384:	014000b4 	movhi	r5,2

	return newCurr;
}

char * interpret_command(char* command)
{
   10388:	defffe04 	addi	sp,sp,-8
	if ( strstr(command, "7SEG=") != 0 ) {
   1038c:	29773a04 	addi	r5,r5,-8984

	return newCurr;
}

char * interpret_command(char* command)
{
   10390:	dc000015 	stw	r16,0(sp)
   10394:	dfc00115 	stw	ra,4(sp)
   10398:	2021883a 	mov	r16,r4
	if ( strstr(command, "7SEG=") != 0 ) {
   1039c:	001534c0 	call	1534c <strstr>
   103a0:	10000226 	beq	r2,zero,103ac <interpret_command+0x28>
		command += 5;
   103a4:	80800144 	addi	r2,r16,5
		return command;
   103a8:	00002406 	br	1043c <interpret_command+0xb8>
	}
	if ( strstr(command, "LED=") != 0 ) {
   103ac:	014000b4 	movhi	r5,2
   103b0:	29773c04 	addi	r5,r5,-8976
   103b4:	8009883a 	mov	r4,r16
   103b8:	001534c0 	call	1534c <strstr>
   103bc:	10000226 	beq	r2,zero,103c8 <interpret_command+0x44>
		command += 4;
   103c0:	80800104 	addi	r2,r16,4
		return command;
   103c4:	00001d06 	br	1043c <interpret_command+0xb8>
	}
	if ( strstr(command, "LIFE+") != 0 )	{
   103c8:	014000b4 	movhi	r5,2
   103cc:	29773e04 	addi	r5,r5,-8968
   103d0:	8009883a 	mov	r4,r16
   103d4:	001534c0 	call	1534c <strstr>
   103d8:	10000426 	beq	r2,zero,103ec <interpret_command+0x68>
		life = ((life + 1) * 2) - 1;
   103dc:	d0a00017 	ldw	r2,-32768(gp)
   103e0:	1004907a 	slli	r2,r2,1
   103e4:	10800044 	addi	r2,r2,1
   103e8:	00001106 	br	10430 <interpret_command+0xac>
		command += 5;
		return "";
	}
	if ( strstr(command, "LIFE-") != 0 )	{
   103ec:	014000b4 	movhi	r5,2
   103f0:	29774004 	addi	r5,r5,-8960
   103f4:	8009883a 	mov	r4,r16
   103f8:	001534c0 	call	1534c <strstr>
   103fc:	10000726 	beq	r2,zero,1041c <interpret_command+0x98>
		life = ((life + 1) / 2) - 1;
   10400:	d0a00017 	ldw	r2,-32768(gp)
   10404:	10800044 	addi	r2,r2,1
   10408:	1006d7fa 	srli	r3,r2,31
   1040c:	1885883a 	add	r2,r3,r2
   10410:	1005d07a 	srai	r2,r2,1
   10414:	10bfffc4 	addi	r2,r2,-1
   10418:	00000506 	br	10430 <interpret_command+0xac>
		command += 5;
		return "";
	}
	if ( strstr(command, "r") != 0 ) {
   1041c:	01401c84 	movi	r5,114
   10420:	8009883a 	mov	r4,r16
   10424:	0014ca40 	call	14ca4 <strchr>
   10428:	10000226 	beq	r2,zero,10434 <interpret_command+0xb0>
		life = 1023;
   1042c:	0080ffc4 	movi	r2,1023
   10430:	d0a00015 	stw	r2,-32768(gp)
	if ( strstr(command, "LIFE-") != 0 )	{
		life = ((life + 1) / 2) - 1;
		command += 5;
		return "";
	}
	if ( strstr(command, "r") != 0 ) {
   10434:	008000b4 	movhi	r2,2
   10438:	10b74404 	addi	r2,r2,-8944
	if ( strcmp(command, "") != 0 ) {
		return "";
	}
	return "";
	//alt_putstr(command);
}
   1043c:	dfc00117 	ldw	ra,4(sp)
   10440:	dc000017 	ldw	r16,0(sp)
   10444:	dec00204 	addi	sp,sp,8
   10448:	f800283a 	ret

0001044c <read_chars>:

char * read_chars() {
   1044c:	deff7d04 	addi	sp,sp,-524
	char data[2*CHARLIM];									// The buffer for the printing text
	char prevLetter = '!';
	int length = 0;
	int running = 1;
   10450:	00800044 	movi	r2,1
	}
	return "";
	//alt_putstr(command);
}

char * read_chars() {
   10454:	dfc08215 	stw	ra,520(sp)
	char data[2*CHARLIM];									// The buffer for the printing text
	char prevLetter = '!';
	int length = 0;
   10458:	d8008115 	stw	zero,516(sp)
	int running = 1;
   1045c:	d8808015 	stw	r2,512(sp)

	prevLetter = alt_getchar();							// Extract the first character (and create a hold until one arrives)
   10460:	001d6b40 	call	1d6b4 <alt_getchar>
	prevLetter = generate_text(prevLetter, &length, data, &running);		// Process input text
   10464:	11003fcc 	andi	r4,r2,255
   10468:	2100201c 	xori	r4,r4,128
   1046c:	d9c08004 	addi	r7,sp,512
   10470:	d80d883a 	mov	r6,sp
   10474:	d9408104 	addi	r5,sp,516
   10478:	213fe004 	addi	r4,r4,-128
   1047c:	00102d00 	call	102d0 <generate_text>
	//print_text(text, length);							// Print input text

	return interpret_command(data);
   10480:	d809883a 	mov	r4,sp
   10484:	00103840 	call	10384 <interpret_command>
}
   10488:	dfc08217 	ldw	ra,520(sp)
   1048c:	dec08304 	addi	sp,sp,524
   10490:	f800283a 	ret

00010494 <output_switch>:

void output_switch( int new, int old )
{
   10494:	deff7a04 	addi	sp,sp,-536
   10498:	dd008415 	stw	r20,528(sp)
   1049c:	dfc08515 	stw	ra,532(sp)
   104a0:	dcc08315 	stw	r19,524(sp)
   104a4:	dc808215 	stw	r18,520(sp)
   104a8:	dc408115 	stw	r17,516(sp)
   104ac:	dc008015 	stw	r16,512(sp)
	char text[2*CHARLIM];

	int x = new^old;
   104b0:	2168f03a 	xor	r20,r4,r5
	int switchnum;

	if ( x != 0 ){
   104b4:	a0002226 	beq	r20,zero,10540 <output_switch+0xac>
   104b8:	2825883a 	mov	r18,r5
   104bc:	2023883a 	mov	r17,r4
   104c0:	04c00284 	movi	r19,10
   104c4:	04000044 	movi	r16,1
		for (int i = 1; i < 513; i=i*2){
			if( x == i ){
   104c8:	a4001a1e 	bne	r20,r16,10534 <output_switch+0xa0>
				switchnum = log2(i);
   104cc:	a009883a 	mov	r4,r20
   104d0:	0013fdc0 	call	13fdc <__floatsidf>
   104d4:	1009883a 	mov	r4,r2
   104d8:	180b883a 	mov	r5,r3
   104dc:	0010f200 	call	10f20 <log>
   104e0:	01bfbeb4 	movhi	r6,65274
   104e4:	01cff9b4 	movhi	r7,16358
   104e8:	318e7bc4 	addi	r6,r6,14831
   104ec:	39cb9084 	addi	r7,r7,11842
   104f0:	1009883a 	mov	r4,r2
   104f4:	180b883a 	mov	r5,r3
   104f8:	00122c00 	call	122c0 <__divdf3>
   104fc:	1009883a 	mov	r4,r2
   10500:	180b883a 	mov	r5,r3
   10504:	0013f5c0 	call	13f5c <__fixdfsi>
   10508:	11800044 	addi	r6,r2,1
				if (new>old) 	{ sprintf(text, "SW%d ON\n", switchnum + 1); send_text(text); }
   1050c:	9440030e 	bge	r18,r17,1051c <output_switch+0x88>
   10510:	014000b4 	movhi	r5,2
   10514:	29774204 	addi	r5,r5,-8952
   10518:	00000206 	br	10524 <output_switch+0x90>
				else 			{ sprintf(text, "SW%d OFF\n", switchnum + 1); send_text(text); }
   1051c:	014000b4 	movhi	r5,2
   10520:	29774504 	addi	r5,r5,-8940
   10524:	d809883a 	mov	r4,sp
   10528:	0014c380 	call	14c38 <sprintf>
   1052c:	d809883a 	mov	r4,sp
   10530:	00102800 	call	10280 <send_text>
   10534:	9cffffc4 	addi	r19,r19,-1

	int x = new^old;
	int switchnum;

	if ( x != 0 ){
		for (int i = 1; i < 513; i=i*2){
   10538:	8421883a 	add	r16,r16,r16
   1053c:	983fe21e 	bne	r19,zero,104c8 <_gp+0xfffe9b20>
				if (new>old) 	{ sprintf(text, "SW%d ON\n", switchnum + 1); send_text(text); }
				else 			{ sprintf(text, "SW%d OFF\n", switchnum + 1); send_text(text); }
			}
		}
	}
}
   10540:	dfc08517 	ldw	ra,532(sp)
   10544:	dd008417 	ldw	r20,528(sp)
   10548:	dcc08317 	ldw	r19,524(sp)
   1054c:	dc808217 	ldw	r18,520(sp)
   10550:	dc408117 	ldw	r17,516(sp)
   10554:	dc008017 	ldw	r16,512(sp)
   10558:	dec08604 	addi	sp,sp,536
   1055c:	f800283a 	ret

00010560 <output_button>:

void output_button ( int new, int old)
{
   10560:	deff7f04 	addi	sp,sp,-516
   10564:	dfc08015 	stw	ra,512(sp)
	char text[2*CHARLIM];

	int x = new^old;
   10568:	2144f03a 	xor	r2,r4,r5

	if ( x != 0 ){
   1056c:	10001526 	beq	r2,zero,105c4 <output_button+0x64>
		if( x == 1 ){
   10570:	01800044 	movi	r6,1
   10574:	1180021e 	bne	r2,r6,10580 <output_button+0x20>
			if (new<old) 	{ sprintf(text, "B1 pressed\n"); send_text(text); }
   10578:	2140120e 	bge	r4,r5,105c4 <output_button+0x64>
   1057c:	00000706 	br	1059c <output_button+0x3c>
		}
		if( x == 2 ){
   10580:	00c00084 	movi	r3,2
   10584:	10c0021e 	bne	r2,r3,10590 <output_button+0x30>
			if (new<old) 	{ sprintf(text, "B2 pressed\n"); send_text(text); }
   10588:	21400e0e 	bge	r4,r5,105c4 <output_button+0x64>
   1058c:	00000706 	br	105ac <output_button+0x4c>
		}
		if( x == 3 ){
   10590:	010000c4 	movi	r4,3
   10594:	11000b1e 	bne	r2,r4,105c4 <output_button+0x64>
			if (old == 1) 		{ sprintf(text, "B1 pressed\n"); send_text(text); }
   10598:	2980031e 	bne	r5,r6,105a8 <output_button+0x48>
   1059c:	014000b4 	movhi	r5,2
   105a0:	29774804 	addi	r5,r5,-8928
   105a4:	00000306 	br	105b4 <output_button+0x54>
			else if (old ==2 ) 	{ sprintf(text, "B2 pressed\n"); send_text(text); }
   105a8:	28c0061e 	bne	r5,r3,105c4 <output_button+0x64>
   105ac:	014000b4 	movhi	r5,2
   105b0:	29774b04 	addi	r5,r5,-8916
   105b4:	d809883a 	mov	r4,sp
   105b8:	0014e080 	call	14e08 <strcpy>
   105bc:	d809883a 	mov	r4,sp
   105c0:	00102800 	call	10280 <send_text>
		}
	}
}
   105c4:	dfc08017 	ldw	ra,512(sp)
   105c8:	dec08104 	addi	sp,sp,516
   105cc:	f800283a 	ret

000105d0 <led_write>:
alt_8 pwm = 0;
alt_u8 led;
int level;

void led_write(alt_u8 led_pattern) {
    IOWR(LED_BASE, 0, led_pattern);
   105d0:	008000b4 	movhi	r2,2
   105d4:	21003fcc 	andi	r4,r4,255
   105d8:	10842004 	addi	r2,r2,4224
   105dc:	11000035 	stwio	r4,0(r2)
   105e0:	f800283a 	ret

000105e4 <convert_read>:
}

void convert_read(alt_32 acc_read, int * level, alt_u8 * led) {
    acc_read += OFFSET;
   105e4:	213ff804 	addi	r4,r4,-32
    alt_u8 val = (acc_read >> 6) & 0x07;
    * led = (8 >> val) | (8 << (8 - val));
   105e8:	2005d1ba 	srai	r2,r4,6
    * level = (acc_read >> 1) & 0x1f;
   105ec:	2009d07a 	srai	r4,r4,1
}

void convert_read(alt_32 acc_read, int * level, alt_u8 * led) {
    acc_read += OFFSET;
    alt_u8 val = (acc_read >> 6) & 0x07;
    * led = (8 >> val) | (8 << (8 - val));
   105f0:	10c001cc 	andi	r3,r2,7
   105f4:	00800204 	movi	r2,8
   105f8:	10cfc83a 	sub	r7,r2,r3
   105fc:	11ce983a 	sll	r7,r2,r7
   10600:	10c5d83a 	sra	r2,r2,r3
    * level = (acc_read >> 1) & 0x1f;
   10604:	210007cc 	andi	r4,r4,31
}

void convert_read(alt_32 acc_read, int * level, alt_u8 * led) {
    acc_read += OFFSET;
    alt_u8 val = (acc_read >> 6) & 0x07;
    * led = (8 >> val) | (8 << (8 - val));
   10608:	3884b03a 	or	r2,r7,r2
   1060c:	30800005 	stb	r2,0(r6)
    * level = (acc_read >> 1) & 0x1f;
   10610:	29000015 	stw	r4,0(r5)
   10614:	f800283a 	ret

00010618 <timer_init>:
    } else {
        pwm++;
    }
}

void timer_init(void * isr) {
   10618:	defffe04 	addi	sp,sp,-8
   1061c:	dc000015 	stw	r16,0(sp)
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0003);
   10620:	040000b4 	movhi	r16,2
    } else {
        pwm++;
    }
}

void timer_init(void * isr) {
   10624:	dfc00115 	stw	ra,4(sp)
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0003);
   10628:	84040104 	addi	r16,r16,4100
   1062c:	008000c4 	movi	r2,3
   10630:	80800035 	stwio	r2,0(r16)
    IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_BASE, 0);
   10634:	00c000b4 	movhi	r3,2
   10638:	0005883a 	mov	r2,zero
   1063c:	18c40004 	addi	r3,r3,4096
   10640:	18800035 	stwio	r2,0(r3)
    IOWR_ALTERA_AVALON_TIMER_PERIODL(TIMER_BASE, 0x0900);
   10644:	00c000b4 	movhi	r3,2
   10648:	18c40204 	addi	r3,r3,4104
   1064c:	01424004 	movi	r5,2304
   10650:	19400035 	stwio	r5,0(r3)
    IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_BASE, 0x0000);
   10654:	00c000b4 	movhi	r3,2
   10658:	18c40304 	addi	r3,r3,4108
   1065c:	18800035 	stwio	r2,0(r3)
    alt_irq_register(TIMER_IRQ, 0, isr);
   10660:	200d883a 	mov	r6,r4
   10664:	000b883a 	mov	r5,zero
   10668:	01000084 	movi	r4,2
   1066c:	001d6f80 	call	1d6f8 <alt_irq_register>
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0007);
   10670:	008001c4 	movi	r2,7
   10674:	80800035 	stwio	r2,0(r16)
}
   10678:	dfc00117 	ldw	ra,4(sp)
   1067c:	dc000017 	ldw	r16,0(sp)
   10680:	dec00204 	addi	sp,sp,8
   10684:	f800283a 	ret

00010688 <getBin>:
	int bit7 = (letter_inv & 0b1000000) >> 3;
	int res = (0b0000000) | bit0 | bit1 | bit5 | bit7;
	return ~res; //Uninvert the binary representation so the display knows which lights to turn on
}
//Gets the binary representation of the character
int getBin(char letter){
   10688:	213ff404 	addi	r4,r4,-48
   1068c:	21003fcc 	andi	r4,r4,255
   10690:	00800a84 	movi	r2,42
   10694:	11000536 	bltu	r2,r4,106ac <getBin+0x24>
   10698:	008000b4 	movhi	r2,2
   1069c:	10b75504 	addi	r2,r2,-8876
   106a0:	1109883a 	add	r4,r2,r4
   106a4:	20800007 	ldb	r2,0(r4)
   106a8:	f800283a 	ret
	/*Based on the character entered, we convert to binary so the 7-segment knows which lights to turn on.
	The 7-segment has inverted logic so a 0 means the light is on and a 1 means the light is off.
	The rightmost bit starts the index at HEX#[0], and the leftmost bit is HEX#[6], the pattern
	for the 7-segment is shown in the DE0_C5 User Manual*/
	switch(letter){
   106ac:	00801fc4 	movi	r2,127
	case 'Z':
		return 0b0100100;
	default:
		return 0b1111111;
	}
}
   106b0:	f800283a 	ret

000106b4 <getBinaryLetter>:
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
}
//Returns the letter or the upsideDown version of the letter
int getBinaryLetter(char letter){
	int let = getBin(letter);
   106b4:	21003fcc 	andi	r4,r4,255
   106b8:	2100201c 	xori	r4,r4,128
	int bit3 = (letter_inv & 0b0001000) >> 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
}
//Returns the letter or the upsideDown version of the letter
int getBinaryLetter(char letter){
   106bc:	deffff04 	addi	sp,sp,-4
	int let = getBin(letter);
   106c0:	213fe004 	addi	r4,r4,-128
	int bit3 = (letter_inv & 0b0001000) >> 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
}
//Returns the letter or the upsideDown version of the letter
int getBinaryLetter(char letter){
   106c4:	dfc00015 	stw	ra,0(sp)
	int let = getBin(letter);
   106c8:	00106880 	call	10688 <getBin>
	if (upsideDown){
   106cc:	d0e27a17 	ldw	r3,-30232(gp)
   106d0:	18001426 	beq	r3,zero,10724 <getBinaryLetter+0x70>
		//If the user has toggled the upsideDown switch, (SW8), we can use bit shifting to invert the display
		int letter_inv = ~let; //Inverting the binary makes the logic easier to deal with.
   106d4:	0086303a 	nor	r3,zero,r2
		int bit3 = (letter_inv & 0b0001000) >> 3;
		int bit4 = (letter_inv & 0b0010000) << 1;
		int bit5 = (letter_inv & 0b0100000) >> 1;
		int bit6 = (letter_inv & 0b1000000);
		int full_inv = (0b0000000) | bit0 | bit1 | bit2 | bit3 | bit4 | bit5 | bit6;
		return ~full_inv; //Invert the logic back again
   106d8:	1880004c 	andi	r2,r3,1
   106dc:	100890fa 	slli	r4,r2,3
   106e0:	1880008c 	andi	r2,r3,2
   106e4:	1085883a 	add	r2,r2,r2
   106e8:	2084b03a 	or	r2,r4,r2
   106ec:	1900100c 	andi	r4,r3,64
   106f0:	1104b03a 	or	r2,r2,r4
   106f4:	1900010c 	andi	r4,r3,4
   106f8:	2009d07a 	srai	r4,r4,1
   106fc:	1104b03a 	or	r2,r2,r4
   10700:	1900020c 	andi	r4,r3,8
   10704:	2009d0fa 	srai	r4,r4,3
   10708:	1104b03a 	or	r2,r2,r4
   1070c:	1900040c 	andi	r4,r3,16
   10710:	18c0080c 	andi	r3,r3,32
   10714:	1807d07a 	srai	r3,r3,1
   10718:	2109883a 	add	r4,r4,r4
   1071c:	1104b03a 	or	r2,r2,r4
   10720:	10c4303a 	nor	r2,r2,r3
	}
	//Otherwise, if the SW8 is in the rightside-up position, we can just display the letter
	return let;
}
   10724:	dfc00017 	ldw	ra,0(sp)
   10728:	dec00104 	addi	sp,sp,4
   1072c:	f800283a 	ret

00010730 <getBinLowLow>:

//Does initial setup of display

//Gets the lowest number representation of the given letter
int getBinLowLow(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; the inverting logic is easier to deal with
   10730:	21003fcc 	andi	r4,r4,255
   10734:	2100201c 	xori	r4,r4,128
}

//Does initial setup of display

//Gets the lowest number representation of the given letter
int getBinLowLow(char letter){
   10738:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; the inverting logic is easier to deal with
   1073c:	213fe004 	addi	r4,r4,-128
}

//Does initial setup of display

//Gets the lowest number representation of the given letter
int getBinLowLow(char letter){
   10740:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; the inverting logic is easier to deal with
   10744:	00106b40 	call	106b4 <getBinaryLetter>
	int bit0 = (letter_inv & 0b0000001) << 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit0;
	return ~res; //Reinvert the binary representation of the modified letter so the display reads the correct representation
   10748:	0084303a 	nor	r2,zero,r2
   1074c:	1080004c 	andi	r2,r2,1
   10750:	100490fa 	slli	r2,r2,3
}
   10754:	0084303a 	nor	r2,zero,r2
   10758:	dfc00017 	ldw	ra,0(sp)
   1075c:	dec00104 	addi	sp,sp,4
   10760:	f800283a 	ret

00010764 <getBinLow>:
//Gets a lower integer representation of the given letter
int getBinLow(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; inverting the binary makes the logic easier
   10764:	21003fcc 	andi	r4,r4,255
   10768:	2100201c 	xori	r4,r4,128
	int bit0 = (letter_inv & 0b0000001) << 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit0;
	return ~res; //Reinvert the binary representation of the modified letter so the display reads the correct representation
}
//Gets a lower integer representation of the given letter
int getBinLow(char letter){
   1076c:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; inverting the binary makes the logic easier
   10770:	213fe004 	addi	r4,r4,-128
	int bit0 = (letter_inv & 0b0000001) << 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit0;
	return ~res; //Reinvert the binary representation of the modified letter so the display reads the correct representation
}
//Gets a lower integer representation of the given letter
int getBinLow(char letter){
   10774:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; inverting the binary makes the logic easier
   10778:	00106b40 	call	106b4 <getBinaryLetter>
   1077c:	0086303a 	nor	r3,zero,r2
	int bit0 = (letter_inv & 0b0000001) << 6; //This logic deals with bit shifting so the letters appear higher on the display
	int bit1 = (letter_inv & 0b0000010) << 1;
	int bit5 = (letter_inv & 0b0100000) >> 1;
	int bit7 = (letter_inv & 0b1000000) >> 3;
	int res = (0b0000000) | bit0 | bit1 | bit5 | bit7;
	return ~res; //Uninvert the binary representation so the display knows which lights to turn on
   10780:	1900004c 	andi	r4,r3,1
   10784:	200491ba 	slli	r2,r4,6
   10788:	1900008c 	andi	r4,r3,2
   1078c:	2109883a 	add	r4,r4,r4
   10790:	1108b03a 	or	r4,r2,r4
   10794:	1880080c 	andi	r2,r3,32
   10798:	1005d07a 	srai	r2,r2,1
   1079c:	18c0100c 	andi	r3,r3,64
   107a0:	2088b03a 	or	r4,r4,r2
   107a4:	1805d0fa 	srai	r2,r3,3
}
   107a8:	2084303a 	nor	r2,r4,r2
   107ac:	dfc00017 	ldw	ra,0(sp)
   107b0:	dec00104 	addi	sp,sp,4
   107b4:	f800283a 	ret

000107b8 <getBinHigh>:
		return 0b1111111;
	}
}
//Gets the upper binary representation of the character
int getBinHigh(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, the logic is easier to work with inverted
   107b8:	21003fcc 	andi	r4,r4,255
   107bc:	2100201c 	xori	r4,r4,128
	default:
		return 0b1111111;
	}
}
//Gets the upper binary representation of the character
int getBinHigh(char letter){
   107c0:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, the logic is easier to work with inverted
   107c4:	213fe004 	addi	r4,r4,-128
	default:
		return 0b1111111;
	}
}
//Gets the upper binary representation of the character
int getBinHigh(char letter){
   107c8:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, the logic is easier to work with inverted
   107cc:	00106b40 	call	106b4 <getBinaryLetter>
   107d0:	0086303a 	nor	r3,zero,r2
	int bit2 = (letter_inv & 0b0000100) >> 1 ; //This logic deals with bit shifting so the letters appear higher on the display
	int bit3 = (letter_inv & 0b0001000) << 3;
	int bit4 = (letter_inv & 0b0010000) << 1 ;
	int bit6 = (letter_inv & 0b1000000) >> 6;
	int res = (0b0000000) | bit2 | bit3 | bit4 | bit6;
	return ~res;//Uninvert the logic to get the correct representation
   107d4:	1880010c 	andi	r2,r3,4
   107d8:	1009d07a 	srai	r4,r2,1
   107dc:	1880020c 	andi	r2,r3,8
   107e0:	100490fa 	slli	r2,r2,3
   107e4:	2084b03a 	or	r2,r4,r2
   107e8:	1900040c 	andi	r4,r3,16
   107ec:	18c0100c 	andi	r3,r3,64
   107f0:	1807d1ba 	srai	r3,r3,6
   107f4:	2109883a 	add	r4,r4,r4
   107f8:	1104b03a 	or	r2,r2,r4
}
   107fc:	10c4303a 	nor	r2,r2,r3
   10800:	dfc00017 	ldw	ra,0(sp)
   10804:	dec00104 	addi	sp,sp,4
   10808:	f800283a 	ret

0001080c <getBinHighHigh>:
//Gets the highest number representation of the given letter
int getBinHighHigh(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, it is easier to deal with the inverted logic
   1080c:	21003fcc 	andi	r4,r4,255
   10810:	2100201c 	xori	r4,r4,128
	int bit6 = (letter_inv & 0b1000000) >> 6;
	int res = (0b0000000) | bit2 | bit3 | bit4 | bit6;
	return ~res;//Uninvert the logic to get the correct representation
}
//Gets the highest number representation of the given letter
int getBinHighHigh(char letter){
   10814:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, it is easier to deal with the inverted logic
   10818:	213fe004 	addi	r4,r4,-128
	int bit6 = (letter_inv & 0b1000000) >> 6;
	int res = (0b0000000) | bit2 | bit3 | bit4 | bit6;
	return ~res;//Uninvert the logic to get the correct representation
}
//Gets the highest number representation of the given letter
int getBinHighHigh(char letter){
   1081c:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, it is easier to deal with the inverted logic
   10820:	00106b40 	call	106b4 <getBinaryLetter>
	int bit3 = (letter_inv & 0b0001000) >> 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
   10824:	0084303a 	nor	r2,zero,r2
   10828:	1080020c 	andi	r2,r2,8
   1082c:	1005d0fa 	srai	r2,r2,3
}
   10830:	0084303a 	nor	r2,zero,r2
   10834:	dfc00017 	ldw	ra,0(sp)
   10838:	dec00104 	addi	sp,sp,4
   1083c:	f800283a 	ret

00010840 <print>:
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   10840:	008000b4 	movhi	r2,2
   10844:	10840804 	addi	r2,r2,4128
   10848:	11000035 	stwio	r4,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   1084c:	008000b4 	movhi	r2,2
   10850:	10840c04 	addi	r2,r2,4144
   10854:	11400035 	stwio	r5,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   10858:	008000b4 	movhi	r2,2
   1085c:	10841004 	addi	r2,r2,4160
   10860:	11800035 	stwio	r6,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   10864:	008000b4 	movhi	r2,2
   10868:	10841404 	addi	r2,r2,4176
   1086c:	11c00035 	stwio	r7,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   10870:	d8c00017 	ldw	r3,0(sp)
   10874:	008000b4 	movhi	r2,2
   10878:	10841804 	addi	r2,r2,4192
   1087c:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, let0);
   10880:	d8c00117 	ldw	r3,4(sp)
   10884:	008000b4 	movhi	r2,2
   10888:	10841c04 	addi	r2,r2,4208
   1088c:	10c00035 	stwio	r3,0(r2)
   10890:	f800283a 	ret

00010894 <print_letters>:
	return;
}
//Prints each of the letters out to the screen; takes into account the dancing letters
void print_letters(char let5, char let4, char let3, char let2, char let1, char let0, int state){
	//If the display is "muted," don't show anything
	if (disp_off){
   10894:	d0e26f17 	ldw	r3,-30276(gp)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, let0);
	return;
}
//Prints each of the letters out to the screen; takes into account the dancing letters
void print_letters(char let5, char let4, char let3, char let2, char let1, char let0, int state){
   10898:	defff404 	addi	sp,sp,-48
   1089c:	df000a15 	stw	fp,40(sp)
   108a0:	ddc00915 	stw	r23,36(sp)
   108a4:	dd800815 	stw	r22,32(sp)
   108a8:	dd400715 	stw	r21,28(sp)
   108ac:	dd000615 	stw	r20,24(sp)
   108b0:	dcc00515 	stw	r19,20(sp)
   108b4:	dc400315 	stw	r17,12(sp)
   108b8:	dc000215 	stw	r16,8(sp)
   108bc:	070000b4 	movhi	fp,2
   108c0:	05c000b4 	movhi	r23,2
   108c4:	058000b4 	movhi	r22,2
   108c8:	054000b4 	movhi	r21,2
   108cc:	044000b4 	movhi	r17,2
   108d0:	040000b4 	movhi	r16,2
   108d4:	dfc00b15 	stw	ra,44(sp)
   108d8:	dc800415 	stw	r18,16(sp)
   108dc:	dd000c17 	ldw	r20,48(sp)
   108e0:	dcc00d17 	ldw	r19,52(sp)
   108e4:	d8800e17 	ldw	r2,56(sp)
   108e8:	e7040804 	addi	fp,fp,4128
   108ec:	bdc40c04 	addi	r23,r23,4144
   108f0:	b5841004 	addi	r22,r22,4160
   108f4:	ad441404 	addi	r21,r21,4176
   108f8:	8c441804 	addi	r17,r17,4192
   108fc:	84041c04 	addi	r16,r16,4208
	//If the display is "muted," don't show anything
	if (disp_off){
   10900:	18000726 	beq	r3,zero,10920 <print_letters+0x8c>
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   10904:	00801fc4 	movi	r2,127
   10908:	e0800035 	stwio	r2,0(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   1090c:	b8800035 	stwio	r2,0(r23)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   10910:	b0800035 	stwio	r2,0(r22)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   10914:	a8800035 	stwio	r2,0(r21)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   10918:	88800035 	stwio	r2,0(r17)
   1091c:	00007006 	br	10ae0 <print_letters+0x24c>
   10920:	31803fcc 	andi	r6,r6,255
   10924:	39c03fcc 	andi	r7,r7,255
   10928:	3180201c 	xori	r6,r6,128
   1092c:	39c0201c 	xori	r7,r7,128
   10930:	21003fcc 	andi	r4,r4,255
   10934:	2c803fcc 	andi	r18,r5,255
   10938:	31bfe004 	addi	r6,r6,-128
   1093c:	39ffe004 	addi	r7,r7,-128
   10940:	a5003fcc 	andi	r20,r20,255
   10944:	9cc03fcc 	andi	r19,r19,255
   10948:	2100201c 	xori	r4,r4,128
   1094c:	9480201c 	xori	r18,r18,128
   10950:	a500201c 	xori	r20,r20,128
   10954:	9cc0201c 	xori	r19,r19,128
	if (disp_off){
		print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
		return;
	}
	//State refers to which dancing state the characters are in
	switch (state){
   10958:	00c00044 	movi	r3,1
   1095c:	d9800015 	stw	r6,0(sp)
   10960:	d9c00115 	stw	r7,4(sp)
   10964:	213fe004 	addi	r4,r4,-128
   10968:	94bfe004 	addi	r18,r18,-128
   1096c:	a53fe004 	addi	r20,r20,-128
   10970:	9cffe004 	addi	r19,r19,-128
   10974:	10c02826 	beq	r2,r3,10a18 <print_letters+0x184>
   10978:	18801216 	blt	r3,r2,109c4 <print_letters+0x130>
   1097c:	1000481e 	bne	r2,zero,10aa0 <print_letters+0x20c>
	//This is the case where the letters are shifted down by the maximum amount on the display
	case 0:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinLowLow(let5));
   10980:	00107300 	call	10730 <getBinLowLow>
   10984:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinLowLow(let4));
   10988:	9009883a 	mov	r4,r18
   1098c:	00107300 	call	10730 <getBinLowLow>
   10990:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinLowLow(let3));
   10994:	d9000017 	ldw	r4,0(sp)
   10998:	00107300 	call	10730 <getBinLowLow>
   1099c:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinLowLow(let2));
   109a0:	d9000117 	ldw	r4,4(sp)
   109a4:	00107300 	call	10730 <getBinLowLow>
   109a8:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinLowLow(let1));
   109ac:	a009883a 	mov	r4,r20
   109b0:	00107300 	call	10730 <getBinLowLow>
   109b4:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinLowLow(let0));
   109b8:	9809883a 	mov	r4,r19
   109bc:	00107300 	call	10730 <getBinLowLow>
   109c0:	00004706 	br	10ae0 <print_letters+0x24c>
	if (disp_off){
		print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
		return;
	}
	//State refers to which dancing state the characters are in
	switch (state){
   109c4:	00c00084 	movi	r3,2
   109c8:	10c02426 	beq	r2,r3,10a5c <print_letters+0x1c8>
   109cc:	00c000c4 	movi	r3,3
   109d0:	10c0331e 	bne	r2,r3,10aa0 <print_letters+0x20c>
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinaryLetter(let1));
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinaryLetter(let0));
		return;
	//This is the case where the letters are shifted up a bit on the display
	case 3:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinHigh(let5));
   109d4:	00107b80 	call	107b8 <getBinHigh>
   109d8:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinHigh(let4));
   109dc:	9009883a 	mov	r4,r18
   109e0:	00107b80 	call	107b8 <getBinHigh>
   109e4:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinHigh(let3));
   109e8:	d9000017 	ldw	r4,0(sp)
   109ec:	00107b80 	call	107b8 <getBinHigh>
   109f0:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinHigh(let2));
   109f4:	d9000117 	ldw	r4,4(sp)
   109f8:	00107b80 	call	107b8 <getBinHigh>
   109fc:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinHigh(let1));
   10a00:	a009883a 	mov	r4,r20
   10a04:	00107b80 	call	107b8 <getBinHigh>
   10a08:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinHigh(let0));
   10a0c:	9809883a 	mov	r4,r19
   10a10:	00107b80 	call	107b8 <getBinHigh>
   10a14:	00003206 	br	10ae0 <print_letters+0x24c>
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinLowLow(let1));
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinLowLow(let0));
		return;
	//This is the case where the letters are shifted down a bit on the display
	case 1:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinLow(let5));
   10a18:	00107640 	call	10764 <getBinLow>
   10a1c:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinLow(let4));
   10a20:	9009883a 	mov	r4,r18
   10a24:	00107640 	call	10764 <getBinLow>
   10a28:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinLow(let3));
   10a2c:	d9000017 	ldw	r4,0(sp)
   10a30:	00107640 	call	10764 <getBinLow>
   10a34:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinLow(let2));
   10a38:	d9000117 	ldw	r4,4(sp)
   10a3c:	00107640 	call	10764 <getBinLow>
   10a40:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinLow(let1));
   10a44:	a009883a 	mov	r4,r20
   10a48:	00107640 	call	10764 <getBinLow>
   10a4c:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinLow(let0));
   10a50:	9809883a 	mov	r4,r19
   10a54:	00107640 	call	10764 <getBinLow>
   10a58:	00002106 	br	10ae0 <print_letters+0x24c>
		return;
	//This is the "main" case, where the full letters are displayed on the display
	case 2:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinaryLetter(let5));
   10a5c:	00106b40 	call	106b4 <getBinaryLetter>
   10a60:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinaryLetter(let4));
   10a64:	9009883a 	mov	r4,r18
   10a68:	00106b40 	call	106b4 <getBinaryLetter>
   10a6c:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinaryLetter(let3));
   10a70:	d9000017 	ldw	r4,0(sp)
   10a74:	00106b40 	call	106b4 <getBinaryLetter>
   10a78:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinaryLetter(let2));
   10a7c:	d9000117 	ldw	r4,4(sp)
   10a80:	00106b40 	call	106b4 <getBinaryLetter>
   10a84:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinaryLetter(let1));
   10a88:	a009883a 	mov	r4,r20
   10a8c:	00106b40 	call	106b4 <getBinaryLetter>
   10a90:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinaryLetter(let0));
   10a94:	9809883a 	mov	r4,r19
   10a98:	00106b40 	call	106b4 <getBinaryLetter>
   10a9c:	00001006 	br	10ae0 <print_letters+0x24c>
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinHigh(let1));
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinHigh(let0));
		return;
	//This is the case where the letters are shifted by the maximum amount on the display
	default:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinHighHigh(let5));
   10aa0:	001080c0 	call	1080c <getBinHighHigh>
   10aa4:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinHighHigh(let4));
   10aa8:	9009883a 	mov	r4,r18
   10aac:	001080c0 	call	1080c <getBinHighHigh>
   10ab0:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinHighHigh(let3));
   10ab4:	d9000017 	ldw	r4,0(sp)
   10ab8:	001080c0 	call	1080c <getBinHighHigh>
   10abc:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinHighHigh(let2));
   10ac0:	d9000117 	ldw	r4,4(sp)
   10ac4:	001080c0 	call	1080c <getBinHighHigh>
   10ac8:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinHighHigh(let1));
   10acc:	a009883a 	mov	r4,r20
   10ad0:	001080c0 	call	1080c <getBinHighHigh>
   10ad4:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinHighHigh(let0));
   10ad8:	9809883a 	mov	r4,r19
   10adc:	001080c0 	call	1080c <getBinHighHigh>
   10ae0:	80800035 	stwio	r2,0(r16)
		return;
	}
}
   10ae4:	dfc00b17 	ldw	ra,44(sp)
   10ae8:	df000a17 	ldw	fp,40(sp)
   10aec:	ddc00917 	ldw	r23,36(sp)
   10af0:	dd800817 	ldw	r22,32(sp)
   10af4:	dd400717 	ldw	r21,28(sp)
   10af8:	dd000617 	ldw	r20,24(sp)
   10afc:	dcc00517 	ldw	r19,20(sp)
   10b00:	dc800417 	ldw	r18,16(sp)
   10b04:	dc400317 	ldw	r17,12(sp)
   10b08:	dc000217 	ldw	r16,8(sp)
   10b0c:	dec00c04 	addi	sp,sp,48
   10b10:	f800283a 	ret

00010b14 <main>:
	// ACCELEROMTER INITIALISE
	alt_32 x_read;
	alt_32 y_read;
	alt_32 z_read;
	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   10b14:	010000b4 	movhi	r4,2
    IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_BASE, 0x0000);
    alt_irq_register(TIMER_IRQ, 0, isr);
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0007);
}

int main(){
   10b18:	def9ec04 	addi	sp,sp,-6224
	// ACCELEROMTER INITIALISE
	alt_32 x_read;
	alt_32 y_read;
	alt_32 z_read;
	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   10b1c:	21374e04 	addi	r4,r4,-8904
    IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_BASE, 0x0000);
    alt_irq_register(TIMER_IRQ, 0, isr);
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0007);
}

int main(){
   10b20:	dfc61315 	stw	ra,6220(sp)
   10b24:	df061215 	stw	fp,6216(sp)
   10b28:	ddc61115 	stw	r23,6212(sp)
   10b2c:	dd861015 	stw	r22,6208(sp)
   10b30:	dd460f15 	stw	r21,6204(sp)
   10b34:	dd060e15 	stw	r20,6200(sp)
   10b38:	dcc60d15 	stw	r19,6196(sp)
   10b3c:	dc860c15 	stw	r18,6192(sp)
   10b40:	dc460b15 	stw	r17,6188(sp)
   10b44:	dc060a15 	stw	r16,6184(sp)
	// ACCELEROMTER INITIALISE
	alt_32 x_read;
	alt_32 y_read;
	alt_32 z_read;
	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   10b48:	001d9fc0 	call	1d9fc <alt_up_accelerometer_spi_open_dev>
	if (acc_dev == NULL) { // if return 1, check if the spi ip name is "accelerometer_spi"
   10b4c:	1000e726 	beq	r2,zero,10eec <main+0x3d8>
		return 1;
	}
	timer_init(sys_timer_isr);
   10b50:	01000074 	movhi	r4,1
   10b54:	21006f04 	addi	r4,r4,444
   10b58:	1029883a 	mov	r20,r2
   10b5c:	00106180 	call	10618 <timer_init>
	char accel_data_z[4*CHARLIM];
	char switch_data[4*CHARLIM];
	char button_data[4*CHARLIM];

	// SWITCH
	int switch_datain, switch_data_old = IORD_ALTERA_AVALON_PIO_DATA(SWITCH_BASE);
   10b60:	008000b4 	movhi	r2,2
   10b64:	10842404 	addi	r2,r2,4240
   10b68:	10c00037 	ldwio	r3,0(r2)
	// BUTTON
	int button_datain, button_data_old = IORD_ALTERA_AVALON_PIO_DATA(BUTTON_BASE);
   10b6c:	04c000b4 	movhi	r19,2
   10b70:	9cc42804 	addi	r19,r19,4256
   10b74:	98c00037 	ldwio	r3,0(r19)
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
   10b78:	04c000b4 	movhi	r19,2


	int length = 0;
	int temp_length = 0;
	int x = -1;
	int count = 0;
   10b7c:	0025883a 	mov	r18,zero
	alt_32 out_y, out_x;


	int length = 0;
	int temp_length = 0;
	int x = -1;
   10b80:	047fffc4 	movi	r17,-1
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
   10b84:	9cfcfa04 	addi	r19,r19,-3096
	int x = -1;
	int count = 0;

	while (1) {
		count += 1;
		IOWR_ALTERA_AVALON_PIO_DATA(LED_BASE, life);
   10b88:	d0a00017 	ldw	r2,-32768(gp)
   10b8c:	00c000b4 	movhi	r3,2
	int temp_length = 0;
	int x = -1;
	int count = 0;

	while (1) {
		count += 1;
   10b90:	94800044 	addi	r18,r18,1
		IOWR_ALTERA_AVALON_PIO_DATA(LED_BASE, life);
   10b94:	18c42004 	addi	r3,r3,4224
   10b98:	18800035 	stwio	r2,0(r3)

		/* <--> SENDING DATA <--> */
		alt_up_accelerometer_spi_read_x_axis(acc_dev, & x_read);
   10b9c:	d9460104 	addi	r5,sp,6148
   10ba0:	a009883a 	mov	r4,r20
   10ba4:	001da540 	call	1da54 <alt_up_accelerometer_spi_read_x_axis>
		alt_up_accelerometer_spi_read_y_axis(acc_dev, & y_read);
   10ba8:	d9460004 	addi	r5,sp,6144
   10bac:	a009883a 	mov	r4,r20
   10bb0:	001daac0 	call	1daac <alt_up_accelerometer_spi_read_y_axis>
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
   10bb4:	98800317 	ldw	r2,12(r19)
		filter_x[3] = filter_x[2];
		filter_x[2] = filter_x[1];
		filter_x[1] = filter_x[0];
		filter_x[0] = x_read;

		filter_y[4] = filter_y[3];
   10bb8:	040000b4 	movhi	r16,2
   10bbc:	843cf504 	addi	r16,r16,-3116
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
   10bc0:	98800415 	stw	r2,16(r19)
		filter_x[3] = filter_x[2];
   10bc4:	98800217 	ldw	r2,8(r19)
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
		{
			out_x += h[i]*filter_x[i];
   10bc8:	034000b4 	movhi	r13,2

		filter_y[4] = filter_y[3];
		filter_y[3] = filter_y[2];
		filter_y[2] = filter_y[1];
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;
   10bcc:	0013883a 	mov	r9,zero

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
		filter_x[3] = filter_x[2];
   10bd0:	98800315 	stw	r2,12(r19)
		filter_x[2] = filter_x[1];
   10bd4:	98800117 	ldw	r2,4(r19)
		alt_up_accelerometer_spi_read_x_axis(acc_dev, & x_read);
		alt_up_accelerometer_spi_read_y_axis(acc_dev, & y_read);
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;
   10bd8:	0039883a 	mov	fp,zero
		/* <--> SENDING DATA <--> */
		alt_up_accelerometer_spi_read_x_axis(acc_dev, & x_read);
		alt_up_accelerometer_spi_read_y_axis(acc_dev, & y_read);
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
   10bdc:	002f883a 	mov	r23,zero
		out_x = 0;

		filter_x[4] = filter_x[3];
		filter_x[3] = filter_x[2];
		filter_x[2] = filter_x[1];
   10be0:	98800215 	stw	r2,8(r19)
		filter_x[1] = filter_x[0];
   10be4:	98800017 	ldw	r2,0(r19)
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
		{
			out_x += h[i]*filter_x[i];
   10be8:	6b776004 	addi	r13,r13,-8832
		filter_y[3] = filter_y[2];
		filter_y[2] = filter_y[1];
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
   10bec:	03000504 	movi	r12,20
		out_x = 0;

		filter_x[4] = filter_x[3];
		filter_x[3] = filter_x[2];
		filter_x[2] = filter_x[1];
		filter_x[1] = filter_x[0];
   10bf0:	98800115 	stw	r2,4(r19)
		filter_x[0] = x_read;
   10bf4:	d8860117 	ldw	r2,6148(sp)
   10bf8:	98800015 	stw	r2,0(r19)

		filter_y[4] = filter_y[3];
   10bfc:	80800317 	ldw	r2,12(r16)
   10c00:	80800415 	stw	r2,16(r16)
		filter_y[3] = filter_y[2];
   10c04:	80800217 	ldw	r2,8(r16)
   10c08:	80800315 	stw	r2,12(r16)
		filter_y[2] = filter_y[1];
   10c0c:	80800117 	ldw	r2,4(r16)
   10c10:	80800215 	stw	r2,8(r16)
		filter_y[1] = filter_y[0];
   10c14:	80800017 	ldw	r2,0(r16)
   10c18:	80800115 	stw	r2,4(r16)
		filter_y[0] = y_read;
   10c1c:	d8860017 	ldw	r2,6144(sp)
   10c20:	80800015 	stw	r2,0(r16)

		for ( int i = 0; i < 5; i++ )
		{
			out_x += h[i]*filter_x[i];
   10c24:	4a45883a 	add	r2,r9,r9
   10c28:	00c000b4 	movhi	r3,2
   10c2c:	1345883a 	add	r2,r2,r13
   10c30:	18fcfa04 	addi	r3,r3,-3096
   10c34:	15800017 	ldw	r22,0(r2)
   10c38:	15400117 	ldw	r21,4(r2)
   10c3c:	48c5883a 	add	r2,r9,r3
   10c40:	11000017 	ldw	r4,0(r2)
   10c44:	db060815 	stw	r12,6176(sp)
   10c48:	db460915 	stw	r13,6180(sp)
   10c4c:	da460415 	stw	r9,6160(sp)
   10c50:	0013fdc0 	call	13fdc <__floatsidf>
   10c54:	b00d883a 	mov	r6,r22
   10c58:	a80f883a 	mov	r7,r21
   10c5c:	180b883a 	mov	r5,r3
   10c60:	1009883a 	mov	r4,r2
   10c64:	0012df40 	call	12df4 <__muldf3>
   10c68:	e009883a 	mov	r4,fp
   10c6c:	d8c60315 	stw	r3,6156(sp)
   10c70:	d8860215 	stw	r2,6152(sp)
   10c74:	0013fdc0 	call	13fdc <__floatsidf>
   10c78:	db860217 	ldw	r14,6152(sp)
   10c7c:	d9460317 	ldw	r5,6156(sp)
   10c80:	100d883a 	mov	r6,r2
   10c84:	7009883a 	mov	r4,r14
   10c88:	180f883a 	mov	r7,r3
   10c8c:	0011a140 	call	11a14 <__adddf3>
   10c90:	180b883a 	mov	r5,r3
   10c94:	1009883a 	mov	r4,r2
   10c98:	0013f5c0 	call	13f5c <__fixdfsi>
			out_y += h[i]*filter_y[i];
   10c9c:	da460417 	ldw	r9,6160(sp)
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
		{
			out_x += h[i]*filter_x[i];
   10ca0:	1039883a 	mov	fp,r2
			out_y += h[i]*filter_y[i];
   10ca4:	4c05883a 	add	r2,r9,r16
   10ca8:	11000017 	ldw	r4,0(r2)
   10cac:	0013fdc0 	call	13fdc <__floatsidf>
   10cb0:	b00d883a 	mov	r6,r22
   10cb4:	a80f883a 	mov	r7,r21
   10cb8:	180b883a 	mov	r5,r3
   10cbc:	1009883a 	mov	r4,r2
   10cc0:	0012df40 	call	12df4 <__muldf3>
   10cc4:	b809883a 	mov	r4,r23
   10cc8:	102d883a 	mov	r22,r2
   10ccc:	182b883a 	mov	r21,r3
   10cd0:	0013fdc0 	call	13fdc <__floatsidf>
   10cd4:	100d883a 	mov	r6,r2
   10cd8:	180f883a 	mov	r7,r3
   10cdc:	b009883a 	mov	r4,r22
   10ce0:	a80b883a 	mov	r5,r21
   10ce4:	0011a140 	call	11a14 <__adddf3>
   10ce8:	1009883a 	mov	r4,r2
   10cec:	180b883a 	mov	r5,r3
   10cf0:	0013f5c0 	call	13f5c <__fixdfsi>
   10cf4:	da460417 	ldw	r9,6160(sp)
		filter_y[3] = filter_y[2];
		filter_y[2] = filter_y[1];
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
   10cf8:	db060817 	ldw	r12,6176(sp)
		{
			out_x += h[i]*filter_x[i];
			out_y += h[i]*filter_y[i];
   10cfc:	102f883a 	mov	r23,r2
   10d00:	4a400104 	addi	r9,r9,4
		filter_y[3] = filter_y[2];
		filter_y[2] = filter_y[1];
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
   10d04:	db460917 	ldw	r13,6180(sp)
   10d08:	4b3fc61e 	bne	r9,r12,10c24 <_gp+0xfffea27c>
			out_x += h[i]*filter_x[i];
			out_y += h[i]*filter_y[i];
		}

		//sprintf(accel_data_z, "%x", z_read);
		sprintf(accel_data_x, "%x", out_x);
   10d0c:	014000b4 	movhi	r5,2
   10d10:	e00d883a 	mov	r6,fp
   10d14:	d9050004 	addi	r4,sp,5120
   10d18:	29775404 	addi	r5,r5,-8880
   10d1c:	0014c380 	call	14c38 <sprintf>
		sprintf(accel_data_y, "%x", out_y);
   10d20:	014000b4 	movhi	r5,2
   10d24:	b80d883a 	mov	r6,r23
   10d28:	29775404 	addi	r5,r5,-8880
   10d2c:	d9040004 	addi	r4,sp,4096
   10d30:	0014c380 	call	14c38 <sprintf>

		//SWITCH
		//switch_datain = IORD_ALTERA_AVALON_PIO_DATA(SWITCH_BASE);
		//output_switch( switch_datain, switch_data_old );
		//switch_data_old = switch_datain;
		switch_datain = IORD_ALTERA_AVALON_PIO_DATA(SWITCH_BASE);
   10d34:	008000b4 	movhi	r2,2
   10d38:	10842404 	addi	r2,r2,4240
   10d3c:	11800037 	ldwio	r6,0(r2)
		sprintf(switch_data, "%x", switch_datain);
   10d40:	014000b4 	movhi	r5,2
   10d44:	29775404 	addi	r5,r5,-8880
   10d48:	d9030004 	addi	r4,sp,3072
   10d4c:	0014c380 	call	14c38 <sprintf>

		// BUTTON
		//button_datain = IORD_ALTERA_AVALON_PIO_DATA(BUTTON_BASE);
		//output_button( button_datain, button_data_old );
		//button_data_old = button_datain;
		button_datain = IORD_ALTERA_AVALON_PIO_DATA(BUTTON_BASE);
   10d50:	00c000b4 	movhi	r3,2
   10d54:	18c42804 	addi	r3,r3,4256
   10d58:	19800037 	ldwio	r6,0(r3)
		sprintf(button_data, "%x", button_datain);
   10d5c:	014000b4 	movhi	r5,2
   10d60:	29775404 	addi	r5,r5,-8880
   10d64:	d9020004 	addi	r4,sp,2048
   10d68:	0014c380 	call	14c38 <sprintf>

		print_data(accel_data_x, accel_data_y, switch_data, button_data);
   10d6c:	d9c20004 	addi	r7,sp,2048
   10d70:	d9830004 	addi	r6,sp,3072
   10d74:	d9440004 	addi	r5,sp,4096
   10d78:	d9050004 	addi	r4,sp,5120
   10d7c:	001023c0 	call	1023c <print_data>

		// HEX7 display
		char temp_data[4*CHARLIM];
		char to_print[4*CHARLIM];

		strcpy(to_print, read_chars());
   10d80:	001044c0 	call	1044c <read_chars>
   10d84:	100b883a 	mov	r5,r2
   10d88:	d809883a 	mov	r4,sp
   10d8c:	0014e080 	call	14e08 <strcpy>
		strcpy(temp_data, to_print);
   10d90:	d80b883a 	mov	r5,sp
   10d94:	d9010004 	addi	r4,sp,1024
   10d98:	0014e080 	call	14e08 <strcpy>

		if (count == 5)
   10d9c:	00800144 	movi	r2,5
   10da0:	9080021e 	bne	r18,r2,10dac <main+0x298>
		{
			x += 1;
   10da4:	8c400044 	addi	r17,r17,1
			count = 0;
   10da8:	0025883a 	mov	r18,zero
   10dac:	01c000b4 	movhi	r7,2
   10db0:	018000b4 	movhi	r6,2
   10db4:	00c000b4 	movhi	r3,2
   10db8:	058000b4 	movhi	r22,2
   10dbc:	054000b4 	movhi	r21,2
   10dc0:	040000b4 	movhi	r16,2
		}
		if (x>40)
   10dc4:	00800a04 	movi	r2,40
   10dc8:	39c40804 	addi	r7,r7,4128
   10dcc:	31840c04 	addi	r6,r6,4144
   10dd0:	18c41004 	addi	r3,r3,4160
   10dd4:	b5841404 	addi	r22,r22,4176
   10dd8:	ad441804 	addi	r21,r21,4192
   10ddc:	84041c04 	addi	r16,r16,4208
   10de0:	1440070e 	bge	r2,r17,10e00 <main+0x2ec>
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   10de4:	00801fc4 	movi	r2,127
   10de8:	38800035 	stwio	r2,0(r7)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   10dec:	30800035 	stwio	r2,0(r6)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   10df0:	18800035 	stwio	r2,0(r3)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   10df4:	b0800035 	stwio	r2,0(r22)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   10df8:	a8800035 	stwio	r2,0(r21)
   10dfc:	00003906 	br	10ee4 <main+0x3d0>
		if (x>40)
		{
			print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
		}
		else{
			print(getBin(to_print[x%20]), getBin(to_print[(x+1)%20]), getBin(to_print[(x+2)%20]), getBin(to_print[(x+3)%20]), getBin(to_print[(x+4)%20]), getBin(to_print[(x+5)%20]));
   10e00:	01400504 	movi	r5,20
   10e04:	8809883a 	mov	r4,r17
   10e08:	d9c60515 	stw	r7,6164(sp)
   10e0c:	d8c60715 	stw	r3,6172(sp)
   10e10:	d9860615 	stw	r6,6168(sp)
   10e14:	00118e40 	call	118e4 <__modsi3>
   10e18:	d885883a 	add	r2,sp,r2
   10e1c:	11000007 	ldb	r4,0(r2)
   10e20:	00106880 	call	10688 <getBin>
   10e24:	01400504 	movi	r5,20
   10e28:	89000044 	addi	r4,r17,1
   10e2c:	d8860915 	stw	r2,6180(sp)
   10e30:	00118e40 	call	118e4 <__modsi3>
   10e34:	d885883a 	add	r2,sp,r2
   10e38:	11000007 	ldb	r4,0(r2)
   10e3c:	00106880 	call	10688 <getBin>
   10e40:	01400504 	movi	r5,20
   10e44:	89000084 	addi	r4,r17,2
   10e48:	d8860815 	stw	r2,6176(sp)
   10e4c:	00118e40 	call	118e4 <__modsi3>
   10e50:	d885883a 	add	r2,sp,r2
   10e54:	11000007 	ldb	r4,0(r2)
   10e58:	00106880 	call	10688 <getBin>
   10e5c:	01400504 	movi	r5,20
   10e60:	890000c4 	addi	r4,r17,3
   10e64:	d8860315 	stw	r2,6156(sp)
   10e68:	00118e40 	call	118e4 <__modsi3>
   10e6c:	d885883a 	add	r2,sp,r2
   10e70:	11000007 	ldb	r4,0(r2)
   10e74:	00106880 	call	10688 <getBin>
   10e78:	01400504 	movi	r5,20
   10e7c:	89000104 	addi	r4,r17,4
   10e80:	d8860215 	stw	r2,6152(sp)
   10e84:	00118e40 	call	118e4 <__modsi3>
   10e88:	d885883a 	add	r2,sp,r2
   10e8c:	11000007 	ldb	r4,0(r2)
   10e90:	00106880 	call	10688 <getBin>
   10e94:	01400504 	movi	r5,20
   10e98:	89000144 	addi	r4,r17,5
   10e9c:	d8860415 	stw	r2,6160(sp)
   10ea0:	00118e40 	call	118e4 <__modsi3>
   10ea4:	d885883a 	add	r2,sp,r2
   10ea8:	11000007 	ldb	r4,0(r2)
   10eac:	00106880 	call	10688 <getBin>
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   10eb0:	d9c60517 	ldw	r7,6164(sp)
   10eb4:	db460917 	ldw	r13,6180(sp)
   10eb8:	3b400035 	stwio	r13,0(r7)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   10ebc:	d9860617 	ldw	r6,6168(sp)
   10ec0:	db060817 	ldw	r12,6176(sp)
   10ec4:	33000035 	stwio	r12,0(r6)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   10ec8:	d8c60717 	ldw	r3,6172(sp)
   10ecc:	dac60317 	ldw	r11,6156(sp)
   10ed0:	1ac00035 	stwio	r11,0(r3)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   10ed4:	da860217 	ldw	r10,6152(sp)
   10ed8:	b2800035 	stwio	r10,0(r22)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   10edc:	da460417 	ldw	r9,6160(sp)
   10ee0:	aa400035 	stwio	r9,0(r21)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, let0);
   10ee4:	80800035 	stwio	r2,0(r16)
			print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
		}
		else{
			print(getBin(to_print[x%20]), getBin(to_print[(x+1)%20]), getBin(to_print[(x+2)%20]), getBin(to_print[(x+3)%20]), getBin(to_print[(x+4)%20]), getBin(to_print[(x+5)%20]));
		}
	}
   10ee8:	003f2706 	br	10b88 <_gp+0xfffea1e0>
	return 0;
}
   10eec:	00800044 	movi	r2,1
   10ef0:	dfc61317 	ldw	ra,6220(sp)
   10ef4:	df061217 	ldw	fp,6216(sp)
   10ef8:	ddc61117 	ldw	r23,6212(sp)
   10efc:	dd861017 	ldw	r22,6208(sp)
   10f00:	dd460f17 	ldw	r21,6204(sp)
   10f04:	dd060e17 	ldw	r20,6200(sp)
   10f08:	dcc60d17 	ldw	r19,6196(sp)
   10f0c:	dc860c17 	ldw	r18,6192(sp)
   10f10:	dc460b17 	ldw	r17,6188(sp)
   10f14:	dc060a17 	ldw	r16,6184(sp)
   10f18:	dec61404 	addi	sp,sp,6224
   10f1c:	f800283a 	ret

00010f20 <log>:
   10f20:	defff104 	addi	sp,sp,-60
   10f24:	dd000d15 	stw	r20,52(sp)
   10f28:	050000b4 	movhi	r20,2
   10f2c:	dcc00c15 	stw	r19,48(sp)
   10f30:	dc800b15 	stw	r18,44(sp)
   10f34:	dc400a15 	stw	r17,40(sp)
   10f38:	dc000915 	stw	r16,36(sp)
   10f3c:	dfc00e15 	stw	ra,56(sp)
   10f40:	a53a6c04 	addi	r20,r20,-5712
   10f44:	2027883a 	mov	r19,r4
   10f48:	2825883a 	mov	r18,r5
   10f4c:	00110bc0 	call	110bc <__ieee754_log>
   10f50:	1821883a 	mov	r16,r3
   10f54:	a0c00017 	ldw	r3,0(r20)
   10f58:	1023883a 	mov	r17,r2
   10f5c:	00bfffc4 	movi	r2,-1
   10f60:	18800a26 	beq	r3,r2,10f8c <log+0x6c>
   10f64:	9809883a 	mov	r4,r19
   10f68:	900b883a 	mov	r5,r18
   10f6c:	00117d80 	call	117d8 <__fpclassifyd>
   10f70:	10000626 	beq	r2,zero,10f8c <log+0x6c>
   10f74:	000d883a 	mov	r6,zero
   10f78:	000f883a 	mov	r7,zero
   10f7c:	9809883a 	mov	r4,r19
   10f80:	900b883a 	mov	r5,r18
   10f84:	0012d180 	call	12d18 <__gedf2>
   10f88:	00800a0e 	bge	zero,r2,10fb4 <log+0x94>
   10f8c:	8805883a 	mov	r2,r17
   10f90:	8007883a 	mov	r3,r16
   10f94:	dfc00e17 	ldw	ra,56(sp)
   10f98:	dd000d17 	ldw	r20,52(sp)
   10f9c:	dcc00c17 	ldw	r19,48(sp)
   10fa0:	dc800b17 	ldw	r18,44(sp)
   10fa4:	dc400a17 	ldw	r17,40(sp)
   10fa8:	dc000917 	ldw	r16,36(sp)
   10fac:	dec00f04 	addi	sp,sp,60
   10fb0:	f800283a 	ret
   10fb4:	008000b4 	movhi	r2,2
   10fb8:	a4000017 	ldw	r16,0(r20)
   10fbc:	10b76a04 	addi	r2,r2,-8792
   10fc0:	d8000815 	stw	zero,32(sp)
   10fc4:	d8800115 	stw	r2,4(sp)
   10fc8:	dcc00215 	stw	r19,8(sp)
   10fcc:	dc800315 	stw	r18,12(sp)
   10fd0:	dcc00415 	stw	r19,16(sp)
   10fd4:	dc800515 	stw	r18,20(sp)
   10fd8:	000d883a 	mov	r6,zero
   10fdc:	000f883a 	mov	r7,zero
   10fe0:	9809883a 	mov	r4,r19
   10fe4:	900b883a 	mov	r5,r18
   10fe8:	8000101e 	bne	r16,zero,1102c <log+0x10c>
   10fec:	00b80034 	movhi	r2,57344
   10ff0:	d8800615 	stw	r2,24(sp)
   10ff4:	00b1fc34 	movhi	r2,51184
   10ff8:	10bfffc4 	addi	r2,r2,-1
   10ffc:	d8800715 	stw	r2,28(sp)
   11000:	0012c900 	call	12c90 <__eqdf2>
   11004:	10001f1e 	bne	r2,zero,11084 <log+0x164>
   11008:	00800084 	movi	r2,2
   1100c:	d8800015 	stw	r2,0(sp)
   11010:	d809883a 	mov	r4,sp
   11014:	001184c0 	call	1184c <matherr>
   11018:	1000151e 	bne	r2,zero,11070 <log+0x150>
   1101c:	00142200 	call	14220 <__errno>
   11020:	00c00884 	movi	r3,34
   11024:	10c00015 	stw	r3,0(r2)
   11028:	00001106 	br	11070 <log+0x150>
   1102c:	00bffc34 	movhi	r2,65520
   11030:	d8000615 	stw	zero,24(sp)
   11034:	d8800715 	stw	r2,28(sp)
   11038:	0012c900 	call	12c90 <__eqdf2>
   1103c:	10001726 	beq	r2,zero,1109c <log+0x17c>
   11040:	00800044 	movi	r2,1
   11044:	d8800015 	stw	r2,0(sp)
   11048:	00800084 	movi	r2,2
   1104c:	80800f1e 	bne	r16,r2,1108c <log+0x16c>
   11050:	00142200 	call	14220 <__errno>
   11054:	00c00844 	movi	r3,33
   11058:	10c00015 	stw	r3,0(r2)
   1105c:	010000b4 	movhi	r4,2
   11060:	21374404 	addi	r4,r4,-8944
   11064:	00118540 	call	11854 <nan>
   11068:	d8800615 	stw	r2,24(sp)
   1106c:	d8c00715 	stw	r3,28(sp)
   11070:	d8800817 	ldw	r2,32(sp)
   11074:	10000d1e 	bne	r2,zero,110ac <log+0x18c>
   11078:	d8800617 	ldw	r2,24(sp)
   1107c:	d8c00717 	ldw	r3,28(sp)
   11080:	003fc406 	br	10f94 <_gp+0xfffea5ec>
   11084:	00800044 	movi	r2,1
   11088:	d8800015 	stw	r2,0(sp)
   1108c:	d809883a 	mov	r4,sp
   11090:	001184c0 	call	1184c <matherr>
   11094:	103ff11e 	bne	r2,zero,1105c <_gp+0xfffea6b4>
   11098:	003fed06 	br	11050 <_gp+0xfffea6a8>
   1109c:	00800084 	movi	r2,2
   110a0:	d8800015 	stw	r2,0(sp)
   110a4:	80bfdd26 	beq	r16,r2,1101c <_gp+0xfffea674>
   110a8:	003fd906 	br	11010 <_gp+0xfffea668>
   110ac:	00142200 	call	14220 <__errno>
   110b0:	d8c00817 	ldw	r3,32(sp)
   110b4:	10c00015 	stw	r3,0(r2)
   110b8:	003fef06 	br	11078 <_gp+0xfffea6d0>

000110bc <__ieee754_log>:
   110bc:	defff204 	addi	sp,sp,-56
   110c0:	01800434 	movhi	r6,16
   110c4:	dfc00d15 	stw	ra,52(sp)
   110c8:	df000c15 	stw	fp,48(sp)
   110cc:	ddc00b15 	stw	r23,44(sp)
   110d0:	dd800a15 	stw	r22,40(sp)
   110d4:	dd400915 	stw	r21,36(sp)
   110d8:	dd000815 	stw	r20,32(sp)
   110dc:	dcc00715 	stw	r19,28(sp)
   110e0:	dc800615 	stw	r18,24(sp)
   110e4:	dc400515 	stw	r17,20(sp)
   110e8:	dc000415 	stw	r16,16(sp)
   110ec:	31bfffc4 	addi	r6,r6,-1
   110f0:	280f883a 	mov	r7,r5
   110f4:	2005883a 	mov	r2,r4
   110f8:	31404616 	blt	r6,r5,11214 <__ieee754_log+0x158>
   110fc:	00e00034 	movhi	r3,32768
   11100:	18ffffc4 	addi	r3,r3,-1
   11104:	28c6703a 	and	r3,r5,r3
   11108:	1906b03a 	or	r3,r3,r4
   1110c:	1800f426 	beq	r3,zero,114e0 <__ieee754_log+0x424>
   11110:	28017816 	blt	r5,zero,116f4 <__ieee754_log+0x638>
   11114:	01d0d434 	movhi	r7,17232
   11118:	000d883a 	mov	r6,zero
   1111c:	0012df40 	call	12df4 <__muldf3>
   11120:	015ffc34 	movhi	r5,32752
   11124:	297fffc4 	addi	r5,r5,-1
   11128:	180f883a 	mov	r7,r3
   1112c:	013ff284 	movi	r4,-54
   11130:	28c03d16 	blt	r5,r3,11228 <__ieee754_log+0x16c>
   11134:	04c00434 	movhi	r19,16
   11138:	9cffffc4 	addi	r19,r19,-1
   1113c:	01400274 	movhi	r5,9
   11140:	1cf8703a 	and	fp,r3,r19
   11144:	2957d904 	addi	r5,r5,24420
   11148:	1821d53a 	srai	r16,r3,20
   1114c:	e14b883a 	add	r5,fp,r5
   11150:	2940042c 	andhi	r5,r5,16
   11154:	2807d53a 	srai	r3,r5,20
   11158:	843f0044 	addi	r16,r16,-1023
   1115c:	294ffc3c 	xorhi	r5,r5,16368
   11160:	8121883a 	add	r16,r16,r4
   11164:	000d883a 	mov	r6,zero
   11168:	01cffc34 	movhi	r7,16368
   1116c:	1009883a 	mov	r4,r2
   11170:	2f0ab03a 	or	r5,r5,fp
   11174:	1c21883a 	add	r16,r3,r16
   11178:	00136600 	call	13660 <__subdf3>
   1117c:	1025883a 	mov	r18,r2
   11180:	e0800084 	addi	r2,fp,2
   11184:	14e6703a 	and	r19,r2,r19
   11188:	00800084 	movi	r2,2
   1118c:	1823883a 	mov	r17,r3
   11190:	000d883a 	mov	r6,zero
   11194:	14c03416 	blt	r2,r19,11268 <__ieee754_log+0x1ac>
   11198:	000f883a 	mov	r7,zero
   1119c:	9009883a 	mov	r4,r18
   111a0:	180b883a 	mov	r5,r3
   111a4:	0012c900 	call	12c90 <__eqdf2>
   111a8:	1000d31e 	bne	r2,zero,114f8 <__ieee754_log+0x43c>
   111ac:	80015926 	beq	r16,zero,11714 <__ieee754_log+0x658>
   111b0:	8009883a 	mov	r4,r16
   111b4:	0013fdc0 	call	13fdc <__floatsidf>
   111b8:	01cff9b4 	movhi	r7,16358
   111bc:	39cb9084 	addi	r7,r7,11842
   111c0:	01bfb834 	movhi	r6,65248
   111c4:	1009883a 	mov	r4,r2
   111c8:	180b883a 	mov	r5,r3
   111cc:	1023883a 	mov	r17,r2
   111d0:	1821883a 	mov	r16,r3
   111d4:	0012df40 	call	12df4 <__muldf3>
   111d8:	018d5e74 	movhi	r6,13689
   111dc:	01cf7ab4 	movhi	r7,15850
   111e0:	8809883a 	mov	r4,r17
   111e4:	800b883a 	mov	r5,r16
   111e8:	318f1d84 	addi	r6,r6,15478
   111ec:	39ce7bc4 	addi	r7,r7,14831
   111f0:	1027883a 	mov	r19,r2
   111f4:	1825883a 	mov	r18,r3
   111f8:	0012df40 	call	12df4 <__muldf3>
   111fc:	100d883a 	mov	r6,r2
   11200:	180f883a 	mov	r7,r3
   11204:	9809883a 	mov	r4,r19
   11208:	900b883a 	mov	r5,r18
   1120c:	0011a140 	call	11a14 <__adddf3>
   11210:	00000906 	br	11238 <__ieee754_log+0x17c>
   11214:	2807883a 	mov	r3,r5
   11218:	015ffc34 	movhi	r5,32752
   1121c:	297fffc4 	addi	r5,r5,-1
   11220:	0009883a 	mov	r4,zero
   11224:	28ffc30e 	bge	r5,r3,11134 <_gp+0xfffea78c>
   11228:	100d883a 	mov	r6,r2
   1122c:	1009883a 	mov	r4,r2
   11230:	380b883a 	mov	r5,r7
   11234:	0011a140 	call	11a14 <__adddf3>
   11238:	dfc00d17 	ldw	ra,52(sp)
   1123c:	df000c17 	ldw	fp,48(sp)
   11240:	ddc00b17 	ldw	r23,44(sp)
   11244:	dd800a17 	ldw	r22,40(sp)
   11248:	dd400917 	ldw	r21,36(sp)
   1124c:	dd000817 	ldw	r20,32(sp)
   11250:	dcc00717 	ldw	r19,28(sp)
   11254:	dc800617 	ldw	r18,24(sp)
   11258:	dc400517 	ldw	r17,20(sp)
   1125c:	dc000417 	ldw	r16,16(sp)
   11260:	dec00e04 	addi	sp,sp,56
   11264:	f800283a 	ret
   11268:	01d00034 	movhi	r7,16384
   1126c:	9009883a 	mov	r4,r18
   11270:	180b883a 	mov	r5,r3
   11274:	0011a140 	call	11a14 <__adddf3>
   11278:	100d883a 	mov	r6,r2
   1127c:	180f883a 	mov	r7,r3
   11280:	880b883a 	mov	r5,r17
   11284:	9009883a 	mov	r4,r18
   11288:	00122c00 	call	122c0 <__divdf3>
   1128c:	8009883a 	mov	r4,r16
   11290:	102d883a 	mov	r22,r2
   11294:	182b883a 	mov	r21,r3
   11298:	0013fdc0 	call	13fdc <__floatsidf>
   1129c:	b00d883a 	mov	r6,r22
   112a0:	a80f883a 	mov	r7,r21
   112a4:	b009883a 	mov	r4,r22
   112a8:	a80b883a 	mov	r5,r21
   112ac:	d8800015 	stw	r2,0(sp)
   112b0:	d8c00115 	stw	r3,4(sp)
   112b4:	0012df40 	call	12df4 <__muldf3>
   112b8:	027ffeb4 	movhi	r9,65530
   112bc:	4a7ae184 	addi	r9,r9,-5242
   112c0:	100d883a 	mov	r6,r2
   112c4:	180f883a 	mov	r7,r3
   112c8:	1009883a 	mov	r4,r2
   112cc:	180b883a 	mov	r5,r3
   112d0:	e26f883a 	add	r23,fp,r9
   112d4:	d8c00315 	stw	r3,12(sp)
   112d8:	d8800215 	stw	r2,8(sp)
   112dc:	0012df40 	call	12df4 <__muldf3>
   112e0:	01b7cfb4 	movhi	r6,57150
   112e4:	01cff0f4 	movhi	r7,16323
   112e8:	31949104 	addi	r6,r6,21060
   112ec:	39fc4484 	addi	r7,r7,-3822
   112f0:	1009883a 	mov	r4,r2
   112f4:	180b883a 	mov	r5,r3
   112f8:	1029883a 	mov	r20,r2
   112fc:	1827883a 	mov	r19,r3
   11300:	0012df40 	call	12df4 <__muldf3>
   11304:	01a5b2f4 	movhi	r6,38603
   11308:	01cff1f4 	movhi	r7,16327
   1130c:	3180f784 	addi	r6,r6,990
   11310:	39d19904 	addi	r7,r7,18020
   11314:	1009883a 	mov	r4,r2
   11318:	180b883a 	mov	r5,r3
   1131c:	0011a140 	call	11a14 <__adddf3>
   11320:	a00d883a 	mov	r6,r20
   11324:	980f883a 	mov	r7,r19
   11328:	1009883a 	mov	r4,r2
   1132c:	180b883a 	mov	r5,r3
   11330:	0012df40 	call	12df4 <__muldf3>
   11334:	01a508f4 	movhi	r6,37923
   11338:	01cff4b4 	movhi	r7,16338
   1133c:	31a4d644 	addi	r6,r6,-27815
   11340:	39d24904 	addi	r7,r7,18724
   11344:	1009883a 	mov	r4,r2
   11348:	180b883a 	mov	r5,r3
   1134c:	0011a140 	call	11a14 <__adddf3>
   11350:	a00d883a 	mov	r6,r20
   11354:	980f883a 	mov	r7,r19
   11358:	1009883a 	mov	r4,r2
   1135c:	180b883a 	mov	r5,r3
   11360:	0012df40 	call	12df4 <__muldf3>
   11364:	01955574 	movhi	r6,21845
   11368:	01cff974 	movhi	r7,16357
   1136c:	319564c4 	addi	r6,r6,21907
   11370:	39d55544 	addi	r7,r7,21845
   11374:	1009883a 	mov	r4,r2
   11378:	180b883a 	mov	r5,r3
   1137c:	0011a140 	call	11a14 <__adddf3>
   11380:	dac00217 	ldw	r11,8(sp)
   11384:	da800317 	ldw	r10,12(sp)
   11388:	1009883a 	mov	r4,r2
   1138c:	580d883a 	mov	r6,r11
   11390:	500f883a 	mov	r7,r10
   11394:	180b883a 	mov	r5,r3
   11398:	0012df40 	call	12df4 <__muldf3>
   1139c:	01b41e74 	movhi	r6,53369
   113a0:	01cff134 	movhi	r7,16324
   113a4:	a009883a 	mov	r4,r20
   113a8:	980b883a 	mov	r5,r19
   113ac:	31b1a7c4 	addi	r6,r6,-14689
   113b0:	39e68244 	addi	r7,r7,-26103
   113b4:	d8c00315 	stw	r3,12(sp)
   113b8:	d8800215 	stw	r2,8(sp)
   113bc:	0012df40 	call	12df4 <__muldf3>
   113c0:	018763b4 	movhi	r6,7566
   113c4:	01cff334 	movhi	r7,16332
   113c8:	319e2bc4 	addi	r6,r6,30895
   113cc:	39dc7144 	addi	r7,r7,29125
   113d0:	1009883a 	mov	r4,r2
   113d4:	180b883a 	mov	r5,r3
   113d8:	0011a140 	call	11a14 <__adddf3>
   113dc:	a00d883a 	mov	r6,r20
   113e0:	980f883a 	mov	r7,r19
   113e4:	1009883a 	mov	r4,r2
   113e8:	180b883a 	mov	r5,r3
   113ec:	0012df40 	call	12df4 <__muldf3>
   113f0:	01a66634 	movhi	r6,39320
   113f4:	01cff6b4 	movhi	r7,16346
   113f8:	31be8104 	addi	r6,r6,-1532
   113fc:	39e66644 	addi	r7,r7,-26215
   11400:	1009883a 	mov	r4,r2
   11404:	180b883a 	mov	r5,r3
   11408:	0011a140 	call	11a14 <__adddf3>
   1140c:	a00d883a 	mov	r6,r20
   11410:	980f883a 	mov	r7,r19
   11414:	1009883a 	mov	r4,r2
   11418:	180b883a 	mov	r5,r3
   1141c:	0012df40 	call	12df4 <__muldf3>
   11420:	dac00217 	ldw	r11,8(sp)
   11424:	da800317 	ldw	r10,12(sp)
   11428:	100d883a 	mov	r6,r2
   1142c:	180f883a 	mov	r7,r3
   11430:	5809883a 	mov	r4,r11
   11434:	500b883a 	mov	r5,r10
   11438:	0011a140 	call	11a14 <__adddf3>
   1143c:	1827883a 	mov	r19,r3
   11440:	00c001f4 	movhi	r3,7
   11444:	18ee1444 	addi	r3,r3,-18351
   11448:	1f07c83a 	sub	r3,r3,fp
   1144c:	1dd2b03a 	or	r9,r3,r23
   11450:	1029883a 	mov	r20,r2
   11454:	0240490e 	bge	zero,r9,1157c <__ieee754_log+0x4c0>
   11458:	000d883a 	mov	r6,zero
   1145c:	01cff834 	movhi	r7,16352
   11460:	9009883a 	mov	r4,r18
   11464:	880b883a 	mov	r5,r17
   11468:	0012df40 	call	12df4 <__muldf3>
   1146c:	900d883a 	mov	r6,r18
   11470:	880f883a 	mov	r7,r17
   11474:	1009883a 	mov	r4,r2
   11478:	180b883a 	mov	r5,r3
   1147c:	0012df40 	call	12df4 <__muldf3>
   11480:	1039883a 	mov	fp,r2
   11484:	182f883a 	mov	r23,r3
   11488:	8000691e 	bne	r16,zero,11630 <__ieee754_log+0x574>
   1148c:	100d883a 	mov	r6,r2
   11490:	180f883a 	mov	r7,r3
   11494:	a009883a 	mov	r4,r20
   11498:	980b883a 	mov	r5,r19
   1149c:	0011a140 	call	11a14 <__adddf3>
   114a0:	b00d883a 	mov	r6,r22
   114a4:	a80f883a 	mov	r7,r21
   114a8:	1009883a 	mov	r4,r2
   114ac:	180b883a 	mov	r5,r3
   114b0:	0012df40 	call	12df4 <__muldf3>
   114b4:	100d883a 	mov	r6,r2
   114b8:	180f883a 	mov	r7,r3
   114bc:	e009883a 	mov	r4,fp
   114c0:	b80b883a 	mov	r5,r23
   114c4:	00136600 	call	13660 <__subdf3>
   114c8:	100d883a 	mov	r6,r2
   114cc:	180f883a 	mov	r7,r3
   114d0:	9009883a 	mov	r4,r18
   114d4:	880b883a 	mov	r5,r17
   114d8:	00136600 	call	13660 <__subdf3>
   114dc:	003f5606 	br	11238 <_gp+0xfffea890>
   114e0:	000d883a 	mov	r6,zero
   114e4:	000f883a 	mov	r7,zero
   114e8:	0009883a 	mov	r4,zero
   114ec:	0170d434 	movhi	r5,50000
   114f0:	00122c00 	call	122c0 <__divdf3>
   114f4:	003f5006 	br	11238 <_gp+0xfffea890>
   114f8:	01955574 	movhi	r6,21845
   114fc:	01cff574 	movhi	r7,16341
   11500:	31955544 	addi	r6,r6,21845
   11504:	39d55544 	addi	r7,r7,21845
   11508:	9009883a 	mov	r4,r18
   1150c:	880b883a 	mov	r5,r17
   11510:	0012df40 	call	12df4 <__muldf3>
   11514:	100d883a 	mov	r6,r2
   11518:	180f883a 	mov	r7,r3
   1151c:	0009883a 	mov	r4,zero
   11520:	014ff834 	movhi	r5,16352
   11524:	00136600 	call	13660 <__subdf3>
   11528:	900d883a 	mov	r6,r18
   1152c:	880f883a 	mov	r7,r17
   11530:	9009883a 	mov	r4,r18
   11534:	880b883a 	mov	r5,r17
   11538:	1029883a 	mov	r20,r2
   1153c:	1827883a 	mov	r19,r3
   11540:	0012df40 	call	12df4 <__muldf3>
   11544:	a009883a 	mov	r4,r20
   11548:	980b883a 	mov	r5,r19
   1154c:	100d883a 	mov	r6,r2
   11550:	180f883a 	mov	r7,r3
   11554:	0012df40 	call	12df4 <__muldf3>
   11558:	1029883a 	mov	r20,r2
   1155c:	1827883a 	mov	r19,r3
   11560:	80006f1e 	bne	r16,zero,11720 <__ieee754_log+0x664>
   11564:	100d883a 	mov	r6,r2
   11568:	180f883a 	mov	r7,r3
   1156c:	9009883a 	mov	r4,r18
   11570:	880b883a 	mov	r5,r17
   11574:	00136600 	call	13660 <__subdf3>
   11578:	003f2f06 	br	11238 <_gp+0xfffea890>
   1157c:	80008b26 	beq	r16,zero,117ac <__ieee754_log+0x6f0>
   11580:	d9000017 	ldw	r4,0(sp)
   11584:	d9400117 	ldw	r5,4(sp)
   11588:	01cff9b4 	movhi	r7,16358
   1158c:	39cb9084 	addi	r7,r7,11842
   11590:	01bfb834 	movhi	r6,65248
   11594:	0012df40 	call	12df4 <__muldf3>
   11598:	a00d883a 	mov	r6,r20
   1159c:	980f883a 	mov	r7,r19
   115a0:	9009883a 	mov	r4,r18
   115a4:	880b883a 	mov	r5,r17
   115a8:	1821883a 	mov	r16,r3
   115ac:	d8800215 	stw	r2,8(sp)
   115b0:	00136600 	call	13660 <__subdf3>
   115b4:	b00d883a 	mov	r6,r22
   115b8:	a80f883a 	mov	r7,r21
   115bc:	1009883a 	mov	r4,r2
   115c0:	180b883a 	mov	r5,r3
   115c4:	0012df40 	call	12df4 <__muldf3>
   115c8:	d9000017 	ldw	r4,0(sp)
   115cc:	d9400117 	ldw	r5,4(sp)
   115d0:	018d5e74 	movhi	r6,13689
   115d4:	01cf7ab4 	movhi	r7,15850
   115d8:	318f1d84 	addi	r6,r6,15478
   115dc:	39ce7bc4 	addi	r7,r7,14831
   115e0:	1029883a 	mov	r20,r2
   115e4:	1827883a 	mov	r19,r3
   115e8:	0012df40 	call	12df4 <__muldf3>
   115ec:	a009883a 	mov	r4,r20
   115f0:	980b883a 	mov	r5,r19
   115f4:	100d883a 	mov	r6,r2
   115f8:	180f883a 	mov	r7,r3
   115fc:	00136600 	call	13660 <__subdf3>
   11600:	900d883a 	mov	r6,r18
   11604:	880f883a 	mov	r7,r17
   11608:	1009883a 	mov	r4,r2
   1160c:	180b883a 	mov	r5,r3
   11610:	00136600 	call	13660 <__subdf3>
   11614:	da000217 	ldw	r8,8(sp)
   11618:	100d883a 	mov	r6,r2
   1161c:	180f883a 	mov	r7,r3
   11620:	4009883a 	mov	r4,r8
   11624:	800b883a 	mov	r5,r16
   11628:	00136600 	call	13660 <__subdf3>
   1162c:	003f0206 	br	11238 <_gp+0xfffea890>
   11630:	d9000017 	ldw	r4,0(sp)
   11634:	d9400117 	ldw	r5,4(sp)
   11638:	01cff9b4 	movhi	r7,16358
   1163c:	39cb9084 	addi	r7,r7,11842
   11640:	01bfb834 	movhi	r6,65248
   11644:	0012df40 	call	12df4 <__muldf3>
   11648:	e00d883a 	mov	r6,fp
   1164c:	b80f883a 	mov	r7,r23
   11650:	a009883a 	mov	r4,r20
   11654:	980b883a 	mov	r5,r19
   11658:	1821883a 	mov	r16,r3
   1165c:	d8800315 	stw	r2,12(sp)
   11660:	0011a140 	call	11a14 <__adddf3>
   11664:	b00d883a 	mov	r6,r22
   11668:	a80f883a 	mov	r7,r21
   1166c:	1009883a 	mov	r4,r2
   11670:	180b883a 	mov	r5,r3
   11674:	0012df40 	call	12df4 <__muldf3>
   11678:	d9000017 	ldw	r4,0(sp)
   1167c:	d9400117 	ldw	r5,4(sp)
   11680:	018d5e74 	movhi	r6,13689
   11684:	01cf7ab4 	movhi	r7,15850
   11688:	318f1d84 	addi	r6,r6,15478
   1168c:	39ce7bc4 	addi	r7,r7,14831
   11690:	1029883a 	mov	r20,r2
   11694:	1827883a 	mov	r19,r3
   11698:	0012df40 	call	12df4 <__muldf3>
   1169c:	a009883a 	mov	r4,r20
   116a0:	980b883a 	mov	r5,r19
   116a4:	100d883a 	mov	r6,r2
   116a8:	180f883a 	mov	r7,r3
   116ac:	0011a140 	call	11a14 <__adddf3>
   116b0:	e009883a 	mov	r4,fp
   116b4:	b80b883a 	mov	r5,r23
   116b8:	100d883a 	mov	r6,r2
   116bc:	180f883a 	mov	r7,r3
   116c0:	00136600 	call	13660 <__subdf3>
   116c4:	900d883a 	mov	r6,r18
   116c8:	880f883a 	mov	r7,r17
   116cc:	1009883a 	mov	r4,r2
   116d0:	180b883a 	mov	r5,r3
   116d4:	00136600 	call	13660 <__subdf3>
   116d8:	da800317 	ldw	r10,12(sp)
   116dc:	100d883a 	mov	r6,r2
   116e0:	180f883a 	mov	r7,r3
   116e4:	5009883a 	mov	r4,r10
   116e8:	800b883a 	mov	r5,r16
   116ec:	00136600 	call	13660 <__subdf3>
   116f0:	003ed106 	br	11238 <_gp+0xfffea890>
   116f4:	200d883a 	mov	r6,r4
   116f8:	00136600 	call	13660 <__subdf3>
   116fc:	000d883a 	mov	r6,zero
   11700:	000f883a 	mov	r7,zero
   11704:	1009883a 	mov	r4,r2
   11708:	180b883a 	mov	r5,r3
   1170c:	00122c00 	call	122c0 <__divdf3>
   11710:	003ec906 	br	11238 <_gp+0xfffea890>
   11714:	0005883a 	mov	r2,zero
   11718:	0007883a 	mov	r3,zero
   1171c:	003ec606 	br	11238 <_gp+0xfffea890>
   11720:	8009883a 	mov	r4,r16
   11724:	0013fdc0 	call	13fdc <__floatsidf>
   11728:	01cff9b4 	movhi	r7,16358
   1172c:	39cb9084 	addi	r7,r7,11842
   11730:	01bfb834 	movhi	r6,65248
   11734:	1009883a 	mov	r4,r2
   11738:	180b883a 	mov	r5,r3
   1173c:	102b883a 	mov	r21,r2
   11740:	1821883a 	mov	r16,r3
   11744:	0012df40 	call	12df4 <__muldf3>
   11748:	018d5e74 	movhi	r6,13689
   1174c:	01cf7ab4 	movhi	r7,15850
   11750:	a809883a 	mov	r4,r21
   11754:	800b883a 	mov	r5,r16
   11758:	318f1d84 	addi	r6,r6,15478
   1175c:	39ce7bc4 	addi	r7,r7,14831
   11760:	102f883a 	mov	r23,r2
   11764:	182d883a 	mov	r22,r3
   11768:	0012df40 	call	12df4 <__muldf3>
   1176c:	a009883a 	mov	r4,r20
   11770:	980b883a 	mov	r5,r19
   11774:	100d883a 	mov	r6,r2
   11778:	180f883a 	mov	r7,r3
   1177c:	00136600 	call	13660 <__subdf3>
   11780:	900d883a 	mov	r6,r18
   11784:	880f883a 	mov	r7,r17
   11788:	1009883a 	mov	r4,r2
   1178c:	180b883a 	mov	r5,r3
   11790:	00136600 	call	13660 <__subdf3>
   11794:	100d883a 	mov	r6,r2
   11798:	180f883a 	mov	r7,r3
   1179c:	b809883a 	mov	r4,r23
   117a0:	b00b883a 	mov	r5,r22
   117a4:	00136600 	call	13660 <__subdf3>
   117a8:	003ea306 	br	11238 <_gp+0xfffea890>
   117ac:	a00d883a 	mov	r6,r20
   117b0:	980f883a 	mov	r7,r19
   117b4:	9009883a 	mov	r4,r18
   117b8:	880b883a 	mov	r5,r17
   117bc:	00136600 	call	13660 <__subdf3>
   117c0:	b00d883a 	mov	r6,r22
   117c4:	a80f883a 	mov	r7,r21
   117c8:	1009883a 	mov	r4,r2
   117cc:	180b883a 	mov	r5,r3
   117d0:	0012df40 	call	12df4 <__muldf3>
   117d4:	003f3c06 	br	114c8 <_gp+0xfffeab20>

000117d8 <__fpclassifyd>:
   117d8:	00a00034 	movhi	r2,32768
   117dc:	10bfffc4 	addi	r2,r2,-1
   117e0:	2884703a 	and	r2,r5,r2
   117e4:	10000726 	beq	r2,zero,11804 <__fpclassifyd+0x2c>
   117e8:	00fffc34 	movhi	r3,65520
   117ec:	019ff834 	movhi	r6,32736
   117f0:	28c7883a 	add	r3,r5,r3
   117f4:	31bfffc4 	addi	r6,r6,-1
   117f8:	30c00536 	bltu	r6,r3,11810 <__fpclassifyd+0x38>
   117fc:	00800104 	movi	r2,4
   11800:	f800283a 	ret
   11804:	2000021e 	bne	r4,zero,11810 <__fpclassifyd+0x38>
   11808:	00800084 	movi	r2,2
   1180c:	f800283a 	ret
   11810:	00dffc34 	movhi	r3,32752
   11814:	019ff834 	movhi	r6,32736
   11818:	28cb883a 	add	r5,r5,r3
   1181c:	31bfffc4 	addi	r6,r6,-1
   11820:	317ff62e 	bgeu	r6,r5,117fc <_gp+0xfffeae54>
   11824:	01400434 	movhi	r5,16
   11828:	297fffc4 	addi	r5,r5,-1
   1182c:	28800236 	bltu	r5,r2,11838 <__fpclassifyd+0x60>
   11830:	008000c4 	movi	r2,3
   11834:	f800283a 	ret
   11838:	10c00226 	beq	r2,r3,11844 <__fpclassifyd+0x6c>
   1183c:	0005883a 	mov	r2,zero
   11840:	f800283a 	ret
   11844:	2005003a 	cmpeq	r2,r4,zero
   11848:	f800283a 	ret

0001184c <matherr>:
   1184c:	0005883a 	mov	r2,zero
   11850:	f800283a 	ret

00011854 <nan>:
   11854:	0005883a 	mov	r2,zero
   11858:	00dffe34 	movhi	r3,32760
   1185c:	f800283a 	ret

00011860 <__divsi3>:
   11860:	20001b16 	blt	r4,zero,118d0 <__divsi3+0x70>
   11864:	000f883a 	mov	r7,zero
   11868:	28001616 	blt	r5,zero,118c4 <__divsi3+0x64>
   1186c:	200d883a 	mov	r6,r4
   11870:	29001a2e 	bgeu	r5,r4,118dc <__divsi3+0x7c>
   11874:	00800804 	movi	r2,32
   11878:	00c00044 	movi	r3,1
   1187c:	00000106 	br	11884 <__divsi3+0x24>
   11880:	10000d26 	beq	r2,zero,118b8 <__divsi3+0x58>
   11884:	294b883a 	add	r5,r5,r5
   11888:	10bfffc4 	addi	r2,r2,-1
   1188c:	18c7883a 	add	r3,r3,r3
   11890:	293ffb36 	bltu	r5,r4,11880 <_gp+0xfffeaed8>
   11894:	0005883a 	mov	r2,zero
   11898:	18000726 	beq	r3,zero,118b8 <__divsi3+0x58>
   1189c:	0005883a 	mov	r2,zero
   118a0:	31400236 	bltu	r6,r5,118ac <__divsi3+0x4c>
   118a4:	314dc83a 	sub	r6,r6,r5
   118a8:	10c4b03a 	or	r2,r2,r3
   118ac:	1806d07a 	srli	r3,r3,1
   118b0:	280ad07a 	srli	r5,r5,1
   118b4:	183ffa1e 	bne	r3,zero,118a0 <_gp+0xfffeaef8>
   118b8:	38000126 	beq	r7,zero,118c0 <__divsi3+0x60>
   118bc:	0085c83a 	sub	r2,zero,r2
   118c0:	f800283a 	ret
   118c4:	014bc83a 	sub	r5,zero,r5
   118c8:	39c0005c 	xori	r7,r7,1
   118cc:	003fe706 	br	1186c <_gp+0xfffeaec4>
   118d0:	0109c83a 	sub	r4,zero,r4
   118d4:	01c00044 	movi	r7,1
   118d8:	003fe306 	br	11868 <_gp+0xfffeaec0>
   118dc:	00c00044 	movi	r3,1
   118e0:	003fee06 	br	1189c <_gp+0xfffeaef4>

000118e4 <__modsi3>:
   118e4:	20001716 	blt	r4,zero,11944 <__modsi3+0x60>
   118e8:	000f883a 	mov	r7,zero
   118ec:	2005883a 	mov	r2,r4
   118f0:	28001216 	blt	r5,zero,1193c <__modsi3+0x58>
   118f4:	2900162e 	bgeu	r5,r4,11950 <__modsi3+0x6c>
   118f8:	01800804 	movi	r6,32
   118fc:	00c00044 	movi	r3,1
   11900:	00000106 	br	11908 <__modsi3+0x24>
   11904:	30000a26 	beq	r6,zero,11930 <__modsi3+0x4c>
   11908:	294b883a 	add	r5,r5,r5
   1190c:	31bfffc4 	addi	r6,r6,-1
   11910:	18c7883a 	add	r3,r3,r3
   11914:	293ffb36 	bltu	r5,r4,11904 <_gp+0xfffeaf5c>
   11918:	18000526 	beq	r3,zero,11930 <__modsi3+0x4c>
   1191c:	1806d07a 	srli	r3,r3,1
   11920:	11400136 	bltu	r2,r5,11928 <__modsi3+0x44>
   11924:	1145c83a 	sub	r2,r2,r5
   11928:	280ad07a 	srli	r5,r5,1
   1192c:	183ffb1e 	bne	r3,zero,1191c <_gp+0xfffeaf74>
   11930:	38000126 	beq	r7,zero,11938 <__modsi3+0x54>
   11934:	0085c83a 	sub	r2,zero,r2
   11938:	f800283a 	ret
   1193c:	014bc83a 	sub	r5,zero,r5
   11940:	003fec06 	br	118f4 <_gp+0xfffeaf4c>
   11944:	0109c83a 	sub	r4,zero,r4
   11948:	01c00044 	movi	r7,1
   1194c:	003fe706 	br	118ec <_gp+0xfffeaf44>
   11950:	00c00044 	movi	r3,1
   11954:	003ff106 	br	1191c <_gp+0xfffeaf74>

00011958 <__udivsi3>:
   11958:	200d883a 	mov	r6,r4
   1195c:	2900152e 	bgeu	r5,r4,119b4 <__udivsi3+0x5c>
   11960:	28001416 	blt	r5,zero,119b4 <__udivsi3+0x5c>
   11964:	00800804 	movi	r2,32
   11968:	00c00044 	movi	r3,1
   1196c:	00000206 	br	11978 <__udivsi3+0x20>
   11970:	10000e26 	beq	r2,zero,119ac <__udivsi3+0x54>
   11974:	28000516 	blt	r5,zero,1198c <__udivsi3+0x34>
   11978:	294b883a 	add	r5,r5,r5
   1197c:	10bfffc4 	addi	r2,r2,-1
   11980:	18c7883a 	add	r3,r3,r3
   11984:	293ffa36 	bltu	r5,r4,11970 <_gp+0xfffeafc8>
   11988:	18000826 	beq	r3,zero,119ac <__udivsi3+0x54>
   1198c:	0005883a 	mov	r2,zero
   11990:	31400236 	bltu	r6,r5,1199c <__udivsi3+0x44>
   11994:	314dc83a 	sub	r6,r6,r5
   11998:	10c4b03a 	or	r2,r2,r3
   1199c:	1806d07a 	srli	r3,r3,1
   119a0:	280ad07a 	srli	r5,r5,1
   119a4:	183ffa1e 	bne	r3,zero,11990 <_gp+0xfffeafe8>
   119a8:	f800283a 	ret
   119ac:	0005883a 	mov	r2,zero
   119b0:	f800283a 	ret
   119b4:	00c00044 	movi	r3,1
   119b8:	003ff406 	br	1198c <_gp+0xfffeafe4>

000119bc <__umodsi3>:
   119bc:	2005883a 	mov	r2,r4
   119c0:	2900122e 	bgeu	r5,r4,11a0c <__umodsi3+0x50>
   119c4:	28001116 	blt	r5,zero,11a0c <__umodsi3+0x50>
   119c8:	01800804 	movi	r6,32
   119cc:	00c00044 	movi	r3,1
   119d0:	00000206 	br	119dc <__umodsi3+0x20>
   119d4:	30000c26 	beq	r6,zero,11a08 <__umodsi3+0x4c>
   119d8:	28000516 	blt	r5,zero,119f0 <__umodsi3+0x34>
   119dc:	294b883a 	add	r5,r5,r5
   119e0:	31bfffc4 	addi	r6,r6,-1
   119e4:	18c7883a 	add	r3,r3,r3
   119e8:	293ffa36 	bltu	r5,r4,119d4 <_gp+0xfffeb02c>
   119ec:	18000626 	beq	r3,zero,11a08 <__umodsi3+0x4c>
   119f0:	1806d07a 	srli	r3,r3,1
   119f4:	11400136 	bltu	r2,r5,119fc <__umodsi3+0x40>
   119f8:	1145c83a 	sub	r2,r2,r5
   119fc:	280ad07a 	srli	r5,r5,1
   11a00:	183ffb1e 	bne	r3,zero,119f0 <_gp+0xfffeb048>
   11a04:	f800283a 	ret
   11a08:	f800283a 	ret
   11a0c:	00c00044 	movi	r3,1
   11a10:	003ff706 	br	119f0 <_gp+0xfffeb048>

00011a14 <__adddf3>:
   11a14:	02c00434 	movhi	r11,16
   11a18:	5affffc4 	addi	r11,r11,-1
   11a1c:	2806d7fa 	srli	r3,r5,31
   11a20:	2ad4703a 	and	r10,r5,r11
   11a24:	3ad2703a 	and	r9,r7,r11
   11a28:	3804d53a 	srli	r2,r7,20
   11a2c:	3018d77a 	srli	r12,r6,29
   11a30:	280ad53a 	srli	r5,r5,20
   11a34:	501490fa 	slli	r10,r10,3
   11a38:	2010d77a 	srli	r8,r4,29
   11a3c:	481290fa 	slli	r9,r9,3
   11a40:	380ed7fa 	srli	r7,r7,31
   11a44:	defffb04 	addi	sp,sp,-20
   11a48:	dc800215 	stw	r18,8(sp)
   11a4c:	dc400115 	stw	r17,4(sp)
   11a50:	dc000015 	stw	r16,0(sp)
   11a54:	dfc00415 	stw	ra,16(sp)
   11a58:	dcc00315 	stw	r19,12(sp)
   11a5c:	1c803fcc 	andi	r18,r3,255
   11a60:	2c01ffcc 	andi	r16,r5,2047
   11a64:	5210b03a 	or	r8,r10,r8
   11a68:	202290fa 	slli	r17,r4,3
   11a6c:	1081ffcc 	andi	r2,r2,2047
   11a70:	4b12b03a 	or	r9,r9,r12
   11a74:	300c90fa 	slli	r6,r6,3
   11a78:	91c07526 	beq	r18,r7,11c50 <__adddf3+0x23c>
   11a7c:	8087c83a 	sub	r3,r16,r2
   11a80:	00c0ab0e 	bge	zero,r3,11d30 <__adddf3+0x31c>
   11a84:	10002a1e 	bne	r2,zero,11b30 <__adddf3+0x11c>
   11a88:	4984b03a 	or	r2,r9,r6
   11a8c:	1000961e 	bne	r2,zero,11ce8 <__adddf3+0x2d4>
   11a90:	888001cc 	andi	r2,r17,7
   11a94:	10000726 	beq	r2,zero,11ab4 <__adddf3+0xa0>
   11a98:	888003cc 	andi	r2,r17,15
   11a9c:	00c00104 	movi	r3,4
   11aa0:	10c00426 	beq	r2,r3,11ab4 <__adddf3+0xa0>
   11aa4:	88c7883a 	add	r3,r17,r3
   11aa8:	1c63803a 	cmpltu	r17,r3,r17
   11aac:	4451883a 	add	r8,r8,r17
   11ab0:	1823883a 	mov	r17,r3
   11ab4:	4080202c 	andhi	r2,r8,128
   11ab8:	10005926 	beq	r2,zero,11c20 <__adddf3+0x20c>
   11abc:	84000044 	addi	r16,r16,1
   11ac0:	0081ffc4 	movi	r2,2047
   11ac4:	8080ba26 	beq	r16,r2,11db0 <__adddf3+0x39c>
   11ac8:	00bfe034 	movhi	r2,65408
   11acc:	10bfffc4 	addi	r2,r2,-1
   11ad0:	4090703a 	and	r8,r8,r2
   11ad4:	4004977a 	slli	r2,r8,29
   11ad8:	4010927a 	slli	r8,r8,9
   11adc:	8822d0fa 	srli	r17,r17,3
   11ae0:	8401ffcc 	andi	r16,r16,2047
   11ae4:	4010d33a 	srli	r8,r8,12
   11ae8:	9007883a 	mov	r3,r18
   11aec:	1444b03a 	or	r2,r2,r17
   11af0:	8401ffcc 	andi	r16,r16,2047
   11af4:	8020953a 	slli	r16,r16,20
   11af8:	18c03fcc 	andi	r3,r3,255
   11afc:	01000434 	movhi	r4,16
   11b00:	213fffc4 	addi	r4,r4,-1
   11b04:	180697fa 	slli	r3,r3,31
   11b08:	4110703a 	and	r8,r8,r4
   11b0c:	4410b03a 	or	r8,r8,r16
   11b10:	40c6b03a 	or	r3,r8,r3
   11b14:	dfc00417 	ldw	ra,16(sp)
   11b18:	dcc00317 	ldw	r19,12(sp)
   11b1c:	dc800217 	ldw	r18,8(sp)
   11b20:	dc400117 	ldw	r17,4(sp)
   11b24:	dc000017 	ldw	r16,0(sp)
   11b28:	dec00504 	addi	sp,sp,20
   11b2c:	f800283a 	ret
   11b30:	0081ffc4 	movi	r2,2047
   11b34:	80bfd626 	beq	r16,r2,11a90 <_gp+0xfffeb0e8>
   11b38:	4a402034 	orhi	r9,r9,128
   11b3c:	00800e04 	movi	r2,56
   11b40:	10c09f16 	blt	r2,r3,11dc0 <__adddf3+0x3ac>
   11b44:	008007c4 	movi	r2,31
   11b48:	10c0c216 	blt	r2,r3,11e54 <__adddf3+0x440>
   11b4c:	00800804 	movi	r2,32
   11b50:	10c5c83a 	sub	r2,r2,r3
   11b54:	488a983a 	sll	r5,r9,r2
   11b58:	30c8d83a 	srl	r4,r6,r3
   11b5c:	3084983a 	sll	r2,r6,r2
   11b60:	48c6d83a 	srl	r3,r9,r3
   11b64:	290cb03a 	or	r6,r5,r4
   11b68:	1004c03a 	cmpne	r2,r2,zero
   11b6c:	308cb03a 	or	r6,r6,r2
   11b70:	898dc83a 	sub	r6,r17,r6
   11b74:	89a3803a 	cmpltu	r17,r17,r6
   11b78:	40d1c83a 	sub	r8,r8,r3
   11b7c:	4451c83a 	sub	r8,r8,r17
   11b80:	3023883a 	mov	r17,r6
   11b84:	4080202c 	andhi	r2,r8,128
   11b88:	10002326 	beq	r2,zero,11c18 <__adddf3+0x204>
   11b8c:	04c02034 	movhi	r19,128
   11b90:	9cffffc4 	addi	r19,r19,-1
   11b94:	44e6703a 	and	r19,r8,r19
   11b98:	98007626 	beq	r19,zero,11d74 <__adddf3+0x360>
   11b9c:	9809883a 	mov	r4,r19
   11ba0:	00140b80 	call	140b8 <__clzsi2>
   11ba4:	10fffe04 	addi	r3,r2,-8
   11ba8:	010007c4 	movi	r4,31
   11bac:	20c07716 	blt	r4,r3,11d8c <__adddf3+0x378>
   11bb0:	00800804 	movi	r2,32
   11bb4:	10c5c83a 	sub	r2,r2,r3
   11bb8:	8884d83a 	srl	r2,r17,r2
   11bbc:	98d0983a 	sll	r8,r19,r3
   11bc0:	88e2983a 	sll	r17,r17,r3
   11bc4:	1204b03a 	or	r2,r2,r8
   11bc8:	1c007416 	blt	r3,r16,11d9c <__adddf3+0x388>
   11bcc:	1c21c83a 	sub	r16,r3,r16
   11bd0:	82000044 	addi	r8,r16,1
   11bd4:	00c007c4 	movi	r3,31
   11bd8:	1a009116 	blt	r3,r8,11e20 <__adddf3+0x40c>
   11bdc:	00c00804 	movi	r3,32
   11be0:	1a07c83a 	sub	r3,r3,r8
   11be4:	8a08d83a 	srl	r4,r17,r8
   11be8:	88e2983a 	sll	r17,r17,r3
   11bec:	10c6983a 	sll	r3,r2,r3
   11bf0:	1210d83a 	srl	r8,r2,r8
   11bf4:	8804c03a 	cmpne	r2,r17,zero
   11bf8:	1906b03a 	or	r3,r3,r4
   11bfc:	18a2b03a 	or	r17,r3,r2
   11c00:	0021883a 	mov	r16,zero
   11c04:	003fa206 	br	11a90 <_gp+0xfffeb0e8>
   11c08:	1890b03a 	or	r8,r3,r2
   11c0c:	40017d26 	beq	r8,zero,12204 <__adddf3+0x7f0>
   11c10:	1011883a 	mov	r8,r2
   11c14:	1823883a 	mov	r17,r3
   11c18:	888001cc 	andi	r2,r17,7
   11c1c:	103f9e1e 	bne	r2,zero,11a98 <_gp+0xfffeb0f0>
   11c20:	4004977a 	slli	r2,r8,29
   11c24:	8822d0fa 	srli	r17,r17,3
   11c28:	4010d0fa 	srli	r8,r8,3
   11c2c:	9007883a 	mov	r3,r18
   11c30:	1444b03a 	or	r2,r2,r17
   11c34:	0101ffc4 	movi	r4,2047
   11c38:	81002426 	beq	r16,r4,11ccc <__adddf3+0x2b8>
   11c3c:	8120703a 	and	r16,r16,r4
   11c40:	01000434 	movhi	r4,16
   11c44:	213fffc4 	addi	r4,r4,-1
   11c48:	4110703a 	and	r8,r8,r4
   11c4c:	003fa806 	br	11af0 <_gp+0xfffeb148>
   11c50:	8089c83a 	sub	r4,r16,r2
   11c54:	01005e0e 	bge	zero,r4,11dd0 <__adddf3+0x3bc>
   11c58:	10002b26 	beq	r2,zero,11d08 <__adddf3+0x2f4>
   11c5c:	0081ffc4 	movi	r2,2047
   11c60:	80bf8b26 	beq	r16,r2,11a90 <_gp+0xfffeb0e8>
   11c64:	4a402034 	orhi	r9,r9,128
   11c68:	00800e04 	movi	r2,56
   11c6c:	1100a40e 	bge	r2,r4,11f00 <__adddf3+0x4ec>
   11c70:	498cb03a 	or	r6,r9,r6
   11c74:	300ac03a 	cmpne	r5,r6,zero
   11c78:	0013883a 	mov	r9,zero
   11c7c:	2c4b883a 	add	r5,r5,r17
   11c80:	2c63803a 	cmpltu	r17,r5,r17
   11c84:	4a11883a 	add	r8,r9,r8
   11c88:	8a11883a 	add	r8,r17,r8
   11c8c:	2823883a 	mov	r17,r5
   11c90:	4080202c 	andhi	r2,r8,128
   11c94:	103fe026 	beq	r2,zero,11c18 <_gp+0xfffeb270>
   11c98:	84000044 	addi	r16,r16,1
   11c9c:	0081ffc4 	movi	r2,2047
   11ca0:	8080d226 	beq	r16,r2,11fec <__adddf3+0x5d8>
   11ca4:	00bfe034 	movhi	r2,65408
   11ca8:	10bfffc4 	addi	r2,r2,-1
   11cac:	4090703a 	and	r8,r8,r2
   11cb0:	880ad07a 	srli	r5,r17,1
   11cb4:	400897fa 	slli	r4,r8,31
   11cb8:	88c0004c 	andi	r3,r17,1
   11cbc:	28e2b03a 	or	r17,r5,r3
   11cc0:	4010d07a 	srli	r8,r8,1
   11cc4:	2462b03a 	or	r17,r4,r17
   11cc8:	003f7106 	br	11a90 <_gp+0xfffeb0e8>
   11ccc:	4088b03a 	or	r4,r8,r2
   11cd0:	20014526 	beq	r4,zero,121e8 <__adddf3+0x7d4>
   11cd4:	01000434 	movhi	r4,16
   11cd8:	42000234 	orhi	r8,r8,8
   11cdc:	213fffc4 	addi	r4,r4,-1
   11ce0:	4110703a 	and	r8,r8,r4
   11ce4:	003f8206 	br	11af0 <_gp+0xfffeb148>
   11ce8:	18ffffc4 	addi	r3,r3,-1
   11cec:	1800491e 	bne	r3,zero,11e14 <__adddf3+0x400>
   11cf0:	898bc83a 	sub	r5,r17,r6
   11cf4:	8963803a 	cmpltu	r17,r17,r5
   11cf8:	4251c83a 	sub	r8,r8,r9
   11cfc:	4451c83a 	sub	r8,r8,r17
   11d00:	2823883a 	mov	r17,r5
   11d04:	003f9f06 	br	11b84 <_gp+0xfffeb1dc>
   11d08:	4984b03a 	or	r2,r9,r6
   11d0c:	103f6026 	beq	r2,zero,11a90 <_gp+0xfffeb0e8>
   11d10:	213fffc4 	addi	r4,r4,-1
   11d14:	2000931e 	bne	r4,zero,11f64 <__adddf3+0x550>
   11d18:	898d883a 	add	r6,r17,r6
   11d1c:	3463803a 	cmpltu	r17,r6,r17
   11d20:	4251883a 	add	r8,r8,r9
   11d24:	8a11883a 	add	r8,r17,r8
   11d28:	3023883a 	mov	r17,r6
   11d2c:	003fd806 	br	11c90 <_gp+0xfffeb2e8>
   11d30:	1800541e 	bne	r3,zero,11e84 <__adddf3+0x470>
   11d34:	80800044 	addi	r2,r16,1
   11d38:	1081ffcc 	andi	r2,r2,2047
   11d3c:	00c00044 	movi	r3,1
   11d40:	1880a00e 	bge	r3,r2,11fc4 <__adddf3+0x5b0>
   11d44:	8989c83a 	sub	r4,r17,r6
   11d48:	8905803a 	cmpltu	r2,r17,r4
   11d4c:	4267c83a 	sub	r19,r8,r9
   11d50:	98a7c83a 	sub	r19,r19,r2
   11d54:	9880202c 	andhi	r2,r19,128
   11d58:	10006326 	beq	r2,zero,11ee8 <__adddf3+0x4d4>
   11d5c:	3463c83a 	sub	r17,r6,r17
   11d60:	4a07c83a 	sub	r3,r9,r8
   11d64:	344d803a 	cmpltu	r6,r6,r17
   11d68:	19a7c83a 	sub	r19,r3,r6
   11d6c:	3825883a 	mov	r18,r7
   11d70:	983f8a1e 	bne	r19,zero,11b9c <_gp+0xfffeb1f4>
   11d74:	8809883a 	mov	r4,r17
   11d78:	00140b80 	call	140b8 <__clzsi2>
   11d7c:	10800804 	addi	r2,r2,32
   11d80:	10fffe04 	addi	r3,r2,-8
   11d84:	010007c4 	movi	r4,31
   11d88:	20ff890e 	bge	r4,r3,11bb0 <_gp+0xfffeb208>
   11d8c:	10bff604 	addi	r2,r2,-40
   11d90:	8884983a 	sll	r2,r17,r2
   11d94:	0023883a 	mov	r17,zero
   11d98:	1c3f8c0e 	bge	r3,r16,11bcc <_gp+0xfffeb224>
   11d9c:	023fe034 	movhi	r8,65408
   11da0:	423fffc4 	addi	r8,r8,-1
   11da4:	80e1c83a 	sub	r16,r16,r3
   11da8:	1210703a 	and	r8,r2,r8
   11dac:	003f3806 	br	11a90 <_gp+0xfffeb0e8>
   11db0:	9007883a 	mov	r3,r18
   11db4:	0011883a 	mov	r8,zero
   11db8:	0005883a 	mov	r2,zero
   11dbc:	003f4c06 	br	11af0 <_gp+0xfffeb148>
   11dc0:	498cb03a 	or	r6,r9,r6
   11dc4:	300cc03a 	cmpne	r6,r6,zero
   11dc8:	0007883a 	mov	r3,zero
   11dcc:	003f6806 	br	11b70 <_gp+0xfffeb1c8>
   11dd0:	20009c1e 	bne	r4,zero,12044 <__adddf3+0x630>
   11dd4:	80800044 	addi	r2,r16,1
   11dd8:	1141ffcc 	andi	r5,r2,2047
   11ddc:	01000044 	movi	r4,1
   11de0:	2140670e 	bge	r4,r5,11f80 <__adddf3+0x56c>
   11de4:	0101ffc4 	movi	r4,2047
   11de8:	11007f26 	beq	r2,r4,11fe8 <__adddf3+0x5d4>
   11dec:	898d883a 	add	r6,r17,r6
   11df0:	4247883a 	add	r3,r8,r9
   11df4:	3451803a 	cmpltu	r8,r6,r17
   11df8:	40d1883a 	add	r8,r8,r3
   11dfc:	402297fa 	slli	r17,r8,31
   11e00:	300cd07a 	srli	r6,r6,1
   11e04:	4010d07a 	srli	r8,r8,1
   11e08:	1021883a 	mov	r16,r2
   11e0c:	89a2b03a 	or	r17,r17,r6
   11e10:	003f1f06 	br	11a90 <_gp+0xfffeb0e8>
   11e14:	0081ffc4 	movi	r2,2047
   11e18:	80bf481e 	bne	r16,r2,11b3c <_gp+0xfffeb194>
   11e1c:	003f1c06 	br	11a90 <_gp+0xfffeb0e8>
   11e20:	843ff844 	addi	r16,r16,-31
   11e24:	01000804 	movi	r4,32
   11e28:	1406d83a 	srl	r3,r2,r16
   11e2c:	41005026 	beq	r8,r4,11f70 <__adddf3+0x55c>
   11e30:	01001004 	movi	r4,64
   11e34:	2211c83a 	sub	r8,r4,r8
   11e38:	1204983a 	sll	r2,r2,r8
   11e3c:	88a2b03a 	or	r17,r17,r2
   11e40:	8822c03a 	cmpne	r17,r17,zero
   11e44:	1c62b03a 	or	r17,r3,r17
   11e48:	0011883a 	mov	r8,zero
   11e4c:	0021883a 	mov	r16,zero
   11e50:	003f7106 	br	11c18 <_gp+0xfffeb270>
   11e54:	193ff804 	addi	r4,r3,-32
   11e58:	00800804 	movi	r2,32
   11e5c:	4908d83a 	srl	r4,r9,r4
   11e60:	18804526 	beq	r3,r2,11f78 <__adddf3+0x564>
   11e64:	00801004 	movi	r2,64
   11e68:	10c5c83a 	sub	r2,r2,r3
   11e6c:	4886983a 	sll	r3,r9,r2
   11e70:	198cb03a 	or	r6,r3,r6
   11e74:	300cc03a 	cmpne	r6,r6,zero
   11e78:	218cb03a 	or	r6,r4,r6
   11e7c:	0007883a 	mov	r3,zero
   11e80:	003f3b06 	br	11b70 <_gp+0xfffeb1c8>
   11e84:	80002a26 	beq	r16,zero,11f30 <__adddf3+0x51c>
   11e88:	0101ffc4 	movi	r4,2047
   11e8c:	11006826 	beq	r2,r4,12030 <__adddf3+0x61c>
   11e90:	00c7c83a 	sub	r3,zero,r3
   11e94:	42002034 	orhi	r8,r8,128
   11e98:	01000e04 	movi	r4,56
   11e9c:	20c07c16 	blt	r4,r3,12090 <__adddf3+0x67c>
   11ea0:	010007c4 	movi	r4,31
   11ea4:	20c0da16 	blt	r4,r3,12210 <__adddf3+0x7fc>
   11ea8:	01000804 	movi	r4,32
   11eac:	20c9c83a 	sub	r4,r4,r3
   11eb0:	4114983a 	sll	r10,r8,r4
   11eb4:	88cad83a 	srl	r5,r17,r3
   11eb8:	8908983a 	sll	r4,r17,r4
   11ebc:	40c6d83a 	srl	r3,r8,r3
   11ec0:	5162b03a 	or	r17,r10,r5
   11ec4:	2008c03a 	cmpne	r4,r4,zero
   11ec8:	8922b03a 	or	r17,r17,r4
   11ecc:	3463c83a 	sub	r17,r6,r17
   11ed0:	48c7c83a 	sub	r3,r9,r3
   11ed4:	344d803a 	cmpltu	r6,r6,r17
   11ed8:	1991c83a 	sub	r8,r3,r6
   11edc:	1021883a 	mov	r16,r2
   11ee0:	3825883a 	mov	r18,r7
   11ee4:	003f2706 	br	11b84 <_gp+0xfffeb1dc>
   11ee8:	24d0b03a 	or	r8,r4,r19
   11eec:	40001b1e 	bne	r8,zero,11f5c <__adddf3+0x548>
   11ef0:	0005883a 	mov	r2,zero
   11ef4:	0007883a 	mov	r3,zero
   11ef8:	0021883a 	mov	r16,zero
   11efc:	003f4d06 	br	11c34 <_gp+0xfffeb28c>
   11f00:	008007c4 	movi	r2,31
   11f04:	11003c16 	blt	r2,r4,11ff8 <__adddf3+0x5e4>
   11f08:	00800804 	movi	r2,32
   11f0c:	1105c83a 	sub	r2,r2,r4
   11f10:	488e983a 	sll	r7,r9,r2
   11f14:	310ad83a 	srl	r5,r6,r4
   11f18:	3084983a 	sll	r2,r6,r2
   11f1c:	4912d83a 	srl	r9,r9,r4
   11f20:	394ab03a 	or	r5,r7,r5
   11f24:	1004c03a 	cmpne	r2,r2,zero
   11f28:	288ab03a 	or	r5,r5,r2
   11f2c:	003f5306 	br	11c7c <_gp+0xfffeb2d4>
   11f30:	4448b03a 	or	r4,r8,r17
   11f34:	20003e26 	beq	r4,zero,12030 <__adddf3+0x61c>
   11f38:	00c6303a 	nor	r3,zero,r3
   11f3c:	18003a1e 	bne	r3,zero,12028 <__adddf3+0x614>
   11f40:	3463c83a 	sub	r17,r6,r17
   11f44:	4a07c83a 	sub	r3,r9,r8
   11f48:	344d803a 	cmpltu	r6,r6,r17
   11f4c:	1991c83a 	sub	r8,r3,r6
   11f50:	1021883a 	mov	r16,r2
   11f54:	3825883a 	mov	r18,r7
   11f58:	003f0a06 	br	11b84 <_gp+0xfffeb1dc>
   11f5c:	2023883a 	mov	r17,r4
   11f60:	003f0d06 	br	11b98 <_gp+0xfffeb1f0>
   11f64:	0081ffc4 	movi	r2,2047
   11f68:	80bf3f1e 	bne	r16,r2,11c68 <_gp+0xfffeb2c0>
   11f6c:	003ec806 	br	11a90 <_gp+0xfffeb0e8>
   11f70:	0005883a 	mov	r2,zero
   11f74:	003fb106 	br	11e3c <_gp+0xfffeb494>
   11f78:	0007883a 	mov	r3,zero
   11f7c:	003fbc06 	br	11e70 <_gp+0xfffeb4c8>
   11f80:	4444b03a 	or	r2,r8,r17
   11f84:	8000871e 	bne	r16,zero,121a4 <__adddf3+0x790>
   11f88:	1000ba26 	beq	r2,zero,12274 <__adddf3+0x860>
   11f8c:	4984b03a 	or	r2,r9,r6
   11f90:	103ebf26 	beq	r2,zero,11a90 <_gp+0xfffeb0e8>
   11f94:	8985883a 	add	r2,r17,r6
   11f98:	4247883a 	add	r3,r8,r9
   11f9c:	1451803a 	cmpltu	r8,r2,r17
   11fa0:	40d1883a 	add	r8,r8,r3
   11fa4:	40c0202c 	andhi	r3,r8,128
   11fa8:	1023883a 	mov	r17,r2
   11fac:	183f1a26 	beq	r3,zero,11c18 <_gp+0xfffeb270>
   11fb0:	00bfe034 	movhi	r2,65408
   11fb4:	10bfffc4 	addi	r2,r2,-1
   11fb8:	2021883a 	mov	r16,r4
   11fbc:	4090703a 	and	r8,r8,r2
   11fc0:	003eb306 	br	11a90 <_gp+0xfffeb0e8>
   11fc4:	4444b03a 	or	r2,r8,r17
   11fc8:	8000291e 	bne	r16,zero,12070 <__adddf3+0x65c>
   11fcc:	10004b1e 	bne	r2,zero,120fc <__adddf3+0x6e8>
   11fd0:	4990b03a 	or	r8,r9,r6
   11fd4:	40008b26 	beq	r8,zero,12204 <__adddf3+0x7f0>
   11fd8:	4811883a 	mov	r8,r9
   11fdc:	3023883a 	mov	r17,r6
   11fe0:	3825883a 	mov	r18,r7
   11fe4:	003eaa06 	br	11a90 <_gp+0xfffeb0e8>
   11fe8:	1021883a 	mov	r16,r2
   11fec:	0011883a 	mov	r8,zero
   11ff0:	0005883a 	mov	r2,zero
   11ff4:	003f0f06 	br	11c34 <_gp+0xfffeb28c>
   11ff8:	217ff804 	addi	r5,r4,-32
   11ffc:	00800804 	movi	r2,32
   12000:	494ad83a 	srl	r5,r9,r5
   12004:	20807d26 	beq	r4,r2,121fc <__adddf3+0x7e8>
   12008:	00801004 	movi	r2,64
   1200c:	1109c83a 	sub	r4,r2,r4
   12010:	4912983a 	sll	r9,r9,r4
   12014:	498cb03a 	or	r6,r9,r6
   12018:	300cc03a 	cmpne	r6,r6,zero
   1201c:	298ab03a 	or	r5,r5,r6
   12020:	0013883a 	mov	r9,zero
   12024:	003f1506 	br	11c7c <_gp+0xfffeb2d4>
   12028:	0101ffc4 	movi	r4,2047
   1202c:	113f9a1e 	bne	r2,r4,11e98 <_gp+0xfffeb4f0>
   12030:	4811883a 	mov	r8,r9
   12034:	3023883a 	mov	r17,r6
   12038:	1021883a 	mov	r16,r2
   1203c:	3825883a 	mov	r18,r7
   12040:	003e9306 	br	11a90 <_gp+0xfffeb0e8>
   12044:	8000161e 	bne	r16,zero,120a0 <__adddf3+0x68c>
   12048:	444ab03a 	or	r5,r8,r17
   1204c:	28005126 	beq	r5,zero,12194 <__adddf3+0x780>
   12050:	0108303a 	nor	r4,zero,r4
   12054:	20004d1e 	bne	r4,zero,1218c <__adddf3+0x778>
   12058:	89a3883a 	add	r17,r17,r6
   1205c:	4253883a 	add	r9,r8,r9
   12060:	898d803a 	cmpltu	r6,r17,r6
   12064:	3251883a 	add	r8,r6,r9
   12068:	1021883a 	mov	r16,r2
   1206c:	003f0806 	br	11c90 <_gp+0xfffeb2e8>
   12070:	1000301e 	bne	r2,zero,12134 <__adddf3+0x720>
   12074:	4984b03a 	or	r2,r9,r6
   12078:	10007126 	beq	r2,zero,12240 <__adddf3+0x82c>
   1207c:	4811883a 	mov	r8,r9
   12080:	3023883a 	mov	r17,r6
   12084:	3825883a 	mov	r18,r7
   12088:	0401ffc4 	movi	r16,2047
   1208c:	003e8006 	br	11a90 <_gp+0xfffeb0e8>
   12090:	4462b03a 	or	r17,r8,r17
   12094:	8822c03a 	cmpne	r17,r17,zero
   12098:	0007883a 	mov	r3,zero
   1209c:	003f8b06 	br	11ecc <_gp+0xfffeb524>
   120a0:	0141ffc4 	movi	r5,2047
   120a4:	11403b26 	beq	r2,r5,12194 <__adddf3+0x780>
   120a8:	0109c83a 	sub	r4,zero,r4
   120ac:	42002034 	orhi	r8,r8,128
   120b0:	01400e04 	movi	r5,56
   120b4:	29006716 	blt	r5,r4,12254 <__adddf3+0x840>
   120b8:	014007c4 	movi	r5,31
   120bc:	29007016 	blt	r5,r4,12280 <__adddf3+0x86c>
   120c0:	01400804 	movi	r5,32
   120c4:	290bc83a 	sub	r5,r5,r4
   120c8:	4154983a 	sll	r10,r8,r5
   120cc:	890ed83a 	srl	r7,r17,r4
   120d0:	894a983a 	sll	r5,r17,r5
   120d4:	4108d83a 	srl	r4,r8,r4
   120d8:	51e2b03a 	or	r17,r10,r7
   120dc:	280ac03a 	cmpne	r5,r5,zero
   120e0:	8962b03a 	or	r17,r17,r5
   120e4:	89a3883a 	add	r17,r17,r6
   120e8:	2253883a 	add	r9,r4,r9
   120ec:	898d803a 	cmpltu	r6,r17,r6
   120f0:	3251883a 	add	r8,r6,r9
   120f4:	1021883a 	mov	r16,r2
   120f8:	003ee506 	br	11c90 <_gp+0xfffeb2e8>
   120fc:	4984b03a 	or	r2,r9,r6
   12100:	103e6326 	beq	r2,zero,11a90 <_gp+0xfffeb0e8>
   12104:	8987c83a 	sub	r3,r17,r6
   12108:	88c9803a 	cmpltu	r4,r17,r3
   1210c:	4245c83a 	sub	r2,r8,r9
   12110:	1105c83a 	sub	r2,r2,r4
   12114:	1100202c 	andhi	r4,r2,128
   12118:	203ebb26 	beq	r4,zero,11c08 <_gp+0xfffeb260>
   1211c:	3463c83a 	sub	r17,r6,r17
   12120:	4a07c83a 	sub	r3,r9,r8
   12124:	344d803a 	cmpltu	r6,r6,r17
   12128:	1991c83a 	sub	r8,r3,r6
   1212c:	3825883a 	mov	r18,r7
   12130:	003e5706 	br	11a90 <_gp+0xfffeb0e8>
   12134:	4984b03a 	or	r2,r9,r6
   12138:	10002e26 	beq	r2,zero,121f4 <__adddf3+0x7e0>
   1213c:	4004d0fa 	srli	r2,r8,3
   12140:	8822d0fa 	srli	r17,r17,3
   12144:	4010977a 	slli	r8,r8,29
   12148:	10c0022c 	andhi	r3,r2,8
   1214c:	4462b03a 	or	r17,r8,r17
   12150:	18000826 	beq	r3,zero,12174 <__adddf3+0x760>
   12154:	4808d0fa 	srli	r4,r9,3
   12158:	20c0022c 	andhi	r3,r4,8
   1215c:	1800051e 	bne	r3,zero,12174 <__adddf3+0x760>
   12160:	300cd0fa 	srli	r6,r6,3
   12164:	4806977a 	slli	r3,r9,29
   12168:	2005883a 	mov	r2,r4
   1216c:	3825883a 	mov	r18,r7
   12170:	19a2b03a 	or	r17,r3,r6
   12174:	8810d77a 	srli	r8,r17,29
   12178:	100490fa 	slli	r2,r2,3
   1217c:	882290fa 	slli	r17,r17,3
   12180:	0401ffc4 	movi	r16,2047
   12184:	4090b03a 	or	r8,r8,r2
   12188:	003e4106 	br	11a90 <_gp+0xfffeb0e8>
   1218c:	0141ffc4 	movi	r5,2047
   12190:	117fc71e 	bne	r2,r5,120b0 <_gp+0xfffeb708>
   12194:	4811883a 	mov	r8,r9
   12198:	3023883a 	mov	r17,r6
   1219c:	1021883a 	mov	r16,r2
   121a0:	003e3b06 	br	11a90 <_gp+0xfffeb0e8>
   121a4:	10002f26 	beq	r2,zero,12264 <__adddf3+0x850>
   121a8:	4984b03a 	or	r2,r9,r6
   121ac:	10001126 	beq	r2,zero,121f4 <__adddf3+0x7e0>
   121b0:	4004d0fa 	srli	r2,r8,3
   121b4:	8822d0fa 	srli	r17,r17,3
   121b8:	4010977a 	slli	r8,r8,29
   121bc:	10c0022c 	andhi	r3,r2,8
   121c0:	4462b03a 	or	r17,r8,r17
   121c4:	183feb26 	beq	r3,zero,12174 <_gp+0xfffeb7cc>
   121c8:	4808d0fa 	srli	r4,r9,3
   121cc:	20c0022c 	andhi	r3,r4,8
   121d0:	183fe81e 	bne	r3,zero,12174 <_gp+0xfffeb7cc>
   121d4:	300cd0fa 	srli	r6,r6,3
   121d8:	4806977a 	slli	r3,r9,29
   121dc:	2005883a 	mov	r2,r4
   121e0:	19a2b03a 	or	r17,r3,r6
   121e4:	003fe306 	br	12174 <_gp+0xfffeb7cc>
   121e8:	0011883a 	mov	r8,zero
   121ec:	0005883a 	mov	r2,zero
   121f0:	003e3f06 	br	11af0 <_gp+0xfffeb148>
   121f4:	0401ffc4 	movi	r16,2047
   121f8:	003e2506 	br	11a90 <_gp+0xfffeb0e8>
   121fc:	0013883a 	mov	r9,zero
   12200:	003f8406 	br	12014 <_gp+0xfffeb66c>
   12204:	0005883a 	mov	r2,zero
   12208:	0007883a 	mov	r3,zero
   1220c:	003e8906 	br	11c34 <_gp+0xfffeb28c>
   12210:	197ff804 	addi	r5,r3,-32
   12214:	01000804 	movi	r4,32
   12218:	414ad83a 	srl	r5,r8,r5
   1221c:	19002426 	beq	r3,r4,122b0 <__adddf3+0x89c>
   12220:	01001004 	movi	r4,64
   12224:	20c7c83a 	sub	r3,r4,r3
   12228:	40c6983a 	sll	r3,r8,r3
   1222c:	1c46b03a 	or	r3,r3,r17
   12230:	1806c03a 	cmpne	r3,r3,zero
   12234:	28e2b03a 	or	r17,r5,r3
   12238:	0007883a 	mov	r3,zero
   1223c:	003f2306 	br	11ecc <_gp+0xfffeb524>
   12240:	0007883a 	mov	r3,zero
   12244:	5811883a 	mov	r8,r11
   12248:	00bfffc4 	movi	r2,-1
   1224c:	0401ffc4 	movi	r16,2047
   12250:	003e7806 	br	11c34 <_gp+0xfffeb28c>
   12254:	4462b03a 	or	r17,r8,r17
   12258:	8822c03a 	cmpne	r17,r17,zero
   1225c:	0009883a 	mov	r4,zero
   12260:	003fa006 	br	120e4 <_gp+0xfffeb73c>
   12264:	4811883a 	mov	r8,r9
   12268:	3023883a 	mov	r17,r6
   1226c:	0401ffc4 	movi	r16,2047
   12270:	003e0706 	br	11a90 <_gp+0xfffeb0e8>
   12274:	4811883a 	mov	r8,r9
   12278:	3023883a 	mov	r17,r6
   1227c:	003e0406 	br	11a90 <_gp+0xfffeb0e8>
   12280:	21fff804 	addi	r7,r4,-32
   12284:	01400804 	movi	r5,32
   12288:	41ced83a 	srl	r7,r8,r7
   1228c:	21400a26 	beq	r4,r5,122b8 <__adddf3+0x8a4>
   12290:	01401004 	movi	r5,64
   12294:	2909c83a 	sub	r4,r5,r4
   12298:	4108983a 	sll	r4,r8,r4
   1229c:	2448b03a 	or	r4,r4,r17
   122a0:	2008c03a 	cmpne	r4,r4,zero
   122a4:	3922b03a 	or	r17,r7,r4
   122a8:	0009883a 	mov	r4,zero
   122ac:	003f8d06 	br	120e4 <_gp+0xfffeb73c>
   122b0:	0007883a 	mov	r3,zero
   122b4:	003fdd06 	br	1222c <_gp+0xfffeb884>
   122b8:	0009883a 	mov	r4,zero
   122bc:	003ff706 	br	1229c <_gp+0xfffeb8f4>

000122c0 <__divdf3>:
   122c0:	defff004 	addi	sp,sp,-64
   122c4:	dc800815 	stw	r18,32(sp)
   122c8:	2824d53a 	srli	r18,r5,20
   122cc:	dd800c15 	stw	r22,48(sp)
   122d0:	282cd7fa 	srli	r22,r5,31
   122d4:	dc000615 	stw	r16,24(sp)
   122d8:	04000434 	movhi	r16,16
   122dc:	843fffc4 	addi	r16,r16,-1
   122e0:	dfc00f15 	stw	ra,60(sp)
   122e4:	df000e15 	stw	fp,56(sp)
   122e8:	ddc00d15 	stw	r23,52(sp)
   122ec:	dd400b15 	stw	r21,44(sp)
   122f0:	dd000a15 	stw	r20,40(sp)
   122f4:	dcc00915 	stw	r19,36(sp)
   122f8:	dc400715 	stw	r17,28(sp)
   122fc:	9481ffcc 	andi	r18,r18,2047
   12300:	2c20703a 	and	r16,r5,r16
   12304:	b2003fcc 	andi	r8,r22,255
   12308:	90006126 	beq	r18,zero,12490 <__divdf3+0x1d0>
   1230c:	0081ffc4 	movi	r2,2047
   12310:	202b883a 	mov	r21,r4
   12314:	90803726 	beq	r18,r2,123f4 <__divdf3+0x134>
   12318:	80800434 	orhi	r2,r16,16
   1231c:	100490fa 	slli	r2,r2,3
   12320:	2020d77a 	srli	r16,r4,29
   12324:	202a90fa 	slli	r21,r4,3
   12328:	94bf0044 	addi	r18,r18,-1023
   1232c:	80a0b03a 	or	r16,r16,r2
   12330:	0013883a 	mov	r9,zero
   12334:	000b883a 	mov	r5,zero
   12338:	3806d53a 	srli	r3,r7,20
   1233c:	382ed7fa 	srli	r23,r7,31
   12340:	04400434 	movhi	r17,16
   12344:	8c7fffc4 	addi	r17,r17,-1
   12348:	18c1ffcc 	andi	r3,r3,2047
   1234c:	3029883a 	mov	r20,r6
   12350:	3c62703a 	and	r17,r7,r17
   12354:	bf003fcc 	andi	fp,r23,255
   12358:	18006e26 	beq	r3,zero,12514 <__divdf3+0x254>
   1235c:	0081ffc4 	movi	r2,2047
   12360:	18806626 	beq	r3,r2,124fc <__divdf3+0x23c>
   12364:	88800434 	orhi	r2,r17,16
   12368:	100490fa 	slli	r2,r2,3
   1236c:	3022d77a 	srli	r17,r6,29
   12370:	302890fa 	slli	r20,r6,3
   12374:	18ff0044 	addi	r3,r3,-1023
   12378:	88a2b03a 	or	r17,r17,r2
   1237c:	000f883a 	mov	r7,zero
   12380:	b5e6f03a 	xor	r19,r22,r23
   12384:	3a4cb03a 	or	r6,r7,r9
   12388:	008003c4 	movi	r2,15
   1238c:	9809883a 	mov	r4,r19
   12390:	90c7c83a 	sub	r3,r18,r3
   12394:	9cc03fcc 	andi	r19,r19,255
   12398:	11809636 	bltu	r2,r6,125f4 <__divdf3+0x334>
   1239c:	300c90ba 	slli	r6,r6,2
   123a0:	00800074 	movhi	r2,1
   123a4:	1088ed04 	addi	r2,r2,9140
   123a8:	308d883a 	add	r6,r6,r2
   123ac:	30800017 	ldw	r2,0(r6)
   123b0:	1000683a 	jmp	r2
   123b4:	000125f4 	movhi	zero,1175
   123b8:	0001242c 	andhi	zero,zero,1168
   123bc:	000125e4 	muli	zero,zero,1175
   123c0:	00012420 	cmpeqi	zero,zero,1168
   123c4:	000125e4 	muli	zero,zero,1175
   123c8:	000125b8 	rdprs	zero,zero,1174
   123cc:	000125e4 	muli	zero,zero,1175
   123d0:	00012420 	cmpeqi	zero,zero,1168
   123d4:	0001242c 	andhi	zero,zero,1168
   123d8:	0001242c 	andhi	zero,zero,1168
   123dc:	000125b8 	rdprs	zero,zero,1174
   123e0:	00012420 	cmpeqi	zero,zero,1168
   123e4:	00012410 	cmplti	zero,zero,1168
   123e8:	00012410 	cmplti	zero,zero,1168
   123ec:	00012410 	cmplti	zero,zero,1168
   123f0:	0001297c 	xorhi	zero,zero,1189
   123f4:	2404b03a 	or	r2,r4,r16
   123f8:	10006c1e 	bne	r2,zero,125ac <__divdf3+0x2ec>
   123fc:	02400204 	movi	r9,8
   12400:	0021883a 	mov	r16,zero
   12404:	002b883a 	mov	r21,zero
   12408:	01400084 	movi	r5,2
   1240c:	003fca06 	br	12338 <_gp+0xfffeb990>
   12410:	8023883a 	mov	r17,r16
   12414:	a829883a 	mov	r20,r21
   12418:	4039883a 	mov	fp,r8
   1241c:	280f883a 	mov	r7,r5
   12420:	00800084 	movi	r2,2
   12424:	3881601e 	bne	r7,r2,129a8 <__divdf3+0x6e8>
   12428:	e027883a 	mov	r19,fp
   1242c:	9900004c 	andi	r4,r19,1
   12430:	0081ffc4 	movi	r2,2047
   12434:	0021883a 	mov	r16,zero
   12438:	002b883a 	mov	r21,zero
   1243c:	1004953a 	slli	r2,r2,20
   12440:	20c03fcc 	andi	r3,r4,255
   12444:	01400434 	movhi	r5,16
   12448:	297fffc4 	addi	r5,r5,-1
   1244c:	180697fa 	slli	r3,r3,31
   12450:	8160703a 	and	r16,r16,r5
   12454:	80a0b03a 	or	r16,r16,r2
   12458:	80c6b03a 	or	r3,r16,r3
   1245c:	a805883a 	mov	r2,r21
   12460:	dfc00f17 	ldw	ra,60(sp)
   12464:	df000e17 	ldw	fp,56(sp)
   12468:	ddc00d17 	ldw	r23,52(sp)
   1246c:	dd800c17 	ldw	r22,48(sp)
   12470:	dd400b17 	ldw	r21,44(sp)
   12474:	dd000a17 	ldw	r20,40(sp)
   12478:	dcc00917 	ldw	r19,36(sp)
   1247c:	dc800817 	ldw	r18,32(sp)
   12480:	dc400717 	ldw	r17,28(sp)
   12484:	dc000617 	ldw	r16,24(sp)
   12488:	dec01004 	addi	sp,sp,64
   1248c:	f800283a 	ret
   12490:	2404b03a 	or	r2,r4,r16
   12494:	2023883a 	mov	r17,r4
   12498:	10003f26 	beq	r2,zero,12598 <__divdf3+0x2d8>
   1249c:	80015e26 	beq	r16,zero,12a18 <__divdf3+0x758>
   124a0:	8009883a 	mov	r4,r16
   124a4:	d9800215 	stw	r6,8(sp)
   124a8:	d9c00515 	stw	r7,20(sp)
   124ac:	da000415 	stw	r8,16(sp)
   124b0:	00140b80 	call	140b8 <__clzsi2>
   124b4:	d9800217 	ldw	r6,8(sp)
   124b8:	d9c00517 	ldw	r7,20(sp)
   124bc:	da000417 	ldw	r8,16(sp)
   124c0:	113ffd44 	addi	r4,r2,-11
   124c4:	00c00704 	movi	r3,28
   124c8:	19014f16 	blt	r3,r4,12a08 <__divdf3+0x748>
   124cc:	00c00744 	movi	r3,29
   124d0:	157ffe04 	addi	r21,r2,-8
   124d4:	1907c83a 	sub	r3,r3,r4
   124d8:	8560983a 	sll	r16,r16,r21
   124dc:	88c6d83a 	srl	r3,r17,r3
   124e0:	8d6a983a 	sll	r21,r17,r21
   124e4:	1c20b03a 	or	r16,r3,r16
   124e8:	1080fcc4 	addi	r2,r2,1011
   124ec:	00a5c83a 	sub	r18,zero,r2
   124f0:	0013883a 	mov	r9,zero
   124f4:	000b883a 	mov	r5,zero
   124f8:	003f8f06 	br	12338 <_gp+0xfffeb990>
   124fc:	3444b03a 	or	r2,r6,r17
   12500:	1000231e 	bne	r2,zero,12590 <__divdf3+0x2d0>
   12504:	0023883a 	mov	r17,zero
   12508:	0029883a 	mov	r20,zero
   1250c:	01c00084 	movi	r7,2
   12510:	003f9b06 	br	12380 <_gp+0xfffeb9d8>
   12514:	3444b03a 	or	r2,r6,r17
   12518:	10001926 	beq	r2,zero,12580 <__divdf3+0x2c0>
   1251c:	88014b26 	beq	r17,zero,12a4c <__divdf3+0x78c>
   12520:	8809883a 	mov	r4,r17
   12524:	d9400115 	stw	r5,4(sp)
   12528:	d9800215 	stw	r6,8(sp)
   1252c:	da000415 	stw	r8,16(sp)
   12530:	da400315 	stw	r9,12(sp)
   12534:	00140b80 	call	140b8 <__clzsi2>
   12538:	d9400117 	ldw	r5,4(sp)
   1253c:	d9800217 	ldw	r6,8(sp)
   12540:	da000417 	ldw	r8,16(sp)
   12544:	da400317 	ldw	r9,12(sp)
   12548:	113ffd44 	addi	r4,r2,-11
   1254c:	00c00704 	movi	r3,28
   12550:	19013a16 	blt	r3,r4,12a3c <__divdf3+0x77c>
   12554:	00c00744 	movi	r3,29
   12558:	153ffe04 	addi	r20,r2,-8
   1255c:	1907c83a 	sub	r3,r3,r4
   12560:	8d22983a 	sll	r17,r17,r20
   12564:	30c6d83a 	srl	r3,r6,r3
   12568:	3528983a 	sll	r20,r6,r20
   1256c:	1c62b03a 	or	r17,r3,r17
   12570:	1080fcc4 	addi	r2,r2,1011
   12574:	0087c83a 	sub	r3,zero,r2
   12578:	000f883a 	mov	r7,zero
   1257c:	003f8006 	br	12380 <_gp+0xfffeb9d8>
   12580:	0023883a 	mov	r17,zero
   12584:	0029883a 	mov	r20,zero
   12588:	01c00044 	movi	r7,1
   1258c:	003f7c06 	br	12380 <_gp+0xfffeb9d8>
   12590:	01c000c4 	movi	r7,3
   12594:	003f7a06 	br	12380 <_gp+0xfffeb9d8>
   12598:	02400104 	movi	r9,4
   1259c:	0021883a 	mov	r16,zero
   125a0:	002b883a 	mov	r21,zero
   125a4:	01400044 	movi	r5,1
   125a8:	003f6306 	br	12338 <_gp+0xfffeb990>
   125ac:	02400304 	movi	r9,12
   125b0:	014000c4 	movi	r5,3
   125b4:	003f6006 	br	12338 <_gp+0xfffeb990>
   125b8:	04000434 	movhi	r16,16
   125bc:	0009883a 	mov	r4,zero
   125c0:	843fffc4 	addi	r16,r16,-1
   125c4:	057fffc4 	movi	r21,-1
   125c8:	0081ffc4 	movi	r2,2047
   125cc:	003f9b06 	br	1243c <_gp+0xfffeba94>
   125d0:	00c00044 	movi	r3,1
   125d4:	1887c83a 	sub	r3,r3,r2
   125d8:	01000e04 	movi	r4,56
   125dc:	20c1530e 	bge	r4,r3,12b2c <__divdf3+0x86c>
   125e0:	9900004c 	andi	r4,r19,1
   125e4:	0005883a 	mov	r2,zero
   125e8:	0021883a 	mov	r16,zero
   125ec:	002b883a 	mov	r21,zero
   125f0:	003f9206 	br	1243c <_gp+0xfffeba94>
   125f4:	8c012e36 	bltu	r17,r16,12ab0 <__divdf3+0x7f0>
   125f8:	84412c26 	beq	r16,r17,12aac <__divdf3+0x7ec>
   125fc:	a82f883a 	mov	r23,r21
   12600:	18ffffc4 	addi	r3,r3,-1
   12604:	002b883a 	mov	r21,zero
   12608:	a004d63a 	srli	r2,r20,24
   1260c:	8822923a 	slli	r17,r17,8
   12610:	a028923a 	slli	r20,r20,8
   12614:	8009883a 	mov	r4,r16
   12618:	88acb03a 	or	r22,r17,r2
   1261c:	dd000015 	stw	r20,0(sp)
   12620:	b028d43a 	srli	r20,r22,16
   12624:	d8c00215 	stw	r3,8(sp)
   12628:	b4bfffcc 	andi	r18,r22,65535
   1262c:	a00b883a 	mov	r5,r20
   12630:	00119580 	call	11958 <__udivsi3>
   12634:	100b883a 	mov	r5,r2
   12638:	9009883a 	mov	r4,r18
   1263c:	1023883a 	mov	r17,r2
   12640:	001411c0 	call	1411c <__mulsi3>
   12644:	8009883a 	mov	r4,r16
   12648:	a00b883a 	mov	r5,r20
   1264c:	1039883a 	mov	fp,r2
   12650:	00119bc0 	call	119bc <__umodsi3>
   12654:	1004943a 	slli	r2,r2,16
   12658:	b808d43a 	srli	r4,r23,16
   1265c:	d8c00217 	ldw	r3,8(sp)
   12660:	2084b03a 	or	r2,r4,r2
   12664:	1700062e 	bgeu	r2,fp,12680 <__divdf3+0x3c0>
   12668:	1585883a 	add	r2,r2,r22
   1266c:	893fffc4 	addi	r4,r17,-1
   12670:	15811d36 	bltu	r2,r22,12ae8 <__divdf3+0x828>
   12674:	17011c2e 	bgeu	r2,fp,12ae8 <__divdf3+0x828>
   12678:	8c7fff84 	addi	r17,r17,-2
   1267c:	1585883a 	add	r2,r2,r22
   12680:	1739c83a 	sub	fp,r2,fp
   12684:	a00b883a 	mov	r5,r20
   12688:	e009883a 	mov	r4,fp
   1268c:	d8c00215 	stw	r3,8(sp)
   12690:	00119580 	call	11958 <__udivsi3>
   12694:	100b883a 	mov	r5,r2
   12698:	9009883a 	mov	r4,r18
   1269c:	1021883a 	mov	r16,r2
   126a0:	001411c0 	call	1411c <__mulsi3>
   126a4:	a00b883a 	mov	r5,r20
   126a8:	e009883a 	mov	r4,fp
   126ac:	d8800415 	stw	r2,16(sp)
   126b0:	00119bc0 	call	119bc <__umodsi3>
   126b4:	1004943a 	slli	r2,r2,16
   126b8:	da000417 	ldw	r8,16(sp)
   126bc:	bdffffcc 	andi	r23,r23,65535
   126c0:	b884b03a 	or	r2,r23,r2
   126c4:	d8c00217 	ldw	r3,8(sp)
   126c8:	1200062e 	bgeu	r2,r8,126e4 <__divdf3+0x424>
   126cc:	1585883a 	add	r2,r2,r22
   126d0:	813fffc4 	addi	r4,r16,-1
   126d4:	15810236 	bltu	r2,r22,12ae0 <__divdf3+0x820>
   126d8:	1201012e 	bgeu	r2,r8,12ae0 <__divdf3+0x820>
   126dc:	843fff84 	addi	r16,r16,-2
   126e0:	1585883a 	add	r2,r2,r22
   126e4:	8822943a 	slli	r17,r17,16
   126e8:	d9800017 	ldw	r6,0(sp)
   126ec:	1211c83a 	sub	r8,r2,r8
   126f0:	8c22b03a 	or	r17,r17,r16
   126f4:	373fffcc 	andi	fp,r6,65535
   126f8:	8abfffcc 	andi	r10,r17,65535
   126fc:	8820d43a 	srli	r16,r17,16
   12700:	5009883a 	mov	r4,r10
   12704:	e00b883a 	mov	r5,fp
   12708:	302ed43a 	srli	r23,r6,16
   1270c:	d8c00215 	stw	r3,8(sp)
   12710:	da000415 	stw	r8,16(sp)
   12714:	da800115 	stw	r10,4(sp)
   12718:	001411c0 	call	1411c <__mulsi3>
   1271c:	800b883a 	mov	r5,r16
   12720:	e009883a 	mov	r4,fp
   12724:	d8800515 	stw	r2,20(sp)
   12728:	001411c0 	call	1411c <__mulsi3>
   1272c:	8009883a 	mov	r4,r16
   12730:	b80b883a 	mov	r5,r23
   12734:	d8800315 	stw	r2,12(sp)
   12738:	001411c0 	call	1411c <__mulsi3>
   1273c:	da800117 	ldw	r10,4(sp)
   12740:	b80b883a 	mov	r5,r23
   12744:	1021883a 	mov	r16,r2
   12748:	5009883a 	mov	r4,r10
   1274c:	001411c0 	call	1411c <__mulsi3>
   12750:	d9c00517 	ldw	r7,20(sp)
   12754:	da400317 	ldw	r9,12(sp)
   12758:	d8c00217 	ldw	r3,8(sp)
   1275c:	3808d43a 	srli	r4,r7,16
   12760:	1245883a 	add	r2,r2,r9
   12764:	da000417 	ldw	r8,16(sp)
   12768:	2085883a 	add	r2,r4,r2
   1276c:	1240022e 	bgeu	r2,r9,12778 <__divdf3+0x4b8>
   12770:	01000074 	movhi	r4,1
   12774:	8121883a 	add	r16,r16,r4
   12778:	1008d43a 	srli	r4,r2,16
   1277c:	1004943a 	slli	r2,r2,16
   12780:	39ffffcc 	andi	r7,r7,65535
   12784:	2409883a 	add	r4,r4,r16
   12788:	11c5883a 	add	r2,r2,r7
   1278c:	4100bb36 	bltu	r8,r4,12a7c <__divdf3+0x7bc>
   12790:	4100d726 	beq	r8,r4,12af0 <__divdf3+0x830>
   12794:	4109c83a 	sub	r4,r8,r4
   12798:	a8a1c83a 	sub	r16,r21,r2
   1279c:	ac2b803a 	cmpltu	r21,r21,r16
   127a0:	256bc83a 	sub	r21,r4,r21
   127a4:	b540d926 	beq	r22,r21,12b0c <__divdf3+0x84c>
   127a8:	a00b883a 	mov	r5,r20
   127ac:	a809883a 	mov	r4,r21
   127b0:	d8c00215 	stw	r3,8(sp)
   127b4:	00119580 	call	11958 <__udivsi3>
   127b8:	100b883a 	mov	r5,r2
   127bc:	9009883a 	mov	r4,r18
   127c0:	d8800515 	stw	r2,20(sp)
   127c4:	001411c0 	call	1411c <__mulsi3>
   127c8:	a809883a 	mov	r4,r21
   127cc:	a00b883a 	mov	r5,r20
   127d0:	d8800415 	stw	r2,16(sp)
   127d4:	00119bc0 	call	119bc <__umodsi3>
   127d8:	1004943a 	slli	r2,r2,16
   127dc:	8008d43a 	srli	r4,r16,16
   127e0:	da000417 	ldw	r8,16(sp)
   127e4:	d8c00217 	ldw	r3,8(sp)
   127e8:	2084b03a 	or	r2,r4,r2
   127ec:	d9c00517 	ldw	r7,20(sp)
   127f0:	1200062e 	bgeu	r2,r8,1280c <__divdf3+0x54c>
   127f4:	1585883a 	add	r2,r2,r22
   127f8:	393fffc4 	addi	r4,r7,-1
   127fc:	1580c536 	bltu	r2,r22,12b14 <__divdf3+0x854>
   12800:	1200c42e 	bgeu	r2,r8,12b14 <__divdf3+0x854>
   12804:	39ffff84 	addi	r7,r7,-2
   12808:	1585883a 	add	r2,r2,r22
   1280c:	122bc83a 	sub	r21,r2,r8
   12810:	a00b883a 	mov	r5,r20
   12814:	a809883a 	mov	r4,r21
   12818:	d8c00215 	stw	r3,8(sp)
   1281c:	d9c00515 	stw	r7,20(sp)
   12820:	00119580 	call	11958 <__udivsi3>
   12824:	9009883a 	mov	r4,r18
   12828:	100b883a 	mov	r5,r2
   1282c:	d8800415 	stw	r2,16(sp)
   12830:	001411c0 	call	1411c <__mulsi3>
   12834:	a809883a 	mov	r4,r21
   12838:	a00b883a 	mov	r5,r20
   1283c:	1025883a 	mov	r18,r2
   12840:	00119bc0 	call	119bc <__umodsi3>
   12844:	1004943a 	slli	r2,r2,16
   12848:	813fffcc 	andi	r4,r16,65535
   1284c:	d8c00217 	ldw	r3,8(sp)
   12850:	20a0b03a 	or	r16,r4,r2
   12854:	d9c00517 	ldw	r7,20(sp)
   12858:	da000417 	ldw	r8,16(sp)
   1285c:	8480062e 	bgeu	r16,r18,12878 <__divdf3+0x5b8>
   12860:	85a1883a 	add	r16,r16,r22
   12864:	40bfffc4 	addi	r2,r8,-1
   12868:	8580ac36 	bltu	r16,r22,12b1c <__divdf3+0x85c>
   1286c:	8480ab2e 	bgeu	r16,r18,12b1c <__divdf3+0x85c>
   12870:	423fff84 	addi	r8,r8,-2
   12874:	85a1883a 	add	r16,r16,r22
   12878:	3804943a 	slli	r2,r7,16
   1287c:	84a1c83a 	sub	r16,r16,r18
   12880:	e009883a 	mov	r4,fp
   12884:	1228b03a 	or	r20,r2,r8
   12888:	a1ffffcc 	andi	r7,r20,65535
   1288c:	a024d43a 	srli	r18,r20,16
   12890:	380b883a 	mov	r5,r7
   12894:	d8c00215 	stw	r3,8(sp)
   12898:	d9c00515 	stw	r7,20(sp)
   1289c:	001411c0 	call	1411c <__mulsi3>
   128a0:	900b883a 	mov	r5,r18
   128a4:	e009883a 	mov	r4,fp
   128a8:	102b883a 	mov	r21,r2
   128ac:	001411c0 	call	1411c <__mulsi3>
   128b0:	900b883a 	mov	r5,r18
   128b4:	b809883a 	mov	r4,r23
   128b8:	1039883a 	mov	fp,r2
   128bc:	001411c0 	call	1411c <__mulsi3>
   128c0:	d9c00517 	ldw	r7,20(sp)
   128c4:	b80b883a 	mov	r5,r23
   128c8:	1025883a 	mov	r18,r2
   128cc:	3809883a 	mov	r4,r7
   128d0:	001411c0 	call	1411c <__mulsi3>
   128d4:	a808d43a 	srli	r4,r21,16
   128d8:	1705883a 	add	r2,r2,fp
   128dc:	d8c00217 	ldw	r3,8(sp)
   128e0:	2085883a 	add	r2,r4,r2
   128e4:	1700022e 	bgeu	r2,fp,128f0 <__divdf3+0x630>
   128e8:	01000074 	movhi	r4,1
   128ec:	9125883a 	add	r18,r18,r4
   128f0:	1008d43a 	srli	r4,r2,16
   128f4:	1004943a 	slli	r2,r2,16
   128f8:	ad7fffcc 	andi	r21,r21,65535
   128fc:	2489883a 	add	r4,r4,r18
   12900:	1545883a 	add	r2,r2,r21
   12904:	81003836 	bltu	r16,r4,129e8 <__divdf3+0x728>
   12908:	81003626 	beq	r16,r4,129e4 <__divdf3+0x724>
   1290c:	a5000054 	ori	r20,r20,1
   12910:	1880ffc4 	addi	r2,r3,1023
   12914:	00bf2e0e 	bge	zero,r2,125d0 <_gp+0xfffebc28>
   12918:	a10001cc 	andi	r4,r20,7
   1291c:	20000726 	beq	r4,zero,1293c <__divdf3+0x67c>
   12920:	a10003cc 	andi	r4,r20,15
   12924:	01400104 	movi	r5,4
   12928:	21400426 	beq	r4,r5,1293c <__divdf3+0x67c>
   1292c:	a149883a 	add	r4,r20,r5
   12930:	2529803a 	cmpltu	r20,r4,r20
   12934:	8d23883a 	add	r17,r17,r20
   12938:	2029883a 	mov	r20,r4
   1293c:	8900402c 	andhi	r4,r17,256
   12940:	20000426 	beq	r4,zero,12954 <__divdf3+0x694>
   12944:	18810004 	addi	r2,r3,1024
   12948:	00ffc034 	movhi	r3,65280
   1294c:	18ffffc4 	addi	r3,r3,-1
   12950:	88e2703a 	and	r17,r17,r3
   12954:	00c1ff84 	movi	r3,2046
   12958:	18beb416 	blt	r3,r2,1242c <_gp+0xfffeba84>
   1295c:	a028d0fa 	srli	r20,r20,3
   12960:	882a977a 	slli	r21,r17,29
   12964:	8820927a 	slli	r16,r17,9
   12968:	1081ffcc 	andi	r2,r2,2047
   1296c:	ad2ab03a 	or	r21,r21,r20
   12970:	8020d33a 	srli	r16,r16,12
   12974:	9900004c 	andi	r4,r19,1
   12978:	003eb006 	br	1243c <_gp+0xfffeba94>
   1297c:	8080022c 	andhi	r2,r16,8
   12980:	10001226 	beq	r2,zero,129cc <__divdf3+0x70c>
   12984:	8880022c 	andhi	r2,r17,8
   12988:	1000101e 	bne	r2,zero,129cc <__divdf3+0x70c>
   1298c:	00800434 	movhi	r2,16
   12990:	8c000234 	orhi	r16,r17,8
   12994:	10bfffc4 	addi	r2,r2,-1
   12998:	b809883a 	mov	r4,r23
   1299c:	80a0703a 	and	r16,r16,r2
   129a0:	a02b883a 	mov	r21,r20
   129a4:	003f0806 	br	125c8 <_gp+0xfffebc20>
   129a8:	008000c4 	movi	r2,3
   129ac:	3880b126 	beq	r7,r2,12c74 <__divdf3+0x9b4>
   129b0:	00800044 	movi	r2,1
   129b4:	38805b1e 	bne	r7,r2,12b24 <__divdf3+0x864>
   129b8:	e009883a 	mov	r4,fp
   129bc:	0005883a 	mov	r2,zero
   129c0:	0021883a 	mov	r16,zero
   129c4:	002b883a 	mov	r21,zero
   129c8:	003e9c06 	br	1243c <_gp+0xfffeba94>
   129cc:	00800434 	movhi	r2,16
   129d0:	84000234 	orhi	r16,r16,8
   129d4:	10bfffc4 	addi	r2,r2,-1
   129d8:	b009883a 	mov	r4,r22
   129dc:	80a0703a 	and	r16,r16,r2
   129e0:	003ef906 	br	125c8 <_gp+0xfffebc20>
   129e4:	103fca26 	beq	r2,zero,12910 <_gp+0xfffebf68>
   129e8:	b421883a 	add	r16,r22,r16
   129ec:	a17fffc4 	addi	r5,r20,-1
   129f0:	8580422e 	bgeu	r16,r22,12afc <__divdf3+0x83c>
   129f4:	2829883a 	mov	r20,r5
   129f8:	813fc41e 	bne	r16,r4,1290c <_gp+0xfffebf64>
   129fc:	d9800017 	ldw	r6,0(sp)
   12a00:	30bfc21e 	bne	r6,r2,1290c <_gp+0xfffebf64>
   12a04:	003fc206 	br	12910 <_gp+0xfffebf68>
   12a08:	143ff604 	addi	r16,r2,-40
   12a0c:	8c20983a 	sll	r16,r17,r16
   12a10:	002b883a 	mov	r21,zero
   12a14:	003eb406 	br	124e8 <_gp+0xfffebb40>
   12a18:	d9800215 	stw	r6,8(sp)
   12a1c:	d9c00515 	stw	r7,20(sp)
   12a20:	da000415 	stw	r8,16(sp)
   12a24:	00140b80 	call	140b8 <__clzsi2>
   12a28:	10800804 	addi	r2,r2,32
   12a2c:	da000417 	ldw	r8,16(sp)
   12a30:	d9c00517 	ldw	r7,20(sp)
   12a34:	d9800217 	ldw	r6,8(sp)
   12a38:	003ea106 	br	124c0 <_gp+0xfffebb18>
   12a3c:	147ff604 	addi	r17,r2,-40
   12a40:	3462983a 	sll	r17,r6,r17
   12a44:	0029883a 	mov	r20,zero
   12a48:	003ec906 	br	12570 <_gp+0xfffebbc8>
   12a4c:	3009883a 	mov	r4,r6
   12a50:	d9400115 	stw	r5,4(sp)
   12a54:	d9800215 	stw	r6,8(sp)
   12a58:	da000415 	stw	r8,16(sp)
   12a5c:	da400315 	stw	r9,12(sp)
   12a60:	00140b80 	call	140b8 <__clzsi2>
   12a64:	10800804 	addi	r2,r2,32
   12a68:	da400317 	ldw	r9,12(sp)
   12a6c:	da000417 	ldw	r8,16(sp)
   12a70:	d9800217 	ldw	r6,8(sp)
   12a74:	d9400117 	ldw	r5,4(sp)
   12a78:	003eb306 	br	12548 <_gp+0xfffebba0>
   12a7c:	d9800017 	ldw	r6,0(sp)
   12a80:	a9ab883a 	add	r21,r21,r6
   12a84:	a98b803a 	cmpltu	r5,r21,r6
   12a88:	2d8b883a 	add	r5,r5,r22
   12a8c:	2a11883a 	add	r8,r5,r8
   12a90:	897fffc4 	addi	r5,r17,-1
   12a94:	b2000c2e 	bgeu	r22,r8,12ac8 <__divdf3+0x808>
   12a98:	41003f36 	bltu	r8,r4,12b98 <__divdf3+0x8d8>
   12a9c:	22006c26 	beq	r4,r8,12c50 <__divdf3+0x990>
   12aa0:	4109c83a 	sub	r4,r8,r4
   12aa4:	2823883a 	mov	r17,r5
   12aa8:	003f3b06 	br	12798 <_gp+0xfffebdf0>
   12aac:	ad3ed336 	bltu	r21,r20,125fc <_gp+0xfffebc54>
   12ab0:	a804d07a 	srli	r2,r21,1
   12ab4:	802e97fa 	slli	r23,r16,31
   12ab8:	a82a97fa 	slli	r21,r21,31
   12abc:	8020d07a 	srli	r16,r16,1
   12ac0:	b8aeb03a 	or	r23,r23,r2
   12ac4:	003ed006 	br	12608 <_gp+0xfffebc60>
   12ac8:	b23ff51e 	bne	r22,r8,12aa0 <_gp+0xfffec0f8>
   12acc:	d9800017 	ldw	r6,0(sp)
   12ad0:	a9bff12e 	bgeu	r21,r6,12a98 <_gp+0xfffec0f0>
   12ad4:	b109c83a 	sub	r4,r22,r4
   12ad8:	2823883a 	mov	r17,r5
   12adc:	003f2e06 	br	12798 <_gp+0xfffebdf0>
   12ae0:	2021883a 	mov	r16,r4
   12ae4:	003eff06 	br	126e4 <_gp+0xfffebd3c>
   12ae8:	2023883a 	mov	r17,r4
   12aec:	003ee406 	br	12680 <_gp+0xfffebcd8>
   12af0:	a8bfe236 	bltu	r21,r2,12a7c <_gp+0xfffec0d4>
   12af4:	0009883a 	mov	r4,zero
   12af8:	003f2706 	br	12798 <_gp+0xfffebdf0>
   12afc:	81002d36 	bltu	r16,r4,12bb4 <__divdf3+0x8f4>
   12b00:	24005626 	beq	r4,r16,12c5c <__divdf3+0x99c>
   12b04:	2829883a 	mov	r20,r5
   12b08:	003f8006 	br	1290c <_gp+0xfffebf64>
   12b0c:	053fffc4 	movi	r20,-1
   12b10:	003f7f06 	br	12910 <_gp+0xfffebf68>
   12b14:	200f883a 	mov	r7,r4
   12b18:	003f3c06 	br	1280c <_gp+0xfffebe64>
   12b1c:	1011883a 	mov	r8,r2
   12b20:	003f5506 	br	12878 <_gp+0xfffebed0>
   12b24:	e027883a 	mov	r19,fp
   12b28:	003f7906 	br	12910 <_gp+0xfffebf68>
   12b2c:	010007c4 	movi	r4,31
   12b30:	20c02816 	blt	r4,r3,12bd4 <__divdf3+0x914>
   12b34:	00800804 	movi	r2,32
   12b38:	10c5c83a 	sub	r2,r2,r3
   12b3c:	888a983a 	sll	r5,r17,r2
   12b40:	a0c8d83a 	srl	r4,r20,r3
   12b44:	a084983a 	sll	r2,r20,r2
   12b48:	88e2d83a 	srl	r17,r17,r3
   12b4c:	2906b03a 	or	r3,r5,r4
   12b50:	1004c03a 	cmpne	r2,r2,zero
   12b54:	1886b03a 	or	r3,r3,r2
   12b58:	188001cc 	andi	r2,r3,7
   12b5c:	10000726 	beq	r2,zero,12b7c <__divdf3+0x8bc>
   12b60:	188003cc 	andi	r2,r3,15
   12b64:	01000104 	movi	r4,4
   12b68:	11000426 	beq	r2,r4,12b7c <__divdf3+0x8bc>
   12b6c:	1805883a 	mov	r2,r3
   12b70:	10c00104 	addi	r3,r2,4
   12b74:	1885803a 	cmpltu	r2,r3,r2
   12b78:	88a3883a 	add	r17,r17,r2
   12b7c:	8880202c 	andhi	r2,r17,128
   12b80:	10002926 	beq	r2,zero,12c28 <__divdf3+0x968>
   12b84:	9900004c 	andi	r4,r19,1
   12b88:	00800044 	movi	r2,1
   12b8c:	0021883a 	mov	r16,zero
   12b90:	002b883a 	mov	r21,zero
   12b94:	003e2906 	br	1243c <_gp+0xfffeba94>
   12b98:	d9800017 	ldw	r6,0(sp)
   12b9c:	8c7fff84 	addi	r17,r17,-2
   12ba0:	a9ab883a 	add	r21,r21,r6
   12ba4:	a98b803a 	cmpltu	r5,r21,r6
   12ba8:	2d8b883a 	add	r5,r5,r22
   12bac:	2a11883a 	add	r8,r5,r8
   12bb0:	003ef806 	br	12794 <_gp+0xfffebdec>
   12bb4:	d9800017 	ldw	r6,0(sp)
   12bb8:	318f883a 	add	r7,r6,r6
   12bbc:	398b803a 	cmpltu	r5,r7,r6
   12bc0:	2d8d883a 	add	r6,r5,r22
   12bc4:	81a1883a 	add	r16,r16,r6
   12bc8:	a17fff84 	addi	r5,r20,-2
   12bcc:	d9c00015 	stw	r7,0(sp)
   12bd0:	003f8806 	br	129f4 <_gp+0xfffec04c>
   12bd4:	013ff844 	movi	r4,-31
   12bd8:	2085c83a 	sub	r2,r4,r2
   12bdc:	8888d83a 	srl	r4,r17,r2
   12be0:	00800804 	movi	r2,32
   12be4:	18802126 	beq	r3,r2,12c6c <__divdf3+0x9ac>
   12be8:	04001004 	movi	r16,64
   12bec:	80c7c83a 	sub	r3,r16,r3
   12bf0:	88e0983a 	sll	r16,r17,r3
   12bf4:	8504b03a 	or	r2,r16,r20
   12bf8:	1004c03a 	cmpne	r2,r2,zero
   12bfc:	2084b03a 	or	r2,r4,r2
   12c00:	144001cc 	andi	r17,r2,7
   12c04:	88000d1e 	bne	r17,zero,12c3c <__divdf3+0x97c>
   12c08:	0021883a 	mov	r16,zero
   12c0c:	102ad0fa 	srli	r21,r2,3
   12c10:	9900004c 	andi	r4,r19,1
   12c14:	0005883a 	mov	r2,zero
   12c18:	ac6ab03a 	or	r21,r21,r17
   12c1c:	003e0706 	br	1243c <_gp+0xfffeba94>
   12c20:	1007883a 	mov	r3,r2
   12c24:	0023883a 	mov	r17,zero
   12c28:	8820927a 	slli	r16,r17,9
   12c2c:	1805883a 	mov	r2,r3
   12c30:	8822977a 	slli	r17,r17,29
   12c34:	8020d33a 	srli	r16,r16,12
   12c38:	003ff406 	br	12c0c <_gp+0xfffec264>
   12c3c:	10c003cc 	andi	r3,r2,15
   12c40:	01000104 	movi	r4,4
   12c44:	193ff626 	beq	r3,r4,12c20 <_gp+0xfffec278>
   12c48:	0023883a 	mov	r17,zero
   12c4c:	003fc806 	br	12b70 <_gp+0xfffec1c8>
   12c50:	a8bfd136 	bltu	r21,r2,12b98 <_gp+0xfffec1f0>
   12c54:	2823883a 	mov	r17,r5
   12c58:	003fa606 	br	12af4 <_gp+0xfffec14c>
   12c5c:	d9800017 	ldw	r6,0(sp)
   12c60:	30bfd436 	bltu	r6,r2,12bb4 <_gp+0xfffec20c>
   12c64:	2829883a 	mov	r20,r5
   12c68:	003f6406 	br	129fc <_gp+0xfffec054>
   12c6c:	0021883a 	mov	r16,zero
   12c70:	003fe006 	br	12bf4 <_gp+0xfffec24c>
   12c74:	00800434 	movhi	r2,16
   12c78:	8c000234 	orhi	r16,r17,8
   12c7c:	10bfffc4 	addi	r2,r2,-1
   12c80:	e009883a 	mov	r4,fp
   12c84:	80a0703a 	and	r16,r16,r2
   12c88:	a02b883a 	mov	r21,r20
   12c8c:	003e4e06 	br	125c8 <_gp+0xfffebc20>

00012c90 <__eqdf2>:
   12c90:	2804d53a 	srli	r2,r5,20
   12c94:	3806d53a 	srli	r3,r7,20
   12c98:	02000434 	movhi	r8,16
   12c9c:	423fffc4 	addi	r8,r8,-1
   12ca0:	1081ffcc 	andi	r2,r2,2047
   12ca4:	0281ffc4 	movi	r10,2047
   12ca8:	2a12703a 	and	r9,r5,r8
   12cac:	18c1ffcc 	andi	r3,r3,2047
   12cb0:	3a10703a 	and	r8,r7,r8
   12cb4:	280ad7fa 	srli	r5,r5,31
   12cb8:	380ed7fa 	srli	r7,r7,31
   12cbc:	12801026 	beq	r2,r10,12d00 <__eqdf2+0x70>
   12cc0:	0281ffc4 	movi	r10,2047
   12cc4:	1a800a26 	beq	r3,r10,12cf0 <__eqdf2+0x60>
   12cc8:	10c00226 	beq	r2,r3,12cd4 <__eqdf2+0x44>
   12ccc:	00800044 	movi	r2,1
   12cd0:	f800283a 	ret
   12cd4:	4a3ffd1e 	bne	r9,r8,12ccc <_gp+0xfffec324>
   12cd8:	21bffc1e 	bne	r4,r6,12ccc <_gp+0xfffec324>
   12cdc:	29c00c26 	beq	r5,r7,12d10 <__eqdf2+0x80>
   12ce0:	103ffa1e 	bne	r2,zero,12ccc <_gp+0xfffec324>
   12ce4:	2244b03a 	or	r2,r4,r9
   12ce8:	1004c03a 	cmpne	r2,r2,zero
   12cec:	f800283a 	ret
   12cf0:	3214b03a 	or	r10,r6,r8
   12cf4:	503ff426 	beq	r10,zero,12cc8 <_gp+0xfffec320>
   12cf8:	00800044 	movi	r2,1
   12cfc:	f800283a 	ret
   12d00:	2254b03a 	or	r10,r4,r9
   12d04:	503fee26 	beq	r10,zero,12cc0 <_gp+0xfffec318>
   12d08:	00800044 	movi	r2,1
   12d0c:	f800283a 	ret
   12d10:	0005883a 	mov	r2,zero
   12d14:	f800283a 	ret

00012d18 <__gedf2>:
   12d18:	2804d53a 	srli	r2,r5,20
   12d1c:	3806d53a 	srli	r3,r7,20
   12d20:	02000434 	movhi	r8,16
   12d24:	423fffc4 	addi	r8,r8,-1
   12d28:	1081ffcc 	andi	r2,r2,2047
   12d2c:	0241ffc4 	movi	r9,2047
   12d30:	2a14703a 	and	r10,r5,r8
   12d34:	18c1ffcc 	andi	r3,r3,2047
   12d38:	3a10703a 	and	r8,r7,r8
   12d3c:	280ad7fa 	srli	r5,r5,31
   12d40:	380ed7fa 	srli	r7,r7,31
   12d44:	12401d26 	beq	r2,r9,12dbc <__gedf2+0xa4>
   12d48:	0241ffc4 	movi	r9,2047
   12d4c:	1a401226 	beq	r3,r9,12d98 <__gedf2+0x80>
   12d50:	1000081e 	bne	r2,zero,12d74 <__gedf2+0x5c>
   12d54:	2296b03a 	or	r11,r4,r10
   12d58:	5813003a 	cmpeq	r9,r11,zero
   12d5c:	1800091e 	bne	r3,zero,12d84 <__gedf2+0x6c>
   12d60:	3218b03a 	or	r12,r6,r8
   12d64:	6000071e 	bne	r12,zero,12d84 <__gedf2+0x6c>
   12d68:	0005883a 	mov	r2,zero
   12d6c:	5800101e 	bne	r11,zero,12db0 <__gedf2+0x98>
   12d70:	f800283a 	ret
   12d74:	18000c1e 	bne	r3,zero,12da8 <__gedf2+0x90>
   12d78:	3212b03a 	or	r9,r6,r8
   12d7c:	48000c26 	beq	r9,zero,12db0 <__gedf2+0x98>
   12d80:	0013883a 	mov	r9,zero
   12d84:	39c03fcc 	andi	r7,r7,255
   12d88:	48000826 	beq	r9,zero,12dac <__gedf2+0x94>
   12d8c:	38000926 	beq	r7,zero,12db4 <__gedf2+0x9c>
   12d90:	00800044 	movi	r2,1
   12d94:	f800283a 	ret
   12d98:	3212b03a 	or	r9,r6,r8
   12d9c:	483fec26 	beq	r9,zero,12d50 <_gp+0xfffec3a8>
   12da0:	00bfff84 	movi	r2,-2
   12da4:	f800283a 	ret
   12da8:	39c03fcc 	andi	r7,r7,255
   12dac:	29c00626 	beq	r5,r7,12dc8 <__gedf2+0xb0>
   12db0:	283ff726 	beq	r5,zero,12d90 <_gp+0xfffec3e8>
   12db4:	00bfffc4 	movi	r2,-1
   12db8:	f800283a 	ret
   12dbc:	2292b03a 	or	r9,r4,r10
   12dc0:	483fe126 	beq	r9,zero,12d48 <_gp+0xfffec3a0>
   12dc4:	003ff606 	br	12da0 <_gp+0xfffec3f8>
   12dc8:	18bff916 	blt	r3,r2,12db0 <_gp+0xfffec408>
   12dcc:	10c00316 	blt	r2,r3,12ddc <__gedf2+0xc4>
   12dd0:	42bff736 	bltu	r8,r10,12db0 <_gp+0xfffec408>
   12dd4:	52000326 	beq	r10,r8,12de4 <__gedf2+0xcc>
   12dd8:	5200042e 	bgeu	r10,r8,12dec <__gedf2+0xd4>
   12ddc:	283fec1e 	bne	r5,zero,12d90 <_gp+0xfffec3e8>
   12de0:	003ff406 	br	12db4 <_gp+0xfffec40c>
   12de4:	313ff236 	bltu	r6,r4,12db0 <_gp+0xfffec408>
   12de8:	21bffc36 	bltu	r4,r6,12ddc <_gp+0xfffec434>
   12dec:	0005883a 	mov	r2,zero
   12df0:	f800283a 	ret

00012df4 <__muldf3>:
   12df4:	deffee04 	addi	sp,sp,-72
   12df8:	dd000c15 	stw	r20,48(sp)
   12dfc:	2828d53a 	srli	r20,r5,20
   12e00:	ddc00f15 	stw	r23,60(sp)
   12e04:	282ed7fa 	srli	r23,r5,31
   12e08:	dc000815 	stw	r16,32(sp)
   12e0c:	04000434 	movhi	r16,16
   12e10:	dcc00b15 	stw	r19,44(sp)
   12e14:	843fffc4 	addi	r16,r16,-1
   12e18:	dfc01115 	stw	ra,68(sp)
   12e1c:	df001015 	stw	fp,64(sp)
   12e20:	dd800e15 	stw	r22,56(sp)
   12e24:	dd400d15 	stw	r21,52(sp)
   12e28:	dc800a15 	stw	r18,40(sp)
   12e2c:	dc400915 	stw	r17,36(sp)
   12e30:	a501ffcc 	andi	r20,r20,2047
   12e34:	2c20703a 	and	r16,r5,r16
   12e38:	b827883a 	mov	r19,r23
   12e3c:	ba403fcc 	andi	r9,r23,255
   12e40:	a0006026 	beq	r20,zero,12fc4 <__muldf3+0x1d0>
   12e44:	0081ffc4 	movi	r2,2047
   12e48:	202d883a 	mov	r22,r4
   12e4c:	a0803626 	beq	r20,r2,12f28 <__muldf3+0x134>
   12e50:	84000434 	orhi	r16,r16,16
   12e54:	200ad77a 	srli	r5,r4,29
   12e58:	800490fa 	slli	r2,r16,3
   12e5c:	202c90fa 	slli	r22,r4,3
   12e60:	a53f0044 	addi	r20,r20,-1023
   12e64:	28a0b03a 	or	r16,r5,r2
   12e68:	002b883a 	mov	r21,zero
   12e6c:	000b883a 	mov	r5,zero
   12e70:	3804d53a 	srli	r2,r7,20
   12e74:	3838d7fa 	srli	fp,r7,31
   12e78:	04400434 	movhi	r17,16
   12e7c:	8c7fffc4 	addi	r17,r17,-1
   12e80:	1081ffcc 	andi	r2,r2,2047
   12e84:	3025883a 	mov	r18,r6
   12e88:	3c62703a 	and	r17,r7,r17
   12e8c:	e2803fcc 	andi	r10,fp,255
   12e90:	10006d26 	beq	r2,zero,13048 <__muldf3+0x254>
   12e94:	00c1ffc4 	movi	r3,2047
   12e98:	10c06526 	beq	r2,r3,13030 <__muldf3+0x23c>
   12e9c:	8c400434 	orhi	r17,r17,16
   12ea0:	300ed77a 	srli	r7,r6,29
   12ea4:	880690fa 	slli	r3,r17,3
   12ea8:	302490fa 	slli	r18,r6,3
   12eac:	10bf0044 	addi	r2,r2,-1023
   12eb0:	38e2b03a 	or	r17,r7,r3
   12eb4:	000f883a 	mov	r7,zero
   12eb8:	a087883a 	add	r3,r20,r2
   12ebc:	010003c4 	movi	r4,15
   12ec0:	3d44b03a 	or	r2,r7,r21
   12ec4:	e5ccf03a 	xor	r6,fp,r23
   12ec8:	1a000044 	addi	r8,r3,1
   12ecc:	20809b36 	bltu	r4,r2,1313c <__muldf3+0x348>
   12ed0:	100490ba 	slli	r2,r2,2
   12ed4:	01000074 	movhi	r4,1
   12ed8:	210bba04 	addi	r4,r4,12008
   12edc:	1105883a 	add	r2,r2,r4
   12ee0:	10800017 	ldw	r2,0(r2)
   12ee4:	1000683a 	jmp	r2
   12ee8:	0001313c 	xorhi	zero,zero,1220
   12eec:	00012f48 	cmpgei	zero,zero,1213
   12ef0:	00012f48 	cmpgei	zero,zero,1213
   12ef4:	00012f44 	movi	zero,1213
   12ef8:	00013118 	cmpnei	zero,zero,1220
   12efc:	00013118 	cmpnei	zero,zero,1220
   12f00:	00013100 	call	1310 <__alt_mem_onchip_memory-0xecf0>
   12f04:	00012f44 	movi	zero,1213
   12f08:	00013118 	cmpnei	zero,zero,1220
   12f0c:	00013100 	call	1310 <__alt_mem_onchip_memory-0xecf0>
   12f10:	00013118 	cmpnei	zero,zero,1220
   12f14:	00012f44 	movi	zero,1213
   12f18:	00013128 	cmpgeui	zero,zero,1220
   12f1c:	00013128 	cmpgeui	zero,zero,1220
   12f20:	00013128 	cmpgeui	zero,zero,1220
   12f24:	00013488 	cmpgei	zero,zero,1234
   12f28:	2404b03a 	or	r2,r4,r16
   12f2c:	1000711e 	bne	r2,zero,130f4 <__muldf3+0x300>
   12f30:	05400204 	movi	r21,8
   12f34:	0021883a 	mov	r16,zero
   12f38:	002d883a 	mov	r22,zero
   12f3c:	01400084 	movi	r5,2
   12f40:	003fcb06 	br	12e70 <_gp+0xfffec4c8>
   12f44:	500d883a 	mov	r6,r10
   12f48:	00800084 	movi	r2,2
   12f4c:	38805926 	beq	r7,r2,130b4 <__muldf3+0x2c0>
   12f50:	008000c4 	movi	r2,3
   12f54:	3881bb26 	beq	r7,r2,13644 <__muldf3+0x850>
   12f58:	00800044 	movi	r2,1
   12f5c:	3881961e 	bne	r7,r2,135b8 <__muldf3+0x7c4>
   12f60:	3027883a 	mov	r19,r6
   12f64:	0005883a 	mov	r2,zero
   12f68:	0021883a 	mov	r16,zero
   12f6c:	002d883a 	mov	r22,zero
   12f70:	1004953a 	slli	r2,r2,20
   12f74:	98c03fcc 	andi	r3,r19,255
   12f78:	04400434 	movhi	r17,16
   12f7c:	8c7fffc4 	addi	r17,r17,-1
   12f80:	180697fa 	slli	r3,r3,31
   12f84:	8460703a 	and	r16,r16,r17
   12f88:	80a0b03a 	or	r16,r16,r2
   12f8c:	80c6b03a 	or	r3,r16,r3
   12f90:	b005883a 	mov	r2,r22
   12f94:	dfc01117 	ldw	ra,68(sp)
   12f98:	df001017 	ldw	fp,64(sp)
   12f9c:	ddc00f17 	ldw	r23,60(sp)
   12fa0:	dd800e17 	ldw	r22,56(sp)
   12fa4:	dd400d17 	ldw	r21,52(sp)
   12fa8:	dd000c17 	ldw	r20,48(sp)
   12fac:	dcc00b17 	ldw	r19,44(sp)
   12fb0:	dc800a17 	ldw	r18,40(sp)
   12fb4:	dc400917 	ldw	r17,36(sp)
   12fb8:	dc000817 	ldw	r16,32(sp)
   12fbc:	dec01204 	addi	sp,sp,72
   12fc0:	f800283a 	ret
   12fc4:	2404b03a 	or	r2,r4,r16
   12fc8:	202b883a 	mov	r21,r4
   12fcc:	10004426 	beq	r2,zero,130e0 <__muldf3+0x2ec>
   12fd0:	80015126 	beq	r16,zero,13518 <__muldf3+0x724>
   12fd4:	8009883a 	mov	r4,r16
   12fd8:	d9800715 	stw	r6,28(sp)
   12fdc:	d9c00215 	stw	r7,8(sp)
   12fe0:	da400415 	stw	r9,16(sp)
   12fe4:	00140b80 	call	140b8 <__clzsi2>
   12fe8:	d9800717 	ldw	r6,28(sp)
   12fec:	d9c00217 	ldw	r7,8(sp)
   12ff0:	da400417 	ldw	r9,16(sp)
   12ff4:	113ffd44 	addi	r4,r2,-11
   12ff8:	00c00704 	movi	r3,28
   12ffc:	19014216 	blt	r3,r4,13508 <__muldf3+0x714>
   13000:	00c00744 	movi	r3,29
   13004:	15bffe04 	addi	r22,r2,-8
   13008:	1907c83a 	sub	r3,r3,r4
   1300c:	85a0983a 	sll	r16,r16,r22
   13010:	a8c6d83a 	srl	r3,r21,r3
   13014:	adac983a 	sll	r22,r21,r22
   13018:	1c20b03a 	or	r16,r3,r16
   1301c:	1080fcc4 	addi	r2,r2,1011
   13020:	00a9c83a 	sub	r20,zero,r2
   13024:	002b883a 	mov	r21,zero
   13028:	000b883a 	mov	r5,zero
   1302c:	003f9006 	br	12e70 <_gp+0xfffec4c8>
   13030:	3446b03a 	or	r3,r6,r17
   13034:	1800281e 	bne	r3,zero,130d8 <__muldf3+0x2e4>
   13038:	0023883a 	mov	r17,zero
   1303c:	0025883a 	mov	r18,zero
   13040:	01c00084 	movi	r7,2
   13044:	003f9c06 	br	12eb8 <_gp+0xfffec510>
   13048:	3446b03a 	or	r3,r6,r17
   1304c:	18001e26 	beq	r3,zero,130c8 <__muldf3+0x2d4>
   13050:	88012126 	beq	r17,zero,134d8 <__muldf3+0x6e4>
   13054:	8809883a 	mov	r4,r17
   13058:	d9400215 	stw	r5,8(sp)
   1305c:	d9800715 	stw	r6,28(sp)
   13060:	da400415 	stw	r9,16(sp)
   13064:	da800315 	stw	r10,12(sp)
   13068:	00140b80 	call	140b8 <__clzsi2>
   1306c:	d9400217 	ldw	r5,8(sp)
   13070:	d9800717 	ldw	r6,28(sp)
   13074:	da400417 	ldw	r9,16(sp)
   13078:	da800317 	ldw	r10,12(sp)
   1307c:	113ffd44 	addi	r4,r2,-11
   13080:	00c00704 	movi	r3,28
   13084:	19011016 	blt	r3,r4,134c8 <__muldf3+0x6d4>
   13088:	00c00744 	movi	r3,29
   1308c:	14bffe04 	addi	r18,r2,-8
   13090:	1907c83a 	sub	r3,r3,r4
   13094:	8ca2983a 	sll	r17,r17,r18
   13098:	30c6d83a 	srl	r3,r6,r3
   1309c:	34a4983a 	sll	r18,r6,r18
   130a0:	1c62b03a 	or	r17,r3,r17
   130a4:	1080fcc4 	addi	r2,r2,1011
   130a8:	0085c83a 	sub	r2,zero,r2
   130ac:	000f883a 	mov	r7,zero
   130b0:	003f8106 	br	12eb8 <_gp+0xfffec510>
   130b4:	3027883a 	mov	r19,r6
   130b8:	0081ffc4 	movi	r2,2047
   130bc:	0021883a 	mov	r16,zero
   130c0:	002d883a 	mov	r22,zero
   130c4:	003faa06 	br	12f70 <_gp+0xfffec5c8>
   130c8:	0023883a 	mov	r17,zero
   130cc:	0025883a 	mov	r18,zero
   130d0:	01c00044 	movi	r7,1
   130d4:	003f7806 	br	12eb8 <_gp+0xfffec510>
   130d8:	01c000c4 	movi	r7,3
   130dc:	003f7606 	br	12eb8 <_gp+0xfffec510>
   130e0:	05400104 	movi	r21,4
   130e4:	0021883a 	mov	r16,zero
   130e8:	002d883a 	mov	r22,zero
   130ec:	01400044 	movi	r5,1
   130f0:	003f5f06 	br	12e70 <_gp+0xfffec4c8>
   130f4:	05400304 	movi	r21,12
   130f8:	014000c4 	movi	r5,3
   130fc:	003f5c06 	br	12e70 <_gp+0xfffec4c8>
   13100:	04000434 	movhi	r16,16
   13104:	0027883a 	mov	r19,zero
   13108:	843fffc4 	addi	r16,r16,-1
   1310c:	05bfffc4 	movi	r22,-1
   13110:	0081ffc4 	movi	r2,2047
   13114:	003f9606 	br	12f70 <_gp+0xfffec5c8>
   13118:	8023883a 	mov	r17,r16
   1311c:	b025883a 	mov	r18,r22
   13120:	280f883a 	mov	r7,r5
   13124:	003f8806 	br	12f48 <_gp+0xfffec5a0>
   13128:	8023883a 	mov	r17,r16
   1312c:	b025883a 	mov	r18,r22
   13130:	480d883a 	mov	r6,r9
   13134:	280f883a 	mov	r7,r5
   13138:	003f8306 	br	12f48 <_gp+0xfffec5a0>
   1313c:	b026d43a 	srli	r19,r22,16
   13140:	902ed43a 	srli	r23,r18,16
   13144:	b5bfffcc 	andi	r22,r22,65535
   13148:	94bfffcc 	andi	r18,r18,65535
   1314c:	b00b883a 	mov	r5,r22
   13150:	9009883a 	mov	r4,r18
   13154:	d8c00515 	stw	r3,20(sp)
   13158:	d9800715 	stw	r6,28(sp)
   1315c:	da000615 	stw	r8,24(sp)
   13160:	001411c0 	call	1411c <__mulsi3>
   13164:	980b883a 	mov	r5,r19
   13168:	9009883a 	mov	r4,r18
   1316c:	1029883a 	mov	r20,r2
   13170:	001411c0 	call	1411c <__mulsi3>
   13174:	b80b883a 	mov	r5,r23
   13178:	9809883a 	mov	r4,r19
   1317c:	102b883a 	mov	r21,r2
   13180:	001411c0 	call	1411c <__mulsi3>
   13184:	b809883a 	mov	r4,r23
   13188:	b00b883a 	mov	r5,r22
   1318c:	1039883a 	mov	fp,r2
   13190:	001411c0 	call	1411c <__mulsi3>
   13194:	a008d43a 	srli	r4,r20,16
   13198:	1545883a 	add	r2,r2,r21
   1319c:	d8c00517 	ldw	r3,20(sp)
   131a0:	2085883a 	add	r2,r4,r2
   131a4:	d9800717 	ldw	r6,28(sp)
   131a8:	da000617 	ldw	r8,24(sp)
   131ac:	1540022e 	bgeu	r2,r21,131b8 <__muldf3+0x3c4>
   131b0:	01000074 	movhi	r4,1
   131b4:	e139883a 	add	fp,fp,r4
   131b8:	100e943a 	slli	r7,r2,16
   131bc:	1004d43a 	srli	r2,r2,16
   131c0:	882ad43a 	srli	r21,r17,16
   131c4:	a53fffcc 	andi	r20,r20,65535
   131c8:	8c7fffcc 	andi	r17,r17,65535
   131cc:	3d29883a 	add	r20,r7,r20
   131d0:	b00b883a 	mov	r5,r22
   131d4:	8809883a 	mov	r4,r17
   131d8:	d8c00515 	stw	r3,20(sp)
   131dc:	d9800715 	stw	r6,28(sp)
   131e0:	da000615 	stw	r8,24(sp)
   131e4:	dd000115 	stw	r20,4(sp)
   131e8:	d8800015 	stw	r2,0(sp)
   131ec:	001411c0 	call	1411c <__mulsi3>
   131f0:	980b883a 	mov	r5,r19
   131f4:	8809883a 	mov	r4,r17
   131f8:	d8800215 	stw	r2,8(sp)
   131fc:	001411c0 	call	1411c <__mulsi3>
   13200:	9809883a 	mov	r4,r19
   13204:	a80b883a 	mov	r5,r21
   13208:	1029883a 	mov	r20,r2
   1320c:	001411c0 	call	1411c <__mulsi3>
   13210:	b00b883a 	mov	r5,r22
   13214:	a809883a 	mov	r4,r21
   13218:	d8800415 	stw	r2,16(sp)
   1321c:	001411c0 	call	1411c <__mulsi3>
   13220:	d9c00217 	ldw	r7,8(sp)
   13224:	1505883a 	add	r2,r2,r20
   13228:	d8c00517 	ldw	r3,20(sp)
   1322c:	3826d43a 	srli	r19,r7,16
   13230:	d9800717 	ldw	r6,28(sp)
   13234:	da000617 	ldw	r8,24(sp)
   13238:	9885883a 	add	r2,r19,r2
   1323c:	da400417 	ldw	r9,16(sp)
   13240:	1500022e 	bgeu	r2,r20,1324c <__muldf3+0x458>
   13244:	01000074 	movhi	r4,1
   13248:	4913883a 	add	r9,r9,r4
   1324c:	1028d43a 	srli	r20,r2,16
   13250:	1004943a 	slli	r2,r2,16
   13254:	802cd43a 	srli	r22,r16,16
   13258:	843fffcc 	andi	r16,r16,65535
   1325c:	3cffffcc 	andi	r19,r7,65535
   13260:	9009883a 	mov	r4,r18
   13264:	800b883a 	mov	r5,r16
   13268:	a269883a 	add	r20,r20,r9
   1326c:	d8c00515 	stw	r3,20(sp)
   13270:	d9800715 	stw	r6,28(sp)
   13274:	da000615 	stw	r8,24(sp)
   13278:	14e7883a 	add	r19,r2,r19
   1327c:	001411c0 	call	1411c <__mulsi3>
   13280:	9009883a 	mov	r4,r18
   13284:	b00b883a 	mov	r5,r22
   13288:	d8800315 	stw	r2,12(sp)
   1328c:	001411c0 	call	1411c <__mulsi3>
   13290:	b809883a 	mov	r4,r23
   13294:	b00b883a 	mov	r5,r22
   13298:	d8800215 	stw	r2,8(sp)
   1329c:	001411c0 	call	1411c <__mulsi3>
   132a0:	b80b883a 	mov	r5,r23
   132a4:	8009883a 	mov	r4,r16
   132a8:	d8800415 	stw	r2,16(sp)
   132ac:	001411c0 	call	1411c <__mulsi3>
   132b0:	da800317 	ldw	r10,12(sp)
   132b4:	d9c00217 	ldw	r7,8(sp)
   132b8:	d9000017 	ldw	r4,0(sp)
   132bc:	502ed43a 	srli	r23,r10,16
   132c0:	11c5883a 	add	r2,r2,r7
   132c4:	24e5883a 	add	r18,r4,r19
   132c8:	b885883a 	add	r2,r23,r2
   132cc:	d8c00517 	ldw	r3,20(sp)
   132d0:	d9800717 	ldw	r6,28(sp)
   132d4:	da000617 	ldw	r8,24(sp)
   132d8:	da400417 	ldw	r9,16(sp)
   132dc:	11c0022e 	bgeu	r2,r7,132e8 <__muldf3+0x4f4>
   132e0:	01000074 	movhi	r4,1
   132e4:	4913883a 	add	r9,r9,r4
   132e8:	100ed43a 	srli	r7,r2,16
   132ec:	1004943a 	slli	r2,r2,16
   132f0:	55ffffcc 	andi	r23,r10,65535
   132f4:	3a53883a 	add	r9,r7,r9
   132f8:	8809883a 	mov	r4,r17
   132fc:	800b883a 	mov	r5,r16
   13300:	d8c00515 	stw	r3,20(sp)
   13304:	d9800715 	stw	r6,28(sp)
   13308:	da000615 	stw	r8,24(sp)
   1330c:	da400415 	stw	r9,16(sp)
   13310:	15ef883a 	add	r23,r2,r23
   13314:	001411c0 	call	1411c <__mulsi3>
   13318:	8809883a 	mov	r4,r17
   1331c:	b00b883a 	mov	r5,r22
   13320:	d8800215 	stw	r2,8(sp)
   13324:	001411c0 	call	1411c <__mulsi3>
   13328:	b00b883a 	mov	r5,r22
   1332c:	a809883a 	mov	r4,r21
   13330:	d8800315 	stw	r2,12(sp)
   13334:	001411c0 	call	1411c <__mulsi3>
   13338:	8009883a 	mov	r4,r16
   1333c:	a80b883a 	mov	r5,r21
   13340:	1023883a 	mov	r17,r2
   13344:	001411c0 	call	1411c <__mulsi3>
   13348:	d9c00217 	ldw	r7,8(sp)
   1334c:	da800317 	ldw	r10,12(sp)
   13350:	d8c00517 	ldw	r3,20(sp)
   13354:	3808d43a 	srli	r4,r7,16
   13358:	1285883a 	add	r2,r2,r10
   1335c:	d9800717 	ldw	r6,28(sp)
   13360:	2085883a 	add	r2,r4,r2
   13364:	da000617 	ldw	r8,24(sp)
   13368:	da400417 	ldw	r9,16(sp)
   1336c:	1280022e 	bgeu	r2,r10,13378 <__muldf3+0x584>
   13370:	01000074 	movhi	r4,1
   13374:	8923883a 	add	r17,r17,r4
   13378:	1008943a 	slli	r4,r2,16
   1337c:	39ffffcc 	andi	r7,r7,65535
   13380:	e4b9883a 	add	fp,fp,r18
   13384:	21cf883a 	add	r7,r4,r7
   13388:	e4e7803a 	cmpltu	r19,fp,r19
   1338c:	3d0f883a 	add	r7,r7,r20
   13390:	bf39883a 	add	fp,r23,fp
   13394:	99c9883a 	add	r4,r19,r7
   13398:	e5ef803a 	cmpltu	r23,fp,r23
   1339c:	490b883a 	add	r5,r9,r4
   133a0:	1004d43a 	srli	r2,r2,16
   133a4:	b965883a 	add	r18,r23,r5
   133a8:	24c9803a 	cmpltu	r4,r4,r19
   133ac:	3d29803a 	cmpltu	r20,r7,r20
   133b0:	a128b03a 	or	r20,r20,r4
   133b4:	95ef803a 	cmpltu	r23,r18,r23
   133b8:	2a53803a 	cmpltu	r9,r5,r9
   133bc:	a0a9883a 	add	r20,r20,r2
   133c0:	4deeb03a 	or	r23,r9,r23
   133c4:	a5ef883a 	add	r23,r20,r23
   133c8:	bc63883a 	add	r17,r23,r17
   133cc:	e004927a 	slli	r2,fp,9
   133d0:	d9000117 	ldw	r4,4(sp)
   133d4:	882e927a 	slli	r23,r17,9
   133d8:	9022d5fa 	srli	r17,r18,23
   133dc:	e038d5fa 	srli	fp,fp,23
   133e0:	1104b03a 	or	r2,r2,r4
   133e4:	9024927a 	slli	r18,r18,9
   133e8:	1004c03a 	cmpne	r2,r2,zero
   133ec:	bc62b03a 	or	r17,r23,r17
   133f0:	1738b03a 	or	fp,r2,fp
   133f4:	8880402c 	andhi	r2,r17,256
   133f8:	e4a4b03a 	or	r18,fp,r18
   133fc:	10000726 	beq	r2,zero,1341c <__muldf3+0x628>
   13400:	9006d07a 	srli	r3,r18,1
   13404:	880497fa 	slli	r2,r17,31
   13408:	9480004c 	andi	r18,r18,1
   1340c:	8822d07a 	srli	r17,r17,1
   13410:	1ca4b03a 	or	r18,r3,r18
   13414:	14a4b03a 	or	r18,r2,r18
   13418:	4007883a 	mov	r3,r8
   1341c:	1880ffc4 	addi	r2,r3,1023
   13420:	0080460e 	bge	zero,r2,1353c <__muldf3+0x748>
   13424:	910001cc 	andi	r4,r18,7
   13428:	20000726 	beq	r4,zero,13448 <__muldf3+0x654>
   1342c:	910003cc 	andi	r4,r18,15
   13430:	01400104 	movi	r5,4
   13434:	21400426 	beq	r4,r5,13448 <__muldf3+0x654>
   13438:	9149883a 	add	r4,r18,r5
   1343c:	24a5803a 	cmpltu	r18,r4,r18
   13440:	8ca3883a 	add	r17,r17,r18
   13444:	2025883a 	mov	r18,r4
   13448:	8900402c 	andhi	r4,r17,256
   1344c:	20000426 	beq	r4,zero,13460 <__muldf3+0x66c>
   13450:	18810004 	addi	r2,r3,1024
   13454:	00ffc034 	movhi	r3,65280
   13458:	18ffffc4 	addi	r3,r3,-1
   1345c:	88e2703a 	and	r17,r17,r3
   13460:	00c1ff84 	movi	r3,2046
   13464:	18bf1316 	blt	r3,r2,130b4 <_gp+0xfffec70c>
   13468:	882c977a 	slli	r22,r17,29
   1346c:	9024d0fa 	srli	r18,r18,3
   13470:	8822927a 	slli	r17,r17,9
   13474:	1081ffcc 	andi	r2,r2,2047
   13478:	b4acb03a 	or	r22,r22,r18
   1347c:	8820d33a 	srli	r16,r17,12
   13480:	3027883a 	mov	r19,r6
   13484:	003eba06 	br	12f70 <_gp+0xfffec5c8>
   13488:	8080022c 	andhi	r2,r16,8
   1348c:	10000926 	beq	r2,zero,134b4 <__muldf3+0x6c0>
   13490:	8880022c 	andhi	r2,r17,8
   13494:	1000071e 	bne	r2,zero,134b4 <__muldf3+0x6c0>
   13498:	00800434 	movhi	r2,16
   1349c:	8c000234 	orhi	r16,r17,8
   134a0:	10bfffc4 	addi	r2,r2,-1
   134a4:	e027883a 	mov	r19,fp
   134a8:	80a0703a 	and	r16,r16,r2
   134ac:	902d883a 	mov	r22,r18
   134b0:	003f1706 	br	13110 <_gp+0xfffec768>
   134b4:	00800434 	movhi	r2,16
   134b8:	84000234 	orhi	r16,r16,8
   134bc:	10bfffc4 	addi	r2,r2,-1
   134c0:	80a0703a 	and	r16,r16,r2
   134c4:	003f1206 	br	13110 <_gp+0xfffec768>
   134c8:	147ff604 	addi	r17,r2,-40
   134cc:	3462983a 	sll	r17,r6,r17
   134d0:	0025883a 	mov	r18,zero
   134d4:	003ef306 	br	130a4 <_gp+0xfffec6fc>
   134d8:	3009883a 	mov	r4,r6
   134dc:	d9400215 	stw	r5,8(sp)
   134e0:	d9800715 	stw	r6,28(sp)
   134e4:	da400415 	stw	r9,16(sp)
   134e8:	da800315 	stw	r10,12(sp)
   134ec:	00140b80 	call	140b8 <__clzsi2>
   134f0:	10800804 	addi	r2,r2,32
   134f4:	da800317 	ldw	r10,12(sp)
   134f8:	da400417 	ldw	r9,16(sp)
   134fc:	d9800717 	ldw	r6,28(sp)
   13500:	d9400217 	ldw	r5,8(sp)
   13504:	003edd06 	br	1307c <_gp+0xfffec6d4>
   13508:	143ff604 	addi	r16,r2,-40
   1350c:	ac20983a 	sll	r16,r21,r16
   13510:	002d883a 	mov	r22,zero
   13514:	003ec106 	br	1301c <_gp+0xfffec674>
   13518:	d9800715 	stw	r6,28(sp)
   1351c:	d9c00215 	stw	r7,8(sp)
   13520:	da400415 	stw	r9,16(sp)
   13524:	00140b80 	call	140b8 <__clzsi2>
   13528:	10800804 	addi	r2,r2,32
   1352c:	da400417 	ldw	r9,16(sp)
   13530:	d9c00217 	ldw	r7,8(sp)
   13534:	d9800717 	ldw	r6,28(sp)
   13538:	003eae06 	br	12ff4 <_gp+0xfffec64c>
   1353c:	00c00044 	movi	r3,1
   13540:	1887c83a 	sub	r3,r3,r2
   13544:	01000e04 	movi	r4,56
   13548:	20fe8516 	blt	r4,r3,12f60 <_gp+0xfffec5b8>
   1354c:	010007c4 	movi	r4,31
   13550:	20c01b16 	blt	r4,r3,135c0 <__muldf3+0x7cc>
   13554:	00800804 	movi	r2,32
   13558:	10c5c83a 	sub	r2,r2,r3
   1355c:	888a983a 	sll	r5,r17,r2
   13560:	90c8d83a 	srl	r4,r18,r3
   13564:	9084983a 	sll	r2,r18,r2
   13568:	88e2d83a 	srl	r17,r17,r3
   1356c:	2906b03a 	or	r3,r5,r4
   13570:	1004c03a 	cmpne	r2,r2,zero
   13574:	1886b03a 	or	r3,r3,r2
   13578:	188001cc 	andi	r2,r3,7
   1357c:	10000726 	beq	r2,zero,1359c <__muldf3+0x7a8>
   13580:	188003cc 	andi	r2,r3,15
   13584:	01000104 	movi	r4,4
   13588:	11000426 	beq	r2,r4,1359c <__muldf3+0x7a8>
   1358c:	1805883a 	mov	r2,r3
   13590:	10c00104 	addi	r3,r2,4
   13594:	1885803a 	cmpltu	r2,r3,r2
   13598:	88a3883a 	add	r17,r17,r2
   1359c:	8880202c 	andhi	r2,r17,128
   135a0:	10001c26 	beq	r2,zero,13614 <__muldf3+0x820>
   135a4:	3027883a 	mov	r19,r6
   135a8:	00800044 	movi	r2,1
   135ac:	0021883a 	mov	r16,zero
   135b0:	002d883a 	mov	r22,zero
   135b4:	003e6e06 	br	12f70 <_gp+0xfffec5c8>
   135b8:	4007883a 	mov	r3,r8
   135bc:	003f9706 	br	1341c <_gp+0xfffeca74>
   135c0:	017ff844 	movi	r5,-31
   135c4:	2885c83a 	sub	r2,r5,r2
   135c8:	888ad83a 	srl	r5,r17,r2
   135cc:	00800804 	movi	r2,32
   135d0:	18801a26 	beq	r3,r2,1363c <__muldf3+0x848>
   135d4:	01001004 	movi	r4,64
   135d8:	20c7c83a 	sub	r3,r4,r3
   135dc:	88e2983a 	sll	r17,r17,r3
   135e0:	8ca4b03a 	or	r18,r17,r18
   135e4:	9004c03a 	cmpne	r2,r18,zero
   135e8:	2884b03a 	or	r2,r5,r2
   135ec:	144001cc 	andi	r17,r2,7
   135f0:	88000d1e 	bne	r17,zero,13628 <__muldf3+0x834>
   135f4:	0021883a 	mov	r16,zero
   135f8:	102cd0fa 	srli	r22,r2,3
   135fc:	3027883a 	mov	r19,r6
   13600:	0005883a 	mov	r2,zero
   13604:	b46cb03a 	or	r22,r22,r17
   13608:	003e5906 	br	12f70 <_gp+0xfffec5c8>
   1360c:	1007883a 	mov	r3,r2
   13610:	0023883a 	mov	r17,zero
   13614:	8820927a 	slli	r16,r17,9
   13618:	1805883a 	mov	r2,r3
   1361c:	8822977a 	slli	r17,r17,29
   13620:	8020d33a 	srli	r16,r16,12
   13624:	003ff406 	br	135f8 <_gp+0xfffecc50>
   13628:	10c003cc 	andi	r3,r2,15
   1362c:	01000104 	movi	r4,4
   13630:	193ff626 	beq	r3,r4,1360c <_gp+0xfffecc64>
   13634:	0023883a 	mov	r17,zero
   13638:	003fd506 	br	13590 <_gp+0xfffecbe8>
   1363c:	0023883a 	mov	r17,zero
   13640:	003fe706 	br	135e0 <_gp+0xfffecc38>
   13644:	00800434 	movhi	r2,16
   13648:	8c000234 	orhi	r16,r17,8
   1364c:	10bfffc4 	addi	r2,r2,-1
   13650:	3027883a 	mov	r19,r6
   13654:	80a0703a 	and	r16,r16,r2
   13658:	902d883a 	mov	r22,r18
   1365c:	003eac06 	br	13110 <_gp+0xfffec768>

00013660 <__subdf3>:
   13660:	02000434 	movhi	r8,16
   13664:	423fffc4 	addi	r8,r8,-1
   13668:	defffb04 	addi	sp,sp,-20
   1366c:	2a14703a 	and	r10,r5,r8
   13670:	3812d53a 	srli	r9,r7,20
   13674:	3a10703a 	and	r8,r7,r8
   13678:	2006d77a 	srli	r3,r4,29
   1367c:	3004d77a 	srli	r2,r6,29
   13680:	dc000015 	stw	r16,0(sp)
   13684:	501490fa 	slli	r10,r10,3
   13688:	2820d53a 	srli	r16,r5,20
   1368c:	401090fa 	slli	r8,r8,3
   13690:	dc800215 	stw	r18,8(sp)
   13694:	dc400115 	stw	r17,4(sp)
   13698:	dfc00415 	stw	ra,16(sp)
   1369c:	202290fa 	slli	r17,r4,3
   136a0:	dcc00315 	stw	r19,12(sp)
   136a4:	4a41ffcc 	andi	r9,r9,2047
   136a8:	0101ffc4 	movi	r4,2047
   136ac:	2824d7fa 	srli	r18,r5,31
   136b0:	8401ffcc 	andi	r16,r16,2047
   136b4:	50c6b03a 	or	r3,r10,r3
   136b8:	380ed7fa 	srli	r7,r7,31
   136bc:	408ab03a 	or	r5,r8,r2
   136c0:	300c90fa 	slli	r6,r6,3
   136c4:	49009626 	beq	r9,r4,13920 <__subdf3+0x2c0>
   136c8:	39c0005c 	xori	r7,r7,1
   136cc:	8245c83a 	sub	r2,r16,r9
   136d0:	3c807426 	beq	r7,r18,138a4 <__subdf3+0x244>
   136d4:	0080af0e 	bge	zero,r2,13994 <__subdf3+0x334>
   136d8:	48002a1e 	bne	r9,zero,13784 <__subdf3+0x124>
   136dc:	2988b03a 	or	r4,r5,r6
   136e0:	20009a1e 	bne	r4,zero,1394c <__subdf3+0x2ec>
   136e4:	888001cc 	andi	r2,r17,7
   136e8:	10000726 	beq	r2,zero,13708 <__subdf3+0xa8>
   136ec:	888003cc 	andi	r2,r17,15
   136f0:	01000104 	movi	r4,4
   136f4:	11000426 	beq	r2,r4,13708 <__subdf3+0xa8>
   136f8:	890b883a 	add	r5,r17,r4
   136fc:	2c63803a 	cmpltu	r17,r5,r17
   13700:	1c47883a 	add	r3,r3,r17
   13704:	2823883a 	mov	r17,r5
   13708:	1880202c 	andhi	r2,r3,128
   1370c:	10005926 	beq	r2,zero,13874 <__subdf3+0x214>
   13710:	84000044 	addi	r16,r16,1
   13714:	0081ffc4 	movi	r2,2047
   13718:	8080be26 	beq	r16,r2,13a14 <__subdf3+0x3b4>
   1371c:	017fe034 	movhi	r5,65408
   13720:	297fffc4 	addi	r5,r5,-1
   13724:	1946703a 	and	r3,r3,r5
   13728:	1804977a 	slli	r2,r3,29
   1372c:	1806927a 	slli	r3,r3,9
   13730:	8822d0fa 	srli	r17,r17,3
   13734:	8401ffcc 	andi	r16,r16,2047
   13738:	180ad33a 	srli	r5,r3,12
   1373c:	9100004c 	andi	r4,r18,1
   13740:	1444b03a 	or	r2,r2,r17
   13744:	80c1ffcc 	andi	r3,r16,2047
   13748:	1820953a 	slli	r16,r3,20
   1374c:	20c03fcc 	andi	r3,r4,255
   13750:	180897fa 	slli	r4,r3,31
   13754:	00c00434 	movhi	r3,16
   13758:	18ffffc4 	addi	r3,r3,-1
   1375c:	28c6703a 	and	r3,r5,r3
   13760:	1c06b03a 	or	r3,r3,r16
   13764:	1906b03a 	or	r3,r3,r4
   13768:	dfc00417 	ldw	ra,16(sp)
   1376c:	dcc00317 	ldw	r19,12(sp)
   13770:	dc800217 	ldw	r18,8(sp)
   13774:	dc400117 	ldw	r17,4(sp)
   13778:	dc000017 	ldw	r16,0(sp)
   1377c:	dec00504 	addi	sp,sp,20
   13780:	f800283a 	ret
   13784:	0101ffc4 	movi	r4,2047
   13788:	813fd626 	beq	r16,r4,136e4 <_gp+0xfffecd3c>
   1378c:	29402034 	orhi	r5,r5,128
   13790:	01000e04 	movi	r4,56
   13794:	2080a316 	blt	r4,r2,13a24 <__subdf3+0x3c4>
   13798:	010007c4 	movi	r4,31
   1379c:	2080c616 	blt	r4,r2,13ab8 <__subdf3+0x458>
   137a0:	01000804 	movi	r4,32
   137a4:	2089c83a 	sub	r4,r4,r2
   137a8:	2910983a 	sll	r8,r5,r4
   137ac:	308ed83a 	srl	r7,r6,r2
   137b0:	3108983a 	sll	r4,r6,r4
   137b4:	2884d83a 	srl	r2,r5,r2
   137b8:	41ccb03a 	or	r6,r8,r7
   137bc:	2008c03a 	cmpne	r4,r4,zero
   137c0:	310cb03a 	or	r6,r6,r4
   137c4:	898dc83a 	sub	r6,r17,r6
   137c8:	89a3803a 	cmpltu	r17,r17,r6
   137cc:	1887c83a 	sub	r3,r3,r2
   137d0:	1c47c83a 	sub	r3,r3,r17
   137d4:	3023883a 	mov	r17,r6
   137d8:	1880202c 	andhi	r2,r3,128
   137dc:	10002326 	beq	r2,zero,1386c <__subdf3+0x20c>
   137e0:	04c02034 	movhi	r19,128
   137e4:	9cffffc4 	addi	r19,r19,-1
   137e8:	1ce6703a 	and	r19,r3,r19
   137ec:	98007a26 	beq	r19,zero,139d8 <__subdf3+0x378>
   137f0:	9809883a 	mov	r4,r19
   137f4:	00140b80 	call	140b8 <__clzsi2>
   137f8:	113ffe04 	addi	r4,r2,-8
   137fc:	00c007c4 	movi	r3,31
   13800:	19007b16 	blt	r3,r4,139f0 <__subdf3+0x390>
   13804:	00800804 	movi	r2,32
   13808:	1105c83a 	sub	r2,r2,r4
   1380c:	8884d83a 	srl	r2,r17,r2
   13810:	9906983a 	sll	r3,r19,r4
   13814:	8922983a 	sll	r17,r17,r4
   13818:	10c4b03a 	or	r2,r2,r3
   1381c:	24007816 	blt	r4,r16,13a00 <__subdf3+0x3a0>
   13820:	2421c83a 	sub	r16,r4,r16
   13824:	80c00044 	addi	r3,r16,1
   13828:	010007c4 	movi	r4,31
   1382c:	20c09516 	blt	r4,r3,13a84 <__subdf3+0x424>
   13830:	01400804 	movi	r5,32
   13834:	28cbc83a 	sub	r5,r5,r3
   13838:	88c8d83a 	srl	r4,r17,r3
   1383c:	8962983a 	sll	r17,r17,r5
   13840:	114a983a 	sll	r5,r2,r5
   13844:	10c6d83a 	srl	r3,r2,r3
   13848:	8804c03a 	cmpne	r2,r17,zero
   1384c:	290ab03a 	or	r5,r5,r4
   13850:	28a2b03a 	or	r17,r5,r2
   13854:	0021883a 	mov	r16,zero
   13858:	003fa206 	br	136e4 <_gp+0xfffecd3c>
   1385c:	2090b03a 	or	r8,r4,r2
   13860:	40018e26 	beq	r8,zero,13e9c <__subdf3+0x83c>
   13864:	1007883a 	mov	r3,r2
   13868:	2023883a 	mov	r17,r4
   1386c:	888001cc 	andi	r2,r17,7
   13870:	103f9e1e 	bne	r2,zero,136ec <_gp+0xfffecd44>
   13874:	1804977a 	slli	r2,r3,29
   13878:	8822d0fa 	srli	r17,r17,3
   1387c:	1810d0fa 	srli	r8,r3,3
   13880:	9100004c 	andi	r4,r18,1
   13884:	1444b03a 	or	r2,r2,r17
   13888:	00c1ffc4 	movi	r3,2047
   1388c:	80c02826 	beq	r16,r3,13930 <__subdf3+0x2d0>
   13890:	01400434 	movhi	r5,16
   13894:	297fffc4 	addi	r5,r5,-1
   13898:	80e0703a 	and	r16,r16,r3
   1389c:	414a703a 	and	r5,r8,r5
   138a0:	003fa806 	br	13744 <_gp+0xfffecd9c>
   138a4:	0080630e 	bge	zero,r2,13a34 <__subdf3+0x3d4>
   138a8:	48003026 	beq	r9,zero,1396c <__subdf3+0x30c>
   138ac:	0101ffc4 	movi	r4,2047
   138b0:	813f8c26 	beq	r16,r4,136e4 <_gp+0xfffecd3c>
   138b4:	29402034 	orhi	r5,r5,128
   138b8:	01000e04 	movi	r4,56
   138bc:	2080a90e 	bge	r4,r2,13b64 <__subdf3+0x504>
   138c0:	298cb03a 	or	r6,r5,r6
   138c4:	3012c03a 	cmpne	r9,r6,zero
   138c8:	0005883a 	mov	r2,zero
   138cc:	4c53883a 	add	r9,r9,r17
   138d0:	4c63803a 	cmpltu	r17,r9,r17
   138d4:	10c7883a 	add	r3,r2,r3
   138d8:	88c7883a 	add	r3,r17,r3
   138dc:	4823883a 	mov	r17,r9
   138e0:	1880202c 	andhi	r2,r3,128
   138e4:	1000d026 	beq	r2,zero,13c28 <__subdf3+0x5c8>
   138e8:	84000044 	addi	r16,r16,1
   138ec:	0081ffc4 	movi	r2,2047
   138f0:	8080fe26 	beq	r16,r2,13cec <__subdf3+0x68c>
   138f4:	00bfe034 	movhi	r2,65408
   138f8:	10bfffc4 	addi	r2,r2,-1
   138fc:	1886703a 	and	r3,r3,r2
   13900:	880ad07a 	srli	r5,r17,1
   13904:	180497fa 	slli	r2,r3,31
   13908:	8900004c 	andi	r4,r17,1
   1390c:	2922b03a 	or	r17,r5,r4
   13910:	1806d07a 	srli	r3,r3,1
   13914:	1462b03a 	or	r17,r2,r17
   13918:	3825883a 	mov	r18,r7
   1391c:	003f7106 	br	136e4 <_gp+0xfffecd3c>
   13920:	2984b03a 	or	r2,r5,r6
   13924:	103f6826 	beq	r2,zero,136c8 <_gp+0xfffecd20>
   13928:	39c03fcc 	andi	r7,r7,255
   1392c:	003f6706 	br	136cc <_gp+0xfffecd24>
   13930:	4086b03a 	or	r3,r8,r2
   13934:	18015226 	beq	r3,zero,13e80 <__subdf3+0x820>
   13938:	00c00434 	movhi	r3,16
   1393c:	41400234 	orhi	r5,r8,8
   13940:	18ffffc4 	addi	r3,r3,-1
   13944:	28ca703a 	and	r5,r5,r3
   13948:	003f7e06 	br	13744 <_gp+0xfffecd9c>
   1394c:	10bfffc4 	addi	r2,r2,-1
   13950:	1000491e 	bne	r2,zero,13a78 <__subdf3+0x418>
   13954:	898fc83a 	sub	r7,r17,r6
   13958:	89e3803a 	cmpltu	r17,r17,r7
   1395c:	1947c83a 	sub	r3,r3,r5
   13960:	1c47c83a 	sub	r3,r3,r17
   13964:	3823883a 	mov	r17,r7
   13968:	003f9b06 	br	137d8 <_gp+0xfffece30>
   1396c:	2988b03a 	or	r4,r5,r6
   13970:	203f5c26 	beq	r4,zero,136e4 <_gp+0xfffecd3c>
   13974:	10bfffc4 	addi	r2,r2,-1
   13978:	1000931e 	bne	r2,zero,13bc8 <__subdf3+0x568>
   1397c:	898d883a 	add	r6,r17,r6
   13980:	3463803a 	cmpltu	r17,r6,r17
   13984:	1947883a 	add	r3,r3,r5
   13988:	88c7883a 	add	r3,r17,r3
   1398c:	3023883a 	mov	r17,r6
   13990:	003fd306 	br	138e0 <_gp+0xfffecf38>
   13994:	1000541e 	bne	r2,zero,13ae8 <__subdf3+0x488>
   13998:	80800044 	addi	r2,r16,1
   1399c:	1081ffcc 	andi	r2,r2,2047
   139a0:	01000044 	movi	r4,1
   139a4:	2080a20e 	bge	r4,r2,13c30 <__subdf3+0x5d0>
   139a8:	8989c83a 	sub	r4,r17,r6
   139ac:	8905803a 	cmpltu	r2,r17,r4
   139b0:	1967c83a 	sub	r19,r3,r5
   139b4:	98a7c83a 	sub	r19,r19,r2
   139b8:	9880202c 	andhi	r2,r19,128
   139bc:	10006326 	beq	r2,zero,13b4c <__subdf3+0x4ec>
   139c0:	3463c83a 	sub	r17,r6,r17
   139c4:	28c7c83a 	sub	r3,r5,r3
   139c8:	344d803a 	cmpltu	r6,r6,r17
   139cc:	19a7c83a 	sub	r19,r3,r6
   139d0:	3825883a 	mov	r18,r7
   139d4:	983f861e 	bne	r19,zero,137f0 <_gp+0xfffece48>
   139d8:	8809883a 	mov	r4,r17
   139dc:	00140b80 	call	140b8 <__clzsi2>
   139e0:	10800804 	addi	r2,r2,32
   139e4:	113ffe04 	addi	r4,r2,-8
   139e8:	00c007c4 	movi	r3,31
   139ec:	193f850e 	bge	r3,r4,13804 <_gp+0xfffece5c>
   139f0:	10bff604 	addi	r2,r2,-40
   139f4:	8884983a 	sll	r2,r17,r2
   139f8:	0023883a 	mov	r17,zero
   139fc:	243f880e 	bge	r4,r16,13820 <_gp+0xfffece78>
   13a00:	00ffe034 	movhi	r3,65408
   13a04:	18ffffc4 	addi	r3,r3,-1
   13a08:	8121c83a 	sub	r16,r16,r4
   13a0c:	10c6703a 	and	r3,r2,r3
   13a10:	003f3406 	br	136e4 <_gp+0xfffecd3c>
   13a14:	9100004c 	andi	r4,r18,1
   13a18:	000b883a 	mov	r5,zero
   13a1c:	0005883a 	mov	r2,zero
   13a20:	003f4806 	br	13744 <_gp+0xfffecd9c>
   13a24:	298cb03a 	or	r6,r5,r6
   13a28:	300cc03a 	cmpne	r6,r6,zero
   13a2c:	0005883a 	mov	r2,zero
   13a30:	003f6406 	br	137c4 <_gp+0xfffece1c>
   13a34:	10009a1e 	bne	r2,zero,13ca0 <__subdf3+0x640>
   13a38:	82400044 	addi	r9,r16,1
   13a3c:	4881ffcc 	andi	r2,r9,2047
   13a40:	02800044 	movi	r10,1
   13a44:	5080670e 	bge	r10,r2,13be4 <__subdf3+0x584>
   13a48:	0081ffc4 	movi	r2,2047
   13a4c:	4880af26 	beq	r9,r2,13d0c <__subdf3+0x6ac>
   13a50:	898d883a 	add	r6,r17,r6
   13a54:	1945883a 	add	r2,r3,r5
   13a58:	3447803a 	cmpltu	r3,r6,r17
   13a5c:	1887883a 	add	r3,r3,r2
   13a60:	182297fa 	slli	r17,r3,31
   13a64:	300cd07a 	srli	r6,r6,1
   13a68:	1806d07a 	srli	r3,r3,1
   13a6c:	4821883a 	mov	r16,r9
   13a70:	89a2b03a 	or	r17,r17,r6
   13a74:	003f1b06 	br	136e4 <_gp+0xfffecd3c>
   13a78:	0101ffc4 	movi	r4,2047
   13a7c:	813f441e 	bne	r16,r4,13790 <_gp+0xfffecde8>
   13a80:	003f1806 	br	136e4 <_gp+0xfffecd3c>
   13a84:	843ff844 	addi	r16,r16,-31
   13a88:	01400804 	movi	r5,32
   13a8c:	1408d83a 	srl	r4,r2,r16
   13a90:	19405026 	beq	r3,r5,13bd4 <__subdf3+0x574>
   13a94:	01401004 	movi	r5,64
   13a98:	28c7c83a 	sub	r3,r5,r3
   13a9c:	10c4983a 	sll	r2,r2,r3
   13aa0:	88a2b03a 	or	r17,r17,r2
   13aa4:	8822c03a 	cmpne	r17,r17,zero
   13aa8:	2462b03a 	or	r17,r4,r17
   13aac:	0007883a 	mov	r3,zero
   13ab0:	0021883a 	mov	r16,zero
   13ab4:	003f6d06 	br	1386c <_gp+0xfffecec4>
   13ab8:	11fff804 	addi	r7,r2,-32
   13abc:	01000804 	movi	r4,32
   13ac0:	29ced83a 	srl	r7,r5,r7
   13ac4:	11004526 	beq	r2,r4,13bdc <__subdf3+0x57c>
   13ac8:	01001004 	movi	r4,64
   13acc:	2089c83a 	sub	r4,r4,r2
   13ad0:	2904983a 	sll	r2,r5,r4
   13ad4:	118cb03a 	or	r6,r2,r6
   13ad8:	300cc03a 	cmpne	r6,r6,zero
   13adc:	398cb03a 	or	r6,r7,r6
   13ae0:	0005883a 	mov	r2,zero
   13ae4:	003f3706 	br	137c4 <_gp+0xfffece1c>
   13ae8:	80002a26 	beq	r16,zero,13b94 <__subdf3+0x534>
   13aec:	0101ffc4 	movi	r4,2047
   13af0:	49006626 	beq	r9,r4,13c8c <__subdf3+0x62c>
   13af4:	0085c83a 	sub	r2,zero,r2
   13af8:	18c02034 	orhi	r3,r3,128
   13afc:	01000e04 	movi	r4,56
   13b00:	20807e16 	blt	r4,r2,13cfc <__subdf3+0x69c>
   13b04:	010007c4 	movi	r4,31
   13b08:	2080e716 	blt	r4,r2,13ea8 <__subdf3+0x848>
   13b0c:	01000804 	movi	r4,32
   13b10:	2089c83a 	sub	r4,r4,r2
   13b14:	1914983a 	sll	r10,r3,r4
   13b18:	8890d83a 	srl	r8,r17,r2
   13b1c:	8908983a 	sll	r4,r17,r4
   13b20:	1884d83a 	srl	r2,r3,r2
   13b24:	5222b03a 	or	r17,r10,r8
   13b28:	2006c03a 	cmpne	r3,r4,zero
   13b2c:	88e2b03a 	or	r17,r17,r3
   13b30:	3463c83a 	sub	r17,r6,r17
   13b34:	2885c83a 	sub	r2,r5,r2
   13b38:	344d803a 	cmpltu	r6,r6,r17
   13b3c:	1187c83a 	sub	r3,r2,r6
   13b40:	4821883a 	mov	r16,r9
   13b44:	3825883a 	mov	r18,r7
   13b48:	003f2306 	br	137d8 <_gp+0xfffece30>
   13b4c:	24d0b03a 	or	r8,r4,r19
   13b50:	40001b1e 	bne	r8,zero,13bc0 <__subdf3+0x560>
   13b54:	0005883a 	mov	r2,zero
   13b58:	0009883a 	mov	r4,zero
   13b5c:	0021883a 	mov	r16,zero
   13b60:	003f4906 	br	13888 <_gp+0xfffecee0>
   13b64:	010007c4 	movi	r4,31
   13b68:	20803a16 	blt	r4,r2,13c54 <__subdf3+0x5f4>
   13b6c:	01000804 	movi	r4,32
   13b70:	2089c83a 	sub	r4,r4,r2
   13b74:	2912983a 	sll	r9,r5,r4
   13b78:	3090d83a 	srl	r8,r6,r2
   13b7c:	3108983a 	sll	r4,r6,r4
   13b80:	2884d83a 	srl	r2,r5,r2
   13b84:	4a12b03a 	or	r9,r9,r8
   13b88:	2008c03a 	cmpne	r4,r4,zero
   13b8c:	4912b03a 	or	r9,r9,r4
   13b90:	003f4e06 	br	138cc <_gp+0xfffecf24>
   13b94:	1c48b03a 	or	r4,r3,r17
   13b98:	20003c26 	beq	r4,zero,13c8c <__subdf3+0x62c>
   13b9c:	0084303a 	nor	r2,zero,r2
   13ba0:	1000381e 	bne	r2,zero,13c84 <__subdf3+0x624>
   13ba4:	3463c83a 	sub	r17,r6,r17
   13ba8:	28c5c83a 	sub	r2,r5,r3
   13bac:	344d803a 	cmpltu	r6,r6,r17
   13bb0:	1187c83a 	sub	r3,r2,r6
   13bb4:	4821883a 	mov	r16,r9
   13bb8:	3825883a 	mov	r18,r7
   13bbc:	003f0606 	br	137d8 <_gp+0xfffece30>
   13bc0:	2023883a 	mov	r17,r4
   13bc4:	003f0906 	br	137ec <_gp+0xfffece44>
   13bc8:	0101ffc4 	movi	r4,2047
   13bcc:	813f3a1e 	bne	r16,r4,138b8 <_gp+0xfffecf10>
   13bd0:	003ec406 	br	136e4 <_gp+0xfffecd3c>
   13bd4:	0005883a 	mov	r2,zero
   13bd8:	003fb106 	br	13aa0 <_gp+0xfffed0f8>
   13bdc:	0005883a 	mov	r2,zero
   13be0:	003fbc06 	br	13ad4 <_gp+0xfffed12c>
   13be4:	1c44b03a 	or	r2,r3,r17
   13be8:	80008e1e 	bne	r16,zero,13e24 <__subdf3+0x7c4>
   13bec:	1000c826 	beq	r2,zero,13f10 <__subdf3+0x8b0>
   13bf0:	2984b03a 	or	r2,r5,r6
   13bf4:	103ebb26 	beq	r2,zero,136e4 <_gp+0xfffecd3c>
   13bf8:	8989883a 	add	r4,r17,r6
   13bfc:	1945883a 	add	r2,r3,r5
   13c00:	2447803a 	cmpltu	r3,r4,r17
   13c04:	1887883a 	add	r3,r3,r2
   13c08:	1880202c 	andhi	r2,r3,128
   13c0c:	2023883a 	mov	r17,r4
   13c10:	103f1626 	beq	r2,zero,1386c <_gp+0xfffecec4>
   13c14:	00bfe034 	movhi	r2,65408
   13c18:	10bfffc4 	addi	r2,r2,-1
   13c1c:	5021883a 	mov	r16,r10
   13c20:	1886703a 	and	r3,r3,r2
   13c24:	003eaf06 	br	136e4 <_gp+0xfffecd3c>
   13c28:	3825883a 	mov	r18,r7
   13c2c:	003f0f06 	br	1386c <_gp+0xfffecec4>
   13c30:	1c44b03a 	or	r2,r3,r17
   13c34:	8000251e 	bne	r16,zero,13ccc <__subdf3+0x66c>
   13c38:	1000661e 	bne	r2,zero,13dd4 <__subdf3+0x774>
   13c3c:	2990b03a 	or	r8,r5,r6
   13c40:	40009626 	beq	r8,zero,13e9c <__subdf3+0x83c>
   13c44:	2807883a 	mov	r3,r5
   13c48:	3023883a 	mov	r17,r6
   13c4c:	3825883a 	mov	r18,r7
   13c50:	003ea406 	br	136e4 <_gp+0xfffecd3c>
   13c54:	127ff804 	addi	r9,r2,-32
   13c58:	01000804 	movi	r4,32
   13c5c:	2a52d83a 	srl	r9,r5,r9
   13c60:	11008c26 	beq	r2,r4,13e94 <__subdf3+0x834>
   13c64:	01001004 	movi	r4,64
   13c68:	2085c83a 	sub	r2,r4,r2
   13c6c:	2884983a 	sll	r2,r5,r2
   13c70:	118cb03a 	or	r6,r2,r6
   13c74:	300cc03a 	cmpne	r6,r6,zero
   13c78:	4992b03a 	or	r9,r9,r6
   13c7c:	0005883a 	mov	r2,zero
   13c80:	003f1206 	br	138cc <_gp+0xfffecf24>
   13c84:	0101ffc4 	movi	r4,2047
   13c88:	493f9c1e 	bne	r9,r4,13afc <_gp+0xfffed154>
   13c8c:	2807883a 	mov	r3,r5
   13c90:	3023883a 	mov	r17,r6
   13c94:	4821883a 	mov	r16,r9
   13c98:	3825883a 	mov	r18,r7
   13c9c:	003e9106 	br	136e4 <_gp+0xfffecd3c>
   13ca0:	80001f1e 	bne	r16,zero,13d20 <__subdf3+0x6c0>
   13ca4:	1c48b03a 	or	r4,r3,r17
   13ca8:	20005a26 	beq	r4,zero,13e14 <__subdf3+0x7b4>
   13cac:	0084303a 	nor	r2,zero,r2
   13cb0:	1000561e 	bne	r2,zero,13e0c <__subdf3+0x7ac>
   13cb4:	89a3883a 	add	r17,r17,r6
   13cb8:	1945883a 	add	r2,r3,r5
   13cbc:	898d803a 	cmpltu	r6,r17,r6
   13cc0:	3087883a 	add	r3,r6,r2
   13cc4:	4821883a 	mov	r16,r9
   13cc8:	003f0506 	br	138e0 <_gp+0xfffecf38>
   13ccc:	10002b1e 	bne	r2,zero,13d7c <__subdf3+0x71c>
   13cd0:	2984b03a 	or	r2,r5,r6
   13cd4:	10008026 	beq	r2,zero,13ed8 <__subdf3+0x878>
   13cd8:	2807883a 	mov	r3,r5
   13cdc:	3023883a 	mov	r17,r6
   13ce0:	3825883a 	mov	r18,r7
   13ce4:	0401ffc4 	movi	r16,2047
   13ce8:	003e7e06 	br	136e4 <_gp+0xfffecd3c>
   13cec:	3809883a 	mov	r4,r7
   13cf0:	0011883a 	mov	r8,zero
   13cf4:	0005883a 	mov	r2,zero
   13cf8:	003ee306 	br	13888 <_gp+0xfffecee0>
   13cfc:	1c62b03a 	or	r17,r3,r17
   13d00:	8822c03a 	cmpne	r17,r17,zero
   13d04:	0005883a 	mov	r2,zero
   13d08:	003f8906 	br	13b30 <_gp+0xfffed188>
   13d0c:	3809883a 	mov	r4,r7
   13d10:	4821883a 	mov	r16,r9
   13d14:	0011883a 	mov	r8,zero
   13d18:	0005883a 	mov	r2,zero
   13d1c:	003eda06 	br	13888 <_gp+0xfffecee0>
   13d20:	0101ffc4 	movi	r4,2047
   13d24:	49003b26 	beq	r9,r4,13e14 <__subdf3+0x7b4>
   13d28:	0085c83a 	sub	r2,zero,r2
   13d2c:	18c02034 	orhi	r3,r3,128
   13d30:	01000e04 	movi	r4,56
   13d34:	20806e16 	blt	r4,r2,13ef0 <__subdf3+0x890>
   13d38:	010007c4 	movi	r4,31
   13d3c:	20807716 	blt	r4,r2,13f1c <__subdf3+0x8bc>
   13d40:	01000804 	movi	r4,32
   13d44:	2089c83a 	sub	r4,r4,r2
   13d48:	1914983a 	sll	r10,r3,r4
   13d4c:	8890d83a 	srl	r8,r17,r2
   13d50:	8908983a 	sll	r4,r17,r4
   13d54:	1884d83a 	srl	r2,r3,r2
   13d58:	5222b03a 	or	r17,r10,r8
   13d5c:	2006c03a 	cmpne	r3,r4,zero
   13d60:	88e2b03a 	or	r17,r17,r3
   13d64:	89a3883a 	add	r17,r17,r6
   13d68:	1145883a 	add	r2,r2,r5
   13d6c:	898d803a 	cmpltu	r6,r17,r6
   13d70:	3087883a 	add	r3,r6,r2
   13d74:	4821883a 	mov	r16,r9
   13d78:	003ed906 	br	138e0 <_gp+0xfffecf38>
   13d7c:	2984b03a 	or	r2,r5,r6
   13d80:	10004226 	beq	r2,zero,13e8c <__subdf3+0x82c>
   13d84:	1808d0fa 	srli	r4,r3,3
   13d88:	8822d0fa 	srli	r17,r17,3
   13d8c:	1806977a 	slli	r3,r3,29
   13d90:	2080022c 	andhi	r2,r4,8
   13d94:	1c62b03a 	or	r17,r3,r17
   13d98:	10000826 	beq	r2,zero,13dbc <__subdf3+0x75c>
   13d9c:	2812d0fa 	srli	r9,r5,3
   13da0:	4880022c 	andhi	r2,r9,8
   13da4:	1000051e 	bne	r2,zero,13dbc <__subdf3+0x75c>
   13da8:	300cd0fa 	srli	r6,r6,3
   13dac:	2804977a 	slli	r2,r5,29
   13db0:	4809883a 	mov	r4,r9
   13db4:	3825883a 	mov	r18,r7
   13db8:	11a2b03a 	or	r17,r2,r6
   13dbc:	8806d77a 	srli	r3,r17,29
   13dc0:	200890fa 	slli	r4,r4,3
   13dc4:	882290fa 	slli	r17,r17,3
   13dc8:	0401ffc4 	movi	r16,2047
   13dcc:	1906b03a 	or	r3,r3,r4
   13dd0:	003e4406 	br	136e4 <_gp+0xfffecd3c>
   13dd4:	2984b03a 	or	r2,r5,r6
   13dd8:	103e4226 	beq	r2,zero,136e4 <_gp+0xfffecd3c>
   13ddc:	8989c83a 	sub	r4,r17,r6
   13de0:	8911803a 	cmpltu	r8,r17,r4
   13de4:	1945c83a 	sub	r2,r3,r5
   13de8:	1205c83a 	sub	r2,r2,r8
   13dec:	1200202c 	andhi	r8,r2,128
   13df0:	403e9a26 	beq	r8,zero,1385c <_gp+0xfffeceb4>
   13df4:	3463c83a 	sub	r17,r6,r17
   13df8:	28c5c83a 	sub	r2,r5,r3
   13dfc:	344d803a 	cmpltu	r6,r6,r17
   13e00:	1187c83a 	sub	r3,r2,r6
   13e04:	3825883a 	mov	r18,r7
   13e08:	003e3606 	br	136e4 <_gp+0xfffecd3c>
   13e0c:	0101ffc4 	movi	r4,2047
   13e10:	493fc71e 	bne	r9,r4,13d30 <_gp+0xfffed388>
   13e14:	2807883a 	mov	r3,r5
   13e18:	3023883a 	mov	r17,r6
   13e1c:	4821883a 	mov	r16,r9
   13e20:	003e3006 	br	136e4 <_gp+0xfffecd3c>
   13e24:	10003626 	beq	r2,zero,13f00 <__subdf3+0x8a0>
   13e28:	2984b03a 	or	r2,r5,r6
   13e2c:	10001726 	beq	r2,zero,13e8c <__subdf3+0x82c>
   13e30:	1808d0fa 	srli	r4,r3,3
   13e34:	8822d0fa 	srli	r17,r17,3
   13e38:	1806977a 	slli	r3,r3,29
   13e3c:	2080022c 	andhi	r2,r4,8
   13e40:	1c62b03a 	or	r17,r3,r17
   13e44:	10000726 	beq	r2,zero,13e64 <__subdf3+0x804>
   13e48:	2812d0fa 	srli	r9,r5,3
   13e4c:	4880022c 	andhi	r2,r9,8
   13e50:	1000041e 	bne	r2,zero,13e64 <__subdf3+0x804>
   13e54:	300cd0fa 	srli	r6,r6,3
   13e58:	2804977a 	slli	r2,r5,29
   13e5c:	4809883a 	mov	r4,r9
   13e60:	11a2b03a 	or	r17,r2,r6
   13e64:	8806d77a 	srli	r3,r17,29
   13e68:	200890fa 	slli	r4,r4,3
   13e6c:	882290fa 	slli	r17,r17,3
   13e70:	3825883a 	mov	r18,r7
   13e74:	1906b03a 	or	r3,r3,r4
   13e78:	0401ffc4 	movi	r16,2047
   13e7c:	003e1906 	br	136e4 <_gp+0xfffecd3c>
   13e80:	000b883a 	mov	r5,zero
   13e84:	0005883a 	mov	r2,zero
   13e88:	003e2e06 	br	13744 <_gp+0xfffecd9c>
   13e8c:	0401ffc4 	movi	r16,2047
   13e90:	003e1406 	br	136e4 <_gp+0xfffecd3c>
   13e94:	0005883a 	mov	r2,zero
   13e98:	003f7506 	br	13c70 <_gp+0xfffed2c8>
   13e9c:	0005883a 	mov	r2,zero
   13ea0:	0009883a 	mov	r4,zero
   13ea4:	003e7806 	br	13888 <_gp+0xfffecee0>
   13ea8:	123ff804 	addi	r8,r2,-32
   13eac:	01000804 	movi	r4,32
   13eb0:	1a10d83a 	srl	r8,r3,r8
   13eb4:	11002526 	beq	r2,r4,13f4c <__subdf3+0x8ec>
   13eb8:	01001004 	movi	r4,64
   13ebc:	2085c83a 	sub	r2,r4,r2
   13ec0:	1884983a 	sll	r2,r3,r2
   13ec4:	1444b03a 	or	r2,r2,r17
   13ec8:	1004c03a 	cmpne	r2,r2,zero
   13ecc:	40a2b03a 	or	r17,r8,r2
   13ed0:	0005883a 	mov	r2,zero
   13ed4:	003f1606 	br	13b30 <_gp+0xfffed188>
   13ed8:	02000434 	movhi	r8,16
   13edc:	0009883a 	mov	r4,zero
   13ee0:	423fffc4 	addi	r8,r8,-1
   13ee4:	00bfffc4 	movi	r2,-1
   13ee8:	0401ffc4 	movi	r16,2047
   13eec:	003e6606 	br	13888 <_gp+0xfffecee0>
   13ef0:	1c62b03a 	or	r17,r3,r17
   13ef4:	8822c03a 	cmpne	r17,r17,zero
   13ef8:	0005883a 	mov	r2,zero
   13efc:	003f9906 	br	13d64 <_gp+0xfffed3bc>
   13f00:	2807883a 	mov	r3,r5
   13f04:	3023883a 	mov	r17,r6
   13f08:	0401ffc4 	movi	r16,2047
   13f0c:	003df506 	br	136e4 <_gp+0xfffecd3c>
   13f10:	2807883a 	mov	r3,r5
   13f14:	3023883a 	mov	r17,r6
   13f18:	003df206 	br	136e4 <_gp+0xfffecd3c>
   13f1c:	123ff804 	addi	r8,r2,-32
   13f20:	01000804 	movi	r4,32
   13f24:	1a10d83a 	srl	r8,r3,r8
   13f28:	11000a26 	beq	r2,r4,13f54 <__subdf3+0x8f4>
   13f2c:	01001004 	movi	r4,64
   13f30:	2085c83a 	sub	r2,r4,r2
   13f34:	1884983a 	sll	r2,r3,r2
   13f38:	1444b03a 	or	r2,r2,r17
   13f3c:	1004c03a 	cmpne	r2,r2,zero
   13f40:	40a2b03a 	or	r17,r8,r2
   13f44:	0005883a 	mov	r2,zero
   13f48:	003f8606 	br	13d64 <_gp+0xfffed3bc>
   13f4c:	0005883a 	mov	r2,zero
   13f50:	003fdc06 	br	13ec4 <_gp+0xfffed51c>
   13f54:	0005883a 	mov	r2,zero
   13f58:	003ff706 	br	13f38 <_gp+0xfffed590>

00013f5c <__fixdfsi>:
   13f5c:	280cd53a 	srli	r6,r5,20
   13f60:	00c00434 	movhi	r3,16
   13f64:	18ffffc4 	addi	r3,r3,-1
   13f68:	3181ffcc 	andi	r6,r6,2047
   13f6c:	01c0ff84 	movi	r7,1022
   13f70:	28c6703a 	and	r3,r5,r3
   13f74:	280ad7fa 	srli	r5,r5,31
   13f78:	3980120e 	bge	r7,r6,13fc4 <__fixdfsi+0x68>
   13f7c:	00810744 	movi	r2,1053
   13f80:	11800c16 	blt	r2,r6,13fb4 <__fixdfsi+0x58>
   13f84:	00810cc4 	movi	r2,1075
   13f88:	1185c83a 	sub	r2,r2,r6
   13f8c:	01c007c4 	movi	r7,31
   13f90:	18c00434 	orhi	r3,r3,16
   13f94:	38800d16 	blt	r7,r2,13fcc <__fixdfsi+0x70>
   13f98:	31befb44 	addi	r6,r6,-1043
   13f9c:	2084d83a 	srl	r2,r4,r2
   13fa0:	1986983a 	sll	r3,r3,r6
   13fa4:	1884b03a 	or	r2,r3,r2
   13fa8:	28000726 	beq	r5,zero,13fc8 <__fixdfsi+0x6c>
   13fac:	0085c83a 	sub	r2,zero,r2
   13fb0:	f800283a 	ret
   13fb4:	00a00034 	movhi	r2,32768
   13fb8:	10bfffc4 	addi	r2,r2,-1
   13fbc:	2885883a 	add	r2,r5,r2
   13fc0:	f800283a 	ret
   13fc4:	0005883a 	mov	r2,zero
   13fc8:	f800283a 	ret
   13fcc:	008104c4 	movi	r2,1043
   13fd0:	1185c83a 	sub	r2,r2,r6
   13fd4:	1884d83a 	srl	r2,r3,r2
   13fd8:	003ff306 	br	13fa8 <_gp+0xfffed600>

00013fdc <__floatsidf>:
   13fdc:	defffd04 	addi	sp,sp,-12
   13fe0:	dfc00215 	stw	ra,8(sp)
   13fe4:	dc400115 	stw	r17,4(sp)
   13fe8:	dc000015 	stw	r16,0(sp)
   13fec:	20002b26 	beq	r4,zero,1409c <__floatsidf+0xc0>
   13ff0:	2023883a 	mov	r17,r4
   13ff4:	2020d7fa 	srli	r16,r4,31
   13ff8:	20002d16 	blt	r4,zero,140b0 <__floatsidf+0xd4>
   13ffc:	8809883a 	mov	r4,r17
   14000:	00140b80 	call	140b8 <__clzsi2>
   14004:	01410784 	movi	r5,1054
   14008:	288bc83a 	sub	r5,r5,r2
   1400c:	01010cc4 	movi	r4,1075
   14010:	2149c83a 	sub	r4,r4,r5
   14014:	00c007c4 	movi	r3,31
   14018:	1900160e 	bge	r3,r4,14074 <__floatsidf+0x98>
   1401c:	00c104c4 	movi	r3,1043
   14020:	1947c83a 	sub	r3,r3,r5
   14024:	88c6983a 	sll	r3,r17,r3
   14028:	00800434 	movhi	r2,16
   1402c:	10bfffc4 	addi	r2,r2,-1
   14030:	1886703a 	and	r3,r3,r2
   14034:	2941ffcc 	andi	r5,r5,2047
   14038:	800d883a 	mov	r6,r16
   1403c:	0005883a 	mov	r2,zero
   14040:	280a953a 	slli	r5,r5,20
   14044:	31803fcc 	andi	r6,r6,255
   14048:	01000434 	movhi	r4,16
   1404c:	300c97fa 	slli	r6,r6,31
   14050:	213fffc4 	addi	r4,r4,-1
   14054:	1906703a 	and	r3,r3,r4
   14058:	1946b03a 	or	r3,r3,r5
   1405c:	1986b03a 	or	r3,r3,r6
   14060:	dfc00217 	ldw	ra,8(sp)
   14064:	dc400117 	ldw	r17,4(sp)
   14068:	dc000017 	ldw	r16,0(sp)
   1406c:	dec00304 	addi	sp,sp,12
   14070:	f800283a 	ret
   14074:	00c002c4 	movi	r3,11
   14078:	1887c83a 	sub	r3,r3,r2
   1407c:	88c6d83a 	srl	r3,r17,r3
   14080:	8904983a 	sll	r2,r17,r4
   14084:	01000434 	movhi	r4,16
   14088:	213fffc4 	addi	r4,r4,-1
   1408c:	2941ffcc 	andi	r5,r5,2047
   14090:	1906703a 	and	r3,r3,r4
   14094:	800d883a 	mov	r6,r16
   14098:	003fe906 	br	14040 <_gp+0xfffed698>
   1409c:	000d883a 	mov	r6,zero
   140a0:	000b883a 	mov	r5,zero
   140a4:	0007883a 	mov	r3,zero
   140a8:	0005883a 	mov	r2,zero
   140ac:	003fe406 	br	14040 <_gp+0xfffed698>
   140b0:	0123c83a 	sub	r17,zero,r4
   140b4:	003fd106 	br	13ffc <_gp+0xfffed654>

000140b8 <__clzsi2>:
   140b8:	00bfffd4 	movui	r2,65535
   140bc:	11000536 	bltu	r2,r4,140d4 <__clzsi2+0x1c>
   140c0:	00803fc4 	movi	r2,255
   140c4:	11000f36 	bltu	r2,r4,14104 <__clzsi2+0x4c>
   140c8:	00800804 	movi	r2,32
   140cc:	0007883a 	mov	r3,zero
   140d0:	00000506 	br	140e8 <__clzsi2+0x30>
   140d4:	00804034 	movhi	r2,256
   140d8:	10bfffc4 	addi	r2,r2,-1
   140dc:	11000c2e 	bgeu	r2,r4,14110 <__clzsi2+0x58>
   140e0:	00800204 	movi	r2,8
   140e4:	00c00604 	movi	r3,24
   140e8:	20c8d83a 	srl	r4,r4,r3
   140ec:	00c000b4 	movhi	r3,2
   140f0:	18f76b04 	addi	r3,r3,-8788
   140f4:	1909883a 	add	r4,r3,r4
   140f8:	20c00003 	ldbu	r3,0(r4)
   140fc:	10c5c83a 	sub	r2,r2,r3
   14100:	f800283a 	ret
   14104:	00800604 	movi	r2,24
   14108:	00c00204 	movi	r3,8
   1410c:	003ff606 	br	140e8 <_gp+0xfffed740>
   14110:	00800404 	movi	r2,16
   14114:	1007883a 	mov	r3,r2
   14118:	003ff306 	br	140e8 <_gp+0xfffed740>

0001411c <__mulsi3>:
   1411c:	0005883a 	mov	r2,zero
   14120:	20000726 	beq	r4,zero,14140 <__mulsi3+0x24>
   14124:	20c0004c 	andi	r3,r4,1
   14128:	2008d07a 	srli	r4,r4,1
   1412c:	18000126 	beq	r3,zero,14134 <__mulsi3+0x18>
   14130:	1145883a 	add	r2,r2,r5
   14134:	294b883a 	add	r5,r5,r5
   14138:	203ffa1e 	bne	r4,zero,14124 <_gp+0xfffed77c>
   1413c:	f800283a 	ret
   14140:	f800283a 	ret

00014144 <_asprintf_r>:
   14144:	deffe304 	addi	sp,sp,-116
   14148:	dc001a15 	stw	r16,104(sp)
   1414c:	2821883a 	mov	r16,r5
   14150:	dfc01b15 	stw	ra,108(sp)
   14154:	d9c01c15 	stw	r7,112(sp)
   14158:	0080a204 	movi	r2,648
   1415c:	d880030d 	sth	r2,12(sp)
   14160:	d9c01c04 	addi	r7,sp,112
   14164:	00bfffc4 	movi	r2,-1
   14168:	d80b883a 	mov	r5,sp
   1416c:	d8000015 	stw	zero,0(sp)
   14170:	d8000415 	stw	zero,16(sp)
   14174:	d8000215 	stw	zero,8(sp)
   14178:	d8000515 	stw	zero,20(sp)
   1417c:	d880038d 	sth	r2,14(sp)
   14180:	00156fc0 	call	156fc <___svfprintf_internal_r>
   14184:	10000416 	blt	r2,zero,14198 <_asprintf_r+0x54>
   14188:	d8c00017 	ldw	r3,0(sp)
   1418c:	18000005 	stb	zero,0(r3)
   14190:	d8c00417 	ldw	r3,16(sp)
   14194:	80c00015 	stw	r3,0(r16)
   14198:	dfc01b17 	ldw	ra,108(sp)
   1419c:	dc001a17 	ldw	r16,104(sp)
   141a0:	dec01d04 	addi	sp,sp,116
   141a4:	f800283a 	ret

000141a8 <asprintf>:
   141a8:	deffe204 	addi	sp,sp,-120
   141ac:	dc001a15 	stw	r16,104(sp)
   141b0:	2021883a 	mov	r16,r4
   141b4:	dfc01b15 	stw	ra,108(sp)
   141b8:	d9801c15 	stw	r6,112(sp)
   141bc:	d9c01d15 	stw	r7,116(sp)
   141c0:	008000b4 	movhi	r2,2
   141c4:	10ba6e04 	addi	r2,r2,-5704
   141c8:	11000017 	ldw	r4,0(r2)
   141cc:	0080a204 	movi	r2,648
   141d0:	280d883a 	mov	r6,r5
   141d4:	d880030d 	sth	r2,12(sp)
   141d8:	d9c01c04 	addi	r7,sp,112
   141dc:	00bfffc4 	movi	r2,-1
   141e0:	d80b883a 	mov	r5,sp
   141e4:	d8000015 	stw	zero,0(sp)
   141e8:	d8000415 	stw	zero,16(sp)
   141ec:	d8000215 	stw	zero,8(sp)
   141f0:	d8000515 	stw	zero,20(sp)
   141f4:	d880038d 	sth	r2,14(sp)
   141f8:	00156fc0 	call	156fc <___svfprintf_internal_r>
   141fc:	10000416 	blt	r2,zero,14210 <asprintf+0x68>
   14200:	d8c00017 	ldw	r3,0(sp)
   14204:	18000005 	stb	zero,0(r3)
   14208:	d8c00417 	ldw	r3,16(sp)
   1420c:	80c00015 	stw	r3,0(r16)
   14210:	dfc01b17 	ldw	ra,108(sp)
   14214:	dc001a17 	ldw	r16,104(sp)
   14218:	dec01e04 	addi	sp,sp,120
   1421c:	f800283a 	ret

00014220 <__errno>:
   14220:	008000b4 	movhi	r2,2
   14224:	10ba6e04 	addi	r2,r2,-5704
   14228:	10800017 	ldw	r2,0(r2)
   1422c:	f800283a 	ret

00014230 <malloc>:
   14230:	008000b4 	movhi	r2,2
   14234:	10ba6e04 	addi	r2,r2,-5704
   14238:	200b883a 	mov	r5,r4
   1423c:	11000017 	ldw	r4,0(r2)
   14240:	00142581 	jmpi	14258 <_malloc_r>

00014244 <free>:
   14244:	008000b4 	movhi	r2,2
   14248:	10ba6e04 	addi	r2,r2,-5704
   1424c:	200b883a 	mov	r5,r4
   14250:	11000017 	ldw	r4,0(r2)
   14254:	001938c1 	jmpi	1938c <_free_r>

00014258 <_malloc_r>:
   14258:	defff504 	addi	sp,sp,-44
   1425c:	dc800315 	stw	r18,12(sp)
   14260:	dfc00a15 	stw	ra,40(sp)
   14264:	df000915 	stw	fp,36(sp)
   14268:	ddc00815 	stw	r23,32(sp)
   1426c:	dd800715 	stw	r22,28(sp)
   14270:	dd400615 	stw	r21,24(sp)
   14274:	dd000515 	stw	r20,20(sp)
   14278:	dcc00415 	stw	r19,16(sp)
   1427c:	dc400215 	stw	r17,8(sp)
   14280:	dc000115 	stw	r16,4(sp)
   14284:	288002c4 	addi	r2,r5,11
   14288:	00c00584 	movi	r3,22
   1428c:	2025883a 	mov	r18,r4
   14290:	18807f2e 	bgeu	r3,r2,14490 <_malloc_r+0x238>
   14294:	047ffe04 	movi	r17,-8
   14298:	1462703a 	and	r17,r2,r17
   1429c:	8800a316 	blt	r17,zero,1452c <_malloc_r+0x2d4>
   142a0:	8940a236 	bltu	r17,r5,1452c <_malloc_r+0x2d4>
   142a4:	001d8980 	call	1d898 <__malloc_lock>
   142a8:	00807dc4 	movi	r2,503
   142ac:	1441e92e 	bgeu	r2,r17,14a54 <_malloc_r+0x7fc>
   142b0:	8804d27a 	srli	r2,r17,9
   142b4:	1000a126 	beq	r2,zero,1453c <_malloc_r+0x2e4>
   142b8:	00c00104 	movi	r3,4
   142bc:	18811e36 	bltu	r3,r2,14738 <_malloc_r+0x4e0>
   142c0:	8804d1ba 	srli	r2,r17,6
   142c4:	12000e44 	addi	r8,r2,57
   142c8:	11c00e04 	addi	r7,r2,56
   142cc:	4209883a 	add	r4,r8,r8
   142d0:	04c000b4 	movhi	r19,2
   142d4:	2109883a 	add	r4,r4,r4
   142d8:	9cf92904 	addi	r19,r19,-7004
   142dc:	2109883a 	add	r4,r4,r4
   142e0:	9909883a 	add	r4,r19,r4
   142e4:	24000117 	ldw	r16,4(r4)
   142e8:	213ffe04 	addi	r4,r4,-8
   142ec:	24009726 	beq	r4,r16,1454c <_malloc_r+0x2f4>
   142f0:	80800117 	ldw	r2,4(r16)
   142f4:	01bfff04 	movi	r6,-4
   142f8:	014003c4 	movi	r5,15
   142fc:	1184703a 	and	r2,r2,r6
   14300:	1447c83a 	sub	r3,r2,r17
   14304:	28c00716 	blt	r5,r3,14324 <_malloc_r+0xcc>
   14308:	1800920e 	bge	r3,zero,14554 <_malloc_r+0x2fc>
   1430c:	84000317 	ldw	r16,12(r16)
   14310:	24008e26 	beq	r4,r16,1454c <_malloc_r+0x2f4>
   14314:	80800117 	ldw	r2,4(r16)
   14318:	1184703a 	and	r2,r2,r6
   1431c:	1447c83a 	sub	r3,r2,r17
   14320:	28fff90e 	bge	r5,r3,14308 <_gp+0xfffed960>
   14324:	3809883a 	mov	r4,r7
   14328:	018000b4 	movhi	r6,2
   1432c:	9c000417 	ldw	r16,16(r19)
   14330:	31b92904 	addi	r6,r6,-7004
   14334:	32000204 	addi	r8,r6,8
   14338:	82013426 	beq	r16,r8,1480c <_malloc_r+0x5b4>
   1433c:	80c00117 	ldw	r3,4(r16)
   14340:	00bfff04 	movi	r2,-4
   14344:	188e703a 	and	r7,r3,r2
   14348:	3c45c83a 	sub	r2,r7,r17
   1434c:	00c003c4 	movi	r3,15
   14350:	18811f16 	blt	r3,r2,147d0 <_malloc_r+0x578>
   14354:	32000515 	stw	r8,20(r6)
   14358:	32000415 	stw	r8,16(r6)
   1435c:	10007f0e 	bge	r2,zero,1455c <_malloc_r+0x304>
   14360:	00807fc4 	movi	r2,511
   14364:	11c0fd36 	bltu	r2,r7,1475c <_malloc_r+0x504>
   14368:	3806d0fa 	srli	r3,r7,3
   1436c:	01c00044 	movi	r7,1
   14370:	30800117 	ldw	r2,4(r6)
   14374:	19400044 	addi	r5,r3,1
   14378:	294b883a 	add	r5,r5,r5
   1437c:	1807d0ba 	srai	r3,r3,2
   14380:	294b883a 	add	r5,r5,r5
   14384:	294b883a 	add	r5,r5,r5
   14388:	298b883a 	add	r5,r5,r6
   1438c:	38c6983a 	sll	r3,r7,r3
   14390:	29c00017 	ldw	r7,0(r5)
   14394:	2a7ffe04 	addi	r9,r5,-8
   14398:	1886b03a 	or	r3,r3,r2
   1439c:	82400315 	stw	r9,12(r16)
   143a0:	81c00215 	stw	r7,8(r16)
   143a4:	30c00115 	stw	r3,4(r6)
   143a8:	2c000015 	stw	r16,0(r5)
   143ac:	3c000315 	stw	r16,12(r7)
   143b0:	2005d0ba 	srai	r2,r4,2
   143b4:	01400044 	movi	r5,1
   143b8:	288a983a 	sll	r5,r5,r2
   143bc:	19406f36 	bltu	r3,r5,1457c <_malloc_r+0x324>
   143c0:	28c4703a 	and	r2,r5,r3
   143c4:	10000a1e 	bne	r2,zero,143f0 <_malloc_r+0x198>
   143c8:	00bfff04 	movi	r2,-4
   143cc:	294b883a 	add	r5,r5,r5
   143d0:	2088703a 	and	r4,r4,r2
   143d4:	28c4703a 	and	r2,r5,r3
   143d8:	21000104 	addi	r4,r4,4
   143dc:	1000041e 	bne	r2,zero,143f0 <_malloc_r+0x198>
   143e0:	294b883a 	add	r5,r5,r5
   143e4:	28c4703a 	and	r2,r5,r3
   143e8:	21000104 	addi	r4,r4,4
   143ec:	103ffc26 	beq	r2,zero,143e0 <_gp+0xfffeda38>
   143f0:	02bfff04 	movi	r10,-4
   143f4:	024003c4 	movi	r9,15
   143f8:	21800044 	addi	r6,r4,1
   143fc:	318d883a 	add	r6,r6,r6
   14400:	318d883a 	add	r6,r6,r6
   14404:	318d883a 	add	r6,r6,r6
   14408:	998d883a 	add	r6,r19,r6
   1440c:	333ffe04 	addi	r12,r6,-8
   14410:	2017883a 	mov	r11,r4
   14414:	31800104 	addi	r6,r6,4
   14418:	34000017 	ldw	r16,0(r6)
   1441c:	31fffd04 	addi	r7,r6,-12
   14420:	81c0041e 	bne	r16,r7,14434 <_malloc_r+0x1dc>
   14424:	0000fb06 	br	14814 <_malloc_r+0x5bc>
   14428:	1801030e 	bge	r3,zero,14838 <_malloc_r+0x5e0>
   1442c:	84000317 	ldw	r16,12(r16)
   14430:	81c0f826 	beq	r16,r7,14814 <_malloc_r+0x5bc>
   14434:	80800117 	ldw	r2,4(r16)
   14438:	1284703a 	and	r2,r2,r10
   1443c:	1447c83a 	sub	r3,r2,r17
   14440:	48fff90e 	bge	r9,r3,14428 <_gp+0xfffeda80>
   14444:	80800317 	ldw	r2,12(r16)
   14448:	81000217 	ldw	r4,8(r16)
   1444c:	89400054 	ori	r5,r17,1
   14450:	81400115 	stw	r5,4(r16)
   14454:	20800315 	stw	r2,12(r4)
   14458:	11000215 	stw	r4,8(r2)
   1445c:	8463883a 	add	r17,r16,r17
   14460:	9c400515 	stw	r17,20(r19)
   14464:	9c400415 	stw	r17,16(r19)
   14468:	18800054 	ori	r2,r3,1
   1446c:	88800115 	stw	r2,4(r17)
   14470:	8a000315 	stw	r8,12(r17)
   14474:	8a000215 	stw	r8,8(r17)
   14478:	88e3883a 	add	r17,r17,r3
   1447c:	88c00015 	stw	r3,0(r17)
   14480:	9009883a 	mov	r4,r18
   14484:	001d89c0 	call	1d89c <__malloc_unlock>
   14488:	80800204 	addi	r2,r16,8
   1448c:	00001b06 	br	144fc <_malloc_r+0x2a4>
   14490:	04400404 	movi	r17,16
   14494:	89402536 	bltu	r17,r5,1452c <_malloc_r+0x2d4>
   14498:	001d8980 	call	1d898 <__malloc_lock>
   1449c:	00800184 	movi	r2,6
   144a0:	01000084 	movi	r4,2
   144a4:	04c000b4 	movhi	r19,2
   144a8:	1085883a 	add	r2,r2,r2
   144ac:	9cf92904 	addi	r19,r19,-7004
   144b0:	1085883a 	add	r2,r2,r2
   144b4:	9885883a 	add	r2,r19,r2
   144b8:	14000117 	ldw	r16,4(r2)
   144bc:	10fffe04 	addi	r3,r2,-8
   144c0:	80c0d926 	beq	r16,r3,14828 <_malloc_r+0x5d0>
   144c4:	80c00117 	ldw	r3,4(r16)
   144c8:	81000317 	ldw	r4,12(r16)
   144cc:	00bfff04 	movi	r2,-4
   144d0:	1884703a 	and	r2,r3,r2
   144d4:	81400217 	ldw	r5,8(r16)
   144d8:	8085883a 	add	r2,r16,r2
   144dc:	10c00117 	ldw	r3,4(r2)
   144e0:	29000315 	stw	r4,12(r5)
   144e4:	21400215 	stw	r5,8(r4)
   144e8:	18c00054 	ori	r3,r3,1
   144ec:	10c00115 	stw	r3,4(r2)
   144f0:	9009883a 	mov	r4,r18
   144f4:	001d89c0 	call	1d89c <__malloc_unlock>
   144f8:	80800204 	addi	r2,r16,8
   144fc:	dfc00a17 	ldw	ra,40(sp)
   14500:	df000917 	ldw	fp,36(sp)
   14504:	ddc00817 	ldw	r23,32(sp)
   14508:	dd800717 	ldw	r22,28(sp)
   1450c:	dd400617 	ldw	r21,24(sp)
   14510:	dd000517 	ldw	r20,20(sp)
   14514:	dcc00417 	ldw	r19,16(sp)
   14518:	dc800317 	ldw	r18,12(sp)
   1451c:	dc400217 	ldw	r17,8(sp)
   14520:	dc000117 	ldw	r16,4(sp)
   14524:	dec00b04 	addi	sp,sp,44
   14528:	f800283a 	ret
   1452c:	00800304 	movi	r2,12
   14530:	90800015 	stw	r2,0(r18)
   14534:	0005883a 	mov	r2,zero
   14538:	003ff006 	br	144fc <_gp+0xfffedb54>
   1453c:	01002004 	movi	r4,128
   14540:	02001004 	movi	r8,64
   14544:	01c00fc4 	movi	r7,63
   14548:	003f6106 	br	142d0 <_gp+0xfffed928>
   1454c:	4009883a 	mov	r4,r8
   14550:	003f7506 	br	14328 <_gp+0xfffed980>
   14554:	81000317 	ldw	r4,12(r16)
   14558:	003fde06 	br	144d4 <_gp+0xfffedb2c>
   1455c:	81c5883a 	add	r2,r16,r7
   14560:	11400117 	ldw	r5,4(r2)
   14564:	9009883a 	mov	r4,r18
   14568:	29400054 	ori	r5,r5,1
   1456c:	11400115 	stw	r5,4(r2)
   14570:	001d89c0 	call	1d89c <__malloc_unlock>
   14574:	80800204 	addi	r2,r16,8
   14578:	003fe006 	br	144fc <_gp+0xfffedb54>
   1457c:	9c000217 	ldw	r16,8(r19)
   14580:	00bfff04 	movi	r2,-4
   14584:	85800117 	ldw	r22,4(r16)
   14588:	b0ac703a 	and	r22,r22,r2
   1458c:	b4400336 	bltu	r22,r17,1459c <_malloc_r+0x344>
   14590:	b445c83a 	sub	r2,r22,r17
   14594:	00c003c4 	movi	r3,15
   14598:	18805d16 	blt	r3,r2,14710 <_malloc_r+0x4b8>
   1459c:	05c000b4 	movhi	r23,2
   145a0:	008000b4 	movhi	r2,2
   145a4:	10bce904 	addi	r2,r2,-3164
   145a8:	bdfa6f04 	addi	r23,r23,-5700
   145ac:	15400017 	ldw	r21,0(r2)
   145b0:	b8c00017 	ldw	r3,0(r23)
   145b4:	00bfffc4 	movi	r2,-1
   145b8:	858d883a 	add	r6,r16,r22
   145bc:	8d6b883a 	add	r21,r17,r21
   145c0:	1880ea26 	beq	r3,r2,1496c <_malloc_r+0x714>
   145c4:	ad4403c4 	addi	r21,r21,4111
   145c8:	00bc0004 	movi	r2,-4096
   145cc:	a8aa703a 	and	r21,r21,r2
   145d0:	a80b883a 	mov	r5,r21
   145d4:	9009883a 	mov	r4,r18
   145d8:	d9800015 	stw	r6,0(sp)
   145dc:	0014b8c0 	call	14b8c <_sbrk_r>
   145e0:	1029883a 	mov	r20,r2
   145e4:	00bfffc4 	movi	r2,-1
   145e8:	d9800017 	ldw	r6,0(sp)
   145ec:	a080e826 	beq	r20,r2,14990 <_malloc_r+0x738>
   145f0:	a180a636 	bltu	r20,r6,1488c <_malloc_r+0x634>
   145f4:	070000b4 	movhi	fp,2
   145f8:	e73cff04 	addi	fp,fp,-3076
   145fc:	e0800017 	ldw	r2,0(fp)
   14600:	a887883a 	add	r3,r21,r2
   14604:	e0c00015 	stw	r3,0(fp)
   14608:	3500e626 	beq	r6,r20,149a4 <_malloc_r+0x74c>
   1460c:	b9000017 	ldw	r4,0(r23)
   14610:	00bfffc4 	movi	r2,-1
   14614:	2080ee26 	beq	r4,r2,149d0 <_malloc_r+0x778>
   14618:	a185c83a 	sub	r2,r20,r6
   1461c:	10c5883a 	add	r2,r2,r3
   14620:	e0800015 	stw	r2,0(fp)
   14624:	a0c001cc 	andi	r3,r20,7
   14628:	1800bc26 	beq	r3,zero,1491c <_malloc_r+0x6c4>
   1462c:	a0e9c83a 	sub	r20,r20,r3
   14630:	00840204 	movi	r2,4104
   14634:	a5000204 	addi	r20,r20,8
   14638:	10c7c83a 	sub	r3,r2,r3
   1463c:	a545883a 	add	r2,r20,r21
   14640:	1083ffcc 	andi	r2,r2,4095
   14644:	18abc83a 	sub	r21,r3,r2
   14648:	a80b883a 	mov	r5,r21
   1464c:	9009883a 	mov	r4,r18
   14650:	0014b8c0 	call	14b8c <_sbrk_r>
   14654:	00ffffc4 	movi	r3,-1
   14658:	10c0e126 	beq	r2,r3,149e0 <_malloc_r+0x788>
   1465c:	1505c83a 	sub	r2,r2,r20
   14660:	1545883a 	add	r2,r2,r21
   14664:	10800054 	ori	r2,r2,1
   14668:	e0c00017 	ldw	r3,0(fp)
   1466c:	9d000215 	stw	r20,8(r19)
   14670:	a0800115 	stw	r2,4(r20)
   14674:	a8c7883a 	add	r3,r21,r3
   14678:	e0c00015 	stw	r3,0(fp)
   1467c:	84c00e26 	beq	r16,r19,146b8 <_malloc_r+0x460>
   14680:	018003c4 	movi	r6,15
   14684:	3580a72e 	bgeu	r6,r22,14924 <_malloc_r+0x6cc>
   14688:	81400117 	ldw	r5,4(r16)
   1468c:	013ffe04 	movi	r4,-8
   14690:	b0bffd04 	addi	r2,r22,-12
   14694:	1104703a 	and	r2,r2,r4
   14698:	2900004c 	andi	r4,r5,1
   1469c:	2088b03a 	or	r4,r4,r2
   146a0:	81000115 	stw	r4,4(r16)
   146a4:	01400144 	movi	r5,5
   146a8:	8089883a 	add	r4,r16,r2
   146ac:	21400115 	stw	r5,4(r4)
   146b0:	21400215 	stw	r5,8(r4)
   146b4:	3080cd36 	bltu	r6,r2,149ec <_malloc_r+0x794>
   146b8:	008000b4 	movhi	r2,2
   146bc:	10bce804 	addi	r2,r2,-3168
   146c0:	11000017 	ldw	r4,0(r2)
   146c4:	20c0012e 	bgeu	r4,r3,146cc <_malloc_r+0x474>
   146c8:	10c00015 	stw	r3,0(r2)
   146cc:	008000b4 	movhi	r2,2
   146d0:	10bce704 	addi	r2,r2,-3172
   146d4:	11000017 	ldw	r4,0(r2)
   146d8:	9c000217 	ldw	r16,8(r19)
   146dc:	20c0012e 	bgeu	r4,r3,146e4 <_malloc_r+0x48c>
   146e0:	10c00015 	stw	r3,0(r2)
   146e4:	80c00117 	ldw	r3,4(r16)
   146e8:	00bfff04 	movi	r2,-4
   146ec:	1886703a 	and	r3,r3,r2
   146f0:	1c45c83a 	sub	r2,r3,r17
   146f4:	1c400236 	bltu	r3,r17,14700 <_malloc_r+0x4a8>
   146f8:	00c003c4 	movi	r3,15
   146fc:	18800416 	blt	r3,r2,14710 <_malloc_r+0x4b8>
   14700:	9009883a 	mov	r4,r18
   14704:	001d89c0 	call	1d89c <__malloc_unlock>
   14708:	0005883a 	mov	r2,zero
   1470c:	003f7b06 	br	144fc <_gp+0xfffedb54>
   14710:	88c00054 	ori	r3,r17,1
   14714:	80c00115 	stw	r3,4(r16)
   14718:	8463883a 	add	r17,r16,r17
   1471c:	10800054 	ori	r2,r2,1
   14720:	9c400215 	stw	r17,8(r19)
   14724:	88800115 	stw	r2,4(r17)
   14728:	9009883a 	mov	r4,r18
   1472c:	001d89c0 	call	1d89c <__malloc_unlock>
   14730:	80800204 	addi	r2,r16,8
   14734:	003f7106 	br	144fc <_gp+0xfffedb54>
   14738:	00c00504 	movi	r3,20
   1473c:	18804a2e 	bgeu	r3,r2,14868 <_malloc_r+0x610>
   14740:	00c01504 	movi	r3,84
   14744:	18806e36 	bltu	r3,r2,14900 <_malloc_r+0x6a8>
   14748:	8804d33a 	srli	r2,r17,12
   1474c:	12001bc4 	addi	r8,r2,111
   14750:	11c01b84 	addi	r7,r2,110
   14754:	4209883a 	add	r4,r8,r8
   14758:	003edd06 	br	142d0 <_gp+0xfffed928>
   1475c:	3804d27a 	srli	r2,r7,9
   14760:	00c00104 	movi	r3,4
   14764:	1880442e 	bgeu	r3,r2,14878 <_malloc_r+0x620>
   14768:	00c00504 	movi	r3,20
   1476c:	18808136 	bltu	r3,r2,14974 <_malloc_r+0x71c>
   14770:	11401704 	addi	r5,r2,92
   14774:	10c016c4 	addi	r3,r2,91
   14778:	294b883a 	add	r5,r5,r5
   1477c:	294b883a 	add	r5,r5,r5
   14780:	294b883a 	add	r5,r5,r5
   14784:	994b883a 	add	r5,r19,r5
   14788:	28800017 	ldw	r2,0(r5)
   1478c:	018000b4 	movhi	r6,2
   14790:	297ffe04 	addi	r5,r5,-8
   14794:	31b92904 	addi	r6,r6,-7004
   14798:	28806526 	beq	r5,r2,14930 <_malloc_r+0x6d8>
   1479c:	01bfff04 	movi	r6,-4
   147a0:	10c00117 	ldw	r3,4(r2)
   147a4:	1986703a 	and	r3,r3,r6
   147a8:	38c0022e 	bgeu	r7,r3,147b4 <_malloc_r+0x55c>
   147ac:	10800217 	ldw	r2,8(r2)
   147b0:	28bffb1e 	bne	r5,r2,147a0 <_gp+0xfffeddf8>
   147b4:	11400317 	ldw	r5,12(r2)
   147b8:	98c00117 	ldw	r3,4(r19)
   147bc:	81400315 	stw	r5,12(r16)
   147c0:	80800215 	stw	r2,8(r16)
   147c4:	2c000215 	stw	r16,8(r5)
   147c8:	14000315 	stw	r16,12(r2)
   147cc:	003ef806 	br	143b0 <_gp+0xfffeda08>
   147d0:	88c00054 	ori	r3,r17,1
   147d4:	80c00115 	stw	r3,4(r16)
   147d8:	8463883a 	add	r17,r16,r17
   147dc:	34400515 	stw	r17,20(r6)
   147e0:	34400415 	stw	r17,16(r6)
   147e4:	10c00054 	ori	r3,r2,1
   147e8:	8a000315 	stw	r8,12(r17)
   147ec:	8a000215 	stw	r8,8(r17)
   147f0:	88c00115 	stw	r3,4(r17)
   147f4:	88a3883a 	add	r17,r17,r2
   147f8:	88800015 	stw	r2,0(r17)
   147fc:	9009883a 	mov	r4,r18
   14800:	001d89c0 	call	1d89c <__malloc_unlock>
   14804:	80800204 	addi	r2,r16,8
   14808:	003f3c06 	br	144fc <_gp+0xfffedb54>
   1480c:	30c00117 	ldw	r3,4(r6)
   14810:	003ee706 	br	143b0 <_gp+0xfffeda08>
   14814:	5ac00044 	addi	r11,r11,1
   14818:	588000cc 	andi	r2,r11,3
   1481c:	31800204 	addi	r6,r6,8
   14820:	103efd1e 	bne	r2,zero,14418 <_gp+0xfffeda70>
   14824:	00002406 	br	148b8 <_malloc_r+0x660>
   14828:	14000317 	ldw	r16,12(r2)
   1482c:	143f251e 	bne	r2,r16,144c4 <_gp+0xfffedb1c>
   14830:	21000084 	addi	r4,r4,2
   14834:	003ebc06 	br	14328 <_gp+0xfffed980>
   14838:	8085883a 	add	r2,r16,r2
   1483c:	10c00117 	ldw	r3,4(r2)
   14840:	81000317 	ldw	r4,12(r16)
   14844:	81400217 	ldw	r5,8(r16)
   14848:	18c00054 	ori	r3,r3,1
   1484c:	10c00115 	stw	r3,4(r2)
   14850:	29000315 	stw	r4,12(r5)
   14854:	21400215 	stw	r5,8(r4)
   14858:	9009883a 	mov	r4,r18
   1485c:	001d89c0 	call	1d89c <__malloc_unlock>
   14860:	80800204 	addi	r2,r16,8
   14864:	003f2506 	br	144fc <_gp+0xfffedb54>
   14868:	12001704 	addi	r8,r2,92
   1486c:	11c016c4 	addi	r7,r2,91
   14870:	4209883a 	add	r4,r8,r8
   14874:	003e9606 	br	142d0 <_gp+0xfffed928>
   14878:	3804d1ba 	srli	r2,r7,6
   1487c:	11400e44 	addi	r5,r2,57
   14880:	10c00e04 	addi	r3,r2,56
   14884:	294b883a 	add	r5,r5,r5
   14888:	003fbc06 	br	1477c <_gp+0xfffeddd4>
   1488c:	84ff5926 	beq	r16,r19,145f4 <_gp+0xfffedc4c>
   14890:	008000b4 	movhi	r2,2
   14894:	10b92904 	addi	r2,r2,-7004
   14898:	14000217 	ldw	r16,8(r2)
   1489c:	00bfff04 	movi	r2,-4
   148a0:	80c00117 	ldw	r3,4(r16)
   148a4:	1886703a 	and	r3,r3,r2
   148a8:	003f9106 	br	146f0 <_gp+0xfffedd48>
   148ac:	60800217 	ldw	r2,8(r12)
   148b0:	213fffc4 	addi	r4,r4,-1
   148b4:	1300651e 	bne	r2,r12,14a4c <_malloc_r+0x7f4>
   148b8:	208000cc 	andi	r2,r4,3
   148bc:	633ffe04 	addi	r12,r12,-8
   148c0:	103ffa1e 	bne	r2,zero,148ac <_gp+0xfffedf04>
   148c4:	98800117 	ldw	r2,4(r19)
   148c8:	0146303a 	nor	r3,zero,r5
   148cc:	1884703a 	and	r2,r3,r2
   148d0:	98800115 	stw	r2,4(r19)
   148d4:	294b883a 	add	r5,r5,r5
   148d8:	117f2836 	bltu	r2,r5,1457c <_gp+0xfffedbd4>
   148dc:	283f2726 	beq	r5,zero,1457c <_gp+0xfffedbd4>
   148e0:	2886703a 	and	r3,r5,r2
   148e4:	5809883a 	mov	r4,r11
   148e8:	183ec31e 	bne	r3,zero,143f8 <_gp+0xfffeda50>
   148ec:	294b883a 	add	r5,r5,r5
   148f0:	2886703a 	and	r3,r5,r2
   148f4:	21000104 	addi	r4,r4,4
   148f8:	183ffc26 	beq	r3,zero,148ec <_gp+0xfffedf44>
   148fc:	003ebe06 	br	143f8 <_gp+0xfffeda50>
   14900:	00c05504 	movi	r3,340
   14904:	18801236 	bltu	r3,r2,14950 <_malloc_r+0x6f8>
   14908:	8804d3fa 	srli	r2,r17,15
   1490c:	12001e04 	addi	r8,r2,120
   14910:	11c01dc4 	addi	r7,r2,119
   14914:	4209883a 	add	r4,r8,r8
   14918:	003e6d06 	br	142d0 <_gp+0xfffed928>
   1491c:	00c40004 	movi	r3,4096
   14920:	003f4606 	br	1463c <_gp+0xfffedc94>
   14924:	00800044 	movi	r2,1
   14928:	a0800115 	stw	r2,4(r20)
   1492c:	003f7406 	br	14700 <_gp+0xfffedd58>
   14930:	1805d0ba 	srai	r2,r3,2
   14934:	01c00044 	movi	r7,1
   14938:	30c00117 	ldw	r3,4(r6)
   1493c:	388e983a 	sll	r7,r7,r2
   14940:	2805883a 	mov	r2,r5
   14944:	38c6b03a 	or	r3,r7,r3
   14948:	30c00115 	stw	r3,4(r6)
   1494c:	003f9b06 	br	147bc <_gp+0xfffede14>
   14950:	00c15504 	movi	r3,1364
   14954:	18801a36 	bltu	r3,r2,149c0 <_malloc_r+0x768>
   14958:	8804d4ba 	srli	r2,r17,18
   1495c:	12001f44 	addi	r8,r2,125
   14960:	11c01f04 	addi	r7,r2,124
   14964:	4209883a 	add	r4,r8,r8
   14968:	003e5906 	br	142d0 <_gp+0xfffed928>
   1496c:	ad400404 	addi	r21,r21,16
   14970:	003f1706 	br	145d0 <_gp+0xfffedc28>
   14974:	00c01504 	movi	r3,84
   14978:	18802336 	bltu	r3,r2,14a08 <_malloc_r+0x7b0>
   1497c:	3804d33a 	srli	r2,r7,12
   14980:	11401bc4 	addi	r5,r2,111
   14984:	10c01b84 	addi	r3,r2,110
   14988:	294b883a 	add	r5,r5,r5
   1498c:	003f7b06 	br	1477c <_gp+0xfffeddd4>
   14990:	9c000217 	ldw	r16,8(r19)
   14994:	00bfff04 	movi	r2,-4
   14998:	80c00117 	ldw	r3,4(r16)
   1499c:	1886703a 	and	r3,r3,r2
   149a0:	003f5306 	br	146f0 <_gp+0xfffedd48>
   149a4:	3083ffcc 	andi	r2,r6,4095
   149a8:	103f181e 	bne	r2,zero,1460c <_gp+0xfffedc64>
   149ac:	99000217 	ldw	r4,8(r19)
   149b0:	b545883a 	add	r2,r22,r21
   149b4:	10800054 	ori	r2,r2,1
   149b8:	20800115 	stw	r2,4(r4)
   149bc:	003f3e06 	br	146b8 <_gp+0xfffedd10>
   149c0:	01003f84 	movi	r4,254
   149c4:	02001fc4 	movi	r8,127
   149c8:	01c01f84 	movi	r7,126
   149cc:	003e4006 	br	142d0 <_gp+0xfffed928>
   149d0:	008000b4 	movhi	r2,2
   149d4:	10ba6f04 	addi	r2,r2,-5700
   149d8:	15000015 	stw	r20,0(r2)
   149dc:	003f1106 	br	14624 <_gp+0xfffedc7c>
   149e0:	00800044 	movi	r2,1
   149e4:	002b883a 	mov	r21,zero
   149e8:	003f1f06 	br	14668 <_gp+0xfffedcc0>
   149ec:	81400204 	addi	r5,r16,8
   149f0:	9009883a 	mov	r4,r18
   149f4:	001938c0 	call	1938c <_free_r>
   149f8:	008000b4 	movhi	r2,2
   149fc:	10bcff04 	addi	r2,r2,-3076
   14a00:	10c00017 	ldw	r3,0(r2)
   14a04:	003f2c06 	br	146b8 <_gp+0xfffedd10>
   14a08:	00c05504 	movi	r3,340
   14a0c:	18800536 	bltu	r3,r2,14a24 <_malloc_r+0x7cc>
   14a10:	3804d3fa 	srli	r2,r7,15
   14a14:	11401e04 	addi	r5,r2,120
   14a18:	10c01dc4 	addi	r3,r2,119
   14a1c:	294b883a 	add	r5,r5,r5
   14a20:	003f5606 	br	1477c <_gp+0xfffeddd4>
   14a24:	00c15504 	movi	r3,1364
   14a28:	18800536 	bltu	r3,r2,14a40 <_malloc_r+0x7e8>
   14a2c:	3804d4ba 	srli	r2,r7,18
   14a30:	11401f44 	addi	r5,r2,125
   14a34:	10c01f04 	addi	r3,r2,124
   14a38:	294b883a 	add	r5,r5,r5
   14a3c:	003f4f06 	br	1477c <_gp+0xfffeddd4>
   14a40:	01403f84 	movi	r5,254
   14a44:	00c01f84 	movi	r3,126
   14a48:	003f4c06 	br	1477c <_gp+0xfffeddd4>
   14a4c:	98800117 	ldw	r2,4(r19)
   14a50:	003fa006 	br	148d4 <_gp+0xfffedf2c>
   14a54:	8808d0fa 	srli	r4,r17,3
   14a58:	20800044 	addi	r2,r4,1
   14a5c:	1085883a 	add	r2,r2,r2
   14a60:	003e9006 	br	144a4 <_gp+0xfffedafc>

00014a64 <memset>:
   14a64:	20c000cc 	andi	r3,r4,3
   14a68:	2005883a 	mov	r2,r4
   14a6c:	18004426 	beq	r3,zero,14b80 <memset+0x11c>
   14a70:	31ffffc4 	addi	r7,r6,-1
   14a74:	30004026 	beq	r6,zero,14b78 <memset+0x114>
   14a78:	2813883a 	mov	r9,r5
   14a7c:	200d883a 	mov	r6,r4
   14a80:	2007883a 	mov	r3,r4
   14a84:	00000406 	br	14a98 <memset+0x34>
   14a88:	3a3fffc4 	addi	r8,r7,-1
   14a8c:	31800044 	addi	r6,r6,1
   14a90:	38003926 	beq	r7,zero,14b78 <memset+0x114>
   14a94:	400f883a 	mov	r7,r8
   14a98:	18c00044 	addi	r3,r3,1
   14a9c:	32400005 	stb	r9,0(r6)
   14aa0:	1a0000cc 	andi	r8,r3,3
   14aa4:	403ff81e 	bne	r8,zero,14a88 <_gp+0xfffee0e0>
   14aa8:	010000c4 	movi	r4,3
   14aac:	21c02d2e 	bgeu	r4,r7,14b64 <memset+0x100>
   14ab0:	29003fcc 	andi	r4,r5,255
   14ab4:	200c923a 	slli	r6,r4,8
   14ab8:	3108b03a 	or	r4,r6,r4
   14abc:	200c943a 	slli	r6,r4,16
   14ac0:	218cb03a 	or	r6,r4,r6
   14ac4:	010003c4 	movi	r4,15
   14ac8:	21c0182e 	bgeu	r4,r7,14b2c <memset+0xc8>
   14acc:	3b3ffc04 	addi	r12,r7,-16
   14ad0:	6018d13a 	srli	r12,r12,4
   14ad4:	1a000104 	addi	r8,r3,4
   14ad8:	1ac00204 	addi	r11,r3,8
   14adc:	6008913a 	slli	r4,r12,4
   14ae0:	1a800304 	addi	r10,r3,12
   14ae4:	1813883a 	mov	r9,r3
   14ae8:	21000504 	addi	r4,r4,20
   14aec:	1909883a 	add	r4,r3,r4
   14af0:	49800015 	stw	r6,0(r9)
   14af4:	41800015 	stw	r6,0(r8)
   14af8:	59800015 	stw	r6,0(r11)
   14afc:	51800015 	stw	r6,0(r10)
   14b00:	42000404 	addi	r8,r8,16
   14b04:	4a400404 	addi	r9,r9,16
   14b08:	5ac00404 	addi	r11,r11,16
   14b0c:	52800404 	addi	r10,r10,16
   14b10:	413ff71e 	bne	r8,r4,14af0 <_gp+0xfffee148>
   14b14:	63000044 	addi	r12,r12,1
   14b18:	6018913a 	slli	r12,r12,4
   14b1c:	39c003cc 	andi	r7,r7,15
   14b20:	010000c4 	movi	r4,3
   14b24:	1b07883a 	add	r3,r3,r12
   14b28:	21c00e2e 	bgeu	r4,r7,14b64 <memset+0x100>
   14b2c:	1813883a 	mov	r9,r3
   14b30:	3811883a 	mov	r8,r7
   14b34:	010000c4 	movi	r4,3
   14b38:	49800015 	stw	r6,0(r9)
   14b3c:	423fff04 	addi	r8,r8,-4
   14b40:	4a400104 	addi	r9,r9,4
   14b44:	223ffc36 	bltu	r4,r8,14b38 <_gp+0xfffee190>
   14b48:	393fff04 	addi	r4,r7,-4
   14b4c:	2008d0ba 	srli	r4,r4,2
   14b50:	39c000cc 	andi	r7,r7,3
   14b54:	21000044 	addi	r4,r4,1
   14b58:	2109883a 	add	r4,r4,r4
   14b5c:	2109883a 	add	r4,r4,r4
   14b60:	1907883a 	add	r3,r3,r4
   14b64:	38000526 	beq	r7,zero,14b7c <memset+0x118>
   14b68:	19cf883a 	add	r7,r3,r7
   14b6c:	19400005 	stb	r5,0(r3)
   14b70:	18c00044 	addi	r3,r3,1
   14b74:	38fffd1e 	bne	r7,r3,14b6c <_gp+0xfffee1c4>
   14b78:	f800283a 	ret
   14b7c:	f800283a 	ret
   14b80:	2007883a 	mov	r3,r4
   14b84:	300f883a 	mov	r7,r6
   14b88:	003fc706 	br	14aa8 <_gp+0xfffee100>

00014b8c <_sbrk_r>:
   14b8c:	defffd04 	addi	sp,sp,-12
   14b90:	dc000015 	stw	r16,0(sp)
   14b94:	040000b4 	movhi	r16,2
   14b98:	dc400115 	stw	r17,4(sp)
   14b9c:	843cea04 	addi	r16,r16,-3160
   14ba0:	2023883a 	mov	r17,r4
   14ba4:	2809883a 	mov	r4,r5
   14ba8:	dfc00215 	stw	ra,8(sp)
   14bac:	80000015 	stw	zero,0(r16)
   14bb0:	001d8d80 	call	1d8d8 <sbrk>
   14bb4:	00ffffc4 	movi	r3,-1
   14bb8:	10c00526 	beq	r2,r3,14bd0 <_sbrk_r+0x44>
   14bbc:	dfc00217 	ldw	ra,8(sp)
   14bc0:	dc400117 	ldw	r17,4(sp)
   14bc4:	dc000017 	ldw	r16,0(sp)
   14bc8:	dec00304 	addi	sp,sp,12
   14bcc:	f800283a 	ret
   14bd0:	80c00017 	ldw	r3,0(r16)
   14bd4:	183ff926 	beq	r3,zero,14bbc <_gp+0xfffee214>
   14bd8:	88c00015 	stw	r3,0(r17)
   14bdc:	003ff706 	br	14bbc <_gp+0xfffee214>

00014be0 <_sprintf_r>:
   14be0:	deffe404 	addi	sp,sp,-112
   14be4:	2807883a 	mov	r3,r5
   14be8:	dfc01a15 	stw	ra,104(sp)
   14bec:	d9c01b15 	stw	r7,108(sp)
   14bf0:	00a00034 	movhi	r2,32768
   14bf4:	10bfffc4 	addi	r2,r2,-1
   14bf8:	02008204 	movi	r8,520
   14bfc:	d8800215 	stw	r2,8(sp)
   14c00:	d8800515 	stw	r2,20(sp)
   14c04:	d9c01b04 	addi	r7,sp,108
   14c08:	d80b883a 	mov	r5,sp
   14c0c:	00bfffc4 	movi	r2,-1
   14c10:	d8c00015 	stw	r3,0(sp)
   14c14:	d8c00415 	stw	r3,16(sp)
   14c18:	da00030d 	sth	r8,12(sp)
   14c1c:	d880038d 	sth	r2,14(sp)
   14c20:	00156fc0 	call	156fc <___svfprintf_internal_r>
   14c24:	d8c00017 	ldw	r3,0(sp)
   14c28:	18000005 	stb	zero,0(r3)
   14c2c:	dfc01a17 	ldw	ra,104(sp)
   14c30:	dec01c04 	addi	sp,sp,112
   14c34:	f800283a 	ret

00014c38 <sprintf>:
   14c38:	deffe304 	addi	sp,sp,-116
   14c3c:	2007883a 	mov	r3,r4
   14c40:	dfc01a15 	stw	ra,104(sp)
   14c44:	d9801b15 	stw	r6,108(sp)
   14c48:	d9c01c15 	stw	r7,112(sp)
   14c4c:	010000b4 	movhi	r4,2
   14c50:	213a6e04 	addi	r4,r4,-5704
   14c54:	21000017 	ldw	r4,0(r4)
   14c58:	00a00034 	movhi	r2,32768
   14c5c:	10bfffc4 	addi	r2,r2,-1
   14c60:	280d883a 	mov	r6,r5
   14c64:	02008204 	movi	r8,520
   14c68:	d8800215 	stw	r2,8(sp)
   14c6c:	d8800515 	stw	r2,20(sp)
   14c70:	d9c01b04 	addi	r7,sp,108
   14c74:	d80b883a 	mov	r5,sp
   14c78:	00bfffc4 	movi	r2,-1
   14c7c:	d8c00015 	stw	r3,0(sp)
   14c80:	d8c00415 	stw	r3,16(sp)
   14c84:	da00030d 	sth	r8,12(sp)
   14c88:	d880038d 	sth	r2,14(sp)
   14c8c:	00156fc0 	call	156fc <___svfprintf_internal_r>
   14c90:	d8c00017 	ldw	r3,0(sp)
   14c94:	18000005 	stb	zero,0(r3)
   14c98:	dfc01a17 	ldw	ra,104(sp)
   14c9c:	dec01d04 	addi	sp,sp,116
   14ca0:	f800283a 	ret

00014ca4 <strchr>:
   14ca4:	2ac03fcc 	andi	r11,r5,255
   14ca8:	2813883a 	mov	r9,r5
   14cac:	208000cc 	andi	r2,r4,3
   14cb0:	58003726 	beq	r11,zero,14d90 <strchr+0xec>
   14cb4:	10000b26 	beq	r2,zero,14ce4 <strchr+0x40>
   14cb8:	20800003 	ldbu	r2,0(r4)
   14cbc:	10003226 	beq	r2,zero,14d88 <strchr+0xe4>
   14cc0:	28c03fcc 	andi	r3,r5,255
   14cc4:	5880041e 	bne	r11,r2,14cd8 <strchr+0x34>
   14cc8:	00004d06 	br	14e00 <strchr+0x15c>
   14ccc:	20800003 	ldbu	r2,0(r4)
   14cd0:	10002d26 	beq	r2,zero,14d88 <strchr+0xe4>
   14cd4:	18804a26 	beq	r3,r2,14e00 <strchr+0x15c>
   14cd8:	21000044 	addi	r4,r4,1
   14cdc:	208000cc 	andi	r2,r4,3
   14ce0:	103ffa1e 	bne	r2,zero,14ccc <_gp+0xfffee324>
   14ce4:	29403fcc 	andi	r5,r5,255
   14ce8:	2814923a 	slli	r10,r5,8
   14cec:	20800017 	ldw	r2,0(r4)
   14cf0:	01bfbff4 	movhi	r6,65279
   14cf4:	2a8ab03a 	or	r5,r5,r10
   14cf8:	2814943a 	slli	r10,r5,16
   14cfc:	31bfbfc4 	addi	r6,r6,-257
   14d00:	119b883a 	add	r13,r2,r6
   14d04:	5154b03a 	or	r10,r10,r5
   14d08:	008e303a 	nor	r7,zero,r2
   14d0c:	5084f03a 	xor	r2,r10,r2
   14d10:	1191883a 	add	r8,r2,r6
   14d14:	0086303a 	nor	r3,zero,r2
   14d18:	03202074 	movhi	r12,32897
   14d1c:	69ca703a 	and	r5,r13,r7
   14d20:	40c4703a 	and	r2,r8,r3
   14d24:	63202004 	addi	r12,r12,-32640
   14d28:	2884b03a 	or	r2,r5,r2
   14d2c:	1304703a 	and	r2,r2,r12
   14d30:	10000c1e 	bne	r2,zero,14d64 <strchr+0xc0>
   14d34:	21000104 	addi	r4,r4,4
   14d38:	20c00017 	ldw	r3,0(r4)
   14d3c:	50c4f03a 	xor	r2,r10,r3
   14d40:	1991883a 	add	r8,r3,r6
   14d44:	00ca303a 	nor	r5,zero,r3
   14d48:	118f883a 	add	r7,r2,r6
   14d4c:	0086303a 	nor	r3,zero,r2
   14d50:	414a703a 	and	r5,r8,r5
   14d54:	38c4703a 	and	r2,r7,r3
   14d58:	2884b03a 	or	r2,r5,r2
   14d5c:	1304703a 	and	r2,r2,r12
   14d60:	103ff426 	beq	r2,zero,14d34 <_gp+0xfffee38c>
   14d64:	20800003 	ldbu	r2,0(r4)
   14d68:	10000726 	beq	r2,zero,14d88 <strchr+0xe4>
   14d6c:	58802426 	beq	r11,r2,14e00 <strchr+0x15c>
   14d70:	48c03fcc 	andi	r3,r9,255
   14d74:	00000106 	br	14d7c <strchr+0xd8>
   14d78:	18802126 	beq	r3,r2,14e00 <strchr+0x15c>
   14d7c:	21000044 	addi	r4,r4,1
   14d80:	20800003 	ldbu	r2,0(r4)
   14d84:	103ffc1e 	bne	r2,zero,14d78 <_gp+0xfffee3d0>
   14d88:	0005883a 	mov	r2,zero
   14d8c:	f800283a 	ret
   14d90:	10000526 	beq	r2,zero,14da8 <strchr+0x104>
   14d94:	20800003 	ldbu	r2,0(r4)
   14d98:	10001926 	beq	r2,zero,14e00 <strchr+0x15c>
   14d9c:	21000044 	addi	r4,r4,1
   14da0:	208000cc 	andi	r2,r4,3
   14da4:	103ffb1e 	bne	r2,zero,14d94 <_gp+0xfffee3ec>
   14da8:	20800017 	ldw	r2,0(r4)
   14dac:	01bfbff4 	movhi	r6,65279
   14db0:	31bfbfc4 	addi	r6,r6,-257
   14db4:	0086303a 	nor	r3,zero,r2
   14db8:	01602074 	movhi	r5,32897
   14dbc:	1185883a 	add	r2,r2,r6
   14dc0:	29602004 	addi	r5,r5,-32640
   14dc4:	10c4703a 	and	r2,r2,r3
   14dc8:	1144703a 	and	r2,r2,r5
   14dcc:	1000071e 	bne	r2,zero,14dec <strchr+0x148>
   14dd0:	21000104 	addi	r4,r4,4
   14dd4:	20800017 	ldw	r2,0(r4)
   14dd8:	1187883a 	add	r3,r2,r6
   14ddc:	0084303a 	nor	r2,zero,r2
   14de0:	1884703a 	and	r2,r3,r2
   14de4:	1144703a 	and	r2,r2,r5
   14de8:	103ff926 	beq	r2,zero,14dd0 <_gp+0xfffee428>
   14dec:	20800003 	ldbu	r2,0(r4)
   14df0:	10000326 	beq	r2,zero,14e00 <strchr+0x15c>
   14df4:	21000044 	addi	r4,r4,1
   14df8:	20800003 	ldbu	r2,0(r4)
   14dfc:	103ffd1e 	bne	r2,zero,14df4 <_gp+0xfffee44c>
   14e00:	2005883a 	mov	r2,r4
   14e04:	f800283a 	ret

00014e08 <strcpy>:
   14e08:	2906b03a 	or	r3,r5,r4
   14e0c:	18c000cc 	andi	r3,r3,3
   14e10:	2005883a 	mov	r2,r4
   14e14:	1800161e 	bne	r3,zero,14e70 <strcpy+0x68>
   14e18:	29c00017 	ldw	r7,0(r5)
   14e1c:	02ffbff4 	movhi	r11,65279
   14e20:	5affbfc4 	addi	r11,r11,-257
   14e24:	02a02074 	movhi	r10,32897
   14e28:	01c6303a 	nor	r3,zero,r7
   14e2c:	3ac9883a 	add	r4,r7,r11
   14e30:	52a02004 	addi	r10,r10,-32640
   14e34:	20c6703a 	and	r3,r4,r3
   14e38:	1a86703a 	and	r3,r3,r10
   14e3c:	18000c1e 	bne	r3,zero,14e70 <strcpy+0x68>
   14e40:	1011883a 	mov	r8,r2
   14e44:	41c00015 	stw	r7,0(r8)
   14e48:	29400104 	addi	r5,r5,4
   14e4c:	29c00017 	ldw	r7,0(r5)
   14e50:	41800104 	addi	r6,r8,4
   14e54:	3011883a 	mov	r8,r6
   14e58:	3ad3883a 	add	r9,r7,r11
   14e5c:	01c6303a 	nor	r3,zero,r7
   14e60:	48c6703a 	and	r3,r9,r3
   14e64:	1a86703a 	and	r3,r3,r10
   14e68:	183ff626 	beq	r3,zero,14e44 <_gp+0xfffee49c>
   14e6c:	00000106 	br	14e74 <strcpy+0x6c>
   14e70:	100d883a 	mov	r6,r2
   14e74:	28c00003 	ldbu	r3,0(r5)
   14e78:	31800044 	addi	r6,r6,1
   14e7c:	29400044 	addi	r5,r5,1
   14e80:	30ffffc5 	stb	r3,-1(r6)
   14e84:	18c03fcc 	andi	r3,r3,255
   14e88:	18c0201c 	xori	r3,r3,128
   14e8c:	18ffe004 	addi	r3,r3,-128
   14e90:	183ff81e 	bne	r3,zero,14e74 <_gp+0xfffee4cc>
   14e94:	f800283a 	ret

00014e98 <critical_factorization>:
   14e98:	02c00044 	movi	r11,1
   14e9c:	5811883a 	mov	r8,r11
   14ea0:	0013883a 	mov	r9,zero
   14ea4:	00bfffc4 	movi	r2,-1
   14ea8:	2087883a 	add	r3,r4,r2
   14eac:	1a0f883a 	add	r7,r3,r8
   14eb0:	4a07883a 	add	r3,r9,r8
   14eb4:	20d5883a 	add	r10,r4,r3
   14eb8:	1940102e 	bgeu	r3,r5,14efc <critical_factorization+0x64>
   14ebc:	52800003 	ldbu	r10,0(r10)
   14ec0:	39c00003 	ldbu	r7,0(r7)
   14ec4:	51c0042e 	bgeu	r10,r7,14ed8 <critical_factorization+0x40>
   14ec8:	1897c83a 	sub	r11,r3,r2
   14ecc:	1813883a 	mov	r9,r3
   14ed0:	02000044 	movi	r8,1
   14ed4:	003ff406 	br	14ea8 <_gp+0xfffee500>
   14ed8:	51c00526 	beq	r10,r7,14ef0 <critical_factorization+0x58>
   14edc:	02c00044 	movi	r11,1
   14ee0:	4805883a 	mov	r2,r9
   14ee4:	5811883a 	mov	r8,r11
   14ee8:	4ad3883a 	add	r9,r9,r11
   14eec:	003fee06 	br	14ea8 <_gp+0xfffee500>
   14ef0:	42c02226 	beq	r8,r11,14f7c <critical_factorization+0xe4>
   14ef4:	42000044 	addi	r8,r8,1
   14ef8:	003feb06 	br	14ea8 <_gp+0xfffee500>
   14efc:	03000044 	movi	r12,1
   14f00:	32c00015 	stw	r11,0(r6)
   14f04:	6011883a 	mov	r8,r12
   14f08:	0013883a 	mov	r9,zero
   14f0c:	02ffffc4 	movi	r11,-1
   14f10:	22c7883a 	add	r3,r4,r11
   14f14:	1a0f883a 	add	r7,r3,r8
   14f18:	4a07883a 	add	r3,r9,r8
   14f1c:	20d5883a 	add	r10,r4,r3
   14f20:	1940102e 	bgeu	r3,r5,14f64 <critical_factorization+0xcc>
   14f24:	52800003 	ldbu	r10,0(r10)
   14f28:	39c00003 	ldbu	r7,0(r7)
   14f2c:	3a80042e 	bgeu	r7,r10,14f40 <critical_factorization+0xa8>
   14f30:	1ad9c83a 	sub	r12,r3,r11
   14f34:	1813883a 	mov	r9,r3
   14f38:	02000044 	movi	r8,1
   14f3c:	003ff406 	br	14f10 <_gp+0xfffee568>
   14f40:	51c00526 	beq	r10,r7,14f58 <critical_factorization+0xc0>
   14f44:	03000044 	movi	r12,1
   14f48:	4817883a 	mov	r11,r9
   14f4c:	6011883a 	mov	r8,r12
   14f50:	4b13883a 	add	r9,r9,r12
   14f54:	003fee06 	br	14f10 <_gp+0xfffee568>
   14f58:	43000c26 	beq	r8,r12,14f8c <critical_factorization+0xf4>
   14f5c:	42000044 	addi	r8,r8,1
   14f60:	003feb06 	br	14f10 <_gp+0xfffee568>
   14f64:	5ac00044 	addi	r11,r11,1
   14f68:	10800044 	addi	r2,r2,1
   14f6c:	58800236 	bltu	r11,r2,14f78 <critical_factorization+0xe0>
   14f70:	33000015 	stw	r12,0(r6)
   14f74:	5805883a 	mov	r2,r11
   14f78:	f800283a 	ret
   14f7c:	4017883a 	mov	r11,r8
   14f80:	1813883a 	mov	r9,r3
   14f84:	02000044 	movi	r8,1
   14f88:	003fc706 	br	14ea8 <_gp+0xfffee500>
   14f8c:	4019883a 	mov	r12,r8
   14f90:	1813883a 	mov	r9,r3
   14f94:	02000044 	movi	r8,1
   14f98:	003fdd06 	br	14f10 <_gp+0xfffee568>

00014f9c <two_way_long_needle>:
   14f9c:	defef104 	addi	sp,sp,-1084
   14fa0:	dc810715 	stw	r18,1052(sp)
   14fa4:	dc410615 	stw	r17,1048(sp)
   14fa8:	dc810004 	addi	r18,sp,1024
   14fac:	3023883a 	mov	r17,r6
   14fb0:	2807883a 	mov	r3,r5
   14fb4:	ddc10c15 	stw	r23,1072(sp)
   14fb8:	900d883a 	mov	r6,r18
   14fbc:	202f883a 	mov	r23,r4
   14fc0:	380b883a 	mov	r5,r7
   14fc4:	8809883a 	mov	r4,r17
   14fc8:	dd810b15 	stw	r22,1068(sp)
   14fcc:	dc010515 	stw	r16,1044(sp)
   14fd0:	d8c10415 	stw	r3,1040(sp)
   14fd4:	dfc10e15 	stw	ra,1080(sp)
   14fd8:	df010d15 	stw	fp,1076(sp)
   14fdc:	dd410a15 	stw	r21,1064(sp)
   14fe0:	dd010915 	stw	r20,1060(sp)
   14fe4:	dcc10815 	stw	r19,1056(sp)
   14fe8:	382d883a 	mov	r22,r7
   14fec:	0014e980 	call	14e98 <critical_factorization>
   14ff0:	d8c10417 	ldw	r3,1040(sp)
   14ff4:	1021883a 	mov	r16,r2
   14ff8:	d805883a 	mov	r2,sp
   14ffc:	15800015 	stw	r22,0(r2)
   15000:	10800104 	addi	r2,r2,4
   15004:	90bffd1e 	bne	r18,r2,14ffc <_gp+0xfffee654>
   15008:	b0000b26 	beq	r22,zero,15038 <two_way_long_needle+0x9c>
   1500c:	b17fffc4 	addi	r5,r22,-1
   15010:	8809883a 	mov	r4,r17
   15014:	8d8d883a 	add	r6,r17,r22
   15018:	20800003 	ldbu	r2,0(r4)
   1501c:	21000044 	addi	r4,r4,1
   15020:	1085883a 	add	r2,r2,r2
   15024:	1085883a 	add	r2,r2,r2
   15028:	d885883a 	add	r2,sp,r2
   1502c:	11400015 	stw	r5,0(r2)
   15030:	297fffc4 	addi	r5,r5,-1
   15034:	21bff81e 	bne	r4,r6,15018 <_gp+0xfffee670>
   15038:	d9410017 	ldw	r5,1024(sp)
   1503c:	800d883a 	mov	r6,r16
   15040:	8809883a 	mov	r4,r17
   15044:	894b883a 	add	r5,r17,r5
   15048:	d8c10415 	stw	r3,1040(sp)
   1504c:	001985c0 	call	1985c <memcmp>
   15050:	d8c10417 	ldw	r3,1040(sp)
   15054:	10006a1e 	bne	r2,zero,15200 <two_way_long_needle+0x264>
   15058:	84bfffc4 	addi	r18,r16,-1
   1505c:	8c85883a 	add	r2,r17,r18
   15060:	d8810215 	stw	r2,1032(sp)
   15064:	00800044 	movi	r2,1
   15068:	813fff84 	addi	r4,r16,-2
   1506c:	1405c83a 	sub	r2,r2,r16
   15070:	0029883a 	mov	r20,zero
   15074:	0039883a 	mov	fp,zero
   15078:	b57fffc4 	addi	r21,r22,-1
   1507c:	d9010115 	stw	r4,1028(sp)
   15080:	d8810315 	stw	r2,1036(sp)
   15084:	00000706 	br	150a4 <two_way_long_needle+0x108>
   15088:	a0000326 	beq	r20,zero,15098 <two_way_long_needle+0xfc>
   1508c:	d8c10017 	ldw	r3,1024(sp)
   15090:	10c0012e 	bgeu	r2,r3,15098 <two_way_long_needle+0xfc>
   15094:	b0c5c83a 	sub	r2,r22,r3
   15098:	e0b9883a 	add	fp,fp,r2
   1509c:	0029883a 	mov	r20,zero
   150a0:	9807883a 	mov	r3,r19
   150a4:	e5a7883a 	add	r19,fp,r22
   150a8:	98cdc83a 	sub	r6,r19,r3
   150ac:	000b883a 	mov	r5,zero
   150b0:	b8c9883a 	add	r4,r23,r3
   150b4:	00197780 	call	19778 <memchr>
   150b8:	1000441e 	bne	r2,zero,151cc <two_way_long_needle+0x230>
   150bc:	98004326 	beq	r19,zero,151cc <two_way_long_needle+0x230>
   150c0:	bcc5883a 	add	r2,r23,r19
   150c4:	10bfffc3 	ldbu	r2,-1(r2)
   150c8:	1085883a 	add	r2,r2,r2
   150cc:	1085883a 	add	r2,r2,r2
   150d0:	d885883a 	add	r2,sp,r2
   150d4:	10800017 	ldw	r2,0(r2)
   150d8:	103feb1e 	bne	r2,zero,15088 <_gp+0xfffee6e0>
   150dc:	a015883a 	mov	r10,r20
   150e0:	a400012e 	bgeu	r20,r16,150e8 <two_way_long_needle+0x14c>
   150e4:	8015883a 	mov	r10,r16
   150e8:	5540152e 	bgeu	r10,r21,15140 <two_way_long_needle+0x1a4>
   150ec:	bf05883a 	add	r2,r23,fp
   150f0:	8a87883a 	add	r3,r17,r10
   150f4:	1285883a 	add	r2,r2,r10
   150f8:	18c00003 	ldbu	r3,0(r3)
   150fc:	10800003 	ldbu	r2,0(r2)
   15100:	18802d1e 	bne	r3,r2,151b8 <two_way_long_needle+0x21c>
   15104:	e1400044 	addi	r5,fp,1
   15108:	50800044 	addi	r2,r10,1
   1510c:	2a8b883a 	add	r5,r5,r10
   15110:	888d883a 	add	r6,r17,r2
   15114:	b94b883a 	add	r5,r23,r5
   15118:	00000706 	br	15138 <two_way_long_needle+0x19c>
   1511c:	31000003 	ldbu	r4,0(r6)
   15120:	28c00003 	ldbu	r3,0(r5)
   15124:	31800044 	addi	r6,r6,1
   15128:	21003fcc 	andi	r4,r4,255
   1512c:	29400044 	addi	r5,r5,1
   15130:	20c0211e 	bne	r4,r3,151b8 <two_way_long_needle+0x21c>
   15134:	10800044 	addi	r2,r2,1
   15138:	1015883a 	mov	r10,r2
   1513c:	157ff736 	bltu	r2,r21,1511c <_gp+0xfffee774>
   15140:	900d883a 	mov	r6,r18
   15144:	a4007d2e 	bgeu	r20,r16,1533c <two_way_long_needle+0x3a0>
   15148:	d9410217 	ldw	r5,1032(sp)
   1514c:	bf05883a 	add	r2,r23,fp
   15150:	1485883a 	add	r2,r2,r18
   15154:	28c00003 	ldbu	r3,0(r5)
   15158:	10800003 	ldbu	r2,0(r2)
   1515c:	1880771e 	bne	r3,r2,1533c <two_way_long_needle+0x3a0>
   15160:	d8c10117 	ldw	r3,1028(sp)
   15164:	a2ffffc4 	addi	r11,r20,-1
   15168:	8ad7883a 	add	r11,r17,r11
   1516c:	e0cb883a 	add	r5,fp,r3
   15170:	88c5883a 	add	r2,r17,r3
   15174:	b94b883a 	add	r5,r23,r5
   15178:	00000706 	br	15198 <two_way_long_needle+0x1fc>
   1517c:	11000003 	ldbu	r4,0(r2)
   15180:	28c00003 	ldbu	r3,0(r5)
   15184:	10bfffc4 	addi	r2,r2,-1
   15188:	21003fcc 	andi	r4,r4,255
   1518c:	297fffc4 	addi	r5,r5,-1
   15190:	20c0031e 	bne	r4,r3,151a0 <two_way_long_needle+0x204>
   15194:	500d883a 	mov	r6,r10
   15198:	32bfffc4 	addi	r10,r6,-1
   1519c:	58bff71e 	bne	r11,r2,1517c <_gp+0xfffee7d4>
   151a0:	a2400044 	addi	r9,r20,1
   151a4:	32406736 	bltu	r6,r9,15344 <two_way_long_needle+0x3a8>
   151a8:	da410017 	ldw	r9,1024(sp)
   151ac:	e279883a 	add	fp,fp,r9
   151b0:	b269c83a 	sub	r20,r22,r9
   151b4:	003fba06 	br	150a0 <_gp+0xfffee6f8>
   151b8:	d8c10317 	ldw	r3,1036(sp)
   151bc:	0029883a 	mov	r20,zero
   151c0:	1f39883a 	add	fp,r3,fp
   151c4:	e2b9883a 	add	fp,fp,r10
   151c8:	003fb506 	br	150a0 <_gp+0xfffee6f8>
   151cc:	0005883a 	mov	r2,zero
   151d0:	dfc10e17 	ldw	ra,1080(sp)
   151d4:	df010d17 	ldw	fp,1076(sp)
   151d8:	ddc10c17 	ldw	r23,1072(sp)
   151dc:	dd810b17 	ldw	r22,1068(sp)
   151e0:	dd410a17 	ldw	r21,1064(sp)
   151e4:	dd010917 	ldw	r20,1060(sp)
   151e8:	dcc10817 	ldw	r19,1056(sp)
   151ec:	dc810717 	ldw	r18,1052(sp)
   151f0:	dc410617 	ldw	r17,1048(sp)
   151f4:	dc010517 	ldw	r16,1044(sp)
   151f8:	dec10f04 	addi	sp,sp,1084
   151fc:	f800283a 	ret
   15200:	b405c83a 	sub	r2,r22,r16
   15204:	14004b36 	bltu	r2,r16,15334 <two_way_long_needle+0x398>
   15208:	10800044 	addi	r2,r2,1
   1520c:	84bfffc4 	addi	r18,r16,-1
   15210:	d8810015 	stw	r2,1024(sp)
   15214:	00800044 	movi	r2,1
   15218:	8c89883a 	add	r4,r17,r18
   1521c:	817fff84 	addi	r5,r16,-2
   15220:	1405c83a 	sub	r2,r2,r16
   15224:	0029883a 	mov	r20,zero
   15228:	b73fffc4 	addi	fp,r22,-1
   1522c:	d9010215 	stw	r4,1032(sp)
   15230:	d9410115 	stw	r5,1028(sp)
   15234:	8d7fffc4 	addi	r21,r17,-1
   15238:	d8810315 	stw	r2,1036(sp)
   1523c:	a5a7883a 	add	r19,r20,r22
   15240:	98cdc83a 	sub	r6,r19,r3
   15244:	000b883a 	mov	r5,zero
   15248:	b8c9883a 	add	r4,r23,r3
   1524c:	00197780 	call	19778 <memchr>
   15250:	103fde1e 	bne	r2,zero,151cc <_gp+0xfffee824>
   15254:	983fdd26 	beq	r19,zero,151cc <_gp+0xfffee824>
   15258:	bcc5883a 	add	r2,r23,r19
   1525c:	10bfffc3 	ldbu	r2,-1(r2)
   15260:	1085883a 	add	r2,r2,r2
   15264:	1085883a 	add	r2,r2,r2
   15268:	d885883a 	add	r2,sp,r2
   1526c:	10800017 	ldw	r2,0(r2)
   15270:	1000291e 	bne	r2,zero,15318 <two_way_long_needle+0x37c>
   15274:	bd05883a 	add	r2,r23,r20
   15278:	8700142e 	bgeu	r16,fp,152cc <two_way_long_needle+0x330>
   1527c:	8c07883a 	add	r3,r17,r16
   15280:	140b883a 	add	r5,r2,r16
   15284:	19000003 	ldbu	r4,0(r3)
   15288:	28c00003 	ldbu	r3,0(r5)
   1528c:	800d883a 	mov	r6,r16
   15290:	20c0241e 	bne	r4,r3,15324 <two_way_long_needle+0x388>
   15294:	81400044 	addi	r5,r16,1
   15298:	a155883a 	add	r10,r20,r5
   1529c:	ba95883a 	add	r10,r23,r10
   152a0:	894b883a 	add	r5,r17,r5
   152a4:	800d883a 	mov	r6,r16
   152a8:	00000606 	br	152c4 <two_way_long_needle+0x328>
   152ac:	29000003 	ldbu	r4,0(r5)
   152b0:	50c00003 	ldbu	r3,0(r10)
   152b4:	29400044 	addi	r5,r5,1
   152b8:	21003fcc 	andi	r4,r4,255
   152bc:	52800044 	addi	r10,r10,1
   152c0:	20c0181e 	bne	r4,r3,15324 <two_way_long_needle+0x388>
   152c4:	31800044 	addi	r6,r6,1
   152c8:	373ff836 	bltu	r6,fp,152ac <_gp+0xfffee904>
   152cc:	00ffffc4 	movi	r3,-1
   152d0:	90ffbf26 	beq	r18,r3,151d0 <_gp+0xfffee828>
   152d4:	d9410217 	ldw	r5,1032(sp)
   152d8:	1487883a 	add	r3,r2,r18
   152dc:	18c00003 	ldbu	r3,0(r3)
   152e0:	29000003 	ldbu	r4,0(r5)
   152e4:	20c00b1e 	bne	r4,r3,15314 <two_way_long_needle+0x378>
   152e8:	d8c10117 	ldw	r3,1028(sp)
   152ec:	a0cd883a 	add	r6,r20,r3
   152f0:	b98d883a 	add	r6,r23,r6
   152f4:	88c7883a 	add	r3,r17,r3
   152f8:	1d7fb526 	beq	r3,r21,151d0 <_gp+0xfffee828>
   152fc:	19400003 	ldbu	r5,0(r3)
   15300:	31000003 	ldbu	r4,0(r6)
   15304:	18ffffc4 	addi	r3,r3,-1
   15308:	29403fcc 	andi	r5,r5,255
   1530c:	31bfffc4 	addi	r6,r6,-1
   15310:	293ff926 	beq	r5,r4,152f8 <_gp+0xfffee950>
   15314:	d8810017 	ldw	r2,1024(sp)
   15318:	a0a9883a 	add	r20,r20,r2
   1531c:	9807883a 	mov	r3,r19
   15320:	003fc606 	br	1523c <_gp+0xfffee894>
   15324:	d8c10317 	ldw	r3,1036(sp)
   15328:	1d11883a 	add	r8,r3,r20
   1532c:	41a9883a 	add	r20,r8,r6
   15330:	003ffa06 	br	1531c <_gp+0xfffee974>
   15334:	8005883a 	mov	r2,r16
   15338:	003fb306 	br	15208 <_gp+0xfffee860>
   1533c:	800d883a 	mov	r6,r16
   15340:	003f9706 	br	151a0 <_gp+0xfffee7f8>
   15344:	bf05883a 	add	r2,r23,fp
   15348:	003fa106 	br	151d0 <_gp+0xfffee828>

0001534c <strstr>:
   1534c:	21800007 	ldb	r6,0(r4)
   15350:	30009226 	beq	r6,zero,1559c <strstr+0x250>
   15354:	28c00007 	ldb	r3,0(r5)
   15358:	18000f26 	beq	r3,zero,15398 <strstr+0x4c>
   1535c:	280f883a 	mov	r7,r5
   15360:	2011883a 	mov	r8,r4
   15364:	02400044 	movi	r9,1
   15368:	00000206 	br	15374 <strstr+0x28>
   1536c:	38c00007 	ldb	r3,0(r7)
   15370:	18000826 	beq	r3,zero,15394 <strstr+0x48>
   15374:	42000044 	addi	r8,r8,1
   15378:	1987003a 	cmpeq	r3,r3,r6
   1537c:	41800007 	ldb	r6,0(r8)
   15380:	39c00044 	addi	r7,r7,1
   15384:	48d2703a 	and	r9,r9,r3
   15388:	303ff81e 	bne	r6,zero,1536c <_gp+0xfffee9c4>
   1538c:	38800007 	ldb	r2,0(r7)
   15390:	1000841e 	bne	r2,zero,155a4 <strstr+0x258>
   15394:	48000226 	beq	r9,zero,153a0 <strstr+0x54>
   15398:	2005883a 	mov	r2,r4
   1539c:	f800283a 	ret
   153a0:	defff104 	addi	sp,sp,-60
   153a4:	ddc00c15 	stw	r23,48(sp)
   153a8:	dd800b15 	stw	r22,44(sp)
   153ac:	dd400a15 	stw	r21,40(sp)
   153b0:	dc000515 	stw	r16,20(sp)
   153b4:	dfc00e15 	stw	ra,56(sp)
   153b8:	df000d15 	stw	fp,52(sp)
   153bc:	dd000915 	stw	r20,36(sp)
   153c0:	dcc00815 	stw	r19,32(sp)
   153c4:	dc800715 	stw	r18,28(sp)
   153c8:	dc400615 	stw	r17,24(sp)
   153cc:	282d883a 	mov	r22,r5
   153d0:	29400007 	ldb	r5,0(r5)
   153d4:	202b883a 	mov	r21,r4
   153d8:	21000044 	addi	r4,r4,1
   153dc:	3da1c83a 	sub	r16,r7,r22
   153e0:	0014ca40 	call	14ca4 <strchr>
   153e4:	102f883a 	mov	r23,r2
   153e8:	10007526 	beq	r2,zero,155c0 <strstr+0x274>
   153ec:	00c00044 	movi	r3,1
   153f0:	80c00a26 	beq	r16,r3,1541c <strstr+0xd0>
   153f4:	ac09883a 	add	r4,r21,r16
   153f8:	20800136 	bltu	r4,r2,15400 <strstr+0xb4>
   153fc:	2087c83a 	sub	r3,r4,r2
   15400:	008007c4 	movi	r2,31
   15404:	1400112e 	bgeu	r2,r16,1544c <strstr+0x100>
   15408:	800f883a 	mov	r7,r16
   1540c:	b00d883a 	mov	r6,r22
   15410:	180b883a 	mov	r5,r3
   15414:	b809883a 	mov	r4,r23
   15418:	0014f9c0 	call	14f9c <two_way_long_needle>
   1541c:	dfc00e17 	ldw	ra,56(sp)
   15420:	df000d17 	ldw	fp,52(sp)
   15424:	ddc00c17 	ldw	r23,48(sp)
   15428:	dd800b17 	ldw	r22,44(sp)
   1542c:	dd400a17 	ldw	r21,40(sp)
   15430:	dd000917 	ldw	r20,36(sp)
   15434:	dcc00817 	ldw	r19,32(sp)
   15438:	dc800717 	ldw	r18,28(sp)
   1543c:	dc400617 	ldw	r17,24(sp)
   15440:	dc000517 	ldw	r16,20(sp)
   15444:	dec00f04 	addi	sp,sp,60
   15448:	f800283a 	ret
   1544c:	d80d883a 	mov	r6,sp
   15450:	800b883a 	mov	r5,r16
   15454:	b009883a 	mov	r4,r22
   15458:	d8c00415 	stw	r3,16(sp)
   1545c:	0014e980 	call	14e98 <critical_factorization>
   15460:	d9400017 	ldw	r5,0(sp)
   15464:	100d883a 	mov	r6,r2
   15468:	b009883a 	mov	r4,r22
   1546c:	b14b883a 	add	r5,r22,r5
   15470:	1039883a 	mov	fp,r2
   15474:	001985c0 	call	1985c <memcmp>
   15478:	d8c00417 	ldw	r3,16(sp)
   1547c:	1000521e 	bne	r2,zero,155c8 <strstr+0x27c>
   15480:	e47fffc4 	addi	r17,fp,-1
   15484:	04c00044 	movi	r19,1
   15488:	b445883a 	add	r2,r22,r17
   1548c:	9f27c83a 	sub	r19,r19,fp
   15490:	0029883a 	mov	r20,zero
   15494:	002b883a 	mov	r21,zero
   15498:	d8800215 	stw	r2,8(sp)
   1549c:	e4bfff84 	addi	r18,fp,-2
   154a0:	dcc00115 	stw	r19,4(sp)
   154a4:	8567883a 	add	r19,r16,r21
   154a8:	98cdc83a 	sub	r6,r19,r3
   154ac:	000b883a 	mov	r5,zero
   154b0:	b8c9883a 	add	r4,r23,r3
   154b4:	00197780 	call	19778 <memchr>
   154b8:	1000411e 	bne	r2,zero,155c0 <strstr+0x274>
   154bc:	98004026 	beq	r19,zero,155c0 <strstr+0x274>
   154c0:	e00b883a 	mov	r5,fp
   154c4:	e500012e 	bgeu	fp,r20,154cc <strstr+0x180>
   154c8:	a00b883a 	mov	r5,r20
   154cc:	2c00152e 	bgeu	r5,r16,15524 <strstr+0x1d8>
   154d0:	b947883a 	add	r3,r23,r5
   154d4:	1d47883a 	add	r3,r3,r21
   154d8:	b145883a 	add	r2,r22,r5
   154dc:	18c00003 	ldbu	r3,0(r3)
   154e0:	10800003 	ldbu	r2,0(r2)
   154e4:	1880311e 	bne	r3,r2,155ac <strstr+0x260>
   154e8:	a8800044 	addi	r2,r21,1
   154ec:	28c00044 	addi	r3,r5,1
   154f0:	1145883a 	add	r2,r2,r5
   154f4:	b0c9883a 	add	r4,r22,r3
   154f8:	b885883a 	add	r2,r23,r2
   154fc:	00000706 	br	1551c <strstr+0x1d0>
   15500:	21c00003 	ldbu	r7,0(r4)
   15504:	11800003 	ldbu	r6,0(r2)
   15508:	21000044 	addi	r4,r4,1
   1550c:	39c03fcc 	andi	r7,r7,255
   15510:	10800044 	addi	r2,r2,1
   15514:	3980251e 	bne	r7,r6,155ac <strstr+0x260>
   15518:	18c00044 	addi	r3,r3,1
   1551c:	180b883a 	mov	r5,r3
   15520:	1c3ff736 	bltu	r3,r16,15500 <_gp+0xfffeeb58>
   15524:	880d883a 	mov	r6,r17
   15528:	a700702e 	bgeu	r20,fp,156ec <strstr+0x3a0>
   1552c:	d9000217 	ldw	r4,8(sp)
   15530:	bd45883a 	add	r2,r23,r21
   15534:	1445883a 	add	r2,r2,r17
   15538:	20c00003 	ldbu	r3,0(r4)
   1553c:	10800003 	ldbu	r2,0(r2)
   15540:	18806a1e 	bne	r3,r2,156ec <strstr+0x3a0>
   15544:	954b883a 	add	r5,r18,r21
   15548:	a2bfffc4 	addi	r10,r20,-1
   1554c:	b485883a 	add	r2,r22,r18
   15550:	b94b883a 	add	r5,r23,r5
   15554:	b295883a 	add	r10,r22,r10
   15558:	00000706 	br	15578 <strstr+0x22c>
   1555c:	11000003 	ldbu	r4,0(r2)
   15560:	28c00003 	ldbu	r3,0(r5)
   15564:	10bfffc4 	addi	r2,r2,-1
   15568:	21003fcc 	andi	r4,r4,255
   1556c:	297fffc4 	addi	r5,r5,-1
   15570:	20c0031e 	bne	r4,r3,15580 <strstr+0x234>
   15574:	380d883a 	mov	r6,r7
   15578:	31ffffc4 	addi	r7,r6,-1
   1557c:	12bff71e 	bne	r2,r10,1555c <_gp+0xfffeebb4>
   15580:	a2000044 	addi	r8,r20,1
   15584:	32005b36 	bltu	r6,r8,156f4 <strstr+0x3a8>
   15588:	da000017 	ldw	r8,0(sp)
   1558c:	aa2b883a 	add	r21,r21,r8
   15590:	8229c83a 	sub	r20,r16,r8
   15594:	9807883a 	mov	r3,r19
   15598:	003fc206 	br	154a4 <_gp+0xfffeeafc>
   1559c:	28800007 	ldb	r2,0(r5)
   155a0:	103f7d26 	beq	r2,zero,15398 <_gp+0xfffee9f0>
   155a4:	0005883a 	mov	r2,zero
   155a8:	f800283a 	ret
   155ac:	d8c00117 	ldw	r3,4(sp)
   155b0:	0029883a 	mov	r20,zero
   155b4:	1d6b883a 	add	r21,r3,r21
   155b8:	a96b883a 	add	r21,r21,r5
   155bc:	003ff506 	br	15594 <_gp+0xfffeebec>
   155c0:	0005883a 	mov	r2,zero
   155c4:	003f9506 	br	1541c <_gp+0xfffeea74>
   155c8:	8705c83a 	sub	r2,r16,fp
   155cc:	1700012e 	bgeu	r2,fp,155d4 <strstr+0x288>
   155d0:	e005883a 	mov	r2,fp
   155d4:	10800044 	addi	r2,r2,1
   155d8:	e4bfffc4 	addi	r18,fp,-1
   155dc:	05000044 	movi	r20,1
   155e0:	a729c83a 	sub	r20,r20,fp
   155e4:	d8800015 	stw	r2,0(sp)
   155e8:	b48b883a 	add	r5,r22,r18
   155ec:	e0bfff84 	addi	r2,fp,-2
   155f0:	dd000215 	stw	r20,8(sp)
   155f4:	002b883a 	mov	r21,zero
   155f8:	e4400044 	addi	r17,fp,1
   155fc:	d9400315 	stw	r5,12(sp)
   15600:	d8800115 	stw	r2,4(sp)
   15604:	b53fffc4 	addi	r20,r22,-1
   15608:	8567883a 	add	r19,r16,r21
   1560c:	98cdc83a 	sub	r6,r19,r3
   15610:	000b883a 	mov	r5,zero
   15614:	b8c9883a 	add	r4,r23,r3
   15618:	00197780 	call	19778 <memchr>
   1561c:	103fe81e 	bne	r2,zero,155c0 <_gp+0xfffeec18>
   15620:	983fe726 	beq	r19,zero,155c0 <_gp+0xfffeec18>
   15624:	e400132e 	bgeu	fp,r16,15674 <strstr+0x328>
   15628:	bf07883a 	add	r3,r23,fp
   1562c:	1d47883a 	add	r3,r3,r21
   15630:	b705883a 	add	r2,r22,fp
   15634:	18c00003 	ldbu	r3,0(r3)
   15638:	10800003 	ldbu	r2,0(r2)
   1563c:	1880241e 	bne	r3,r2,156d0 <strstr+0x384>
   15640:	ac45883a 	add	r2,r21,r17
   15644:	b44b883a 	add	r5,r22,r17
   15648:	b885883a 	add	r2,r23,r2
   1564c:	e009883a 	mov	r4,fp
   15650:	00000606 	br	1566c <strstr+0x320>
   15654:	29800003 	ldbu	r6,0(r5)
   15658:	10c00003 	ldbu	r3,0(r2)
   1565c:	29400044 	addi	r5,r5,1
   15660:	31803fcc 	andi	r6,r6,255
   15664:	10800044 	addi	r2,r2,1
   15668:	30c01a1e 	bne	r6,r3,156d4 <strstr+0x388>
   1566c:	21000044 	addi	r4,r4,1
   15670:	243ff836 	bltu	r4,r16,15654 <_gp+0xfffeecac>
   15674:	00bfffc4 	movi	r2,-1
   15678:	bd49883a 	add	r4,r23,r21
   1567c:	90801926 	beq	r18,r2,156e4 <strstr+0x398>
   15680:	d9400317 	ldw	r5,12(sp)
   15684:	2485883a 	add	r2,r4,r18
   15688:	10800003 	ldbu	r2,0(r2)
   1568c:	28c00003 	ldbu	r3,0(r5)
   15690:	18800b1e 	bne	r3,r2,156c0 <strstr+0x374>
   15694:	d8c00117 	ldw	r3,4(sp)
   15698:	a8c5883a 	add	r2,r21,r3
   1569c:	b885883a 	add	r2,r23,r2
   156a0:	b0c7883a 	add	r3,r22,r3
   156a4:	1d000f26 	beq	r3,r20,156e4 <strstr+0x398>
   156a8:	19800003 	ldbu	r6,0(r3)
   156ac:	11400003 	ldbu	r5,0(r2)
   156b0:	18ffffc4 	addi	r3,r3,-1
   156b4:	31803fcc 	andi	r6,r6,255
   156b8:	10bfffc4 	addi	r2,r2,-1
   156bc:	317ff926 	beq	r6,r5,156a4 <_gp+0xfffeecfc>
   156c0:	d8800017 	ldw	r2,0(sp)
   156c4:	a8ab883a 	add	r21,r21,r2
   156c8:	9807883a 	mov	r3,r19
   156cc:	003fce06 	br	15608 <_gp+0xfffeec60>
   156d0:	e009883a 	mov	r4,fp
   156d4:	d8c00217 	ldw	r3,8(sp)
   156d8:	1d4f883a 	add	r7,r3,r21
   156dc:	392b883a 	add	r21,r7,r4
   156e0:	003ff906 	br	156c8 <_gp+0xfffeed20>
   156e4:	2005883a 	mov	r2,r4
   156e8:	003f4c06 	br	1541c <_gp+0xfffeea74>
   156ec:	e00d883a 	mov	r6,fp
   156f0:	003fa306 	br	15580 <_gp+0xfffeebd8>
   156f4:	bd45883a 	add	r2,r23,r21
   156f8:	003f4806 	br	1541c <_gp+0xfffeea74>

000156fc <___svfprintf_internal_r>:
   156fc:	deffb704 	addi	sp,sp,-292
   15700:	dfc04815 	stw	ra,288(sp)
   15704:	ddc04615 	stw	r23,280(sp)
   15708:	d9402d15 	stw	r5,180(sp)
   1570c:	d9003915 	stw	r4,228(sp)
   15710:	302f883a 	mov	r23,r6
   15714:	d9c02e15 	stw	r7,184(sp)
   15718:	df004715 	stw	fp,284(sp)
   1571c:	dd804515 	stw	r22,276(sp)
   15720:	dd404415 	stw	r21,272(sp)
   15724:	dd004315 	stw	r20,268(sp)
   15728:	dcc04215 	stw	r19,264(sp)
   1572c:	dc804115 	stw	r18,260(sp)
   15730:	dc404015 	stw	r17,256(sp)
   15734:	dc003f15 	stw	r16,252(sp)
   15738:	00197480 	call	19748 <_localeconv_r>
   1573c:	10800017 	ldw	r2,0(r2)
   15740:	1009883a 	mov	r4,r2
   15744:	d8803415 	stw	r2,208(sp)
   15748:	001abb40 	call	1abb4 <strlen>
   1574c:	d8c02d17 	ldw	r3,180(sp)
   15750:	d8803815 	stw	r2,224(sp)
   15754:	1880030b 	ldhu	r2,12(r3)
   15758:	1080200c 	andi	r2,r2,128
   1575c:	10000226 	beq	r2,zero,15768 <___svfprintf_internal_r+0x6c>
   15760:	18800417 	ldw	r2,16(r3)
   15764:	1006b126 	beq	r2,zero,1722c <___svfprintf_internal_r+0x1b30>
   15768:	dcc03917 	ldw	r19,228(sp)
   1576c:	d8c00404 	addi	r3,sp,16
   15770:	054000b4 	movhi	r21,2
   15774:	d9001e04 	addi	r4,sp,120
   15778:	ad77bc84 	addi	r21,r21,-8462
   1577c:	d8c01e15 	stw	r3,120(sp)
   15780:	d8002015 	stw	zero,128(sp)
   15784:	d8001f15 	stw	zero,124(sp)
   15788:	d8003315 	stw	zero,204(sp)
   1578c:	d8003615 	stw	zero,216(sp)
   15790:	d8003715 	stw	zero,220(sp)
   15794:	1811883a 	mov	r8,r3
   15798:	d8003a15 	stw	zero,232(sp)
   1579c:	d8003b15 	stw	zero,236(sp)
   157a0:	d8002f15 	stw	zero,188(sp)
   157a4:	d9002815 	stw	r4,160(sp)
   157a8:	b8800007 	ldb	r2,0(r23)
   157ac:	10027726 	beq	r2,zero,1618c <___svfprintf_internal_r+0xa90>
   157b0:	00c00944 	movi	r3,37
   157b4:	b823883a 	mov	r17,r23
   157b8:	10c0021e 	bne	r2,r3,157c4 <___svfprintf_internal_r+0xc8>
   157bc:	00001406 	br	15810 <___svfprintf_internal_r+0x114>
   157c0:	10c00326 	beq	r2,r3,157d0 <___svfprintf_internal_r+0xd4>
   157c4:	8c400044 	addi	r17,r17,1
   157c8:	88800007 	ldb	r2,0(r17)
   157cc:	103ffc1e 	bne	r2,zero,157c0 <_gp+0xfffeee18>
   157d0:	8de1c83a 	sub	r16,r17,r23
   157d4:	80000e26 	beq	r16,zero,15810 <___svfprintf_internal_r+0x114>
   157d8:	d8c02017 	ldw	r3,128(sp)
   157dc:	d8801f17 	ldw	r2,124(sp)
   157e0:	45c00015 	stw	r23,0(r8)
   157e4:	1c07883a 	add	r3,r3,r16
   157e8:	10800044 	addi	r2,r2,1
   157ec:	d8c02015 	stw	r3,128(sp)
   157f0:	44000115 	stw	r16,4(r8)
   157f4:	d8801f15 	stw	r2,124(sp)
   157f8:	00c001c4 	movi	r3,7
   157fc:	18809916 	blt	r3,r2,15a64 <___svfprintf_internal_r+0x368>
   15800:	42000204 	addi	r8,r8,8
   15804:	d9402f17 	ldw	r5,188(sp)
   15808:	2c0b883a 	add	r5,r5,r16
   1580c:	d9402f15 	stw	r5,188(sp)
   15810:	88800007 	ldb	r2,0(r17)
   15814:	10009a26 	beq	r2,zero,15a80 <___svfprintf_internal_r+0x384>
   15818:	8dc00044 	addi	r23,r17,1
   1581c:	8c400047 	ldb	r17,1(r17)
   15820:	0021883a 	mov	r16,zero
   15824:	00bfffc4 	movi	r2,-1
   15828:	0025883a 	mov	r18,zero
   1582c:	dc002905 	stb	r16,164(sp)
   15830:	d8002785 	stb	zero,158(sp)
   15834:	d8002b05 	stb	zero,172(sp)
   15838:	d8802a15 	stw	r2,168(sp)
   1583c:	d8003115 	stw	zero,196(sp)
   15840:	05001604 	movi	r20,88
   15844:	05800244 	movi	r22,9
   15848:	4039883a 	mov	fp,r8
   1584c:	9021883a 	mov	r16,r18
   15850:	bdc00044 	addi	r23,r23,1
   15854:	88bff804 	addi	r2,r17,-32
   15858:	a0831e36 	bltu	r20,r2,164d4 <___svfprintf_internal_r+0xdd8>
   1585c:	100490ba 	slli	r2,r2,2
   15860:	00c00074 	movhi	r3,1
   15864:	18d61d04 	addi	r3,r3,22644
   15868:	10c5883a 	add	r2,r2,r3
   1586c:	10800017 	ldw	r2,0(r2)
   15870:	1000683a 	jmp	r2
   15874:	0001641c 	xori	zero,zero,1424
   15878:	000164d4 	movui	zero,1427
   1587c:	000164d4 	movui	zero,1427
   15880:	00016410 	cmplti	zero,zero,1424
   15884:	000164d4 	movui	zero,1427
   15888:	000164d4 	movui	zero,1427
   1588c:	000164d4 	movui	zero,1427
   15890:	000164d4 	movui	zero,1427
   15894:	000164d4 	movui	zero,1427
   15898:	000164d4 	movui	zero,1427
   1589c:	00015adc 	xori	zero,zero,1387
   158a0:	00016320 	cmpeqi	zero,zero,1420
   158a4:	000164d4 	movui	zero,1427
   158a8:	000159e8 	cmpgeui	zero,zero,1383
   158ac:	00015b00 	call	15b0 <__alt_mem_onchip_memory-0xea50>
   158b0:	000164d4 	movui	zero,1427
   158b4:	00015b8c 	andi	zero,zero,1390
   158b8:	00015b50 	cmplti	zero,zero,1389
   158bc:	00015b50 	cmplti	zero,zero,1389
   158c0:	00015b50 	cmplti	zero,zero,1389
   158c4:	00015b50 	cmplti	zero,zero,1389
   158c8:	00015b50 	cmplti	zero,zero,1389
   158cc:	00015b50 	cmplti	zero,zero,1389
   158d0:	00015b50 	cmplti	zero,zero,1389
   158d4:	00015b50 	cmplti	zero,zero,1389
   158d8:	00015b50 	cmplti	zero,zero,1389
   158dc:	000164d4 	movui	zero,1427
   158e0:	000164d4 	movui	zero,1427
   158e4:	000164d4 	movui	zero,1427
   158e8:	000164d4 	movui	zero,1427
   158ec:	000164d4 	movui	zero,1427
   158f0:	000164d4 	movui	zero,1427
   158f4:	000164d4 	movui	zero,1427
   158f8:	000164d4 	movui	zero,1427
   158fc:	000164d4 	movui	zero,1427
   15900:	000164d4 	movui	zero,1427
   15904:	00015c50 	cmplti	zero,zero,1393
   15908:	00015b98 	cmpnei	zero,zero,1390
   1590c:	000164d4 	movui	zero,1427
   15910:	00015b98 	cmpnei	zero,zero,1390
   15914:	000164d4 	movui	zero,1427
   15918:	000164d4 	movui	zero,1427
   1591c:	000164d4 	movui	zero,1427
   15920:	000164d4 	movui	zero,1427
   15924:	00015c44 	movi	zero,1393
   15928:	000164d4 	movui	zero,1427
   1592c:	000164d4 	movui	zero,1427
   15930:	00015d18 	cmpnei	zero,zero,1396
   15934:	000164d4 	movui	zero,1427
   15938:	000164d4 	movui	zero,1427
   1593c:	000164d4 	movui	zero,1427
   15940:	000164d4 	movui	zero,1427
   15944:	000164d4 	movui	zero,1427
   15948:	00016194 	movui	zero,1414
   1594c:	000164d4 	movui	zero,1427
   15950:	000164d4 	movui	zero,1427
   15954:	00016200 	call	1620 <__alt_mem_onchip_memory-0xe9e0>
   15958:	000164d4 	movui	zero,1427
   1595c:	000164d4 	movui	zero,1427
   15960:	000164d4 	movui	zero,1427
   15964:	000164d4 	movui	zero,1427
   15968:	000164d4 	movui	zero,1427
   1596c:	000164d4 	movui	zero,1427
   15970:	000164d4 	movui	zero,1427
   15974:	000164d4 	movui	zero,1427
   15978:	000164d4 	movui	zero,1427
   1597c:	000164d4 	movui	zero,1427
   15980:	000162bc 	xorhi	zero,zero,1418
   15984:	0001643c 	xorhi	zero,zero,1424
   15988:	00015b98 	cmpnei	zero,zero,1390
   1598c:	00015b98 	cmpnei	zero,zero,1390
   15990:	00015b98 	cmpnei	zero,zero,1390
   15994:	000164b0 	cmpltui	zero,zero,1426
   15998:	0001643c 	xorhi	zero,zero,1424
   1599c:	000164d4 	movui	zero,1427
   159a0:	000164d4 	movui	zero,1427
   159a4:	0001645c 	xori	zero,zero,1425
   159a8:	000164d4 	movui	zero,1427
   159ac:	00016470 	cmpltui	zero,zero,1425
   159b0:	00016300 	call	1630 <__alt_mem_onchip_memory-0xe9d0>
   159b4:	000159f4 	movhi	zero,1383
   159b8:	00016338 	rdprs	zero,zero,1420
   159bc:	000164d4 	movui	zero,1427
   159c0:	00016344 	movi	zero,1421
   159c4:	000164d4 	movui	zero,1427
   159c8:	000163a8 	cmpgeui	zero,zero,1422
   159cc:	000164d4 	movui	zero,1427
   159d0:	000164d4 	movui	zero,1427
   159d4:	000163c8 	cmpgei	zero,zero,1423
   159d8:	d8c03117 	ldw	r3,196(sp)
   159dc:	d8802e15 	stw	r2,184(sp)
   159e0:	00c7c83a 	sub	r3,zero,r3
   159e4:	d8c03115 	stw	r3,196(sp)
   159e8:	84000114 	ori	r16,r16,4
   159ec:	bc400007 	ldb	r17,0(r23)
   159f0:	003f9706 	br	15850 <_gp+0xfffeeea8>
   159f4:	00800c04 	movi	r2,48
   159f8:	d8802705 	stb	r2,156(sp)
   159fc:	00801e04 	movi	r2,120
   15a00:	d8802745 	stb	r2,157(sp)
   15a04:	d9002a17 	ldw	r4,168(sp)
   15a08:	d8802e17 	ldw	r2,184(sp)
   15a0c:	d8002785 	stb	zero,158(sp)
   15a10:	e011883a 	mov	r8,fp
   15a14:	10c00104 	addi	r3,r2,4
   15a18:	15000017 	ldw	r20,0(r2)
   15a1c:	002d883a 	mov	r22,zero
   15a20:	80800094 	ori	r2,r16,2
   15a24:	2002b616 	blt	r4,zero,16500 <___svfprintf_internal_r+0xe04>
   15a28:	00bfdfc4 	movi	r2,-129
   15a2c:	80a4703a 	and	r18,r16,r2
   15a30:	d8c02e15 	stw	r3,184(sp)
   15a34:	94800094 	ori	r18,r18,2
   15a38:	a002a01e 	bne	r20,zero,164bc <___svfprintf_internal_r+0xdc0>
   15a3c:	014000b4 	movhi	r5,2
   15a40:	2977b504 	addi	r5,r5,-8492
   15a44:	d9403a15 	stw	r5,232(sp)
   15a48:	04401e04 	movi	r17,120
   15a4c:	d8c02a17 	ldw	r3,168(sp)
   15a50:	0039883a 	mov	fp,zero
   15a54:	1801e626 	beq	r3,zero,161f0 <___svfprintf_internal_r+0xaf4>
   15a58:	0029883a 	mov	r20,zero
   15a5c:	002d883a 	mov	r22,zero
   15a60:	00020506 	br	16278 <___svfprintf_internal_r+0xb7c>
   15a64:	d9402d17 	ldw	r5,180(sp)
   15a68:	d9801e04 	addi	r6,sp,120
   15a6c:	9809883a 	mov	r4,r19
   15a70:	001ac4c0 	call	1ac4c <__ssprint_r>
   15a74:	1000081e 	bne	r2,zero,15a98 <___svfprintf_internal_r+0x39c>
   15a78:	da000404 	addi	r8,sp,16
   15a7c:	003f6106 	br	15804 <_gp+0xfffeee5c>
   15a80:	d8802017 	ldw	r2,128(sp)
   15a84:	10000426 	beq	r2,zero,15a98 <___svfprintf_internal_r+0x39c>
   15a88:	d9402d17 	ldw	r5,180(sp)
   15a8c:	d9003917 	ldw	r4,228(sp)
   15a90:	d9801e04 	addi	r6,sp,120
   15a94:	001ac4c0 	call	1ac4c <__ssprint_r>
   15a98:	d8802d17 	ldw	r2,180(sp)
   15a9c:	10c0030b 	ldhu	r3,12(r2)
   15aa0:	d8802f17 	ldw	r2,188(sp)
   15aa4:	18c0100c 	andi	r3,r3,64
   15aa8:	1806251e 	bne	r3,zero,17340 <___svfprintf_internal_r+0x1c44>
   15aac:	dfc04817 	ldw	ra,288(sp)
   15ab0:	df004717 	ldw	fp,284(sp)
   15ab4:	ddc04617 	ldw	r23,280(sp)
   15ab8:	dd804517 	ldw	r22,276(sp)
   15abc:	dd404417 	ldw	r21,272(sp)
   15ac0:	dd004317 	ldw	r20,268(sp)
   15ac4:	dcc04217 	ldw	r19,264(sp)
   15ac8:	dc804117 	ldw	r18,260(sp)
   15acc:	dc404017 	ldw	r17,256(sp)
   15ad0:	dc003f17 	ldw	r16,252(sp)
   15ad4:	dec04904 	addi	sp,sp,292
   15ad8:	f800283a 	ret
   15adc:	d9002e17 	ldw	r4,184(sp)
   15ae0:	d9402e17 	ldw	r5,184(sp)
   15ae4:	21000017 	ldw	r4,0(r4)
   15ae8:	28800104 	addi	r2,r5,4
   15aec:	d9003115 	stw	r4,196(sp)
   15af0:	203fb916 	blt	r4,zero,159d8 <_gp+0xfffef030>
   15af4:	d8802e15 	stw	r2,184(sp)
   15af8:	bc400007 	ldb	r17,0(r23)
   15afc:	003f5406 	br	15850 <_gp+0xfffeeea8>
   15b00:	bc400007 	ldb	r17,0(r23)
   15b04:	01000a84 	movi	r4,42
   15b08:	b8c00044 	addi	r3,r23,1
   15b0c:	89076926 	beq	r17,r4,178b4 <___svfprintf_internal_r+0x21b8>
   15b10:	8cbff404 	addi	r18,r17,-48
   15b14:	b486b936 	bltu	r22,r18,175fc <___svfprintf_internal_r+0x1f00>
   15b18:	0009883a 	mov	r4,zero
   15b1c:	1823883a 	mov	r17,r3
   15b20:	01400284 	movi	r5,10
   15b24:	001411c0 	call	1411c <__mulsi3>
   15b28:	88c00007 	ldb	r3,0(r17)
   15b2c:	1489883a 	add	r4,r2,r18
   15b30:	8dc00044 	addi	r23,r17,1
   15b34:	1cbff404 	addi	r18,r3,-48
   15b38:	b823883a 	mov	r17,r23
   15b3c:	b4bff82e 	bgeu	r22,r18,15b20 <_gp+0xfffef178>
   15b40:	1823883a 	mov	r17,r3
   15b44:	20060416 	blt	r4,zero,17358 <___svfprintf_internal_r+0x1c5c>
   15b48:	d9002a15 	stw	r4,168(sp)
   15b4c:	003f4106 	br	15854 <_gp+0xfffeeeac>
   15b50:	8cbff404 	addi	r18,r17,-48
   15b54:	d8003115 	stw	zero,196(sp)
   15b58:	0009883a 	mov	r4,zero
   15b5c:	b823883a 	mov	r17,r23
   15b60:	01400284 	movi	r5,10
   15b64:	001411c0 	call	1411c <__mulsi3>
   15b68:	88c00007 	ldb	r3,0(r17)
   15b6c:	9089883a 	add	r4,r18,r2
   15b70:	bdc00044 	addi	r23,r23,1
   15b74:	1cbff404 	addi	r18,r3,-48
   15b78:	b823883a 	mov	r17,r23
   15b7c:	b4bff82e 	bgeu	r22,r18,15b60 <_gp+0xfffef1b8>
   15b80:	1823883a 	mov	r17,r3
   15b84:	d9003115 	stw	r4,196(sp)
   15b88:	003f3206 	br	15854 <_gp+0xfffeeeac>
   15b8c:	84002014 	ori	r16,r16,128
   15b90:	bc400007 	ldb	r17,0(r23)
   15b94:	003f2e06 	br	15850 <_gp+0xfffeeea8>
   15b98:	8025883a 	mov	r18,r16
   15b9c:	dc002903 	ldbu	r16,164(sp)
   15ba0:	e011883a 	mov	r8,fp
   15ba4:	84003fcc 	andi	r16,r16,255
   15ba8:	8007721e 	bne	r16,zero,17974 <___svfprintf_internal_r+0x2278>
   15bac:	9080020c 	andi	r2,r18,8
   15bb0:	1004a526 	beq	r2,zero,16e48 <___svfprintf_internal_r+0x174c>
   15bb4:	d9002e17 	ldw	r4,184(sp)
   15bb8:	d9402e17 	ldw	r5,184(sp)
   15bbc:	d8802e17 	ldw	r2,184(sp)
   15bc0:	21000017 	ldw	r4,0(r4)
   15bc4:	29400117 	ldw	r5,4(r5)
   15bc8:	10800204 	addi	r2,r2,8
   15bcc:	d9003615 	stw	r4,216(sp)
   15bd0:	d9403715 	stw	r5,220(sp)
   15bd4:	d8802e15 	stw	r2,184(sp)
   15bd8:	d9003617 	ldw	r4,216(sp)
   15bdc:	d9403717 	ldw	r5,220(sp)
   15be0:	da003e15 	stw	r8,248(sp)
   15be4:	04000044 	movi	r16,1
   15be8:	00117d80 	call	117d8 <__fpclassifyd>
   15bec:	da003e17 	ldw	r8,248(sp)
   15bf0:	1404731e 	bne	r2,r16,16dc0 <___svfprintf_internal_r+0x16c4>
   15bf4:	d9003617 	ldw	r4,216(sp)
   15bf8:	d9403717 	ldw	r5,220(sp)
   15bfc:	000d883a 	mov	r6,zero
   15c00:	000f883a 	mov	r7,zero
   15c04:	001d5180 	call	1d518 <__ledf2>
   15c08:	da003e17 	ldw	r8,248(sp)
   15c0c:	10061b16 	blt	r2,zero,1747c <___svfprintf_internal_r+0x1d80>
   15c10:	df002783 	ldbu	fp,158(sp)
   15c14:	008011c4 	movi	r2,71
   15c18:	1445810e 	bge	r2,r17,17220 <___svfprintf_internal_r+0x1b24>
   15c1c:	040000b4 	movhi	r16,2
   15c20:	8437ad04 	addi	r16,r16,-8524
   15c24:	00c000c4 	movi	r3,3
   15c28:	00bfdfc4 	movi	r2,-129
   15c2c:	d8c02915 	stw	r3,164(sp)
   15c30:	90a4703a 	and	r18,r18,r2
   15c34:	d8c02b15 	stw	r3,172(sp)
   15c38:	d8002a15 	stw	zero,168(sp)
   15c3c:	d8003215 	stw	zero,200(sp)
   15c40:	00006c06 	br	15df4 <___svfprintf_internal_r+0x6f8>
   15c44:	84000214 	ori	r16,r16,8
   15c48:	bc400007 	ldb	r17,0(r23)
   15c4c:	003f0006 	br	15850 <_gp+0xfffeeea8>
   15c50:	8025883a 	mov	r18,r16
   15c54:	dc002903 	ldbu	r16,164(sp)
   15c58:	e011883a 	mov	r8,fp
   15c5c:	84003fcc 	andi	r16,r16,255
   15c60:	80073f1e 	bne	r16,zero,17960 <___svfprintf_internal_r+0x2264>
   15c64:	94800414 	ori	r18,r18,16
   15c68:	9080080c 	andi	r2,r18,32
   15c6c:	1003bb26 	beq	r2,zero,16b5c <___svfprintf_internal_r+0x1460>
   15c70:	d9002e17 	ldw	r4,184(sp)
   15c74:	20800117 	ldw	r2,4(r4)
   15c78:	25000017 	ldw	r20,0(r4)
   15c7c:	21000204 	addi	r4,r4,8
   15c80:	d9002e15 	stw	r4,184(sp)
   15c84:	102d883a 	mov	r22,r2
   15c88:	1003bd16 	blt	r2,zero,16b80 <___svfprintf_internal_r+0x1484>
   15c8c:	d9002a17 	ldw	r4,168(sp)
   15c90:	df002783 	ldbu	fp,158(sp)
   15c94:	2003d016 	blt	r4,zero,16bd8 <___svfprintf_internal_r+0x14dc>
   15c98:	00ffdfc4 	movi	r3,-129
   15c9c:	a584b03a 	or	r2,r20,r22
   15ca0:	90e4703a 	and	r18,r18,r3
   15ca4:	10015026 	beq	r2,zero,161e8 <___svfprintf_internal_r+0xaec>
   15ca8:	b0037026 	beq	r22,zero,16a6c <___svfprintf_internal_r+0x1370>
   15cac:	dc402915 	stw	r17,164(sp)
   15cb0:	dc001e04 	addi	r16,sp,120
   15cb4:	b023883a 	mov	r17,r22
   15cb8:	402d883a 	mov	r22,r8
   15cbc:	a009883a 	mov	r4,r20
   15cc0:	880b883a 	mov	r5,r17
   15cc4:	01800284 	movi	r6,10
   15cc8:	000f883a 	mov	r7,zero
   15ccc:	001cf540 	call	1cf54 <__umoddi3>
   15cd0:	10800c04 	addi	r2,r2,48
   15cd4:	843fffc4 	addi	r16,r16,-1
   15cd8:	a009883a 	mov	r4,r20
   15cdc:	880b883a 	mov	r5,r17
   15ce0:	80800005 	stb	r2,0(r16)
   15ce4:	01800284 	movi	r6,10
   15ce8:	000f883a 	mov	r7,zero
   15cec:	001c9580 	call	1c958 <__udivdi3>
   15cf0:	1029883a 	mov	r20,r2
   15cf4:	10c4b03a 	or	r2,r2,r3
   15cf8:	1823883a 	mov	r17,r3
   15cfc:	103fef1e 	bne	r2,zero,15cbc <_gp+0xfffef314>
   15d00:	d8c02817 	ldw	r3,160(sp)
   15d04:	dc402917 	ldw	r17,164(sp)
   15d08:	b011883a 	mov	r8,r22
   15d0c:	1c07c83a 	sub	r3,r3,r16
   15d10:	d8c02b15 	stw	r3,172(sp)
   15d14:	00003106 	br	15ddc <___svfprintf_internal_r+0x6e0>
   15d18:	8025883a 	mov	r18,r16
   15d1c:	dc002903 	ldbu	r16,164(sp)
   15d20:	e011883a 	mov	r8,fp
   15d24:	84003fcc 	andi	r16,r16,255
   15d28:	80070a1e 	bne	r16,zero,17954 <___svfprintf_internal_r+0x2258>
   15d2c:	94800414 	ori	r18,r18,16
   15d30:	9080080c 	andi	r2,r18,32
   15d34:	1002f626 	beq	r2,zero,16910 <___svfprintf_internal_r+0x1214>
   15d38:	d9002e17 	ldw	r4,184(sp)
   15d3c:	d9402a17 	ldw	r5,168(sp)
   15d40:	d8002785 	stb	zero,158(sp)
   15d44:	20800204 	addi	r2,r4,8
   15d48:	25000017 	ldw	r20,0(r4)
   15d4c:	25800117 	ldw	r22,4(r4)
   15d50:	28043716 	blt	r5,zero,16e30 <___svfprintf_internal_r+0x1734>
   15d54:	013fdfc4 	movi	r4,-129
   15d58:	a586b03a 	or	r3,r20,r22
   15d5c:	d8802e15 	stw	r2,184(sp)
   15d60:	9124703a 	and	r18,r18,r4
   15d64:	1802f71e 	bne	r3,zero,16944 <___svfprintf_internal_r+0x1248>
   15d68:	d9402a17 	ldw	r5,168(sp)
   15d6c:	0039883a 	mov	fp,zero
   15d70:	2806df26 	beq	r5,zero,178f0 <___svfprintf_internal_r+0x21f4>
   15d74:	0029883a 	mov	r20,zero
   15d78:	002d883a 	mov	r22,zero
   15d7c:	dc001e04 	addi	r16,sp,120
   15d80:	a006d0fa 	srli	r3,r20,3
   15d84:	b008977a 	slli	r4,r22,29
   15d88:	b02cd0fa 	srli	r22,r22,3
   15d8c:	a50001cc 	andi	r20,r20,7
   15d90:	a0800c04 	addi	r2,r20,48
   15d94:	843fffc4 	addi	r16,r16,-1
   15d98:	20e8b03a 	or	r20,r4,r3
   15d9c:	80800005 	stb	r2,0(r16)
   15da0:	a586b03a 	or	r3,r20,r22
   15da4:	183ff61e 	bne	r3,zero,15d80 <_gp+0xfffef3d8>
   15da8:	90c0004c 	andi	r3,r18,1
   15dac:	18013f26 	beq	r3,zero,162ac <___svfprintf_internal_r+0xbb0>
   15db0:	10803fcc 	andi	r2,r2,255
   15db4:	1080201c 	xori	r2,r2,128
   15db8:	10bfe004 	addi	r2,r2,-128
   15dbc:	00c00c04 	movi	r3,48
   15dc0:	10c13a26 	beq	r2,r3,162ac <___svfprintf_internal_r+0xbb0>
   15dc4:	80ffffc5 	stb	r3,-1(r16)
   15dc8:	d8c02817 	ldw	r3,160(sp)
   15dcc:	80bfffc4 	addi	r2,r16,-1
   15dd0:	1021883a 	mov	r16,r2
   15dd4:	1887c83a 	sub	r3,r3,r2
   15dd8:	d8c02b15 	stw	r3,172(sp)
   15ddc:	d8802b17 	ldw	r2,172(sp)
   15de0:	d9002a17 	ldw	r4,168(sp)
   15de4:	1100010e 	bge	r2,r4,15dec <___svfprintf_internal_r+0x6f0>
   15de8:	2005883a 	mov	r2,r4
   15dec:	d8802915 	stw	r2,164(sp)
   15df0:	d8003215 	stw	zero,200(sp)
   15df4:	e7003fcc 	andi	fp,fp,255
   15df8:	e700201c 	xori	fp,fp,128
   15dfc:	e73fe004 	addi	fp,fp,-128
   15e00:	e0000326 	beq	fp,zero,15e10 <___svfprintf_internal_r+0x714>
   15e04:	d8c02917 	ldw	r3,164(sp)
   15e08:	18c00044 	addi	r3,r3,1
   15e0c:	d8c02915 	stw	r3,164(sp)
   15e10:	90c0008c 	andi	r3,r18,2
   15e14:	d8c02c15 	stw	r3,176(sp)
   15e18:	18000326 	beq	r3,zero,15e28 <___svfprintf_internal_r+0x72c>
   15e1c:	d8c02917 	ldw	r3,164(sp)
   15e20:	18c00084 	addi	r3,r3,2
   15e24:	d8c02915 	stw	r3,164(sp)
   15e28:	90c0210c 	andi	r3,r18,132
   15e2c:	d8c03015 	stw	r3,192(sp)
   15e30:	1801c31e 	bne	r3,zero,16540 <___svfprintf_internal_r+0xe44>
   15e34:	d9003117 	ldw	r4,196(sp)
   15e38:	d8c02917 	ldw	r3,164(sp)
   15e3c:	20e9c83a 	sub	r20,r4,r3
   15e40:	0501bf0e 	bge	zero,r20,16540 <___svfprintf_internal_r+0xe44>
   15e44:	02400404 	movi	r9,16
   15e48:	d8c02017 	ldw	r3,128(sp)
   15e4c:	d8801f17 	ldw	r2,124(sp)
   15e50:	4d053d0e 	bge	r9,r20,17348 <___svfprintf_internal_r+0x1c4c>
   15e54:	014000b4 	movhi	r5,2
   15e58:	2977c084 	addi	r5,r5,-8446
   15e5c:	dc403c15 	stw	r17,240(sp)
   15e60:	d9403515 	stw	r5,212(sp)
   15e64:	a023883a 	mov	r17,r20
   15e68:	482d883a 	mov	r22,r9
   15e6c:	9029883a 	mov	r20,r18
   15e70:	070001c4 	movi	fp,7
   15e74:	8025883a 	mov	r18,r16
   15e78:	dc002d17 	ldw	r16,180(sp)
   15e7c:	00000306 	br	15e8c <___svfprintf_internal_r+0x790>
   15e80:	8c7ffc04 	addi	r17,r17,-16
   15e84:	42000204 	addi	r8,r8,8
   15e88:	b440130e 	bge	r22,r17,15ed8 <___svfprintf_internal_r+0x7dc>
   15e8c:	010000b4 	movhi	r4,2
   15e90:	18c00404 	addi	r3,r3,16
   15e94:	10800044 	addi	r2,r2,1
   15e98:	2137c084 	addi	r4,r4,-8446
   15e9c:	41000015 	stw	r4,0(r8)
   15ea0:	45800115 	stw	r22,4(r8)
   15ea4:	d8c02015 	stw	r3,128(sp)
   15ea8:	d8801f15 	stw	r2,124(sp)
   15eac:	e0bff40e 	bge	fp,r2,15e80 <_gp+0xfffef4d8>
   15eb0:	d9801e04 	addi	r6,sp,120
   15eb4:	800b883a 	mov	r5,r16
   15eb8:	9809883a 	mov	r4,r19
   15ebc:	001ac4c0 	call	1ac4c <__ssprint_r>
   15ec0:	103ef51e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   15ec4:	8c7ffc04 	addi	r17,r17,-16
   15ec8:	d8c02017 	ldw	r3,128(sp)
   15ecc:	d8801f17 	ldw	r2,124(sp)
   15ed0:	da000404 	addi	r8,sp,16
   15ed4:	b47fed16 	blt	r22,r17,15e8c <_gp+0xfffef4e4>
   15ed8:	9021883a 	mov	r16,r18
   15edc:	a025883a 	mov	r18,r20
   15ee0:	8829883a 	mov	r20,r17
   15ee4:	dc403c17 	ldw	r17,240(sp)
   15ee8:	d9403517 	ldw	r5,212(sp)
   15eec:	a0c7883a 	add	r3,r20,r3
   15ef0:	10800044 	addi	r2,r2,1
   15ef4:	41400015 	stw	r5,0(r8)
   15ef8:	45000115 	stw	r20,4(r8)
   15efc:	d8c02015 	stw	r3,128(sp)
   15f00:	d8801f15 	stw	r2,124(sp)
   15f04:	010001c4 	movi	r4,7
   15f08:	2082c116 	blt	r4,r2,16a10 <___svfprintf_internal_r+0x1314>
   15f0c:	df002787 	ldb	fp,158(sp)
   15f10:	42000204 	addi	r8,r8,8
   15f14:	e0000c26 	beq	fp,zero,15f48 <___svfprintf_internal_r+0x84c>
   15f18:	d8801f17 	ldw	r2,124(sp)
   15f1c:	d9002784 	addi	r4,sp,158
   15f20:	18c00044 	addi	r3,r3,1
   15f24:	10800044 	addi	r2,r2,1
   15f28:	41000015 	stw	r4,0(r8)
   15f2c:	01000044 	movi	r4,1
   15f30:	41000115 	stw	r4,4(r8)
   15f34:	d8c02015 	stw	r3,128(sp)
   15f38:	d8801f15 	stw	r2,124(sp)
   15f3c:	010001c4 	movi	r4,7
   15f40:	20825a16 	blt	r4,r2,168ac <___svfprintf_internal_r+0x11b0>
   15f44:	42000204 	addi	r8,r8,8
   15f48:	d8802c17 	ldw	r2,176(sp)
   15f4c:	10000c26 	beq	r2,zero,15f80 <___svfprintf_internal_r+0x884>
   15f50:	d8801f17 	ldw	r2,124(sp)
   15f54:	d9002704 	addi	r4,sp,156
   15f58:	18c00084 	addi	r3,r3,2
   15f5c:	10800044 	addi	r2,r2,1
   15f60:	41000015 	stw	r4,0(r8)
   15f64:	01000084 	movi	r4,2
   15f68:	41000115 	stw	r4,4(r8)
   15f6c:	d8c02015 	stw	r3,128(sp)
   15f70:	d8801f15 	stw	r2,124(sp)
   15f74:	010001c4 	movi	r4,7
   15f78:	20825416 	blt	r4,r2,168cc <___svfprintf_internal_r+0x11d0>
   15f7c:	42000204 	addi	r8,r8,8
   15f80:	d9003017 	ldw	r4,192(sp)
   15f84:	00802004 	movi	r2,128
   15f88:	2081b926 	beq	r4,r2,16670 <___svfprintf_internal_r+0xf74>
   15f8c:	d9402a17 	ldw	r5,168(sp)
   15f90:	d8802b17 	ldw	r2,172(sp)
   15f94:	28adc83a 	sub	r22,r5,r2
   15f98:	05802f0e 	bge	zero,r22,16058 <___svfprintf_internal_r+0x95c>
   15f9c:	07000404 	movi	fp,16
   15fa0:	d8801f17 	ldw	r2,124(sp)
   15fa4:	e583e20e 	bge	fp,r22,16f30 <___svfprintf_internal_r+0x1834>
   15fa8:	014000b4 	movhi	r5,2
   15fac:	2977bc84 	addi	r5,r5,-8462
   15fb0:	dc402a15 	stw	r17,168(sp)
   15fb4:	d9402c15 	stw	r5,176(sp)
   15fb8:	b023883a 	mov	r17,r22
   15fbc:	050001c4 	movi	r20,7
   15fc0:	902d883a 	mov	r22,r18
   15fc4:	8025883a 	mov	r18,r16
   15fc8:	dc002d17 	ldw	r16,180(sp)
   15fcc:	00000306 	br	15fdc <___svfprintf_internal_r+0x8e0>
   15fd0:	8c7ffc04 	addi	r17,r17,-16
   15fd4:	42000204 	addi	r8,r8,8
   15fd8:	e440110e 	bge	fp,r17,16020 <___svfprintf_internal_r+0x924>
   15fdc:	18c00404 	addi	r3,r3,16
   15fe0:	10800044 	addi	r2,r2,1
   15fe4:	45400015 	stw	r21,0(r8)
   15fe8:	47000115 	stw	fp,4(r8)
   15fec:	d8c02015 	stw	r3,128(sp)
   15ff0:	d8801f15 	stw	r2,124(sp)
   15ff4:	a0bff60e 	bge	r20,r2,15fd0 <_gp+0xfffef628>
   15ff8:	d9801e04 	addi	r6,sp,120
   15ffc:	800b883a 	mov	r5,r16
   16000:	9809883a 	mov	r4,r19
   16004:	001ac4c0 	call	1ac4c <__ssprint_r>
   16008:	103ea31e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   1600c:	8c7ffc04 	addi	r17,r17,-16
   16010:	d8c02017 	ldw	r3,128(sp)
   16014:	d8801f17 	ldw	r2,124(sp)
   16018:	da000404 	addi	r8,sp,16
   1601c:	e47fef16 	blt	fp,r17,15fdc <_gp+0xfffef634>
   16020:	9021883a 	mov	r16,r18
   16024:	b025883a 	mov	r18,r22
   16028:	882d883a 	mov	r22,r17
   1602c:	dc402a17 	ldw	r17,168(sp)
   16030:	d9002c17 	ldw	r4,176(sp)
   16034:	1d87883a 	add	r3,r3,r22
   16038:	10800044 	addi	r2,r2,1
   1603c:	41000015 	stw	r4,0(r8)
   16040:	45800115 	stw	r22,4(r8)
   16044:	d8c02015 	stw	r3,128(sp)
   16048:	d8801f15 	stw	r2,124(sp)
   1604c:	010001c4 	movi	r4,7
   16050:	20820e16 	blt	r4,r2,1688c <___svfprintf_internal_r+0x1190>
   16054:	42000204 	addi	r8,r8,8
   16058:	9080400c 	andi	r2,r18,256
   1605c:	10013a1e 	bne	r2,zero,16548 <___svfprintf_internal_r+0xe4c>
   16060:	d9402b17 	ldw	r5,172(sp)
   16064:	d8801f17 	ldw	r2,124(sp)
   16068:	44000015 	stw	r16,0(r8)
   1606c:	1947883a 	add	r3,r3,r5
   16070:	10800044 	addi	r2,r2,1
   16074:	41400115 	stw	r5,4(r8)
   16078:	d8c02015 	stw	r3,128(sp)
   1607c:	d8801f15 	stw	r2,124(sp)
   16080:	010001c4 	movi	r4,7
   16084:	2081f316 	blt	r4,r2,16854 <___svfprintf_internal_r+0x1158>
   16088:	42000204 	addi	r8,r8,8
   1608c:	9480010c 	andi	r18,r18,4
   16090:	90003226 	beq	r18,zero,1615c <___svfprintf_internal_r+0xa60>
   16094:	d9403117 	ldw	r5,196(sp)
   16098:	d8802917 	ldw	r2,164(sp)
   1609c:	28a1c83a 	sub	r16,r5,r2
   160a0:	04002e0e 	bge	zero,r16,1615c <___svfprintf_internal_r+0xa60>
   160a4:	04400404 	movi	r17,16
   160a8:	d8801f17 	ldw	r2,124(sp)
   160ac:	8c04db0e 	bge	r17,r16,1741c <___svfprintf_internal_r+0x1d20>
   160b0:	014000b4 	movhi	r5,2
   160b4:	2977c084 	addi	r5,r5,-8446
   160b8:	d9403515 	stw	r5,212(sp)
   160bc:	048001c4 	movi	r18,7
   160c0:	dd002d17 	ldw	r20,180(sp)
   160c4:	00000306 	br	160d4 <___svfprintf_internal_r+0x9d8>
   160c8:	843ffc04 	addi	r16,r16,-16
   160cc:	42000204 	addi	r8,r8,8
   160d0:	8c00130e 	bge	r17,r16,16120 <___svfprintf_internal_r+0xa24>
   160d4:	010000b4 	movhi	r4,2
   160d8:	18c00404 	addi	r3,r3,16
   160dc:	10800044 	addi	r2,r2,1
   160e0:	2137c084 	addi	r4,r4,-8446
   160e4:	41000015 	stw	r4,0(r8)
   160e8:	44400115 	stw	r17,4(r8)
   160ec:	d8c02015 	stw	r3,128(sp)
   160f0:	d8801f15 	stw	r2,124(sp)
   160f4:	90bff40e 	bge	r18,r2,160c8 <_gp+0xfffef720>
   160f8:	d9801e04 	addi	r6,sp,120
   160fc:	a00b883a 	mov	r5,r20
   16100:	9809883a 	mov	r4,r19
   16104:	001ac4c0 	call	1ac4c <__ssprint_r>
   16108:	103e631e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   1610c:	843ffc04 	addi	r16,r16,-16
   16110:	d8c02017 	ldw	r3,128(sp)
   16114:	d8801f17 	ldw	r2,124(sp)
   16118:	da000404 	addi	r8,sp,16
   1611c:	8c3fed16 	blt	r17,r16,160d4 <_gp+0xfffef72c>
   16120:	d9403517 	ldw	r5,212(sp)
   16124:	1c07883a 	add	r3,r3,r16
   16128:	10800044 	addi	r2,r2,1
   1612c:	41400015 	stw	r5,0(r8)
   16130:	44000115 	stw	r16,4(r8)
   16134:	d8c02015 	stw	r3,128(sp)
   16138:	d8801f15 	stw	r2,124(sp)
   1613c:	010001c4 	movi	r4,7
   16140:	2080060e 	bge	r4,r2,1615c <___svfprintf_internal_r+0xa60>
   16144:	d9402d17 	ldw	r5,180(sp)
   16148:	d9801e04 	addi	r6,sp,120
   1614c:	9809883a 	mov	r4,r19
   16150:	001ac4c0 	call	1ac4c <__ssprint_r>
   16154:	103e501e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   16158:	d8c02017 	ldw	r3,128(sp)
   1615c:	d8803117 	ldw	r2,196(sp)
   16160:	d9002917 	ldw	r4,164(sp)
   16164:	1100010e 	bge	r2,r4,1616c <___svfprintf_internal_r+0xa70>
   16168:	2005883a 	mov	r2,r4
   1616c:	d9402f17 	ldw	r5,188(sp)
   16170:	288b883a 	add	r5,r5,r2
   16174:	d9402f15 	stw	r5,188(sp)
   16178:	1801be1e 	bne	r3,zero,16874 <___svfprintf_internal_r+0x1178>
   1617c:	b8800007 	ldb	r2,0(r23)
   16180:	d8001f15 	stw	zero,124(sp)
   16184:	da000404 	addi	r8,sp,16
   16188:	103d891e 	bne	r2,zero,157b0 <_gp+0xfffeee08>
   1618c:	b823883a 	mov	r17,r23
   16190:	003d9f06 	br	15810 <_gp+0xfffeee68>
   16194:	8025883a 	mov	r18,r16
   16198:	dc002903 	ldbu	r16,164(sp)
   1619c:	e011883a 	mov	r8,fp
   161a0:	84003fcc 	andi	r16,r16,255
   161a4:	8005e61e 	bne	r16,zero,17940 <___svfprintf_internal_r+0x2244>
   161a8:	94800414 	ori	r18,r18,16
   161ac:	9080080c 	andi	r2,r18,32
   161b0:	10022026 	beq	r2,zero,16a34 <___svfprintf_internal_r+0x1338>
   161b4:	d9002e17 	ldw	r4,184(sp)
   161b8:	d9402a17 	ldw	r5,168(sp)
   161bc:	d8002785 	stb	zero,158(sp)
   161c0:	20c00204 	addi	r3,r4,8
   161c4:	25000017 	ldw	r20,0(r4)
   161c8:	25800117 	ldw	r22,4(r4)
   161cc:	2803ad16 	blt	r5,zero,17084 <___svfprintf_internal_r+0x1988>
   161d0:	013fdfc4 	movi	r4,-129
   161d4:	a584b03a 	or	r2,r20,r22
   161d8:	d8c02e15 	stw	r3,184(sp)
   161dc:	9124703a 	and	r18,r18,r4
   161e0:	0039883a 	mov	fp,zero
   161e4:	103eb01e 	bne	r2,zero,15ca8 <_gp+0xfffef300>
   161e8:	d8802a17 	ldw	r2,168(sp)
   161ec:	1002e71e 	bne	r2,zero,16d8c <___svfprintf_internal_r+0x1690>
   161f0:	d8002a15 	stw	zero,168(sp)
   161f4:	d8002b15 	stw	zero,172(sp)
   161f8:	dc001e04 	addi	r16,sp,120
   161fc:	003ef706 	br	15ddc <_gp+0xfffef434>
   16200:	8025883a 	mov	r18,r16
   16204:	dc002903 	ldbu	r16,164(sp)
   16208:	e011883a 	mov	r8,fp
   1620c:	84003fcc 	andi	r16,r16,255
   16210:	8005c81e 	bne	r16,zero,17934 <___svfprintf_internal_r+0x2238>
   16214:	010000b4 	movhi	r4,2
   16218:	2137b004 	addi	r4,r4,-8512
   1621c:	d9003a15 	stw	r4,232(sp)
   16220:	9080080c 	andi	r2,r18,32
   16224:	10007226 	beq	r2,zero,163f0 <___svfprintf_internal_r+0xcf4>
   16228:	d9402e17 	ldw	r5,184(sp)
   1622c:	2d000017 	ldw	r20,0(r5)
   16230:	2d800117 	ldw	r22,4(r5)
   16234:	29400204 	addi	r5,r5,8
   16238:	d9402e15 	stw	r5,184(sp)
   1623c:	9080004c 	andi	r2,r18,1
   16240:	1001aa26 	beq	r2,zero,168ec <___svfprintf_internal_r+0x11f0>
   16244:	a584b03a 	or	r2,r20,r22
   16248:	10032526 	beq	r2,zero,16ee0 <___svfprintf_internal_r+0x17e4>
   1624c:	d8c02a17 	ldw	r3,168(sp)
   16250:	00800c04 	movi	r2,48
   16254:	d8802705 	stb	r2,156(sp)
   16258:	dc402745 	stb	r17,157(sp)
   1625c:	d8002785 	stb	zero,158(sp)
   16260:	90800094 	ori	r2,r18,2
   16264:	1804a316 	blt	r3,zero,174f4 <___svfprintf_internal_r+0x1df8>
   16268:	00bfdfc4 	movi	r2,-129
   1626c:	90a4703a 	and	r18,r18,r2
   16270:	94800094 	ori	r18,r18,2
   16274:	0039883a 	mov	fp,zero
   16278:	d9003a17 	ldw	r4,232(sp)
   1627c:	dc001e04 	addi	r16,sp,120
   16280:	a08003cc 	andi	r2,r20,15
   16284:	b006973a 	slli	r3,r22,28
   16288:	2085883a 	add	r2,r4,r2
   1628c:	a028d13a 	srli	r20,r20,4
   16290:	10800003 	ldbu	r2,0(r2)
   16294:	b02cd13a 	srli	r22,r22,4
   16298:	843fffc4 	addi	r16,r16,-1
   1629c:	1d28b03a 	or	r20,r3,r20
   162a0:	80800005 	stb	r2,0(r16)
   162a4:	a584b03a 	or	r2,r20,r22
   162a8:	103ff51e 	bne	r2,zero,16280 <_gp+0xfffef8d8>
   162ac:	d8c02817 	ldw	r3,160(sp)
   162b0:	1c07c83a 	sub	r3,r3,r16
   162b4:	d8c02b15 	stw	r3,172(sp)
   162b8:	003ec806 	br	15ddc <_gp+0xfffef434>
   162bc:	d8c02e17 	ldw	r3,184(sp)
   162c0:	d9002e17 	ldw	r4,184(sp)
   162c4:	8025883a 	mov	r18,r16
   162c8:	18800017 	ldw	r2,0(r3)
   162cc:	21000104 	addi	r4,r4,4
   162d0:	00c00044 	movi	r3,1
   162d4:	e011883a 	mov	r8,fp
   162d8:	d8c02915 	stw	r3,164(sp)
   162dc:	d8002785 	stb	zero,158(sp)
   162e0:	d8801405 	stb	r2,80(sp)
   162e4:	d9002e15 	stw	r4,184(sp)
   162e8:	d8c02b15 	stw	r3,172(sp)
   162ec:	d8002a15 	stw	zero,168(sp)
   162f0:	d8003215 	stw	zero,200(sp)
   162f4:	dc001404 	addi	r16,sp,80
   162f8:	0039883a 	mov	fp,zero
   162fc:	003ec406 	br	15e10 <_gp+0xfffef468>
   16300:	8025883a 	mov	r18,r16
   16304:	dc002903 	ldbu	r16,164(sp)
   16308:	e011883a 	mov	r8,fp
   1630c:	84003fcc 	andi	r16,r16,255
   16310:	803e8726 	beq	r16,zero,15d30 <_gp+0xfffef388>
   16314:	d8c02b03 	ldbu	r3,172(sp)
   16318:	d8c02785 	stb	r3,158(sp)
   1631c:	003e8406 	br	15d30 <_gp+0xfffef388>
   16320:	00c00044 	movi	r3,1
   16324:	d8c02905 	stb	r3,164(sp)
   16328:	00c00ac4 	movi	r3,43
   1632c:	d8c02b05 	stb	r3,172(sp)
   16330:	bc400007 	ldb	r17,0(r23)
   16334:	003d4606 	br	15850 <_gp+0xfffeeea8>
   16338:	84000814 	ori	r16,r16,32
   1633c:	bc400007 	ldb	r17,0(r23)
   16340:	003d4306 	br	15850 <_gp+0xfffeeea8>
   16344:	d8802e17 	ldw	r2,184(sp)
   16348:	8025883a 	mov	r18,r16
   1634c:	d8002785 	stb	zero,158(sp)
   16350:	14000017 	ldw	r16,0(r2)
   16354:	e011883a 	mov	r8,fp
   16358:	15000104 	addi	r20,r2,4
   1635c:	80042126 	beq	r16,zero,173e4 <___svfprintf_internal_r+0x1ce8>
   16360:	d8c02a17 	ldw	r3,168(sp)
   16364:	1803ee16 	blt	r3,zero,17320 <___svfprintf_internal_r+0x1c24>
   16368:	180d883a 	mov	r6,r3
   1636c:	000b883a 	mov	r5,zero
   16370:	8009883a 	mov	r4,r16
   16374:	df003e15 	stw	fp,248(sp)
   16378:	00197780 	call	19778 <memchr>
   1637c:	da003e17 	ldw	r8,248(sp)
   16380:	10046a26 	beq	r2,zero,1752c <___svfprintf_internal_r+0x1e30>
   16384:	1405c83a 	sub	r2,r2,r16
   16388:	d8802b15 	stw	r2,172(sp)
   1638c:	1003ea16 	blt	r2,zero,17338 <___svfprintf_internal_r+0x1c3c>
   16390:	df002783 	ldbu	fp,158(sp)
   16394:	d8802915 	stw	r2,164(sp)
   16398:	dd002e15 	stw	r20,184(sp)
   1639c:	d8002a15 	stw	zero,168(sp)
   163a0:	d8003215 	stw	zero,200(sp)
   163a4:	003e9306 	br	15df4 <_gp+0xfffef44c>
   163a8:	8025883a 	mov	r18,r16
   163ac:	dc002903 	ldbu	r16,164(sp)
   163b0:	e011883a 	mov	r8,fp
   163b4:	84003fcc 	andi	r16,r16,255
   163b8:	803f7c26 	beq	r16,zero,161ac <_gp+0xfffef804>
   163bc:	d8c02b03 	ldbu	r3,172(sp)
   163c0:	d8c02785 	stb	r3,158(sp)
   163c4:	003f7906 	br	161ac <_gp+0xfffef804>
   163c8:	8025883a 	mov	r18,r16
   163cc:	dc002903 	ldbu	r16,164(sp)
   163d0:	e011883a 	mov	r8,fp
   163d4:	84003fcc 	andi	r16,r16,255
   163d8:	8005741e 	bne	r16,zero,179ac <___svfprintf_internal_r+0x22b0>
   163dc:	010000b4 	movhi	r4,2
   163e0:	2137b504 	addi	r4,r4,-8492
   163e4:	d9003a15 	stw	r4,232(sp)
   163e8:	9080080c 	andi	r2,r18,32
   163ec:	103f8e1e 	bne	r2,zero,16228 <_gp+0xfffef880>
   163f0:	9080040c 	andi	r2,r18,16
   163f4:	1002a726 	beq	r2,zero,16e94 <___svfprintf_internal_r+0x1798>
   163f8:	d8802e17 	ldw	r2,184(sp)
   163fc:	002d883a 	mov	r22,zero
   16400:	15000017 	ldw	r20,0(r2)
   16404:	10800104 	addi	r2,r2,4
   16408:	d8802e15 	stw	r2,184(sp)
   1640c:	003f8b06 	br	1623c <_gp+0xfffef894>
   16410:	84000054 	ori	r16,r16,1
   16414:	bc400007 	ldb	r17,0(r23)
   16418:	003d0d06 	br	15850 <_gp+0xfffeeea8>
   1641c:	d8802b07 	ldb	r2,172(sp)
   16420:	1002a41e 	bne	r2,zero,16eb4 <___svfprintf_internal_r+0x17b8>
   16424:	00c00044 	movi	r3,1
   16428:	d8c02905 	stb	r3,164(sp)
   1642c:	00c00804 	movi	r3,32
   16430:	d8c02b05 	stb	r3,172(sp)
   16434:	bc400007 	ldb	r17,0(r23)
   16438:	003d0506 	br	15850 <_gp+0xfffeeea8>
   1643c:	8025883a 	mov	r18,r16
   16440:	dc002903 	ldbu	r16,164(sp)
   16444:	e011883a 	mov	r8,fp
   16448:	84003fcc 	andi	r16,r16,255
   1644c:	803e0626 	beq	r16,zero,15c68 <_gp+0xfffef2c0>
   16450:	d8c02b03 	ldbu	r3,172(sp)
   16454:	d8c02785 	stb	r3,158(sp)
   16458:	003e0306 	br	15c68 <_gp+0xfffef2c0>
   1645c:	bc400007 	ldb	r17,0(r23)
   16460:	00801b04 	movi	r2,108
   16464:	88830a26 	beq	r17,r2,17090 <___svfprintf_internal_r+0x1994>
   16468:	84000414 	ori	r16,r16,16
   1646c:	003cf806 	br	15850 <_gp+0xfffeeea8>
   16470:	8025883a 	mov	r18,r16
   16474:	dc002903 	ldbu	r16,164(sp)
   16478:	e011883a 	mov	r8,fp
   1647c:	84003fcc 	andi	r16,r16,255
   16480:	8005471e 	bne	r16,zero,179a0 <___svfprintf_internal_r+0x22a4>
   16484:	9080080c 	andi	r2,r18,32
   16488:	10028c26 	beq	r2,zero,16ebc <___svfprintf_internal_r+0x17c0>
   1648c:	d9002e17 	ldw	r4,184(sp)
   16490:	d9402f17 	ldw	r5,188(sp)
   16494:	20800017 	ldw	r2,0(r4)
   16498:	2807d7fa 	srai	r3,r5,31
   1649c:	21000104 	addi	r4,r4,4
   164a0:	d9002e15 	stw	r4,184(sp)
   164a4:	11400015 	stw	r5,0(r2)
   164a8:	10c00115 	stw	r3,4(r2)
   164ac:	003cbe06 	br	157a8 <_gp+0xfffeee00>
   164b0:	84001014 	ori	r16,r16,64
   164b4:	bc400007 	ldb	r17,0(r23)
   164b8:	003ce506 	br	15850 <_gp+0xfffeeea8>
   164bc:	010000b4 	movhi	r4,2
   164c0:	2137b504 	addi	r4,r4,-8492
   164c4:	0039883a 	mov	fp,zero
   164c8:	d9003a15 	stw	r4,232(sp)
   164cc:	04401e04 	movi	r17,120
   164d0:	003f6906 	br	16278 <_gp+0xfffef8d0>
   164d4:	8025883a 	mov	r18,r16
   164d8:	dc002903 	ldbu	r16,164(sp)
   164dc:	e011883a 	mov	r8,fp
   164e0:	84003fcc 	andi	r16,r16,255
   164e4:	8005261e 	bne	r16,zero,17980 <___svfprintf_internal_r+0x2284>
   164e8:	883d6526 	beq	r17,zero,15a80 <_gp+0xfffef0d8>
   164ec:	00c00044 	movi	r3,1
   164f0:	d8c02915 	stw	r3,164(sp)
   164f4:	dc401405 	stb	r17,80(sp)
   164f8:	d8002785 	stb	zero,158(sp)
   164fc:	003f7a06 	br	162e8 <_gp+0xfffef940>
   16500:	010000b4 	movhi	r4,2
   16504:	2137b504 	addi	r4,r4,-8492
   16508:	d9003a15 	stw	r4,232(sp)
   1650c:	d8c02e15 	stw	r3,184(sp)
   16510:	1025883a 	mov	r18,r2
   16514:	04401e04 	movi	r17,120
   16518:	a584b03a 	or	r2,r20,r22
   1651c:	1000fa1e 	bne	r2,zero,16908 <___svfprintf_internal_r+0x120c>
   16520:	0039883a 	mov	fp,zero
   16524:	00800084 	movi	r2,2
   16528:	10803fcc 	andi	r2,r2,255
   1652c:	00c00044 	movi	r3,1
   16530:	10c21626 	beq	r2,r3,16d8c <___svfprintf_internal_r+0x1690>
   16534:	00c00084 	movi	r3,2
   16538:	10fe0e1e 	bne	r2,r3,15d74 <_gp+0xfffef3cc>
   1653c:	003d4606 	br	15a58 <_gp+0xfffef0b0>
   16540:	d8c02017 	ldw	r3,128(sp)
   16544:	003e7306 	br	15f14 <_gp+0xfffef56c>
   16548:	00801944 	movi	r2,101
   1654c:	14407c0e 	bge	r2,r17,16740 <___svfprintf_internal_r+0x1044>
   16550:	d9003617 	ldw	r4,216(sp)
   16554:	d9403717 	ldw	r5,220(sp)
   16558:	000d883a 	mov	r6,zero
   1655c:	000f883a 	mov	r7,zero
   16560:	d8c03d15 	stw	r3,244(sp)
   16564:	da003e15 	stw	r8,248(sp)
   16568:	0012c900 	call	12c90 <__eqdf2>
   1656c:	d8c03d17 	ldw	r3,244(sp)
   16570:	da003e17 	ldw	r8,248(sp)
   16574:	1000f51e 	bne	r2,zero,1694c <___svfprintf_internal_r+0x1250>
   16578:	d8801f17 	ldw	r2,124(sp)
   1657c:	010000b4 	movhi	r4,2
   16580:	2137bc04 	addi	r4,r4,-8464
   16584:	18c00044 	addi	r3,r3,1
   16588:	10800044 	addi	r2,r2,1
   1658c:	41000015 	stw	r4,0(r8)
   16590:	01000044 	movi	r4,1
   16594:	41000115 	stw	r4,4(r8)
   16598:	d8c02015 	stw	r3,128(sp)
   1659c:	d8801f15 	stw	r2,124(sp)
   165a0:	010001c4 	movi	r4,7
   165a4:	20826616 	blt	r4,r2,16f40 <___svfprintf_internal_r+0x1844>
   165a8:	42000204 	addi	r8,r8,8
   165ac:	d8802617 	ldw	r2,152(sp)
   165b0:	d9403317 	ldw	r5,204(sp)
   165b4:	11400216 	blt	r2,r5,165c0 <___svfprintf_internal_r+0xec4>
   165b8:	9080004c 	andi	r2,r18,1
   165bc:	103eb326 	beq	r2,zero,1608c <_gp+0xfffef6e4>
   165c0:	d8803817 	ldw	r2,224(sp)
   165c4:	d9003417 	ldw	r4,208(sp)
   165c8:	d9403817 	ldw	r5,224(sp)
   165cc:	1887883a 	add	r3,r3,r2
   165d0:	d8801f17 	ldw	r2,124(sp)
   165d4:	41000015 	stw	r4,0(r8)
   165d8:	41400115 	stw	r5,4(r8)
   165dc:	10800044 	addi	r2,r2,1
   165e0:	d8c02015 	stw	r3,128(sp)
   165e4:	d8801f15 	stw	r2,124(sp)
   165e8:	010001c4 	movi	r4,7
   165ec:	2082af16 	blt	r4,r2,170ac <___svfprintf_internal_r+0x19b0>
   165f0:	42000204 	addi	r8,r8,8
   165f4:	d8803317 	ldw	r2,204(sp)
   165f8:	143fffc4 	addi	r16,r2,-1
   165fc:	043ea30e 	bge	zero,r16,1608c <_gp+0xfffef6e4>
   16600:	04400404 	movi	r17,16
   16604:	d8801f17 	ldw	r2,124(sp)
   16608:	8c00860e 	bge	r17,r16,16824 <___svfprintf_internal_r+0x1128>
   1660c:	014000b4 	movhi	r5,2
   16610:	2977bc84 	addi	r5,r5,-8462
   16614:	d9402c15 	stw	r5,176(sp)
   16618:	058001c4 	movi	r22,7
   1661c:	dd002d17 	ldw	r20,180(sp)
   16620:	00000306 	br	16630 <___svfprintf_internal_r+0xf34>
   16624:	42000204 	addi	r8,r8,8
   16628:	843ffc04 	addi	r16,r16,-16
   1662c:	8c00800e 	bge	r17,r16,16830 <___svfprintf_internal_r+0x1134>
   16630:	18c00404 	addi	r3,r3,16
   16634:	10800044 	addi	r2,r2,1
   16638:	45400015 	stw	r21,0(r8)
   1663c:	44400115 	stw	r17,4(r8)
   16640:	d8c02015 	stw	r3,128(sp)
   16644:	d8801f15 	stw	r2,124(sp)
   16648:	b0bff60e 	bge	r22,r2,16624 <_gp+0xfffefc7c>
   1664c:	d9801e04 	addi	r6,sp,120
   16650:	a00b883a 	mov	r5,r20
   16654:	9809883a 	mov	r4,r19
   16658:	001ac4c0 	call	1ac4c <__ssprint_r>
   1665c:	103d0e1e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   16660:	d8c02017 	ldw	r3,128(sp)
   16664:	d8801f17 	ldw	r2,124(sp)
   16668:	da000404 	addi	r8,sp,16
   1666c:	003fee06 	br	16628 <_gp+0xfffefc80>
   16670:	d9403117 	ldw	r5,196(sp)
   16674:	d8802917 	ldw	r2,164(sp)
   16678:	28adc83a 	sub	r22,r5,r2
   1667c:	05be430e 	bge	zero,r22,15f8c <_gp+0xfffef5e4>
   16680:	07000404 	movi	fp,16
   16684:	d8801f17 	ldw	r2,124(sp)
   16688:	e583a20e 	bge	fp,r22,17514 <___svfprintf_internal_r+0x1e18>
   1668c:	014000b4 	movhi	r5,2
   16690:	2977bc84 	addi	r5,r5,-8462
   16694:	dc403015 	stw	r17,192(sp)
   16698:	d9402c15 	stw	r5,176(sp)
   1669c:	b023883a 	mov	r17,r22
   166a0:	050001c4 	movi	r20,7
   166a4:	902d883a 	mov	r22,r18
   166a8:	8025883a 	mov	r18,r16
   166ac:	dc002d17 	ldw	r16,180(sp)
   166b0:	00000306 	br	166c0 <___svfprintf_internal_r+0xfc4>
   166b4:	8c7ffc04 	addi	r17,r17,-16
   166b8:	42000204 	addi	r8,r8,8
   166bc:	e440110e 	bge	fp,r17,16704 <___svfprintf_internal_r+0x1008>
   166c0:	18c00404 	addi	r3,r3,16
   166c4:	10800044 	addi	r2,r2,1
   166c8:	45400015 	stw	r21,0(r8)
   166cc:	47000115 	stw	fp,4(r8)
   166d0:	d8c02015 	stw	r3,128(sp)
   166d4:	d8801f15 	stw	r2,124(sp)
   166d8:	a0bff60e 	bge	r20,r2,166b4 <_gp+0xfffefd0c>
   166dc:	d9801e04 	addi	r6,sp,120
   166e0:	800b883a 	mov	r5,r16
   166e4:	9809883a 	mov	r4,r19
   166e8:	001ac4c0 	call	1ac4c <__ssprint_r>
   166ec:	103cea1e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   166f0:	8c7ffc04 	addi	r17,r17,-16
   166f4:	d8c02017 	ldw	r3,128(sp)
   166f8:	d8801f17 	ldw	r2,124(sp)
   166fc:	da000404 	addi	r8,sp,16
   16700:	e47fef16 	blt	fp,r17,166c0 <_gp+0xfffefd18>
   16704:	9021883a 	mov	r16,r18
   16708:	b025883a 	mov	r18,r22
   1670c:	882d883a 	mov	r22,r17
   16710:	dc403017 	ldw	r17,192(sp)
   16714:	d9002c17 	ldw	r4,176(sp)
   16718:	1d87883a 	add	r3,r3,r22
   1671c:	10800044 	addi	r2,r2,1
   16720:	41000015 	stw	r4,0(r8)
   16724:	45800115 	stw	r22,4(r8)
   16728:	d8c02015 	stw	r3,128(sp)
   1672c:	d8801f15 	stw	r2,124(sp)
   16730:	010001c4 	movi	r4,7
   16734:	20819a16 	blt	r4,r2,16da0 <___svfprintf_internal_r+0x16a4>
   16738:	42000204 	addi	r8,r8,8
   1673c:	003e1306 	br	15f8c <_gp+0xfffef5e4>
   16740:	d9403317 	ldw	r5,204(sp)
   16744:	00800044 	movi	r2,1
   16748:	18c00044 	addi	r3,r3,1
   1674c:	1141710e 	bge	r2,r5,16d14 <___svfprintf_internal_r+0x1618>
   16750:	dc401f17 	ldw	r17,124(sp)
   16754:	00800044 	movi	r2,1
   16758:	40800115 	stw	r2,4(r8)
   1675c:	8c400044 	addi	r17,r17,1
   16760:	44000015 	stw	r16,0(r8)
   16764:	d8c02015 	stw	r3,128(sp)
   16768:	dc401f15 	stw	r17,124(sp)
   1676c:	008001c4 	movi	r2,7
   16770:	14417416 	blt	r2,r17,16d44 <___svfprintf_internal_r+0x1648>
   16774:	42000204 	addi	r8,r8,8
   16778:	d8803817 	ldw	r2,224(sp)
   1677c:	d9003417 	ldw	r4,208(sp)
   16780:	8c400044 	addi	r17,r17,1
   16784:	10c7883a 	add	r3,r2,r3
   16788:	40800115 	stw	r2,4(r8)
   1678c:	41000015 	stw	r4,0(r8)
   16790:	d8c02015 	stw	r3,128(sp)
   16794:	dc401f15 	stw	r17,124(sp)
   16798:	008001c4 	movi	r2,7
   1679c:	14417216 	blt	r2,r17,16d68 <___svfprintf_internal_r+0x166c>
   167a0:	45800204 	addi	r22,r8,8
   167a4:	d9003617 	ldw	r4,216(sp)
   167a8:	d9403717 	ldw	r5,220(sp)
   167ac:	000d883a 	mov	r6,zero
   167b0:	000f883a 	mov	r7,zero
   167b4:	d8c03d15 	stw	r3,244(sp)
   167b8:	0012c900 	call	12c90 <__eqdf2>
   167bc:	d8c03d17 	ldw	r3,244(sp)
   167c0:	1000b326 	beq	r2,zero,16a90 <___svfprintf_internal_r+0x1394>
   167c4:	d9403317 	ldw	r5,204(sp)
   167c8:	84000044 	addi	r16,r16,1
   167cc:	8c400044 	addi	r17,r17,1
   167d0:	28bfffc4 	addi	r2,r5,-1
   167d4:	1887883a 	add	r3,r3,r2
   167d8:	b0800115 	stw	r2,4(r22)
   167dc:	b4000015 	stw	r16,0(r22)
   167e0:	d8c02015 	stw	r3,128(sp)
   167e4:	dc401f15 	stw	r17,124(sp)
   167e8:	008001c4 	movi	r2,7
   167ec:	1440d216 	blt	r2,r17,16b38 <___svfprintf_internal_r+0x143c>
   167f0:	b5800204 	addi	r22,r22,8
   167f4:	d9003b17 	ldw	r4,236(sp)
   167f8:	df0022c4 	addi	fp,sp,139
   167fc:	8c400044 	addi	r17,r17,1
   16800:	20c7883a 	add	r3,r4,r3
   16804:	b7000015 	stw	fp,0(r22)
   16808:	b1000115 	stw	r4,4(r22)
   1680c:	d8c02015 	stw	r3,128(sp)
   16810:	dc401f15 	stw	r17,124(sp)
   16814:	008001c4 	movi	r2,7
   16818:	14400e16 	blt	r2,r17,16854 <___svfprintf_internal_r+0x1158>
   1681c:	b2000204 	addi	r8,r22,8
   16820:	003e1a06 	br	1608c <_gp+0xfffef6e4>
   16824:	010000b4 	movhi	r4,2
   16828:	2137bc84 	addi	r4,r4,-8462
   1682c:	d9002c15 	stw	r4,176(sp)
   16830:	d9002c17 	ldw	r4,176(sp)
   16834:	1c07883a 	add	r3,r3,r16
   16838:	44000115 	stw	r16,4(r8)
   1683c:	41000015 	stw	r4,0(r8)
   16840:	10800044 	addi	r2,r2,1
   16844:	d8c02015 	stw	r3,128(sp)
   16848:	d8801f15 	stw	r2,124(sp)
   1684c:	010001c4 	movi	r4,7
   16850:	20be0d0e 	bge	r4,r2,16088 <_gp+0xfffef6e0>
   16854:	d9402d17 	ldw	r5,180(sp)
   16858:	d9801e04 	addi	r6,sp,120
   1685c:	9809883a 	mov	r4,r19
   16860:	001ac4c0 	call	1ac4c <__ssprint_r>
   16864:	103c8c1e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   16868:	d8c02017 	ldw	r3,128(sp)
   1686c:	da000404 	addi	r8,sp,16
   16870:	003e0606 	br	1608c <_gp+0xfffef6e4>
   16874:	d9402d17 	ldw	r5,180(sp)
   16878:	d9801e04 	addi	r6,sp,120
   1687c:	9809883a 	mov	r4,r19
   16880:	001ac4c0 	call	1ac4c <__ssprint_r>
   16884:	103e3d26 	beq	r2,zero,1617c <_gp+0xfffef7d4>
   16888:	003c8306 	br	15a98 <_gp+0xfffef0f0>
   1688c:	d9402d17 	ldw	r5,180(sp)
   16890:	d9801e04 	addi	r6,sp,120
   16894:	9809883a 	mov	r4,r19
   16898:	001ac4c0 	call	1ac4c <__ssprint_r>
   1689c:	103c7e1e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   168a0:	d8c02017 	ldw	r3,128(sp)
   168a4:	da000404 	addi	r8,sp,16
   168a8:	003deb06 	br	16058 <_gp+0xfffef6b0>
   168ac:	d9402d17 	ldw	r5,180(sp)
   168b0:	d9801e04 	addi	r6,sp,120
   168b4:	9809883a 	mov	r4,r19
   168b8:	001ac4c0 	call	1ac4c <__ssprint_r>
   168bc:	103c761e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   168c0:	d8c02017 	ldw	r3,128(sp)
   168c4:	da000404 	addi	r8,sp,16
   168c8:	003d9f06 	br	15f48 <_gp+0xfffef5a0>
   168cc:	d9402d17 	ldw	r5,180(sp)
   168d0:	d9801e04 	addi	r6,sp,120
   168d4:	9809883a 	mov	r4,r19
   168d8:	001ac4c0 	call	1ac4c <__ssprint_r>
   168dc:	103c6e1e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   168e0:	d8c02017 	ldw	r3,128(sp)
   168e4:	da000404 	addi	r8,sp,16
   168e8:	003da506 	br	15f80 <_gp+0xfffef5d8>
   168ec:	d9402a17 	ldw	r5,168(sp)
   168f0:	d8002785 	stb	zero,158(sp)
   168f4:	283f0816 	blt	r5,zero,16518 <_gp+0xfffefb70>
   168f8:	00ffdfc4 	movi	r3,-129
   168fc:	a584b03a 	or	r2,r20,r22
   16900:	90e4703a 	and	r18,r18,r3
   16904:	103c5126 	beq	r2,zero,15a4c <_gp+0xfffef0a4>
   16908:	0039883a 	mov	fp,zero
   1690c:	003e5a06 	br	16278 <_gp+0xfffef8d0>
   16910:	9080040c 	andi	r2,r18,16
   16914:	10013d26 	beq	r2,zero,16e0c <___svfprintf_internal_r+0x1710>
   16918:	d8c02e17 	ldw	r3,184(sp)
   1691c:	d9002a17 	ldw	r4,168(sp)
   16920:	d8002785 	stb	zero,158(sp)
   16924:	18800104 	addi	r2,r3,4
   16928:	1d000017 	ldw	r20,0(r3)
   1692c:	002d883a 	mov	r22,zero
   16930:	20013f16 	blt	r4,zero,16e30 <___svfprintf_internal_r+0x1734>
   16934:	00ffdfc4 	movi	r3,-129
   16938:	d8802e15 	stw	r2,184(sp)
   1693c:	90e4703a 	and	r18,r18,r3
   16940:	a03d0926 	beq	r20,zero,15d68 <_gp+0xfffef3c0>
   16944:	0039883a 	mov	fp,zero
   16948:	003d0c06 	br	15d7c <_gp+0xfffef3d4>
   1694c:	dc402617 	ldw	r17,152(sp)
   16950:	0441830e 	bge	zero,r17,16f60 <___svfprintf_internal_r+0x1864>
   16954:	dc403217 	ldw	r17,200(sp)
   16958:	d8803317 	ldw	r2,204(sp)
   1695c:	1440010e 	bge	r2,r17,16964 <___svfprintf_internal_r+0x1268>
   16960:	1023883a 	mov	r17,r2
   16964:	04400a0e 	bge	zero,r17,16990 <___svfprintf_internal_r+0x1294>
   16968:	d8801f17 	ldw	r2,124(sp)
   1696c:	1c47883a 	add	r3,r3,r17
   16970:	44000015 	stw	r16,0(r8)
   16974:	10800044 	addi	r2,r2,1
   16978:	44400115 	stw	r17,4(r8)
   1697c:	d8c02015 	stw	r3,128(sp)
   16980:	d8801f15 	stw	r2,124(sp)
   16984:	010001c4 	movi	r4,7
   16988:	20827516 	blt	r4,r2,17360 <___svfprintf_internal_r+0x1c64>
   1698c:	42000204 	addi	r8,r8,8
   16990:	88027b16 	blt	r17,zero,17380 <___svfprintf_internal_r+0x1c84>
   16994:	d9003217 	ldw	r4,200(sp)
   16998:	2463c83a 	sub	r17,r4,r17
   1699c:	0440990e 	bge	zero,r17,16c04 <___svfprintf_internal_r+0x1508>
   169a0:	05800404 	movi	r22,16
   169a4:	d8801f17 	ldw	r2,124(sp)
   169a8:	b441530e 	bge	r22,r17,16ef8 <___svfprintf_internal_r+0x17fc>
   169ac:	010000b4 	movhi	r4,2
   169b0:	2137bc84 	addi	r4,r4,-8462
   169b4:	d9002c15 	stw	r4,176(sp)
   169b8:	070001c4 	movi	fp,7
   169bc:	dd002d17 	ldw	r20,180(sp)
   169c0:	00000306 	br	169d0 <___svfprintf_internal_r+0x12d4>
   169c4:	42000204 	addi	r8,r8,8
   169c8:	8c7ffc04 	addi	r17,r17,-16
   169cc:	b4414d0e 	bge	r22,r17,16f04 <___svfprintf_internal_r+0x1808>
   169d0:	18c00404 	addi	r3,r3,16
   169d4:	10800044 	addi	r2,r2,1
   169d8:	45400015 	stw	r21,0(r8)
   169dc:	45800115 	stw	r22,4(r8)
   169e0:	d8c02015 	stw	r3,128(sp)
   169e4:	d8801f15 	stw	r2,124(sp)
   169e8:	e0bff60e 	bge	fp,r2,169c4 <_gp+0xffff001c>
   169ec:	d9801e04 	addi	r6,sp,120
   169f0:	a00b883a 	mov	r5,r20
   169f4:	9809883a 	mov	r4,r19
   169f8:	001ac4c0 	call	1ac4c <__ssprint_r>
   169fc:	103c261e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   16a00:	d8c02017 	ldw	r3,128(sp)
   16a04:	d8801f17 	ldw	r2,124(sp)
   16a08:	da000404 	addi	r8,sp,16
   16a0c:	003fee06 	br	169c8 <_gp+0xffff0020>
   16a10:	d9402d17 	ldw	r5,180(sp)
   16a14:	d9801e04 	addi	r6,sp,120
   16a18:	9809883a 	mov	r4,r19
   16a1c:	001ac4c0 	call	1ac4c <__ssprint_r>
   16a20:	103c1d1e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   16a24:	d8c02017 	ldw	r3,128(sp)
   16a28:	df002787 	ldb	fp,158(sp)
   16a2c:	da000404 	addi	r8,sp,16
   16a30:	003d3806 	br	15f14 <_gp+0xfffef56c>
   16a34:	9080040c 	andi	r2,r18,16
   16a38:	10005c26 	beq	r2,zero,16bac <___svfprintf_internal_r+0x14b0>
   16a3c:	d8c02e17 	ldw	r3,184(sp)
   16a40:	d9002a17 	ldw	r4,168(sp)
   16a44:	d8002785 	stb	zero,158(sp)
   16a48:	18800104 	addi	r2,r3,4
   16a4c:	1d000017 	ldw	r20,0(r3)
   16a50:	002d883a 	mov	r22,zero
   16a54:	20005e16 	blt	r4,zero,16bd0 <___svfprintf_internal_r+0x14d4>
   16a58:	00ffdfc4 	movi	r3,-129
   16a5c:	d8802e15 	stw	r2,184(sp)
   16a60:	90e4703a 	and	r18,r18,r3
   16a64:	0039883a 	mov	fp,zero
   16a68:	a03ddf26 	beq	r20,zero,161e8 <_gp+0xfffef840>
   16a6c:	00800244 	movi	r2,9
   16a70:	153c8e36 	bltu	r2,r20,15cac <_gp+0xfffef304>
   16a74:	a5000c04 	addi	r20,r20,48
   16a78:	dc001dc4 	addi	r16,sp,119
   16a7c:	dd001dc5 	stb	r20,119(sp)
   16a80:	d8c02817 	ldw	r3,160(sp)
   16a84:	1c07c83a 	sub	r3,r3,r16
   16a88:	d8c02b15 	stw	r3,172(sp)
   16a8c:	003cd306 	br	15ddc <_gp+0xfffef434>
   16a90:	d8803317 	ldw	r2,204(sp)
   16a94:	143fffc4 	addi	r16,r2,-1
   16a98:	043f560e 	bge	zero,r16,167f4 <_gp+0xfffefe4c>
   16a9c:	07000404 	movi	fp,16
   16aa0:	e403530e 	bge	fp,r16,177f0 <___svfprintf_internal_r+0x20f4>
   16aa4:	014000b4 	movhi	r5,2
   16aa8:	2977bc84 	addi	r5,r5,-8462
   16aac:	d9402c15 	stw	r5,176(sp)
   16ab0:	01c001c4 	movi	r7,7
   16ab4:	dd002d17 	ldw	r20,180(sp)
   16ab8:	00000306 	br	16ac8 <___svfprintf_internal_r+0x13cc>
   16abc:	843ffc04 	addi	r16,r16,-16
   16ac0:	b5800204 	addi	r22,r22,8
   16ac4:	e400130e 	bge	fp,r16,16b14 <___svfprintf_internal_r+0x1418>
   16ac8:	18c00404 	addi	r3,r3,16
   16acc:	8c400044 	addi	r17,r17,1
   16ad0:	b5400015 	stw	r21,0(r22)
   16ad4:	b7000115 	stw	fp,4(r22)
   16ad8:	d8c02015 	stw	r3,128(sp)
   16adc:	dc401f15 	stw	r17,124(sp)
   16ae0:	3c7ff60e 	bge	r7,r17,16abc <_gp+0xffff0114>
   16ae4:	d9801e04 	addi	r6,sp,120
   16ae8:	a00b883a 	mov	r5,r20
   16aec:	9809883a 	mov	r4,r19
   16af0:	d9c03d15 	stw	r7,244(sp)
   16af4:	001ac4c0 	call	1ac4c <__ssprint_r>
   16af8:	d9c03d17 	ldw	r7,244(sp)
   16afc:	103be61e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   16b00:	843ffc04 	addi	r16,r16,-16
   16b04:	d8c02017 	ldw	r3,128(sp)
   16b08:	dc401f17 	ldw	r17,124(sp)
   16b0c:	dd800404 	addi	r22,sp,16
   16b10:	e43fed16 	blt	fp,r16,16ac8 <_gp+0xffff0120>
   16b14:	d8802c17 	ldw	r2,176(sp)
   16b18:	1c07883a 	add	r3,r3,r16
   16b1c:	8c400044 	addi	r17,r17,1
   16b20:	b0800015 	stw	r2,0(r22)
   16b24:	b4000115 	stw	r16,4(r22)
   16b28:	d8c02015 	stw	r3,128(sp)
   16b2c:	dc401f15 	stw	r17,124(sp)
   16b30:	008001c4 	movi	r2,7
   16b34:	147f2e0e 	bge	r2,r17,167f0 <_gp+0xfffefe48>
   16b38:	d9402d17 	ldw	r5,180(sp)
   16b3c:	d9801e04 	addi	r6,sp,120
   16b40:	9809883a 	mov	r4,r19
   16b44:	001ac4c0 	call	1ac4c <__ssprint_r>
   16b48:	103bd31e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   16b4c:	d8c02017 	ldw	r3,128(sp)
   16b50:	dc401f17 	ldw	r17,124(sp)
   16b54:	dd800404 	addi	r22,sp,16
   16b58:	003f2606 	br	167f4 <_gp+0xfffefe4c>
   16b5c:	9080040c 	andi	r2,r18,16
   16b60:	1000c326 	beq	r2,zero,16e70 <___svfprintf_internal_r+0x1774>
   16b64:	d9402e17 	ldw	r5,184(sp)
   16b68:	2d000017 	ldw	r20,0(r5)
   16b6c:	29400104 	addi	r5,r5,4
   16b70:	d9402e15 	stw	r5,184(sp)
   16b74:	a02dd7fa 	srai	r22,r20,31
   16b78:	b005883a 	mov	r2,r22
   16b7c:	103c430e 	bge	r2,zero,15c8c <_gp+0xfffef2e4>
   16b80:	d9402a17 	ldw	r5,168(sp)
   16b84:	0529c83a 	sub	r20,zero,r20
   16b88:	07000b44 	movi	fp,45
   16b8c:	a004c03a 	cmpne	r2,r20,zero
   16b90:	05adc83a 	sub	r22,zero,r22
   16b94:	df002785 	stb	fp,158(sp)
   16b98:	b0adc83a 	sub	r22,r22,r2
   16b9c:	28022e16 	blt	r5,zero,17458 <___svfprintf_internal_r+0x1d5c>
   16ba0:	00bfdfc4 	movi	r2,-129
   16ba4:	90a4703a 	and	r18,r18,r2
   16ba8:	003c3f06 	br	15ca8 <_gp+0xfffef300>
   16bac:	9080100c 	andi	r2,r18,64
   16bb0:	d8002785 	stb	zero,158(sp)
   16bb4:	10012526 	beq	r2,zero,1704c <___svfprintf_internal_r+0x1950>
   16bb8:	d9402e17 	ldw	r5,184(sp)
   16bbc:	d8c02a17 	ldw	r3,168(sp)
   16bc0:	002d883a 	mov	r22,zero
   16bc4:	28800104 	addi	r2,r5,4
   16bc8:	2d00000b 	ldhu	r20,0(r5)
   16bcc:	183fa20e 	bge	r3,zero,16a58 <_gp+0xffff00b0>
   16bd0:	d8802e15 	stw	r2,184(sp)
   16bd4:	0039883a 	mov	fp,zero
   16bd8:	a584b03a 	or	r2,r20,r22
   16bdc:	103c321e 	bne	r2,zero,15ca8 <_gp+0xfffef300>
   16be0:	00800044 	movi	r2,1
   16be4:	003e5006 	br	16528 <_gp+0xfffefb80>
   16be8:	d9402d17 	ldw	r5,180(sp)
   16bec:	d9801e04 	addi	r6,sp,120
   16bf0:	9809883a 	mov	r4,r19
   16bf4:	001ac4c0 	call	1ac4c <__ssprint_r>
   16bf8:	103ba71e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   16bfc:	d8c02017 	ldw	r3,128(sp)
   16c00:	da000404 	addi	r8,sp,16
   16c04:	d9003217 	ldw	r4,200(sp)
   16c08:	d8802617 	ldw	r2,152(sp)
   16c0c:	d9403317 	ldw	r5,204(sp)
   16c10:	8123883a 	add	r17,r16,r4
   16c14:	11400216 	blt	r2,r5,16c20 <___svfprintf_internal_r+0x1524>
   16c18:	9100004c 	andi	r4,r18,1
   16c1c:	20000d26 	beq	r4,zero,16c54 <___svfprintf_internal_r+0x1558>
   16c20:	d9003817 	ldw	r4,224(sp)
   16c24:	d9403417 	ldw	r5,208(sp)
   16c28:	1907883a 	add	r3,r3,r4
   16c2c:	d9001f17 	ldw	r4,124(sp)
   16c30:	41400015 	stw	r5,0(r8)
   16c34:	d9403817 	ldw	r5,224(sp)
   16c38:	21000044 	addi	r4,r4,1
   16c3c:	d8c02015 	stw	r3,128(sp)
   16c40:	41400115 	stw	r5,4(r8)
   16c44:	d9001f15 	stw	r4,124(sp)
   16c48:	014001c4 	movi	r5,7
   16c4c:	2901dc16 	blt	r5,r4,173c0 <___svfprintf_internal_r+0x1cc4>
   16c50:	42000204 	addi	r8,r8,8
   16c54:	d9003317 	ldw	r4,204(sp)
   16c58:	8121883a 	add	r16,r16,r4
   16c5c:	2085c83a 	sub	r2,r4,r2
   16c60:	8461c83a 	sub	r16,r16,r17
   16c64:	1400010e 	bge	r2,r16,16c6c <___svfprintf_internal_r+0x1570>
   16c68:	1021883a 	mov	r16,r2
   16c6c:	04000a0e 	bge	zero,r16,16c98 <___svfprintf_internal_r+0x159c>
   16c70:	d9001f17 	ldw	r4,124(sp)
   16c74:	1c07883a 	add	r3,r3,r16
   16c78:	44400015 	stw	r17,0(r8)
   16c7c:	21000044 	addi	r4,r4,1
   16c80:	44000115 	stw	r16,4(r8)
   16c84:	d8c02015 	stw	r3,128(sp)
   16c88:	d9001f15 	stw	r4,124(sp)
   16c8c:	014001c4 	movi	r5,7
   16c90:	2901e616 	blt	r5,r4,1742c <___svfprintf_internal_r+0x1d30>
   16c94:	42000204 	addi	r8,r8,8
   16c98:	8001f616 	blt	r16,zero,17474 <___svfprintf_internal_r+0x1d78>
   16c9c:	1421c83a 	sub	r16,r2,r16
   16ca0:	043cfa0e 	bge	zero,r16,1608c <_gp+0xfffef6e4>
   16ca4:	04400404 	movi	r17,16
   16ca8:	d8801f17 	ldw	r2,124(sp)
   16cac:	8c3edd0e 	bge	r17,r16,16824 <_gp+0xfffefe7c>
   16cb0:	014000b4 	movhi	r5,2
   16cb4:	2977bc84 	addi	r5,r5,-8462
   16cb8:	d9402c15 	stw	r5,176(sp)
   16cbc:	058001c4 	movi	r22,7
   16cc0:	dd002d17 	ldw	r20,180(sp)
   16cc4:	00000306 	br	16cd4 <___svfprintf_internal_r+0x15d8>
   16cc8:	42000204 	addi	r8,r8,8
   16ccc:	843ffc04 	addi	r16,r16,-16
   16cd0:	8c3ed70e 	bge	r17,r16,16830 <_gp+0xfffefe88>
   16cd4:	18c00404 	addi	r3,r3,16
   16cd8:	10800044 	addi	r2,r2,1
   16cdc:	45400015 	stw	r21,0(r8)
   16ce0:	44400115 	stw	r17,4(r8)
   16ce4:	d8c02015 	stw	r3,128(sp)
   16ce8:	d8801f15 	stw	r2,124(sp)
   16cec:	b0bff60e 	bge	r22,r2,16cc8 <_gp+0xffff0320>
   16cf0:	d9801e04 	addi	r6,sp,120
   16cf4:	a00b883a 	mov	r5,r20
   16cf8:	9809883a 	mov	r4,r19
   16cfc:	001ac4c0 	call	1ac4c <__ssprint_r>
   16d00:	103b651e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   16d04:	d8c02017 	ldw	r3,128(sp)
   16d08:	d8801f17 	ldw	r2,124(sp)
   16d0c:	da000404 	addi	r8,sp,16
   16d10:	003fee06 	br	16ccc <_gp+0xffff0324>
   16d14:	9088703a 	and	r4,r18,r2
   16d18:	203e8d1e 	bne	r4,zero,16750 <_gp+0xfffefda8>
   16d1c:	dc401f17 	ldw	r17,124(sp)
   16d20:	40800115 	stw	r2,4(r8)
   16d24:	44000015 	stw	r16,0(r8)
   16d28:	8c400044 	addi	r17,r17,1
   16d2c:	d8c02015 	stw	r3,128(sp)
   16d30:	dc401f15 	stw	r17,124(sp)
   16d34:	008001c4 	movi	r2,7
   16d38:	147f7f16 	blt	r2,r17,16b38 <_gp+0xffff0190>
   16d3c:	45800204 	addi	r22,r8,8
   16d40:	003eac06 	br	167f4 <_gp+0xfffefe4c>
   16d44:	d9402d17 	ldw	r5,180(sp)
   16d48:	d9801e04 	addi	r6,sp,120
   16d4c:	9809883a 	mov	r4,r19
   16d50:	001ac4c0 	call	1ac4c <__ssprint_r>
   16d54:	103b501e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   16d58:	d8c02017 	ldw	r3,128(sp)
   16d5c:	dc401f17 	ldw	r17,124(sp)
   16d60:	da000404 	addi	r8,sp,16
   16d64:	003e8406 	br	16778 <_gp+0xfffefdd0>
   16d68:	d9402d17 	ldw	r5,180(sp)
   16d6c:	d9801e04 	addi	r6,sp,120
   16d70:	9809883a 	mov	r4,r19
   16d74:	001ac4c0 	call	1ac4c <__ssprint_r>
   16d78:	103b471e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   16d7c:	d8c02017 	ldw	r3,128(sp)
   16d80:	dc401f17 	ldw	r17,124(sp)
   16d84:	dd800404 	addi	r22,sp,16
   16d88:	003e8606 	br	167a4 <_gp+0xfffefdfc>
   16d8c:	0029883a 	mov	r20,zero
   16d90:	a5000c04 	addi	r20,r20,48
   16d94:	dc001dc4 	addi	r16,sp,119
   16d98:	dd001dc5 	stb	r20,119(sp)
   16d9c:	003f3806 	br	16a80 <_gp+0xffff00d8>
   16da0:	d9402d17 	ldw	r5,180(sp)
   16da4:	d9801e04 	addi	r6,sp,120
   16da8:	9809883a 	mov	r4,r19
   16dac:	001ac4c0 	call	1ac4c <__ssprint_r>
   16db0:	103b391e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   16db4:	d8c02017 	ldw	r3,128(sp)
   16db8:	da000404 	addi	r8,sp,16
   16dbc:	003c7306 	br	15f8c <_gp+0xfffef5e4>
   16dc0:	d9003617 	ldw	r4,216(sp)
   16dc4:	d9403717 	ldw	r5,220(sp)
   16dc8:	da003e15 	stw	r8,248(sp)
   16dcc:	00117d80 	call	117d8 <__fpclassifyd>
   16dd0:	da003e17 	ldw	r8,248(sp)
   16dd4:	1000bd1e 	bne	r2,zero,170cc <___svfprintf_internal_r+0x19d0>
   16dd8:	008011c4 	movi	r2,71
   16ddc:	14411e0e 	bge	r2,r17,17258 <___svfprintf_internal_r+0x1b5c>
   16de0:	040000b4 	movhi	r16,2
   16de4:	8437af04 	addi	r16,r16,-8516
   16de8:	00c000c4 	movi	r3,3
   16dec:	00bfdfc4 	movi	r2,-129
   16df0:	d8c02915 	stw	r3,164(sp)
   16df4:	90a4703a 	and	r18,r18,r2
   16df8:	df002783 	ldbu	fp,158(sp)
   16dfc:	d8c02b15 	stw	r3,172(sp)
   16e00:	d8002a15 	stw	zero,168(sp)
   16e04:	d8003215 	stw	zero,200(sp)
   16e08:	003bfa06 	br	15df4 <_gp+0xfffef44c>
   16e0c:	9080100c 	andi	r2,r18,64
   16e10:	d8002785 	stb	zero,158(sp)
   16e14:	10009426 	beq	r2,zero,17068 <___svfprintf_internal_r+0x196c>
   16e18:	d9402e17 	ldw	r5,184(sp)
   16e1c:	d8c02a17 	ldw	r3,168(sp)
   16e20:	002d883a 	mov	r22,zero
   16e24:	28800104 	addi	r2,r5,4
   16e28:	2d00000b 	ldhu	r20,0(r5)
   16e2c:	183ec10e 	bge	r3,zero,16934 <_gp+0xfffeff8c>
   16e30:	a586b03a 	or	r3,r20,r22
   16e34:	d8802e15 	stw	r2,184(sp)
   16e38:	183ec21e 	bne	r3,zero,16944 <_gp+0xfffeff9c>
   16e3c:	0039883a 	mov	fp,zero
   16e40:	0005883a 	mov	r2,zero
   16e44:	003db806 	br	16528 <_gp+0xfffefb80>
   16e48:	d8c02e17 	ldw	r3,184(sp)
   16e4c:	d9002e17 	ldw	r4,184(sp)
   16e50:	d9402e17 	ldw	r5,184(sp)
   16e54:	18c00017 	ldw	r3,0(r3)
   16e58:	21000117 	ldw	r4,4(r4)
   16e5c:	29400204 	addi	r5,r5,8
   16e60:	d8c03615 	stw	r3,216(sp)
   16e64:	d9003715 	stw	r4,220(sp)
   16e68:	d9402e15 	stw	r5,184(sp)
   16e6c:	003b5a06 	br	15bd8 <_gp+0xfffef230>
   16e70:	9080100c 	andi	r2,r18,64
   16e74:	10010726 	beq	r2,zero,17294 <___svfprintf_internal_r+0x1b98>
   16e78:	d8802e17 	ldw	r2,184(sp)
   16e7c:	1500000f 	ldh	r20,0(r2)
   16e80:	10800104 	addi	r2,r2,4
   16e84:	d8802e15 	stw	r2,184(sp)
   16e88:	a02dd7fa 	srai	r22,r20,31
   16e8c:	b005883a 	mov	r2,r22
   16e90:	003b7d06 	br	15c88 <_gp+0xfffef2e0>
   16e94:	9080100c 	andi	r2,r18,64
   16e98:	10010526 	beq	r2,zero,172b0 <___svfprintf_internal_r+0x1bb4>
   16e9c:	d8c02e17 	ldw	r3,184(sp)
   16ea0:	002d883a 	mov	r22,zero
   16ea4:	1d00000b 	ldhu	r20,0(r3)
   16ea8:	18c00104 	addi	r3,r3,4
   16eac:	d8c02e15 	stw	r3,184(sp)
   16eb0:	003ce206 	br	1623c <_gp+0xfffef894>
   16eb4:	bc400007 	ldb	r17,0(r23)
   16eb8:	003a6506 	br	15850 <_gp+0xfffeeea8>
   16ebc:	9080040c 	andi	r2,r18,16
   16ec0:	10010126 	beq	r2,zero,172c8 <___svfprintf_internal_r+0x1bcc>
   16ec4:	d8c02e17 	ldw	r3,184(sp)
   16ec8:	d9002f17 	ldw	r4,188(sp)
   16ecc:	18800017 	ldw	r2,0(r3)
   16ed0:	18c00104 	addi	r3,r3,4
   16ed4:	d8c02e15 	stw	r3,184(sp)
   16ed8:	11000015 	stw	r4,0(r2)
   16edc:	003a3206 	br	157a8 <_gp+0xfffeee00>
   16ee0:	d9002a17 	ldw	r4,168(sp)
   16ee4:	d8002785 	stb	zero,158(sp)
   16ee8:	203d8d16 	blt	r4,zero,16520 <_gp+0xfffefb78>
   16eec:	00bfdfc4 	movi	r2,-129
   16ef0:	90a4703a 	and	r18,r18,r2
   16ef4:	003ad506 	br	15a4c <_gp+0xfffef0a4>
   16ef8:	014000b4 	movhi	r5,2
   16efc:	2977bc84 	addi	r5,r5,-8462
   16f00:	d9402c15 	stw	r5,176(sp)
   16f04:	d9402c17 	ldw	r5,176(sp)
   16f08:	1c47883a 	add	r3,r3,r17
   16f0c:	10800044 	addi	r2,r2,1
   16f10:	41400015 	stw	r5,0(r8)
   16f14:	44400115 	stw	r17,4(r8)
   16f18:	d8c02015 	stw	r3,128(sp)
   16f1c:	d8801f15 	stw	r2,124(sp)
   16f20:	010001c4 	movi	r4,7
   16f24:	20bf3016 	blt	r4,r2,16be8 <_gp+0xffff0240>
   16f28:	42000204 	addi	r8,r8,8
   16f2c:	003f3506 	br	16c04 <_gp+0xffff025c>
   16f30:	010000b4 	movhi	r4,2
   16f34:	2137bc84 	addi	r4,r4,-8462
   16f38:	d9002c15 	stw	r4,176(sp)
   16f3c:	003c3c06 	br	16030 <_gp+0xfffef688>
   16f40:	d9402d17 	ldw	r5,180(sp)
   16f44:	d9801e04 	addi	r6,sp,120
   16f48:	9809883a 	mov	r4,r19
   16f4c:	001ac4c0 	call	1ac4c <__ssprint_r>
   16f50:	103ad11e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   16f54:	d8c02017 	ldw	r3,128(sp)
   16f58:	da000404 	addi	r8,sp,16
   16f5c:	003d9306 	br	165ac <_gp+0xfffefc04>
   16f60:	d8801f17 	ldw	r2,124(sp)
   16f64:	014000b4 	movhi	r5,2
   16f68:	01000044 	movi	r4,1
   16f6c:	18c00044 	addi	r3,r3,1
   16f70:	10800044 	addi	r2,r2,1
   16f74:	2977bc04 	addi	r5,r5,-8464
   16f78:	41000115 	stw	r4,4(r8)
   16f7c:	41400015 	stw	r5,0(r8)
   16f80:	d8c02015 	stw	r3,128(sp)
   16f84:	d8801f15 	stw	r2,124(sp)
   16f88:	010001c4 	movi	r4,7
   16f8c:	2080b516 	blt	r4,r2,17264 <___svfprintf_internal_r+0x1b68>
   16f90:	42000204 	addi	r8,r8,8
   16f94:	8800041e 	bne	r17,zero,16fa8 <___svfprintf_internal_r+0x18ac>
   16f98:	d8803317 	ldw	r2,204(sp)
   16f9c:	1000021e 	bne	r2,zero,16fa8 <___svfprintf_internal_r+0x18ac>
   16fa0:	9080004c 	andi	r2,r18,1
   16fa4:	103c3926 	beq	r2,zero,1608c <_gp+0xfffef6e4>
   16fa8:	d9003817 	ldw	r4,224(sp)
   16fac:	d8801f17 	ldw	r2,124(sp)
   16fb0:	d9403417 	ldw	r5,208(sp)
   16fb4:	20c7883a 	add	r3,r4,r3
   16fb8:	10800044 	addi	r2,r2,1
   16fbc:	41000115 	stw	r4,4(r8)
   16fc0:	41400015 	stw	r5,0(r8)
   16fc4:	d8c02015 	stw	r3,128(sp)
   16fc8:	d8801f15 	stw	r2,124(sp)
   16fcc:	010001c4 	movi	r4,7
   16fd0:	20818016 	blt	r4,r2,175d4 <___svfprintf_internal_r+0x1ed8>
   16fd4:	42000204 	addi	r8,r8,8
   16fd8:	0463c83a 	sub	r17,zero,r17
   16fdc:	0440cb0e 	bge	zero,r17,1730c <___svfprintf_internal_r+0x1c10>
   16fe0:	05800404 	movi	r22,16
   16fe4:	b440e80e 	bge	r22,r17,17388 <___svfprintf_internal_r+0x1c8c>
   16fe8:	014000b4 	movhi	r5,2
   16fec:	2977bc84 	addi	r5,r5,-8462
   16ff0:	d9402c15 	stw	r5,176(sp)
   16ff4:	070001c4 	movi	fp,7
   16ff8:	dd002d17 	ldw	r20,180(sp)
   16ffc:	00000306 	br	1700c <___svfprintf_internal_r+0x1910>
   17000:	42000204 	addi	r8,r8,8
   17004:	8c7ffc04 	addi	r17,r17,-16
   17008:	b440e20e 	bge	r22,r17,17394 <___svfprintf_internal_r+0x1c98>
   1700c:	18c00404 	addi	r3,r3,16
   17010:	10800044 	addi	r2,r2,1
   17014:	45400015 	stw	r21,0(r8)
   17018:	45800115 	stw	r22,4(r8)
   1701c:	d8c02015 	stw	r3,128(sp)
   17020:	d8801f15 	stw	r2,124(sp)
   17024:	e0bff60e 	bge	fp,r2,17000 <_gp+0xffff0658>
   17028:	d9801e04 	addi	r6,sp,120
   1702c:	a00b883a 	mov	r5,r20
   17030:	9809883a 	mov	r4,r19
   17034:	001ac4c0 	call	1ac4c <__ssprint_r>
   17038:	103a971e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   1703c:	d8c02017 	ldw	r3,128(sp)
   17040:	d8801f17 	ldw	r2,124(sp)
   17044:	da000404 	addi	r8,sp,16
   17048:	003fee06 	br	17004 <_gp+0xffff065c>
   1704c:	d9002e17 	ldw	r4,184(sp)
   17050:	d9402a17 	ldw	r5,168(sp)
   17054:	002d883a 	mov	r22,zero
   17058:	20800104 	addi	r2,r4,4
   1705c:	25000017 	ldw	r20,0(r4)
   17060:	283e7d0e 	bge	r5,zero,16a58 <_gp+0xffff00b0>
   17064:	003eda06 	br	16bd0 <_gp+0xffff0228>
   17068:	d9002e17 	ldw	r4,184(sp)
   1706c:	d9402a17 	ldw	r5,168(sp)
   17070:	002d883a 	mov	r22,zero
   17074:	20800104 	addi	r2,r4,4
   17078:	25000017 	ldw	r20,0(r4)
   1707c:	283e2d0e 	bge	r5,zero,16934 <_gp+0xfffeff8c>
   17080:	003f6b06 	br	16e30 <_gp+0xffff0488>
   17084:	d8c02e15 	stw	r3,184(sp)
   17088:	0039883a 	mov	fp,zero
   1708c:	003ed206 	br	16bd8 <_gp+0xffff0230>
   17090:	bc400043 	ldbu	r17,1(r23)
   17094:	84000814 	ori	r16,r16,32
   17098:	bdc00044 	addi	r23,r23,1
   1709c:	8c403fcc 	andi	r17,r17,255
   170a0:	8c40201c 	xori	r17,r17,128
   170a4:	8c7fe004 	addi	r17,r17,-128
   170a8:	0039e906 	br	15850 <_gp+0xfffeeea8>
   170ac:	d9402d17 	ldw	r5,180(sp)
   170b0:	d9801e04 	addi	r6,sp,120
   170b4:	9809883a 	mov	r4,r19
   170b8:	001ac4c0 	call	1ac4c <__ssprint_r>
   170bc:	103a761e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   170c0:	d8c02017 	ldw	r3,128(sp)
   170c4:	da000404 	addi	r8,sp,16
   170c8:	003d4a06 	br	165f4 <_gp+0xfffefc4c>
   170cc:	d9002a17 	ldw	r4,168(sp)
   170d0:	05bff7c4 	movi	r22,-33
   170d4:	00bfffc4 	movi	r2,-1
   170d8:	8dac703a 	and	r22,r17,r22
   170dc:	20806a26 	beq	r4,r2,17288 <___svfprintf_internal_r+0x1b8c>
   170e0:	008011c4 	movi	r2,71
   170e4:	b0813726 	beq	r22,r2,175c4 <___svfprintf_internal_r+0x1ec8>
   170e8:	d9003717 	ldw	r4,220(sp)
   170ec:	90c04014 	ori	r3,r18,256
   170f0:	d8c02c15 	stw	r3,176(sp)
   170f4:	20015d16 	blt	r4,zero,1766c <___svfprintf_internal_r+0x1f70>
   170f8:	dd003717 	ldw	r20,220(sp)
   170fc:	d8002905 	stb	zero,164(sp)
   17100:	00801984 	movi	r2,102
   17104:	88814026 	beq	r17,r2,17608 <___svfprintf_internal_r+0x1f0c>
   17108:	00801184 	movi	r2,70
   1710c:	88817126 	beq	r17,r2,176d4 <___svfprintf_internal_r+0x1fd8>
   17110:	00801144 	movi	r2,69
   17114:	b0816226 	beq	r22,r2,176a0 <___svfprintf_internal_r+0x1fa4>
   17118:	d8c02a17 	ldw	r3,168(sp)
   1711c:	d8802104 	addi	r2,sp,132
   17120:	d8800315 	stw	r2,12(sp)
   17124:	d9403617 	ldw	r5,216(sp)
   17128:	d8802504 	addi	r2,sp,148
   1712c:	d8800215 	stw	r2,8(sp)
   17130:	d8802604 	addi	r2,sp,152
   17134:	d8c00015 	stw	r3,0(sp)
   17138:	d8800115 	stw	r2,4(sp)
   1713c:	01c00084 	movi	r7,2
   17140:	a00d883a 	mov	r6,r20
   17144:	9809883a 	mov	r4,r19
   17148:	d8c03d15 	stw	r3,244(sp)
   1714c:	da003e15 	stw	r8,248(sp)
   17150:	0017be00 	call	17be0 <_dtoa_r>
   17154:	1021883a 	mov	r16,r2
   17158:	008019c4 	movi	r2,103
   1715c:	d8c03d17 	ldw	r3,244(sp)
   17160:	da003e17 	ldw	r8,248(sp)
   17164:	8880e726 	beq	r17,r2,17504 <___svfprintf_internal_r+0x1e08>
   17168:	008011c4 	movi	r2,71
   1716c:	8880d426 	beq	r17,r2,174c0 <___svfprintf_internal_r+0x1dc4>
   17170:	80f9883a 	add	fp,r16,r3
   17174:	d9003617 	ldw	r4,216(sp)
   17178:	000d883a 	mov	r6,zero
   1717c:	000f883a 	mov	r7,zero
   17180:	a00b883a 	mov	r5,r20
   17184:	da003e15 	stw	r8,248(sp)
   17188:	0012c900 	call	12c90 <__eqdf2>
   1718c:	da003e17 	ldw	r8,248(sp)
   17190:	1000e426 	beq	r2,zero,17524 <___svfprintf_internal_r+0x1e28>
   17194:	d8802117 	ldw	r2,132(sp)
   17198:	1700062e 	bgeu	r2,fp,171b4 <___svfprintf_internal_r+0x1ab8>
   1719c:	01000c04 	movi	r4,48
   171a0:	10c00044 	addi	r3,r2,1
   171a4:	d8c02115 	stw	r3,132(sp)
   171a8:	11000005 	stb	r4,0(r2)
   171ac:	d8802117 	ldw	r2,132(sp)
   171b0:	173ffb36 	bltu	r2,fp,171a0 <_gp+0xffff07f8>
   171b4:	1405c83a 	sub	r2,r2,r16
   171b8:	d8803315 	stw	r2,204(sp)
   171bc:	008011c4 	movi	r2,71
   171c0:	b080c526 	beq	r22,r2,174d8 <___svfprintf_internal_r+0x1ddc>
   171c4:	00801944 	movi	r2,101
   171c8:	1441d80e 	bge	r2,r17,1792c <___svfprintf_internal_r+0x2230>
   171cc:	d8c02617 	ldw	r3,152(sp)
   171d0:	00801984 	movi	r2,102
   171d4:	d8c03215 	stw	r3,200(sp)
   171d8:	88813426 	beq	r17,r2,176ac <___svfprintf_internal_r+0x1fb0>
   171dc:	d8c03217 	ldw	r3,200(sp)
   171e0:	d9003317 	ldw	r4,204(sp)
   171e4:	19012516 	blt	r3,r4,1767c <___svfprintf_internal_r+0x1f80>
   171e8:	9480004c 	andi	r18,r18,1
   171ec:	9001841e 	bne	r18,zero,17800 <___svfprintf_internal_r+0x2104>
   171f0:	1805883a 	mov	r2,r3
   171f4:	1801cb16 	blt	r3,zero,17924 <___svfprintf_internal_r+0x2228>
   171f8:	d8c03217 	ldw	r3,200(sp)
   171fc:	044019c4 	movi	r17,103
   17200:	d8c02b15 	stw	r3,172(sp)
   17204:	df002907 	ldb	fp,164(sp)
   17208:	e000a61e 	bne	fp,zero,174a4 <___svfprintf_internal_r+0x1da8>
   1720c:	df002783 	ldbu	fp,158(sp)
   17210:	d8802915 	stw	r2,164(sp)
   17214:	dc802c17 	ldw	r18,176(sp)
   17218:	d8002a15 	stw	zero,168(sp)
   1721c:	003af506 	br	15df4 <_gp+0xfffef44c>
   17220:	040000b4 	movhi	r16,2
   17224:	8437ac04 	addi	r16,r16,-8528
   17228:	003a7e06 	br	15c24 <_gp+0xfffef27c>
   1722c:	d9003917 	ldw	r4,228(sp)
   17230:	04001004 	movi	r16,64
   17234:	800b883a 	mov	r5,r16
   17238:	00142580 	call	14258 <_malloc_r>
   1723c:	d9002d17 	ldw	r4,180(sp)
   17240:	20800015 	stw	r2,0(r4)
   17244:	20800415 	stw	r2,16(r4)
   17248:	1001d026 	beq	r2,zero,1798c <___svfprintf_internal_r+0x2290>
   1724c:	d8802d17 	ldw	r2,180(sp)
   17250:	14000515 	stw	r16,20(r2)
   17254:	00394406 	br	15768 <_gp+0xfffeedc0>
   17258:	040000b4 	movhi	r16,2
   1725c:	8437ae04 	addi	r16,r16,-8520
   17260:	003ee106 	br	16de8 <_gp+0xffff0440>
   17264:	d9402d17 	ldw	r5,180(sp)
   17268:	d9801e04 	addi	r6,sp,120
   1726c:	9809883a 	mov	r4,r19
   17270:	001ac4c0 	call	1ac4c <__ssprint_r>
   17274:	103a081e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   17278:	dc402617 	ldw	r17,152(sp)
   1727c:	d8c02017 	ldw	r3,128(sp)
   17280:	da000404 	addi	r8,sp,16
   17284:	003f4306 	br	16f94 <_gp+0xffff05ec>
   17288:	01400184 	movi	r5,6
   1728c:	d9402a15 	stw	r5,168(sp)
   17290:	003f9506 	br	170e8 <_gp+0xffff0740>
   17294:	d8c02e17 	ldw	r3,184(sp)
   17298:	1d000017 	ldw	r20,0(r3)
   1729c:	18c00104 	addi	r3,r3,4
   172a0:	d8c02e15 	stw	r3,184(sp)
   172a4:	a02dd7fa 	srai	r22,r20,31
   172a8:	b005883a 	mov	r2,r22
   172ac:	003a7606 	br	15c88 <_gp+0xfffef2e0>
   172b0:	d9002e17 	ldw	r4,184(sp)
   172b4:	002d883a 	mov	r22,zero
   172b8:	25000017 	ldw	r20,0(r4)
   172bc:	21000104 	addi	r4,r4,4
   172c0:	d9002e15 	stw	r4,184(sp)
   172c4:	003bdd06 	br	1623c <_gp+0xfffef894>
   172c8:	9480100c 	andi	r18,r18,64
   172cc:	90006e26 	beq	r18,zero,17488 <___svfprintf_internal_r+0x1d8c>
   172d0:	d9402e17 	ldw	r5,184(sp)
   172d4:	d8c02f17 	ldw	r3,188(sp)
   172d8:	28800017 	ldw	r2,0(r5)
   172dc:	29400104 	addi	r5,r5,4
   172e0:	d9402e15 	stw	r5,184(sp)
   172e4:	10c0000d 	sth	r3,0(r2)
   172e8:	00392f06 	br	157a8 <_gp+0xfffeee00>
   172ec:	d9402d17 	ldw	r5,180(sp)
   172f0:	d9801e04 	addi	r6,sp,120
   172f4:	9809883a 	mov	r4,r19
   172f8:	001ac4c0 	call	1ac4c <__ssprint_r>
   172fc:	1039e61e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   17300:	d8c02017 	ldw	r3,128(sp)
   17304:	d8801f17 	ldw	r2,124(sp)
   17308:	da000404 	addi	r8,sp,16
   1730c:	d9403317 	ldw	r5,204(sp)
   17310:	10800044 	addi	r2,r2,1
   17314:	44000015 	stw	r16,0(r8)
   17318:	28c7883a 	add	r3,r5,r3
   1731c:	003b5506 	br	16074 <_gp+0xfffef6cc>
   17320:	8009883a 	mov	r4,r16
   17324:	df003e15 	stw	fp,248(sp)
   17328:	001abb40 	call	1abb4 <strlen>
   1732c:	d8802b15 	stw	r2,172(sp)
   17330:	da003e17 	ldw	r8,248(sp)
   17334:	103c160e 	bge	r2,zero,16390 <_gp+0xfffef9e8>
   17338:	0005883a 	mov	r2,zero
   1733c:	003c1406 	br	16390 <_gp+0xfffef9e8>
   17340:	00bfffc4 	movi	r2,-1
   17344:	0039d906 	br	15aac <_gp+0xfffef104>
   17348:	010000b4 	movhi	r4,2
   1734c:	2137c084 	addi	r4,r4,-8446
   17350:	d9003515 	stw	r4,212(sp)
   17354:	003ae406 	br	15ee8 <_gp+0xfffef540>
   17358:	013fffc4 	movi	r4,-1
   1735c:	0039fa06 	br	15b48 <_gp+0xfffef1a0>
   17360:	d9402d17 	ldw	r5,180(sp)
   17364:	d9801e04 	addi	r6,sp,120
   17368:	9809883a 	mov	r4,r19
   1736c:	001ac4c0 	call	1ac4c <__ssprint_r>
   17370:	1039c91e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   17374:	d8c02017 	ldw	r3,128(sp)
   17378:	da000404 	addi	r8,sp,16
   1737c:	003d8406 	br	16990 <_gp+0xfffeffe8>
   17380:	0023883a 	mov	r17,zero
   17384:	003d8306 	br	16994 <_gp+0xfffeffec>
   17388:	010000b4 	movhi	r4,2
   1738c:	2137bc84 	addi	r4,r4,-8462
   17390:	d9002c15 	stw	r4,176(sp)
   17394:	d9002c17 	ldw	r4,176(sp)
   17398:	1c47883a 	add	r3,r3,r17
   1739c:	10800044 	addi	r2,r2,1
   173a0:	41000015 	stw	r4,0(r8)
   173a4:	44400115 	stw	r17,4(r8)
   173a8:	d8c02015 	stw	r3,128(sp)
   173ac:	d8801f15 	stw	r2,124(sp)
   173b0:	010001c4 	movi	r4,7
   173b4:	20bfcd16 	blt	r4,r2,172ec <_gp+0xffff0944>
   173b8:	42000204 	addi	r8,r8,8
   173bc:	003fd306 	br	1730c <_gp+0xffff0964>
   173c0:	d9402d17 	ldw	r5,180(sp)
   173c4:	d9801e04 	addi	r6,sp,120
   173c8:	9809883a 	mov	r4,r19
   173cc:	001ac4c0 	call	1ac4c <__ssprint_r>
   173d0:	1039b11e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   173d4:	d8802617 	ldw	r2,152(sp)
   173d8:	d8c02017 	ldw	r3,128(sp)
   173dc:	da000404 	addi	r8,sp,16
   173e0:	003e1c06 	br	16c54 <_gp+0xffff02ac>
   173e4:	d8802a17 	ldw	r2,168(sp)
   173e8:	00c00184 	movi	r3,6
   173ec:	1880012e 	bgeu	r3,r2,173f4 <___svfprintf_internal_r+0x1cf8>
   173f0:	1805883a 	mov	r2,r3
   173f4:	d8802b15 	stw	r2,172(sp)
   173f8:	1000f316 	blt	r2,zero,177c8 <___svfprintf_internal_r+0x20cc>
   173fc:	040000b4 	movhi	r16,2
   17400:	d8802915 	stw	r2,164(sp)
   17404:	dd002e15 	stw	r20,184(sp)
   17408:	d8002a15 	stw	zero,168(sp)
   1740c:	d8003215 	stw	zero,200(sp)
   17410:	8437ba04 	addi	r16,r16,-8472
   17414:	0039883a 	mov	fp,zero
   17418:	003a7d06 	br	15e10 <_gp+0xfffef468>
   1741c:	010000b4 	movhi	r4,2
   17420:	2137c084 	addi	r4,r4,-8446
   17424:	d9003515 	stw	r4,212(sp)
   17428:	003b3d06 	br	16120 <_gp+0xfffef778>
   1742c:	d9402d17 	ldw	r5,180(sp)
   17430:	d9801e04 	addi	r6,sp,120
   17434:	9809883a 	mov	r4,r19
   17438:	001ac4c0 	call	1ac4c <__ssprint_r>
   1743c:	1039961e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   17440:	d8802617 	ldw	r2,152(sp)
   17444:	d9403317 	ldw	r5,204(sp)
   17448:	d8c02017 	ldw	r3,128(sp)
   1744c:	da000404 	addi	r8,sp,16
   17450:	2885c83a 	sub	r2,r5,r2
   17454:	003e1006 	br	16c98 <_gp+0xffff02f0>
   17458:	00800044 	movi	r2,1
   1745c:	10803fcc 	andi	r2,r2,255
   17460:	00c00044 	movi	r3,1
   17464:	10fa1026 	beq	r2,r3,15ca8 <_gp+0xfffef300>
   17468:	00c00084 	movi	r3,2
   1746c:	10fb8226 	beq	r2,r3,16278 <_gp+0xfffef8d0>
   17470:	003a4206 	br	15d7c <_gp+0xfffef3d4>
   17474:	0021883a 	mov	r16,zero
   17478:	003e0806 	br	16c9c <_gp+0xffff02f4>
   1747c:	07000b44 	movi	fp,45
   17480:	df002785 	stb	fp,158(sp)
   17484:	0039e306 	br	15c14 <_gp+0xfffef26c>
   17488:	d9002e17 	ldw	r4,184(sp)
   1748c:	d9402f17 	ldw	r5,188(sp)
   17490:	20800017 	ldw	r2,0(r4)
   17494:	21000104 	addi	r4,r4,4
   17498:	d9002e15 	stw	r4,184(sp)
   1749c:	11400015 	stw	r5,0(r2)
   174a0:	0038c106 	br	157a8 <_gp+0xfffeee00>
   174a4:	00c00b44 	movi	r3,45
   174a8:	d8c02785 	stb	r3,158(sp)
   174ac:	d8802915 	stw	r2,164(sp)
   174b0:	dc802c17 	ldw	r18,176(sp)
   174b4:	d8002a15 	stw	zero,168(sp)
   174b8:	07000b44 	movi	fp,45
   174bc:	003a5106 	br	15e04 <_gp+0xfffef45c>
   174c0:	9080004c 	andi	r2,r18,1
   174c4:	1000941e 	bne	r2,zero,17718 <___svfprintf_internal_r+0x201c>
   174c8:	d8802117 	ldw	r2,132(sp)
   174cc:	1405c83a 	sub	r2,r2,r16
   174d0:	d8803315 	stw	r2,204(sp)
   174d4:	b441151e 	bne	r22,r17,1792c <___svfprintf_internal_r+0x2230>
   174d8:	dd802617 	ldw	r22,152(sp)
   174dc:	00bfff44 	movi	r2,-3
   174e0:	b0801a16 	blt	r22,r2,1754c <___svfprintf_internal_r+0x1e50>
   174e4:	d9402a17 	ldw	r5,168(sp)
   174e8:	2d801816 	blt	r5,r22,1754c <___svfprintf_internal_r+0x1e50>
   174ec:	dd803215 	stw	r22,200(sp)
   174f0:	003f3a06 	br	171dc <_gp+0xffff0834>
   174f4:	1025883a 	mov	r18,r2
   174f8:	0039883a 	mov	fp,zero
   174fc:	00800084 	movi	r2,2
   17500:	003fd606 	br	1745c <_gp+0xffff0ab4>
   17504:	9080004c 	andi	r2,r18,1
   17508:	103f191e 	bne	r2,zero,17170 <_gp+0xffff07c8>
   1750c:	d8802117 	ldw	r2,132(sp)
   17510:	003f2806 	br	171b4 <_gp+0xffff080c>
   17514:	010000b4 	movhi	r4,2
   17518:	2137bc84 	addi	r4,r4,-8462
   1751c:	d9002c15 	stw	r4,176(sp)
   17520:	003c7c06 	br	16714 <_gp+0xfffefd6c>
   17524:	e005883a 	mov	r2,fp
   17528:	003f2206 	br	171b4 <_gp+0xffff080c>
   1752c:	d9002a17 	ldw	r4,168(sp)
   17530:	df002783 	ldbu	fp,158(sp)
   17534:	dd002e15 	stw	r20,184(sp)
   17538:	d9002915 	stw	r4,164(sp)
   1753c:	d9002b15 	stw	r4,172(sp)
   17540:	d8002a15 	stw	zero,168(sp)
   17544:	d8003215 	stw	zero,200(sp)
   17548:	003a2a06 	br	15df4 <_gp+0xfffef44c>
   1754c:	8c7fff84 	addi	r17,r17,-2
   17550:	b5bfffc4 	addi	r22,r22,-1
   17554:	dd802615 	stw	r22,152(sp)
   17558:	dc4022c5 	stb	r17,139(sp)
   1755c:	b000c316 	blt	r22,zero,1786c <___svfprintf_internal_r+0x2170>
   17560:	00800ac4 	movi	r2,43
   17564:	d8802305 	stb	r2,140(sp)
   17568:	00800244 	movi	r2,9
   1756c:	15806e16 	blt	r2,r22,17728 <___svfprintf_internal_r+0x202c>
   17570:	00800c04 	movi	r2,48
   17574:	b5800c04 	addi	r22,r22,48
   17578:	d8802345 	stb	r2,141(sp)
   1757c:	dd802385 	stb	r22,142(sp)
   17580:	d88023c4 	addi	r2,sp,143
   17584:	df0022c4 	addi	fp,sp,139
   17588:	d8c03317 	ldw	r3,204(sp)
   1758c:	1739c83a 	sub	fp,r2,fp
   17590:	d9003317 	ldw	r4,204(sp)
   17594:	e0c7883a 	add	r3,fp,r3
   17598:	df003b15 	stw	fp,236(sp)
   1759c:	d8c02b15 	stw	r3,172(sp)
   175a0:	00800044 	movi	r2,1
   175a4:	1100b70e 	bge	r2,r4,17884 <___svfprintf_internal_r+0x2188>
   175a8:	d8c02b17 	ldw	r3,172(sp)
   175ac:	18c00044 	addi	r3,r3,1
   175b0:	d8c02b15 	stw	r3,172(sp)
   175b4:	1805883a 	mov	r2,r3
   175b8:	1800b016 	blt	r3,zero,1787c <___svfprintf_internal_r+0x2180>
   175bc:	d8003215 	stw	zero,200(sp)
   175c0:	003f1006 	br	17204 <_gp+0xffff085c>
   175c4:	d8802a17 	ldw	r2,168(sp)
   175c8:	103ec71e 	bne	r2,zero,170e8 <_gp+0xffff0740>
   175cc:	dc002a15 	stw	r16,168(sp)
   175d0:	003ec506 	br	170e8 <_gp+0xffff0740>
   175d4:	d9402d17 	ldw	r5,180(sp)
   175d8:	d9801e04 	addi	r6,sp,120
   175dc:	9809883a 	mov	r4,r19
   175e0:	001ac4c0 	call	1ac4c <__ssprint_r>
   175e4:	10392c1e 	bne	r2,zero,15a98 <_gp+0xfffef0f0>
   175e8:	dc402617 	ldw	r17,152(sp)
   175ec:	d8c02017 	ldw	r3,128(sp)
   175f0:	d8801f17 	ldw	r2,124(sp)
   175f4:	da000404 	addi	r8,sp,16
   175f8:	003e7706 	br	16fd8 <_gp+0xffff0630>
   175fc:	182f883a 	mov	r23,r3
   17600:	d8002a15 	stw	zero,168(sp)
   17604:	00389306 	br	15854 <_gp+0xfffeeeac>
   17608:	d8c02a17 	ldw	r3,168(sp)
   1760c:	d8802104 	addi	r2,sp,132
   17610:	d8800315 	stw	r2,12(sp)
   17614:	d9403617 	ldw	r5,216(sp)
   17618:	d8802504 	addi	r2,sp,148
   1761c:	d8800215 	stw	r2,8(sp)
   17620:	d8802604 	addi	r2,sp,152
   17624:	d8c00015 	stw	r3,0(sp)
   17628:	9809883a 	mov	r4,r19
   1762c:	d8800115 	stw	r2,4(sp)
   17630:	01c000c4 	movi	r7,3
   17634:	a00d883a 	mov	r6,r20
   17638:	da003e15 	stw	r8,248(sp)
   1763c:	0017be00 	call	17be0 <_dtoa_r>
   17640:	d9002a17 	ldw	r4,168(sp)
   17644:	da003e17 	ldw	r8,248(sp)
   17648:	1021883a 	mov	r16,r2
   1764c:	1139883a 	add	fp,r2,r4
   17650:	2007883a 	mov	r3,r4
   17654:	81000007 	ldb	r4,0(r16)
   17658:	00800c04 	movi	r2,48
   1765c:	20806f26 	beq	r4,r2,1781c <___svfprintf_internal_r+0x2120>
   17660:	d8c02617 	ldw	r3,152(sp)
   17664:	e0f9883a 	add	fp,fp,r3
   17668:	003ec206 	br	17174 <_gp+0xffff07cc>
   1766c:	00c00b44 	movi	r3,45
   17670:	2520003c 	xorhi	r20,r4,32768
   17674:	d8c02905 	stb	r3,164(sp)
   17678:	003ea106 	br	17100 <_gp+0xffff0758>
   1767c:	d8c03217 	ldw	r3,200(sp)
   17680:	00c0890e 	bge	zero,r3,178a8 <___svfprintf_internal_r+0x21ac>
   17684:	00800044 	movi	r2,1
   17688:	d9003317 	ldw	r4,204(sp)
   1768c:	1105883a 	add	r2,r2,r4
   17690:	d8802b15 	stw	r2,172(sp)
   17694:	10005f16 	blt	r2,zero,17814 <___svfprintf_internal_r+0x2118>
   17698:	044019c4 	movi	r17,103
   1769c:	003ed906 	br	17204 <_gp+0xffff085c>
   176a0:	d9002a17 	ldw	r4,168(sp)
   176a4:	20c00044 	addi	r3,r4,1
   176a8:	003e9c06 	br	1711c <_gp+0xffff0774>
   176ac:	d9002a17 	ldw	r4,168(sp)
   176b0:	00c0680e 	bge	zero,r3,17854 <___svfprintf_internal_r+0x2158>
   176b4:	2000461e 	bne	r4,zero,177d0 <___svfprintf_internal_r+0x20d4>
   176b8:	9480004c 	andi	r18,r18,1
   176bc:	9000441e 	bne	r18,zero,177d0 <___svfprintf_internal_r+0x20d4>
   176c0:	1805883a 	mov	r2,r3
   176c4:	1800a116 	blt	r3,zero,1794c <___svfprintf_internal_r+0x2250>
   176c8:	d8c03217 	ldw	r3,200(sp)
   176cc:	d8c02b15 	stw	r3,172(sp)
   176d0:	003ecc06 	br	17204 <_gp+0xffff085c>
   176d4:	d9402a17 	ldw	r5,168(sp)
   176d8:	d8802104 	addi	r2,sp,132
   176dc:	d8800315 	stw	r2,12(sp)
   176e0:	d9400015 	stw	r5,0(sp)
   176e4:	d8802504 	addi	r2,sp,148
   176e8:	d9403617 	ldw	r5,216(sp)
   176ec:	d8800215 	stw	r2,8(sp)
   176f0:	d8802604 	addi	r2,sp,152
   176f4:	d8800115 	stw	r2,4(sp)
   176f8:	01c000c4 	movi	r7,3
   176fc:	a00d883a 	mov	r6,r20
   17700:	9809883a 	mov	r4,r19
   17704:	da003e15 	stw	r8,248(sp)
   17708:	0017be00 	call	17be0 <_dtoa_r>
   1770c:	d8c02a17 	ldw	r3,168(sp)
   17710:	da003e17 	ldw	r8,248(sp)
   17714:	1021883a 	mov	r16,r2
   17718:	00801184 	movi	r2,70
   1771c:	80f9883a 	add	fp,r16,r3
   17720:	88bfcc26 	beq	r17,r2,17654 <_gp+0xffff0cac>
   17724:	003e9306 	br	17174 <_gp+0xffff07cc>
   17728:	df0022c4 	addi	fp,sp,139
   1772c:	dc002a15 	stw	r16,168(sp)
   17730:	9829883a 	mov	r20,r19
   17734:	e021883a 	mov	r16,fp
   17738:	4027883a 	mov	r19,r8
   1773c:	b009883a 	mov	r4,r22
   17740:	01400284 	movi	r5,10
   17744:	00118e40 	call	118e4 <__modsi3>
   17748:	10800c04 	addi	r2,r2,48
   1774c:	843fffc4 	addi	r16,r16,-1
   17750:	b009883a 	mov	r4,r22
   17754:	01400284 	movi	r5,10
   17758:	80800005 	stb	r2,0(r16)
   1775c:	00118600 	call	11860 <__divsi3>
   17760:	102d883a 	mov	r22,r2
   17764:	00800244 	movi	r2,9
   17768:	15bff416 	blt	r2,r22,1773c <_gp+0xffff0d94>
   1776c:	9811883a 	mov	r8,r19
   17770:	b0800c04 	addi	r2,r22,48
   17774:	a027883a 	mov	r19,r20
   17778:	8029883a 	mov	r20,r16
   1777c:	a17fffc4 	addi	r5,r20,-1
   17780:	a0bfffc5 	stb	r2,-1(r20)
   17784:	dc002a17 	ldw	r16,168(sp)
   17788:	2f00782e 	bgeu	r5,fp,1796c <___svfprintf_internal_r+0x2270>
   1778c:	d9c02384 	addi	r7,sp,142
   17790:	3d0fc83a 	sub	r7,r7,r20
   17794:	d9002344 	addi	r4,sp,141
   17798:	e1cf883a 	add	r7,fp,r7
   1779c:	00000106 	br	177a4 <___svfprintf_internal_r+0x20a8>
   177a0:	28800003 	ldbu	r2,0(r5)
   177a4:	20800005 	stb	r2,0(r4)
   177a8:	21000044 	addi	r4,r4,1
   177ac:	29400044 	addi	r5,r5,1
   177b0:	21fffb1e 	bne	r4,r7,177a0 <_gp+0xffff0df8>
   177b4:	d8802304 	addi	r2,sp,140
   177b8:	1505c83a 	sub	r2,r2,r20
   177bc:	d8c02344 	addi	r3,sp,141
   177c0:	1885883a 	add	r2,r3,r2
   177c4:	003f7006 	br	17588 <_gp+0xffff0be0>
   177c8:	0005883a 	mov	r2,zero
   177cc:	003f0b06 	br	173fc <_gp+0xffff0a54>
   177d0:	d9002a17 	ldw	r4,168(sp)
   177d4:	d8c03217 	ldw	r3,200(sp)
   177d8:	20800044 	addi	r2,r4,1
   177dc:	1885883a 	add	r2,r3,r2
   177e0:	d8802b15 	stw	r2,172(sp)
   177e4:	103e870e 	bge	r2,zero,17204 <_gp+0xffff085c>
   177e8:	0005883a 	mov	r2,zero
   177ec:	003e8506 	br	17204 <_gp+0xffff085c>
   177f0:	010000b4 	movhi	r4,2
   177f4:	2137bc84 	addi	r4,r4,-8462
   177f8:	d9002c15 	stw	r4,176(sp)
   177fc:	003cc506 	br	16b14 <_gp+0xffff016c>
   17800:	d8c03217 	ldw	r3,200(sp)
   17804:	18c00044 	addi	r3,r3,1
   17808:	d8c02b15 	stw	r3,172(sp)
   1780c:	1805883a 	mov	r2,r3
   17810:	183fa10e 	bge	r3,zero,17698 <_gp+0xffff0cf0>
   17814:	0005883a 	mov	r2,zero
   17818:	003f9f06 	br	17698 <_gp+0xffff0cf0>
   1781c:	d9003617 	ldw	r4,216(sp)
   17820:	000d883a 	mov	r6,zero
   17824:	000f883a 	mov	r7,zero
   17828:	a00b883a 	mov	r5,r20
   1782c:	d8c03d15 	stw	r3,244(sp)
   17830:	da003e15 	stw	r8,248(sp)
   17834:	0012c900 	call	12c90 <__eqdf2>
   17838:	d8c03d17 	ldw	r3,244(sp)
   1783c:	da003e17 	ldw	r8,248(sp)
   17840:	103f8726 	beq	r2,zero,17660 <_gp+0xffff0cb8>
   17844:	00800044 	movi	r2,1
   17848:	10c7c83a 	sub	r3,r2,r3
   1784c:	d8c02615 	stw	r3,152(sp)
   17850:	003f8406 	br	17664 <_gp+0xffff0cbc>
   17854:	20000e1e 	bne	r4,zero,17890 <___svfprintf_internal_r+0x2194>
   17858:	9480004c 	andi	r18,r18,1
   1785c:	90000c1e 	bne	r18,zero,17890 <___svfprintf_internal_r+0x2194>
   17860:	00800044 	movi	r2,1
   17864:	d8802b15 	stw	r2,172(sp)
   17868:	003e6606 	br	17204 <_gp+0xffff085c>
   1786c:	00800b44 	movi	r2,45
   17870:	05adc83a 	sub	r22,zero,r22
   17874:	d8802305 	stb	r2,140(sp)
   17878:	003f3b06 	br	17568 <_gp+0xffff0bc0>
   1787c:	0005883a 	mov	r2,zero
   17880:	003f4e06 	br	175bc <_gp+0xffff0c14>
   17884:	90a4703a 	and	r18,r18,r2
   17888:	903f4a26 	beq	r18,zero,175b4 <_gp+0xffff0c0c>
   1788c:	003f4606 	br	175a8 <_gp+0xffff0c00>
   17890:	d8c02a17 	ldw	r3,168(sp)
   17894:	18c00084 	addi	r3,r3,2
   17898:	d8c02b15 	stw	r3,172(sp)
   1789c:	1805883a 	mov	r2,r3
   178a0:	183e580e 	bge	r3,zero,17204 <_gp+0xffff085c>
   178a4:	003fd006 	br	177e8 <_gp+0xffff0e40>
   178a8:	00800084 	movi	r2,2
   178ac:	10c5c83a 	sub	r2,r2,r3
   178b0:	003f7506 	br	17688 <_gp+0xffff0ce0>
   178b4:	d9402e17 	ldw	r5,184(sp)
   178b8:	d9002e17 	ldw	r4,184(sp)
   178bc:	bc400043 	ldbu	r17,1(r23)
   178c0:	29400017 	ldw	r5,0(r5)
   178c4:	20800104 	addi	r2,r4,4
   178c8:	d8802e15 	stw	r2,184(sp)
   178cc:	d9402a15 	stw	r5,168(sp)
   178d0:	182f883a 	mov	r23,r3
   178d4:	283df10e 	bge	r5,zero,1709c <_gp+0xffff06f4>
   178d8:	8c403fcc 	andi	r17,r17,255
   178dc:	017fffc4 	movi	r5,-1
   178e0:	8c40201c 	xori	r17,r17,128
   178e4:	d9402a15 	stw	r5,168(sp)
   178e8:	8c7fe004 	addi	r17,r17,-128
   178ec:	0037d806 	br	15850 <_gp+0xfffeeea8>
   178f0:	9080004c 	andi	r2,r18,1
   178f4:	0039883a 	mov	fp,zero
   178f8:	10000726 	beq	r2,zero,17918 <___svfprintf_internal_r+0x221c>
   178fc:	d8c02817 	ldw	r3,160(sp)
   17900:	dc001dc4 	addi	r16,sp,119
   17904:	00800c04 	movi	r2,48
   17908:	1c07c83a 	sub	r3,r3,r16
   1790c:	d8801dc5 	stb	r2,119(sp)
   17910:	d8c02b15 	stw	r3,172(sp)
   17914:	00393106 	br	15ddc <_gp+0xfffef434>
   17918:	d8002b15 	stw	zero,172(sp)
   1791c:	dc001e04 	addi	r16,sp,120
   17920:	00392e06 	br	15ddc <_gp+0xfffef434>
   17924:	0005883a 	mov	r2,zero
   17928:	003e3306 	br	171f8 <_gp+0xffff0850>
   1792c:	dd802617 	ldw	r22,152(sp)
   17930:	003f0706 	br	17550 <_gp+0xffff0ba8>
   17934:	d8c02b03 	ldbu	r3,172(sp)
   17938:	d8c02785 	stb	r3,158(sp)
   1793c:	003a3506 	br	16214 <_gp+0xfffef86c>
   17940:	d8c02b03 	ldbu	r3,172(sp)
   17944:	d8c02785 	stb	r3,158(sp)
   17948:	003a1706 	br	161a8 <_gp+0xfffef800>
   1794c:	0005883a 	mov	r2,zero
   17950:	003f5d06 	br	176c8 <_gp+0xffff0d20>
   17954:	d8c02b03 	ldbu	r3,172(sp)
   17958:	d8c02785 	stb	r3,158(sp)
   1795c:	0038f306 	br	15d2c <_gp+0xfffef384>
   17960:	d8c02b03 	ldbu	r3,172(sp)
   17964:	d8c02785 	stb	r3,158(sp)
   17968:	0038be06 	br	15c64 <_gp+0xfffef2bc>
   1796c:	d8802344 	addi	r2,sp,141
   17970:	003f0506 	br	17588 <_gp+0xffff0be0>
   17974:	d8c02b03 	ldbu	r3,172(sp)
   17978:	d8c02785 	stb	r3,158(sp)
   1797c:	00388b06 	br	15bac <_gp+0xfffef204>
   17980:	d8c02b03 	ldbu	r3,172(sp)
   17984:	d8c02785 	stb	r3,158(sp)
   17988:	003ad706 	br	164e8 <_gp+0xfffefb40>
   1798c:	d9403917 	ldw	r5,228(sp)
   17990:	00800304 	movi	r2,12
   17994:	28800015 	stw	r2,0(r5)
   17998:	00bfffc4 	movi	r2,-1
   1799c:	00384306 	br	15aac <_gp+0xfffef104>
   179a0:	d8c02b03 	ldbu	r3,172(sp)
   179a4:	d8c02785 	stb	r3,158(sp)
   179a8:	003ab606 	br	16484 <_gp+0xfffefadc>
   179ac:	d8c02b03 	ldbu	r3,172(sp)
   179b0:	d8c02785 	stb	r3,158(sp)
   179b4:	003a8906 	br	163dc <_gp+0xfffefa34>

000179b8 <quorem>:
   179b8:	defff204 	addi	sp,sp,-56
   179bc:	ddc00b15 	stw	r23,44(sp)
   179c0:	20800417 	ldw	r2,16(r4)
   179c4:	2dc00417 	ldw	r23,16(r5)
   179c8:	dfc00d15 	stw	ra,52(sp)
   179cc:	df000c15 	stw	fp,48(sp)
   179d0:	dd800a15 	stw	r22,40(sp)
   179d4:	dd400915 	stw	r21,36(sp)
   179d8:	dd000815 	stw	r20,32(sp)
   179dc:	dcc00715 	stw	r19,28(sp)
   179e0:	dc800615 	stw	r18,24(sp)
   179e4:	dc400515 	stw	r17,20(sp)
   179e8:	dc000415 	stw	r16,16(sp)
   179ec:	15c07a16 	blt	r2,r23,17bd8 <quorem+0x220>
   179f0:	bdffffc4 	addi	r23,r23,-1
   179f4:	bde9883a 	add	r20,r23,r23
   179f8:	28c00504 	addi	r3,r5,20
   179fc:	a529883a 	add	r20,r20,r20
   17a00:	1d39883a 	add	fp,r3,r20
   17a04:	24c00504 	addi	r19,r4,20
   17a08:	d9400215 	stw	r5,8(sp)
   17a0c:	9d29883a 	add	r20,r19,r20
   17a10:	e1400017 	ldw	r5,0(fp)
   17a14:	d9000015 	stw	r4,0(sp)
   17a18:	a1000017 	ldw	r4,0(r20)
   17a1c:	29400044 	addi	r5,r5,1
   17a20:	d8c00115 	stw	r3,4(sp)
   17a24:	dd000315 	stw	r20,12(sp)
   17a28:	00119580 	call	11958 <__udivsi3>
   17a2c:	1025883a 	mov	r18,r2
   17a30:	10003026 	beq	r2,zero,17af4 <quorem+0x13c>
   17a34:	dc400117 	ldw	r17,4(sp)
   17a38:	9829883a 	mov	r20,r19
   17a3c:	002d883a 	mov	r22,zero
   17a40:	0021883a 	mov	r16,zero
   17a44:	8d400017 	ldw	r21,0(r17)
   17a48:	900b883a 	mov	r5,r18
   17a4c:	8c400104 	addi	r17,r17,4
   17a50:	a93fffcc 	andi	r4,r21,65535
   17a54:	001411c0 	call	1411c <__mulsi3>
   17a58:	a808d43a 	srli	r4,r21,16
   17a5c:	900b883a 	mov	r5,r18
   17a60:	15ad883a 	add	r22,r2,r22
   17a64:	001411c0 	call	1411c <__mulsi3>
   17a68:	a1000017 	ldw	r4,0(r20)
   17a6c:	b00cd43a 	srli	r6,r22,16
   17a70:	b0ffffcc 	andi	r3,r22,65535
   17a74:	217fffcc 	andi	r5,r4,65535
   17a78:	2c21883a 	add	r16,r5,r16
   17a7c:	80c7c83a 	sub	r3,r16,r3
   17a80:	2008d43a 	srli	r4,r4,16
   17a84:	1185883a 	add	r2,r2,r6
   17a88:	1821d43a 	srai	r16,r3,16
   17a8c:	117fffcc 	andi	r5,r2,65535
   17a90:	2149c83a 	sub	r4,r4,r5
   17a94:	2421883a 	add	r16,r4,r16
   17a98:	8008943a 	slli	r4,r16,16
   17a9c:	18ffffcc 	andi	r3,r3,65535
   17aa0:	102cd43a 	srli	r22,r2,16
   17aa4:	20c8b03a 	or	r4,r4,r3
   17aa8:	a1000015 	stw	r4,0(r20)
   17aac:	8021d43a 	srai	r16,r16,16
   17ab0:	a5000104 	addi	r20,r20,4
   17ab4:	e47fe32e 	bgeu	fp,r17,17a44 <_gp+0xffff109c>
   17ab8:	d8c00317 	ldw	r3,12(sp)
   17abc:	18800017 	ldw	r2,0(r3)
   17ac0:	10000c1e 	bne	r2,zero,17af4 <quorem+0x13c>
   17ac4:	18bfff04 	addi	r2,r3,-4
   17ac8:	9880082e 	bgeu	r19,r2,17aec <quorem+0x134>
   17acc:	18ffff17 	ldw	r3,-4(r3)
   17ad0:	18000326 	beq	r3,zero,17ae0 <quorem+0x128>
   17ad4:	00000506 	br	17aec <quorem+0x134>
   17ad8:	10c00017 	ldw	r3,0(r2)
   17adc:	1800031e 	bne	r3,zero,17aec <quorem+0x134>
   17ae0:	10bfff04 	addi	r2,r2,-4
   17ae4:	bdffffc4 	addi	r23,r23,-1
   17ae8:	98bffb36 	bltu	r19,r2,17ad8 <_gp+0xffff1130>
   17aec:	d8c00017 	ldw	r3,0(sp)
   17af0:	1dc00415 	stw	r23,16(r3)
   17af4:	d9400217 	ldw	r5,8(sp)
   17af8:	d9000017 	ldw	r4,0(sp)
   17afc:	001a3a40 	call	1a3a4 <__mcmp>
   17b00:	10002816 	blt	r2,zero,17ba4 <quorem+0x1ec>
   17b04:	dc400117 	ldw	r17,4(sp)
   17b08:	94800044 	addi	r18,r18,1
   17b0c:	980d883a 	mov	r6,r19
   17b10:	0007883a 	mov	r3,zero
   17b14:	31000017 	ldw	r4,0(r6)
   17b18:	89400017 	ldw	r5,0(r17)
   17b1c:	31800104 	addi	r6,r6,4
   17b20:	20bfffcc 	andi	r2,r4,65535
   17b24:	10c7883a 	add	r3,r2,r3
   17b28:	28bfffcc 	andi	r2,r5,65535
   17b2c:	1885c83a 	sub	r2,r3,r2
   17b30:	280ad43a 	srli	r5,r5,16
   17b34:	2008d43a 	srli	r4,r4,16
   17b38:	1007d43a 	srai	r3,r2,16
   17b3c:	10bfffcc 	andi	r2,r2,65535
   17b40:	2149c83a 	sub	r4,r4,r5
   17b44:	20c9883a 	add	r4,r4,r3
   17b48:	200a943a 	slli	r5,r4,16
   17b4c:	8c400104 	addi	r17,r17,4
   17b50:	2007d43a 	srai	r3,r4,16
   17b54:	2884b03a 	or	r2,r5,r2
   17b58:	30bfff15 	stw	r2,-4(r6)
   17b5c:	e47fed2e 	bgeu	fp,r17,17b14 <_gp+0xffff116c>
   17b60:	bdc5883a 	add	r2,r23,r23
   17b64:	1085883a 	add	r2,r2,r2
   17b68:	9887883a 	add	r3,r19,r2
   17b6c:	18800017 	ldw	r2,0(r3)
   17b70:	10000c1e 	bne	r2,zero,17ba4 <quorem+0x1ec>
   17b74:	18bfff04 	addi	r2,r3,-4
   17b78:	9880082e 	bgeu	r19,r2,17b9c <quorem+0x1e4>
   17b7c:	18ffff17 	ldw	r3,-4(r3)
   17b80:	18000326 	beq	r3,zero,17b90 <quorem+0x1d8>
   17b84:	00000506 	br	17b9c <quorem+0x1e4>
   17b88:	10c00017 	ldw	r3,0(r2)
   17b8c:	1800031e 	bne	r3,zero,17b9c <quorem+0x1e4>
   17b90:	10bfff04 	addi	r2,r2,-4
   17b94:	bdffffc4 	addi	r23,r23,-1
   17b98:	98bffb36 	bltu	r19,r2,17b88 <_gp+0xffff11e0>
   17b9c:	d8c00017 	ldw	r3,0(sp)
   17ba0:	1dc00415 	stw	r23,16(r3)
   17ba4:	9005883a 	mov	r2,r18
   17ba8:	dfc00d17 	ldw	ra,52(sp)
   17bac:	df000c17 	ldw	fp,48(sp)
   17bb0:	ddc00b17 	ldw	r23,44(sp)
   17bb4:	dd800a17 	ldw	r22,40(sp)
   17bb8:	dd400917 	ldw	r21,36(sp)
   17bbc:	dd000817 	ldw	r20,32(sp)
   17bc0:	dcc00717 	ldw	r19,28(sp)
   17bc4:	dc800617 	ldw	r18,24(sp)
   17bc8:	dc400517 	ldw	r17,20(sp)
   17bcc:	dc000417 	ldw	r16,16(sp)
   17bd0:	dec00e04 	addi	sp,sp,56
   17bd4:	f800283a 	ret
   17bd8:	0005883a 	mov	r2,zero
   17bdc:	003ff206 	br	17ba8 <_gp+0xffff1200>

00017be0 <_dtoa_r>:
   17be0:	20801017 	ldw	r2,64(r4)
   17be4:	deffde04 	addi	sp,sp,-136
   17be8:	df002015 	stw	fp,128(sp)
   17bec:	dcc01b15 	stw	r19,108(sp)
   17bf0:	dc801a15 	stw	r18,104(sp)
   17bf4:	dc401915 	stw	r17,100(sp)
   17bf8:	dc001815 	stw	r16,96(sp)
   17bfc:	dfc02115 	stw	ra,132(sp)
   17c00:	ddc01f15 	stw	r23,124(sp)
   17c04:	dd801e15 	stw	r22,120(sp)
   17c08:	dd401d15 	stw	r21,116(sp)
   17c0c:	dd001c15 	stw	r20,112(sp)
   17c10:	d9c00315 	stw	r7,12(sp)
   17c14:	2039883a 	mov	fp,r4
   17c18:	3023883a 	mov	r17,r6
   17c1c:	2825883a 	mov	r18,r5
   17c20:	dc002417 	ldw	r16,144(sp)
   17c24:	3027883a 	mov	r19,r6
   17c28:	10000826 	beq	r2,zero,17c4c <_dtoa_r+0x6c>
   17c2c:	21801117 	ldw	r6,68(r4)
   17c30:	00c00044 	movi	r3,1
   17c34:	100b883a 	mov	r5,r2
   17c38:	1986983a 	sll	r3,r3,r6
   17c3c:	11800115 	stw	r6,4(r2)
   17c40:	10c00215 	stw	r3,8(r2)
   17c44:	0019ac80 	call	19ac8 <_Bfree>
   17c48:	e0001015 	stw	zero,64(fp)
   17c4c:	88002e16 	blt	r17,zero,17d08 <_dtoa_r+0x128>
   17c50:	80000015 	stw	zero,0(r16)
   17c54:	889ffc2c 	andhi	r2,r17,32752
   17c58:	00dffc34 	movhi	r3,32752
   17c5c:	10c01c26 	beq	r2,r3,17cd0 <_dtoa_r+0xf0>
   17c60:	000d883a 	mov	r6,zero
   17c64:	000f883a 	mov	r7,zero
   17c68:	9009883a 	mov	r4,r18
   17c6c:	980b883a 	mov	r5,r19
   17c70:	0012c900 	call	12c90 <__eqdf2>
   17c74:	10002b1e 	bne	r2,zero,17d24 <_dtoa_r+0x144>
   17c78:	d9c02317 	ldw	r7,140(sp)
   17c7c:	00800044 	movi	r2,1
   17c80:	38800015 	stw	r2,0(r7)
   17c84:	d8802517 	ldw	r2,148(sp)
   17c88:	10019e26 	beq	r2,zero,18304 <_dtoa_r+0x724>
   17c8c:	d8c02517 	ldw	r3,148(sp)
   17c90:	008000b4 	movhi	r2,2
   17c94:	10b7bc44 	addi	r2,r2,-8463
   17c98:	18800015 	stw	r2,0(r3)
   17c9c:	10bfffc4 	addi	r2,r2,-1
   17ca0:	dfc02117 	ldw	ra,132(sp)
   17ca4:	df002017 	ldw	fp,128(sp)
   17ca8:	ddc01f17 	ldw	r23,124(sp)
   17cac:	dd801e17 	ldw	r22,120(sp)
   17cb0:	dd401d17 	ldw	r21,116(sp)
   17cb4:	dd001c17 	ldw	r20,112(sp)
   17cb8:	dcc01b17 	ldw	r19,108(sp)
   17cbc:	dc801a17 	ldw	r18,104(sp)
   17cc0:	dc401917 	ldw	r17,100(sp)
   17cc4:	dc001817 	ldw	r16,96(sp)
   17cc8:	dec02204 	addi	sp,sp,136
   17ccc:	f800283a 	ret
   17cd0:	d8c02317 	ldw	r3,140(sp)
   17cd4:	0089c3c4 	movi	r2,9999
   17cd8:	18800015 	stw	r2,0(r3)
   17cdc:	90017726 	beq	r18,zero,182bc <_dtoa_r+0x6dc>
   17ce0:	008000b4 	movhi	r2,2
   17ce4:	10b7c804 	addi	r2,r2,-8416
   17ce8:	d9002517 	ldw	r4,148(sp)
   17cec:	203fec26 	beq	r4,zero,17ca0 <_gp+0xffff12f8>
   17cf0:	10c000c7 	ldb	r3,3(r2)
   17cf4:	1801781e 	bne	r3,zero,182d8 <_dtoa_r+0x6f8>
   17cf8:	10c000c4 	addi	r3,r2,3
   17cfc:	d9802517 	ldw	r6,148(sp)
   17d00:	30c00015 	stw	r3,0(r6)
   17d04:	003fe606 	br	17ca0 <_gp+0xffff12f8>
   17d08:	04e00034 	movhi	r19,32768
   17d0c:	9cffffc4 	addi	r19,r19,-1
   17d10:	00800044 	movi	r2,1
   17d14:	8ce6703a 	and	r19,r17,r19
   17d18:	80800015 	stw	r2,0(r16)
   17d1c:	9823883a 	mov	r17,r19
   17d20:	003fcc06 	br	17c54 <_gp+0xffff12ac>
   17d24:	d8800204 	addi	r2,sp,8
   17d28:	d8800015 	stw	r2,0(sp)
   17d2c:	d9c00104 	addi	r7,sp,4
   17d30:	900b883a 	mov	r5,r18
   17d34:	980d883a 	mov	r6,r19
   17d38:	e009883a 	mov	r4,fp
   17d3c:	8820d53a 	srli	r16,r17,20
   17d40:	001a7700 	call	1a770 <__d2b>
   17d44:	d8800915 	stw	r2,36(sp)
   17d48:	8001651e 	bne	r16,zero,182e0 <_dtoa_r+0x700>
   17d4c:	dd800217 	ldw	r22,8(sp)
   17d50:	dc000117 	ldw	r16,4(sp)
   17d54:	00800804 	movi	r2,32
   17d58:	b421883a 	add	r16,r22,r16
   17d5c:	80c10c84 	addi	r3,r16,1074
   17d60:	10c2d10e 	bge	r2,r3,188a8 <_dtoa_r+0xcc8>
   17d64:	00801004 	movi	r2,64
   17d68:	81010484 	addi	r4,r16,1042
   17d6c:	10c7c83a 	sub	r3,r2,r3
   17d70:	9108d83a 	srl	r4,r18,r4
   17d74:	88e2983a 	sll	r17,r17,r3
   17d78:	2448b03a 	or	r4,r4,r17
   17d7c:	001d60c0 	call	1d60c <__floatunsidf>
   17d80:	017f8434 	movhi	r5,65040
   17d84:	01800044 	movi	r6,1
   17d88:	1009883a 	mov	r4,r2
   17d8c:	194b883a 	add	r5,r3,r5
   17d90:	843fffc4 	addi	r16,r16,-1
   17d94:	d9801115 	stw	r6,68(sp)
   17d98:	000d883a 	mov	r6,zero
   17d9c:	01cffe34 	movhi	r7,16376
   17da0:	00136600 	call	13660 <__subdf3>
   17da4:	0198dbf4 	movhi	r6,25455
   17da8:	01cff4f4 	movhi	r7,16339
   17dac:	3190d844 	addi	r6,r6,17249
   17db0:	39e1e9c4 	addi	r7,r7,-30809
   17db4:	1009883a 	mov	r4,r2
   17db8:	180b883a 	mov	r5,r3
   17dbc:	0012df40 	call	12df4 <__muldf3>
   17dc0:	01a2d874 	movhi	r6,35681
   17dc4:	01cff1f4 	movhi	r7,16327
   17dc8:	31b22cc4 	addi	r6,r6,-14157
   17dcc:	39e28a04 	addi	r7,r7,-30168
   17dd0:	180b883a 	mov	r5,r3
   17dd4:	1009883a 	mov	r4,r2
   17dd8:	0011a140 	call	11a14 <__adddf3>
   17ddc:	8009883a 	mov	r4,r16
   17de0:	1029883a 	mov	r20,r2
   17de4:	1823883a 	mov	r17,r3
   17de8:	0013fdc0 	call	13fdc <__floatsidf>
   17dec:	019427f4 	movhi	r6,20639
   17df0:	01cff4f4 	movhi	r7,16339
   17df4:	319e7ec4 	addi	r6,r6,31227
   17df8:	39d104c4 	addi	r7,r7,17427
   17dfc:	1009883a 	mov	r4,r2
   17e00:	180b883a 	mov	r5,r3
   17e04:	0012df40 	call	12df4 <__muldf3>
   17e08:	100d883a 	mov	r6,r2
   17e0c:	180f883a 	mov	r7,r3
   17e10:	a009883a 	mov	r4,r20
   17e14:	880b883a 	mov	r5,r17
   17e18:	0011a140 	call	11a14 <__adddf3>
   17e1c:	1009883a 	mov	r4,r2
   17e20:	180b883a 	mov	r5,r3
   17e24:	1029883a 	mov	r20,r2
   17e28:	1823883a 	mov	r17,r3
   17e2c:	0013f5c0 	call	13f5c <__fixdfsi>
   17e30:	000d883a 	mov	r6,zero
   17e34:	000f883a 	mov	r7,zero
   17e38:	a009883a 	mov	r4,r20
   17e3c:	880b883a 	mov	r5,r17
   17e40:	d8800515 	stw	r2,20(sp)
   17e44:	001d5180 	call	1d518 <__ledf2>
   17e48:	10028716 	blt	r2,zero,18868 <_dtoa_r+0xc88>
   17e4c:	d8c00517 	ldw	r3,20(sp)
   17e50:	00800584 	movi	r2,22
   17e54:	10c27536 	bltu	r2,r3,1882c <_dtoa_r+0xc4c>
   17e58:	180490fa 	slli	r2,r3,3
   17e5c:	00c000b4 	movhi	r3,2
   17e60:	18f7e304 	addi	r3,r3,-8308
   17e64:	1885883a 	add	r2,r3,r2
   17e68:	11000017 	ldw	r4,0(r2)
   17e6c:	11400117 	ldw	r5,4(r2)
   17e70:	900d883a 	mov	r6,r18
   17e74:	980f883a 	mov	r7,r19
   17e78:	0012d180 	call	12d18 <__gedf2>
   17e7c:	00828d0e 	bge	zero,r2,188b4 <_dtoa_r+0xcd4>
   17e80:	d9000517 	ldw	r4,20(sp)
   17e84:	d8000e15 	stw	zero,56(sp)
   17e88:	213fffc4 	addi	r4,r4,-1
   17e8c:	d9000515 	stw	r4,20(sp)
   17e90:	b42dc83a 	sub	r22,r22,r16
   17e94:	b5bfffc4 	addi	r22,r22,-1
   17e98:	b0026f16 	blt	r22,zero,18858 <_dtoa_r+0xc78>
   17e9c:	d8000815 	stw	zero,32(sp)
   17ea0:	d9c00517 	ldw	r7,20(sp)
   17ea4:	38026416 	blt	r7,zero,18838 <_dtoa_r+0xc58>
   17ea8:	b1ed883a 	add	r22,r22,r7
   17eac:	d9c00d15 	stw	r7,52(sp)
   17eb0:	d8000a15 	stw	zero,40(sp)
   17eb4:	d9800317 	ldw	r6,12(sp)
   17eb8:	00800244 	movi	r2,9
   17ebc:	11811436 	bltu	r2,r6,18310 <_dtoa_r+0x730>
   17ec0:	00800144 	movi	r2,5
   17ec4:	1184e10e 	bge	r2,r6,1924c <_dtoa_r+0x166c>
   17ec8:	31bfff04 	addi	r6,r6,-4
   17ecc:	d9800315 	stw	r6,12(sp)
   17ed0:	0023883a 	mov	r17,zero
   17ed4:	d9800317 	ldw	r6,12(sp)
   17ed8:	008000c4 	movi	r2,3
   17edc:	30836726 	beq	r6,r2,18c7c <_dtoa_r+0x109c>
   17ee0:	1183410e 	bge	r2,r6,18be8 <_dtoa_r+0x1008>
   17ee4:	d9c00317 	ldw	r7,12(sp)
   17ee8:	00800104 	movi	r2,4
   17eec:	38827c26 	beq	r7,r2,188e0 <_dtoa_r+0xd00>
   17ef0:	00800144 	movi	r2,5
   17ef4:	3884c41e 	bne	r7,r2,19208 <_dtoa_r+0x1628>
   17ef8:	00800044 	movi	r2,1
   17efc:	d8800b15 	stw	r2,44(sp)
   17f00:	d8c00517 	ldw	r3,20(sp)
   17f04:	d9002217 	ldw	r4,136(sp)
   17f08:	1907883a 	add	r3,r3,r4
   17f0c:	19800044 	addi	r6,r3,1
   17f10:	d8c00c15 	stw	r3,48(sp)
   17f14:	d9800615 	stw	r6,24(sp)
   17f18:	0183a40e 	bge	zero,r6,18dac <_dtoa_r+0x11cc>
   17f1c:	d9800617 	ldw	r6,24(sp)
   17f20:	3021883a 	mov	r16,r6
   17f24:	e0001115 	stw	zero,68(fp)
   17f28:	008005c4 	movi	r2,23
   17f2c:	1184c92e 	bgeu	r2,r6,19254 <_dtoa_r+0x1674>
   17f30:	00c00044 	movi	r3,1
   17f34:	00800104 	movi	r2,4
   17f38:	1085883a 	add	r2,r2,r2
   17f3c:	11000504 	addi	r4,r2,20
   17f40:	180b883a 	mov	r5,r3
   17f44:	18c00044 	addi	r3,r3,1
   17f48:	313ffb2e 	bgeu	r6,r4,17f38 <_gp+0xffff1590>
   17f4c:	e1401115 	stw	r5,68(fp)
   17f50:	e009883a 	mov	r4,fp
   17f54:	0019a200 	call	19a20 <_Balloc>
   17f58:	d8800715 	stw	r2,28(sp)
   17f5c:	e0801015 	stw	r2,64(fp)
   17f60:	00800384 	movi	r2,14
   17f64:	1400f736 	bltu	r2,r16,18344 <_dtoa_r+0x764>
   17f68:	8800f626 	beq	r17,zero,18344 <_dtoa_r+0x764>
   17f6c:	d9c00517 	ldw	r7,20(sp)
   17f70:	01c39a0e 	bge	zero,r7,18ddc <_dtoa_r+0x11fc>
   17f74:	388003cc 	andi	r2,r7,15
   17f78:	100490fa 	slli	r2,r2,3
   17f7c:	382bd13a 	srai	r21,r7,4
   17f80:	00c000b4 	movhi	r3,2
   17f84:	18f7e304 	addi	r3,r3,-8308
   17f88:	1885883a 	add	r2,r3,r2
   17f8c:	a8c0040c 	andi	r3,r21,16
   17f90:	12400017 	ldw	r9,0(r2)
   17f94:	12000117 	ldw	r8,4(r2)
   17f98:	18037926 	beq	r3,zero,18d80 <_dtoa_r+0x11a0>
   17f9c:	008000b4 	movhi	r2,2
   17fa0:	10b7d904 	addi	r2,r2,-8348
   17fa4:	11800817 	ldw	r6,32(r2)
   17fa8:	11c00917 	ldw	r7,36(r2)
   17fac:	9009883a 	mov	r4,r18
   17fb0:	980b883a 	mov	r5,r19
   17fb4:	da001715 	stw	r8,92(sp)
   17fb8:	da401615 	stw	r9,88(sp)
   17fbc:	00122c00 	call	122c0 <__divdf3>
   17fc0:	da001717 	ldw	r8,92(sp)
   17fc4:	da401617 	ldw	r9,88(sp)
   17fc8:	ad4003cc 	andi	r21,r21,15
   17fcc:	040000c4 	movi	r16,3
   17fd0:	1023883a 	mov	r17,r2
   17fd4:	1829883a 	mov	r20,r3
   17fd8:	a8001126 	beq	r21,zero,18020 <_dtoa_r+0x440>
   17fdc:	05c000b4 	movhi	r23,2
   17fe0:	bdf7d904 	addi	r23,r23,-8348
   17fe4:	4805883a 	mov	r2,r9
   17fe8:	4007883a 	mov	r3,r8
   17fec:	a980004c 	andi	r6,r21,1
   17ff0:	1009883a 	mov	r4,r2
   17ff4:	a82bd07a 	srai	r21,r21,1
   17ff8:	180b883a 	mov	r5,r3
   17ffc:	30000426 	beq	r6,zero,18010 <_dtoa_r+0x430>
   18000:	b9800017 	ldw	r6,0(r23)
   18004:	b9c00117 	ldw	r7,4(r23)
   18008:	84000044 	addi	r16,r16,1
   1800c:	0012df40 	call	12df4 <__muldf3>
   18010:	bdc00204 	addi	r23,r23,8
   18014:	a83ff51e 	bne	r21,zero,17fec <_gp+0xffff1644>
   18018:	1013883a 	mov	r9,r2
   1801c:	1811883a 	mov	r8,r3
   18020:	480d883a 	mov	r6,r9
   18024:	400f883a 	mov	r7,r8
   18028:	8809883a 	mov	r4,r17
   1802c:	a00b883a 	mov	r5,r20
   18030:	00122c00 	call	122c0 <__divdf3>
   18034:	d8800f15 	stw	r2,60(sp)
   18038:	d8c01015 	stw	r3,64(sp)
   1803c:	d8c00e17 	ldw	r3,56(sp)
   18040:	18000626 	beq	r3,zero,1805c <_dtoa_r+0x47c>
   18044:	d9000f17 	ldw	r4,60(sp)
   18048:	d9401017 	ldw	r5,64(sp)
   1804c:	000d883a 	mov	r6,zero
   18050:	01cffc34 	movhi	r7,16368
   18054:	001d5180 	call	1d518 <__ledf2>
   18058:	10040b16 	blt	r2,zero,19088 <_dtoa_r+0x14a8>
   1805c:	8009883a 	mov	r4,r16
   18060:	0013fdc0 	call	13fdc <__floatsidf>
   18064:	d9800f17 	ldw	r6,60(sp)
   18068:	d9c01017 	ldw	r7,64(sp)
   1806c:	1009883a 	mov	r4,r2
   18070:	180b883a 	mov	r5,r3
   18074:	0012df40 	call	12df4 <__muldf3>
   18078:	000d883a 	mov	r6,zero
   1807c:	01d00734 	movhi	r7,16412
   18080:	1009883a 	mov	r4,r2
   18084:	180b883a 	mov	r5,r3
   18088:	0011a140 	call	11a14 <__adddf3>
   1808c:	1021883a 	mov	r16,r2
   18090:	d8800617 	ldw	r2,24(sp)
   18094:	047f3034 	movhi	r17,64704
   18098:	1c63883a 	add	r17,r3,r17
   1809c:	10031826 	beq	r2,zero,18d00 <_dtoa_r+0x1120>
   180a0:	d8c00517 	ldw	r3,20(sp)
   180a4:	db000617 	ldw	r12,24(sp)
   180a8:	d8c01315 	stw	r3,76(sp)
   180ac:	d9000b17 	ldw	r4,44(sp)
   180b0:	20038f26 	beq	r4,zero,18ef0 <_dtoa_r+0x1310>
   180b4:	60bfffc4 	addi	r2,r12,-1
   180b8:	100490fa 	slli	r2,r2,3
   180bc:	00c000b4 	movhi	r3,2
   180c0:	18f7e304 	addi	r3,r3,-8308
   180c4:	1885883a 	add	r2,r3,r2
   180c8:	11800017 	ldw	r6,0(r2)
   180cc:	11c00117 	ldw	r7,4(r2)
   180d0:	d8800717 	ldw	r2,28(sp)
   180d4:	0009883a 	mov	r4,zero
   180d8:	014ff834 	movhi	r5,16352
   180dc:	db001615 	stw	r12,88(sp)
   180e0:	15c00044 	addi	r23,r2,1
   180e4:	00122c00 	call	122c0 <__divdf3>
   180e8:	800d883a 	mov	r6,r16
   180ec:	880f883a 	mov	r7,r17
   180f0:	1009883a 	mov	r4,r2
   180f4:	180b883a 	mov	r5,r3
   180f8:	00136600 	call	13660 <__subdf3>
   180fc:	d9401017 	ldw	r5,64(sp)
   18100:	d9000f17 	ldw	r4,60(sp)
   18104:	102b883a 	mov	r21,r2
   18108:	d8c01215 	stw	r3,72(sp)
   1810c:	0013f5c0 	call	13f5c <__fixdfsi>
   18110:	1009883a 	mov	r4,r2
   18114:	1029883a 	mov	r20,r2
   18118:	0013fdc0 	call	13fdc <__floatsidf>
   1811c:	d9000f17 	ldw	r4,60(sp)
   18120:	d9401017 	ldw	r5,64(sp)
   18124:	100d883a 	mov	r6,r2
   18128:	180f883a 	mov	r7,r3
   1812c:	00136600 	call	13660 <__subdf3>
   18130:	1823883a 	mov	r17,r3
   18134:	d8c00717 	ldw	r3,28(sp)
   18138:	d9401217 	ldw	r5,72(sp)
   1813c:	a2000c04 	addi	r8,r20,48
   18140:	1021883a 	mov	r16,r2
   18144:	1a000005 	stb	r8,0(r3)
   18148:	800d883a 	mov	r6,r16
   1814c:	880f883a 	mov	r7,r17
   18150:	a809883a 	mov	r4,r21
   18154:	4029883a 	mov	r20,r8
   18158:	0012d180 	call	12d18 <__gedf2>
   1815c:	00841d16 	blt	zero,r2,191d4 <_dtoa_r+0x15f4>
   18160:	800d883a 	mov	r6,r16
   18164:	880f883a 	mov	r7,r17
   18168:	0009883a 	mov	r4,zero
   1816c:	014ffc34 	movhi	r5,16368
   18170:	00136600 	call	13660 <__subdf3>
   18174:	d9401217 	ldw	r5,72(sp)
   18178:	100d883a 	mov	r6,r2
   1817c:	180f883a 	mov	r7,r3
   18180:	a809883a 	mov	r4,r21
   18184:	0012d180 	call	12d18 <__gedf2>
   18188:	db001617 	ldw	r12,88(sp)
   1818c:	00840e16 	blt	zero,r2,191c8 <_dtoa_r+0x15e8>
   18190:	00800044 	movi	r2,1
   18194:	13006b0e 	bge	r2,r12,18344 <_dtoa_r+0x764>
   18198:	d9000717 	ldw	r4,28(sp)
   1819c:	dd800f15 	stw	r22,60(sp)
   181a0:	dcc01015 	stw	r19,64(sp)
   181a4:	2319883a 	add	r12,r4,r12
   181a8:	dcc01217 	ldw	r19,72(sp)
   181ac:	602d883a 	mov	r22,r12
   181b0:	dc801215 	stw	r18,72(sp)
   181b4:	b825883a 	mov	r18,r23
   181b8:	00000906 	br	181e0 <_dtoa_r+0x600>
   181bc:	00136600 	call	13660 <__subdf3>
   181c0:	a80d883a 	mov	r6,r21
   181c4:	980f883a 	mov	r7,r19
   181c8:	1009883a 	mov	r4,r2
   181cc:	180b883a 	mov	r5,r3
   181d0:	001d5180 	call	1d518 <__ledf2>
   181d4:	1003e816 	blt	r2,zero,19178 <_dtoa_r+0x1598>
   181d8:	b825883a 	mov	r18,r23
   181dc:	bd83e926 	beq	r23,r22,19184 <_dtoa_r+0x15a4>
   181e0:	a809883a 	mov	r4,r21
   181e4:	980b883a 	mov	r5,r19
   181e8:	000d883a 	mov	r6,zero
   181ec:	01d00934 	movhi	r7,16420
   181f0:	0012df40 	call	12df4 <__muldf3>
   181f4:	000d883a 	mov	r6,zero
   181f8:	01d00934 	movhi	r7,16420
   181fc:	8009883a 	mov	r4,r16
   18200:	880b883a 	mov	r5,r17
   18204:	102b883a 	mov	r21,r2
   18208:	1827883a 	mov	r19,r3
   1820c:	0012df40 	call	12df4 <__muldf3>
   18210:	180b883a 	mov	r5,r3
   18214:	1009883a 	mov	r4,r2
   18218:	1821883a 	mov	r16,r3
   1821c:	1023883a 	mov	r17,r2
   18220:	0013f5c0 	call	13f5c <__fixdfsi>
   18224:	1009883a 	mov	r4,r2
   18228:	1029883a 	mov	r20,r2
   1822c:	0013fdc0 	call	13fdc <__floatsidf>
   18230:	8809883a 	mov	r4,r17
   18234:	800b883a 	mov	r5,r16
   18238:	100d883a 	mov	r6,r2
   1823c:	180f883a 	mov	r7,r3
   18240:	00136600 	call	13660 <__subdf3>
   18244:	a5000c04 	addi	r20,r20,48
   18248:	a80d883a 	mov	r6,r21
   1824c:	980f883a 	mov	r7,r19
   18250:	1009883a 	mov	r4,r2
   18254:	180b883a 	mov	r5,r3
   18258:	95000005 	stb	r20,0(r18)
   1825c:	1021883a 	mov	r16,r2
   18260:	1823883a 	mov	r17,r3
   18264:	001d5180 	call	1d518 <__ledf2>
   18268:	bdc00044 	addi	r23,r23,1
   1826c:	800d883a 	mov	r6,r16
   18270:	880f883a 	mov	r7,r17
   18274:	0009883a 	mov	r4,zero
   18278:	014ffc34 	movhi	r5,16368
   1827c:	103fcf0e 	bge	r2,zero,181bc <_gp+0xffff1814>
   18280:	d8c01317 	ldw	r3,76(sp)
   18284:	d8c00515 	stw	r3,20(sp)
   18288:	d9400917 	ldw	r5,36(sp)
   1828c:	e009883a 	mov	r4,fp
   18290:	0019ac80 	call	19ac8 <_Bfree>
   18294:	d9000517 	ldw	r4,20(sp)
   18298:	d9802317 	ldw	r6,140(sp)
   1829c:	d9c02517 	ldw	r7,148(sp)
   182a0:	b8000005 	stb	zero,0(r23)
   182a4:	20800044 	addi	r2,r4,1
   182a8:	30800015 	stw	r2,0(r6)
   182ac:	3802aa26 	beq	r7,zero,18d58 <_dtoa_r+0x1178>
   182b0:	3dc00015 	stw	r23,0(r7)
   182b4:	d8800717 	ldw	r2,28(sp)
   182b8:	003e7906 	br	17ca0 <_gp+0xffff12f8>
   182bc:	00800434 	movhi	r2,16
   182c0:	10bfffc4 	addi	r2,r2,-1
   182c4:	88a2703a 	and	r17,r17,r2
   182c8:	883e851e 	bne	r17,zero,17ce0 <_gp+0xffff1338>
   182cc:	008000b4 	movhi	r2,2
   182d0:	10b7c504 	addi	r2,r2,-8428
   182d4:	003e8406 	br	17ce8 <_gp+0xffff1340>
   182d8:	10c00204 	addi	r3,r2,8
   182dc:	003e8706 	br	17cfc <_gp+0xffff1354>
   182e0:	01400434 	movhi	r5,16
   182e4:	297fffc4 	addi	r5,r5,-1
   182e8:	994a703a 	and	r5,r19,r5
   182ec:	9009883a 	mov	r4,r18
   182f0:	843f0044 	addi	r16,r16,-1023
   182f4:	294ffc34 	orhi	r5,r5,16368
   182f8:	dd800217 	ldw	r22,8(sp)
   182fc:	d8001115 	stw	zero,68(sp)
   18300:	003ea506 	br	17d98 <_gp+0xffff13f0>
   18304:	008000b4 	movhi	r2,2
   18308:	10b7bc04 	addi	r2,r2,-8464
   1830c:	003e6406 	br	17ca0 <_gp+0xffff12f8>
   18310:	e0001115 	stw	zero,68(fp)
   18314:	000b883a 	mov	r5,zero
   18318:	e009883a 	mov	r4,fp
   1831c:	0019a200 	call	19a20 <_Balloc>
   18320:	01bfffc4 	movi	r6,-1
   18324:	01c00044 	movi	r7,1
   18328:	d8800715 	stw	r2,28(sp)
   1832c:	d9800c15 	stw	r6,48(sp)
   18330:	e0801015 	stw	r2,64(fp)
   18334:	d8000315 	stw	zero,12(sp)
   18338:	d9c00b15 	stw	r7,44(sp)
   1833c:	d9800615 	stw	r6,24(sp)
   18340:	d8002215 	stw	zero,136(sp)
   18344:	d8800117 	ldw	r2,4(sp)
   18348:	10008916 	blt	r2,zero,18570 <_dtoa_r+0x990>
   1834c:	d9000517 	ldw	r4,20(sp)
   18350:	00c00384 	movi	r3,14
   18354:	19008616 	blt	r3,r4,18570 <_dtoa_r+0x990>
   18358:	200490fa 	slli	r2,r4,3
   1835c:	00c000b4 	movhi	r3,2
   18360:	d9802217 	ldw	r6,136(sp)
   18364:	18f7e304 	addi	r3,r3,-8308
   18368:	1885883a 	add	r2,r3,r2
   1836c:	14000017 	ldw	r16,0(r2)
   18370:	14400117 	ldw	r17,4(r2)
   18374:	30016316 	blt	r6,zero,18904 <_dtoa_r+0xd24>
   18378:	800d883a 	mov	r6,r16
   1837c:	880f883a 	mov	r7,r17
   18380:	9009883a 	mov	r4,r18
   18384:	980b883a 	mov	r5,r19
   18388:	00122c00 	call	122c0 <__divdf3>
   1838c:	180b883a 	mov	r5,r3
   18390:	1009883a 	mov	r4,r2
   18394:	0013f5c0 	call	13f5c <__fixdfsi>
   18398:	1009883a 	mov	r4,r2
   1839c:	102b883a 	mov	r21,r2
   183a0:	0013fdc0 	call	13fdc <__floatsidf>
   183a4:	800d883a 	mov	r6,r16
   183a8:	880f883a 	mov	r7,r17
   183ac:	1009883a 	mov	r4,r2
   183b0:	180b883a 	mov	r5,r3
   183b4:	0012df40 	call	12df4 <__muldf3>
   183b8:	100d883a 	mov	r6,r2
   183bc:	180f883a 	mov	r7,r3
   183c0:	9009883a 	mov	r4,r18
   183c4:	980b883a 	mov	r5,r19
   183c8:	00136600 	call	13660 <__subdf3>
   183cc:	d9c00717 	ldw	r7,28(sp)
   183d0:	1009883a 	mov	r4,r2
   183d4:	a8800c04 	addi	r2,r21,48
   183d8:	38800005 	stb	r2,0(r7)
   183dc:	3dc00044 	addi	r23,r7,1
   183e0:	d9c00617 	ldw	r7,24(sp)
   183e4:	01800044 	movi	r6,1
   183e8:	180b883a 	mov	r5,r3
   183ec:	2005883a 	mov	r2,r4
   183f0:	39803826 	beq	r7,r6,184d4 <_dtoa_r+0x8f4>
   183f4:	000d883a 	mov	r6,zero
   183f8:	01d00934 	movhi	r7,16420
   183fc:	0012df40 	call	12df4 <__muldf3>
   18400:	000d883a 	mov	r6,zero
   18404:	000f883a 	mov	r7,zero
   18408:	1009883a 	mov	r4,r2
   1840c:	180b883a 	mov	r5,r3
   18410:	1025883a 	mov	r18,r2
   18414:	1827883a 	mov	r19,r3
   18418:	0012c900 	call	12c90 <__eqdf2>
   1841c:	103f9a26 	beq	r2,zero,18288 <_gp+0xffff18e0>
   18420:	d9c00617 	ldw	r7,24(sp)
   18424:	d8c00717 	ldw	r3,28(sp)
   18428:	b829883a 	mov	r20,r23
   1842c:	38bfffc4 	addi	r2,r7,-1
   18430:	18ad883a 	add	r22,r3,r2
   18434:	00000a06 	br	18460 <_dtoa_r+0x880>
   18438:	0012df40 	call	12df4 <__muldf3>
   1843c:	000d883a 	mov	r6,zero
   18440:	000f883a 	mov	r7,zero
   18444:	1009883a 	mov	r4,r2
   18448:	180b883a 	mov	r5,r3
   1844c:	1025883a 	mov	r18,r2
   18450:	1827883a 	mov	r19,r3
   18454:	b829883a 	mov	r20,r23
   18458:	0012c900 	call	12c90 <__eqdf2>
   1845c:	103f8a26 	beq	r2,zero,18288 <_gp+0xffff18e0>
   18460:	800d883a 	mov	r6,r16
   18464:	880f883a 	mov	r7,r17
   18468:	9009883a 	mov	r4,r18
   1846c:	980b883a 	mov	r5,r19
   18470:	00122c00 	call	122c0 <__divdf3>
   18474:	180b883a 	mov	r5,r3
   18478:	1009883a 	mov	r4,r2
   1847c:	0013f5c0 	call	13f5c <__fixdfsi>
   18480:	1009883a 	mov	r4,r2
   18484:	102b883a 	mov	r21,r2
   18488:	0013fdc0 	call	13fdc <__floatsidf>
   1848c:	800d883a 	mov	r6,r16
   18490:	880f883a 	mov	r7,r17
   18494:	1009883a 	mov	r4,r2
   18498:	180b883a 	mov	r5,r3
   1849c:	0012df40 	call	12df4 <__muldf3>
   184a0:	100d883a 	mov	r6,r2
   184a4:	180f883a 	mov	r7,r3
   184a8:	9009883a 	mov	r4,r18
   184ac:	980b883a 	mov	r5,r19
   184b0:	00136600 	call	13660 <__subdf3>
   184b4:	aa000c04 	addi	r8,r21,48
   184b8:	a2000005 	stb	r8,0(r20)
   184bc:	000d883a 	mov	r6,zero
   184c0:	01d00934 	movhi	r7,16420
   184c4:	1009883a 	mov	r4,r2
   184c8:	180b883a 	mov	r5,r3
   184cc:	a5c00044 	addi	r23,r20,1
   184d0:	b53fd91e 	bne	r22,r20,18438 <_gp+0xffff1a90>
   184d4:	100d883a 	mov	r6,r2
   184d8:	180f883a 	mov	r7,r3
   184dc:	1009883a 	mov	r4,r2
   184e0:	180b883a 	mov	r5,r3
   184e4:	0011a140 	call	11a14 <__adddf3>
   184e8:	100d883a 	mov	r6,r2
   184ec:	180f883a 	mov	r7,r3
   184f0:	8009883a 	mov	r4,r16
   184f4:	880b883a 	mov	r5,r17
   184f8:	1027883a 	mov	r19,r2
   184fc:	1825883a 	mov	r18,r3
   18500:	001d5180 	call	1d518 <__ledf2>
   18504:	10000816 	blt	r2,zero,18528 <_dtoa_r+0x948>
   18508:	980d883a 	mov	r6,r19
   1850c:	900f883a 	mov	r7,r18
   18510:	8009883a 	mov	r4,r16
   18514:	880b883a 	mov	r5,r17
   18518:	0012c900 	call	12c90 <__eqdf2>
   1851c:	103f5a1e 	bne	r2,zero,18288 <_gp+0xffff18e0>
   18520:	ad40004c 	andi	r21,r21,1
   18524:	a83f5826 	beq	r21,zero,18288 <_gp+0xffff18e0>
   18528:	bd3fffc3 	ldbu	r20,-1(r23)
   1852c:	b8bfffc4 	addi	r2,r23,-1
   18530:	1007883a 	mov	r3,r2
   18534:	01400e44 	movi	r5,57
   18538:	d9800717 	ldw	r6,28(sp)
   1853c:	00000506 	br	18554 <_dtoa_r+0x974>
   18540:	18ffffc4 	addi	r3,r3,-1
   18544:	11824726 	beq	r2,r6,18e64 <_dtoa_r+0x1284>
   18548:	1d000003 	ldbu	r20,0(r3)
   1854c:	102f883a 	mov	r23,r2
   18550:	10bfffc4 	addi	r2,r2,-1
   18554:	a1003fcc 	andi	r4,r20,255
   18558:	2100201c 	xori	r4,r4,128
   1855c:	213fe004 	addi	r4,r4,-128
   18560:	217ff726 	beq	r4,r5,18540 <_gp+0xffff1b98>
   18564:	a2000044 	addi	r8,r20,1
   18568:	12000005 	stb	r8,0(r2)
   1856c:	003f4606 	br	18288 <_gp+0xffff18e0>
   18570:	d9000b17 	ldw	r4,44(sp)
   18574:	2000c826 	beq	r4,zero,18898 <_dtoa_r+0xcb8>
   18578:	d9800317 	ldw	r6,12(sp)
   1857c:	00c00044 	movi	r3,1
   18580:	1980f90e 	bge	r3,r6,18968 <_dtoa_r+0xd88>
   18584:	d8800617 	ldw	r2,24(sp)
   18588:	d8c00a17 	ldw	r3,40(sp)
   1858c:	157fffc4 	addi	r21,r2,-1
   18590:	1d41f316 	blt	r3,r21,18d60 <_dtoa_r+0x1180>
   18594:	1d6bc83a 	sub	r21,r3,r21
   18598:	d9c00617 	ldw	r7,24(sp)
   1859c:	3802aa16 	blt	r7,zero,19048 <_dtoa_r+0x1468>
   185a0:	dd000817 	ldw	r20,32(sp)
   185a4:	d8800617 	ldw	r2,24(sp)
   185a8:	d8c00817 	ldw	r3,32(sp)
   185ac:	01400044 	movi	r5,1
   185b0:	e009883a 	mov	r4,fp
   185b4:	1887883a 	add	r3,r3,r2
   185b8:	d8c00815 	stw	r3,32(sp)
   185bc:	b0ad883a 	add	r22,r22,r2
   185c0:	0019e540 	call	19e54 <__i2b>
   185c4:	1023883a 	mov	r17,r2
   185c8:	a0000826 	beq	r20,zero,185ec <_dtoa_r+0xa0c>
   185cc:	0580070e 	bge	zero,r22,185ec <_dtoa_r+0xa0c>
   185d0:	a005883a 	mov	r2,r20
   185d4:	b500b916 	blt	r22,r20,188bc <_dtoa_r+0xcdc>
   185d8:	d9000817 	ldw	r4,32(sp)
   185dc:	a0a9c83a 	sub	r20,r20,r2
   185e0:	b0adc83a 	sub	r22,r22,r2
   185e4:	2089c83a 	sub	r4,r4,r2
   185e8:	d9000815 	stw	r4,32(sp)
   185ec:	d9800a17 	ldw	r6,40(sp)
   185f0:	0181810e 	bge	zero,r6,18bf8 <_dtoa_r+0x1018>
   185f4:	d9c00b17 	ldw	r7,44(sp)
   185f8:	3800b326 	beq	r7,zero,188c8 <_dtoa_r+0xce8>
   185fc:	a800b226 	beq	r21,zero,188c8 <_dtoa_r+0xce8>
   18600:	880b883a 	mov	r5,r17
   18604:	a80d883a 	mov	r6,r21
   18608:	e009883a 	mov	r4,fp
   1860c:	001a11c0 	call	1a11c <__pow5mult>
   18610:	d9800917 	ldw	r6,36(sp)
   18614:	100b883a 	mov	r5,r2
   18618:	e009883a 	mov	r4,fp
   1861c:	1023883a 	mov	r17,r2
   18620:	0019e900 	call	19e90 <__multiply>
   18624:	1021883a 	mov	r16,r2
   18628:	d8800a17 	ldw	r2,40(sp)
   1862c:	d9400917 	ldw	r5,36(sp)
   18630:	e009883a 	mov	r4,fp
   18634:	1545c83a 	sub	r2,r2,r21
   18638:	d8800a15 	stw	r2,40(sp)
   1863c:	0019ac80 	call	19ac8 <_Bfree>
   18640:	d8c00a17 	ldw	r3,40(sp)
   18644:	18009f1e 	bne	r3,zero,188c4 <_dtoa_r+0xce4>
   18648:	05c00044 	movi	r23,1
   1864c:	e009883a 	mov	r4,fp
   18650:	b80b883a 	mov	r5,r23
   18654:	0019e540 	call	19e54 <__i2b>
   18658:	d9000d17 	ldw	r4,52(sp)
   1865c:	102b883a 	mov	r21,r2
   18660:	2000ce26 	beq	r4,zero,1899c <_dtoa_r+0xdbc>
   18664:	200d883a 	mov	r6,r4
   18668:	100b883a 	mov	r5,r2
   1866c:	e009883a 	mov	r4,fp
   18670:	001a11c0 	call	1a11c <__pow5mult>
   18674:	d9800317 	ldw	r6,12(sp)
   18678:	102b883a 	mov	r21,r2
   1867c:	b981810e 	bge	r23,r6,18c84 <_dtoa_r+0x10a4>
   18680:	0027883a 	mov	r19,zero
   18684:	a8800417 	ldw	r2,16(r21)
   18688:	05c00804 	movi	r23,32
   1868c:	10800104 	addi	r2,r2,4
   18690:	1085883a 	add	r2,r2,r2
   18694:	1085883a 	add	r2,r2,r2
   18698:	a885883a 	add	r2,r21,r2
   1869c:	11000017 	ldw	r4,0(r2)
   186a0:	0019d3c0 	call	19d3c <__hi0bits>
   186a4:	b885c83a 	sub	r2,r23,r2
   186a8:	1585883a 	add	r2,r2,r22
   186ac:	108007cc 	andi	r2,r2,31
   186b0:	1000b326 	beq	r2,zero,18980 <_dtoa_r+0xda0>
   186b4:	00c00804 	movi	r3,32
   186b8:	1887c83a 	sub	r3,r3,r2
   186bc:	01000104 	movi	r4,4
   186c0:	20c2cd0e 	bge	r4,r3,191f8 <_dtoa_r+0x1618>
   186c4:	00c00704 	movi	r3,28
   186c8:	1885c83a 	sub	r2,r3,r2
   186cc:	d8c00817 	ldw	r3,32(sp)
   186d0:	a0a9883a 	add	r20,r20,r2
   186d4:	b0ad883a 	add	r22,r22,r2
   186d8:	1887883a 	add	r3,r3,r2
   186dc:	d8c00815 	stw	r3,32(sp)
   186e0:	d9800817 	ldw	r6,32(sp)
   186e4:	0180040e 	bge	zero,r6,186f8 <_dtoa_r+0xb18>
   186e8:	800b883a 	mov	r5,r16
   186ec:	e009883a 	mov	r4,fp
   186f0:	001a25c0 	call	1a25c <__lshift>
   186f4:	1021883a 	mov	r16,r2
   186f8:	0580050e 	bge	zero,r22,18710 <_dtoa_r+0xb30>
   186fc:	a80b883a 	mov	r5,r21
   18700:	b00d883a 	mov	r6,r22
   18704:	e009883a 	mov	r4,fp
   18708:	001a25c0 	call	1a25c <__lshift>
   1870c:	102b883a 	mov	r21,r2
   18710:	d9c00e17 	ldw	r7,56(sp)
   18714:	3801211e 	bne	r7,zero,18b9c <_dtoa_r+0xfbc>
   18718:	d9800617 	ldw	r6,24(sp)
   1871c:	0181380e 	bge	zero,r6,18c00 <_dtoa_r+0x1020>
   18720:	d8c00b17 	ldw	r3,44(sp)
   18724:	1800ab1e 	bne	r3,zero,189d4 <_dtoa_r+0xdf4>
   18728:	dc800717 	ldw	r18,28(sp)
   1872c:	dcc00617 	ldw	r19,24(sp)
   18730:	9029883a 	mov	r20,r18
   18734:	00000206 	br	18740 <_dtoa_r+0xb60>
   18738:	0019af00 	call	19af0 <__multadd>
   1873c:	1021883a 	mov	r16,r2
   18740:	a80b883a 	mov	r5,r21
   18744:	8009883a 	mov	r4,r16
   18748:	00179b80 	call	179b8 <quorem>
   1874c:	10800c04 	addi	r2,r2,48
   18750:	90800005 	stb	r2,0(r18)
   18754:	94800044 	addi	r18,r18,1
   18758:	9507c83a 	sub	r3,r18,r20
   1875c:	000f883a 	mov	r7,zero
   18760:	01800284 	movi	r6,10
   18764:	800b883a 	mov	r5,r16
   18768:	e009883a 	mov	r4,fp
   1876c:	1cfff216 	blt	r3,r19,18738 <_gp+0xffff1d90>
   18770:	1011883a 	mov	r8,r2
   18774:	d8800617 	ldw	r2,24(sp)
   18778:	0082370e 	bge	zero,r2,19058 <_dtoa_r+0x1478>
   1877c:	d9000717 	ldw	r4,28(sp)
   18780:	0025883a 	mov	r18,zero
   18784:	20af883a 	add	r23,r4,r2
   18788:	01800044 	movi	r6,1
   1878c:	800b883a 	mov	r5,r16
   18790:	e009883a 	mov	r4,fp
   18794:	da001715 	stw	r8,92(sp)
   18798:	001a25c0 	call	1a25c <__lshift>
   1879c:	a80b883a 	mov	r5,r21
   187a0:	1009883a 	mov	r4,r2
   187a4:	d8800915 	stw	r2,36(sp)
   187a8:	001a3a40 	call	1a3a4 <__mcmp>
   187ac:	da001717 	ldw	r8,92(sp)
   187b0:	0081800e 	bge	zero,r2,18db4 <_dtoa_r+0x11d4>
   187b4:	b93fffc3 	ldbu	r4,-1(r23)
   187b8:	b8bfffc4 	addi	r2,r23,-1
   187bc:	1007883a 	mov	r3,r2
   187c0:	01800e44 	movi	r6,57
   187c4:	d9c00717 	ldw	r7,28(sp)
   187c8:	00000506 	br	187e0 <_dtoa_r+0xc00>
   187cc:	18ffffc4 	addi	r3,r3,-1
   187d0:	11c12326 	beq	r2,r7,18c60 <_dtoa_r+0x1080>
   187d4:	19000003 	ldbu	r4,0(r3)
   187d8:	102f883a 	mov	r23,r2
   187dc:	10bfffc4 	addi	r2,r2,-1
   187e0:	21403fcc 	andi	r5,r4,255
   187e4:	2940201c 	xori	r5,r5,128
   187e8:	297fe004 	addi	r5,r5,-128
   187ec:	29bff726 	beq	r5,r6,187cc <_gp+0xffff1e24>
   187f0:	21000044 	addi	r4,r4,1
   187f4:	11000005 	stb	r4,0(r2)
   187f8:	a80b883a 	mov	r5,r21
   187fc:	e009883a 	mov	r4,fp
   18800:	0019ac80 	call	19ac8 <_Bfree>
   18804:	883ea026 	beq	r17,zero,18288 <_gp+0xffff18e0>
   18808:	90000426 	beq	r18,zero,1881c <_dtoa_r+0xc3c>
   1880c:	94400326 	beq	r18,r17,1881c <_dtoa_r+0xc3c>
   18810:	900b883a 	mov	r5,r18
   18814:	e009883a 	mov	r4,fp
   18818:	0019ac80 	call	19ac8 <_Bfree>
   1881c:	880b883a 	mov	r5,r17
   18820:	e009883a 	mov	r4,fp
   18824:	0019ac80 	call	19ac8 <_Bfree>
   18828:	003e9706 	br	18288 <_gp+0xffff18e0>
   1882c:	01800044 	movi	r6,1
   18830:	d9800e15 	stw	r6,56(sp)
   18834:	003d9606 	br	17e90 <_gp+0xffff14e8>
   18838:	d8800817 	ldw	r2,32(sp)
   1883c:	d8c00517 	ldw	r3,20(sp)
   18840:	d8000d15 	stw	zero,52(sp)
   18844:	10c5c83a 	sub	r2,r2,r3
   18848:	00c9c83a 	sub	r4,zero,r3
   1884c:	d8800815 	stw	r2,32(sp)
   18850:	d9000a15 	stw	r4,40(sp)
   18854:	003d9706 	br	17eb4 <_gp+0xffff150c>
   18858:	05adc83a 	sub	r22,zero,r22
   1885c:	dd800815 	stw	r22,32(sp)
   18860:	002d883a 	mov	r22,zero
   18864:	003d8e06 	br	17ea0 <_gp+0xffff14f8>
   18868:	d9000517 	ldw	r4,20(sp)
   1886c:	0013fdc0 	call	13fdc <__floatsidf>
   18870:	100d883a 	mov	r6,r2
   18874:	180f883a 	mov	r7,r3
   18878:	a009883a 	mov	r4,r20
   1887c:	880b883a 	mov	r5,r17
   18880:	0012c900 	call	12c90 <__eqdf2>
   18884:	103d7126 	beq	r2,zero,17e4c <_gp+0xffff14a4>
   18888:	d9c00517 	ldw	r7,20(sp)
   1888c:	39ffffc4 	addi	r7,r7,-1
   18890:	d9c00515 	stw	r7,20(sp)
   18894:	003d6d06 	br	17e4c <_gp+0xffff14a4>
   18898:	dd400a17 	ldw	r21,40(sp)
   1889c:	dd000817 	ldw	r20,32(sp)
   188a0:	0023883a 	mov	r17,zero
   188a4:	003f4806 	br	185c8 <_gp+0xffff1c20>
   188a8:	10e3c83a 	sub	r17,r2,r3
   188ac:	9448983a 	sll	r4,r18,r17
   188b0:	003d3206 	br	17d7c <_gp+0xffff13d4>
   188b4:	d8000e15 	stw	zero,56(sp)
   188b8:	003d7506 	br	17e90 <_gp+0xffff14e8>
   188bc:	b005883a 	mov	r2,r22
   188c0:	003f4506 	br	185d8 <_gp+0xffff1c30>
   188c4:	dc000915 	stw	r16,36(sp)
   188c8:	d9800a17 	ldw	r6,40(sp)
   188cc:	d9400917 	ldw	r5,36(sp)
   188d0:	e009883a 	mov	r4,fp
   188d4:	001a11c0 	call	1a11c <__pow5mult>
   188d8:	1021883a 	mov	r16,r2
   188dc:	003f5a06 	br	18648 <_gp+0xffff1ca0>
   188e0:	01c00044 	movi	r7,1
   188e4:	d9c00b15 	stw	r7,44(sp)
   188e8:	d8802217 	ldw	r2,136(sp)
   188ec:	0081280e 	bge	zero,r2,18d90 <_dtoa_r+0x11b0>
   188f0:	100d883a 	mov	r6,r2
   188f4:	1021883a 	mov	r16,r2
   188f8:	d8800c15 	stw	r2,48(sp)
   188fc:	d8800615 	stw	r2,24(sp)
   18900:	003d8806 	br	17f24 <_gp+0xffff157c>
   18904:	d8800617 	ldw	r2,24(sp)
   18908:	00be9b16 	blt	zero,r2,18378 <_gp+0xffff19d0>
   1890c:	10010f1e 	bne	r2,zero,18d4c <_dtoa_r+0x116c>
   18910:	880b883a 	mov	r5,r17
   18914:	000d883a 	mov	r6,zero
   18918:	01d00534 	movhi	r7,16404
   1891c:	8009883a 	mov	r4,r16
   18920:	0012df40 	call	12df4 <__muldf3>
   18924:	900d883a 	mov	r6,r18
   18928:	980f883a 	mov	r7,r19
   1892c:	1009883a 	mov	r4,r2
   18930:	180b883a 	mov	r5,r3
   18934:	0012d180 	call	12d18 <__gedf2>
   18938:	002b883a 	mov	r21,zero
   1893c:	0023883a 	mov	r17,zero
   18940:	1000bf16 	blt	r2,zero,18c40 <_dtoa_r+0x1060>
   18944:	d9802217 	ldw	r6,136(sp)
   18948:	ddc00717 	ldw	r23,28(sp)
   1894c:	018c303a 	nor	r6,zero,r6
   18950:	d9800515 	stw	r6,20(sp)
   18954:	a80b883a 	mov	r5,r21
   18958:	e009883a 	mov	r4,fp
   1895c:	0019ac80 	call	19ac8 <_Bfree>
   18960:	883e4926 	beq	r17,zero,18288 <_gp+0xffff18e0>
   18964:	003fad06 	br	1881c <_gp+0xffff1e74>
   18968:	d9c01117 	ldw	r7,68(sp)
   1896c:	3801bc26 	beq	r7,zero,19060 <_dtoa_r+0x1480>
   18970:	10810cc4 	addi	r2,r2,1075
   18974:	dd400a17 	ldw	r21,40(sp)
   18978:	dd000817 	ldw	r20,32(sp)
   1897c:	003f0a06 	br	185a8 <_gp+0xffff1c00>
   18980:	00800704 	movi	r2,28
   18984:	d9000817 	ldw	r4,32(sp)
   18988:	a0a9883a 	add	r20,r20,r2
   1898c:	b0ad883a 	add	r22,r22,r2
   18990:	2089883a 	add	r4,r4,r2
   18994:	d9000815 	stw	r4,32(sp)
   18998:	003f5106 	br	186e0 <_gp+0xffff1d38>
   1899c:	d8c00317 	ldw	r3,12(sp)
   189a0:	b8c1fc0e 	bge	r23,r3,19194 <_dtoa_r+0x15b4>
   189a4:	0027883a 	mov	r19,zero
   189a8:	b805883a 	mov	r2,r23
   189ac:	003f3e06 	br	186a8 <_gp+0xffff1d00>
   189b0:	880b883a 	mov	r5,r17
   189b4:	e009883a 	mov	r4,fp
   189b8:	000f883a 	mov	r7,zero
   189bc:	01800284 	movi	r6,10
   189c0:	0019af00 	call	19af0 <__multadd>
   189c4:	d9000c17 	ldw	r4,48(sp)
   189c8:	1023883a 	mov	r17,r2
   189cc:	0102040e 	bge	zero,r4,191e0 <_dtoa_r+0x1600>
   189d0:	d9000615 	stw	r4,24(sp)
   189d4:	0500050e 	bge	zero,r20,189ec <_dtoa_r+0xe0c>
   189d8:	880b883a 	mov	r5,r17
   189dc:	a00d883a 	mov	r6,r20
   189e0:	e009883a 	mov	r4,fp
   189e4:	001a25c0 	call	1a25c <__lshift>
   189e8:	1023883a 	mov	r17,r2
   189ec:	9801241e 	bne	r19,zero,18e80 <_dtoa_r+0x12a0>
   189f0:	8829883a 	mov	r20,r17
   189f4:	d9000617 	ldw	r4,24(sp)
   189f8:	dcc00717 	ldw	r19,28(sp)
   189fc:	9480004c 	andi	r18,r18,1
   18a00:	20bfffc4 	addi	r2,r4,-1
   18a04:	9885883a 	add	r2,r19,r2
   18a08:	d8800415 	stw	r2,16(sp)
   18a0c:	dc800615 	stw	r18,24(sp)
   18a10:	a80b883a 	mov	r5,r21
   18a14:	8009883a 	mov	r4,r16
   18a18:	00179b80 	call	179b8 <quorem>
   18a1c:	880b883a 	mov	r5,r17
   18a20:	8009883a 	mov	r4,r16
   18a24:	102f883a 	mov	r23,r2
   18a28:	001a3a40 	call	1a3a4 <__mcmp>
   18a2c:	a80b883a 	mov	r5,r21
   18a30:	a00d883a 	mov	r6,r20
   18a34:	e009883a 	mov	r4,fp
   18a38:	102d883a 	mov	r22,r2
   18a3c:	001a4040 	call	1a404 <__mdiff>
   18a40:	1007883a 	mov	r3,r2
   18a44:	10800317 	ldw	r2,12(r2)
   18a48:	bc800c04 	addi	r18,r23,48
   18a4c:	180b883a 	mov	r5,r3
   18a50:	10004e1e 	bne	r2,zero,18b8c <_dtoa_r+0xfac>
   18a54:	8009883a 	mov	r4,r16
   18a58:	d8c01615 	stw	r3,88(sp)
   18a5c:	001a3a40 	call	1a3a4 <__mcmp>
   18a60:	d8c01617 	ldw	r3,88(sp)
   18a64:	e009883a 	mov	r4,fp
   18a68:	d8801615 	stw	r2,88(sp)
   18a6c:	180b883a 	mov	r5,r3
   18a70:	0019ac80 	call	19ac8 <_Bfree>
   18a74:	d8801617 	ldw	r2,88(sp)
   18a78:	1000041e 	bne	r2,zero,18a8c <_dtoa_r+0xeac>
   18a7c:	d9800317 	ldw	r6,12(sp)
   18a80:	3000021e 	bne	r6,zero,18a8c <_dtoa_r+0xeac>
   18a84:	d8c00617 	ldw	r3,24(sp)
   18a88:	18003726 	beq	r3,zero,18b68 <_dtoa_r+0xf88>
   18a8c:	b0002016 	blt	r22,zero,18b10 <_dtoa_r+0xf30>
   18a90:	b000041e 	bne	r22,zero,18aa4 <_dtoa_r+0xec4>
   18a94:	d9000317 	ldw	r4,12(sp)
   18a98:	2000021e 	bne	r4,zero,18aa4 <_dtoa_r+0xec4>
   18a9c:	d8c00617 	ldw	r3,24(sp)
   18aa0:	18001b26 	beq	r3,zero,18b10 <_dtoa_r+0xf30>
   18aa4:	00810716 	blt	zero,r2,18ec4 <_dtoa_r+0x12e4>
   18aa8:	d8c00417 	ldw	r3,16(sp)
   18aac:	9d800044 	addi	r22,r19,1
   18ab0:	9c800005 	stb	r18,0(r19)
   18ab4:	b02f883a 	mov	r23,r22
   18ab8:	98c10626 	beq	r19,r3,18ed4 <_dtoa_r+0x12f4>
   18abc:	800b883a 	mov	r5,r16
   18ac0:	000f883a 	mov	r7,zero
   18ac4:	01800284 	movi	r6,10
   18ac8:	e009883a 	mov	r4,fp
   18acc:	0019af00 	call	19af0 <__multadd>
   18ad0:	1021883a 	mov	r16,r2
   18ad4:	000f883a 	mov	r7,zero
   18ad8:	01800284 	movi	r6,10
   18adc:	880b883a 	mov	r5,r17
   18ae0:	e009883a 	mov	r4,fp
   18ae4:	8d002526 	beq	r17,r20,18b7c <_dtoa_r+0xf9c>
   18ae8:	0019af00 	call	19af0 <__multadd>
   18aec:	a00b883a 	mov	r5,r20
   18af0:	000f883a 	mov	r7,zero
   18af4:	01800284 	movi	r6,10
   18af8:	e009883a 	mov	r4,fp
   18afc:	1023883a 	mov	r17,r2
   18b00:	0019af00 	call	19af0 <__multadd>
   18b04:	1029883a 	mov	r20,r2
   18b08:	b027883a 	mov	r19,r22
   18b0c:	003fc006 	br	18a10 <_gp+0xffff2068>
   18b10:	9011883a 	mov	r8,r18
   18b14:	00800e0e 	bge	zero,r2,18b50 <_dtoa_r+0xf70>
   18b18:	800b883a 	mov	r5,r16
   18b1c:	01800044 	movi	r6,1
   18b20:	e009883a 	mov	r4,fp
   18b24:	da001715 	stw	r8,92(sp)
   18b28:	001a25c0 	call	1a25c <__lshift>
   18b2c:	a80b883a 	mov	r5,r21
   18b30:	1009883a 	mov	r4,r2
   18b34:	1021883a 	mov	r16,r2
   18b38:	001a3a40 	call	1a3a4 <__mcmp>
   18b3c:	da001717 	ldw	r8,92(sp)
   18b40:	0081960e 	bge	zero,r2,1919c <_dtoa_r+0x15bc>
   18b44:	00800e44 	movi	r2,57
   18b48:	40817026 	beq	r8,r2,1910c <_dtoa_r+0x152c>
   18b4c:	ba000c44 	addi	r8,r23,49
   18b50:	8825883a 	mov	r18,r17
   18b54:	9dc00044 	addi	r23,r19,1
   18b58:	9a000005 	stb	r8,0(r19)
   18b5c:	a023883a 	mov	r17,r20
   18b60:	dc000915 	stw	r16,36(sp)
   18b64:	003f2406 	br	187f8 <_gp+0xffff1e50>
   18b68:	00800e44 	movi	r2,57
   18b6c:	9011883a 	mov	r8,r18
   18b70:	90816626 	beq	r18,r2,1910c <_dtoa_r+0x152c>
   18b74:	05bff516 	blt	zero,r22,18b4c <_gp+0xffff21a4>
   18b78:	003ff506 	br	18b50 <_gp+0xffff21a8>
   18b7c:	0019af00 	call	19af0 <__multadd>
   18b80:	1023883a 	mov	r17,r2
   18b84:	1029883a 	mov	r20,r2
   18b88:	003fdf06 	br	18b08 <_gp+0xffff2160>
   18b8c:	e009883a 	mov	r4,fp
   18b90:	0019ac80 	call	19ac8 <_Bfree>
   18b94:	00800044 	movi	r2,1
   18b98:	003fbc06 	br	18a8c <_gp+0xffff20e4>
   18b9c:	a80b883a 	mov	r5,r21
   18ba0:	8009883a 	mov	r4,r16
   18ba4:	001a3a40 	call	1a3a4 <__mcmp>
   18ba8:	103edb0e 	bge	r2,zero,18718 <_gp+0xffff1d70>
   18bac:	800b883a 	mov	r5,r16
   18bb0:	000f883a 	mov	r7,zero
   18bb4:	01800284 	movi	r6,10
   18bb8:	e009883a 	mov	r4,fp
   18bbc:	0019af00 	call	19af0 <__multadd>
   18bc0:	1021883a 	mov	r16,r2
   18bc4:	d8800517 	ldw	r2,20(sp)
   18bc8:	d8c00b17 	ldw	r3,44(sp)
   18bcc:	10bfffc4 	addi	r2,r2,-1
   18bd0:	d8800515 	stw	r2,20(sp)
   18bd4:	183f761e 	bne	r3,zero,189b0 <_gp+0xffff2008>
   18bd8:	d9000c17 	ldw	r4,48(sp)
   18bdc:	0101730e 	bge	zero,r4,191ac <_dtoa_r+0x15cc>
   18be0:	d9000615 	stw	r4,24(sp)
   18be4:	003ed006 	br	18728 <_gp+0xffff1d80>
   18be8:	00800084 	movi	r2,2
   18bec:	3081861e 	bne	r6,r2,19208 <_dtoa_r+0x1628>
   18bf0:	d8000b15 	stw	zero,44(sp)
   18bf4:	003f3c06 	br	188e8 <_gp+0xffff1f40>
   18bf8:	dc000917 	ldw	r16,36(sp)
   18bfc:	003e9206 	br	18648 <_gp+0xffff1ca0>
   18c00:	d9c00317 	ldw	r7,12(sp)
   18c04:	00800084 	movi	r2,2
   18c08:	11fec50e 	bge	r2,r7,18720 <_gp+0xffff1d78>
   18c0c:	d9000617 	ldw	r4,24(sp)
   18c10:	20013c1e 	bne	r4,zero,19104 <_dtoa_r+0x1524>
   18c14:	a80b883a 	mov	r5,r21
   18c18:	000f883a 	mov	r7,zero
   18c1c:	01800144 	movi	r6,5
   18c20:	e009883a 	mov	r4,fp
   18c24:	0019af00 	call	19af0 <__multadd>
   18c28:	100b883a 	mov	r5,r2
   18c2c:	8009883a 	mov	r4,r16
   18c30:	102b883a 	mov	r21,r2
   18c34:	001a3a40 	call	1a3a4 <__mcmp>
   18c38:	dc000915 	stw	r16,36(sp)
   18c3c:	00bf410e 	bge	zero,r2,18944 <_gp+0xffff1f9c>
   18c40:	d9c00717 	ldw	r7,28(sp)
   18c44:	00800c44 	movi	r2,49
   18c48:	38800005 	stb	r2,0(r7)
   18c4c:	d8800517 	ldw	r2,20(sp)
   18c50:	3dc00044 	addi	r23,r7,1
   18c54:	10800044 	addi	r2,r2,1
   18c58:	d8800515 	stw	r2,20(sp)
   18c5c:	003f3d06 	br	18954 <_gp+0xffff1fac>
   18c60:	d9800517 	ldw	r6,20(sp)
   18c64:	d9c00717 	ldw	r7,28(sp)
   18c68:	00800c44 	movi	r2,49
   18c6c:	31800044 	addi	r6,r6,1
   18c70:	d9800515 	stw	r6,20(sp)
   18c74:	38800005 	stb	r2,0(r7)
   18c78:	003edf06 	br	187f8 <_gp+0xffff1e50>
   18c7c:	d8000b15 	stw	zero,44(sp)
   18c80:	003c9f06 	br	17f00 <_gp+0xffff1558>
   18c84:	903e7e1e 	bne	r18,zero,18680 <_gp+0xffff1cd8>
   18c88:	00800434 	movhi	r2,16
   18c8c:	10bfffc4 	addi	r2,r2,-1
   18c90:	9884703a 	and	r2,r19,r2
   18c94:	1000ea1e 	bne	r2,zero,19040 <_dtoa_r+0x1460>
   18c98:	9cdffc2c 	andhi	r19,r19,32752
   18c9c:	9800e826 	beq	r19,zero,19040 <_dtoa_r+0x1460>
   18ca0:	d9c00817 	ldw	r7,32(sp)
   18ca4:	b5800044 	addi	r22,r22,1
   18ca8:	04c00044 	movi	r19,1
   18cac:	39c00044 	addi	r7,r7,1
   18cb0:	d9c00815 	stw	r7,32(sp)
   18cb4:	d8800d17 	ldw	r2,52(sp)
   18cb8:	103e721e 	bne	r2,zero,18684 <_gp+0xffff1cdc>
   18cbc:	00800044 	movi	r2,1
   18cc0:	003e7906 	br	186a8 <_gp+0xffff1d00>
   18cc4:	8009883a 	mov	r4,r16
   18cc8:	0013fdc0 	call	13fdc <__floatsidf>
   18ccc:	d9800f17 	ldw	r6,60(sp)
   18cd0:	d9c01017 	ldw	r7,64(sp)
   18cd4:	1009883a 	mov	r4,r2
   18cd8:	180b883a 	mov	r5,r3
   18cdc:	0012df40 	call	12df4 <__muldf3>
   18ce0:	000d883a 	mov	r6,zero
   18ce4:	01d00734 	movhi	r7,16412
   18ce8:	1009883a 	mov	r4,r2
   18cec:	180b883a 	mov	r5,r3
   18cf0:	0011a140 	call	11a14 <__adddf3>
   18cf4:	047f3034 	movhi	r17,64704
   18cf8:	1021883a 	mov	r16,r2
   18cfc:	1c63883a 	add	r17,r3,r17
   18d00:	d9000f17 	ldw	r4,60(sp)
   18d04:	d9401017 	ldw	r5,64(sp)
   18d08:	000d883a 	mov	r6,zero
   18d0c:	01d00534 	movhi	r7,16404
   18d10:	00136600 	call	13660 <__subdf3>
   18d14:	800d883a 	mov	r6,r16
   18d18:	880f883a 	mov	r7,r17
   18d1c:	1009883a 	mov	r4,r2
   18d20:	180b883a 	mov	r5,r3
   18d24:	102b883a 	mov	r21,r2
   18d28:	1829883a 	mov	r20,r3
   18d2c:	0012d180 	call	12d18 <__gedf2>
   18d30:	00806c16 	blt	zero,r2,18ee4 <_dtoa_r+0x1304>
   18d34:	89e0003c 	xorhi	r7,r17,32768
   18d38:	800d883a 	mov	r6,r16
   18d3c:	a809883a 	mov	r4,r21
   18d40:	a00b883a 	mov	r5,r20
   18d44:	001d5180 	call	1d518 <__ledf2>
   18d48:	103d7e0e 	bge	r2,zero,18344 <_gp+0xffff199c>
   18d4c:	002b883a 	mov	r21,zero
   18d50:	0023883a 	mov	r17,zero
   18d54:	003efb06 	br	18944 <_gp+0xffff1f9c>
   18d58:	d8800717 	ldw	r2,28(sp)
   18d5c:	003bd006 	br	17ca0 <_gp+0xffff12f8>
   18d60:	d9000a17 	ldw	r4,40(sp)
   18d64:	d9800d17 	ldw	r6,52(sp)
   18d68:	dd400a15 	stw	r21,40(sp)
   18d6c:	a905c83a 	sub	r2,r21,r4
   18d70:	308d883a 	add	r6,r6,r2
   18d74:	d9800d15 	stw	r6,52(sp)
   18d78:	002b883a 	mov	r21,zero
   18d7c:	003e0606 	br	18598 <_gp+0xffff1bf0>
   18d80:	9023883a 	mov	r17,r18
   18d84:	9829883a 	mov	r20,r19
   18d88:	04000084 	movi	r16,2
   18d8c:	003c9206 	br	17fd8 <_gp+0xffff1630>
   18d90:	04000044 	movi	r16,1
   18d94:	dc000c15 	stw	r16,48(sp)
   18d98:	dc000615 	stw	r16,24(sp)
   18d9c:	dc002215 	stw	r16,136(sp)
   18da0:	e0001115 	stw	zero,68(fp)
   18da4:	000b883a 	mov	r5,zero
   18da8:	003c6906 	br	17f50 <_gp+0xffff15a8>
   18dac:	3021883a 	mov	r16,r6
   18db0:	003ffb06 	br	18da0 <_gp+0xffff23f8>
   18db4:	1000021e 	bne	r2,zero,18dc0 <_dtoa_r+0x11e0>
   18db8:	4200004c 	andi	r8,r8,1
   18dbc:	403e7d1e 	bne	r8,zero,187b4 <_gp+0xffff1e0c>
   18dc0:	01000c04 	movi	r4,48
   18dc4:	00000106 	br	18dcc <_dtoa_r+0x11ec>
   18dc8:	102f883a 	mov	r23,r2
   18dcc:	b8bfffc4 	addi	r2,r23,-1
   18dd0:	10c00007 	ldb	r3,0(r2)
   18dd4:	193ffc26 	beq	r3,r4,18dc8 <_gp+0xffff2420>
   18dd8:	003e8706 	br	187f8 <_gp+0xffff1e50>
   18ddc:	d8800517 	ldw	r2,20(sp)
   18de0:	00a3c83a 	sub	r17,zero,r2
   18de4:	8800a426 	beq	r17,zero,19078 <_dtoa_r+0x1498>
   18de8:	888003cc 	andi	r2,r17,15
   18dec:	100490fa 	slli	r2,r2,3
   18df0:	00c000b4 	movhi	r3,2
   18df4:	18f7e304 	addi	r3,r3,-8308
   18df8:	1885883a 	add	r2,r3,r2
   18dfc:	11800017 	ldw	r6,0(r2)
   18e00:	11c00117 	ldw	r7,4(r2)
   18e04:	9009883a 	mov	r4,r18
   18e08:	980b883a 	mov	r5,r19
   18e0c:	8823d13a 	srai	r17,r17,4
   18e10:	0012df40 	call	12df4 <__muldf3>
   18e14:	d8800f15 	stw	r2,60(sp)
   18e18:	d8c01015 	stw	r3,64(sp)
   18e1c:	8800e826 	beq	r17,zero,191c0 <_dtoa_r+0x15e0>
   18e20:	050000b4 	movhi	r20,2
   18e24:	a537d904 	addi	r20,r20,-8348
   18e28:	04000084 	movi	r16,2
   18e2c:	8980004c 	andi	r6,r17,1
   18e30:	1009883a 	mov	r4,r2
   18e34:	8823d07a 	srai	r17,r17,1
   18e38:	180b883a 	mov	r5,r3
   18e3c:	30000426 	beq	r6,zero,18e50 <_dtoa_r+0x1270>
   18e40:	a1800017 	ldw	r6,0(r20)
   18e44:	a1c00117 	ldw	r7,4(r20)
   18e48:	84000044 	addi	r16,r16,1
   18e4c:	0012df40 	call	12df4 <__muldf3>
   18e50:	a5000204 	addi	r20,r20,8
   18e54:	883ff51e 	bne	r17,zero,18e2c <_gp+0xffff2484>
   18e58:	d8800f15 	stw	r2,60(sp)
   18e5c:	d8c01015 	stw	r3,64(sp)
   18e60:	003c7606 	br	1803c <_gp+0xffff1694>
   18e64:	00c00c04 	movi	r3,48
   18e68:	10c00005 	stb	r3,0(r2)
   18e6c:	d8c00517 	ldw	r3,20(sp)
   18e70:	bd3fffc3 	ldbu	r20,-1(r23)
   18e74:	18c00044 	addi	r3,r3,1
   18e78:	d8c00515 	stw	r3,20(sp)
   18e7c:	003db906 	br	18564 <_gp+0xffff1bbc>
   18e80:	89400117 	ldw	r5,4(r17)
   18e84:	e009883a 	mov	r4,fp
   18e88:	0019a200 	call	19a20 <_Balloc>
   18e8c:	89800417 	ldw	r6,16(r17)
   18e90:	89400304 	addi	r5,r17,12
   18e94:	11000304 	addi	r4,r2,12
   18e98:	31800084 	addi	r6,r6,2
   18e9c:	318d883a 	add	r6,r6,r6
   18ea0:	318d883a 	add	r6,r6,r6
   18ea4:	1027883a 	mov	r19,r2
   18ea8:	00198d80 	call	198d8 <memcpy>
   18eac:	01800044 	movi	r6,1
   18eb0:	980b883a 	mov	r5,r19
   18eb4:	e009883a 	mov	r4,fp
   18eb8:	001a25c0 	call	1a25c <__lshift>
   18ebc:	1029883a 	mov	r20,r2
   18ec0:	003ecc06 	br	189f4 <_gp+0xffff204c>
   18ec4:	00800e44 	movi	r2,57
   18ec8:	90809026 	beq	r18,r2,1910c <_dtoa_r+0x152c>
   18ecc:	92000044 	addi	r8,r18,1
   18ed0:	003f1f06 	br	18b50 <_gp+0xffff21a8>
   18ed4:	9011883a 	mov	r8,r18
   18ed8:	8825883a 	mov	r18,r17
   18edc:	a023883a 	mov	r17,r20
   18ee0:	003e2906 	br	18788 <_gp+0xffff1de0>
   18ee4:	002b883a 	mov	r21,zero
   18ee8:	0023883a 	mov	r17,zero
   18eec:	003f5406 	br	18c40 <_gp+0xffff2298>
   18ef0:	61bfffc4 	addi	r6,r12,-1
   18ef4:	300490fa 	slli	r2,r6,3
   18ef8:	00c000b4 	movhi	r3,2
   18efc:	18f7e304 	addi	r3,r3,-8308
   18f00:	1885883a 	add	r2,r3,r2
   18f04:	11000017 	ldw	r4,0(r2)
   18f08:	11400117 	ldw	r5,4(r2)
   18f0c:	d8800717 	ldw	r2,28(sp)
   18f10:	880f883a 	mov	r7,r17
   18f14:	d9801215 	stw	r6,72(sp)
   18f18:	800d883a 	mov	r6,r16
   18f1c:	db001615 	stw	r12,88(sp)
   18f20:	15c00044 	addi	r23,r2,1
   18f24:	0012df40 	call	12df4 <__muldf3>
   18f28:	d9401017 	ldw	r5,64(sp)
   18f2c:	d9000f17 	ldw	r4,60(sp)
   18f30:	d8c01515 	stw	r3,84(sp)
   18f34:	d8801415 	stw	r2,80(sp)
   18f38:	0013f5c0 	call	13f5c <__fixdfsi>
   18f3c:	1009883a 	mov	r4,r2
   18f40:	1021883a 	mov	r16,r2
   18f44:	0013fdc0 	call	13fdc <__floatsidf>
   18f48:	d9000f17 	ldw	r4,60(sp)
   18f4c:	d9401017 	ldw	r5,64(sp)
   18f50:	100d883a 	mov	r6,r2
   18f54:	180f883a 	mov	r7,r3
   18f58:	00136600 	call	13660 <__subdf3>
   18f5c:	1829883a 	mov	r20,r3
   18f60:	d8c00717 	ldw	r3,28(sp)
   18f64:	84000c04 	addi	r16,r16,48
   18f68:	1023883a 	mov	r17,r2
   18f6c:	1c000005 	stb	r16,0(r3)
   18f70:	db001617 	ldw	r12,88(sp)
   18f74:	00800044 	movi	r2,1
   18f78:	60802226 	beq	r12,r2,19004 <_dtoa_r+0x1424>
   18f7c:	d9c00717 	ldw	r7,28(sp)
   18f80:	8805883a 	mov	r2,r17
   18f84:	b82b883a 	mov	r21,r23
   18f88:	3b19883a 	add	r12,r7,r12
   18f8c:	6023883a 	mov	r17,r12
   18f90:	a007883a 	mov	r3,r20
   18f94:	dc800f15 	stw	r18,60(sp)
   18f98:	000d883a 	mov	r6,zero
   18f9c:	01d00934 	movhi	r7,16420
   18fa0:	1009883a 	mov	r4,r2
   18fa4:	180b883a 	mov	r5,r3
   18fa8:	0012df40 	call	12df4 <__muldf3>
   18fac:	180b883a 	mov	r5,r3
   18fb0:	1009883a 	mov	r4,r2
   18fb4:	1829883a 	mov	r20,r3
   18fb8:	1025883a 	mov	r18,r2
   18fbc:	0013f5c0 	call	13f5c <__fixdfsi>
   18fc0:	1009883a 	mov	r4,r2
   18fc4:	1021883a 	mov	r16,r2
   18fc8:	0013fdc0 	call	13fdc <__floatsidf>
   18fcc:	100d883a 	mov	r6,r2
   18fd0:	180f883a 	mov	r7,r3
   18fd4:	9009883a 	mov	r4,r18
   18fd8:	a00b883a 	mov	r5,r20
   18fdc:	84000c04 	addi	r16,r16,48
   18fe0:	00136600 	call	13660 <__subdf3>
   18fe4:	ad400044 	addi	r21,r21,1
   18fe8:	ac3fffc5 	stb	r16,-1(r21)
   18fec:	ac7fea1e 	bne	r21,r17,18f98 <_gp+0xffff25f0>
   18ff0:	1023883a 	mov	r17,r2
   18ff4:	d8801217 	ldw	r2,72(sp)
   18ff8:	dc800f17 	ldw	r18,60(sp)
   18ffc:	1829883a 	mov	r20,r3
   19000:	b8af883a 	add	r23,r23,r2
   19004:	d9001417 	ldw	r4,80(sp)
   19008:	d9401517 	ldw	r5,84(sp)
   1900c:	000d883a 	mov	r6,zero
   19010:	01cff834 	movhi	r7,16352
   19014:	0011a140 	call	11a14 <__adddf3>
   19018:	880d883a 	mov	r6,r17
   1901c:	a00f883a 	mov	r7,r20
   19020:	1009883a 	mov	r4,r2
   19024:	180b883a 	mov	r5,r3
   19028:	001d5180 	call	1d518 <__ledf2>
   1902c:	10003e0e 	bge	r2,zero,19128 <_dtoa_r+0x1548>
   19030:	d9001317 	ldw	r4,76(sp)
   19034:	bd3fffc3 	ldbu	r20,-1(r23)
   19038:	d9000515 	stw	r4,20(sp)
   1903c:	003d3b06 	br	1852c <_gp+0xffff1b84>
   19040:	0027883a 	mov	r19,zero
   19044:	003f1b06 	br	18cb4 <_gp+0xffff230c>
   19048:	d8800817 	ldw	r2,32(sp)
   1904c:	11e9c83a 	sub	r20,r2,r7
   19050:	0005883a 	mov	r2,zero
   19054:	003d5406 	br	185a8 <_gp+0xffff1c00>
   19058:	00800044 	movi	r2,1
   1905c:	003dc706 	br	1877c <_gp+0xffff1dd4>
   19060:	d8c00217 	ldw	r3,8(sp)
   19064:	00800d84 	movi	r2,54
   19068:	dd400a17 	ldw	r21,40(sp)
   1906c:	10c5c83a 	sub	r2,r2,r3
   19070:	dd000817 	ldw	r20,32(sp)
   19074:	003d4c06 	br	185a8 <_gp+0xffff1c00>
   19078:	dc800f15 	stw	r18,60(sp)
   1907c:	dcc01015 	stw	r19,64(sp)
   19080:	04000084 	movi	r16,2
   19084:	003bed06 	br	1803c <_gp+0xffff1694>
   19088:	d9000617 	ldw	r4,24(sp)
   1908c:	203f0d26 	beq	r4,zero,18cc4 <_gp+0xffff231c>
   19090:	d9800c17 	ldw	r6,48(sp)
   19094:	01bcab0e 	bge	zero,r6,18344 <_gp+0xffff199c>
   19098:	d9401017 	ldw	r5,64(sp)
   1909c:	d9000f17 	ldw	r4,60(sp)
   190a0:	000d883a 	mov	r6,zero
   190a4:	01d00934 	movhi	r7,16420
   190a8:	0012df40 	call	12df4 <__muldf3>
   190ac:	81000044 	addi	r4,r16,1
   190b0:	d8800f15 	stw	r2,60(sp)
   190b4:	d8c01015 	stw	r3,64(sp)
   190b8:	0013fdc0 	call	13fdc <__floatsidf>
   190bc:	d9800f17 	ldw	r6,60(sp)
   190c0:	d9c01017 	ldw	r7,64(sp)
   190c4:	1009883a 	mov	r4,r2
   190c8:	180b883a 	mov	r5,r3
   190cc:	0012df40 	call	12df4 <__muldf3>
   190d0:	01d00734 	movhi	r7,16412
   190d4:	000d883a 	mov	r6,zero
   190d8:	1009883a 	mov	r4,r2
   190dc:	180b883a 	mov	r5,r3
   190e0:	0011a140 	call	11a14 <__adddf3>
   190e4:	d9c00517 	ldw	r7,20(sp)
   190e8:	047f3034 	movhi	r17,64704
   190ec:	1021883a 	mov	r16,r2
   190f0:	39ffffc4 	addi	r7,r7,-1
   190f4:	d9c01315 	stw	r7,76(sp)
   190f8:	1c63883a 	add	r17,r3,r17
   190fc:	db000c17 	ldw	r12,48(sp)
   19100:	003bea06 	br	180ac <_gp+0xffff1704>
   19104:	dc000915 	stw	r16,36(sp)
   19108:	003e0e06 	br	18944 <_gp+0xffff1f9c>
   1910c:	01000e44 	movi	r4,57
   19110:	8825883a 	mov	r18,r17
   19114:	9dc00044 	addi	r23,r19,1
   19118:	99000005 	stb	r4,0(r19)
   1911c:	a023883a 	mov	r17,r20
   19120:	dc000915 	stw	r16,36(sp)
   19124:	003da406 	br	187b8 <_gp+0xffff1e10>
   19128:	d9801417 	ldw	r6,80(sp)
   1912c:	d9c01517 	ldw	r7,84(sp)
   19130:	0009883a 	mov	r4,zero
   19134:	014ff834 	movhi	r5,16352
   19138:	00136600 	call	13660 <__subdf3>
   1913c:	880d883a 	mov	r6,r17
   19140:	a00f883a 	mov	r7,r20
   19144:	1009883a 	mov	r4,r2
   19148:	180b883a 	mov	r5,r3
   1914c:	0012d180 	call	12d18 <__gedf2>
   19150:	00bc7c0e 	bge	zero,r2,18344 <_gp+0xffff199c>
   19154:	01000c04 	movi	r4,48
   19158:	00000106 	br	19160 <_dtoa_r+0x1580>
   1915c:	102f883a 	mov	r23,r2
   19160:	b8bfffc4 	addi	r2,r23,-1
   19164:	10c00007 	ldb	r3,0(r2)
   19168:	193ffc26 	beq	r3,r4,1915c <_gp+0xffff27b4>
   1916c:	d9801317 	ldw	r6,76(sp)
   19170:	d9800515 	stw	r6,20(sp)
   19174:	003c4406 	br	18288 <_gp+0xffff18e0>
   19178:	d9801317 	ldw	r6,76(sp)
   1917c:	d9800515 	stw	r6,20(sp)
   19180:	003cea06 	br	1852c <_gp+0xffff1b84>
   19184:	dd800f17 	ldw	r22,60(sp)
   19188:	dcc01017 	ldw	r19,64(sp)
   1918c:	dc801217 	ldw	r18,72(sp)
   19190:	003c6c06 	br	18344 <_gp+0xffff199c>
   19194:	903e031e 	bne	r18,zero,189a4 <_gp+0xffff1ffc>
   19198:	003ebb06 	br	18c88 <_gp+0xffff22e0>
   1919c:	103e6c1e 	bne	r2,zero,18b50 <_gp+0xffff21a8>
   191a0:	4080004c 	andi	r2,r8,1
   191a4:	103e6a26 	beq	r2,zero,18b50 <_gp+0xffff21a8>
   191a8:	003e6606 	br	18b44 <_gp+0xffff219c>
   191ac:	d8c00317 	ldw	r3,12(sp)
   191b0:	00800084 	movi	r2,2
   191b4:	10c02916 	blt	r2,r3,1925c <_dtoa_r+0x167c>
   191b8:	d9000c17 	ldw	r4,48(sp)
   191bc:	003e8806 	br	18be0 <_gp+0xffff2238>
   191c0:	04000084 	movi	r16,2
   191c4:	003b9d06 	br	1803c <_gp+0xffff1694>
   191c8:	d9001317 	ldw	r4,76(sp)
   191cc:	d9000515 	stw	r4,20(sp)
   191d0:	003cd606 	br	1852c <_gp+0xffff1b84>
   191d4:	d8801317 	ldw	r2,76(sp)
   191d8:	d8800515 	stw	r2,20(sp)
   191dc:	003c2a06 	br	18288 <_gp+0xffff18e0>
   191e0:	d9800317 	ldw	r6,12(sp)
   191e4:	00800084 	movi	r2,2
   191e8:	11801516 	blt	r2,r6,19240 <_dtoa_r+0x1660>
   191ec:	d9c00c17 	ldw	r7,48(sp)
   191f0:	d9c00615 	stw	r7,24(sp)
   191f4:	003df706 	br	189d4 <_gp+0xffff202c>
   191f8:	193d3926 	beq	r3,r4,186e0 <_gp+0xffff1d38>
   191fc:	00c00f04 	movi	r3,60
   19200:	1885c83a 	sub	r2,r3,r2
   19204:	003ddf06 	br	18984 <_gp+0xffff1fdc>
   19208:	e009883a 	mov	r4,fp
   1920c:	e0001115 	stw	zero,68(fp)
   19210:	000b883a 	mov	r5,zero
   19214:	0019a200 	call	19a20 <_Balloc>
   19218:	d8800715 	stw	r2,28(sp)
   1921c:	d8c00717 	ldw	r3,28(sp)
   19220:	00bfffc4 	movi	r2,-1
   19224:	01000044 	movi	r4,1
   19228:	d8800c15 	stw	r2,48(sp)
   1922c:	e0c01015 	stw	r3,64(fp)
   19230:	d9000b15 	stw	r4,44(sp)
   19234:	d8800615 	stw	r2,24(sp)
   19238:	d8002215 	stw	zero,136(sp)
   1923c:	003c4106 	br	18344 <_gp+0xffff199c>
   19240:	d8c00c17 	ldw	r3,48(sp)
   19244:	d8c00615 	stw	r3,24(sp)
   19248:	003e7006 	br	18c0c <_gp+0xffff2264>
   1924c:	04400044 	movi	r17,1
   19250:	003b2006 	br	17ed4 <_gp+0xffff152c>
   19254:	000b883a 	mov	r5,zero
   19258:	003b3d06 	br	17f50 <_gp+0xffff15a8>
   1925c:	d8800c17 	ldw	r2,48(sp)
   19260:	d8800615 	stw	r2,24(sp)
   19264:	003e6906 	br	18c0c <_gp+0xffff2264>

00019268 <_malloc_trim_r>:
   19268:	defffb04 	addi	sp,sp,-20
   1926c:	dcc00315 	stw	r19,12(sp)
   19270:	04c000b4 	movhi	r19,2
   19274:	dc800215 	stw	r18,8(sp)
   19278:	dc400115 	stw	r17,4(sp)
   1927c:	dc000015 	stw	r16,0(sp)
   19280:	dfc00415 	stw	ra,16(sp)
   19284:	2821883a 	mov	r16,r5
   19288:	9cf92904 	addi	r19,r19,-7004
   1928c:	2025883a 	mov	r18,r4
   19290:	001d8980 	call	1d898 <__malloc_lock>
   19294:	98800217 	ldw	r2,8(r19)
   19298:	14400117 	ldw	r17,4(r2)
   1929c:	00bfff04 	movi	r2,-4
   192a0:	88a2703a 	and	r17,r17,r2
   192a4:	8c21c83a 	sub	r16,r17,r16
   192a8:	8403fbc4 	addi	r16,r16,4079
   192ac:	8020d33a 	srli	r16,r16,12
   192b0:	0083ffc4 	movi	r2,4095
   192b4:	843fffc4 	addi	r16,r16,-1
   192b8:	8020933a 	slli	r16,r16,12
   192bc:	1400060e 	bge	r2,r16,192d8 <_malloc_trim_r+0x70>
   192c0:	000b883a 	mov	r5,zero
   192c4:	9009883a 	mov	r4,r18
   192c8:	0014b8c0 	call	14b8c <_sbrk_r>
   192cc:	98c00217 	ldw	r3,8(r19)
   192d0:	1c47883a 	add	r3,r3,r17
   192d4:	10c00a26 	beq	r2,r3,19300 <_malloc_trim_r+0x98>
   192d8:	9009883a 	mov	r4,r18
   192dc:	001d89c0 	call	1d89c <__malloc_unlock>
   192e0:	0005883a 	mov	r2,zero
   192e4:	dfc00417 	ldw	ra,16(sp)
   192e8:	dcc00317 	ldw	r19,12(sp)
   192ec:	dc800217 	ldw	r18,8(sp)
   192f0:	dc400117 	ldw	r17,4(sp)
   192f4:	dc000017 	ldw	r16,0(sp)
   192f8:	dec00504 	addi	sp,sp,20
   192fc:	f800283a 	ret
   19300:	040bc83a 	sub	r5,zero,r16
   19304:	9009883a 	mov	r4,r18
   19308:	0014b8c0 	call	14b8c <_sbrk_r>
   1930c:	00ffffc4 	movi	r3,-1
   19310:	10c00d26 	beq	r2,r3,19348 <_malloc_trim_r+0xe0>
   19314:	00c000b4 	movhi	r3,2
   19318:	18fcff04 	addi	r3,r3,-3076
   1931c:	18800017 	ldw	r2,0(r3)
   19320:	99000217 	ldw	r4,8(r19)
   19324:	8c23c83a 	sub	r17,r17,r16
   19328:	8c400054 	ori	r17,r17,1
   1932c:	1421c83a 	sub	r16,r2,r16
   19330:	24400115 	stw	r17,4(r4)
   19334:	9009883a 	mov	r4,r18
   19338:	1c000015 	stw	r16,0(r3)
   1933c:	001d89c0 	call	1d89c <__malloc_unlock>
   19340:	00800044 	movi	r2,1
   19344:	003fe706 	br	192e4 <_gp+0xffff293c>
   19348:	000b883a 	mov	r5,zero
   1934c:	9009883a 	mov	r4,r18
   19350:	0014b8c0 	call	14b8c <_sbrk_r>
   19354:	99000217 	ldw	r4,8(r19)
   19358:	014003c4 	movi	r5,15
   1935c:	1107c83a 	sub	r3,r2,r4
   19360:	28ffdd0e 	bge	r5,r3,192d8 <_gp+0xffff2930>
   19364:	014000b4 	movhi	r5,2
   19368:	297a6f04 	addi	r5,r5,-5700
   1936c:	29400017 	ldw	r5,0(r5)
   19370:	18c00054 	ori	r3,r3,1
   19374:	20c00115 	stw	r3,4(r4)
   19378:	00c000b4 	movhi	r3,2
   1937c:	1145c83a 	sub	r2,r2,r5
   19380:	18fcff04 	addi	r3,r3,-3076
   19384:	18800015 	stw	r2,0(r3)
   19388:	003fd306 	br	192d8 <_gp+0xffff2930>

0001938c <_free_r>:
   1938c:	28004126 	beq	r5,zero,19494 <_free_r+0x108>
   19390:	defffd04 	addi	sp,sp,-12
   19394:	dc400115 	stw	r17,4(sp)
   19398:	dc000015 	stw	r16,0(sp)
   1939c:	2023883a 	mov	r17,r4
   193a0:	2821883a 	mov	r16,r5
   193a4:	dfc00215 	stw	ra,8(sp)
   193a8:	001d8980 	call	1d898 <__malloc_lock>
   193ac:	81ffff17 	ldw	r7,-4(r16)
   193b0:	00bfff84 	movi	r2,-2
   193b4:	010000b4 	movhi	r4,2
   193b8:	81bffe04 	addi	r6,r16,-8
   193bc:	3884703a 	and	r2,r7,r2
   193c0:	21392904 	addi	r4,r4,-7004
   193c4:	308b883a 	add	r5,r6,r2
   193c8:	2a400117 	ldw	r9,4(r5)
   193cc:	22000217 	ldw	r8,8(r4)
   193d0:	00ffff04 	movi	r3,-4
   193d4:	48c6703a 	and	r3,r9,r3
   193d8:	2a005726 	beq	r5,r8,19538 <_free_r+0x1ac>
   193dc:	28c00115 	stw	r3,4(r5)
   193e0:	39c0004c 	andi	r7,r7,1
   193e4:	3800091e 	bne	r7,zero,1940c <_free_r+0x80>
   193e8:	823ffe17 	ldw	r8,-8(r16)
   193ec:	22400204 	addi	r9,r4,8
   193f0:	320dc83a 	sub	r6,r6,r8
   193f4:	31c00217 	ldw	r7,8(r6)
   193f8:	1205883a 	add	r2,r2,r8
   193fc:	3a406526 	beq	r7,r9,19594 <_free_r+0x208>
   19400:	32000317 	ldw	r8,12(r6)
   19404:	3a000315 	stw	r8,12(r7)
   19408:	41c00215 	stw	r7,8(r8)
   1940c:	28cf883a 	add	r7,r5,r3
   19410:	39c00117 	ldw	r7,4(r7)
   19414:	39c0004c 	andi	r7,r7,1
   19418:	38003a26 	beq	r7,zero,19504 <_free_r+0x178>
   1941c:	10c00054 	ori	r3,r2,1
   19420:	30c00115 	stw	r3,4(r6)
   19424:	3087883a 	add	r3,r6,r2
   19428:	18800015 	stw	r2,0(r3)
   1942c:	00c07fc4 	movi	r3,511
   19430:	18801936 	bltu	r3,r2,19498 <_free_r+0x10c>
   19434:	1004d0fa 	srli	r2,r2,3
   19438:	01c00044 	movi	r7,1
   1943c:	21400117 	ldw	r5,4(r4)
   19440:	10c00044 	addi	r3,r2,1
   19444:	18c7883a 	add	r3,r3,r3
   19448:	1005d0ba 	srai	r2,r2,2
   1944c:	18c7883a 	add	r3,r3,r3
   19450:	18c7883a 	add	r3,r3,r3
   19454:	1907883a 	add	r3,r3,r4
   19458:	3884983a 	sll	r2,r7,r2
   1945c:	19c00017 	ldw	r7,0(r3)
   19460:	1a3ffe04 	addi	r8,r3,-8
   19464:	1144b03a 	or	r2,r2,r5
   19468:	32000315 	stw	r8,12(r6)
   1946c:	31c00215 	stw	r7,8(r6)
   19470:	20800115 	stw	r2,4(r4)
   19474:	19800015 	stw	r6,0(r3)
   19478:	39800315 	stw	r6,12(r7)
   1947c:	8809883a 	mov	r4,r17
   19480:	dfc00217 	ldw	ra,8(sp)
   19484:	dc400117 	ldw	r17,4(sp)
   19488:	dc000017 	ldw	r16,0(sp)
   1948c:	dec00304 	addi	sp,sp,12
   19490:	001d89c1 	jmpi	1d89c <__malloc_unlock>
   19494:	f800283a 	ret
   19498:	100ad27a 	srli	r5,r2,9
   1949c:	00c00104 	movi	r3,4
   194a0:	19404a36 	bltu	r3,r5,195cc <_free_r+0x240>
   194a4:	100ad1ba 	srli	r5,r2,6
   194a8:	28c00e44 	addi	r3,r5,57
   194ac:	18c7883a 	add	r3,r3,r3
   194b0:	29400e04 	addi	r5,r5,56
   194b4:	18c7883a 	add	r3,r3,r3
   194b8:	18c7883a 	add	r3,r3,r3
   194bc:	1909883a 	add	r4,r3,r4
   194c0:	20c00017 	ldw	r3,0(r4)
   194c4:	01c000b4 	movhi	r7,2
   194c8:	213ffe04 	addi	r4,r4,-8
   194cc:	39f92904 	addi	r7,r7,-7004
   194d0:	20c04426 	beq	r4,r3,195e4 <_free_r+0x258>
   194d4:	01ffff04 	movi	r7,-4
   194d8:	19400117 	ldw	r5,4(r3)
   194dc:	29ca703a 	and	r5,r5,r7
   194e0:	1140022e 	bgeu	r2,r5,194ec <_free_r+0x160>
   194e4:	18c00217 	ldw	r3,8(r3)
   194e8:	20fffb1e 	bne	r4,r3,194d8 <_gp+0xffff2b30>
   194ec:	19000317 	ldw	r4,12(r3)
   194f0:	31000315 	stw	r4,12(r6)
   194f4:	30c00215 	stw	r3,8(r6)
   194f8:	21800215 	stw	r6,8(r4)
   194fc:	19800315 	stw	r6,12(r3)
   19500:	003fde06 	br	1947c <_gp+0xffff2ad4>
   19504:	29c00217 	ldw	r7,8(r5)
   19508:	10c5883a 	add	r2,r2,r3
   1950c:	00c000b4 	movhi	r3,2
   19510:	18f92b04 	addi	r3,r3,-6996
   19514:	38c03b26 	beq	r7,r3,19604 <_free_r+0x278>
   19518:	2a000317 	ldw	r8,12(r5)
   1951c:	11400054 	ori	r5,r2,1
   19520:	3087883a 	add	r3,r6,r2
   19524:	3a000315 	stw	r8,12(r7)
   19528:	41c00215 	stw	r7,8(r8)
   1952c:	31400115 	stw	r5,4(r6)
   19530:	18800015 	stw	r2,0(r3)
   19534:	003fbd06 	br	1942c <_gp+0xffff2a84>
   19538:	39c0004c 	andi	r7,r7,1
   1953c:	10c5883a 	add	r2,r2,r3
   19540:	3800071e 	bne	r7,zero,19560 <_free_r+0x1d4>
   19544:	81fffe17 	ldw	r7,-8(r16)
   19548:	31cdc83a 	sub	r6,r6,r7
   1954c:	30c00317 	ldw	r3,12(r6)
   19550:	31400217 	ldw	r5,8(r6)
   19554:	11c5883a 	add	r2,r2,r7
   19558:	28c00315 	stw	r3,12(r5)
   1955c:	19400215 	stw	r5,8(r3)
   19560:	10c00054 	ori	r3,r2,1
   19564:	30c00115 	stw	r3,4(r6)
   19568:	00c000b4 	movhi	r3,2
   1956c:	18fa7004 	addi	r3,r3,-5696
   19570:	18c00017 	ldw	r3,0(r3)
   19574:	21800215 	stw	r6,8(r4)
   19578:	10ffc036 	bltu	r2,r3,1947c <_gp+0xffff2ad4>
   1957c:	008000b4 	movhi	r2,2
   19580:	10bce904 	addi	r2,r2,-3164
   19584:	11400017 	ldw	r5,0(r2)
   19588:	8809883a 	mov	r4,r17
   1958c:	00192680 	call	19268 <_malloc_trim_r>
   19590:	003fba06 	br	1947c <_gp+0xffff2ad4>
   19594:	28c9883a 	add	r4,r5,r3
   19598:	21000117 	ldw	r4,4(r4)
   1959c:	2100004c 	andi	r4,r4,1
   195a0:	2000391e 	bne	r4,zero,19688 <_free_r+0x2fc>
   195a4:	29c00217 	ldw	r7,8(r5)
   195a8:	29000317 	ldw	r4,12(r5)
   195ac:	1885883a 	add	r2,r3,r2
   195b0:	10c00054 	ori	r3,r2,1
   195b4:	39000315 	stw	r4,12(r7)
   195b8:	21c00215 	stw	r7,8(r4)
   195bc:	30c00115 	stw	r3,4(r6)
   195c0:	308d883a 	add	r6,r6,r2
   195c4:	30800015 	stw	r2,0(r6)
   195c8:	003fac06 	br	1947c <_gp+0xffff2ad4>
   195cc:	00c00504 	movi	r3,20
   195d0:	19401536 	bltu	r3,r5,19628 <_free_r+0x29c>
   195d4:	28c01704 	addi	r3,r5,92
   195d8:	18c7883a 	add	r3,r3,r3
   195dc:	294016c4 	addi	r5,r5,91
   195e0:	003fb406 	br	194b4 <_gp+0xffff2b0c>
   195e4:	280bd0ba 	srai	r5,r5,2
   195e8:	00c00044 	movi	r3,1
   195ec:	38800117 	ldw	r2,4(r7)
   195f0:	194a983a 	sll	r5,r3,r5
   195f4:	2007883a 	mov	r3,r4
   195f8:	2884b03a 	or	r2,r5,r2
   195fc:	38800115 	stw	r2,4(r7)
   19600:	003fbb06 	br	194f0 <_gp+0xffff2b48>
   19604:	21800515 	stw	r6,20(r4)
   19608:	21800415 	stw	r6,16(r4)
   1960c:	10c00054 	ori	r3,r2,1
   19610:	31c00315 	stw	r7,12(r6)
   19614:	31c00215 	stw	r7,8(r6)
   19618:	30c00115 	stw	r3,4(r6)
   1961c:	308d883a 	add	r6,r6,r2
   19620:	30800015 	stw	r2,0(r6)
   19624:	003f9506 	br	1947c <_gp+0xffff2ad4>
   19628:	00c01504 	movi	r3,84
   1962c:	19400536 	bltu	r3,r5,19644 <_free_r+0x2b8>
   19630:	100ad33a 	srli	r5,r2,12
   19634:	28c01bc4 	addi	r3,r5,111
   19638:	18c7883a 	add	r3,r3,r3
   1963c:	29401b84 	addi	r5,r5,110
   19640:	003f9c06 	br	194b4 <_gp+0xffff2b0c>
   19644:	00c05504 	movi	r3,340
   19648:	19400536 	bltu	r3,r5,19660 <_free_r+0x2d4>
   1964c:	100ad3fa 	srli	r5,r2,15
   19650:	28c01e04 	addi	r3,r5,120
   19654:	18c7883a 	add	r3,r3,r3
   19658:	29401dc4 	addi	r5,r5,119
   1965c:	003f9506 	br	194b4 <_gp+0xffff2b0c>
   19660:	00c15504 	movi	r3,1364
   19664:	19400536 	bltu	r3,r5,1967c <_free_r+0x2f0>
   19668:	100ad4ba 	srli	r5,r2,18
   1966c:	28c01f44 	addi	r3,r5,125
   19670:	18c7883a 	add	r3,r3,r3
   19674:	29401f04 	addi	r5,r5,124
   19678:	003f8e06 	br	194b4 <_gp+0xffff2b0c>
   1967c:	00c03f84 	movi	r3,254
   19680:	01401f84 	movi	r5,126
   19684:	003f8b06 	br	194b4 <_gp+0xffff2b0c>
   19688:	10c00054 	ori	r3,r2,1
   1968c:	30c00115 	stw	r3,4(r6)
   19690:	308d883a 	add	r6,r6,r2
   19694:	30800015 	stw	r2,0(r6)
   19698:	003f7806 	br	1947c <_gp+0xffff2ad4>

0001969c <_setlocale_r>:
   1969c:	30001b26 	beq	r6,zero,1970c <_setlocale_r+0x70>
   196a0:	014000b4 	movhi	r5,2
   196a4:	defffe04 	addi	sp,sp,-8
   196a8:	2977c904 	addi	r5,r5,-8412
   196ac:	3009883a 	mov	r4,r6
   196b0:	dc000015 	stw	r16,0(sp)
   196b4:	dfc00115 	stw	ra,4(sp)
   196b8:	3021883a 	mov	r16,r6
   196bc:	001aad80 	call	1aad8 <strcmp>
   196c0:	1000061e 	bne	r2,zero,196dc <_setlocale_r+0x40>
   196c4:	008000b4 	movhi	r2,2
   196c8:	10b7ab04 	addi	r2,r2,-8532
   196cc:	dfc00117 	ldw	ra,4(sp)
   196d0:	dc000017 	ldw	r16,0(sp)
   196d4:	dec00204 	addi	sp,sp,8
   196d8:	f800283a 	ret
   196dc:	014000b4 	movhi	r5,2
   196e0:	2977ab04 	addi	r5,r5,-8532
   196e4:	8009883a 	mov	r4,r16
   196e8:	001aad80 	call	1aad8 <strcmp>
   196ec:	103ff526 	beq	r2,zero,196c4 <_gp+0xffff2d1c>
   196f0:	014000b4 	movhi	r5,2
   196f4:	29774404 	addi	r5,r5,-8944
   196f8:	8009883a 	mov	r4,r16
   196fc:	001aad80 	call	1aad8 <strcmp>
   19700:	103ff026 	beq	r2,zero,196c4 <_gp+0xffff2d1c>
   19704:	0005883a 	mov	r2,zero
   19708:	003ff006 	br	196cc <_gp+0xffff2d24>
   1970c:	008000b4 	movhi	r2,2
   19710:	10b7ab04 	addi	r2,r2,-8532
   19714:	f800283a 	ret

00019718 <__locale_charset>:
   19718:	008000b4 	movhi	r2,2
   1971c:	10ba3304 	addi	r2,r2,-5940
   19720:	f800283a 	ret

00019724 <__locale_mb_cur_max>:
   19724:	008000b4 	movhi	r2,2
   19728:	10ba7104 	addi	r2,r2,-5692
   1972c:	10800017 	ldw	r2,0(r2)
   19730:	f800283a 	ret

00019734 <__locale_msgcharset>:
   19734:	008000b4 	movhi	r2,2
   19738:	10ba2b04 	addi	r2,r2,-5972
   1973c:	f800283a 	ret

00019740 <__locale_cjk_lang>:
   19740:	0005883a 	mov	r2,zero
   19744:	f800283a 	ret

00019748 <_localeconv_r>:
   19748:	008000b4 	movhi	r2,2
   1974c:	10ba3b04 	addi	r2,r2,-5908
   19750:	f800283a 	ret

00019754 <setlocale>:
   19754:	008000b4 	movhi	r2,2
   19758:	10ba6e04 	addi	r2,r2,-5704
   1975c:	280d883a 	mov	r6,r5
   19760:	200b883a 	mov	r5,r4
   19764:	11000017 	ldw	r4,0(r2)
   19768:	001969c1 	jmpi	1969c <_setlocale_r>

0001976c <localeconv>:
   1976c:	008000b4 	movhi	r2,2
   19770:	10ba3b04 	addi	r2,r2,-5908
   19774:	f800283a 	ret

00019778 <memchr>:
   19778:	208000cc 	andi	r2,r4,3
   1977c:	280f883a 	mov	r7,r5
   19780:	10003426 	beq	r2,zero,19854 <memchr+0xdc>
   19784:	30bfffc4 	addi	r2,r6,-1
   19788:	30001a26 	beq	r6,zero,197f4 <memchr+0x7c>
   1978c:	20c00003 	ldbu	r3,0(r4)
   19790:	29803fcc 	andi	r6,r5,255
   19794:	30c0051e 	bne	r6,r3,197ac <memchr+0x34>
   19798:	00001806 	br	197fc <memchr+0x84>
   1979c:	10001526 	beq	r2,zero,197f4 <memchr+0x7c>
   197a0:	20c00003 	ldbu	r3,0(r4)
   197a4:	10bfffc4 	addi	r2,r2,-1
   197a8:	30c01426 	beq	r6,r3,197fc <memchr+0x84>
   197ac:	21000044 	addi	r4,r4,1
   197b0:	20c000cc 	andi	r3,r4,3
   197b4:	183ff91e 	bne	r3,zero,1979c <_gp+0xffff2df4>
   197b8:	020000c4 	movi	r8,3
   197bc:	40801136 	bltu	r8,r2,19804 <memchr+0x8c>
   197c0:	10000c26 	beq	r2,zero,197f4 <memchr+0x7c>
   197c4:	20c00003 	ldbu	r3,0(r4)
   197c8:	29403fcc 	andi	r5,r5,255
   197cc:	28c00b26 	beq	r5,r3,197fc <memchr+0x84>
   197d0:	20c00044 	addi	r3,r4,1
   197d4:	39803fcc 	andi	r6,r7,255
   197d8:	2089883a 	add	r4,r4,r2
   197dc:	00000306 	br	197ec <memchr+0x74>
   197e0:	18c00044 	addi	r3,r3,1
   197e4:	197fffc3 	ldbu	r5,-1(r3)
   197e8:	31400526 	beq	r6,r5,19800 <memchr+0x88>
   197ec:	1805883a 	mov	r2,r3
   197f0:	20fffb1e 	bne	r4,r3,197e0 <_gp+0xffff2e38>
   197f4:	0005883a 	mov	r2,zero
   197f8:	f800283a 	ret
   197fc:	2005883a 	mov	r2,r4
   19800:	f800283a 	ret
   19804:	28c03fcc 	andi	r3,r5,255
   19808:	1812923a 	slli	r9,r3,8
   1980c:	02ffbff4 	movhi	r11,65279
   19810:	02a02074 	movhi	r10,32897
   19814:	48d2b03a 	or	r9,r9,r3
   19818:	4806943a 	slli	r3,r9,16
   1981c:	5affbfc4 	addi	r11,r11,-257
   19820:	52a02004 	addi	r10,r10,-32640
   19824:	48d2b03a 	or	r9,r9,r3
   19828:	20c00017 	ldw	r3,0(r4)
   1982c:	48c6f03a 	xor	r3,r9,r3
   19830:	1acd883a 	add	r6,r3,r11
   19834:	00c6303a 	nor	r3,zero,r3
   19838:	30c6703a 	and	r3,r6,r3
   1983c:	1a86703a 	and	r3,r3,r10
   19840:	183fe01e 	bne	r3,zero,197c4 <_gp+0xffff2e1c>
   19844:	10bfff04 	addi	r2,r2,-4
   19848:	21000104 	addi	r4,r4,4
   1984c:	40bff636 	bltu	r8,r2,19828 <_gp+0xffff2e80>
   19850:	003fdb06 	br	197c0 <_gp+0xffff2e18>
   19854:	3005883a 	mov	r2,r6
   19858:	003fd706 	br	197b8 <_gp+0xffff2e10>

0001985c <memcmp>:
   1985c:	01c000c4 	movi	r7,3
   19860:	3980192e 	bgeu	r7,r6,198c8 <memcmp+0x6c>
   19864:	2144b03a 	or	r2,r4,r5
   19868:	11c4703a 	and	r2,r2,r7
   1986c:	10000f26 	beq	r2,zero,198ac <memcmp+0x50>
   19870:	20800003 	ldbu	r2,0(r4)
   19874:	28c00003 	ldbu	r3,0(r5)
   19878:	10c0151e 	bne	r2,r3,198d0 <memcmp+0x74>
   1987c:	31bfff84 	addi	r6,r6,-2
   19880:	01ffffc4 	movi	r7,-1
   19884:	00000406 	br	19898 <memcmp+0x3c>
   19888:	20800003 	ldbu	r2,0(r4)
   1988c:	28c00003 	ldbu	r3,0(r5)
   19890:	31bfffc4 	addi	r6,r6,-1
   19894:	10c00e1e 	bne	r2,r3,198d0 <memcmp+0x74>
   19898:	21000044 	addi	r4,r4,1
   1989c:	29400044 	addi	r5,r5,1
   198a0:	31fff91e 	bne	r6,r7,19888 <_gp+0xffff2ee0>
   198a4:	0005883a 	mov	r2,zero
   198a8:	f800283a 	ret
   198ac:	20c00017 	ldw	r3,0(r4)
   198b0:	28800017 	ldw	r2,0(r5)
   198b4:	18bfee1e 	bne	r3,r2,19870 <_gp+0xffff2ec8>
   198b8:	31bfff04 	addi	r6,r6,-4
   198bc:	21000104 	addi	r4,r4,4
   198c0:	29400104 	addi	r5,r5,4
   198c4:	39bff936 	bltu	r7,r6,198ac <_gp+0xffff2f04>
   198c8:	303fe91e 	bne	r6,zero,19870 <_gp+0xffff2ec8>
   198cc:	003ff506 	br	198a4 <_gp+0xffff2efc>
   198d0:	10c5c83a 	sub	r2,r2,r3
   198d4:	f800283a 	ret

000198d8 <memcpy>:
   198d8:	defffd04 	addi	sp,sp,-12
   198dc:	dfc00215 	stw	ra,8(sp)
   198e0:	dc400115 	stw	r17,4(sp)
   198e4:	dc000015 	stw	r16,0(sp)
   198e8:	00c003c4 	movi	r3,15
   198ec:	2005883a 	mov	r2,r4
   198f0:	1980452e 	bgeu	r3,r6,19a08 <memcpy+0x130>
   198f4:	2906b03a 	or	r3,r5,r4
   198f8:	18c000cc 	andi	r3,r3,3
   198fc:	1800441e 	bne	r3,zero,19a10 <memcpy+0x138>
   19900:	347ffc04 	addi	r17,r6,-16
   19904:	8822d13a 	srli	r17,r17,4
   19908:	28c00104 	addi	r3,r5,4
   1990c:	23400104 	addi	r13,r4,4
   19910:	8820913a 	slli	r16,r17,4
   19914:	2b000204 	addi	r12,r5,8
   19918:	22c00204 	addi	r11,r4,8
   1991c:	84000504 	addi	r16,r16,20
   19920:	2a800304 	addi	r10,r5,12
   19924:	22400304 	addi	r9,r4,12
   19928:	2c21883a 	add	r16,r5,r16
   1992c:	2811883a 	mov	r8,r5
   19930:	200f883a 	mov	r7,r4
   19934:	41000017 	ldw	r4,0(r8)
   19938:	1fc00017 	ldw	ra,0(r3)
   1993c:	63c00017 	ldw	r15,0(r12)
   19940:	39000015 	stw	r4,0(r7)
   19944:	53800017 	ldw	r14,0(r10)
   19948:	6fc00015 	stw	ra,0(r13)
   1994c:	5bc00015 	stw	r15,0(r11)
   19950:	4b800015 	stw	r14,0(r9)
   19954:	18c00404 	addi	r3,r3,16
   19958:	39c00404 	addi	r7,r7,16
   1995c:	42000404 	addi	r8,r8,16
   19960:	6b400404 	addi	r13,r13,16
   19964:	63000404 	addi	r12,r12,16
   19968:	5ac00404 	addi	r11,r11,16
   1996c:	52800404 	addi	r10,r10,16
   19970:	4a400404 	addi	r9,r9,16
   19974:	1c3fef1e 	bne	r3,r16,19934 <_gp+0xffff2f8c>
   19978:	89c00044 	addi	r7,r17,1
   1997c:	380e913a 	slli	r7,r7,4
   19980:	310003cc 	andi	r4,r6,15
   19984:	02c000c4 	movi	r11,3
   19988:	11c7883a 	add	r3,r2,r7
   1998c:	29cb883a 	add	r5,r5,r7
   19990:	5900212e 	bgeu	r11,r4,19a18 <memcpy+0x140>
   19994:	1813883a 	mov	r9,r3
   19998:	2811883a 	mov	r8,r5
   1999c:	200f883a 	mov	r7,r4
   199a0:	42800017 	ldw	r10,0(r8)
   199a4:	4a400104 	addi	r9,r9,4
   199a8:	39ffff04 	addi	r7,r7,-4
   199ac:	4abfff15 	stw	r10,-4(r9)
   199b0:	42000104 	addi	r8,r8,4
   199b4:	59fffa36 	bltu	r11,r7,199a0 <_gp+0xffff2ff8>
   199b8:	213fff04 	addi	r4,r4,-4
   199bc:	2008d0ba 	srli	r4,r4,2
   199c0:	318000cc 	andi	r6,r6,3
   199c4:	21000044 	addi	r4,r4,1
   199c8:	2109883a 	add	r4,r4,r4
   199cc:	2109883a 	add	r4,r4,r4
   199d0:	1907883a 	add	r3,r3,r4
   199d4:	290b883a 	add	r5,r5,r4
   199d8:	30000626 	beq	r6,zero,199f4 <memcpy+0x11c>
   199dc:	198d883a 	add	r6,r3,r6
   199e0:	29c00003 	ldbu	r7,0(r5)
   199e4:	18c00044 	addi	r3,r3,1
   199e8:	29400044 	addi	r5,r5,1
   199ec:	19ffffc5 	stb	r7,-1(r3)
   199f0:	19bffb1e 	bne	r3,r6,199e0 <_gp+0xffff3038>
   199f4:	dfc00217 	ldw	ra,8(sp)
   199f8:	dc400117 	ldw	r17,4(sp)
   199fc:	dc000017 	ldw	r16,0(sp)
   19a00:	dec00304 	addi	sp,sp,12
   19a04:	f800283a 	ret
   19a08:	2007883a 	mov	r3,r4
   19a0c:	003ff206 	br	199d8 <_gp+0xffff3030>
   19a10:	2007883a 	mov	r3,r4
   19a14:	003ff106 	br	199dc <_gp+0xffff3034>
   19a18:	200d883a 	mov	r6,r4
   19a1c:	003fee06 	br	199d8 <_gp+0xffff3030>

00019a20 <_Balloc>:
   19a20:	20801317 	ldw	r2,76(r4)
   19a24:	defffc04 	addi	sp,sp,-16
   19a28:	dc400115 	stw	r17,4(sp)
   19a2c:	dc000015 	stw	r16,0(sp)
   19a30:	dfc00315 	stw	ra,12(sp)
   19a34:	dc800215 	stw	r18,8(sp)
   19a38:	2023883a 	mov	r17,r4
   19a3c:	2821883a 	mov	r16,r5
   19a40:	10000f26 	beq	r2,zero,19a80 <_Balloc+0x60>
   19a44:	8407883a 	add	r3,r16,r16
   19a48:	18c7883a 	add	r3,r3,r3
   19a4c:	10c7883a 	add	r3,r2,r3
   19a50:	18800017 	ldw	r2,0(r3)
   19a54:	10001126 	beq	r2,zero,19a9c <_Balloc+0x7c>
   19a58:	11000017 	ldw	r4,0(r2)
   19a5c:	19000015 	stw	r4,0(r3)
   19a60:	10000415 	stw	zero,16(r2)
   19a64:	10000315 	stw	zero,12(r2)
   19a68:	dfc00317 	ldw	ra,12(sp)
   19a6c:	dc800217 	ldw	r18,8(sp)
   19a70:	dc400117 	ldw	r17,4(sp)
   19a74:	dc000017 	ldw	r16,0(sp)
   19a78:	dec00404 	addi	sp,sp,16
   19a7c:	f800283a 	ret
   19a80:	01800844 	movi	r6,33
   19a84:	01400104 	movi	r5,4
   19a88:	001c1bc0 	call	1c1bc <_calloc_r>
   19a8c:	88801315 	stw	r2,76(r17)
   19a90:	103fec1e 	bne	r2,zero,19a44 <_gp+0xffff309c>
   19a94:	0005883a 	mov	r2,zero
   19a98:	003ff306 	br	19a68 <_gp+0xffff30c0>
   19a9c:	01400044 	movi	r5,1
   19aa0:	2c24983a 	sll	r18,r5,r16
   19aa4:	8809883a 	mov	r4,r17
   19aa8:	91800144 	addi	r6,r18,5
   19aac:	318d883a 	add	r6,r6,r6
   19ab0:	318d883a 	add	r6,r6,r6
   19ab4:	001c1bc0 	call	1c1bc <_calloc_r>
   19ab8:	103ff626 	beq	r2,zero,19a94 <_gp+0xffff30ec>
   19abc:	14000115 	stw	r16,4(r2)
   19ac0:	14800215 	stw	r18,8(r2)
   19ac4:	003fe606 	br	19a60 <_gp+0xffff30b8>

00019ac8 <_Bfree>:
   19ac8:	28000826 	beq	r5,zero,19aec <_Bfree+0x24>
   19acc:	28c00117 	ldw	r3,4(r5)
   19ad0:	20801317 	ldw	r2,76(r4)
   19ad4:	18c7883a 	add	r3,r3,r3
   19ad8:	18c7883a 	add	r3,r3,r3
   19adc:	10c5883a 	add	r2,r2,r3
   19ae0:	10c00017 	ldw	r3,0(r2)
   19ae4:	28c00015 	stw	r3,0(r5)
   19ae8:	11400015 	stw	r5,0(r2)
   19aec:	f800283a 	ret

00019af0 <__multadd>:
   19af0:	defff704 	addi	sp,sp,-36
   19af4:	dc800215 	stw	r18,8(sp)
   19af8:	2c800417 	ldw	r18,16(r5)
   19afc:	dd800615 	stw	r22,24(sp)
   19b00:	dd400515 	stw	r21,20(sp)
   19b04:	dd000415 	stw	r20,16(sp)
   19b08:	dcc00315 	stw	r19,12(sp)
   19b0c:	dc400115 	stw	r17,4(sp)
   19b10:	dc000015 	stw	r16,0(sp)
   19b14:	dfc00815 	stw	ra,32(sp)
   19b18:	ddc00715 	stw	r23,28(sp)
   19b1c:	2827883a 	mov	r19,r5
   19b20:	2029883a 	mov	r20,r4
   19b24:	3023883a 	mov	r17,r6
   19b28:	3821883a 	mov	r16,r7
   19b2c:	2d400504 	addi	r21,r5,20
   19b30:	002d883a 	mov	r22,zero
   19b34:	adc00017 	ldw	r23,0(r21)
   19b38:	880b883a 	mov	r5,r17
   19b3c:	ad400104 	addi	r21,r21,4
   19b40:	b93fffcc 	andi	r4,r23,65535
   19b44:	001411c0 	call	1411c <__mulsi3>
   19b48:	b808d43a 	srli	r4,r23,16
   19b4c:	880b883a 	mov	r5,r17
   19b50:	1421883a 	add	r16,r2,r16
   19b54:	001411c0 	call	1411c <__mulsi3>
   19b58:	800ed43a 	srli	r7,r16,16
   19b5c:	80ffffcc 	andi	r3,r16,65535
   19b60:	b5800044 	addi	r22,r22,1
   19b64:	11c5883a 	add	r2,r2,r7
   19b68:	100e943a 	slli	r7,r2,16
   19b6c:	1020d43a 	srli	r16,r2,16
   19b70:	38c7883a 	add	r3,r7,r3
   19b74:	a8ffff15 	stw	r3,-4(r21)
   19b78:	b4bfee16 	blt	r22,r18,19b34 <_gp+0xffff318c>
   19b7c:	80000926 	beq	r16,zero,19ba4 <__multadd+0xb4>
   19b80:	98800217 	ldw	r2,8(r19)
   19b84:	9080130e 	bge	r18,r2,19bd4 <__multadd+0xe4>
   19b88:	90800144 	addi	r2,r18,5
   19b8c:	1085883a 	add	r2,r2,r2
   19b90:	1085883a 	add	r2,r2,r2
   19b94:	9885883a 	add	r2,r19,r2
   19b98:	14000015 	stw	r16,0(r2)
   19b9c:	94800044 	addi	r18,r18,1
   19ba0:	9c800415 	stw	r18,16(r19)
   19ba4:	9805883a 	mov	r2,r19
   19ba8:	dfc00817 	ldw	ra,32(sp)
   19bac:	ddc00717 	ldw	r23,28(sp)
   19bb0:	dd800617 	ldw	r22,24(sp)
   19bb4:	dd400517 	ldw	r21,20(sp)
   19bb8:	dd000417 	ldw	r20,16(sp)
   19bbc:	dcc00317 	ldw	r19,12(sp)
   19bc0:	dc800217 	ldw	r18,8(sp)
   19bc4:	dc400117 	ldw	r17,4(sp)
   19bc8:	dc000017 	ldw	r16,0(sp)
   19bcc:	dec00904 	addi	sp,sp,36
   19bd0:	f800283a 	ret
   19bd4:	99400117 	ldw	r5,4(r19)
   19bd8:	a009883a 	mov	r4,r20
   19bdc:	29400044 	addi	r5,r5,1
   19be0:	0019a200 	call	19a20 <_Balloc>
   19be4:	99800417 	ldw	r6,16(r19)
   19be8:	99400304 	addi	r5,r19,12
   19bec:	11000304 	addi	r4,r2,12
   19bf0:	31800084 	addi	r6,r6,2
   19bf4:	318d883a 	add	r6,r6,r6
   19bf8:	318d883a 	add	r6,r6,r6
   19bfc:	1023883a 	mov	r17,r2
   19c00:	00198d80 	call	198d8 <memcpy>
   19c04:	98000a26 	beq	r19,zero,19c30 <__multadd+0x140>
   19c08:	98c00117 	ldw	r3,4(r19)
   19c0c:	a0801317 	ldw	r2,76(r20)
   19c10:	18c7883a 	add	r3,r3,r3
   19c14:	18c7883a 	add	r3,r3,r3
   19c18:	10c5883a 	add	r2,r2,r3
   19c1c:	10c00017 	ldw	r3,0(r2)
   19c20:	98c00015 	stw	r3,0(r19)
   19c24:	14c00015 	stw	r19,0(r2)
   19c28:	8827883a 	mov	r19,r17
   19c2c:	003fd606 	br	19b88 <_gp+0xffff31e0>
   19c30:	8827883a 	mov	r19,r17
   19c34:	003fd406 	br	19b88 <_gp+0xffff31e0>

00019c38 <__s2b>:
   19c38:	defff904 	addi	sp,sp,-28
   19c3c:	dc400115 	stw	r17,4(sp)
   19c40:	dc000015 	stw	r16,0(sp)
   19c44:	2023883a 	mov	r17,r4
   19c48:	2821883a 	mov	r16,r5
   19c4c:	39000204 	addi	r4,r7,8
   19c50:	01400244 	movi	r5,9
   19c54:	dcc00315 	stw	r19,12(sp)
   19c58:	dc800215 	stw	r18,8(sp)
   19c5c:	dfc00615 	stw	ra,24(sp)
   19c60:	dd400515 	stw	r21,20(sp)
   19c64:	dd000415 	stw	r20,16(sp)
   19c68:	3825883a 	mov	r18,r7
   19c6c:	3027883a 	mov	r19,r6
   19c70:	00118600 	call	11860 <__divsi3>
   19c74:	00c00044 	movi	r3,1
   19c78:	000b883a 	mov	r5,zero
   19c7c:	1880030e 	bge	r3,r2,19c8c <__s2b+0x54>
   19c80:	18c7883a 	add	r3,r3,r3
   19c84:	29400044 	addi	r5,r5,1
   19c88:	18bffd16 	blt	r3,r2,19c80 <_gp+0xffff32d8>
   19c8c:	8809883a 	mov	r4,r17
   19c90:	0019a200 	call	19a20 <_Balloc>
   19c94:	d8c00717 	ldw	r3,28(sp)
   19c98:	10c00515 	stw	r3,20(r2)
   19c9c:	00c00044 	movi	r3,1
   19ca0:	10c00415 	stw	r3,16(r2)
   19ca4:	00c00244 	movi	r3,9
   19ca8:	1cc0210e 	bge	r3,r19,19d30 <__s2b+0xf8>
   19cac:	80eb883a 	add	r21,r16,r3
   19cb0:	a829883a 	mov	r20,r21
   19cb4:	84e1883a 	add	r16,r16,r19
   19cb8:	a1c00007 	ldb	r7,0(r20)
   19cbc:	01800284 	movi	r6,10
   19cc0:	a5000044 	addi	r20,r20,1
   19cc4:	100b883a 	mov	r5,r2
   19cc8:	39fff404 	addi	r7,r7,-48
   19ccc:	8809883a 	mov	r4,r17
   19cd0:	0019af00 	call	19af0 <__multadd>
   19cd4:	a43ff81e 	bne	r20,r16,19cb8 <_gp+0xffff3310>
   19cd8:	ace1883a 	add	r16,r21,r19
   19cdc:	843ffe04 	addi	r16,r16,-8
   19ce0:	9c800a0e 	bge	r19,r18,19d0c <__s2b+0xd4>
   19ce4:	94e5c83a 	sub	r18,r18,r19
   19ce8:	84a5883a 	add	r18,r16,r18
   19cec:	81c00007 	ldb	r7,0(r16)
   19cf0:	01800284 	movi	r6,10
   19cf4:	84000044 	addi	r16,r16,1
   19cf8:	100b883a 	mov	r5,r2
   19cfc:	39fff404 	addi	r7,r7,-48
   19d00:	8809883a 	mov	r4,r17
   19d04:	0019af00 	call	19af0 <__multadd>
   19d08:	84bff81e 	bne	r16,r18,19cec <_gp+0xffff3344>
   19d0c:	dfc00617 	ldw	ra,24(sp)
   19d10:	dd400517 	ldw	r21,20(sp)
   19d14:	dd000417 	ldw	r20,16(sp)
   19d18:	dcc00317 	ldw	r19,12(sp)
   19d1c:	dc800217 	ldw	r18,8(sp)
   19d20:	dc400117 	ldw	r17,4(sp)
   19d24:	dc000017 	ldw	r16,0(sp)
   19d28:	dec00704 	addi	sp,sp,28
   19d2c:	f800283a 	ret
   19d30:	84000284 	addi	r16,r16,10
   19d34:	1827883a 	mov	r19,r3
   19d38:	003fe906 	br	19ce0 <_gp+0xffff3338>

00019d3c <__hi0bits>:
   19d3c:	20bfffec 	andhi	r2,r4,65535
   19d40:	1000141e 	bne	r2,zero,19d94 <__hi0bits+0x58>
   19d44:	2008943a 	slli	r4,r4,16
   19d48:	00800404 	movi	r2,16
   19d4c:	20ffc02c 	andhi	r3,r4,65280
   19d50:	1800021e 	bne	r3,zero,19d5c <__hi0bits+0x20>
   19d54:	2008923a 	slli	r4,r4,8
   19d58:	10800204 	addi	r2,r2,8
   19d5c:	20fc002c 	andhi	r3,r4,61440
   19d60:	1800021e 	bne	r3,zero,19d6c <__hi0bits+0x30>
   19d64:	2008913a 	slli	r4,r4,4
   19d68:	10800104 	addi	r2,r2,4
   19d6c:	20f0002c 	andhi	r3,r4,49152
   19d70:	1800031e 	bne	r3,zero,19d80 <__hi0bits+0x44>
   19d74:	2109883a 	add	r4,r4,r4
   19d78:	10800084 	addi	r2,r2,2
   19d7c:	2109883a 	add	r4,r4,r4
   19d80:	20000316 	blt	r4,zero,19d90 <__hi0bits+0x54>
   19d84:	2110002c 	andhi	r4,r4,16384
   19d88:	2000041e 	bne	r4,zero,19d9c <__hi0bits+0x60>
   19d8c:	00800804 	movi	r2,32
   19d90:	f800283a 	ret
   19d94:	0005883a 	mov	r2,zero
   19d98:	003fec06 	br	19d4c <_gp+0xffff33a4>
   19d9c:	10800044 	addi	r2,r2,1
   19da0:	f800283a 	ret

00019da4 <__lo0bits>:
   19da4:	20c00017 	ldw	r3,0(r4)
   19da8:	188001cc 	andi	r2,r3,7
   19dac:	10000826 	beq	r2,zero,19dd0 <__lo0bits+0x2c>
   19db0:	1880004c 	andi	r2,r3,1
   19db4:	1000211e 	bne	r2,zero,19e3c <__lo0bits+0x98>
   19db8:	1880008c 	andi	r2,r3,2
   19dbc:	1000211e 	bne	r2,zero,19e44 <__lo0bits+0xa0>
   19dc0:	1806d0ba 	srli	r3,r3,2
   19dc4:	00800084 	movi	r2,2
   19dc8:	20c00015 	stw	r3,0(r4)
   19dcc:	f800283a 	ret
   19dd0:	18bfffcc 	andi	r2,r3,65535
   19dd4:	10001326 	beq	r2,zero,19e24 <__lo0bits+0x80>
   19dd8:	0005883a 	mov	r2,zero
   19ddc:	19403fcc 	andi	r5,r3,255
   19de0:	2800021e 	bne	r5,zero,19dec <__lo0bits+0x48>
   19de4:	1806d23a 	srli	r3,r3,8
   19de8:	10800204 	addi	r2,r2,8
   19dec:	194003cc 	andi	r5,r3,15
   19df0:	2800021e 	bne	r5,zero,19dfc <__lo0bits+0x58>
   19df4:	1806d13a 	srli	r3,r3,4
   19df8:	10800104 	addi	r2,r2,4
   19dfc:	194000cc 	andi	r5,r3,3
   19e00:	2800021e 	bne	r5,zero,19e0c <__lo0bits+0x68>
   19e04:	1806d0ba 	srli	r3,r3,2
   19e08:	10800084 	addi	r2,r2,2
   19e0c:	1940004c 	andi	r5,r3,1
   19e10:	2800081e 	bne	r5,zero,19e34 <__lo0bits+0x90>
   19e14:	1806d07a 	srli	r3,r3,1
   19e18:	1800051e 	bne	r3,zero,19e30 <__lo0bits+0x8c>
   19e1c:	00800804 	movi	r2,32
   19e20:	f800283a 	ret
   19e24:	1806d43a 	srli	r3,r3,16
   19e28:	00800404 	movi	r2,16
   19e2c:	003feb06 	br	19ddc <_gp+0xffff3434>
   19e30:	10800044 	addi	r2,r2,1
   19e34:	20c00015 	stw	r3,0(r4)
   19e38:	f800283a 	ret
   19e3c:	0005883a 	mov	r2,zero
   19e40:	f800283a 	ret
   19e44:	1806d07a 	srli	r3,r3,1
   19e48:	00800044 	movi	r2,1
   19e4c:	20c00015 	stw	r3,0(r4)
   19e50:	f800283a 	ret

00019e54 <__i2b>:
   19e54:	defffd04 	addi	sp,sp,-12
   19e58:	dc000015 	stw	r16,0(sp)
   19e5c:	04000044 	movi	r16,1
   19e60:	dc400115 	stw	r17,4(sp)
   19e64:	2823883a 	mov	r17,r5
   19e68:	800b883a 	mov	r5,r16
   19e6c:	dfc00215 	stw	ra,8(sp)
   19e70:	0019a200 	call	19a20 <_Balloc>
   19e74:	14400515 	stw	r17,20(r2)
   19e78:	14000415 	stw	r16,16(r2)
   19e7c:	dfc00217 	ldw	ra,8(sp)
   19e80:	dc400117 	ldw	r17,4(sp)
   19e84:	dc000017 	ldw	r16,0(sp)
   19e88:	dec00304 	addi	sp,sp,12
   19e8c:	f800283a 	ret

00019e90 <__multiply>:
   19e90:	deffef04 	addi	sp,sp,-68
   19e94:	dc400815 	stw	r17,32(sp)
   19e98:	dc000715 	stw	r16,28(sp)
   19e9c:	34400417 	ldw	r17,16(r6)
   19ea0:	2c000417 	ldw	r16,16(r5)
   19ea4:	dd800d15 	stw	r22,52(sp)
   19ea8:	dc800915 	stw	r18,36(sp)
   19eac:	dfc01015 	stw	ra,64(sp)
   19eb0:	df000f15 	stw	fp,60(sp)
   19eb4:	ddc00e15 	stw	r23,56(sp)
   19eb8:	dd400c15 	stw	r21,48(sp)
   19ebc:	dd000b15 	stw	r20,44(sp)
   19ec0:	dcc00a15 	stw	r19,40(sp)
   19ec4:	2825883a 	mov	r18,r5
   19ec8:	302d883a 	mov	r22,r6
   19ecc:	8440050e 	bge	r16,r17,19ee4 <__multiply+0x54>
   19ed0:	8007883a 	mov	r3,r16
   19ed4:	3025883a 	mov	r18,r6
   19ed8:	8821883a 	mov	r16,r17
   19edc:	282d883a 	mov	r22,r5
   19ee0:	1823883a 	mov	r17,r3
   19ee4:	90800217 	ldw	r2,8(r18)
   19ee8:	8447883a 	add	r3,r16,r17
   19eec:	d8c00215 	stw	r3,8(sp)
   19ef0:	91400117 	ldw	r5,4(r18)
   19ef4:	10c0010e 	bge	r2,r3,19efc <__multiply+0x6c>
   19ef8:	29400044 	addi	r5,r5,1
   19efc:	0019a200 	call	19a20 <_Balloc>
   19f00:	d8c00217 	ldw	r3,8(sp)
   19f04:	d8800615 	stw	r2,24(sp)
   19f08:	18eb883a 	add	r21,r3,r3
   19f0c:	ad6b883a 	add	r21,r21,r21
   19f10:	10c00504 	addi	r3,r2,20
   19f14:	1d6b883a 	add	r21,r3,r21
   19f18:	d8c00115 	stw	r3,4(sp)
   19f1c:	dd400315 	stw	r21,12(sp)
   19f20:	1805883a 	mov	r2,r3
   19f24:	1d40042e 	bgeu	r3,r21,19f38 <__multiply+0xa8>
   19f28:	d8c00317 	ldw	r3,12(sp)
   19f2c:	10000015 	stw	zero,0(r2)
   19f30:	10800104 	addi	r2,r2,4
   19f34:	10fffc36 	bltu	r2,r3,19f28 <_gp+0xffff3580>
   19f38:	8c63883a 	add	r17,r17,r17
   19f3c:	b5800504 	addi	r22,r22,20
   19f40:	8c63883a 	add	r17,r17,r17
   19f44:	94800504 	addi	r18,r18,20
   19f48:	8421883a 	add	r16,r16,r16
   19f4c:	b463883a 	add	r17,r22,r17
   19f50:	8421883a 	add	r16,r16,r16
   19f54:	dd800015 	stw	r22,0(sp)
   19f58:	dc800415 	stw	r18,16(sp)
   19f5c:	dc400515 	stw	r17,20(sp)
   19f60:	9429883a 	add	r20,r18,r16
   19f64:	b4404f2e 	bgeu	r22,r17,1a0a4 <__multiply+0x214>
   19f68:	d8c00017 	ldw	r3,0(sp)
   19f6c:	1c800017 	ldw	r18,0(r3)
   19f70:	947fffcc 	andi	r17,r18,65535
   19f74:	88001e26 	beq	r17,zero,19ff0 <__multiply+0x160>
   19f78:	dd800117 	ldw	r22,4(sp)
   19f7c:	dd400417 	ldw	r21,16(sp)
   19f80:	0027883a 	mov	r19,zero
   19f84:	ac800017 	ldw	r18,0(r21)
   19f88:	b4000017 	ldw	r16,0(r22)
   19f8c:	880b883a 	mov	r5,r17
   19f90:	913fffcc 	andi	r4,r18,65535
   19f94:	001411c0 	call	1411c <__mulsi3>
   19f98:	9008d43a 	srli	r4,r18,16
   19f9c:	84bfffcc 	andi	r18,r16,65535
   19fa0:	1485883a 	add	r2,r2,r18
   19fa4:	14e5883a 	add	r18,r2,r19
   19fa8:	8020d43a 	srli	r16,r16,16
   19fac:	9026d43a 	srli	r19,r18,16
   19fb0:	880b883a 	mov	r5,r17
   19fb4:	001411c0 	call	1411c <__mulsi3>
   19fb8:	1405883a 	add	r2,r2,r16
   19fbc:	14e1883a 	add	r16,r2,r19
   19fc0:	90ffffcc 	andi	r3,r18,65535
   19fc4:	8024943a 	slli	r18,r16,16
   19fc8:	ad400104 	addi	r21,r21,4
   19fcc:	b005883a 	mov	r2,r22
   19fd0:	90c6b03a 	or	r3,r18,r3
   19fd4:	b0c00015 	stw	r3,0(r22)
   19fd8:	8026d43a 	srli	r19,r16,16
   19fdc:	b5800104 	addi	r22,r22,4
   19fe0:	ad3fe836 	bltu	r21,r20,19f84 <_gp+0xffff35dc>
   19fe4:	d8c00017 	ldw	r3,0(sp)
   19fe8:	14c00115 	stw	r19,4(r2)
   19fec:	1c800017 	ldw	r18,0(r3)
   19ff0:	9024d43a 	srli	r18,r18,16
   19ff4:	90002226 	beq	r18,zero,1a080 <__multiply+0x1f0>
   19ff8:	d8c00117 	ldw	r3,4(sp)
   19ffc:	dd800417 	ldw	r22,16(sp)
   1a000:	002f883a 	mov	r23,zero
   1a004:	1f000017 	ldw	fp,0(r3)
   1a008:	1823883a 	mov	r17,r3
   1a00c:	182b883a 	mov	r21,r3
   1a010:	e021883a 	mov	r16,fp
   1a014:	00000106 	br	1a01c <__multiply+0x18c>
   1a018:	982b883a 	mov	r21,r19
   1a01c:	b100000b 	ldhu	r4,0(r22)
   1a020:	8020d43a 	srli	r16,r16,16
   1a024:	900b883a 	mov	r5,r18
   1a028:	001411c0 	call	1411c <__mulsi3>
   1a02c:	1405883a 	add	r2,r2,r16
   1a030:	15ef883a 	add	r23,r2,r23
   1a034:	b804943a 	slli	r2,r23,16
   1a038:	e0ffffcc 	andi	r3,fp,65535
   1a03c:	8c400104 	addi	r17,r17,4
   1a040:	10c6b03a 	or	r3,r2,r3
   1a044:	88ffff15 	stw	r3,-4(r17)
   1a048:	b5800104 	addi	r22,r22,4
   1a04c:	b13fff17 	ldw	r4,-4(r22)
   1a050:	acc00104 	addi	r19,r21,4
   1a054:	900b883a 	mov	r5,r18
   1a058:	2008d43a 	srli	r4,r4,16
   1a05c:	9c000017 	ldw	r16,0(r19)
   1a060:	001411c0 	call	1411c <__mulsi3>
   1a064:	b806d43a 	srli	r3,r23,16
   1a068:	813fffcc 	andi	r4,r16,65535
   1a06c:	1105883a 	add	r2,r2,r4
   1a070:	10f9883a 	add	fp,r2,r3
   1a074:	e02ed43a 	srli	r23,fp,16
   1a078:	b53fe736 	bltu	r22,r20,1a018 <_gp+0xffff3670>
   1a07c:	af000115 	stw	fp,4(r21)
   1a080:	d8c00017 	ldw	r3,0(sp)
   1a084:	d9000517 	ldw	r4,20(sp)
   1a088:	18c00104 	addi	r3,r3,4
   1a08c:	d8c00015 	stw	r3,0(sp)
   1a090:	d8c00117 	ldw	r3,4(sp)
   1a094:	18c00104 	addi	r3,r3,4
   1a098:	d8c00115 	stw	r3,4(sp)
   1a09c:	d8c00017 	ldw	r3,0(sp)
   1a0a0:	193fb136 	bltu	r3,r4,19f68 <_gp+0xffff35c0>
   1a0a4:	d8c00217 	ldw	r3,8(sp)
   1a0a8:	00c00c0e 	bge	zero,r3,1a0dc <__multiply+0x24c>
   1a0ac:	d8c00317 	ldw	r3,12(sp)
   1a0b0:	18bfff17 	ldw	r2,-4(r3)
   1a0b4:	1d7fff04 	addi	r21,r3,-4
   1a0b8:	10000326 	beq	r2,zero,1a0c8 <__multiply+0x238>
   1a0bc:	00000706 	br	1a0dc <__multiply+0x24c>
   1a0c0:	a8800017 	ldw	r2,0(r21)
   1a0c4:	1000051e 	bne	r2,zero,1a0dc <__multiply+0x24c>
   1a0c8:	d8c00217 	ldw	r3,8(sp)
   1a0cc:	ad7fff04 	addi	r21,r21,-4
   1a0d0:	18ffffc4 	addi	r3,r3,-1
   1a0d4:	d8c00215 	stw	r3,8(sp)
   1a0d8:	183ff91e 	bne	r3,zero,1a0c0 <_gp+0xffff3718>
   1a0dc:	d8c00617 	ldw	r3,24(sp)
   1a0e0:	d9000217 	ldw	r4,8(sp)
   1a0e4:	1805883a 	mov	r2,r3
   1a0e8:	19000415 	stw	r4,16(r3)
   1a0ec:	dfc01017 	ldw	ra,64(sp)
   1a0f0:	df000f17 	ldw	fp,60(sp)
   1a0f4:	ddc00e17 	ldw	r23,56(sp)
   1a0f8:	dd800d17 	ldw	r22,52(sp)
   1a0fc:	dd400c17 	ldw	r21,48(sp)
   1a100:	dd000b17 	ldw	r20,44(sp)
   1a104:	dcc00a17 	ldw	r19,40(sp)
   1a108:	dc800917 	ldw	r18,36(sp)
   1a10c:	dc400817 	ldw	r17,32(sp)
   1a110:	dc000717 	ldw	r16,28(sp)
   1a114:	dec01104 	addi	sp,sp,68
   1a118:	f800283a 	ret

0001a11c <__pow5mult>:
   1a11c:	defffa04 	addi	sp,sp,-24
   1a120:	dcc00315 	stw	r19,12(sp)
   1a124:	dc000015 	stw	r16,0(sp)
   1a128:	dfc00515 	stw	ra,20(sp)
   1a12c:	dd000415 	stw	r20,16(sp)
   1a130:	dc800215 	stw	r18,8(sp)
   1a134:	dc400115 	stw	r17,4(sp)
   1a138:	308000cc 	andi	r2,r6,3
   1a13c:	3021883a 	mov	r16,r6
   1a140:	2027883a 	mov	r19,r4
   1a144:	10002f1e 	bne	r2,zero,1a204 <__pow5mult+0xe8>
   1a148:	2825883a 	mov	r18,r5
   1a14c:	8021d0ba 	srai	r16,r16,2
   1a150:	80001a26 	beq	r16,zero,1a1bc <__pow5mult+0xa0>
   1a154:	9c401217 	ldw	r17,72(r19)
   1a158:	8800061e 	bne	r17,zero,1a174 <__pow5mult+0x58>
   1a15c:	00003406 	br	1a230 <__pow5mult+0x114>
   1a160:	8021d07a 	srai	r16,r16,1
   1a164:	80001526 	beq	r16,zero,1a1bc <__pow5mult+0xa0>
   1a168:	88800017 	ldw	r2,0(r17)
   1a16c:	10001c26 	beq	r2,zero,1a1e0 <__pow5mult+0xc4>
   1a170:	1023883a 	mov	r17,r2
   1a174:	8080004c 	andi	r2,r16,1
   1a178:	103ff926 	beq	r2,zero,1a160 <_gp+0xffff37b8>
   1a17c:	880d883a 	mov	r6,r17
   1a180:	900b883a 	mov	r5,r18
   1a184:	9809883a 	mov	r4,r19
   1a188:	0019e900 	call	19e90 <__multiply>
   1a18c:	90001b26 	beq	r18,zero,1a1fc <__pow5mult+0xe0>
   1a190:	91000117 	ldw	r4,4(r18)
   1a194:	98c01317 	ldw	r3,76(r19)
   1a198:	8021d07a 	srai	r16,r16,1
   1a19c:	2109883a 	add	r4,r4,r4
   1a1a0:	2109883a 	add	r4,r4,r4
   1a1a4:	1907883a 	add	r3,r3,r4
   1a1a8:	19000017 	ldw	r4,0(r3)
   1a1ac:	91000015 	stw	r4,0(r18)
   1a1b0:	1c800015 	stw	r18,0(r3)
   1a1b4:	1025883a 	mov	r18,r2
   1a1b8:	803feb1e 	bne	r16,zero,1a168 <_gp+0xffff37c0>
   1a1bc:	9005883a 	mov	r2,r18
   1a1c0:	dfc00517 	ldw	ra,20(sp)
   1a1c4:	dd000417 	ldw	r20,16(sp)
   1a1c8:	dcc00317 	ldw	r19,12(sp)
   1a1cc:	dc800217 	ldw	r18,8(sp)
   1a1d0:	dc400117 	ldw	r17,4(sp)
   1a1d4:	dc000017 	ldw	r16,0(sp)
   1a1d8:	dec00604 	addi	sp,sp,24
   1a1dc:	f800283a 	ret
   1a1e0:	880d883a 	mov	r6,r17
   1a1e4:	880b883a 	mov	r5,r17
   1a1e8:	9809883a 	mov	r4,r19
   1a1ec:	0019e900 	call	19e90 <__multiply>
   1a1f0:	88800015 	stw	r2,0(r17)
   1a1f4:	10000015 	stw	zero,0(r2)
   1a1f8:	003fdd06 	br	1a170 <_gp+0xffff37c8>
   1a1fc:	1025883a 	mov	r18,r2
   1a200:	003fd706 	br	1a160 <_gp+0xffff37b8>
   1a204:	10bfffc4 	addi	r2,r2,-1
   1a208:	1085883a 	add	r2,r2,r2
   1a20c:	00c000b4 	movhi	r3,2
   1a210:	18f7cc04 	addi	r3,r3,-8400
   1a214:	1085883a 	add	r2,r2,r2
   1a218:	1885883a 	add	r2,r3,r2
   1a21c:	11800017 	ldw	r6,0(r2)
   1a220:	000f883a 	mov	r7,zero
   1a224:	0019af00 	call	19af0 <__multadd>
   1a228:	1025883a 	mov	r18,r2
   1a22c:	003fc706 	br	1a14c <_gp+0xffff37a4>
   1a230:	05000044 	movi	r20,1
   1a234:	a00b883a 	mov	r5,r20
   1a238:	9809883a 	mov	r4,r19
   1a23c:	0019a200 	call	19a20 <_Balloc>
   1a240:	1023883a 	mov	r17,r2
   1a244:	00809c44 	movi	r2,625
   1a248:	88800515 	stw	r2,20(r17)
   1a24c:	8d000415 	stw	r20,16(r17)
   1a250:	9c401215 	stw	r17,72(r19)
   1a254:	88000015 	stw	zero,0(r17)
   1a258:	003fc606 	br	1a174 <_gp+0xffff37cc>

0001a25c <__lshift>:
   1a25c:	defff904 	addi	sp,sp,-28
   1a260:	dd400515 	stw	r21,20(sp)
   1a264:	dcc00315 	stw	r19,12(sp)
   1a268:	302bd17a 	srai	r21,r6,5
   1a26c:	2cc00417 	ldw	r19,16(r5)
   1a270:	28800217 	ldw	r2,8(r5)
   1a274:	dd000415 	stw	r20,16(sp)
   1a278:	ace7883a 	add	r19,r21,r19
   1a27c:	dc800215 	stw	r18,8(sp)
   1a280:	dc400115 	stw	r17,4(sp)
   1a284:	dc000015 	stw	r16,0(sp)
   1a288:	dfc00615 	stw	ra,24(sp)
   1a28c:	9c000044 	addi	r16,r19,1
   1a290:	2823883a 	mov	r17,r5
   1a294:	3029883a 	mov	r20,r6
   1a298:	2025883a 	mov	r18,r4
   1a29c:	29400117 	ldw	r5,4(r5)
   1a2a0:	1400030e 	bge	r2,r16,1a2b0 <__lshift+0x54>
   1a2a4:	1085883a 	add	r2,r2,r2
   1a2a8:	29400044 	addi	r5,r5,1
   1a2ac:	143ffd16 	blt	r2,r16,1a2a4 <_gp+0xffff38fc>
   1a2b0:	9009883a 	mov	r4,r18
   1a2b4:	0019a200 	call	19a20 <_Balloc>
   1a2b8:	10c00504 	addi	r3,r2,20
   1a2bc:	0540070e 	bge	zero,r21,1a2dc <__lshift+0x80>
   1a2c0:	ad6b883a 	add	r21,r21,r21
   1a2c4:	ad6b883a 	add	r21,r21,r21
   1a2c8:	1809883a 	mov	r4,r3
   1a2cc:	1d47883a 	add	r3,r3,r21
   1a2d0:	20000015 	stw	zero,0(r4)
   1a2d4:	21000104 	addi	r4,r4,4
   1a2d8:	193ffd1e 	bne	r3,r4,1a2d0 <_gp+0xffff3928>
   1a2dc:	8a000417 	ldw	r8,16(r17)
   1a2e0:	89000504 	addi	r4,r17,20
   1a2e4:	a18007cc 	andi	r6,r20,31
   1a2e8:	4211883a 	add	r8,r8,r8
   1a2ec:	4211883a 	add	r8,r8,r8
   1a2f0:	2211883a 	add	r8,r4,r8
   1a2f4:	30002326 	beq	r6,zero,1a384 <__lshift+0x128>
   1a2f8:	02400804 	movi	r9,32
   1a2fc:	4993c83a 	sub	r9,r9,r6
   1a300:	000b883a 	mov	r5,zero
   1a304:	21c00017 	ldw	r7,0(r4)
   1a308:	1815883a 	mov	r10,r3
   1a30c:	18c00104 	addi	r3,r3,4
   1a310:	398e983a 	sll	r7,r7,r6
   1a314:	21000104 	addi	r4,r4,4
   1a318:	394ab03a 	or	r5,r7,r5
   1a31c:	197fff15 	stw	r5,-4(r3)
   1a320:	217fff17 	ldw	r5,-4(r4)
   1a324:	2a4ad83a 	srl	r5,r5,r9
   1a328:	223ff636 	bltu	r4,r8,1a304 <_gp+0xffff395c>
   1a32c:	51400115 	stw	r5,4(r10)
   1a330:	28001a1e 	bne	r5,zero,1a39c <__lshift+0x140>
   1a334:	843fffc4 	addi	r16,r16,-1
   1a338:	14000415 	stw	r16,16(r2)
   1a33c:	88000826 	beq	r17,zero,1a360 <__lshift+0x104>
   1a340:	89000117 	ldw	r4,4(r17)
   1a344:	90c01317 	ldw	r3,76(r18)
   1a348:	2109883a 	add	r4,r4,r4
   1a34c:	2109883a 	add	r4,r4,r4
   1a350:	1907883a 	add	r3,r3,r4
   1a354:	19000017 	ldw	r4,0(r3)
   1a358:	89000015 	stw	r4,0(r17)
   1a35c:	1c400015 	stw	r17,0(r3)
   1a360:	dfc00617 	ldw	ra,24(sp)
   1a364:	dd400517 	ldw	r21,20(sp)
   1a368:	dd000417 	ldw	r20,16(sp)
   1a36c:	dcc00317 	ldw	r19,12(sp)
   1a370:	dc800217 	ldw	r18,8(sp)
   1a374:	dc400117 	ldw	r17,4(sp)
   1a378:	dc000017 	ldw	r16,0(sp)
   1a37c:	dec00704 	addi	sp,sp,28
   1a380:	f800283a 	ret
   1a384:	21400017 	ldw	r5,0(r4)
   1a388:	18c00104 	addi	r3,r3,4
   1a38c:	21000104 	addi	r4,r4,4
   1a390:	197fff15 	stw	r5,-4(r3)
   1a394:	223ffb36 	bltu	r4,r8,1a384 <_gp+0xffff39dc>
   1a398:	003fe606 	br	1a334 <_gp+0xffff398c>
   1a39c:	9c000084 	addi	r16,r19,2
   1a3a0:	003fe406 	br	1a334 <_gp+0xffff398c>

0001a3a4 <__mcmp>:
   1a3a4:	20800417 	ldw	r2,16(r4)
   1a3a8:	28c00417 	ldw	r3,16(r5)
   1a3ac:	10c5c83a 	sub	r2,r2,r3
   1a3b0:	1000111e 	bne	r2,zero,1a3f8 <__mcmp+0x54>
   1a3b4:	18c7883a 	add	r3,r3,r3
   1a3b8:	18c7883a 	add	r3,r3,r3
   1a3bc:	21000504 	addi	r4,r4,20
   1a3c0:	29400504 	addi	r5,r5,20
   1a3c4:	20c5883a 	add	r2,r4,r3
   1a3c8:	28cb883a 	add	r5,r5,r3
   1a3cc:	00000106 	br	1a3d4 <__mcmp+0x30>
   1a3d0:	20800a2e 	bgeu	r4,r2,1a3fc <__mcmp+0x58>
   1a3d4:	10bfff04 	addi	r2,r2,-4
   1a3d8:	297fff04 	addi	r5,r5,-4
   1a3dc:	11800017 	ldw	r6,0(r2)
   1a3e0:	28c00017 	ldw	r3,0(r5)
   1a3e4:	30fffa26 	beq	r6,r3,1a3d0 <_gp+0xffff3a28>
   1a3e8:	30c00236 	bltu	r6,r3,1a3f4 <__mcmp+0x50>
   1a3ec:	00800044 	movi	r2,1
   1a3f0:	f800283a 	ret
   1a3f4:	00bfffc4 	movi	r2,-1
   1a3f8:	f800283a 	ret
   1a3fc:	0005883a 	mov	r2,zero
   1a400:	f800283a 	ret

0001a404 <__mdiff>:
   1a404:	28c00417 	ldw	r3,16(r5)
   1a408:	30800417 	ldw	r2,16(r6)
   1a40c:	defffa04 	addi	sp,sp,-24
   1a410:	dcc00315 	stw	r19,12(sp)
   1a414:	dc800215 	stw	r18,8(sp)
   1a418:	dfc00515 	stw	ra,20(sp)
   1a41c:	dd000415 	stw	r20,16(sp)
   1a420:	dc400115 	stw	r17,4(sp)
   1a424:	dc000015 	stw	r16,0(sp)
   1a428:	1887c83a 	sub	r3,r3,r2
   1a42c:	2825883a 	mov	r18,r5
   1a430:	3027883a 	mov	r19,r6
   1a434:	1800141e 	bne	r3,zero,1a488 <__mdiff+0x84>
   1a438:	1085883a 	add	r2,r2,r2
   1a43c:	1085883a 	add	r2,r2,r2
   1a440:	2a000504 	addi	r8,r5,20
   1a444:	34000504 	addi	r16,r6,20
   1a448:	4087883a 	add	r3,r8,r2
   1a44c:	8085883a 	add	r2,r16,r2
   1a450:	00000106 	br	1a458 <__mdiff+0x54>
   1a454:	40c0592e 	bgeu	r8,r3,1a5bc <__mdiff+0x1b8>
   1a458:	18ffff04 	addi	r3,r3,-4
   1a45c:	10bfff04 	addi	r2,r2,-4
   1a460:	19c00017 	ldw	r7,0(r3)
   1a464:	11400017 	ldw	r5,0(r2)
   1a468:	397ffa26 	beq	r7,r5,1a454 <_gp+0xffff3aac>
   1a46c:	3940592e 	bgeu	r7,r5,1a5d4 <__mdiff+0x1d0>
   1a470:	9005883a 	mov	r2,r18
   1a474:	4023883a 	mov	r17,r8
   1a478:	9825883a 	mov	r18,r19
   1a47c:	05000044 	movi	r20,1
   1a480:	1027883a 	mov	r19,r2
   1a484:	00000406 	br	1a498 <__mdiff+0x94>
   1a488:	18005616 	blt	r3,zero,1a5e4 <__mdiff+0x1e0>
   1a48c:	34400504 	addi	r17,r6,20
   1a490:	2c000504 	addi	r16,r5,20
   1a494:	0029883a 	mov	r20,zero
   1a498:	91400117 	ldw	r5,4(r18)
   1a49c:	0019a200 	call	19a20 <_Balloc>
   1a4a0:	92400417 	ldw	r9,16(r18)
   1a4a4:	9b000417 	ldw	r12,16(r19)
   1a4a8:	12c00504 	addi	r11,r2,20
   1a4ac:	4a51883a 	add	r8,r9,r9
   1a4b0:	6319883a 	add	r12,r12,r12
   1a4b4:	4211883a 	add	r8,r8,r8
   1a4b8:	6319883a 	add	r12,r12,r12
   1a4bc:	15000315 	stw	r20,12(r2)
   1a4c0:	8211883a 	add	r8,r16,r8
   1a4c4:	8b19883a 	add	r12,r17,r12
   1a4c8:	0007883a 	mov	r3,zero
   1a4cc:	81400017 	ldw	r5,0(r16)
   1a4d0:	89c00017 	ldw	r7,0(r17)
   1a4d4:	59800104 	addi	r6,r11,4
   1a4d8:	293fffcc 	andi	r4,r5,65535
   1a4dc:	20c7883a 	add	r3,r4,r3
   1a4e0:	393fffcc 	andi	r4,r7,65535
   1a4e4:	1909c83a 	sub	r4,r3,r4
   1a4e8:	280ad43a 	srli	r5,r5,16
   1a4ec:	380ed43a 	srli	r7,r7,16
   1a4f0:	2007d43a 	srai	r3,r4,16
   1a4f4:	213fffcc 	andi	r4,r4,65535
   1a4f8:	29cbc83a 	sub	r5,r5,r7
   1a4fc:	28c7883a 	add	r3,r5,r3
   1a500:	180a943a 	slli	r5,r3,16
   1a504:	8c400104 	addi	r17,r17,4
   1a508:	84000104 	addi	r16,r16,4
   1a50c:	2908b03a 	or	r4,r5,r4
   1a510:	59000015 	stw	r4,0(r11)
   1a514:	1807d43a 	srai	r3,r3,16
   1a518:	3015883a 	mov	r10,r6
   1a51c:	3017883a 	mov	r11,r6
   1a520:	8b3fea36 	bltu	r17,r12,1a4cc <_gp+0xffff3b24>
   1a524:	8200162e 	bgeu	r16,r8,1a580 <__mdiff+0x17c>
   1a528:	8017883a 	mov	r11,r16
   1a52c:	59400017 	ldw	r5,0(r11)
   1a530:	31800104 	addi	r6,r6,4
   1a534:	5ac00104 	addi	r11,r11,4
   1a538:	293fffcc 	andi	r4,r5,65535
   1a53c:	20c7883a 	add	r3,r4,r3
   1a540:	280ed43a 	srli	r7,r5,16
   1a544:	180bd43a 	srai	r5,r3,16
   1a548:	193fffcc 	andi	r4,r3,65535
   1a54c:	3947883a 	add	r3,r7,r5
   1a550:	180a943a 	slli	r5,r3,16
   1a554:	1807d43a 	srai	r3,r3,16
   1a558:	2908b03a 	or	r4,r5,r4
   1a55c:	313fff15 	stw	r4,-4(r6)
   1a560:	5a3ff236 	bltu	r11,r8,1a52c <_gp+0xffff3b84>
   1a564:	0406303a 	nor	r3,zero,r16
   1a568:	1a07883a 	add	r3,r3,r8
   1a56c:	1806d0ba 	srli	r3,r3,2
   1a570:	18c00044 	addi	r3,r3,1
   1a574:	18c7883a 	add	r3,r3,r3
   1a578:	18c7883a 	add	r3,r3,r3
   1a57c:	50d5883a 	add	r10,r10,r3
   1a580:	50ffff04 	addi	r3,r10,-4
   1a584:	2000041e 	bne	r4,zero,1a598 <__mdiff+0x194>
   1a588:	18ffff04 	addi	r3,r3,-4
   1a58c:	19000017 	ldw	r4,0(r3)
   1a590:	4a7fffc4 	addi	r9,r9,-1
   1a594:	203ffc26 	beq	r4,zero,1a588 <_gp+0xffff3be0>
   1a598:	12400415 	stw	r9,16(r2)
   1a59c:	dfc00517 	ldw	ra,20(sp)
   1a5a0:	dd000417 	ldw	r20,16(sp)
   1a5a4:	dcc00317 	ldw	r19,12(sp)
   1a5a8:	dc800217 	ldw	r18,8(sp)
   1a5ac:	dc400117 	ldw	r17,4(sp)
   1a5b0:	dc000017 	ldw	r16,0(sp)
   1a5b4:	dec00604 	addi	sp,sp,24
   1a5b8:	f800283a 	ret
   1a5bc:	000b883a 	mov	r5,zero
   1a5c0:	0019a200 	call	19a20 <_Balloc>
   1a5c4:	00c00044 	movi	r3,1
   1a5c8:	10c00415 	stw	r3,16(r2)
   1a5cc:	10000515 	stw	zero,20(r2)
   1a5d0:	003ff206 	br	1a59c <_gp+0xffff3bf4>
   1a5d4:	8023883a 	mov	r17,r16
   1a5d8:	0029883a 	mov	r20,zero
   1a5dc:	4021883a 	mov	r16,r8
   1a5e0:	003fad06 	br	1a498 <_gp+0xffff3af0>
   1a5e4:	9005883a 	mov	r2,r18
   1a5e8:	94400504 	addi	r17,r18,20
   1a5ec:	9c000504 	addi	r16,r19,20
   1a5f0:	9825883a 	mov	r18,r19
   1a5f4:	05000044 	movi	r20,1
   1a5f8:	1027883a 	mov	r19,r2
   1a5fc:	003fa606 	br	1a498 <_gp+0xffff3af0>

0001a600 <__ulp>:
   1a600:	295ffc2c 	andhi	r5,r5,32752
   1a604:	00bf3034 	movhi	r2,64704
   1a608:	2887883a 	add	r3,r5,r2
   1a60c:	00c0020e 	bge	zero,r3,1a618 <__ulp+0x18>
   1a610:	0005883a 	mov	r2,zero
   1a614:	f800283a 	ret
   1a618:	00c7c83a 	sub	r3,zero,r3
   1a61c:	1807d53a 	srai	r3,r3,20
   1a620:	008004c4 	movi	r2,19
   1a624:	10c00b0e 	bge	r2,r3,1a654 <__ulp+0x54>
   1a628:	18bffb04 	addi	r2,r3,-20
   1a62c:	01000784 	movi	r4,30
   1a630:	0007883a 	mov	r3,zero
   1a634:	20800516 	blt	r4,r2,1a64c <__ulp+0x4c>
   1a638:	010007c4 	movi	r4,31
   1a63c:	2089c83a 	sub	r4,r4,r2
   1a640:	00800044 	movi	r2,1
   1a644:	1104983a 	sll	r2,r2,r4
   1a648:	f800283a 	ret
   1a64c:	00800044 	movi	r2,1
   1a650:	f800283a 	ret
   1a654:	01400234 	movhi	r5,8
   1a658:	28c7d83a 	sra	r3,r5,r3
   1a65c:	0005883a 	mov	r2,zero
   1a660:	f800283a 	ret

0001a664 <__b2d>:
   1a664:	defffa04 	addi	sp,sp,-24
   1a668:	dc000015 	stw	r16,0(sp)
   1a66c:	24000417 	ldw	r16,16(r4)
   1a670:	dc400115 	stw	r17,4(sp)
   1a674:	24400504 	addi	r17,r4,20
   1a678:	8421883a 	add	r16,r16,r16
   1a67c:	8421883a 	add	r16,r16,r16
   1a680:	8c21883a 	add	r16,r17,r16
   1a684:	dc800215 	stw	r18,8(sp)
   1a688:	84bfff17 	ldw	r18,-4(r16)
   1a68c:	dd000415 	stw	r20,16(sp)
   1a690:	dcc00315 	stw	r19,12(sp)
   1a694:	9009883a 	mov	r4,r18
   1a698:	2829883a 	mov	r20,r5
   1a69c:	dfc00515 	stw	ra,20(sp)
   1a6a0:	0019d3c0 	call	19d3c <__hi0bits>
   1a6a4:	00c00804 	movi	r3,32
   1a6a8:	1889c83a 	sub	r4,r3,r2
   1a6ac:	a1000015 	stw	r4,0(r20)
   1a6b0:	01000284 	movi	r4,10
   1a6b4:	84ffff04 	addi	r19,r16,-4
   1a6b8:	20801216 	blt	r4,r2,1a704 <__b2d+0xa0>
   1a6bc:	018002c4 	movi	r6,11
   1a6c0:	308dc83a 	sub	r6,r6,r2
   1a6c4:	9186d83a 	srl	r3,r18,r6
   1a6c8:	18cffc34 	orhi	r3,r3,16368
   1a6cc:	8cc0212e 	bgeu	r17,r19,1a754 <__b2d+0xf0>
   1a6d0:	813ffe17 	ldw	r4,-8(r16)
   1a6d4:	218cd83a 	srl	r6,r4,r6
   1a6d8:	10800544 	addi	r2,r2,21
   1a6dc:	9084983a 	sll	r2,r18,r2
   1a6e0:	1184b03a 	or	r2,r2,r6
   1a6e4:	dfc00517 	ldw	ra,20(sp)
   1a6e8:	dd000417 	ldw	r20,16(sp)
   1a6ec:	dcc00317 	ldw	r19,12(sp)
   1a6f0:	dc800217 	ldw	r18,8(sp)
   1a6f4:	dc400117 	ldw	r17,4(sp)
   1a6f8:	dc000017 	ldw	r16,0(sp)
   1a6fc:	dec00604 	addi	sp,sp,24
   1a700:	f800283a 	ret
   1a704:	8cc00f2e 	bgeu	r17,r19,1a744 <__b2d+0xe0>
   1a708:	117ffd44 	addi	r5,r2,-11
   1a70c:	80bffe17 	ldw	r2,-8(r16)
   1a710:	28000e26 	beq	r5,zero,1a74c <__b2d+0xe8>
   1a714:	1949c83a 	sub	r4,r3,r5
   1a718:	9164983a 	sll	r18,r18,r5
   1a71c:	1106d83a 	srl	r3,r2,r4
   1a720:	81bffe04 	addi	r6,r16,-8
   1a724:	948ffc34 	orhi	r18,r18,16368
   1a728:	90c6b03a 	or	r3,r18,r3
   1a72c:	89800e2e 	bgeu	r17,r6,1a768 <__b2d+0x104>
   1a730:	81bffd17 	ldw	r6,-12(r16)
   1a734:	1144983a 	sll	r2,r2,r5
   1a738:	310ad83a 	srl	r5,r6,r4
   1a73c:	2884b03a 	or	r2,r5,r2
   1a740:	003fe806 	br	1a6e4 <_gp+0xffff3d3c>
   1a744:	10bffd44 	addi	r2,r2,-11
   1a748:	1000041e 	bne	r2,zero,1a75c <__b2d+0xf8>
   1a74c:	90cffc34 	orhi	r3,r18,16368
   1a750:	003fe406 	br	1a6e4 <_gp+0xffff3d3c>
   1a754:	000d883a 	mov	r6,zero
   1a758:	003fdf06 	br	1a6d8 <_gp+0xffff3d30>
   1a75c:	90a4983a 	sll	r18,r18,r2
   1a760:	0005883a 	mov	r2,zero
   1a764:	003ff906 	br	1a74c <_gp+0xffff3da4>
   1a768:	1144983a 	sll	r2,r2,r5
   1a76c:	003fdd06 	br	1a6e4 <_gp+0xffff3d3c>

0001a770 <__d2b>:
   1a770:	defff804 	addi	sp,sp,-32
   1a774:	dc000215 	stw	r16,8(sp)
   1a778:	3021883a 	mov	r16,r6
   1a77c:	dc400315 	stw	r17,12(sp)
   1a780:	8022907a 	slli	r17,r16,1
   1a784:	dd000615 	stw	r20,24(sp)
   1a788:	2829883a 	mov	r20,r5
   1a78c:	01400044 	movi	r5,1
   1a790:	dcc00515 	stw	r19,20(sp)
   1a794:	dc800415 	stw	r18,16(sp)
   1a798:	dfc00715 	stw	ra,28(sp)
   1a79c:	3825883a 	mov	r18,r7
   1a7a0:	8822d57a 	srli	r17,r17,21
   1a7a4:	0019a200 	call	19a20 <_Balloc>
   1a7a8:	1027883a 	mov	r19,r2
   1a7ac:	00800434 	movhi	r2,16
   1a7b0:	10bfffc4 	addi	r2,r2,-1
   1a7b4:	808c703a 	and	r6,r16,r2
   1a7b8:	88000126 	beq	r17,zero,1a7c0 <__d2b+0x50>
   1a7bc:	31800434 	orhi	r6,r6,16
   1a7c0:	d9800015 	stw	r6,0(sp)
   1a7c4:	a0002426 	beq	r20,zero,1a858 <__d2b+0xe8>
   1a7c8:	d9000104 	addi	r4,sp,4
   1a7cc:	dd000115 	stw	r20,4(sp)
   1a7d0:	0019da40 	call	19da4 <__lo0bits>
   1a7d4:	d8c00017 	ldw	r3,0(sp)
   1a7d8:	10002f1e 	bne	r2,zero,1a898 <__d2b+0x128>
   1a7dc:	d9000117 	ldw	r4,4(sp)
   1a7e0:	99000515 	stw	r4,20(r19)
   1a7e4:	1821003a 	cmpeq	r16,r3,zero
   1a7e8:	01000084 	movi	r4,2
   1a7ec:	2421c83a 	sub	r16,r4,r16
   1a7f0:	98c00615 	stw	r3,24(r19)
   1a7f4:	9c000415 	stw	r16,16(r19)
   1a7f8:	88001f1e 	bne	r17,zero,1a878 <__d2b+0x108>
   1a7fc:	10bef384 	addi	r2,r2,-1074
   1a800:	90800015 	stw	r2,0(r18)
   1a804:	00900034 	movhi	r2,16384
   1a808:	10bfffc4 	addi	r2,r2,-1
   1a80c:	8085883a 	add	r2,r16,r2
   1a810:	1085883a 	add	r2,r2,r2
   1a814:	1085883a 	add	r2,r2,r2
   1a818:	9885883a 	add	r2,r19,r2
   1a81c:	11000517 	ldw	r4,20(r2)
   1a820:	8020917a 	slli	r16,r16,5
   1a824:	0019d3c0 	call	19d3c <__hi0bits>
   1a828:	d8c00817 	ldw	r3,32(sp)
   1a82c:	8085c83a 	sub	r2,r16,r2
   1a830:	18800015 	stw	r2,0(r3)
   1a834:	9805883a 	mov	r2,r19
   1a838:	dfc00717 	ldw	ra,28(sp)
   1a83c:	dd000617 	ldw	r20,24(sp)
   1a840:	dcc00517 	ldw	r19,20(sp)
   1a844:	dc800417 	ldw	r18,16(sp)
   1a848:	dc400317 	ldw	r17,12(sp)
   1a84c:	dc000217 	ldw	r16,8(sp)
   1a850:	dec00804 	addi	sp,sp,32
   1a854:	f800283a 	ret
   1a858:	d809883a 	mov	r4,sp
   1a85c:	0019da40 	call	19da4 <__lo0bits>
   1a860:	d8c00017 	ldw	r3,0(sp)
   1a864:	04000044 	movi	r16,1
   1a868:	9c000415 	stw	r16,16(r19)
   1a86c:	98c00515 	stw	r3,20(r19)
   1a870:	10800804 	addi	r2,r2,32
   1a874:	883fe126 	beq	r17,zero,1a7fc <_gp+0xffff3e54>
   1a878:	00c00d44 	movi	r3,53
   1a87c:	8c7ef344 	addi	r17,r17,-1075
   1a880:	88a3883a 	add	r17,r17,r2
   1a884:	1885c83a 	sub	r2,r3,r2
   1a888:	d8c00817 	ldw	r3,32(sp)
   1a88c:	94400015 	stw	r17,0(r18)
   1a890:	18800015 	stw	r2,0(r3)
   1a894:	003fe706 	br	1a834 <_gp+0xffff3e8c>
   1a898:	01000804 	movi	r4,32
   1a89c:	2089c83a 	sub	r4,r4,r2
   1a8a0:	1908983a 	sll	r4,r3,r4
   1a8a4:	d9400117 	ldw	r5,4(sp)
   1a8a8:	1886d83a 	srl	r3,r3,r2
   1a8ac:	2148b03a 	or	r4,r4,r5
   1a8b0:	99000515 	stw	r4,20(r19)
   1a8b4:	d8c00015 	stw	r3,0(sp)
   1a8b8:	003fca06 	br	1a7e4 <_gp+0xffff3e3c>

0001a8bc <__ratio>:
   1a8bc:	defff904 	addi	sp,sp,-28
   1a8c0:	dc400315 	stw	r17,12(sp)
   1a8c4:	2823883a 	mov	r17,r5
   1a8c8:	d9400104 	addi	r5,sp,4
   1a8cc:	dfc00615 	stw	ra,24(sp)
   1a8d0:	dcc00515 	stw	r19,20(sp)
   1a8d4:	dc800415 	stw	r18,16(sp)
   1a8d8:	2027883a 	mov	r19,r4
   1a8dc:	dc000215 	stw	r16,8(sp)
   1a8e0:	001a6640 	call	1a664 <__b2d>
   1a8e4:	d80b883a 	mov	r5,sp
   1a8e8:	8809883a 	mov	r4,r17
   1a8ec:	1025883a 	mov	r18,r2
   1a8f0:	1821883a 	mov	r16,r3
   1a8f4:	001a6640 	call	1a664 <__b2d>
   1a8f8:	8a000417 	ldw	r8,16(r17)
   1a8fc:	99000417 	ldw	r4,16(r19)
   1a900:	d9400117 	ldw	r5,4(sp)
   1a904:	2209c83a 	sub	r4,r4,r8
   1a908:	2010917a 	slli	r8,r4,5
   1a90c:	d9000017 	ldw	r4,0(sp)
   1a910:	2909c83a 	sub	r4,r5,r4
   1a914:	4109883a 	add	r4,r8,r4
   1a918:	01000e0e 	bge	zero,r4,1a954 <__ratio+0x98>
   1a91c:	2008953a 	slli	r4,r4,20
   1a920:	2421883a 	add	r16,r4,r16
   1a924:	100d883a 	mov	r6,r2
   1a928:	180f883a 	mov	r7,r3
   1a92c:	9009883a 	mov	r4,r18
   1a930:	800b883a 	mov	r5,r16
   1a934:	00122c00 	call	122c0 <__divdf3>
   1a938:	dfc00617 	ldw	ra,24(sp)
   1a93c:	dcc00517 	ldw	r19,20(sp)
   1a940:	dc800417 	ldw	r18,16(sp)
   1a944:	dc400317 	ldw	r17,12(sp)
   1a948:	dc000217 	ldw	r16,8(sp)
   1a94c:	dec00704 	addi	sp,sp,28
   1a950:	f800283a 	ret
   1a954:	2008953a 	slli	r4,r4,20
   1a958:	1907c83a 	sub	r3,r3,r4
   1a95c:	003ff106 	br	1a924 <_gp+0xffff3f7c>

0001a960 <_mprec_log10>:
   1a960:	defffe04 	addi	sp,sp,-8
   1a964:	dc000015 	stw	r16,0(sp)
   1a968:	dfc00115 	stw	ra,4(sp)
   1a96c:	008005c4 	movi	r2,23
   1a970:	2021883a 	mov	r16,r4
   1a974:	11000d0e 	bge	r2,r4,1a9ac <_mprec_log10+0x4c>
   1a978:	0005883a 	mov	r2,zero
   1a97c:	00cffc34 	movhi	r3,16368
   1a980:	843fffc4 	addi	r16,r16,-1
   1a984:	000d883a 	mov	r6,zero
   1a988:	01d00934 	movhi	r7,16420
   1a98c:	1009883a 	mov	r4,r2
   1a990:	180b883a 	mov	r5,r3
   1a994:	0012df40 	call	12df4 <__muldf3>
   1a998:	803ff91e 	bne	r16,zero,1a980 <_gp+0xffff3fd8>
   1a99c:	dfc00117 	ldw	ra,4(sp)
   1a9a0:	dc000017 	ldw	r16,0(sp)
   1a9a4:	dec00204 	addi	sp,sp,8
   1a9a8:	f800283a 	ret
   1a9ac:	202090fa 	slli	r16,r4,3
   1a9b0:	008000b4 	movhi	r2,2
   1a9b4:	10b7e304 	addi	r2,r2,-8308
   1a9b8:	1421883a 	add	r16,r2,r16
   1a9bc:	80800017 	ldw	r2,0(r16)
   1a9c0:	80c00117 	ldw	r3,4(r16)
   1a9c4:	dfc00117 	ldw	ra,4(sp)
   1a9c8:	dc000017 	ldw	r16,0(sp)
   1a9cc:	dec00204 	addi	sp,sp,8
   1a9d0:	f800283a 	ret

0001a9d4 <__copybits>:
   1a9d4:	297fffc4 	addi	r5,r5,-1
   1a9d8:	280fd17a 	srai	r7,r5,5
   1a9dc:	30c00417 	ldw	r3,16(r6)
   1a9e0:	30800504 	addi	r2,r6,20
   1a9e4:	39c00044 	addi	r7,r7,1
   1a9e8:	18c7883a 	add	r3,r3,r3
   1a9ec:	39cf883a 	add	r7,r7,r7
   1a9f0:	18c7883a 	add	r3,r3,r3
   1a9f4:	39cf883a 	add	r7,r7,r7
   1a9f8:	10c7883a 	add	r3,r2,r3
   1a9fc:	21cf883a 	add	r7,r4,r7
   1aa00:	10c00d2e 	bgeu	r2,r3,1aa38 <__copybits+0x64>
   1aa04:	200b883a 	mov	r5,r4
   1aa08:	12000017 	ldw	r8,0(r2)
   1aa0c:	29400104 	addi	r5,r5,4
   1aa10:	10800104 	addi	r2,r2,4
   1aa14:	2a3fff15 	stw	r8,-4(r5)
   1aa18:	10fffb36 	bltu	r2,r3,1aa08 <_gp+0xffff4060>
   1aa1c:	1985c83a 	sub	r2,r3,r6
   1aa20:	10bffac4 	addi	r2,r2,-21
   1aa24:	1004d0ba 	srli	r2,r2,2
   1aa28:	10800044 	addi	r2,r2,1
   1aa2c:	1085883a 	add	r2,r2,r2
   1aa30:	1085883a 	add	r2,r2,r2
   1aa34:	2089883a 	add	r4,r4,r2
   1aa38:	21c0032e 	bgeu	r4,r7,1aa48 <__copybits+0x74>
   1aa3c:	20000015 	stw	zero,0(r4)
   1aa40:	21000104 	addi	r4,r4,4
   1aa44:	21fffd36 	bltu	r4,r7,1aa3c <_gp+0xffff4094>
   1aa48:	f800283a 	ret

0001aa4c <__any_on>:
   1aa4c:	20c00417 	ldw	r3,16(r4)
   1aa50:	2805d17a 	srai	r2,r5,5
   1aa54:	21000504 	addi	r4,r4,20
   1aa58:	18800d0e 	bge	r3,r2,1aa90 <__any_on+0x44>
   1aa5c:	18c7883a 	add	r3,r3,r3
   1aa60:	18c7883a 	add	r3,r3,r3
   1aa64:	20c7883a 	add	r3,r4,r3
   1aa68:	20c0192e 	bgeu	r4,r3,1aad0 <__any_on+0x84>
   1aa6c:	18bfff17 	ldw	r2,-4(r3)
   1aa70:	18ffff04 	addi	r3,r3,-4
   1aa74:	1000041e 	bne	r2,zero,1aa88 <__any_on+0x3c>
   1aa78:	20c0142e 	bgeu	r4,r3,1aacc <__any_on+0x80>
   1aa7c:	18ffff04 	addi	r3,r3,-4
   1aa80:	19400017 	ldw	r5,0(r3)
   1aa84:	283ffc26 	beq	r5,zero,1aa78 <_gp+0xffff40d0>
   1aa88:	00800044 	movi	r2,1
   1aa8c:	f800283a 	ret
   1aa90:	10c00a0e 	bge	r2,r3,1aabc <__any_on+0x70>
   1aa94:	1085883a 	add	r2,r2,r2
   1aa98:	1085883a 	add	r2,r2,r2
   1aa9c:	294007cc 	andi	r5,r5,31
   1aaa0:	2087883a 	add	r3,r4,r2
   1aaa4:	283ff026 	beq	r5,zero,1aa68 <_gp+0xffff40c0>
   1aaa8:	19800017 	ldw	r6,0(r3)
   1aaac:	3144d83a 	srl	r2,r6,r5
   1aab0:	114a983a 	sll	r5,r2,r5
   1aab4:	317ff41e 	bne	r6,r5,1aa88 <_gp+0xffff40e0>
   1aab8:	003feb06 	br	1aa68 <_gp+0xffff40c0>
   1aabc:	1085883a 	add	r2,r2,r2
   1aac0:	1085883a 	add	r2,r2,r2
   1aac4:	2087883a 	add	r3,r4,r2
   1aac8:	003fe706 	br	1aa68 <_gp+0xffff40c0>
   1aacc:	f800283a 	ret
   1aad0:	0005883a 	mov	r2,zero
   1aad4:	f800283a 	ret

0001aad8 <strcmp>:
   1aad8:	2144b03a 	or	r2,r4,r5
   1aadc:	108000cc 	andi	r2,r2,3
   1aae0:	1000171e 	bne	r2,zero,1ab40 <strcmp+0x68>
   1aae4:	20800017 	ldw	r2,0(r4)
   1aae8:	28c00017 	ldw	r3,0(r5)
   1aaec:	10c0141e 	bne	r2,r3,1ab40 <strcmp+0x68>
   1aaf0:	027fbff4 	movhi	r9,65279
   1aaf4:	4a7fbfc4 	addi	r9,r9,-257
   1aaf8:	0086303a 	nor	r3,zero,r2
   1aafc:	02202074 	movhi	r8,32897
   1ab00:	1245883a 	add	r2,r2,r9
   1ab04:	42202004 	addi	r8,r8,-32640
   1ab08:	10c4703a 	and	r2,r2,r3
   1ab0c:	1204703a 	and	r2,r2,r8
   1ab10:	10000226 	beq	r2,zero,1ab1c <strcmp+0x44>
   1ab14:	00002306 	br	1aba4 <strcmp+0xcc>
   1ab18:	1000221e 	bne	r2,zero,1aba4 <strcmp+0xcc>
   1ab1c:	21000104 	addi	r4,r4,4
   1ab20:	20c00017 	ldw	r3,0(r4)
   1ab24:	29400104 	addi	r5,r5,4
   1ab28:	29800017 	ldw	r6,0(r5)
   1ab2c:	1a4f883a 	add	r7,r3,r9
   1ab30:	00c4303a 	nor	r2,zero,r3
   1ab34:	3884703a 	and	r2,r7,r2
   1ab38:	1204703a 	and	r2,r2,r8
   1ab3c:	19bff626 	beq	r3,r6,1ab18 <_gp+0xffff4170>
   1ab40:	20800003 	ldbu	r2,0(r4)
   1ab44:	10c03fcc 	andi	r3,r2,255
   1ab48:	18c0201c 	xori	r3,r3,128
   1ab4c:	18ffe004 	addi	r3,r3,-128
   1ab50:	18000c26 	beq	r3,zero,1ab84 <strcmp+0xac>
   1ab54:	29800007 	ldb	r6,0(r5)
   1ab58:	19800326 	beq	r3,r6,1ab68 <strcmp+0x90>
   1ab5c:	00001306 	br	1abac <strcmp+0xd4>
   1ab60:	29800007 	ldb	r6,0(r5)
   1ab64:	11800b1e 	bne	r2,r6,1ab94 <strcmp+0xbc>
   1ab68:	21000044 	addi	r4,r4,1
   1ab6c:	20c00003 	ldbu	r3,0(r4)
   1ab70:	29400044 	addi	r5,r5,1
   1ab74:	18803fcc 	andi	r2,r3,255
   1ab78:	1080201c 	xori	r2,r2,128
   1ab7c:	10bfe004 	addi	r2,r2,-128
   1ab80:	103ff71e 	bne	r2,zero,1ab60 <_gp+0xffff41b8>
   1ab84:	0007883a 	mov	r3,zero
   1ab88:	28800003 	ldbu	r2,0(r5)
   1ab8c:	1885c83a 	sub	r2,r3,r2
   1ab90:	f800283a 	ret
   1ab94:	28800003 	ldbu	r2,0(r5)
   1ab98:	18c03fcc 	andi	r3,r3,255
   1ab9c:	1885c83a 	sub	r2,r3,r2
   1aba0:	f800283a 	ret
   1aba4:	0005883a 	mov	r2,zero
   1aba8:	f800283a 	ret
   1abac:	10c03fcc 	andi	r3,r2,255
   1abb0:	003ff506 	br	1ab88 <_gp+0xffff41e0>

0001abb4 <strlen>:
   1abb4:	208000cc 	andi	r2,r4,3
   1abb8:	10002026 	beq	r2,zero,1ac3c <strlen+0x88>
   1abbc:	20800007 	ldb	r2,0(r4)
   1abc0:	10002026 	beq	r2,zero,1ac44 <strlen+0x90>
   1abc4:	2005883a 	mov	r2,r4
   1abc8:	00000206 	br	1abd4 <strlen+0x20>
   1abcc:	10c00007 	ldb	r3,0(r2)
   1abd0:	18001826 	beq	r3,zero,1ac34 <strlen+0x80>
   1abd4:	10800044 	addi	r2,r2,1
   1abd8:	10c000cc 	andi	r3,r2,3
   1abdc:	183ffb1e 	bne	r3,zero,1abcc <_gp+0xffff4224>
   1abe0:	10c00017 	ldw	r3,0(r2)
   1abe4:	01ffbff4 	movhi	r7,65279
   1abe8:	39ffbfc4 	addi	r7,r7,-257
   1abec:	00ca303a 	nor	r5,zero,r3
   1abf0:	01a02074 	movhi	r6,32897
   1abf4:	19c7883a 	add	r3,r3,r7
   1abf8:	31a02004 	addi	r6,r6,-32640
   1abfc:	1946703a 	and	r3,r3,r5
   1ac00:	1986703a 	and	r3,r3,r6
   1ac04:	1800091e 	bne	r3,zero,1ac2c <strlen+0x78>
   1ac08:	10800104 	addi	r2,r2,4
   1ac0c:	10c00017 	ldw	r3,0(r2)
   1ac10:	19cb883a 	add	r5,r3,r7
   1ac14:	00c6303a 	nor	r3,zero,r3
   1ac18:	28c6703a 	and	r3,r5,r3
   1ac1c:	1986703a 	and	r3,r3,r6
   1ac20:	183ff926 	beq	r3,zero,1ac08 <_gp+0xffff4260>
   1ac24:	00000106 	br	1ac2c <strlen+0x78>
   1ac28:	10800044 	addi	r2,r2,1
   1ac2c:	10c00007 	ldb	r3,0(r2)
   1ac30:	183ffd1e 	bne	r3,zero,1ac28 <_gp+0xffff4280>
   1ac34:	1105c83a 	sub	r2,r2,r4
   1ac38:	f800283a 	ret
   1ac3c:	2005883a 	mov	r2,r4
   1ac40:	003fe706 	br	1abe0 <_gp+0xffff4238>
   1ac44:	0005883a 	mov	r2,zero
   1ac48:	f800283a 	ret

0001ac4c <__ssprint_r>:
   1ac4c:	30800217 	ldw	r2,8(r6)
   1ac50:	defff604 	addi	sp,sp,-40
   1ac54:	dc800215 	stw	r18,8(sp)
   1ac58:	dfc00915 	stw	ra,36(sp)
   1ac5c:	df000815 	stw	fp,32(sp)
   1ac60:	ddc00715 	stw	r23,28(sp)
   1ac64:	dd800615 	stw	r22,24(sp)
   1ac68:	dd400515 	stw	r21,20(sp)
   1ac6c:	dd000415 	stw	r20,16(sp)
   1ac70:	dcc00315 	stw	r19,12(sp)
   1ac74:	dc400115 	stw	r17,4(sp)
   1ac78:	dc000015 	stw	r16,0(sp)
   1ac7c:	3025883a 	mov	r18,r6
   1ac80:	10005826 	beq	r2,zero,1ade4 <__ssprint_r+0x198>
   1ac84:	2027883a 	mov	r19,r4
   1ac88:	35c00017 	ldw	r23,0(r6)
   1ac8c:	29000017 	ldw	r4,0(r5)
   1ac90:	28800217 	ldw	r2,8(r5)
   1ac94:	2823883a 	mov	r17,r5
   1ac98:	0039883a 	mov	fp,zero
   1ac9c:	0021883a 	mov	r16,zero
   1aca0:	80003926 	beq	r16,zero,1ad88 <__ssprint_r+0x13c>
   1aca4:	102b883a 	mov	r21,r2
   1aca8:	102d883a 	mov	r22,r2
   1acac:	80803a36 	bltu	r16,r2,1ad98 <__ssprint_r+0x14c>
   1acb0:	88c0030b 	ldhu	r3,12(r17)
   1acb4:	1881200c 	andi	r2,r3,1152
   1acb8:	10002626 	beq	r2,zero,1ad54 <__ssprint_r+0x108>
   1acbc:	88800517 	ldw	r2,20(r17)
   1acc0:	89400417 	ldw	r5,16(r17)
   1acc4:	81800044 	addi	r6,r16,1
   1acc8:	108f883a 	add	r7,r2,r2
   1accc:	3885883a 	add	r2,r7,r2
   1acd0:	100ed7fa 	srli	r7,r2,31
   1acd4:	216dc83a 	sub	r22,r4,r5
   1acd8:	3589883a 	add	r4,r6,r22
   1acdc:	3885883a 	add	r2,r7,r2
   1ace0:	102bd07a 	srai	r21,r2,1
   1ace4:	a80d883a 	mov	r6,r21
   1ace8:	a900022e 	bgeu	r21,r4,1acf4 <__ssprint_r+0xa8>
   1acec:	202b883a 	mov	r21,r4
   1acf0:	200d883a 	mov	r6,r4
   1acf4:	18c1000c 	andi	r3,r3,1024
   1acf8:	18002a26 	beq	r3,zero,1ada4 <__ssprint_r+0x158>
   1acfc:	300b883a 	mov	r5,r6
   1ad00:	9809883a 	mov	r4,r19
   1ad04:	00142580 	call	14258 <_malloc_r>
   1ad08:	1029883a 	mov	r20,r2
   1ad0c:	10002c26 	beq	r2,zero,1adc0 <__ssprint_r+0x174>
   1ad10:	89400417 	ldw	r5,16(r17)
   1ad14:	b00d883a 	mov	r6,r22
   1ad18:	1009883a 	mov	r4,r2
   1ad1c:	00198d80 	call	198d8 <memcpy>
   1ad20:	8880030b 	ldhu	r2,12(r17)
   1ad24:	00fedfc4 	movi	r3,-1153
   1ad28:	10c4703a 	and	r2,r2,r3
   1ad2c:	10802014 	ori	r2,r2,128
   1ad30:	8880030d 	sth	r2,12(r17)
   1ad34:	a589883a 	add	r4,r20,r22
   1ad38:	adadc83a 	sub	r22,r21,r22
   1ad3c:	8d400515 	stw	r21,20(r17)
   1ad40:	8d800215 	stw	r22,8(r17)
   1ad44:	8d000415 	stw	r20,16(r17)
   1ad48:	89000015 	stw	r4,0(r17)
   1ad4c:	802b883a 	mov	r21,r16
   1ad50:	802d883a 	mov	r22,r16
   1ad54:	b00d883a 	mov	r6,r22
   1ad58:	e00b883a 	mov	r5,fp
   1ad5c:	001c2980 	call	1c298 <memmove>
   1ad60:	88800217 	ldw	r2,8(r17)
   1ad64:	89000017 	ldw	r4,0(r17)
   1ad68:	90c00217 	ldw	r3,8(r18)
   1ad6c:	1545c83a 	sub	r2,r2,r21
   1ad70:	2589883a 	add	r4,r4,r22
   1ad74:	88800215 	stw	r2,8(r17)
   1ad78:	89000015 	stw	r4,0(r17)
   1ad7c:	1c21c83a 	sub	r16,r3,r16
   1ad80:	94000215 	stw	r16,8(r18)
   1ad84:	80001726 	beq	r16,zero,1ade4 <__ssprint_r+0x198>
   1ad88:	bf000017 	ldw	fp,0(r23)
   1ad8c:	bc000117 	ldw	r16,4(r23)
   1ad90:	bdc00204 	addi	r23,r23,8
   1ad94:	003fc206 	br	1aca0 <_gp+0xffff42f8>
   1ad98:	802b883a 	mov	r21,r16
   1ad9c:	802d883a 	mov	r22,r16
   1ada0:	003fec06 	br	1ad54 <_gp+0xffff43ac>
   1ada4:	9809883a 	mov	r4,r19
   1ada8:	001c3f40 	call	1c3f4 <_realloc_r>
   1adac:	1029883a 	mov	r20,r2
   1adb0:	103fe01e 	bne	r2,zero,1ad34 <_gp+0xffff438c>
   1adb4:	89400417 	ldw	r5,16(r17)
   1adb8:	9809883a 	mov	r4,r19
   1adbc:	001938c0 	call	1938c <_free_r>
   1adc0:	88c0030b 	ldhu	r3,12(r17)
   1adc4:	00800304 	movi	r2,12
   1adc8:	98800015 	stw	r2,0(r19)
   1adcc:	18c01014 	ori	r3,r3,64
   1add0:	88c0030d 	sth	r3,12(r17)
   1add4:	00bfffc4 	movi	r2,-1
   1add8:	90000215 	stw	zero,8(r18)
   1addc:	90000115 	stw	zero,4(r18)
   1ade0:	00000206 	br	1adec <__ssprint_r+0x1a0>
   1ade4:	90000115 	stw	zero,4(r18)
   1ade8:	0005883a 	mov	r2,zero
   1adec:	dfc00917 	ldw	ra,36(sp)
   1adf0:	df000817 	ldw	fp,32(sp)
   1adf4:	ddc00717 	ldw	r23,28(sp)
   1adf8:	dd800617 	ldw	r22,24(sp)
   1adfc:	dd400517 	ldw	r21,20(sp)
   1ae00:	dd000417 	ldw	r20,16(sp)
   1ae04:	dcc00317 	ldw	r19,12(sp)
   1ae08:	dc800217 	ldw	r18,8(sp)
   1ae0c:	dc400117 	ldw	r17,4(sp)
   1ae10:	dc000017 	ldw	r16,0(sp)
   1ae14:	dec00a04 	addi	sp,sp,40
   1ae18:	f800283a 	ret

0001ae1c <___svfiprintf_internal_r>:
   1ae1c:	2880030b 	ldhu	r2,12(r5)
   1ae20:	deffc804 	addi	sp,sp,-224
   1ae24:	dcc03115 	stw	r19,196(sp)
   1ae28:	dfc03715 	stw	ra,220(sp)
   1ae2c:	df003615 	stw	fp,216(sp)
   1ae30:	ddc03515 	stw	r23,212(sp)
   1ae34:	dd803415 	stw	r22,208(sp)
   1ae38:	dd403315 	stw	r21,204(sp)
   1ae3c:	dd003215 	stw	r20,200(sp)
   1ae40:	dc803015 	stw	r18,192(sp)
   1ae44:	dc402f15 	stw	r17,188(sp)
   1ae48:	dc002e15 	stw	r16,184(sp)
   1ae4c:	d9402315 	stw	r5,140(sp)
   1ae50:	d9002715 	stw	r4,156(sp)
   1ae54:	1080200c 	andi	r2,r2,128
   1ae58:	d9c02415 	stw	r7,144(sp)
   1ae5c:	3027883a 	mov	r19,r6
   1ae60:	10000226 	beq	r2,zero,1ae6c <___svfiprintf_internal_r+0x50>
   1ae64:	28800417 	ldw	r2,16(r5)
   1ae68:	10046d26 	beq	r2,zero,1c020 <___svfiprintf_internal_r+0x1204>
   1ae6c:	d8801a04 	addi	r2,sp,104
   1ae70:	d8c019c4 	addi	r3,sp,103
   1ae74:	058000b4 	movhi	r22,2
   1ae78:	10c9c83a 	sub	r4,r2,r3
   1ae7c:	b5b81504 	addi	r22,r22,-8108
   1ae80:	d8801e15 	stw	r2,120(sp)
   1ae84:	d8c01f15 	stw	r3,124(sp)
   1ae88:	dec01a15 	stw	sp,104(sp)
   1ae8c:	d8001c15 	stw	zero,112(sp)
   1ae90:	d8001b15 	stw	zero,108(sp)
   1ae94:	d811883a 	mov	r8,sp
   1ae98:	d8002915 	stw	zero,164(sp)
   1ae9c:	d8002615 	stw	zero,152(sp)
   1aea0:	d9002c15 	stw	r4,176(sp)
   1aea4:	98800007 	ldb	r2,0(r19)
   1aea8:	10031426 	beq	r2,zero,1bafc <___svfiprintf_internal_r+0xce0>
   1aeac:	00c00944 	movi	r3,37
   1aeb0:	9825883a 	mov	r18,r19
   1aeb4:	10c0021e 	bne	r2,r3,1aec0 <___svfiprintf_internal_r+0xa4>
   1aeb8:	00001406 	br	1af0c <___svfiprintf_internal_r+0xf0>
   1aebc:	10c00326 	beq	r2,r3,1aecc <___svfiprintf_internal_r+0xb0>
   1aec0:	94800044 	addi	r18,r18,1
   1aec4:	90800007 	ldb	r2,0(r18)
   1aec8:	103ffc1e 	bne	r2,zero,1aebc <_gp+0xffff4514>
   1aecc:	94e1c83a 	sub	r16,r18,r19
   1aed0:	80000e26 	beq	r16,zero,1af0c <___svfiprintf_internal_r+0xf0>
   1aed4:	d8c01c17 	ldw	r3,112(sp)
   1aed8:	d8801b17 	ldw	r2,108(sp)
   1aedc:	44c00015 	stw	r19,0(r8)
   1aee0:	1c07883a 	add	r3,r3,r16
   1aee4:	10800044 	addi	r2,r2,1
   1aee8:	d8c01c15 	stw	r3,112(sp)
   1aeec:	44000115 	stw	r16,4(r8)
   1aef0:	d8801b15 	stw	r2,108(sp)
   1aef4:	00c001c4 	movi	r3,7
   1aef8:	18835c16 	blt	r3,r2,1bc6c <___svfiprintf_internal_r+0xe50>
   1aefc:	42000204 	addi	r8,r8,8
   1af00:	d9402617 	ldw	r5,152(sp)
   1af04:	2c0b883a 	add	r5,r5,r16
   1af08:	d9402615 	stw	r5,152(sp)
   1af0c:	90800007 	ldb	r2,0(r18)
   1af10:	1002fc26 	beq	r2,zero,1bb04 <___svfiprintf_internal_r+0xce8>
   1af14:	0023883a 	mov	r17,zero
   1af18:	00bfffc4 	movi	r2,-1
   1af1c:	0021883a 	mov	r16,zero
   1af20:	94c00044 	addi	r19,r18,1
   1af24:	90c00047 	ldb	r3,1(r18)
   1af28:	dc402105 	stb	r17,132(sp)
   1af2c:	d8001d85 	stb	zero,118(sp)
   1af30:	002b883a 	mov	r21,zero
   1af34:	d8802015 	stw	r2,128(sp)
   1af38:	d8002515 	stw	zero,148(sp)
   1af3c:	04801604 	movi	r18,88
   1af40:	05000244 	movi	r20,9
   1af44:	402f883a 	mov	r23,r8
   1af48:	8023883a 	mov	r17,r16
   1af4c:	9cc00044 	addi	r19,r19,1
   1af50:	18bff804 	addi	r2,r3,-32
   1af54:	9081fb36 	bltu	r18,r2,1b744 <___svfiprintf_internal_r+0x928>
   1af58:	100490ba 	slli	r2,r2,2
   1af5c:	010000b4 	movhi	r4,2
   1af60:	212bdc04 	addi	r4,r4,-20624
   1af64:	1105883a 	add	r2,r2,r4
   1af68:	10800017 	ldw	r2,0(r2)
   1af6c:	1000683a 	jmp	r2
   1af70:	0001b170 	cmpltui	zero,zero,1733
   1af74:	0001b744 	movi	zero,1757
   1af78:	0001b744 	movi	zero,1757
   1af7c:	0001b164 	muli	zero,zero,1733
   1af80:	0001b744 	movi	zero,1757
   1af84:	0001b744 	movi	zero,1757
   1af88:	0001b744 	movi	zero,1757
   1af8c:	0001b744 	movi	zero,1757
   1af90:	0001b744 	movi	zero,1757
   1af94:	0001b744 	movi	zero,1757
   1af98:	0001b0d4 	movui	zero,1731
   1af9c:	0001b2d0 	cmplti	zero,zero,1739
   1afa0:	0001b744 	movi	zero,1757
   1afa4:	0001b0fc 	xorhi	zero,zero,1731
   1afa8:	0001b780 	call	1b78 <__alt_mem_onchip_memory-0xe488>
   1afac:	0001b744 	movi	zero,1757
   1afb0:	0001b774 	movhi	zero,1757
   1afb4:	0001b708 	cmpgei	zero,zero,1756
   1afb8:	0001b708 	cmpgei	zero,zero,1756
   1afbc:	0001b708 	cmpgei	zero,zero,1756
   1afc0:	0001b708 	cmpgei	zero,zero,1756
   1afc4:	0001b708 	cmpgei	zero,zero,1756
   1afc8:	0001b708 	cmpgei	zero,zero,1756
   1afcc:	0001b708 	cmpgei	zero,zero,1756
   1afd0:	0001b708 	cmpgei	zero,zero,1756
   1afd4:	0001b708 	cmpgei	zero,zero,1756
   1afd8:	0001b744 	movi	zero,1757
   1afdc:	0001b744 	movi	zero,1757
   1afe0:	0001b744 	movi	zero,1757
   1afe4:	0001b744 	movi	zero,1757
   1afe8:	0001b744 	movi	zero,1757
   1afec:	0001b744 	movi	zero,1757
   1aff0:	0001b744 	movi	zero,1757
   1aff4:	0001b744 	movi	zero,1757
   1aff8:	0001b744 	movi	zero,1757
   1affc:	0001b744 	movi	zero,1757
   1b000:	0001b68c 	andi	zero,zero,1754
   1b004:	0001b744 	movi	zero,1757
   1b008:	0001b744 	movi	zero,1757
   1b00c:	0001b744 	movi	zero,1757
   1b010:	0001b744 	movi	zero,1757
   1b014:	0001b744 	movi	zero,1757
   1b018:	0001b744 	movi	zero,1757
   1b01c:	0001b744 	movi	zero,1757
   1b020:	0001b744 	movi	zero,1757
   1b024:	0001b744 	movi	zero,1757
   1b028:	0001b744 	movi	zero,1757
   1b02c:	0001b83c 	xorhi	zero,zero,1760
   1b030:	0001b744 	movi	zero,1757
   1b034:	0001b744 	movi	zero,1757
   1b038:	0001b744 	movi	zero,1757
   1b03c:	0001b744 	movi	zero,1757
   1b040:	0001b744 	movi	zero,1757
   1b044:	0001b7c8 	cmpgei	zero,zero,1759
   1b048:	0001b744 	movi	zero,1757
   1b04c:	0001b744 	movi	zero,1757
   1b050:	0001b4c8 	cmpgei	zero,zero,1747
   1b054:	0001b744 	movi	zero,1757
   1b058:	0001b744 	movi	zero,1757
   1b05c:	0001b744 	movi	zero,1757
   1b060:	0001b744 	movi	zero,1757
   1b064:	0001b744 	movi	zero,1757
   1b068:	0001b744 	movi	zero,1757
   1b06c:	0001b744 	movi	zero,1757
   1b070:	0001b744 	movi	zero,1757
   1b074:	0001b744 	movi	zero,1757
   1b078:	0001b744 	movi	zero,1757
   1b07c:	0001b394 	movui	zero,1742
   1b080:	0001b578 	rdprs	zero,zero,1749
   1b084:	0001b744 	movi	zero,1757
   1b088:	0001b744 	movi	zero,1757
   1b08c:	0001b744 	movi	zero,1757
   1b090:	0001b56c 	andhi	zero,zero,1749
   1b094:	0001b578 	rdprs	zero,zero,1749
   1b098:	0001b744 	movi	zero,1757
   1b09c:	0001b744 	movi	zero,1757
   1b0a0:	0001b558 	cmpnei	zero,zero,1749
   1b0a4:	0001b744 	movi	zero,1757
   1b0a8:	0001b518 	cmpnei	zero,zero,1748
   1b0ac:	0001b2e4 	muli	zero,zero,1739
   1b0b0:	0001b108 	cmpgei	zero,zero,1732
   1b0b4:	0001b680 	call	1b68 <__alt_mem_onchip_memory-0xe498>
   1b0b8:	0001b744 	movi	zero,1757
   1b0bc:	0001b62c 	andhi	zero,zero,1752
   1b0c0:	0001b744 	movi	zero,1757
   1b0c4:	0001b248 	cmpgei	zero,zero,1737
   1b0c8:	0001b744 	movi	zero,1757
   1b0cc:	0001b744 	movi	zero,1757
   1b0d0:	0001b194 	movui	zero,1734
   1b0d4:	d9002417 	ldw	r4,144(sp)
   1b0d8:	d9402417 	ldw	r5,144(sp)
   1b0dc:	21000017 	ldw	r4,0(r4)
   1b0e0:	28800104 	addi	r2,r5,4
   1b0e4:	d9002515 	stw	r4,148(sp)
   1b0e8:	20032b0e 	bge	r4,zero,1bd98 <___svfiprintf_internal_r+0xf7c>
   1b0ec:	d8c02517 	ldw	r3,148(sp)
   1b0f0:	d8802415 	stw	r2,144(sp)
   1b0f4:	00c7c83a 	sub	r3,zero,r3
   1b0f8:	d8c02515 	stw	r3,148(sp)
   1b0fc:	8c400114 	ori	r17,r17,4
   1b100:	98c00007 	ldb	r3,0(r19)
   1b104:	003f9106 	br	1af4c <_gp+0xffff45a4>
   1b108:	00800c04 	movi	r2,48
   1b10c:	d9402417 	ldw	r5,144(sp)
   1b110:	d9002017 	ldw	r4,128(sp)
   1b114:	d8801d05 	stb	r2,116(sp)
   1b118:	00801e04 	movi	r2,120
   1b11c:	d8801d45 	stb	r2,117(sp)
   1b120:	d8001d85 	stb	zero,118(sp)
   1b124:	b811883a 	mov	r8,r23
   1b128:	28c00104 	addi	r3,r5,4
   1b12c:	2c800017 	ldw	r18,0(r5)
   1b130:	0029883a 	mov	r20,zero
   1b134:	88800094 	ori	r2,r17,2
   1b138:	20036316 	blt	r4,zero,1bec8 <___svfiprintf_internal_r+0x10ac>
   1b13c:	00bfdfc4 	movi	r2,-129
   1b140:	88a0703a 	and	r16,r17,r2
   1b144:	d8c02415 	stw	r3,144(sp)
   1b148:	84000094 	ori	r16,r16,2
   1b14c:	90031c26 	beq	r18,zero,1bdc0 <___svfiprintf_internal_r+0xfa4>
   1b150:	014000b4 	movhi	r5,2
   1b154:	2977b504 	addi	r5,r5,-8492
   1b158:	002b883a 	mov	r21,zero
   1b15c:	d9402915 	stw	r5,164(sp)
   1b160:	00002906 	br	1b208 <___svfiprintf_internal_r+0x3ec>
   1b164:	8c400054 	ori	r17,r17,1
   1b168:	98c00007 	ldb	r3,0(r19)
   1b16c:	003f7706 	br	1af4c <_gp+0xffff45a4>
   1b170:	a8803fcc 	andi	r2,r21,255
   1b174:	1080201c 	xori	r2,r2,128
   1b178:	10bfe004 	addi	r2,r2,-128
   1b17c:	10032a1e 	bne	r2,zero,1be28 <___svfiprintf_internal_r+0x100c>
   1b180:	00c00044 	movi	r3,1
   1b184:	d8c02105 	stb	r3,132(sp)
   1b188:	05400804 	movi	r21,32
   1b18c:	98c00007 	ldb	r3,0(r19)
   1b190:	003f6e06 	br	1af4c <_gp+0xffff45a4>
   1b194:	8821883a 	mov	r16,r17
   1b198:	dc402103 	ldbu	r17,132(sp)
   1b19c:	b811883a 	mov	r8,r23
   1b1a0:	8c403fcc 	andi	r17,r17,255
   1b1a4:	8803f01e 	bne	r17,zero,1c168 <___svfiprintf_internal_r+0x134c>
   1b1a8:	008000b4 	movhi	r2,2
   1b1ac:	10b7b504 	addi	r2,r2,-8492
   1b1b0:	d8802915 	stw	r2,164(sp)
   1b1b4:	8080080c 	andi	r2,r16,32
   1b1b8:	1000cd26 	beq	r2,zero,1b4f0 <___svfiprintf_internal_r+0x6d4>
   1b1bc:	d9002417 	ldw	r4,144(sp)
   1b1c0:	24800017 	ldw	r18,0(r4)
   1b1c4:	25000117 	ldw	r20,4(r4)
   1b1c8:	21000204 	addi	r4,r4,8
   1b1cc:	d9002415 	stw	r4,144(sp)
   1b1d0:	8080004c 	andi	r2,r16,1
   1b1d4:	1002c726 	beq	r2,zero,1bcf4 <___svfiprintf_internal_r+0xed8>
   1b1d8:	9504b03a 	or	r2,r18,r20
   1b1dc:	1003061e 	bne	r2,zero,1bdf8 <___svfiprintf_internal_r+0xfdc>
   1b1e0:	d9002017 	ldw	r4,128(sp)
   1b1e4:	d8001d85 	stb	zero,118(sp)
   1b1e8:	20033e16 	blt	r4,zero,1bee4 <___svfiprintf_internal_r+0x10c8>
   1b1ec:	00bfdfc4 	movi	r2,-129
   1b1f0:	80a0703a 	and	r16,r16,r2
   1b1f4:	d9402017 	ldw	r5,128(sp)
   1b1f8:	002b883a 	mov	r21,zero
   1b1fc:	28002826 	beq	r5,zero,1b2a0 <___svfiprintf_internal_r+0x484>
   1b200:	0025883a 	mov	r18,zero
   1b204:	0029883a 	mov	r20,zero
   1b208:	d9002917 	ldw	r4,164(sp)
   1b20c:	dc401a04 	addi	r17,sp,104
   1b210:	908003cc 	andi	r2,r18,15
   1b214:	a006973a 	slli	r3,r20,28
   1b218:	2085883a 	add	r2,r4,r2
   1b21c:	9024d13a 	srli	r18,r18,4
   1b220:	10800003 	ldbu	r2,0(r2)
   1b224:	a028d13a 	srli	r20,r20,4
   1b228:	8c7fffc4 	addi	r17,r17,-1
   1b22c:	1ca4b03a 	or	r18,r3,r18
   1b230:	88800005 	stb	r2,0(r17)
   1b234:	9504b03a 	or	r2,r18,r20
   1b238:	103ff51e 	bne	r2,zero,1b210 <_gp+0xffff4868>
   1b23c:	d8801e17 	ldw	r2,120(sp)
   1b240:	1469c83a 	sub	r20,r2,r17
   1b244:	00001906 	br	1b2ac <___svfiprintf_internal_r+0x490>
   1b248:	8821883a 	mov	r16,r17
   1b24c:	dc402103 	ldbu	r17,132(sp)
   1b250:	b811883a 	mov	r8,r23
   1b254:	8c403fcc 	andi	r17,r17,255
   1b258:	8803d01e 	bne	r17,zero,1c19c <___svfiprintf_internal_r+0x1380>
   1b25c:	8080080c 	andi	r2,r16,32
   1b260:	10016126 	beq	r2,zero,1b7e8 <___svfiprintf_internal_r+0x9cc>
   1b264:	d9002417 	ldw	r4,144(sp)
   1b268:	d9402017 	ldw	r5,128(sp)
   1b26c:	d8001d85 	stb	zero,118(sp)
   1b270:	20c00204 	addi	r3,r4,8
   1b274:	24800017 	ldw	r18,0(r4)
   1b278:	25000117 	ldw	r20,4(r4)
   1b27c:	28030f16 	blt	r5,zero,1bebc <___svfiprintf_internal_r+0x10a0>
   1b280:	013fdfc4 	movi	r4,-129
   1b284:	9504b03a 	or	r2,r18,r20
   1b288:	d8c02415 	stw	r3,144(sp)
   1b28c:	8120703a 	and	r16,r16,r4
   1b290:	002b883a 	mov	r21,zero
   1b294:	1000cd1e 	bne	r2,zero,1b5cc <___svfiprintf_internal_r+0x7b0>
   1b298:	d8c02017 	ldw	r3,128(sp)
   1b29c:	1803141e 	bne	r3,zero,1bef0 <___svfiprintf_internal_r+0x10d4>
   1b2a0:	d8002015 	stw	zero,128(sp)
   1b2a4:	0029883a 	mov	r20,zero
   1b2a8:	dc401a04 	addi	r17,sp,104
   1b2ac:	dc802017 	ldw	r18,128(sp)
   1b2b0:	9500010e 	bge	r18,r20,1b2b8 <___svfiprintf_internal_r+0x49c>
   1b2b4:	a025883a 	mov	r18,r20
   1b2b8:	ad403fcc 	andi	r21,r21,255
   1b2bc:	ad40201c 	xori	r21,r21,128
   1b2c0:	ad7fe004 	addi	r21,r21,-128
   1b2c4:	a8003f26 	beq	r21,zero,1b3c4 <___svfiprintf_internal_r+0x5a8>
   1b2c8:	94800044 	addi	r18,r18,1
   1b2cc:	00003d06 	br	1b3c4 <___svfiprintf_internal_r+0x5a8>
   1b2d0:	00c00044 	movi	r3,1
   1b2d4:	d8c02105 	stb	r3,132(sp)
   1b2d8:	05400ac4 	movi	r21,43
   1b2dc:	98c00007 	ldb	r3,0(r19)
   1b2e0:	003f1a06 	br	1af4c <_gp+0xffff45a4>
   1b2e4:	8821883a 	mov	r16,r17
   1b2e8:	dc402103 	ldbu	r17,132(sp)
   1b2ec:	b811883a 	mov	r8,r23
   1b2f0:	8c403fcc 	andi	r17,r17,255
   1b2f4:	8803a71e 	bne	r17,zero,1c194 <___svfiprintf_internal_r+0x1378>
   1b2f8:	8080080c 	andi	r2,r16,32
   1b2fc:	10015726 	beq	r2,zero,1b85c <___svfiprintf_internal_r+0xa40>
   1b300:	d8c02417 	ldw	r3,144(sp)
   1b304:	d9002017 	ldw	r4,128(sp)
   1b308:	d8001d85 	stb	zero,118(sp)
   1b30c:	18800204 	addi	r2,r3,8
   1b310:	1c800017 	ldw	r18,0(r3)
   1b314:	1d000117 	ldw	r20,4(r3)
   1b318:	2002db16 	blt	r4,zero,1be88 <___svfiprintf_internal_r+0x106c>
   1b31c:	013fdfc4 	movi	r4,-129
   1b320:	9506b03a 	or	r3,r18,r20
   1b324:	d8802415 	stw	r2,144(sp)
   1b328:	8120703a 	and	r16,r16,r4
   1b32c:	18015826 	beq	r3,zero,1b890 <___svfiprintf_internal_r+0xa74>
   1b330:	002b883a 	mov	r21,zero
   1b334:	dc401a04 	addi	r17,sp,104
   1b338:	9006d0fa 	srli	r3,r18,3
   1b33c:	a008977a 	slli	r4,r20,29
   1b340:	a028d0fa 	srli	r20,r20,3
   1b344:	948001cc 	andi	r18,r18,7
   1b348:	90800c04 	addi	r2,r18,48
   1b34c:	8c7fffc4 	addi	r17,r17,-1
   1b350:	20e4b03a 	or	r18,r4,r3
   1b354:	88800005 	stb	r2,0(r17)
   1b358:	9506b03a 	or	r3,r18,r20
   1b35c:	183ff61e 	bne	r3,zero,1b338 <_gp+0xffff4990>
   1b360:	80c0004c 	andi	r3,r16,1
   1b364:	18028926 	beq	r3,zero,1bd8c <___svfiprintf_internal_r+0xf70>
   1b368:	10803fcc 	andi	r2,r2,255
   1b36c:	1080201c 	xori	r2,r2,128
   1b370:	10bfe004 	addi	r2,r2,-128
   1b374:	00c00c04 	movi	r3,48
   1b378:	10ffb026 	beq	r2,r3,1b23c <_gp+0xffff4894>
   1b37c:	88ffffc5 	stb	r3,-1(r17)
   1b380:	d8c01e17 	ldw	r3,120(sp)
   1b384:	88bfffc4 	addi	r2,r17,-1
   1b388:	1023883a 	mov	r17,r2
   1b38c:	18a9c83a 	sub	r20,r3,r2
   1b390:	003fc606 	br	1b2ac <_gp+0xffff4904>
   1b394:	d8c02417 	ldw	r3,144(sp)
   1b398:	04800044 	movi	r18,1
   1b39c:	8821883a 	mov	r16,r17
   1b3a0:	18800017 	ldw	r2,0(r3)
   1b3a4:	18c00104 	addi	r3,r3,4
   1b3a8:	b811883a 	mov	r8,r23
   1b3ac:	d8001d85 	stb	zero,118(sp)
   1b3b0:	d8801005 	stb	r2,64(sp)
   1b3b4:	d8c02415 	stw	r3,144(sp)
   1b3b8:	9029883a 	mov	r20,r18
   1b3bc:	dc401004 	addi	r17,sp,64
   1b3c0:	d8002015 	stw	zero,128(sp)
   1b3c4:	80c0008c 	andi	r3,r16,2
   1b3c8:	d8c02115 	stw	r3,132(sp)
   1b3cc:	18000126 	beq	r3,zero,1b3d4 <___svfiprintf_internal_r+0x5b8>
   1b3d0:	94800084 	addi	r18,r18,2
   1b3d4:	80c0210c 	andi	r3,r16,132
   1b3d8:	d8c02215 	stw	r3,136(sp)
   1b3dc:	1801321e 	bne	r3,zero,1b8a8 <___svfiprintf_internal_r+0xa8c>
   1b3e0:	d9002517 	ldw	r4,148(sp)
   1b3e4:	24b9c83a 	sub	fp,r4,r18
   1b3e8:	07012f0e 	bge	zero,fp,1b8a8 <___svfiprintf_internal_r+0xa8c>
   1b3ec:	02400404 	movi	r9,16
   1b3f0:	d8c01c17 	ldw	r3,112(sp)
   1b3f4:	d8801b17 	ldw	r2,108(sp)
   1b3f8:	4f03250e 	bge	r9,fp,1c090 <___svfiprintf_internal_r+0x1274>
   1b3fc:	010000b4 	movhi	r4,2
   1b400:	21381904 	addi	r4,r4,-8092
   1b404:	dc002a15 	stw	r16,168(sp)
   1b408:	dc402b15 	stw	r17,172(sp)
   1b40c:	d9002815 	stw	r4,160(sp)
   1b410:	e023883a 	mov	r17,fp
   1b414:	482f883a 	mov	r23,r9
   1b418:	9839883a 	mov	fp,r19
   1b41c:	054001c4 	movi	r21,7
   1b420:	9027883a 	mov	r19,r18
   1b424:	dc002717 	ldw	r16,156(sp)
   1b428:	dc802317 	ldw	r18,140(sp)
   1b42c:	00000306 	br	1b43c <___svfiprintf_internal_r+0x620>
   1b430:	8c7ffc04 	addi	r17,r17,-16
   1b434:	42000204 	addi	r8,r8,8
   1b438:	bc40130e 	bge	r23,r17,1b488 <___svfiprintf_internal_r+0x66c>
   1b43c:	014000b4 	movhi	r5,2
   1b440:	18c00404 	addi	r3,r3,16
   1b444:	10800044 	addi	r2,r2,1
   1b448:	29781904 	addi	r5,r5,-8092
   1b44c:	41400015 	stw	r5,0(r8)
   1b450:	45c00115 	stw	r23,4(r8)
   1b454:	d8c01c15 	stw	r3,112(sp)
   1b458:	d8801b15 	stw	r2,108(sp)
   1b45c:	a8bff40e 	bge	r21,r2,1b430 <_gp+0xffff4a88>
   1b460:	d9801a04 	addi	r6,sp,104
   1b464:	900b883a 	mov	r5,r18
   1b468:	8009883a 	mov	r4,r16
   1b46c:	001ac4c0 	call	1ac4c <__ssprint_r>
   1b470:	1001aa1e 	bne	r2,zero,1bb1c <___svfiprintf_internal_r+0xd00>
   1b474:	8c7ffc04 	addi	r17,r17,-16
   1b478:	d8c01c17 	ldw	r3,112(sp)
   1b47c:	d8801b17 	ldw	r2,108(sp)
   1b480:	d811883a 	mov	r8,sp
   1b484:	bc7fed16 	blt	r23,r17,1b43c <_gp+0xffff4a94>
   1b488:	9825883a 	mov	r18,r19
   1b48c:	dc002a17 	ldw	r16,168(sp)
   1b490:	e027883a 	mov	r19,fp
   1b494:	8839883a 	mov	fp,r17
   1b498:	dc402b17 	ldw	r17,172(sp)
   1b49c:	d9002817 	ldw	r4,160(sp)
   1b4a0:	e0c7883a 	add	r3,fp,r3
   1b4a4:	10800044 	addi	r2,r2,1
   1b4a8:	41000015 	stw	r4,0(r8)
   1b4ac:	47000115 	stw	fp,4(r8)
   1b4b0:	d8c01c15 	stw	r3,112(sp)
   1b4b4:	d8801b15 	stw	r2,108(sp)
   1b4b8:	010001c4 	movi	r4,7
   1b4bc:	20821616 	blt	r4,r2,1bd18 <___svfiprintf_internal_r+0xefc>
   1b4c0:	42000204 	addi	r8,r8,8
   1b4c4:	0000fa06 	br	1b8b0 <___svfiprintf_internal_r+0xa94>
   1b4c8:	8821883a 	mov	r16,r17
   1b4cc:	dc402103 	ldbu	r17,132(sp)
   1b4d0:	b811883a 	mov	r8,r23
   1b4d4:	8c403fcc 	andi	r17,r17,255
   1b4d8:	8803361e 	bne	r17,zero,1c1b4 <___svfiprintf_internal_r+0x1398>
   1b4dc:	014000b4 	movhi	r5,2
   1b4e0:	2977b004 	addi	r5,r5,-8512
   1b4e4:	d9402915 	stw	r5,164(sp)
   1b4e8:	8080080c 	andi	r2,r16,32
   1b4ec:	103f331e 	bne	r2,zero,1b1bc <_gp+0xffff4814>
   1b4f0:	8080040c 	andi	r2,r16,16
   1b4f4:	1002551e 	bne	r2,zero,1be4c <___svfiprintf_internal_r+0x1030>
   1b4f8:	8080100c 	andi	r2,r16,64
   1b4fc:	1002a626 	beq	r2,zero,1bf98 <___svfiprintf_internal_r+0x117c>
   1b500:	d8802417 	ldw	r2,144(sp)
   1b504:	0029883a 	mov	r20,zero
   1b508:	1480000b 	ldhu	r18,0(r2)
   1b50c:	10800104 	addi	r2,r2,4
   1b510:	d8802415 	stw	r2,144(sp)
   1b514:	003f2e06 	br	1b1d0 <_gp+0xffff4828>
   1b518:	8821883a 	mov	r16,r17
   1b51c:	dc402103 	ldbu	r17,132(sp)
   1b520:	b811883a 	mov	r8,r23
   1b524:	8c403fcc 	andi	r17,r17,255
   1b528:	88030b1e 	bne	r17,zero,1c158 <___svfiprintf_internal_r+0x133c>
   1b52c:	8080080c 	andi	r2,r16,32
   1b530:	1002271e 	bne	r2,zero,1bdd0 <___svfiprintf_internal_r+0xfb4>
   1b534:	8080040c 	andi	r2,r16,16
   1b538:	10028e26 	beq	r2,zero,1bf74 <___svfiprintf_internal_r+0x1158>
   1b53c:	d8c02417 	ldw	r3,144(sp)
   1b540:	d9002617 	ldw	r4,152(sp)
   1b544:	18800017 	ldw	r2,0(r3)
   1b548:	18c00104 	addi	r3,r3,4
   1b54c:	d8c02415 	stw	r3,144(sp)
   1b550:	11000015 	stw	r4,0(r2)
   1b554:	003e5306 	br	1aea4 <_gp+0xffff44fc>
   1b558:	98c00007 	ldb	r3,0(r19)
   1b55c:	01401b04 	movi	r5,108
   1b560:	19424f26 	beq	r3,r5,1bea0 <___svfiprintf_internal_r+0x1084>
   1b564:	8c400414 	ori	r17,r17,16
   1b568:	003e7806 	br	1af4c <_gp+0xffff45a4>
   1b56c:	8c401014 	ori	r17,r17,64
   1b570:	98c00007 	ldb	r3,0(r19)
   1b574:	003e7506 	br	1af4c <_gp+0xffff45a4>
   1b578:	8821883a 	mov	r16,r17
   1b57c:	dc402103 	ldbu	r17,132(sp)
   1b580:	b811883a 	mov	r8,r23
   1b584:	8c403fcc 	andi	r17,r17,255
   1b588:	8802fe1e 	bne	r17,zero,1c184 <___svfiprintf_internal_r+0x1368>
   1b58c:	8080080c 	andi	r2,r16,32
   1b590:	10004626 	beq	r2,zero,1b6ac <___svfiprintf_internal_r+0x890>
   1b594:	d9002417 	ldw	r4,144(sp)
   1b598:	20800117 	ldw	r2,4(r4)
   1b59c:	24800017 	ldw	r18,0(r4)
   1b5a0:	21000204 	addi	r4,r4,8
   1b5a4:	d9002415 	stw	r4,144(sp)
   1b5a8:	1029883a 	mov	r20,r2
   1b5ac:	10004a16 	blt	r2,zero,1b6d8 <___svfiprintf_internal_r+0x8bc>
   1b5b0:	d9002017 	ldw	r4,128(sp)
   1b5b4:	dd401d83 	ldbu	r21,118(sp)
   1b5b8:	2001eb16 	blt	r4,zero,1bd68 <___svfiprintf_internal_r+0xf4c>
   1b5bc:	00ffdfc4 	movi	r3,-129
   1b5c0:	9504b03a 	or	r2,r18,r20
   1b5c4:	80e0703a 	and	r16,r16,r3
   1b5c8:	103f3326 	beq	r2,zero,1b298 <_gp+0xffff48f0>
   1b5cc:	a0009426 	beq	r20,zero,1b820 <___svfiprintf_internal_r+0xa04>
   1b5d0:	dc401a04 	addi	r17,sp,104
   1b5d4:	402f883a 	mov	r23,r8
   1b5d8:	9009883a 	mov	r4,r18
   1b5dc:	a00b883a 	mov	r5,r20
   1b5e0:	01800284 	movi	r6,10
   1b5e4:	000f883a 	mov	r7,zero
   1b5e8:	001cf540 	call	1cf54 <__umoddi3>
   1b5ec:	10800c04 	addi	r2,r2,48
   1b5f0:	8c7fffc4 	addi	r17,r17,-1
   1b5f4:	9009883a 	mov	r4,r18
   1b5f8:	a00b883a 	mov	r5,r20
   1b5fc:	88800005 	stb	r2,0(r17)
   1b600:	01800284 	movi	r6,10
   1b604:	000f883a 	mov	r7,zero
   1b608:	001c9580 	call	1c958 <__udivdi3>
   1b60c:	1025883a 	mov	r18,r2
   1b610:	10c4b03a 	or	r2,r2,r3
   1b614:	1829883a 	mov	r20,r3
   1b618:	103fef1e 	bne	r2,zero,1b5d8 <_gp+0xffff4c30>
   1b61c:	d9001e17 	ldw	r4,120(sp)
   1b620:	b811883a 	mov	r8,r23
   1b624:	2469c83a 	sub	r20,r4,r17
   1b628:	003f2006 	br	1b2ac <_gp+0xffff4904>
   1b62c:	d8802417 	ldw	r2,144(sp)
   1b630:	8821883a 	mov	r16,r17
   1b634:	d8001d85 	stb	zero,118(sp)
   1b638:	14400017 	ldw	r17,0(r2)
   1b63c:	b811883a 	mov	r8,r23
   1b640:	15c00104 	addi	r23,r2,4
   1b644:	88026c26 	beq	r17,zero,1bff8 <___svfiprintf_internal_r+0x11dc>
   1b648:	d8c02017 	ldw	r3,128(sp)
   1b64c:	18025f16 	blt	r3,zero,1bfcc <___svfiprintf_internal_r+0x11b0>
   1b650:	180d883a 	mov	r6,r3
   1b654:	000b883a 	mov	r5,zero
   1b658:	8809883a 	mov	r4,r17
   1b65c:	da002d15 	stw	r8,180(sp)
   1b660:	00197780 	call	19778 <memchr>
   1b664:	da002d17 	ldw	r8,180(sp)
   1b668:	1002a526 	beq	r2,zero,1c100 <___svfiprintf_internal_r+0x12e4>
   1b66c:	1469c83a 	sub	r20,r2,r17
   1b670:	dd401d83 	ldbu	r21,118(sp)
   1b674:	ddc02415 	stw	r23,144(sp)
   1b678:	d8002015 	stw	zero,128(sp)
   1b67c:	003f0b06 	br	1b2ac <_gp+0xffff4904>
   1b680:	8c400814 	ori	r17,r17,32
   1b684:	98c00007 	ldb	r3,0(r19)
   1b688:	003e3006 	br	1af4c <_gp+0xffff45a4>
   1b68c:	8821883a 	mov	r16,r17
   1b690:	dc402103 	ldbu	r17,132(sp)
   1b694:	b811883a 	mov	r8,r23
   1b698:	8c403fcc 	andi	r17,r17,255
   1b69c:	8802b01e 	bne	r17,zero,1c160 <___svfiprintf_internal_r+0x1344>
   1b6a0:	84000414 	ori	r16,r16,16
   1b6a4:	8080080c 	andi	r2,r16,32
   1b6a8:	103fba1e 	bne	r2,zero,1b594 <_gp+0xffff4bec>
   1b6ac:	8080040c 	andi	r2,r16,16
   1b6b0:	1001df1e 	bne	r2,zero,1be30 <___svfiprintf_internal_r+0x1014>
   1b6b4:	8080100c 	andi	r2,r16,64
   1b6b8:	10023d26 	beq	r2,zero,1bfb0 <___svfiprintf_internal_r+0x1194>
   1b6bc:	d8802417 	ldw	r2,144(sp)
   1b6c0:	1480000f 	ldh	r18,0(r2)
   1b6c4:	10800104 	addi	r2,r2,4
   1b6c8:	d8802415 	stw	r2,144(sp)
   1b6cc:	9029d7fa 	srai	r20,r18,31
   1b6d0:	a005883a 	mov	r2,r20
   1b6d4:	103fb60e 	bge	r2,zero,1b5b0 <_gp+0xffff4c08>
   1b6d8:	d9402017 	ldw	r5,128(sp)
   1b6dc:	04a5c83a 	sub	r18,zero,r18
   1b6e0:	05400b44 	movi	r21,45
   1b6e4:	9004c03a 	cmpne	r2,r18,zero
   1b6e8:	0529c83a 	sub	r20,zero,r20
   1b6ec:	dd401d85 	stb	r21,118(sp)
   1b6f0:	a0a9c83a 	sub	r20,r20,r2
   1b6f4:	28026c16 	blt	r5,zero,1c0a8 <___svfiprintf_internal_r+0x128c>
   1b6f8:	00bfdfc4 	movi	r2,-129
   1b6fc:	80a0703a 	and	r16,r16,r2
   1b700:	a03fb31e 	bne	r20,zero,1b5d0 <_gp+0xffff4c28>
   1b704:	00004606 	br	1b820 <___svfiprintf_internal_r+0xa04>
   1b708:	9839883a 	mov	fp,r19
   1b70c:	d8002515 	stw	zero,148(sp)
   1b710:	1c3ff404 	addi	r16,r3,-48
   1b714:	0009883a 	mov	r4,zero
   1b718:	01400284 	movi	r5,10
   1b71c:	001411c0 	call	1411c <__mulsi3>
   1b720:	e0c00007 	ldb	r3,0(fp)
   1b724:	8089883a 	add	r4,r16,r2
   1b728:	9cc00044 	addi	r19,r19,1
   1b72c:	1c3ff404 	addi	r16,r3,-48
   1b730:	9839883a 	mov	fp,r19
   1b734:	a43ff82e 	bgeu	r20,r16,1b718 <_gp+0xffff4d70>
   1b738:	d9002515 	stw	r4,148(sp)
   1b73c:	18bff804 	addi	r2,r3,-32
   1b740:	90be052e 	bgeu	r18,r2,1af58 <_gp+0xffff45b0>
   1b744:	8821883a 	mov	r16,r17
   1b748:	dc402103 	ldbu	r17,132(sp)
   1b74c:	b811883a 	mov	r8,r23
   1b750:	8c403fcc 	andi	r17,r17,255
   1b754:	88028d1e 	bne	r17,zero,1c18c <___svfiprintf_internal_r+0x1370>
   1b758:	1800ea26 	beq	r3,zero,1bb04 <___svfiprintf_internal_r+0xce8>
   1b75c:	04800044 	movi	r18,1
   1b760:	d8c01005 	stb	r3,64(sp)
   1b764:	d8001d85 	stb	zero,118(sp)
   1b768:	9029883a 	mov	r20,r18
   1b76c:	dc401004 	addi	r17,sp,64
   1b770:	003f1306 	br	1b3c0 <_gp+0xffff4a18>
   1b774:	8c402014 	ori	r17,r17,128
   1b778:	98c00007 	ldb	r3,0(r19)
   1b77c:	003df306 	br	1af4c <_gp+0xffff45a4>
   1b780:	98c00007 	ldb	r3,0(r19)
   1b784:	01000a84 	movi	r4,42
   1b788:	9f000044 	addi	fp,r19,1
   1b78c:	19026326 	beq	r3,r4,1c11c <___svfiprintf_internal_r+0x1300>
   1b790:	1c3ff404 	addi	r16,r3,-48
   1b794:	0009883a 	mov	r4,zero
   1b798:	a4025636 	bltu	r20,r16,1c0f4 <___svfiprintf_internal_r+0x12d8>
   1b79c:	01400284 	movi	r5,10
   1b7a0:	001411c0 	call	1411c <__mulsi3>
   1b7a4:	e0c00007 	ldb	r3,0(fp)
   1b7a8:	1409883a 	add	r4,r2,r16
   1b7ac:	e4c00044 	addi	r19,fp,1
   1b7b0:	1c3ff404 	addi	r16,r3,-48
   1b7b4:	9839883a 	mov	fp,r19
   1b7b8:	a43ff82e 	bgeu	r20,r16,1b79c <_gp+0xffff4df4>
   1b7bc:	20020c16 	blt	r4,zero,1bff0 <___svfiprintf_internal_r+0x11d4>
   1b7c0:	d9002015 	stw	r4,128(sp)
   1b7c4:	003de206 	br	1af50 <_gp+0xffff45a8>
   1b7c8:	8821883a 	mov	r16,r17
   1b7cc:	dc402103 	ldbu	r17,132(sp)
   1b7d0:	b811883a 	mov	r8,r23
   1b7d4:	8c403fcc 	andi	r17,r17,255
   1b7d8:	8802721e 	bne	r17,zero,1c1a4 <___svfiprintf_internal_r+0x1388>
   1b7dc:	84000414 	ori	r16,r16,16
   1b7e0:	8080080c 	andi	r2,r16,32
   1b7e4:	103e9f1e 	bne	r2,zero,1b264 <_gp+0xffff48bc>
   1b7e8:	8080040c 	andi	r2,r16,16
   1b7ec:	10015326 	beq	r2,zero,1bd3c <___svfiprintf_internal_r+0xf20>
   1b7f0:	d8c02417 	ldw	r3,144(sp)
   1b7f4:	d9002017 	ldw	r4,128(sp)
   1b7f8:	d8001d85 	stb	zero,118(sp)
   1b7fc:	18800104 	addi	r2,r3,4
   1b800:	1c800017 	ldw	r18,0(r3)
   1b804:	0029883a 	mov	r20,zero
   1b808:	20015516 	blt	r4,zero,1bd60 <___svfiprintf_internal_r+0xf44>
   1b80c:	00ffdfc4 	movi	r3,-129
   1b810:	d8802415 	stw	r2,144(sp)
   1b814:	80e0703a 	and	r16,r16,r3
   1b818:	002b883a 	mov	r21,zero
   1b81c:	903e9e26 	beq	r18,zero,1b298 <_gp+0xffff48f0>
   1b820:	00800244 	movi	r2,9
   1b824:	14bf6a36 	bltu	r2,r18,1b5d0 <_gp+0xffff4c28>
   1b828:	94800c04 	addi	r18,r18,48
   1b82c:	dc8019c5 	stb	r18,103(sp)
   1b830:	dd002c17 	ldw	r20,176(sp)
   1b834:	dc4019c4 	addi	r17,sp,103
   1b838:	003e9c06 	br	1b2ac <_gp+0xffff4904>
   1b83c:	8821883a 	mov	r16,r17
   1b840:	dc402103 	ldbu	r17,132(sp)
   1b844:	b811883a 	mov	r8,r23
   1b848:	8c403fcc 	andi	r17,r17,255
   1b84c:	8802571e 	bne	r17,zero,1c1ac <___svfiprintf_internal_r+0x1390>
   1b850:	84000414 	ori	r16,r16,16
   1b854:	8080080c 	andi	r2,r16,32
   1b858:	103ea91e 	bne	r2,zero,1b300 <_gp+0xffff4958>
   1b85c:	8080040c 	andi	r2,r16,16
   1b860:	10018026 	beq	r2,zero,1be64 <___svfiprintf_internal_r+0x1048>
   1b864:	d9402417 	ldw	r5,144(sp)
   1b868:	d8c02017 	ldw	r3,128(sp)
   1b86c:	d8001d85 	stb	zero,118(sp)
   1b870:	28800104 	addi	r2,r5,4
   1b874:	2c800017 	ldw	r18,0(r5)
   1b878:	0029883a 	mov	r20,zero
   1b87c:	18018216 	blt	r3,zero,1be88 <___svfiprintf_internal_r+0x106c>
   1b880:	00ffdfc4 	movi	r3,-129
   1b884:	d8802415 	stw	r2,144(sp)
   1b888:	80e0703a 	and	r16,r16,r3
   1b88c:	903ea81e 	bne	r18,zero,1b330 <_gp+0xffff4988>
   1b890:	d8802017 	ldw	r2,128(sp)
   1b894:	002b883a 	mov	r21,zero
   1b898:	1001f226 	beq	r2,zero,1c064 <___svfiprintf_internal_r+0x1248>
   1b89c:	0025883a 	mov	r18,zero
   1b8a0:	0029883a 	mov	r20,zero
   1b8a4:	003ea306 	br	1b334 <_gp+0xffff498c>
   1b8a8:	d8c01c17 	ldw	r3,112(sp)
   1b8ac:	d8801b17 	ldw	r2,108(sp)
   1b8b0:	d9001d87 	ldb	r4,118(sp)
   1b8b4:	20000b26 	beq	r4,zero,1b8e4 <___svfiprintf_internal_r+0xac8>
   1b8b8:	d9001d84 	addi	r4,sp,118
   1b8bc:	18c00044 	addi	r3,r3,1
   1b8c0:	10800044 	addi	r2,r2,1
   1b8c4:	41000015 	stw	r4,0(r8)
   1b8c8:	01000044 	movi	r4,1
   1b8cc:	41000115 	stw	r4,4(r8)
   1b8d0:	d8c01c15 	stw	r3,112(sp)
   1b8d4:	d8801b15 	stw	r2,108(sp)
   1b8d8:	010001c4 	movi	r4,7
   1b8dc:	2080f316 	blt	r4,r2,1bcac <___svfiprintf_internal_r+0xe90>
   1b8e0:	42000204 	addi	r8,r8,8
   1b8e4:	d9402117 	ldw	r5,132(sp)
   1b8e8:	28000b26 	beq	r5,zero,1b918 <___svfiprintf_internal_r+0xafc>
   1b8ec:	d9001d04 	addi	r4,sp,116
   1b8f0:	18c00084 	addi	r3,r3,2
   1b8f4:	10800044 	addi	r2,r2,1
   1b8f8:	41000015 	stw	r4,0(r8)
   1b8fc:	01000084 	movi	r4,2
   1b900:	41000115 	stw	r4,4(r8)
   1b904:	d8c01c15 	stw	r3,112(sp)
   1b908:	d8801b15 	stw	r2,108(sp)
   1b90c:	010001c4 	movi	r4,7
   1b910:	2080ef16 	blt	r4,r2,1bcd0 <___svfiprintf_internal_r+0xeb4>
   1b914:	42000204 	addi	r8,r8,8
   1b918:	d9402217 	ldw	r5,136(sp)
   1b91c:	01002004 	movi	r4,128
   1b920:	29008f26 	beq	r5,r4,1bb60 <___svfiprintf_internal_r+0xd44>
   1b924:	d9002017 	ldw	r4,128(sp)
   1b928:	252fc83a 	sub	r23,r4,r20
   1b92c:	05c0310e 	bge	zero,r23,1b9f4 <___svfiprintf_internal_r+0xbd8>
   1b930:	07000404 	movi	fp,16
   1b934:	e5c17d0e 	bge	fp,r23,1bf2c <___svfiprintf_internal_r+0x1110>
   1b938:	010000b4 	movhi	r4,2
   1b93c:	21381504 	addi	r4,r4,-8108
   1b940:	dc002015 	stw	r16,128(sp)
   1b944:	dc402215 	stw	r17,136(sp)
   1b948:	d9002115 	stw	r4,132(sp)
   1b94c:	b823883a 	mov	r17,r23
   1b950:	054001c4 	movi	r21,7
   1b954:	982f883a 	mov	r23,r19
   1b958:	dc002717 	ldw	r16,156(sp)
   1b95c:	9027883a 	mov	r19,r18
   1b960:	dc802317 	ldw	r18,140(sp)
   1b964:	00000306 	br	1b974 <___svfiprintf_internal_r+0xb58>
   1b968:	8c7ffc04 	addi	r17,r17,-16
   1b96c:	42000204 	addi	r8,r8,8
   1b970:	e440110e 	bge	fp,r17,1b9b8 <___svfiprintf_internal_r+0xb9c>
   1b974:	18c00404 	addi	r3,r3,16
   1b978:	10800044 	addi	r2,r2,1
   1b97c:	45800015 	stw	r22,0(r8)
   1b980:	47000115 	stw	fp,4(r8)
   1b984:	d8c01c15 	stw	r3,112(sp)
   1b988:	d8801b15 	stw	r2,108(sp)
   1b98c:	a8bff60e 	bge	r21,r2,1b968 <_gp+0xffff4fc0>
   1b990:	d9801a04 	addi	r6,sp,104
   1b994:	900b883a 	mov	r5,r18
   1b998:	8009883a 	mov	r4,r16
   1b99c:	001ac4c0 	call	1ac4c <__ssprint_r>
   1b9a0:	10005e1e 	bne	r2,zero,1bb1c <___svfiprintf_internal_r+0xd00>
   1b9a4:	8c7ffc04 	addi	r17,r17,-16
   1b9a8:	d8c01c17 	ldw	r3,112(sp)
   1b9ac:	d8801b17 	ldw	r2,108(sp)
   1b9b0:	d811883a 	mov	r8,sp
   1b9b4:	e47fef16 	blt	fp,r17,1b974 <_gp+0xffff4fcc>
   1b9b8:	9825883a 	mov	r18,r19
   1b9bc:	dc002017 	ldw	r16,128(sp)
   1b9c0:	b827883a 	mov	r19,r23
   1b9c4:	882f883a 	mov	r23,r17
   1b9c8:	dc402217 	ldw	r17,136(sp)
   1b9cc:	d9402117 	ldw	r5,132(sp)
   1b9d0:	1dc7883a 	add	r3,r3,r23
   1b9d4:	10800044 	addi	r2,r2,1
   1b9d8:	41400015 	stw	r5,0(r8)
   1b9dc:	45c00115 	stw	r23,4(r8)
   1b9e0:	d8c01c15 	stw	r3,112(sp)
   1b9e4:	d8801b15 	stw	r2,108(sp)
   1b9e8:	010001c4 	movi	r4,7
   1b9ec:	2080a616 	blt	r4,r2,1bc88 <___svfiprintf_internal_r+0xe6c>
   1b9f0:	42000204 	addi	r8,r8,8
   1b9f4:	a0c7883a 	add	r3,r20,r3
   1b9f8:	10800044 	addi	r2,r2,1
   1b9fc:	44400015 	stw	r17,0(r8)
   1ba00:	45000115 	stw	r20,4(r8)
   1ba04:	d8c01c15 	stw	r3,112(sp)
   1ba08:	d8801b15 	stw	r2,108(sp)
   1ba0c:	010001c4 	movi	r4,7
   1ba10:	20808816 	blt	r4,r2,1bc34 <___svfiprintf_internal_r+0xe18>
   1ba14:	42000204 	addi	r8,r8,8
   1ba18:	8400010c 	andi	r16,r16,4
   1ba1c:	80002c26 	beq	r16,zero,1bad0 <___svfiprintf_internal_r+0xcb4>
   1ba20:	d8802517 	ldw	r2,148(sp)
   1ba24:	14a1c83a 	sub	r16,r2,r18
   1ba28:	0400290e 	bge	zero,r16,1bad0 <___svfiprintf_internal_r+0xcb4>
   1ba2c:	04400404 	movi	r17,16
   1ba30:	d8801b17 	ldw	r2,108(sp)
   1ba34:	8c01a70e 	bge	r17,r16,1c0d4 <___svfiprintf_internal_r+0x12b8>
   1ba38:	014000b4 	movhi	r5,2
   1ba3c:	29781904 	addi	r5,r5,-8092
   1ba40:	d9402815 	stw	r5,160(sp)
   1ba44:	050001c4 	movi	r20,7
   1ba48:	dd402717 	ldw	r21,156(sp)
   1ba4c:	ddc02317 	ldw	r23,140(sp)
   1ba50:	00000306 	br	1ba60 <___svfiprintf_internal_r+0xc44>
   1ba54:	843ffc04 	addi	r16,r16,-16
   1ba58:	42000204 	addi	r8,r8,8
   1ba5c:	8c00130e 	bge	r17,r16,1baac <___svfiprintf_internal_r+0xc90>
   1ba60:	010000b4 	movhi	r4,2
   1ba64:	18c00404 	addi	r3,r3,16
   1ba68:	10800044 	addi	r2,r2,1
   1ba6c:	21381904 	addi	r4,r4,-8092
   1ba70:	41000015 	stw	r4,0(r8)
   1ba74:	44400115 	stw	r17,4(r8)
   1ba78:	d8c01c15 	stw	r3,112(sp)
   1ba7c:	d8801b15 	stw	r2,108(sp)
   1ba80:	a0bff40e 	bge	r20,r2,1ba54 <_gp+0xffff50ac>
   1ba84:	d9801a04 	addi	r6,sp,104
   1ba88:	b80b883a 	mov	r5,r23
   1ba8c:	a809883a 	mov	r4,r21
   1ba90:	001ac4c0 	call	1ac4c <__ssprint_r>
   1ba94:	1000211e 	bne	r2,zero,1bb1c <___svfiprintf_internal_r+0xd00>
   1ba98:	843ffc04 	addi	r16,r16,-16
   1ba9c:	d8c01c17 	ldw	r3,112(sp)
   1baa0:	d8801b17 	ldw	r2,108(sp)
   1baa4:	d811883a 	mov	r8,sp
   1baa8:	8c3fed16 	blt	r17,r16,1ba60 <_gp+0xffff50b8>
   1baac:	d9402817 	ldw	r5,160(sp)
   1bab0:	1c07883a 	add	r3,r3,r16
   1bab4:	10800044 	addi	r2,r2,1
   1bab8:	41400015 	stw	r5,0(r8)
   1babc:	44000115 	stw	r16,4(r8)
   1bac0:	d8c01c15 	stw	r3,112(sp)
   1bac4:	d8801b15 	stw	r2,108(sp)
   1bac8:	010001c4 	movi	r4,7
   1bacc:	2080b516 	blt	r4,r2,1bda4 <___svfiprintf_internal_r+0xf88>
   1bad0:	d8802517 	ldw	r2,148(sp)
   1bad4:	1480010e 	bge	r2,r18,1badc <___svfiprintf_internal_r+0xcc0>
   1bad8:	9005883a 	mov	r2,r18
   1badc:	d9002617 	ldw	r4,152(sp)
   1bae0:	2089883a 	add	r4,r4,r2
   1bae4:	d9002615 	stw	r4,152(sp)
   1bae8:	18005a1e 	bne	r3,zero,1bc54 <___svfiprintf_internal_r+0xe38>
   1baec:	98800007 	ldb	r2,0(r19)
   1baf0:	d8001b15 	stw	zero,108(sp)
   1baf4:	d811883a 	mov	r8,sp
   1baf8:	103cec1e 	bne	r2,zero,1aeac <_gp+0xffff4504>
   1bafc:	9825883a 	mov	r18,r19
   1bb00:	003d0206 	br	1af0c <_gp+0xffff4564>
   1bb04:	d8801c17 	ldw	r2,112(sp)
   1bb08:	10000426 	beq	r2,zero,1bb1c <___svfiprintf_internal_r+0xd00>
   1bb0c:	d9402317 	ldw	r5,140(sp)
   1bb10:	d9002717 	ldw	r4,156(sp)
   1bb14:	d9801a04 	addi	r6,sp,104
   1bb18:	001ac4c0 	call	1ac4c <__ssprint_r>
   1bb1c:	d9402317 	ldw	r5,140(sp)
   1bb20:	d8802617 	ldw	r2,152(sp)
   1bb24:	28c0030b 	ldhu	r3,12(r5)
   1bb28:	18c0100c 	andi	r3,r3,64
   1bb2c:	18015c1e 	bne	r3,zero,1c0a0 <___svfiprintf_internal_r+0x1284>
   1bb30:	dfc03717 	ldw	ra,220(sp)
   1bb34:	df003617 	ldw	fp,216(sp)
   1bb38:	ddc03517 	ldw	r23,212(sp)
   1bb3c:	dd803417 	ldw	r22,208(sp)
   1bb40:	dd403317 	ldw	r21,204(sp)
   1bb44:	dd003217 	ldw	r20,200(sp)
   1bb48:	dcc03117 	ldw	r19,196(sp)
   1bb4c:	dc803017 	ldw	r18,192(sp)
   1bb50:	dc402f17 	ldw	r17,188(sp)
   1bb54:	dc002e17 	ldw	r16,184(sp)
   1bb58:	dec03804 	addi	sp,sp,224
   1bb5c:	f800283a 	ret
   1bb60:	d9002517 	ldw	r4,148(sp)
   1bb64:	24afc83a 	sub	r23,r4,r18
   1bb68:	05ff6e0e 	bge	zero,r23,1b924 <_gp+0xffff4f7c>
   1bb6c:	07000404 	movi	fp,16
   1bb70:	e5c15c0e 	bge	fp,r23,1c0e4 <___svfiprintf_internal_r+0x12c8>
   1bb74:	010000b4 	movhi	r4,2
   1bb78:	21381504 	addi	r4,r4,-8108
   1bb7c:	dc002215 	stw	r16,136(sp)
   1bb80:	dc402815 	stw	r17,160(sp)
   1bb84:	d9002115 	stw	r4,132(sp)
   1bb88:	b823883a 	mov	r17,r23
   1bb8c:	054001c4 	movi	r21,7
   1bb90:	982f883a 	mov	r23,r19
   1bb94:	dc002717 	ldw	r16,156(sp)
   1bb98:	9027883a 	mov	r19,r18
   1bb9c:	dc802317 	ldw	r18,140(sp)
   1bba0:	00000306 	br	1bbb0 <___svfiprintf_internal_r+0xd94>
   1bba4:	8c7ffc04 	addi	r17,r17,-16
   1bba8:	42000204 	addi	r8,r8,8
   1bbac:	e440110e 	bge	fp,r17,1bbf4 <___svfiprintf_internal_r+0xdd8>
   1bbb0:	18c00404 	addi	r3,r3,16
   1bbb4:	10800044 	addi	r2,r2,1
   1bbb8:	45800015 	stw	r22,0(r8)
   1bbbc:	47000115 	stw	fp,4(r8)
   1bbc0:	d8c01c15 	stw	r3,112(sp)
   1bbc4:	d8801b15 	stw	r2,108(sp)
   1bbc8:	a8bff60e 	bge	r21,r2,1bba4 <_gp+0xffff51fc>
   1bbcc:	d9801a04 	addi	r6,sp,104
   1bbd0:	900b883a 	mov	r5,r18
   1bbd4:	8009883a 	mov	r4,r16
   1bbd8:	001ac4c0 	call	1ac4c <__ssprint_r>
   1bbdc:	103fcf1e 	bne	r2,zero,1bb1c <_gp+0xffff5174>
   1bbe0:	8c7ffc04 	addi	r17,r17,-16
   1bbe4:	d8c01c17 	ldw	r3,112(sp)
   1bbe8:	d8801b17 	ldw	r2,108(sp)
   1bbec:	d811883a 	mov	r8,sp
   1bbf0:	e47fef16 	blt	fp,r17,1bbb0 <_gp+0xffff5208>
   1bbf4:	9825883a 	mov	r18,r19
   1bbf8:	dc002217 	ldw	r16,136(sp)
   1bbfc:	b827883a 	mov	r19,r23
   1bc00:	882f883a 	mov	r23,r17
   1bc04:	dc402817 	ldw	r17,160(sp)
   1bc08:	d9402117 	ldw	r5,132(sp)
   1bc0c:	1dc7883a 	add	r3,r3,r23
   1bc10:	10800044 	addi	r2,r2,1
   1bc14:	41400015 	stw	r5,0(r8)
   1bc18:	45c00115 	stw	r23,4(r8)
   1bc1c:	d8c01c15 	stw	r3,112(sp)
   1bc20:	d8801b15 	stw	r2,108(sp)
   1bc24:	010001c4 	movi	r4,7
   1bc28:	2080b716 	blt	r4,r2,1bf08 <___svfiprintf_internal_r+0x10ec>
   1bc2c:	42000204 	addi	r8,r8,8
   1bc30:	003f3c06 	br	1b924 <_gp+0xffff4f7c>
   1bc34:	d9402317 	ldw	r5,140(sp)
   1bc38:	d9002717 	ldw	r4,156(sp)
   1bc3c:	d9801a04 	addi	r6,sp,104
   1bc40:	001ac4c0 	call	1ac4c <__ssprint_r>
   1bc44:	103fb51e 	bne	r2,zero,1bb1c <_gp+0xffff5174>
   1bc48:	d8c01c17 	ldw	r3,112(sp)
   1bc4c:	d811883a 	mov	r8,sp
   1bc50:	003f7106 	br	1ba18 <_gp+0xffff5070>
   1bc54:	d9402317 	ldw	r5,140(sp)
   1bc58:	d9002717 	ldw	r4,156(sp)
   1bc5c:	d9801a04 	addi	r6,sp,104
   1bc60:	001ac4c0 	call	1ac4c <__ssprint_r>
   1bc64:	103fa126 	beq	r2,zero,1baec <_gp+0xffff5144>
   1bc68:	003fac06 	br	1bb1c <_gp+0xffff5174>
   1bc6c:	d9402317 	ldw	r5,140(sp)
   1bc70:	d9002717 	ldw	r4,156(sp)
   1bc74:	d9801a04 	addi	r6,sp,104
   1bc78:	001ac4c0 	call	1ac4c <__ssprint_r>
   1bc7c:	103fa71e 	bne	r2,zero,1bb1c <_gp+0xffff5174>
   1bc80:	d811883a 	mov	r8,sp
   1bc84:	003c9e06 	br	1af00 <_gp+0xffff4558>
   1bc88:	d9402317 	ldw	r5,140(sp)
   1bc8c:	d9002717 	ldw	r4,156(sp)
   1bc90:	d9801a04 	addi	r6,sp,104
   1bc94:	001ac4c0 	call	1ac4c <__ssprint_r>
   1bc98:	103fa01e 	bne	r2,zero,1bb1c <_gp+0xffff5174>
   1bc9c:	d8c01c17 	ldw	r3,112(sp)
   1bca0:	d8801b17 	ldw	r2,108(sp)
   1bca4:	d811883a 	mov	r8,sp
   1bca8:	003f5206 	br	1b9f4 <_gp+0xffff504c>
   1bcac:	d9402317 	ldw	r5,140(sp)
   1bcb0:	d9002717 	ldw	r4,156(sp)
   1bcb4:	d9801a04 	addi	r6,sp,104
   1bcb8:	001ac4c0 	call	1ac4c <__ssprint_r>
   1bcbc:	103f971e 	bne	r2,zero,1bb1c <_gp+0xffff5174>
   1bcc0:	d8c01c17 	ldw	r3,112(sp)
   1bcc4:	d8801b17 	ldw	r2,108(sp)
   1bcc8:	d811883a 	mov	r8,sp
   1bccc:	003f0506 	br	1b8e4 <_gp+0xffff4f3c>
   1bcd0:	d9402317 	ldw	r5,140(sp)
   1bcd4:	d9002717 	ldw	r4,156(sp)
   1bcd8:	d9801a04 	addi	r6,sp,104
   1bcdc:	001ac4c0 	call	1ac4c <__ssprint_r>
   1bce0:	103f8e1e 	bne	r2,zero,1bb1c <_gp+0xffff5174>
   1bce4:	d8c01c17 	ldw	r3,112(sp)
   1bce8:	d8801b17 	ldw	r2,108(sp)
   1bcec:	d811883a 	mov	r8,sp
   1bcf0:	003f0906 	br	1b918 <_gp+0xffff4f70>
   1bcf4:	d9402017 	ldw	r5,128(sp)
   1bcf8:	d8001d85 	stb	zero,118(sp)
   1bcfc:	28007716 	blt	r5,zero,1bedc <___svfiprintf_internal_r+0x10c0>
   1bd00:	00ffdfc4 	movi	r3,-129
   1bd04:	9504b03a 	or	r2,r18,r20
   1bd08:	80e0703a 	and	r16,r16,r3
   1bd0c:	103d3926 	beq	r2,zero,1b1f4 <_gp+0xffff484c>
   1bd10:	002b883a 	mov	r21,zero
   1bd14:	003d3c06 	br	1b208 <_gp+0xffff4860>
   1bd18:	d9402317 	ldw	r5,140(sp)
   1bd1c:	d9002717 	ldw	r4,156(sp)
   1bd20:	d9801a04 	addi	r6,sp,104
   1bd24:	001ac4c0 	call	1ac4c <__ssprint_r>
   1bd28:	103f7c1e 	bne	r2,zero,1bb1c <_gp+0xffff5174>
   1bd2c:	d8c01c17 	ldw	r3,112(sp)
   1bd30:	d8801b17 	ldw	r2,108(sp)
   1bd34:	d811883a 	mov	r8,sp
   1bd38:	003edd06 	br	1b8b0 <_gp+0xffff4f08>
   1bd3c:	8080100c 	andi	r2,r16,64
   1bd40:	d8001d85 	stb	zero,118(sp)
   1bd44:	10008426 	beq	r2,zero,1bf58 <___svfiprintf_internal_r+0x113c>
   1bd48:	d9402417 	ldw	r5,144(sp)
   1bd4c:	d8c02017 	ldw	r3,128(sp)
   1bd50:	0029883a 	mov	r20,zero
   1bd54:	28800104 	addi	r2,r5,4
   1bd58:	2c80000b 	ldhu	r18,0(r5)
   1bd5c:	183eab0e 	bge	r3,zero,1b80c <_gp+0xffff4e64>
   1bd60:	d8802415 	stw	r2,144(sp)
   1bd64:	002b883a 	mov	r21,zero
   1bd68:	9504b03a 	or	r2,r18,r20
   1bd6c:	103e171e 	bne	r2,zero,1b5cc <_gp+0xffff4c24>
   1bd70:	00800044 	movi	r2,1
   1bd74:	10803fcc 	andi	r2,r2,255
   1bd78:	00c00044 	movi	r3,1
   1bd7c:	10c05c26 	beq	r2,r3,1bef0 <___svfiprintf_internal_r+0x10d4>
   1bd80:	00c00084 	movi	r3,2
   1bd84:	10fd1e26 	beq	r2,r3,1b200 <_gp+0xffff4858>
   1bd88:	003ec406 	br	1b89c <_gp+0xffff4ef4>
   1bd8c:	d9401e17 	ldw	r5,120(sp)
   1bd90:	2c69c83a 	sub	r20,r5,r17
   1bd94:	003d4506 	br	1b2ac <_gp+0xffff4904>
   1bd98:	d8802415 	stw	r2,144(sp)
   1bd9c:	98c00007 	ldb	r3,0(r19)
   1bda0:	003c6a06 	br	1af4c <_gp+0xffff45a4>
   1bda4:	d9402317 	ldw	r5,140(sp)
   1bda8:	d9002717 	ldw	r4,156(sp)
   1bdac:	d9801a04 	addi	r6,sp,104
   1bdb0:	001ac4c0 	call	1ac4c <__ssprint_r>
   1bdb4:	103f591e 	bne	r2,zero,1bb1c <_gp+0xffff5174>
   1bdb8:	d8c01c17 	ldw	r3,112(sp)
   1bdbc:	003f4406 	br	1bad0 <_gp+0xffff5128>
   1bdc0:	014000b4 	movhi	r5,2
   1bdc4:	2977b504 	addi	r5,r5,-8492
   1bdc8:	d9402915 	stw	r5,164(sp)
   1bdcc:	003d0906 	br	1b1f4 <_gp+0xffff484c>
   1bdd0:	d8c02417 	ldw	r3,144(sp)
   1bdd4:	d9002617 	ldw	r4,152(sp)
   1bdd8:	d9402417 	ldw	r5,144(sp)
   1bddc:	18800017 	ldw	r2,0(r3)
   1bde0:	2007d7fa 	srai	r3,r4,31
   1bde4:	29400104 	addi	r5,r5,4
   1bde8:	d9402415 	stw	r5,144(sp)
   1bdec:	11000015 	stw	r4,0(r2)
   1bdf0:	10c00115 	stw	r3,4(r2)
   1bdf4:	003c2b06 	br	1aea4 <_gp+0xffff44fc>
   1bdf8:	d8c01d45 	stb	r3,117(sp)
   1bdfc:	d8c02017 	ldw	r3,128(sp)
   1be00:	00800c04 	movi	r2,48
   1be04:	d8801d05 	stb	r2,116(sp)
   1be08:	d8001d85 	stb	zero,118(sp)
   1be0c:	80800094 	ori	r2,r16,2
   1be10:	1800ac16 	blt	r3,zero,1c0c4 <___svfiprintf_internal_r+0x12a8>
   1be14:	00bfdfc4 	movi	r2,-129
   1be18:	80a0703a 	and	r16,r16,r2
   1be1c:	84000094 	ori	r16,r16,2
   1be20:	002b883a 	mov	r21,zero
   1be24:	003cf806 	br	1b208 <_gp+0xffff4860>
   1be28:	98c00007 	ldb	r3,0(r19)
   1be2c:	003c4706 	br	1af4c <_gp+0xffff45a4>
   1be30:	d9402417 	ldw	r5,144(sp)
   1be34:	2c800017 	ldw	r18,0(r5)
   1be38:	29400104 	addi	r5,r5,4
   1be3c:	d9402415 	stw	r5,144(sp)
   1be40:	9029d7fa 	srai	r20,r18,31
   1be44:	a005883a 	mov	r2,r20
   1be48:	003dd806 	br	1b5ac <_gp+0xffff4c04>
   1be4c:	d9402417 	ldw	r5,144(sp)
   1be50:	0029883a 	mov	r20,zero
   1be54:	2c800017 	ldw	r18,0(r5)
   1be58:	29400104 	addi	r5,r5,4
   1be5c:	d9402415 	stw	r5,144(sp)
   1be60:	003cdb06 	br	1b1d0 <_gp+0xffff4828>
   1be64:	8080100c 	andi	r2,r16,64
   1be68:	d8001d85 	stb	zero,118(sp)
   1be6c:	10003326 	beq	r2,zero,1bf3c <___svfiprintf_internal_r+0x1120>
   1be70:	d9002417 	ldw	r4,144(sp)
   1be74:	d9402017 	ldw	r5,128(sp)
   1be78:	0029883a 	mov	r20,zero
   1be7c:	20800104 	addi	r2,r4,4
   1be80:	2480000b 	ldhu	r18,0(r4)
   1be84:	283e7e0e 	bge	r5,zero,1b880 <_gp+0xffff4ed8>
   1be88:	9506b03a 	or	r3,r18,r20
   1be8c:	d8802415 	stw	r2,144(sp)
   1be90:	183d271e 	bne	r3,zero,1b330 <_gp+0xffff4988>
   1be94:	002b883a 	mov	r21,zero
   1be98:	0005883a 	mov	r2,zero
   1be9c:	003fb506 	br	1bd74 <_gp+0xffff53cc>
   1bea0:	98c00043 	ldbu	r3,1(r19)
   1bea4:	8c400814 	ori	r17,r17,32
   1bea8:	9cc00044 	addi	r19,r19,1
   1beac:	18c03fcc 	andi	r3,r3,255
   1beb0:	18c0201c 	xori	r3,r3,128
   1beb4:	18ffe004 	addi	r3,r3,-128
   1beb8:	003c2406 	br	1af4c <_gp+0xffff45a4>
   1bebc:	d8c02415 	stw	r3,144(sp)
   1bec0:	002b883a 	mov	r21,zero
   1bec4:	003fa806 	br	1bd68 <_gp+0xffff53c0>
   1bec8:	010000b4 	movhi	r4,2
   1becc:	2137b504 	addi	r4,r4,-8492
   1bed0:	d9002915 	stw	r4,164(sp)
   1bed4:	d8c02415 	stw	r3,144(sp)
   1bed8:	1021883a 	mov	r16,r2
   1bedc:	9504b03a 	or	r2,r18,r20
   1bee0:	103f8b1e 	bne	r2,zero,1bd10 <_gp+0xffff5368>
   1bee4:	002b883a 	mov	r21,zero
   1bee8:	00800084 	movi	r2,2
   1beec:	003fa106 	br	1bd74 <_gp+0xffff53cc>
   1bef0:	0025883a 	mov	r18,zero
   1bef4:	94800c04 	addi	r18,r18,48
   1bef8:	dc8019c5 	stb	r18,103(sp)
   1befc:	dd002c17 	ldw	r20,176(sp)
   1bf00:	dc4019c4 	addi	r17,sp,103
   1bf04:	003ce906 	br	1b2ac <_gp+0xffff4904>
   1bf08:	d9402317 	ldw	r5,140(sp)
   1bf0c:	d9002717 	ldw	r4,156(sp)
   1bf10:	d9801a04 	addi	r6,sp,104
   1bf14:	001ac4c0 	call	1ac4c <__ssprint_r>
   1bf18:	103f001e 	bne	r2,zero,1bb1c <_gp+0xffff5174>
   1bf1c:	d8c01c17 	ldw	r3,112(sp)
   1bf20:	d8801b17 	ldw	r2,108(sp)
   1bf24:	d811883a 	mov	r8,sp
   1bf28:	003e7e06 	br	1b924 <_gp+0xffff4f7c>
   1bf2c:	014000b4 	movhi	r5,2
   1bf30:	29781504 	addi	r5,r5,-8108
   1bf34:	d9402115 	stw	r5,132(sp)
   1bf38:	003ea406 	br	1b9cc <_gp+0xffff5024>
   1bf3c:	d8c02417 	ldw	r3,144(sp)
   1bf40:	d9002017 	ldw	r4,128(sp)
   1bf44:	0029883a 	mov	r20,zero
   1bf48:	18800104 	addi	r2,r3,4
   1bf4c:	1c800017 	ldw	r18,0(r3)
   1bf50:	203e4b0e 	bge	r4,zero,1b880 <_gp+0xffff4ed8>
   1bf54:	003fcc06 	br	1be88 <_gp+0xffff54e0>
   1bf58:	d9002417 	ldw	r4,144(sp)
   1bf5c:	d9402017 	ldw	r5,128(sp)
   1bf60:	0029883a 	mov	r20,zero
   1bf64:	20800104 	addi	r2,r4,4
   1bf68:	24800017 	ldw	r18,0(r4)
   1bf6c:	283e270e 	bge	r5,zero,1b80c <_gp+0xffff4e64>
   1bf70:	003f7b06 	br	1bd60 <_gp+0xffff53b8>
   1bf74:	8400100c 	andi	r16,r16,64
   1bf78:	80003326 	beq	r16,zero,1c048 <___svfiprintf_internal_r+0x122c>
   1bf7c:	d9402417 	ldw	r5,144(sp)
   1bf80:	d8c02617 	ldw	r3,152(sp)
   1bf84:	28800017 	ldw	r2,0(r5)
   1bf88:	29400104 	addi	r5,r5,4
   1bf8c:	d9402415 	stw	r5,144(sp)
   1bf90:	10c0000d 	sth	r3,0(r2)
   1bf94:	003bc306 	br	1aea4 <_gp+0xffff44fc>
   1bf98:	d9002417 	ldw	r4,144(sp)
   1bf9c:	0029883a 	mov	r20,zero
   1bfa0:	24800017 	ldw	r18,0(r4)
   1bfa4:	21000104 	addi	r4,r4,4
   1bfa8:	d9002415 	stw	r4,144(sp)
   1bfac:	003c8806 	br	1b1d0 <_gp+0xffff4828>
   1bfb0:	d8c02417 	ldw	r3,144(sp)
   1bfb4:	1c800017 	ldw	r18,0(r3)
   1bfb8:	18c00104 	addi	r3,r3,4
   1bfbc:	d8c02415 	stw	r3,144(sp)
   1bfc0:	9029d7fa 	srai	r20,r18,31
   1bfc4:	a005883a 	mov	r2,r20
   1bfc8:	003d7806 	br	1b5ac <_gp+0xffff4c04>
   1bfcc:	8809883a 	mov	r4,r17
   1bfd0:	da002d15 	stw	r8,180(sp)
   1bfd4:	001abb40 	call	1abb4 <strlen>
   1bfd8:	1029883a 	mov	r20,r2
   1bfdc:	dd401d83 	ldbu	r21,118(sp)
   1bfe0:	ddc02415 	stw	r23,144(sp)
   1bfe4:	d8002015 	stw	zero,128(sp)
   1bfe8:	da002d17 	ldw	r8,180(sp)
   1bfec:	003caf06 	br	1b2ac <_gp+0xffff4904>
   1bff0:	013fffc4 	movi	r4,-1
   1bff4:	003df206 	br	1b7c0 <_gp+0xffff4e18>
   1bff8:	dd002017 	ldw	r20,128(sp)
   1bffc:	00800184 	movi	r2,6
   1c000:	1500012e 	bgeu	r2,r20,1c008 <___svfiprintf_internal_r+0x11ec>
   1c004:	1029883a 	mov	r20,r2
   1c008:	a025883a 	mov	r18,r20
   1c00c:	a0004116 	blt	r20,zero,1c114 <___svfiprintf_internal_r+0x12f8>
   1c010:	044000b4 	movhi	r17,2
   1c014:	ddc02415 	stw	r23,144(sp)
   1c018:	8c77ba04 	addi	r17,r17,-8472
   1c01c:	003ce806 	br	1b3c0 <_gp+0xffff4a18>
   1c020:	04001004 	movi	r16,64
   1c024:	800b883a 	mov	r5,r16
   1c028:	00142580 	call	14258 <_malloc_r>
   1c02c:	d8c02317 	ldw	r3,140(sp)
   1c030:	18800015 	stw	r2,0(r3)
   1c034:	18800415 	stw	r2,16(r3)
   1c038:	10004d26 	beq	r2,zero,1c170 <___svfiprintf_internal_r+0x1354>
   1c03c:	d9402317 	ldw	r5,140(sp)
   1c040:	2c000515 	stw	r16,20(r5)
   1c044:	003b8906 	br	1ae6c <_gp+0xffff44c4>
   1c048:	d9002417 	ldw	r4,144(sp)
   1c04c:	d9402617 	ldw	r5,152(sp)
   1c050:	20800017 	ldw	r2,0(r4)
   1c054:	21000104 	addi	r4,r4,4
   1c058:	d9002415 	stw	r4,144(sp)
   1c05c:	11400015 	stw	r5,0(r2)
   1c060:	003b9006 	br	1aea4 <_gp+0xffff44fc>
   1c064:	8080004c 	andi	r2,r16,1
   1c068:	002b883a 	mov	r21,zero
   1c06c:	10000526 	beq	r2,zero,1c084 <___svfiprintf_internal_r+0x1268>
   1c070:	00800c04 	movi	r2,48
   1c074:	d88019c5 	stb	r2,103(sp)
   1c078:	dd002c17 	ldw	r20,176(sp)
   1c07c:	dc4019c4 	addi	r17,sp,103
   1c080:	003c8a06 	br	1b2ac <_gp+0xffff4904>
   1c084:	0029883a 	mov	r20,zero
   1c088:	dc401a04 	addi	r17,sp,104
   1c08c:	003c8706 	br	1b2ac <_gp+0xffff4904>
   1c090:	014000b4 	movhi	r5,2
   1c094:	29781904 	addi	r5,r5,-8092
   1c098:	d9402815 	stw	r5,160(sp)
   1c09c:	003cff06 	br	1b49c <_gp+0xffff4af4>
   1c0a0:	00bfffc4 	movi	r2,-1
   1c0a4:	003ea206 	br	1bb30 <_gp+0xffff5188>
   1c0a8:	00800044 	movi	r2,1
   1c0ac:	10803fcc 	andi	r2,r2,255
   1c0b0:	00c00044 	movi	r3,1
   1c0b4:	10fd4526 	beq	r2,r3,1b5cc <_gp+0xffff4c24>
   1c0b8:	00c00084 	movi	r3,2
   1c0bc:	10fc5226 	beq	r2,r3,1b208 <_gp+0xffff4860>
   1c0c0:	003c9c06 	br	1b334 <_gp+0xffff498c>
   1c0c4:	1021883a 	mov	r16,r2
   1c0c8:	002b883a 	mov	r21,zero
   1c0cc:	00800084 	movi	r2,2
   1c0d0:	003ff606 	br	1c0ac <_gp+0xffff5704>
   1c0d4:	010000b4 	movhi	r4,2
   1c0d8:	21381904 	addi	r4,r4,-8092
   1c0dc:	d9002815 	stw	r4,160(sp)
   1c0e0:	003e7206 	br	1baac <_gp+0xffff5104>
   1c0e4:	014000b4 	movhi	r5,2
   1c0e8:	29781504 	addi	r5,r5,-8108
   1c0ec:	d9402115 	stw	r5,132(sp)
   1c0f0:	003ec506 	br	1bc08 <_gp+0xffff5260>
   1c0f4:	e027883a 	mov	r19,fp
   1c0f8:	d8002015 	stw	zero,128(sp)
   1c0fc:	003b9406 	br	1af50 <_gp+0xffff45a8>
   1c100:	dd002017 	ldw	r20,128(sp)
   1c104:	dd401d83 	ldbu	r21,118(sp)
   1c108:	ddc02415 	stw	r23,144(sp)
   1c10c:	d8002015 	stw	zero,128(sp)
   1c110:	003c6606 	br	1b2ac <_gp+0xffff4904>
   1c114:	0025883a 	mov	r18,zero
   1c118:	003fbd06 	br	1c010 <_gp+0xffff5668>
   1c11c:	d9402417 	ldw	r5,144(sp)
   1c120:	d8c02417 	ldw	r3,144(sp)
   1c124:	29400017 	ldw	r5,0(r5)
   1c128:	19000104 	addi	r4,r3,4
   1c12c:	d9002415 	stw	r4,144(sp)
   1c130:	d9402015 	stw	r5,128(sp)
   1c134:	98c00043 	ldbu	r3,1(r19)
   1c138:	e027883a 	mov	r19,fp
   1c13c:	283f5b0e 	bge	r5,zero,1beac <_gp+0xffff5504>
   1c140:	18c03fcc 	andi	r3,r3,255
   1c144:	013fffc4 	movi	r4,-1
   1c148:	18c0201c 	xori	r3,r3,128
   1c14c:	d9002015 	stw	r4,128(sp)
   1c150:	18ffe004 	addi	r3,r3,-128
   1c154:	003b7d06 	br	1af4c <_gp+0xffff45a4>
   1c158:	dd401d85 	stb	r21,118(sp)
   1c15c:	003cf306 	br	1b52c <_gp+0xffff4b84>
   1c160:	dd401d85 	stb	r21,118(sp)
   1c164:	003d4e06 	br	1b6a0 <_gp+0xffff4cf8>
   1c168:	dd401d85 	stb	r21,118(sp)
   1c16c:	003c0e06 	br	1b1a8 <_gp+0xffff4800>
   1c170:	d9002717 	ldw	r4,156(sp)
   1c174:	00800304 	movi	r2,12
   1c178:	20800015 	stw	r2,0(r4)
   1c17c:	00bfffc4 	movi	r2,-1
   1c180:	003e6b06 	br	1bb30 <_gp+0xffff5188>
   1c184:	dd401d85 	stb	r21,118(sp)
   1c188:	003d0006 	br	1b58c <_gp+0xffff4be4>
   1c18c:	dd401d85 	stb	r21,118(sp)
   1c190:	003d7106 	br	1b758 <_gp+0xffff4db0>
   1c194:	dd401d85 	stb	r21,118(sp)
   1c198:	003c5706 	br	1b2f8 <_gp+0xffff4950>
   1c19c:	dd401d85 	stb	r21,118(sp)
   1c1a0:	003c2e06 	br	1b25c <_gp+0xffff48b4>
   1c1a4:	dd401d85 	stb	r21,118(sp)
   1c1a8:	003d8c06 	br	1b7dc <_gp+0xffff4e34>
   1c1ac:	dd401d85 	stb	r21,118(sp)
   1c1b0:	003da706 	br	1b850 <_gp+0xffff4ea8>
   1c1b4:	dd401d85 	stb	r21,118(sp)
   1c1b8:	003cc806 	br	1b4dc <_gp+0xffff4b34>

0001c1bc <_calloc_r>:
   1c1bc:	defffe04 	addi	sp,sp,-8
   1c1c0:	2805883a 	mov	r2,r5
   1c1c4:	dc000015 	stw	r16,0(sp)
   1c1c8:	300b883a 	mov	r5,r6
   1c1cc:	2021883a 	mov	r16,r4
   1c1d0:	1009883a 	mov	r4,r2
   1c1d4:	dfc00115 	stw	ra,4(sp)
   1c1d8:	001411c0 	call	1411c <__mulsi3>
   1c1dc:	100b883a 	mov	r5,r2
   1c1e0:	8009883a 	mov	r4,r16
   1c1e4:	00142580 	call	14258 <_malloc_r>
   1c1e8:	10002926 	beq	r2,zero,1c290 <_calloc_r+0xd4>
   1c1ec:	11bfff17 	ldw	r6,-4(r2)
   1c1f0:	1021883a 	mov	r16,r2
   1c1f4:	00bfff04 	movi	r2,-4
   1c1f8:	308c703a 	and	r6,r6,r2
   1c1fc:	00c00904 	movi	r3,36
   1c200:	308d883a 	add	r6,r6,r2
   1c204:	19801636 	bltu	r3,r6,1c260 <_calloc_r+0xa4>
   1c208:	008004c4 	movi	r2,19
   1c20c:	11800b2e 	bgeu	r2,r6,1c23c <_calloc_r+0x80>
   1c210:	80000015 	stw	zero,0(r16)
   1c214:	80000115 	stw	zero,4(r16)
   1c218:	008006c4 	movi	r2,27
   1c21c:	11801a2e 	bgeu	r2,r6,1c288 <_calloc_r+0xcc>
   1c220:	80000215 	stw	zero,8(r16)
   1c224:	80000315 	stw	zero,12(r16)
   1c228:	30c0151e 	bne	r6,r3,1c280 <_calloc_r+0xc4>
   1c22c:	80000415 	stw	zero,16(r16)
   1c230:	80800604 	addi	r2,r16,24
   1c234:	80000515 	stw	zero,20(r16)
   1c238:	00000106 	br	1c240 <_calloc_r+0x84>
   1c23c:	8005883a 	mov	r2,r16
   1c240:	10000015 	stw	zero,0(r2)
   1c244:	10000115 	stw	zero,4(r2)
   1c248:	10000215 	stw	zero,8(r2)
   1c24c:	8005883a 	mov	r2,r16
   1c250:	dfc00117 	ldw	ra,4(sp)
   1c254:	dc000017 	ldw	r16,0(sp)
   1c258:	dec00204 	addi	sp,sp,8
   1c25c:	f800283a 	ret
   1c260:	000b883a 	mov	r5,zero
   1c264:	8009883a 	mov	r4,r16
   1c268:	0014a640 	call	14a64 <memset>
   1c26c:	8005883a 	mov	r2,r16
   1c270:	dfc00117 	ldw	ra,4(sp)
   1c274:	dc000017 	ldw	r16,0(sp)
   1c278:	dec00204 	addi	sp,sp,8
   1c27c:	f800283a 	ret
   1c280:	80800404 	addi	r2,r16,16
   1c284:	003fee06 	br	1c240 <_gp+0xffff5898>
   1c288:	80800204 	addi	r2,r16,8
   1c28c:	003fec06 	br	1c240 <_gp+0xffff5898>
   1c290:	0005883a 	mov	r2,zero
   1c294:	003fee06 	br	1c250 <_gp+0xffff58a8>

0001c298 <memmove>:
   1c298:	2005883a 	mov	r2,r4
   1c29c:	29000b2e 	bgeu	r5,r4,1c2cc <memmove+0x34>
   1c2a0:	298f883a 	add	r7,r5,r6
   1c2a4:	21c0092e 	bgeu	r4,r7,1c2cc <memmove+0x34>
   1c2a8:	2187883a 	add	r3,r4,r6
   1c2ac:	198bc83a 	sub	r5,r3,r6
   1c2b0:	30004826 	beq	r6,zero,1c3d4 <memmove+0x13c>
   1c2b4:	39ffffc4 	addi	r7,r7,-1
   1c2b8:	39000003 	ldbu	r4,0(r7)
   1c2bc:	18ffffc4 	addi	r3,r3,-1
   1c2c0:	19000005 	stb	r4,0(r3)
   1c2c4:	28fffb1e 	bne	r5,r3,1c2b4 <_gp+0xffff590c>
   1c2c8:	f800283a 	ret
   1c2cc:	00c003c4 	movi	r3,15
   1c2d0:	1980412e 	bgeu	r3,r6,1c3d8 <memmove+0x140>
   1c2d4:	2886b03a 	or	r3,r5,r2
   1c2d8:	18c000cc 	andi	r3,r3,3
   1c2dc:	1800401e 	bne	r3,zero,1c3e0 <memmove+0x148>
   1c2e0:	33fffc04 	addi	r15,r6,-16
   1c2e4:	781ed13a 	srli	r15,r15,4
   1c2e8:	28c00104 	addi	r3,r5,4
   1c2ec:	13400104 	addi	r13,r2,4
   1c2f0:	781c913a 	slli	r14,r15,4
   1c2f4:	2b000204 	addi	r12,r5,8
   1c2f8:	12c00204 	addi	r11,r2,8
   1c2fc:	73800504 	addi	r14,r14,20
   1c300:	2a800304 	addi	r10,r5,12
   1c304:	12400304 	addi	r9,r2,12
   1c308:	2b9d883a 	add	r14,r5,r14
   1c30c:	2811883a 	mov	r8,r5
   1c310:	100f883a 	mov	r7,r2
   1c314:	41000017 	ldw	r4,0(r8)
   1c318:	39c00404 	addi	r7,r7,16
   1c31c:	18c00404 	addi	r3,r3,16
   1c320:	393ffc15 	stw	r4,-16(r7)
   1c324:	193ffc17 	ldw	r4,-16(r3)
   1c328:	6b400404 	addi	r13,r13,16
   1c32c:	5ac00404 	addi	r11,r11,16
   1c330:	693ffc15 	stw	r4,-16(r13)
   1c334:	61000017 	ldw	r4,0(r12)
   1c338:	4a400404 	addi	r9,r9,16
   1c33c:	42000404 	addi	r8,r8,16
   1c340:	593ffc15 	stw	r4,-16(r11)
   1c344:	51000017 	ldw	r4,0(r10)
   1c348:	63000404 	addi	r12,r12,16
   1c34c:	52800404 	addi	r10,r10,16
   1c350:	493ffc15 	stw	r4,-16(r9)
   1c354:	1bbfef1e 	bne	r3,r14,1c314 <_gp+0xffff596c>
   1c358:	79000044 	addi	r4,r15,1
   1c35c:	2008913a 	slli	r4,r4,4
   1c360:	328003cc 	andi	r10,r6,15
   1c364:	02c000c4 	movi	r11,3
   1c368:	1107883a 	add	r3,r2,r4
   1c36c:	290b883a 	add	r5,r5,r4
   1c370:	5a801e2e 	bgeu	r11,r10,1c3ec <memmove+0x154>
   1c374:	1813883a 	mov	r9,r3
   1c378:	2811883a 	mov	r8,r5
   1c37c:	500f883a 	mov	r7,r10
   1c380:	41000017 	ldw	r4,0(r8)
   1c384:	4a400104 	addi	r9,r9,4
   1c388:	39ffff04 	addi	r7,r7,-4
   1c38c:	493fff15 	stw	r4,-4(r9)
   1c390:	42000104 	addi	r8,r8,4
   1c394:	59fffa36 	bltu	r11,r7,1c380 <_gp+0xffff59d8>
   1c398:	513fff04 	addi	r4,r10,-4
   1c39c:	2008d0ba 	srli	r4,r4,2
   1c3a0:	318000cc 	andi	r6,r6,3
   1c3a4:	21000044 	addi	r4,r4,1
   1c3a8:	2109883a 	add	r4,r4,r4
   1c3ac:	2109883a 	add	r4,r4,r4
   1c3b0:	1907883a 	add	r3,r3,r4
   1c3b4:	290b883a 	add	r5,r5,r4
   1c3b8:	30000b26 	beq	r6,zero,1c3e8 <memmove+0x150>
   1c3bc:	198d883a 	add	r6,r3,r6
   1c3c0:	29c00003 	ldbu	r7,0(r5)
   1c3c4:	18c00044 	addi	r3,r3,1
   1c3c8:	29400044 	addi	r5,r5,1
   1c3cc:	19ffffc5 	stb	r7,-1(r3)
   1c3d0:	19bffb1e 	bne	r3,r6,1c3c0 <_gp+0xffff5a18>
   1c3d4:	f800283a 	ret
   1c3d8:	1007883a 	mov	r3,r2
   1c3dc:	003ff606 	br	1c3b8 <_gp+0xffff5a10>
   1c3e0:	1007883a 	mov	r3,r2
   1c3e4:	003ff506 	br	1c3bc <_gp+0xffff5a14>
   1c3e8:	f800283a 	ret
   1c3ec:	500d883a 	mov	r6,r10
   1c3f0:	003ff106 	br	1c3b8 <_gp+0xffff5a10>

0001c3f4 <_realloc_r>:
   1c3f4:	defff604 	addi	sp,sp,-40
   1c3f8:	dc800215 	stw	r18,8(sp)
   1c3fc:	dfc00915 	stw	ra,36(sp)
   1c400:	df000815 	stw	fp,32(sp)
   1c404:	ddc00715 	stw	r23,28(sp)
   1c408:	dd800615 	stw	r22,24(sp)
   1c40c:	dd400515 	stw	r21,20(sp)
   1c410:	dd000415 	stw	r20,16(sp)
   1c414:	dcc00315 	stw	r19,12(sp)
   1c418:	dc400115 	stw	r17,4(sp)
   1c41c:	dc000015 	stw	r16,0(sp)
   1c420:	3025883a 	mov	r18,r6
   1c424:	2800b726 	beq	r5,zero,1c704 <_realloc_r+0x310>
   1c428:	282b883a 	mov	r21,r5
   1c42c:	2029883a 	mov	r20,r4
   1c430:	001d8980 	call	1d898 <__malloc_lock>
   1c434:	a8bfff17 	ldw	r2,-4(r21)
   1c438:	043fff04 	movi	r16,-4
   1c43c:	90c002c4 	addi	r3,r18,11
   1c440:	01000584 	movi	r4,22
   1c444:	acfffe04 	addi	r19,r21,-8
   1c448:	1420703a 	and	r16,r2,r16
   1c44c:	20c0332e 	bgeu	r4,r3,1c51c <_realloc_r+0x128>
   1c450:	047ffe04 	movi	r17,-8
   1c454:	1c62703a 	and	r17,r3,r17
   1c458:	8807883a 	mov	r3,r17
   1c45c:	88005816 	blt	r17,zero,1c5c0 <_realloc_r+0x1cc>
   1c460:	8c805736 	bltu	r17,r18,1c5c0 <_realloc_r+0x1cc>
   1c464:	80c0300e 	bge	r16,r3,1c528 <_realloc_r+0x134>
   1c468:	070000b4 	movhi	fp,2
   1c46c:	e7392904 	addi	fp,fp,-7004
   1c470:	e1c00217 	ldw	r7,8(fp)
   1c474:	9c09883a 	add	r4,r19,r16
   1c478:	22000117 	ldw	r8,4(r4)
   1c47c:	21c06326 	beq	r4,r7,1c60c <_realloc_r+0x218>
   1c480:	017fff84 	movi	r5,-2
   1c484:	414a703a 	and	r5,r8,r5
   1c488:	214b883a 	add	r5,r4,r5
   1c48c:	29800117 	ldw	r6,4(r5)
   1c490:	3180004c 	andi	r6,r6,1
   1c494:	30003f26 	beq	r6,zero,1c594 <_realloc_r+0x1a0>
   1c498:	1080004c 	andi	r2,r2,1
   1c49c:	10008326 	beq	r2,zero,1c6ac <_realloc_r+0x2b8>
   1c4a0:	900b883a 	mov	r5,r18
   1c4a4:	a009883a 	mov	r4,r20
   1c4a8:	00142580 	call	14258 <_malloc_r>
   1c4ac:	1025883a 	mov	r18,r2
   1c4b0:	10011e26 	beq	r2,zero,1c92c <_realloc_r+0x538>
   1c4b4:	a93fff17 	ldw	r4,-4(r21)
   1c4b8:	10fffe04 	addi	r3,r2,-8
   1c4bc:	00bfff84 	movi	r2,-2
   1c4c0:	2084703a 	and	r2,r4,r2
   1c4c4:	9885883a 	add	r2,r19,r2
   1c4c8:	1880ee26 	beq	r3,r2,1c884 <_realloc_r+0x490>
   1c4cc:	81bfff04 	addi	r6,r16,-4
   1c4d0:	00800904 	movi	r2,36
   1c4d4:	1180b836 	bltu	r2,r6,1c7b8 <_realloc_r+0x3c4>
   1c4d8:	00c004c4 	movi	r3,19
   1c4dc:	19809636 	bltu	r3,r6,1c738 <_realloc_r+0x344>
   1c4e0:	9005883a 	mov	r2,r18
   1c4e4:	a807883a 	mov	r3,r21
   1c4e8:	19000017 	ldw	r4,0(r3)
   1c4ec:	11000015 	stw	r4,0(r2)
   1c4f0:	19000117 	ldw	r4,4(r3)
   1c4f4:	11000115 	stw	r4,4(r2)
   1c4f8:	18c00217 	ldw	r3,8(r3)
   1c4fc:	10c00215 	stw	r3,8(r2)
   1c500:	a80b883a 	mov	r5,r21
   1c504:	a009883a 	mov	r4,r20
   1c508:	001938c0 	call	1938c <_free_r>
   1c50c:	a009883a 	mov	r4,r20
   1c510:	001d89c0 	call	1d89c <__malloc_unlock>
   1c514:	9005883a 	mov	r2,r18
   1c518:	00001206 	br	1c564 <_realloc_r+0x170>
   1c51c:	00c00404 	movi	r3,16
   1c520:	1823883a 	mov	r17,r3
   1c524:	003fce06 	br	1c460 <_gp+0xffff5ab8>
   1c528:	a825883a 	mov	r18,r21
   1c52c:	8445c83a 	sub	r2,r16,r17
   1c530:	00c003c4 	movi	r3,15
   1c534:	18802636 	bltu	r3,r2,1c5d0 <_realloc_r+0x1dc>
   1c538:	99800117 	ldw	r6,4(r19)
   1c53c:	9c07883a 	add	r3,r19,r16
   1c540:	3180004c 	andi	r6,r6,1
   1c544:	3420b03a 	or	r16,r6,r16
   1c548:	9c000115 	stw	r16,4(r19)
   1c54c:	18800117 	ldw	r2,4(r3)
   1c550:	10800054 	ori	r2,r2,1
   1c554:	18800115 	stw	r2,4(r3)
   1c558:	a009883a 	mov	r4,r20
   1c55c:	001d89c0 	call	1d89c <__malloc_unlock>
   1c560:	9005883a 	mov	r2,r18
   1c564:	dfc00917 	ldw	ra,36(sp)
   1c568:	df000817 	ldw	fp,32(sp)
   1c56c:	ddc00717 	ldw	r23,28(sp)
   1c570:	dd800617 	ldw	r22,24(sp)
   1c574:	dd400517 	ldw	r21,20(sp)
   1c578:	dd000417 	ldw	r20,16(sp)
   1c57c:	dcc00317 	ldw	r19,12(sp)
   1c580:	dc800217 	ldw	r18,8(sp)
   1c584:	dc400117 	ldw	r17,4(sp)
   1c588:	dc000017 	ldw	r16,0(sp)
   1c58c:	dec00a04 	addi	sp,sp,40
   1c590:	f800283a 	ret
   1c594:	017fff04 	movi	r5,-4
   1c598:	414a703a 	and	r5,r8,r5
   1c59c:	814d883a 	add	r6,r16,r5
   1c5a0:	30c01f16 	blt	r6,r3,1c620 <_realloc_r+0x22c>
   1c5a4:	20800317 	ldw	r2,12(r4)
   1c5a8:	20c00217 	ldw	r3,8(r4)
   1c5ac:	a825883a 	mov	r18,r21
   1c5b0:	3021883a 	mov	r16,r6
   1c5b4:	18800315 	stw	r2,12(r3)
   1c5b8:	10c00215 	stw	r3,8(r2)
   1c5bc:	003fdb06 	br	1c52c <_gp+0xffff5b84>
   1c5c0:	00800304 	movi	r2,12
   1c5c4:	a0800015 	stw	r2,0(r20)
   1c5c8:	0005883a 	mov	r2,zero
   1c5cc:	003fe506 	br	1c564 <_gp+0xffff5bbc>
   1c5d0:	98c00117 	ldw	r3,4(r19)
   1c5d4:	9c4b883a 	add	r5,r19,r17
   1c5d8:	11000054 	ori	r4,r2,1
   1c5dc:	18c0004c 	andi	r3,r3,1
   1c5e0:	1c62b03a 	or	r17,r3,r17
   1c5e4:	9c400115 	stw	r17,4(r19)
   1c5e8:	29000115 	stw	r4,4(r5)
   1c5ec:	2885883a 	add	r2,r5,r2
   1c5f0:	10c00117 	ldw	r3,4(r2)
   1c5f4:	29400204 	addi	r5,r5,8
   1c5f8:	a009883a 	mov	r4,r20
   1c5fc:	18c00054 	ori	r3,r3,1
   1c600:	10c00115 	stw	r3,4(r2)
   1c604:	001938c0 	call	1938c <_free_r>
   1c608:	003fd306 	br	1c558 <_gp+0xffff5bb0>
   1c60c:	017fff04 	movi	r5,-4
   1c610:	414a703a 	and	r5,r8,r5
   1c614:	89800404 	addi	r6,r17,16
   1c618:	8151883a 	add	r8,r16,r5
   1c61c:	4180590e 	bge	r8,r6,1c784 <_realloc_r+0x390>
   1c620:	1080004c 	andi	r2,r2,1
   1c624:	103f9e1e 	bne	r2,zero,1c4a0 <_gp+0xffff5af8>
   1c628:	adbffe17 	ldw	r22,-8(r21)
   1c62c:	00bfff04 	movi	r2,-4
   1c630:	9dadc83a 	sub	r22,r19,r22
   1c634:	b1800117 	ldw	r6,4(r22)
   1c638:	3084703a 	and	r2,r6,r2
   1c63c:	20002026 	beq	r4,zero,1c6c0 <_realloc_r+0x2cc>
   1c640:	80af883a 	add	r23,r16,r2
   1c644:	b96f883a 	add	r23,r23,r5
   1c648:	21c05f26 	beq	r4,r7,1c7c8 <_realloc_r+0x3d4>
   1c64c:	b8c01c16 	blt	r23,r3,1c6c0 <_realloc_r+0x2cc>
   1c650:	20800317 	ldw	r2,12(r4)
   1c654:	20c00217 	ldw	r3,8(r4)
   1c658:	81bfff04 	addi	r6,r16,-4
   1c65c:	01000904 	movi	r4,36
   1c660:	18800315 	stw	r2,12(r3)
   1c664:	10c00215 	stw	r3,8(r2)
   1c668:	b0c00217 	ldw	r3,8(r22)
   1c66c:	b0800317 	ldw	r2,12(r22)
   1c670:	b4800204 	addi	r18,r22,8
   1c674:	18800315 	stw	r2,12(r3)
   1c678:	10c00215 	stw	r3,8(r2)
   1c67c:	21801b36 	bltu	r4,r6,1c6ec <_realloc_r+0x2f8>
   1c680:	008004c4 	movi	r2,19
   1c684:	1180352e 	bgeu	r2,r6,1c75c <_realloc_r+0x368>
   1c688:	a8800017 	ldw	r2,0(r21)
   1c68c:	b0800215 	stw	r2,8(r22)
   1c690:	a8800117 	ldw	r2,4(r21)
   1c694:	b0800315 	stw	r2,12(r22)
   1c698:	008006c4 	movi	r2,27
   1c69c:	11807f36 	bltu	r2,r6,1c89c <_realloc_r+0x4a8>
   1c6a0:	b0800404 	addi	r2,r22,16
   1c6a4:	ad400204 	addi	r21,r21,8
   1c6a8:	00002d06 	br	1c760 <_realloc_r+0x36c>
   1c6ac:	adbffe17 	ldw	r22,-8(r21)
   1c6b0:	00bfff04 	movi	r2,-4
   1c6b4:	9dadc83a 	sub	r22,r19,r22
   1c6b8:	b1000117 	ldw	r4,4(r22)
   1c6bc:	2084703a 	and	r2,r4,r2
   1c6c0:	b03f7726 	beq	r22,zero,1c4a0 <_gp+0xffff5af8>
   1c6c4:	80af883a 	add	r23,r16,r2
   1c6c8:	b8ff7516 	blt	r23,r3,1c4a0 <_gp+0xffff5af8>
   1c6cc:	b0800317 	ldw	r2,12(r22)
   1c6d0:	b0c00217 	ldw	r3,8(r22)
   1c6d4:	81bfff04 	addi	r6,r16,-4
   1c6d8:	01000904 	movi	r4,36
   1c6dc:	18800315 	stw	r2,12(r3)
   1c6e0:	10c00215 	stw	r3,8(r2)
   1c6e4:	b4800204 	addi	r18,r22,8
   1c6e8:	21bfe52e 	bgeu	r4,r6,1c680 <_gp+0xffff5cd8>
   1c6ec:	a80b883a 	mov	r5,r21
   1c6f0:	9009883a 	mov	r4,r18
   1c6f4:	001c2980 	call	1c298 <memmove>
   1c6f8:	b821883a 	mov	r16,r23
   1c6fc:	b027883a 	mov	r19,r22
   1c700:	003f8a06 	br	1c52c <_gp+0xffff5b84>
   1c704:	300b883a 	mov	r5,r6
   1c708:	dfc00917 	ldw	ra,36(sp)
   1c70c:	df000817 	ldw	fp,32(sp)
   1c710:	ddc00717 	ldw	r23,28(sp)
   1c714:	dd800617 	ldw	r22,24(sp)
   1c718:	dd400517 	ldw	r21,20(sp)
   1c71c:	dd000417 	ldw	r20,16(sp)
   1c720:	dcc00317 	ldw	r19,12(sp)
   1c724:	dc800217 	ldw	r18,8(sp)
   1c728:	dc400117 	ldw	r17,4(sp)
   1c72c:	dc000017 	ldw	r16,0(sp)
   1c730:	dec00a04 	addi	sp,sp,40
   1c734:	00142581 	jmpi	14258 <_malloc_r>
   1c738:	a8c00017 	ldw	r3,0(r21)
   1c73c:	90c00015 	stw	r3,0(r18)
   1c740:	a8c00117 	ldw	r3,4(r21)
   1c744:	90c00115 	stw	r3,4(r18)
   1c748:	00c006c4 	movi	r3,27
   1c74c:	19804536 	bltu	r3,r6,1c864 <_realloc_r+0x470>
   1c750:	90800204 	addi	r2,r18,8
   1c754:	a8c00204 	addi	r3,r21,8
   1c758:	003f6306 	br	1c4e8 <_gp+0xffff5b40>
   1c75c:	9005883a 	mov	r2,r18
   1c760:	a8c00017 	ldw	r3,0(r21)
   1c764:	b821883a 	mov	r16,r23
   1c768:	b027883a 	mov	r19,r22
   1c76c:	10c00015 	stw	r3,0(r2)
   1c770:	a8c00117 	ldw	r3,4(r21)
   1c774:	10c00115 	stw	r3,4(r2)
   1c778:	a8c00217 	ldw	r3,8(r21)
   1c77c:	10c00215 	stw	r3,8(r2)
   1c780:	003f6a06 	br	1c52c <_gp+0xffff5b84>
   1c784:	9c67883a 	add	r19,r19,r17
   1c788:	4445c83a 	sub	r2,r8,r17
   1c78c:	e4c00215 	stw	r19,8(fp)
   1c790:	10800054 	ori	r2,r2,1
   1c794:	98800115 	stw	r2,4(r19)
   1c798:	a8bfff17 	ldw	r2,-4(r21)
   1c79c:	a009883a 	mov	r4,r20
   1c7a0:	1080004c 	andi	r2,r2,1
   1c7a4:	1462b03a 	or	r17,r2,r17
   1c7a8:	ac7fff15 	stw	r17,-4(r21)
   1c7ac:	001d89c0 	call	1d89c <__malloc_unlock>
   1c7b0:	a805883a 	mov	r2,r21
   1c7b4:	003f6b06 	br	1c564 <_gp+0xffff5bbc>
   1c7b8:	a80b883a 	mov	r5,r21
   1c7bc:	9009883a 	mov	r4,r18
   1c7c0:	001c2980 	call	1c298 <memmove>
   1c7c4:	003f4e06 	br	1c500 <_gp+0xffff5b58>
   1c7c8:	89000404 	addi	r4,r17,16
   1c7cc:	b93fbc16 	blt	r23,r4,1c6c0 <_gp+0xffff5d18>
   1c7d0:	b0800317 	ldw	r2,12(r22)
   1c7d4:	b0c00217 	ldw	r3,8(r22)
   1c7d8:	81bfff04 	addi	r6,r16,-4
   1c7dc:	01000904 	movi	r4,36
   1c7e0:	18800315 	stw	r2,12(r3)
   1c7e4:	10c00215 	stw	r3,8(r2)
   1c7e8:	b4800204 	addi	r18,r22,8
   1c7ec:	21804336 	bltu	r4,r6,1c8fc <_realloc_r+0x508>
   1c7f0:	008004c4 	movi	r2,19
   1c7f4:	11803f2e 	bgeu	r2,r6,1c8f4 <_realloc_r+0x500>
   1c7f8:	a8800017 	ldw	r2,0(r21)
   1c7fc:	b0800215 	stw	r2,8(r22)
   1c800:	a8800117 	ldw	r2,4(r21)
   1c804:	b0800315 	stw	r2,12(r22)
   1c808:	008006c4 	movi	r2,27
   1c80c:	11803f36 	bltu	r2,r6,1c90c <_realloc_r+0x518>
   1c810:	b0800404 	addi	r2,r22,16
   1c814:	ad400204 	addi	r21,r21,8
   1c818:	a8c00017 	ldw	r3,0(r21)
   1c81c:	10c00015 	stw	r3,0(r2)
   1c820:	a8c00117 	ldw	r3,4(r21)
   1c824:	10c00115 	stw	r3,4(r2)
   1c828:	a8c00217 	ldw	r3,8(r21)
   1c82c:	10c00215 	stw	r3,8(r2)
   1c830:	b447883a 	add	r3,r22,r17
   1c834:	bc45c83a 	sub	r2,r23,r17
   1c838:	e0c00215 	stw	r3,8(fp)
   1c83c:	10800054 	ori	r2,r2,1
   1c840:	18800115 	stw	r2,4(r3)
   1c844:	b0800117 	ldw	r2,4(r22)
   1c848:	a009883a 	mov	r4,r20
   1c84c:	1080004c 	andi	r2,r2,1
   1c850:	1462b03a 	or	r17,r2,r17
   1c854:	b4400115 	stw	r17,4(r22)
   1c858:	001d89c0 	call	1d89c <__malloc_unlock>
   1c85c:	9005883a 	mov	r2,r18
   1c860:	003f4006 	br	1c564 <_gp+0xffff5bbc>
   1c864:	a8c00217 	ldw	r3,8(r21)
   1c868:	90c00215 	stw	r3,8(r18)
   1c86c:	a8c00317 	ldw	r3,12(r21)
   1c870:	90c00315 	stw	r3,12(r18)
   1c874:	30801126 	beq	r6,r2,1c8bc <_realloc_r+0x4c8>
   1c878:	90800404 	addi	r2,r18,16
   1c87c:	a8c00404 	addi	r3,r21,16
   1c880:	003f1906 	br	1c4e8 <_gp+0xffff5b40>
   1c884:	90ffff17 	ldw	r3,-4(r18)
   1c888:	00bfff04 	movi	r2,-4
   1c88c:	a825883a 	mov	r18,r21
   1c890:	1884703a 	and	r2,r3,r2
   1c894:	80a1883a 	add	r16,r16,r2
   1c898:	003f2406 	br	1c52c <_gp+0xffff5b84>
   1c89c:	a8800217 	ldw	r2,8(r21)
   1c8a0:	b0800415 	stw	r2,16(r22)
   1c8a4:	a8800317 	ldw	r2,12(r21)
   1c8a8:	b0800515 	stw	r2,20(r22)
   1c8ac:	31000a26 	beq	r6,r4,1c8d8 <_realloc_r+0x4e4>
   1c8b0:	b0800604 	addi	r2,r22,24
   1c8b4:	ad400404 	addi	r21,r21,16
   1c8b8:	003fa906 	br	1c760 <_gp+0xffff5db8>
   1c8bc:	a9000417 	ldw	r4,16(r21)
   1c8c0:	90800604 	addi	r2,r18,24
   1c8c4:	a8c00604 	addi	r3,r21,24
   1c8c8:	91000415 	stw	r4,16(r18)
   1c8cc:	a9000517 	ldw	r4,20(r21)
   1c8d0:	91000515 	stw	r4,20(r18)
   1c8d4:	003f0406 	br	1c4e8 <_gp+0xffff5b40>
   1c8d8:	a8c00417 	ldw	r3,16(r21)
   1c8dc:	ad400604 	addi	r21,r21,24
   1c8e0:	b0800804 	addi	r2,r22,32
   1c8e4:	b0c00615 	stw	r3,24(r22)
   1c8e8:	a8ffff17 	ldw	r3,-4(r21)
   1c8ec:	b0c00715 	stw	r3,28(r22)
   1c8f0:	003f9b06 	br	1c760 <_gp+0xffff5db8>
   1c8f4:	9005883a 	mov	r2,r18
   1c8f8:	003fc706 	br	1c818 <_gp+0xffff5e70>
   1c8fc:	a80b883a 	mov	r5,r21
   1c900:	9009883a 	mov	r4,r18
   1c904:	001c2980 	call	1c298 <memmove>
   1c908:	003fc906 	br	1c830 <_gp+0xffff5e88>
   1c90c:	a8800217 	ldw	r2,8(r21)
   1c910:	b0800415 	stw	r2,16(r22)
   1c914:	a8800317 	ldw	r2,12(r21)
   1c918:	b0800515 	stw	r2,20(r22)
   1c91c:	31000726 	beq	r6,r4,1c93c <_realloc_r+0x548>
   1c920:	b0800604 	addi	r2,r22,24
   1c924:	ad400404 	addi	r21,r21,16
   1c928:	003fbb06 	br	1c818 <_gp+0xffff5e70>
   1c92c:	a009883a 	mov	r4,r20
   1c930:	001d89c0 	call	1d89c <__malloc_unlock>
   1c934:	0005883a 	mov	r2,zero
   1c938:	003f0a06 	br	1c564 <_gp+0xffff5bbc>
   1c93c:	a8c00417 	ldw	r3,16(r21)
   1c940:	ad400604 	addi	r21,r21,24
   1c944:	b0800804 	addi	r2,r22,32
   1c948:	b0c00615 	stw	r3,24(r22)
   1c94c:	a8ffff17 	ldw	r3,-4(r21)
   1c950:	b0c00715 	stw	r3,28(r22)
   1c954:	003fb006 	br	1c818 <_gp+0xffff5e70>

0001c958 <__udivdi3>:
   1c958:	defff404 	addi	sp,sp,-48
   1c95c:	dcc00515 	stw	r19,20(sp)
   1c960:	dc000215 	stw	r16,8(sp)
   1c964:	dfc00b15 	stw	ra,44(sp)
   1c968:	df000a15 	stw	fp,40(sp)
   1c96c:	ddc00915 	stw	r23,36(sp)
   1c970:	dd800815 	stw	r22,32(sp)
   1c974:	dd400715 	stw	r21,28(sp)
   1c978:	dd000615 	stw	r20,24(sp)
   1c97c:	dc800415 	stw	r18,16(sp)
   1c980:	dc400315 	stw	r17,12(sp)
   1c984:	2027883a 	mov	r19,r4
   1c988:	2821883a 	mov	r16,r5
   1c98c:	3800461e 	bne	r7,zero,1caa8 <__udivdi3+0x150>
   1c990:	3023883a 	mov	r17,r6
   1c994:	2025883a 	mov	r18,r4
   1c998:	2980572e 	bgeu	r5,r6,1caf8 <__udivdi3+0x1a0>
   1c99c:	00bfffd4 	movui	r2,65535
   1c9a0:	282d883a 	mov	r22,r5
   1c9a4:	1180b236 	bltu	r2,r6,1cc70 <__udivdi3+0x318>
   1c9a8:	00803fc4 	movi	r2,255
   1c9ac:	1185803a 	cmpltu	r2,r2,r6
   1c9b0:	100490fa 	slli	r2,r2,3
   1c9b4:	3086d83a 	srl	r3,r6,r2
   1c9b8:	010000b4 	movhi	r4,2
   1c9bc:	21376b04 	addi	r4,r4,-8788
   1c9c0:	20c7883a 	add	r3,r4,r3
   1c9c4:	18c00003 	ldbu	r3,0(r3)
   1c9c8:	1885883a 	add	r2,r3,r2
   1c9cc:	00c00804 	movi	r3,32
   1c9d0:	1887c83a 	sub	r3,r3,r2
   1c9d4:	18000526 	beq	r3,zero,1c9ec <__udivdi3+0x94>
   1c9d8:	80e0983a 	sll	r16,r16,r3
   1c9dc:	9884d83a 	srl	r2,r19,r2
   1c9e0:	30e2983a 	sll	r17,r6,r3
   1c9e4:	98e4983a 	sll	r18,r19,r3
   1c9e8:	142cb03a 	or	r22,r2,r16
   1c9ec:	882ad43a 	srli	r21,r17,16
   1c9f0:	b009883a 	mov	r4,r22
   1c9f4:	8d3fffcc 	andi	r20,r17,65535
   1c9f8:	a80b883a 	mov	r5,r21
   1c9fc:	00119bc0 	call	119bc <__umodsi3>
   1ca00:	b009883a 	mov	r4,r22
   1ca04:	a80b883a 	mov	r5,r21
   1ca08:	1027883a 	mov	r19,r2
   1ca0c:	00119580 	call	11958 <__udivsi3>
   1ca10:	100b883a 	mov	r5,r2
   1ca14:	a009883a 	mov	r4,r20
   1ca18:	102d883a 	mov	r22,r2
   1ca1c:	001411c0 	call	1411c <__mulsi3>
   1ca20:	9826943a 	slli	r19,r19,16
   1ca24:	9006d43a 	srli	r3,r18,16
   1ca28:	1cc6b03a 	or	r3,r3,r19
   1ca2c:	1880052e 	bgeu	r3,r2,1ca44 <__udivdi3+0xec>
   1ca30:	1c47883a 	add	r3,r3,r17
   1ca34:	b13fffc4 	addi	r4,r22,-1
   1ca38:	1c400136 	bltu	r3,r17,1ca40 <__udivdi3+0xe8>
   1ca3c:	18814236 	bltu	r3,r2,1cf48 <__udivdi3+0x5f0>
   1ca40:	202d883a 	mov	r22,r4
   1ca44:	18a1c83a 	sub	r16,r3,r2
   1ca48:	8009883a 	mov	r4,r16
   1ca4c:	a80b883a 	mov	r5,r21
   1ca50:	00119bc0 	call	119bc <__umodsi3>
   1ca54:	1027883a 	mov	r19,r2
   1ca58:	8009883a 	mov	r4,r16
   1ca5c:	a80b883a 	mov	r5,r21
   1ca60:	9826943a 	slli	r19,r19,16
   1ca64:	00119580 	call	11958 <__udivsi3>
   1ca68:	100b883a 	mov	r5,r2
   1ca6c:	a009883a 	mov	r4,r20
   1ca70:	94bfffcc 	andi	r18,r18,65535
   1ca74:	1021883a 	mov	r16,r2
   1ca78:	94e4b03a 	or	r18,r18,r19
   1ca7c:	001411c0 	call	1411c <__mulsi3>
   1ca80:	9080052e 	bgeu	r18,r2,1ca98 <__udivdi3+0x140>
   1ca84:	8ca5883a 	add	r18,r17,r18
   1ca88:	80ffffc4 	addi	r3,r16,-1
   1ca8c:	94410c36 	bltu	r18,r17,1cec0 <__udivdi3+0x568>
   1ca90:	90810b2e 	bgeu	r18,r2,1cec0 <__udivdi3+0x568>
   1ca94:	843fff84 	addi	r16,r16,-2
   1ca98:	b004943a 	slli	r2,r22,16
   1ca9c:	0007883a 	mov	r3,zero
   1caa0:	1404b03a 	or	r2,r2,r16
   1caa4:	00005e06 	br	1cc20 <__udivdi3+0x2c8>
   1caa8:	29c05b36 	bltu	r5,r7,1cc18 <__udivdi3+0x2c0>
   1caac:	00bfffd4 	movui	r2,65535
   1cab0:	11c0672e 	bgeu	r2,r7,1cc50 <__udivdi3+0x2f8>
   1cab4:	00804034 	movhi	r2,256
   1cab8:	10bfffc4 	addi	r2,r2,-1
   1cabc:	11c10a36 	bltu	r2,r7,1cee8 <__udivdi3+0x590>
   1cac0:	00800404 	movi	r2,16
   1cac4:	3886d83a 	srl	r3,r7,r2
   1cac8:	010000b4 	movhi	r4,2
   1cacc:	21376b04 	addi	r4,r4,-8788
   1cad0:	20c7883a 	add	r3,r4,r3
   1cad4:	18c00003 	ldbu	r3,0(r3)
   1cad8:	05c00804 	movi	r23,32
   1cadc:	1885883a 	add	r2,r3,r2
   1cae0:	b8afc83a 	sub	r23,r23,r2
   1cae4:	b800671e 	bne	r23,zero,1cc84 <__udivdi3+0x32c>
   1cae8:	3c010536 	bltu	r7,r16,1cf00 <__udivdi3+0x5a8>
   1caec:	9985403a 	cmpgeu	r2,r19,r6
   1caf0:	0007883a 	mov	r3,zero
   1caf4:	00004a06 	br	1cc20 <__udivdi3+0x2c8>
   1caf8:	3000041e 	bne	r6,zero,1cb0c <__udivdi3+0x1b4>
   1cafc:	000b883a 	mov	r5,zero
   1cb00:	01000044 	movi	r4,1
   1cb04:	00119580 	call	11958 <__udivsi3>
   1cb08:	1023883a 	mov	r17,r2
   1cb0c:	00bfffd4 	movui	r2,65535
   1cb10:	1440532e 	bgeu	r2,r17,1cc60 <__udivdi3+0x308>
   1cb14:	00804034 	movhi	r2,256
   1cb18:	10bfffc4 	addi	r2,r2,-1
   1cb1c:	1440f436 	bltu	r2,r17,1cef0 <__udivdi3+0x598>
   1cb20:	00800404 	movi	r2,16
   1cb24:	8886d83a 	srl	r3,r17,r2
   1cb28:	010000b4 	movhi	r4,2
   1cb2c:	21376b04 	addi	r4,r4,-8788
   1cb30:	20c7883a 	add	r3,r4,r3
   1cb34:	18c00003 	ldbu	r3,0(r3)
   1cb38:	1885883a 	add	r2,r3,r2
   1cb3c:	00c00804 	movi	r3,32
   1cb40:	1887c83a 	sub	r3,r3,r2
   1cb44:	1800a51e 	bne	r3,zero,1cddc <__udivdi3+0x484>
   1cb48:	882ad43a 	srli	r21,r17,16
   1cb4c:	8461c83a 	sub	r16,r16,r17
   1cb50:	8d3fffcc 	andi	r20,r17,65535
   1cb54:	00c00044 	movi	r3,1
   1cb58:	a80b883a 	mov	r5,r21
   1cb5c:	8009883a 	mov	r4,r16
   1cb60:	d8c00115 	stw	r3,4(sp)
   1cb64:	00119bc0 	call	119bc <__umodsi3>
   1cb68:	a80b883a 	mov	r5,r21
   1cb6c:	8009883a 	mov	r4,r16
   1cb70:	1027883a 	mov	r19,r2
   1cb74:	00119580 	call	11958 <__udivsi3>
   1cb78:	a00b883a 	mov	r5,r20
   1cb7c:	1009883a 	mov	r4,r2
   1cb80:	102d883a 	mov	r22,r2
   1cb84:	001411c0 	call	1411c <__mulsi3>
   1cb88:	9826943a 	slli	r19,r19,16
   1cb8c:	900ed43a 	srli	r7,r18,16
   1cb90:	d8c00117 	ldw	r3,4(sp)
   1cb94:	3cceb03a 	or	r7,r7,r19
   1cb98:	3880052e 	bgeu	r7,r2,1cbb0 <__udivdi3+0x258>
   1cb9c:	3c4f883a 	add	r7,r7,r17
   1cba0:	b13fffc4 	addi	r4,r22,-1
   1cba4:	3c400136 	bltu	r7,r17,1cbac <__udivdi3+0x254>
   1cba8:	3880e436 	bltu	r7,r2,1cf3c <__udivdi3+0x5e4>
   1cbac:	202d883a 	mov	r22,r4
   1cbb0:	38a1c83a 	sub	r16,r7,r2
   1cbb4:	8009883a 	mov	r4,r16
   1cbb8:	a80b883a 	mov	r5,r21
   1cbbc:	d8c00115 	stw	r3,4(sp)
   1cbc0:	00119bc0 	call	119bc <__umodsi3>
   1cbc4:	1027883a 	mov	r19,r2
   1cbc8:	8009883a 	mov	r4,r16
   1cbcc:	a80b883a 	mov	r5,r21
   1cbd0:	9826943a 	slli	r19,r19,16
   1cbd4:	00119580 	call	11958 <__udivsi3>
   1cbd8:	a00b883a 	mov	r5,r20
   1cbdc:	1009883a 	mov	r4,r2
   1cbe0:	94bfffcc 	andi	r18,r18,65535
   1cbe4:	1021883a 	mov	r16,r2
   1cbe8:	94e4b03a 	or	r18,r18,r19
   1cbec:	001411c0 	call	1411c <__mulsi3>
   1cbf0:	d8c00117 	ldw	r3,4(sp)
   1cbf4:	9080052e 	bgeu	r18,r2,1cc0c <__udivdi3+0x2b4>
   1cbf8:	8ca5883a 	add	r18,r17,r18
   1cbfc:	813fffc4 	addi	r4,r16,-1
   1cc00:	9440ad36 	bltu	r18,r17,1ceb8 <__udivdi3+0x560>
   1cc04:	9080ac2e 	bgeu	r18,r2,1ceb8 <__udivdi3+0x560>
   1cc08:	843fff84 	addi	r16,r16,-2
   1cc0c:	b004943a 	slli	r2,r22,16
   1cc10:	1404b03a 	or	r2,r2,r16
   1cc14:	00000206 	br	1cc20 <__udivdi3+0x2c8>
   1cc18:	0007883a 	mov	r3,zero
   1cc1c:	0005883a 	mov	r2,zero
   1cc20:	dfc00b17 	ldw	ra,44(sp)
   1cc24:	df000a17 	ldw	fp,40(sp)
   1cc28:	ddc00917 	ldw	r23,36(sp)
   1cc2c:	dd800817 	ldw	r22,32(sp)
   1cc30:	dd400717 	ldw	r21,28(sp)
   1cc34:	dd000617 	ldw	r20,24(sp)
   1cc38:	dcc00517 	ldw	r19,20(sp)
   1cc3c:	dc800417 	ldw	r18,16(sp)
   1cc40:	dc400317 	ldw	r17,12(sp)
   1cc44:	dc000217 	ldw	r16,8(sp)
   1cc48:	dec00c04 	addi	sp,sp,48
   1cc4c:	f800283a 	ret
   1cc50:	00803fc4 	movi	r2,255
   1cc54:	11c5803a 	cmpltu	r2,r2,r7
   1cc58:	100490fa 	slli	r2,r2,3
   1cc5c:	003f9906 	br	1cac4 <_gp+0xffff611c>
   1cc60:	00803fc4 	movi	r2,255
   1cc64:	1445803a 	cmpltu	r2,r2,r17
   1cc68:	100490fa 	slli	r2,r2,3
   1cc6c:	003fad06 	br	1cb24 <_gp+0xffff617c>
   1cc70:	00804034 	movhi	r2,256
   1cc74:	10bfffc4 	addi	r2,r2,-1
   1cc78:	11809f36 	bltu	r2,r6,1cef8 <__udivdi3+0x5a0>
   1cc7c:	00800404 	movi	r2,16
   1cc80:	003f4c06 	br	1c9b4 <_gp+0xffff600c>
   1cc84:	3dce983a 	sll	r7,r7,r23
   1cc88:	30b8d83a 	srl	fp,r6,r2
   1cc8c:	80a2d83a 	srl	r17,r16,r2
   1cc90:	35cc983a 	sll	r6,r6,r23
   1cc94:	3f38b03a 	or	fp,r7,fp
   1cc98:	e024d43a 	srli	r18,fp,16
   1cc9c:	9884d83a 	srl	r2,r19,r2
   1cca0:	85e0983a 	sll	r16,r16,r23
   1cca4:	8809883a 	mov	r4,r17
   1cca8:	900b883a 	mov	r5,r18
   1ccac:	d9800015 	stw	r6,0(sp)
   1ccb0:	1420b03a 	or	r16,r2,r16
   1ccb4:	00119bc0 	call	119bc <__umodsi3>
   1ccb8:	900b883a 	mov	r5,r18
   1ccbc:	8809883a 	mov	r4,r17
   1ccc0:	1029883a 	mov	r20,r2
   1ccc4:	e5bfffcc 	andi	r22,fp,65535
   1ccc8:	00119580 	call	11958 <__udivsi3>
   1cccc:	100b883a 	mov	r5,r2
   1ccd0:	b009883a 	mov	r4,r22
   1ccd4:	102b883a 	mov	r21,r2
   1ccd8:	001411c0 	call	1411c <__mulsi3>
   1ccdc:	a028943a 	slli	r20,r20,16
   1cce0:	8006d43a 	srli	r3,r16,16
   1cce4:	1d06b03a 	or	r3,r3,r20
   1cce8:	1880042e 	bgeu	r3,r2,1ccfc <__udivdi3+0x3a4>
   1ccec:	1f07883a 	add	r3,r3,fp
   1ccf0:	a93fffc4 	addi	r4,r21,-1
   1ccf4:	1f00892e 	bgeu	r3,fp,1cf1c <__udivdi3+0x5c4>
   1ccf8:	202b883a 	mov	r21,r4
   1ccfc:	18a3c83a 	sub	r17,r3,r2
   1cd00:	8809883a 	mov	r4,r17
   1cd04:	900b883a 	mov	r5,r18
   1cd08:	00119bc0 	call	119bc <__umodsi3>
   1cd0c:	1029883a 	mov	r20,r2
   1cd10:	8809883a 	mov	r4,r17
   1cd14:	900b883a 	mov	r5,r18
   1cd18:	a028943a 	slli	r20,r20,16
   1cd1c:	00119580 	call	11958 <__udivsi3>
   1cd20:	100b883a 	mov	r5,r2
   1cd24:	b009883a 	mov	r4,r22
   1cd28:	843fffcc 	andi	r16,r16,65535
   1cd2c:	1023883a 	mov	r17,r2
   1cd30:	8520b03a 	or	r16,r16,r20
   1cd34:	001411c0 	call	1411c <__mulsi3>
   1cd38:	8080042e 	bgeu	r16,r2,1cd4c <__udivdi3+0x3f4>
   1cd3c:	8721883a 	add	r16,r16,fp
   1cd40:	88ffffc4 	addi	r3,r17,-1
   1cd44:	8700712e 	bgeu	r16,fp,1cf0c <__udivdi3+0x5b4>
   1cd48:	1823883a 	mov	r17,r3
   1cd4c:	a80e943a 	slli	r7,r21,16
   1cd50:	d8c00017 	ldw	r3,0(sp)
   1cd54:	80a1c83a 	sub	r16,r16,r2
   1cd58:	3c64b03a 	or	r18,r7,r17
   1cd5c:	1d3fffcc 	andi	r20,r3,65535
   1cd60:	9022d43a 	srli	r17,r18,16
   1cd64:	95bfffcc 	andi	r22,r18,65535
   1cd68:	a00b883a 	mov	r5,r20
   1cd6c:	b009883a 	mov	r4,r22
   1cd70:	182ad43a 	srli	r21,r3,16
   1cd74:	001411c0 	call	1411c <__mulsi3>
   1cd78:	a00b883a 	mov	r5,r20
   1cd7c:	8809883a 	mov	r4,r17
   1cd80:	1039883a 	mov	fp,r2
   1cd84:	001411c0 	call	1411c <__mulsi3>
   1cd88:	8809883a 	mov	r4,r17
   1cd8c:	a80b883a 	mov	r5,r21
   1cd90:	1029883a 	mov	r20,r2
   1cd94:	001411c0 	call	1411c <__mulsi3>
   1cd98:	a80b883a 	mov	r5,r21
   1cd9c:	b009883a 	mov	r4,r22
   1cda0:	1023883a 	mov	r17,r2
   1cda4:	001411c0 	call	1411c <__mulsi3>
   1cda8:	e006d43a 	srli	r3,fp,16
   1cdac:	1505883a 	add	r2,r2,r20
   1cdb0:	1887883a 	add	r3,r3,r2
   1cdb4:	1d00022e 	bgeu	r3,r20,1cdc0 <__udivdi3+0x468>
   1cdb8:	00800074 	movhi	r2,1
   1cdbc:	88a3883a 	add	r17,r17,r2
   1cdc0:	1804d43a 	srli	r2,r3,16
   1cdc4:	1463883a 	add	r17,r2,r17
   1cdc8:	84404436 	bltu	r16,r17,1cedc <__udivdi3+0x584>
   1cdcc:	84403e26 	beq	r16,r17,1cec8 <__udivdi3+0x570>
   1cdd0:	9005883a 	mov	r2,r18
   1cdd4:	0007883a 	mov	r3,zero
   1cdd8:	003f9106 	br	1cc20 <_gp+0xffff6278>
   1cddc:	88e2983a 	sll	r17,r17,r3
   1cde0:	80aed83a 	srl	r23,r16,r2
   1cde4:	80e0983a 	sll	r16,r16,r3
   1cde8:	882ad43a 	srli	r21,r17,16
   1cdec:	9884d83a 	srl	r2,r19,r2
   1cdf0:	b809883a 	mov	r4,r23
   1cdf4:	a80b883a 	mov	r5,r21
   1cdf8:	98e4983a 	sll	r18,r19,r3
   1cdfc:	142cb03a 	or	r22,r2,r16
   1ce00:	00119bc0 	call	119bc <__umodsi3>
   1ce04:	b809883a 	mov	r4,r23
   1ce08:	a80b883a 	mov	r5,r21
   1ce0c:	1027883a 	mov	r19,r2
   1ce10:	8d3fffcc 	andi	r20,r17,65535
   1ce14:	00119580 	call	11958 <__udivsi3>
   1ce18:	a009883a 	mov	r4,r20
   1ce1c:	100b883a 	mov	r5,r2
   1ce20:	102f883a 	mov	r23,r2
   1ce24:	001411c0 	call	1411c <__mulsi3>
   1ce28:	9826943a 	slli	r19,r19,16
   1ce2c:	b008d43a 	srli	r4,r22,16
   1ce30:	24c8b03a 	or	r4,r4,r19
   1ce34:	2080062e 	bgeu	r4,r2,1ce50 <__udivdi3+0x4f8>
   1ce38:	2449883a 	add	r4,r4,r17
   1ce3c:	b8ffffc4 	addi	r3,r23,-1
   1ce40:	24403c36 	bltu	r4,r17,1cf34 <__udivdi3+0x5dc>
   1ce44:	20803b2e 	bgeu	r4,r2,1cf34 <__udivdi3+0x5dc>
   1ce48:	bdffff84 	addi	r23,r23,-2
   1ce4c:	2449883a 	add	r4,r4,r17
   1ce50:	20a1c83a 	sub	r16,r4,r2
   1ce54:	a80b883a 	mov	r5,r21
   1ce58:	8009883a 	mov	r4,r16
   1ce5c:	00119bc0 	call	119bc <__umodsi3>
   1ce60:	a80b883a 	mov	r5,r21
   1ce64:	8009883a 	mov	r4,r16
   1ce68:	1027883a 	mov	r19,r2
   1ce6c:	00119580 	call	11958 <__udivsi3>
   1ce70:	a009883a 	mov	r4,r20
   1ce74:	100b883a 	mov	r5,r2
   1ce78:	9826943a 	slli	r19,r19,16
   1ce7c:	1039883a 	mov	fp,r2
   1ce80:	001411c0 	call	1411c <__mulsi3>
   1ce84:	b13fffcc 	andi	r4,r22,65535
   1ce88:	24c8b03a 	or	r4,r4,r19
   1ce8c:	2080062e 	bgeu	r4,r2,1cea8 <__udivdi3+0x550>
   1ce90:	2449883a 	add	r4,r4,r17
   1ce94:	e0ffffc4 	addi	r3,fp,-1
   1ce98:	24402436 	bltu	r4,r17,1cf2c <__udivdi3+0x5d4>
   1ce9c:	2080232e 	bgeu	r4,r2,1cf2c <__udivdi3+0x5d4>
   1cea0:	e73fff84 	addi	fp,fp,-2
   1cea4:	2449883a 	add	r4,r4,r17
   1cea8:	b82e943a 	slli	r23,r23,16
   1ceac:	20a1c83a 	sub	r16,r4,r2
   1ceb0:	bf06b03a 	or	r3,r23,fp
   1ceb4:	003f2806 	br	1cb58 <_gp+0xffff61b0>
   1ceb8:	2021883a 	mov	r16,r4
   1cebc:	003f5306 	br	1cc0c <_gp+0xffff6264>
   1cec0:	1821883a 	mov	r16,r3
   1cec4:	003ef406 	br	1ca98 <_gp+0xffff60f0>
   1cec8:	1806943a 	slli	r3,r3,16
   1cecc:	9de6983a 	sll	r19,r19,r23
   1ced0:	e73fffcc 	andi	fp,fp,65535
   1ced4:	1f07883a 	add	r3,r3,fp
   1ced8:	98ffbd2e 	bgeu	r19,r3,1cdd0 <_gp+0xffff6428>
   1cedc:	90bfffc4 	addi	r2,r18,-1
   1cee0:	0007883a 	mov	r3,zero
   1cee4:	003f4e06 	br	1cc20 <_gp+0xffff6278>
   1cee8:	00800604 	movi	r2,24
   1ceec:	003ef506 	br	1cac4 <_gp+0xffff611c>
   1cef0:	00800604 	movi	r2,24
   1cef4:	003f0b06 	br	1cb24 <_gp+0xffff617c>
   1cef8:	00800604 	movi	r2,24
   1cefc:	003ead06 	br	1c9b4 <_gp+0xffff600c>
   1cf00:	0007883a 	mov	r3,zero
   1cf04:	00800044 	movi	r2,1
   1cf08:	003f4506 	br	1cc20 <_gp+0xffff6278>
   1cf0c:	80bf8e2e 	bgeu	r16,r2,1cd48 <_gp+0xffff63a0>
   1cf10:	8c7fff84 	addi	r17,r17,-2
   1cf14:	8721883a 	add	r16,r16,fp
   1cf18:	003f8c06 	br	1cd4c <_gp+0xffff63a4>
   1cf1c:	18bf762e 	bgeu	r3,r2,1ccf8 <_gp+0xffff6350>
   1cf20:	ad7fff84 	addi	r21,r21,-2
   1cf24:	1f07883a 	add	r3,r3,fp
   1cf28:	003f7406 	br	1ccfc <_gp+0xffff6354>
   1cf2c:	1839883a 	mov	fp,r3
   1cf30:	003fdd06 	br	1cea8 <_gp+0xffff6500>
   1cf34:	182f883a 	mov	r23,r3
   1cf38:	003fc506 	br	1ce50 <_gp+0xffff64a8>
   1cf3c:	b5bfff84 	addi	r22,r22,-2
   1cf40:	3c4f883a 	add	r7,r7,r17
   1cf44:	003f1a06 	br	1cbb0 <_gp+0xffff6208>
   1cf48:	b5bfff84 	addi	r22,r22,-2
   1cf4c:	1c47883a 	add	r3,r3,r17
   1cf50:	003ebc06 	br	1ca44 <_gp+0xffff609c>

0001cf54 <__umoddi3>:
   1cf54:	defff304 	addi	sp,sp,-52
   1cf58:	df000b15 	stw	fp,44(sp)
   1cf5c:	dc400415 	stw	r17,16(sp)
   1cf60:	dc000315 	stw	r16,12(sp)
   1cf64:	dfc00c15 	stw	ra,48(sp)
   1cf68:	ddc00a15 	stw	r23,40(sp)
   1cf6c:	dd800915 	stw	r22,36(sp)
   1cf70:	dd400815 	stw	r21,32(sp)
   1cf74:	dd000715 	stw	r20,28(sp)
   1cf78:	dcc00615 	stw	r19,24(sp)
   1cf7c:	dc800515 	stw	r18,20(sp)
   1cf80:	2021883a 	mov	r16,r4
   1cf84:	2823883a 	mov	r17,r5
   1cf88:	2839883a 	mov	fp,r5
   1cf8c:	3800401e 	bne	r7,zero,1d090 <__umoddi3+0x13c>
   1cf90:	3027883a 	mov	r19,r6
   1cf94:	2029883a 	mov	r20,r4
   1cf98:	2980552e 	bgeu	r5,r6,1d0f0 <__umoddi3+0x19c>
   1cf9c:	00bfffd4 	movui	r2,65535
   1cfa0:	1180a236 	bltu	r2,r6,1d22c <__umoddi3+0x2d8>
   1cfa4:	01003fc4 	movi	r4,255
   1cfa8:	2189803a 	cmpltu	r4,r4,r6
   1cfac:	200890fa 	slli	r4,r4,3
   1cfb0:	3104d83a 	srl	r2,r6,r4
   1cfb4:	00c000b4 	movhi	r3,2
   1cfb8:	18f76b04 	addi	r3,r3,-8788
   1cfbc:	1885883a 	add	r2,r3,r2
   1cfc0:	10c00003 	ldbu	r3,0(r2)
   1cfc4:	00800804 	movi	r2,32
   1cfc8:	1909883a 	add	r4,r3,r4
   1cfcc:	1125c83a 	sub	r18,r2,r4
   1cfd0:	90000526 	beq	r18,zero,1cfe8 <__umoddi3+0x94>
   1cfd4:	8ca2983a 	sll	r17,r17,r18
   1cfd8:	8108d83a 	srl	r4,r16,r4
   1cfdc:	34a6983a 	sll	r19,r6,r18
   1cfe0:	84a8983a 	sll	r20,r16,r18
   1cfe4:	2478b03a 	or	fp,r4,r17
   1cfe8:	982cd43a 	srli	r22,r19,16
   1cfec:	e009883a 	mov	r4,fp
   1cff0:	9dffffcc 	andi	r23,r19,65535
   1cff4:	b00b883a 	mov	r5,r22
   1cff8:	00119bc0 	call	119bc <__umodsi3>
   1cffc:	b00b883a 	mov	r5,r22
   1d000:	e009883a 	mov	r4,fp
   1d004:	102b883a 	mov	r21,r2
   1d008:	00119580 	call	11958 <__udivsi3>
   1d00c:	100b883a 	mov	r5,r2
   1d010:	b809883a 	mov	r4,r23
   1d014:	001411c0 	call	1411c <__mulsi3>
   1d018:	a82a943a 	slli	r21,r21,16
   1d01c:	a006d43a 	srli	r3,r20,16
   1d020:	1d46b03a 	or	r3,r3,r21
   1d024:	1880032e 	bgeu	r3,r2,1d034 <__umoddi3+0xe0>
   1d028:	1cc7883a 	add	r3,r3,r19
   1d02c:	1cc00136 	bltu	r3,r19,1d034 <__umoddi3+0xe0>
   1d030:	18813136 	bltu	r3,r2,1d4f8 <__umoddi3+0x5a4>
   1d034:	18a1c83a 	sub	r16,r3,r2
   1d038:	b00b883a 	mov	r5,r22
   1d03c:	8009883a 	mov	r4,r16
   1d040:	00119bc0 	call	119bc <__umodsi3>
   1d044:	b00b883a 	mov	r5,r22
   1d048:	8009883a 	mov	r4,r16
   1d04c:	1023883a 	mov	r17,r2
   1d050:	00119580 	call	11958 <__udivsi3>
   1d054:	100b883a 	mov	r5,r2
   1d058:	b809883a 	mov	r4,r23
   1d05c:	8822943a 	slli	r17,r17,16
   1d060:	001411c0 	call	1411c <__mulsi3>
   1d064:	a0ffffcc 	andi	r3,r20,65535
   1d068:	1c46b03a 	or	r3,r3,r17
   1d06c:	1880042e 	bgeu	r3,r2,1d080 <__umoddi3+0x12c>
   1d070:	1cc7883a 	add	r3,r3,r19
   1d074:	1cc00236 	bltu	r3,r19,1d080 <__umoddi3+0x12c>
   1d078:	1880012e 	bgeu	r3,r2,1d080 <__umoddi3+0x12c>
   1d07c:	1cc7883a 	add	r3,r3,r19
   1d080:	1885c83a 	sub	r2,r3,r2
   1d084:	1484d83a 	srl	r2,r2,r18
   1d088:	0007883a 	mov	r3,zero
   1d08c:	00005306 	br	1d1dc <__umoddi3+0x288>
   1d090:	29c05036 	bltu	r5,r7,1d1d4 <__umoddi3+0x280>
   1d094:	00bfffd4 	movui	r2,65535
   1d098:	11c05c2e 	bgeu	r2,r7,1d20c <__umoddi3+0x2b8>
   1d09c:	00804034 	movhi	r2,256
   1d0a0:	10bfffc4 	addi	r2,r2,-1
   1d0a4:	11c10636 	bltu	r2,r7,1d4c0 <__umoddi3+0x56c>
   1d0a8:	01000404 	movi	r4,16
   1d0ac:	3904d83a 	srl	r2,r7,r4
   1d0b0:	00c000b4 	movhi	r3,2
   1d0b4:	18f76b04 	addi	r3,r3,-8788
   1d0b8:	1885883a 	add	r2,r3,r2
   1d0bc:	14c00003 	ldbu	r19,0(r2)
   1d0c0:	00c00804 	movi	r3,32
   1d0c4:	9927883a 	add	r19,r19,r4
   1d0c8:	1ce9c83a 	sub	r20,r3,r19
   1d0cc:	a0005c1e 	bne	r20,zero,1d240 <__umoddi3+0x2ec>
   1d0d0:	3c400136 	bltu	r7,r17,1d0d8 <__umoddi3+0x184>
   1d0d4:	81810a36 	bltu	r16,r6,1d500 <__umoddi3+0x5ac>
   1d0d8:	8185c83a 	sub	r2,r16,r6
   1d0dc:	89e3c83a 	sub	r17,r17,r7
   1d0e0:	8089803a 	cmpltu	r4,r16,r2
   1d0e4:	8939c83a 	sub	fp,r17,r4
   1d0e8:	e007883a 	mov	r3,fp
   1d0ec:	00003b06 	br	1d1dc <__umoddi3+0x288>
   1d0f0:	3000041e 	bne	r6,zero,1d104 <__umoddi3+0x1b0>
   1d0f4:	000b883a 	mov	r5,zero
   1d0f8:	01000044 	movi	r4,1
   1d0fc:	00119580 	call	11958 <__udivsi3>
   1d100:	1027883a 	mov	r19,r2
   1d104:	00bfffd4 	movui	r2,65535
   1d108:	14c0442e 	bgeu	r2,r19,1d21c <__umoddi3+0x2c8>
   1d10c:	00804034 	movhi	r2,256
   1d110:	10bfffc4 	addi	r2,r2,-1
   1d114:	14c0ec36 	bltu	r2,r19,1d4c8 <__umoddi3+0x574>
   1d118:	00800404 	movi	r2,16
   1d11c:	9886d83a 	srl	r3,r19,r2
   1d120:	010000b4 	movhi	r4,2
   1d124:	21376b04 	addi	r4,r4,-8788
   1d128:	20c7883a 	add	r3,r4,r3
   1d12c:	18c00003 	ldbu	r3,0(r3)
   1d130:	1887883a 	add	r3,r3,r2
   1d134:	00800804 	movi	r2,32
   1d138:	10e5c83a 	sub	r18,r2,r3
   1d13c:	9000ab1e 	bne	r18,zero,1d3ec <__umoddi3+0x498>
   1d140:	982cd43a 	srli	r22,r19,16
   1d144:	8ce3c83a 	sub	r17,r17,r19
   1d148:	9dffffcc 	andi	r23,r19,65535
   1d14c:	b00b883a 	mov	r5,r22
   1d150:	8809883a 	mov	r4,r17
   1d154:	00119bc0 	call	119bc <__umodsi3>
   1d158:	b00b883a 	mov	r5,r22
   1d15c:	8809883a 	mov	r4,r17
   1d160:	102b883a 	mov	r21,r2
   1d164:	00119580 	call	11958 <__udivsi3>
   1d168:	b80b883a 	mov	r5,r23
   1d16c:	1009883a 	mov	r4,r2
   1d170:	001411c0 	call	1411c <__mulsi3>
   1d174:	a82a943a 	slli	r21,r21,16
   1d178:	a006d43a 	srli	r3,r20,16
   1d17c:	1d46b03a 	or	r3,r3,r21
   1d180:	1880042e 	bgeu	r3,r2,1d194 <__umoddi3+0x240>
   1d184:	1cc7883a 	add	r3,r3,r19
   1d188:	1cc00236 	bltu	r3,r19,1d194 <__umoddi3+0x240>
   1d18c:	1880012e 	bgeu	r3,r2,1d194 <__umoddi3+0x240>
   1d190:	1cc7883a 	add	r3,r3,r19
   1d194:	18a1c83a 	sub	r16,r3,r2
   1d198:	b00b883a 	mov	r5,r22
   1d19c:	8009883a 	mov	r4,r16
   1d1a0:	00119bc0 	call	119bc <__umodsi3>
   1d1a4:	1023883a 	mov	r17,r2
   1d1a8:	b00b883a 	mov	r5,r22
   1d1ac:	8009883a 	mov	r4,r16
   1d1b0:	00119580 	call	11958 <__udivsi3>
   1d1b4:	8822943a 	slli	r17,r17,16
   1d1b8:	b80b883a 	mov	r5,r23
   1d1bc:	1009883a 	mov	r4,r2
   1d1c0:	001411c0 	call	1411c <__mulsi3>
   1d1c4:	a53fffcc 	andi	r20,r20,65535
   1d1c8:	a446b03a 	or	r3,r20,r17
   1d1cc:	18bfac2e 	bgeu	r3,r2,1d080 <_gp+0xffff66d8>
   1d1d0:	003fa706 	br	1d070 <_gp+0xffff66c8>
   1d1d4:	2005883a 	mov	r2,r4
   1d1d8:	2807883a 	mov	r3,r5
   1d1dc:	dfc00c17 	ldw	ra,48(sp)
   1d1e0:	df000b17 	ldw	fp,44(sp)
   1d1e4:	ddc00a17 	ldw	r23,40(sp)
   1d1e8:	dd800917 	ldw	r22,36(sp)
   1d1ec:	dd400817 	ldw	r21,32(sp)
   1d1f0:	dd000717 	ldw	r20,28(sp)
   1d1f4:	dcc00617 	ldw	r19,24(sp)
   1d1f8:	dc800517 	ldw	r18,20(sp)
   1d1fc:	dc400417 	ldw	r17,16(sp)
   1d200:	dc000317 	ldw	r16,12(sp)
   1d204:	dec00d04 	addi	sp,sp,52
   1d208:	f800283a 	ret
   1d20c:	04c03fc4 	movi	r19,255
   1d210:	99c9803a 	cmpltu	r4,r19,r7
   1d214:	200890fa 	slli	r4,r4,3
   1d218:	003fa406 	br	1d0ac <_gp+0xffff6704>
   1d21c:	00803fc4 	movi	r2,255
   1d220:	14c5803a 	cmpltu	r2,r2,r19
   1d224:	100490fa 	slli	r2,r2,3
   1d228:	003fbc06 	br	1d11c <_gp+0xffff6774>
   1d22c:	00804034 	movhi	r2,256
   1d230:	10bfffc4 	addi	r2,r2,-1
   1d234:	1180a636 	bltu	r2,r6,1d4d0 <__umoddi3+0x57c>
   1d238:	01000404 	movi	r4,16
   1d23c:	003f5c06 	br	1cfb0 <_gp+0xffff6608>
   1d240:	3d0e983a 	sll	r7,r7,r20
   1d244:	34ead83a 	srl	r21,r6,r19
   1d248:	8cc6d83a 	srl	r3,r17,r19
   1d24c:	8d10983a 	sll	r8,r17,r20
   1d250:	3d6ab03a 	or	r21,r7,r21
   1d254:	a82cd43a 	srli	r22,r21,16
   1d258:	84e2d83a 	srl	r17,r16,r19
   1d25c:	1809883a 	mov	r4,r3
   1d260:	b00b883a 	mov	r5,r22
   1d264:	8a22b03a 	or	r17,r17,r8
   1d268:	3524983a 	sll	r18,r6,r20
   1d26c:	dc400015 	stw	r17,0(sp)
   1d270:	d8c00115 	stw	r3,4(sp)
   1d274:	00119bc0 	call	119bc <__umodsi3>
   1d278:	d8c00117 	ldw	r3,4(sp)
   1d27c:	b00b883a 	mov	r5,r22
   1d280:	1039883a 	mov	fp,r2
   1d284:	1809883a 	mov	r4,r3
   1d288:	00119580 	call	11958 <__udivsi3>
   1d28c:	adffffcc 	andi	r23,r21,65535
   1d290:	100b883a 	mov	r5,r2
   1d294:	b809883a 	mov	r4,r23
   1d298:	1023883a 	mov	r17,r2
   1d29c:	001411c0 	call	1411c <__mulsi3>
   1d2a0:	d9400017 	ldw	r5,0(sp)
   1d2a4:	e008943a 	slli	r4,fp,16
   1d2a8:	8520983a 	sll	r16,r16,r20
   1d2ac:	2806d43a 	srli	r3,r5,16
   1d2b0:	1906b03a 	or	r3,r3,r4
   1d2b4:	1880042e 	bgeu	r3,r2,1d2c8 <__umoddi3+0x374>
   1d2b8:	1d47883a 	add	r3,r3,r21
   1d2bc:	893fffc4 	addi	r4,r17,-1
   1d2c0:	1d40892e 	bgeu	r3,r21,1d4e8 <__umoddi3+0x594>
   1d2c4:	2023883a 	mov	r17,r4
   1d2c8:	18b9c83a 	sub	fp,r3,r2
   1d2cc:	b00b883a 	mov	r5,r22
   1d2d0:	e009883a 	mov	r4,fp
   1d2d4:	00119bc0 	call	119bc <__umodsi3>
   1d2d8:	b00b883a 	mov	r5,r22
   1d2dc:	e009883a 	mov	r4,fp
   1d2e0:	d8800215 	stw	r2,8(sp)
   1d2e4:	00119580 	call	11958 <__udivsi3>
   1d2e8:	100b883a 	mov	r5,r2
   1d2ec:	b809883a 	mov	r4,r23
   1d2f0:	102d883a 	mov	r22,r2
   1d2f4:	001411c0 	call	1411c <__mulsi3>
   1d2f8:	d9800217 	ldw	r6,8(sp)
   1d2fc:	d8c00017 	ldw	r3,0(sp)
   1d300:	300c943a 	slli	r6,r6,16
   1d304:	1a3fffcc 	andi	r8,r3,65535
   1d308:	4190b03a 	or	r8,r8,r6
   1d30c:	4080042e 	bgeu	r8,r2,1d320 <__umoddi3+0x3cc>
   1d310:	4551883a 	add	r8,r8,r21
   1d314:	b0ffffc4 	addi	r3,r22,-1
   1d318:	45406f2e 	bgeu	r8,r21,1d4d8 <__umoddi3+0x584>
   1d31c:	182d883a 	mov	r22,r3
   1d320:	880e943a 	slli	r7,r17,16
   1d324:	9006d43a 	srli	r3,r18,16
   1d328:	91bfffcc 	andi	r6,r18,65535
   1d32c:	3dacb03a 	or	r22,r7,r22
   1d330:	b02ed43a 	srli	r23,r22,16
   1d334:	b5bfffcc 	andi	r22,r22,65535
   1d338:	300b883a 	mov	r5,r6
   1d33c:	b009883a 	mov	r4,r22
   1d340:	40a3c83a 	sub	r17,r8,r2
   1d344:	d8c00115 	stw	r3,4(sp)
   1d348:	d9800215 	stw	r6,8(sp)
   1d34c:	001411c0 	call	1411c <__mulsi3>
   1d350:	d9800217 	ldw	r6,8(sp)
   1d354:	b809883a 	mov	r4,r23
   1d358:	1039883a 	mov	fp,r2
   1d35c:	300b883a 	mov	r5,r6
   1d360:	001411c0 	call	1411c <__mulsi3>
   1d364:	d8c00117 	ldw	r3,4(sp)
   1d368:	b809883a 	mov	r4,r23
   1d36c:	d8800215 	stw	r2,8(sp)
   1d370:	180b883a 	mov	r5,r3
   1d374:	001411c0 	call	1411c <__mulsi3>
   1d378:	d8c00117 	ldw	r3,4(sp)
   1d37c:	b009883a 	mov	r4,r22
   1d380:	102f883a 	mov	r23,r2
   1d384:	180b883a 	mov	r5,r3
   1d388:	001411c0 	call	1411c <__mulsi3>
   1d38c:	d9800217 	ldw	r6,8(sp)
   1d390:	e006d43a 	srli	r3,fp,16
   1d394:	1185883a 	add	r2,r2,r6
   1d398:	1885883a 	add	r2,r3,r2
   1d39c:	1180022e 	bgeu	r2,r6,1d3a8 <__umoddi3+0x454>
   1d3a0:	00c00074 	movhi	r3,1
   1d3a4:	b8ef883a 	add	r23,r23,r3
   1d3a8:	1006d43a 	srli	r3,r2,16
   1d3ac:	1004943a 	slli	r2,r2,16
   1d3b0:	e73fffcc 	andi	fp,fp,65535
   1d3b4:	1dc7883a 	add	r3,r3,r23
   1d3b8:	1739883a 	add	fp,r2,fp
   1d3bc:	88c03a36 	bltu	r17,r3,1d4a8 <__umoddi3+0x554>
   1d3c0:	88c05126 	beq	r17,r3,1d508 <__umoddi3+0x5b4>
   1d3c4:	88c9c83a 	sub	r4,r17,r3
   1d3c8:	e00f883a 	mov	r7,fp
   1d3cc:	81cfc83a 	sub	r7,r16,r7
   1d3d0:	81c7803a 	cmpltu	r3,r16,r7
   1d3d4:	20c7c83a 	sub	r3,r4,r3
   1d3d8:	1cc4983a 	sll	r2,r3,r19
   1d3dc:	3d0ed83a 	srl	r7,r7,r20
   1d3e0:	1d06d83a 	srl	r3,r3,r20
   1d3e4:	11c4b03a 	or	r2,r2,r7
   1d3e8:	003f7c06 	br	1d1dc <_gp+0xffff6834>
   1d3ec:	9ca6983a 	sll	r19,r19,r18
   1d3f0:	88f8d83a 	srl	fp,r17,r3
   1d3f4:	80c4d83a 	srl	r2,r16,r3
   1d3f8:	982cd43a 	srli	r22,r19,16
   1d3fc:	8ca2983a 	sll	r17,r17,r18
   1d400:	e009883a 	mov	r4,fp
   1d404:	b00b883a 	mov	r5,r22
   1d408:	146ab03a 	or	r21,r2,r17
   1d40c:	00119bc0 	call	119bc <__umodsi3>
   1d410:	b00b883a 	mov	r5,r22
   1d414:	e009883a 	mov	r4,fp
   1d418:	1029883a 	mov	r20,r2
   1d41c:	9dffffcc 	andi	r23,r19,65535
   1d420:	00119580 	call	11958 <__udivsi3>
   1d424:	b809883a 	mov	r4,r23
   1d428:	100b883a 	mov	r5,r2
   1d42c:	001411c0 	call	1411c <__mulsi3>
   1d430:	a008943a 	slli	r4,r20,16
   1d434:	a806d43a 	srli	r3,r21,16
   1d438:	84a8983a 	sll	r20,r16,r18
   1d43c:	1906b03a 	or	r3,r3,r4
   1d440:	1880042e 	bgeu	r3,r2,1d454 <__umoddi3+0x500>
   1d444:	1cc7883a 	add	r3,r3,r19
   1d448:	1cc00236 	bltu	r3,r19,1d454 <__umoddi3+0x500>
   1d44c:	1880012e 	bgeu	r3,r2,1d454 <__umoddi3+0x500>
   1d450:	1cc7883a 	add	r3,r3,r19
   1d454:	18a3c83a 	sub	r17,r3,r2
   1d458:	b00b883a 	mov	r5,r22
   1d45c:	8809883a 	mov	r4,r17
   1d460:	00119bc0 	call	119bc <__umodsi3>
   1d464:	b00b883a 	mov	r5,r22
   1d468:	8809883a 	mov	r4,r17
   1d46c:	1021883a 	mov	r16,r2
   1d470:	00119580 	call	11958 <__udivsi3>
   1d474:	100b883a 	mov	r5,r2
   1d478:	b809883a 	mov	r4,r23
   1d47c:	8020943a 	slli	r16,r16,16
   1d480:	001411c0 	call	1411c <__mulsi3>
   1d484:	a8ffffcc 	andi	r3,r21,65535
   1d488:	1c06b03a 	or	r3,r3,r16
   1d48c:	1880042e 	bgeu	r3,r2,1d4a0 <__umoddi3+0x54c>
   1d490:	1cc7883a 	add	r3,r3,r19
   1d494:	1cc00236 	bltu	r3,r19,1d4a0 <__umoddi3+0x54c>
   1d498:	1880012e 	bgeu	r3,r2,1d4a0 <__umoddi3+0x54c>
   1d49c:	1cc7883a 	add	r3,r3,r19
   1d4a0:	18a3c83a 	sub	r17,r3,r2
   1d4a4:	003f2906 	br	1d14c <_gp+0xffff67a4>
   1d4a8:	e48fc83a 	sub	r7,fp,r18
   1d4ac:	1d49c83a 	sub	r4,r3,r21
   1d4b0:	e1f9803a 	cmpltu	fp,fp,r7
   1d4b4:	2739c83a 	sub	fp,r4,fp
   1d4b8:	8f09c83a 	sub	r4,r17,fp
   1d4bc:	003fc306 	br	1d3cc <_gp+0xffff6a24>
   1d4c0:	01000604 	movi	r4,24
   1d4c4:	003ef906 	br	1d0ac <_gp+0xffff6704>
   1d4c8:	00800604 	movi	r2,24
   1d4cc:	003f1306 	br	1d11c <_gp+0xffff6774>
   1d4d0:	01000604 	movi	r4,24
   1d4d4:	003eb606 	br	1cfb0 <_gp+0xffff6608>
   1d4d8:	40bf902e 	bgeu	r8,r2,1d31c <_gp+0xffff6974>
   1d4dc:	b5bfff84 	addi	r22,r22,-2
   1d4e0:	4551883a 	add	r8,r8,r21
   1d4e4:	003f8e06 	br	1d320 <_gp+0xffff6978>
   1d4e8:	18bf762e 	bgeu	r3,r2,1d2c4 <_gp+0xffff691c>
   1d4ec:	8c7fff84 	addi	r17,r17,-2
   1d4f0:	1d47883a 	add	r3,r3,r21
   1d4f4:	003f7406 	br	1d2c8 <_gp+0xffff6920>
   1d4f8:	1cc7883a 	add	r3,r3,r19
   1d4fc:	003ecd06 	br	1d034 <_gp+0xffff668c>
   1d500:	8005883a 	mov	r2,r16
   1d504:	003ef806 	br	1d0e8 <_gp+0xffff6740>
   1d508:	873fe736 	bltu	r16,fp,1d4a8 <_gp+0xffff6b00>
   1d50c:	e00f883a 	mov	r7,fp
   1d510:	0009883a 	mov	r4,zero
   1d514:	003fad06 	br	1d3cc <_gp+0xffff6a24>

0001d518 <__ledf2>:
   1d518:	2804d53a 	srli	r2,r5,20
   1d51c:	3810d53a 	srli	r8,r7,20
   1d520:	00c00434 	movhi	r3,16
   1d524:	18ffffc4 	addi	r3,r3,-1
   1d528:	1081ffcc 	andi	r2,r2,2047
   1d52c:	0241ffc4 	movi	r9,2047
   1d530:	28d4703a 	and	r10,r5,r3
   1d534:	4201ffcc 	andi	r8,r8,2047
   1d538:	38c6703a 	and	r3,r7,r3
   1d53c:	280ad7fa 	srli	r5,r5,31
   1d540:	380ed7fa 	srli	r7,r7,31
   1d544:	12401f26 	beq	r2,r9,1d5c4 <__ledf2+0xac>
   1d548:	0241ffc4 	movi	r9,2047
   1d54c:	42401426 	beq	r8,r9,1d5a0 <__ledf2+0x88>
   1d550:	1000091e 	bne	r2,zero,1d578 <__ledf2+0x60>
   1d554:	2296b03a 	or	r11,r4,r10
   1d558:	5813003a 	cmpeq	r9,r11,zero
   1d55c:	29403fcc 	andi	r5,r5,255
   1d560:	40000a1e 	bne	r8,zero,1d58c <__ledf2+0x74>
   1d564:	30d8b03a 	or	r12,r6,r3
   1d568:	6000081e 	bne	r12,zero,1d58c <__ledf2+0x74>
   1d56c:	0005883a 	mov	r2,zero
   1d570:	5800111e 	bne	r11,zero,1d5b8 <__ledf2+0xa0>
   1d574:	f800283a 	ret
   1d578:	29403fcc 	andi	r5,r5,255
   1d57c:	40000c1e 	bne	r8,zero,1d5b0 <__ledf2+0x98>
   1d580:	30d2b03a 	or	r9,r6,r3
   1d584:	48000c26 	beq	r9,zero,1d5b8 <__ledf2+0xa0>
   1d588:	0013883a 	mov	r9,zero
   1d58c:	39c03fcc 	andi	r7,r7,255
   1d590:	48000826 	beq	r9,zero,1d5b4 <__ledf2+0x9c>
   1d594:	38001126 	beq	r7,zero,1d5dc <__ledf2+0xc4>
   1d598:	00800044 	movi	r2,1
   1d59c:	f800283a 	ret
   1d5a0:	30d2b03a 	or	r9,r6,r3
   1d5a4:	483fea26 	beq	r9,zero,1d550 <_gp+0xffff6ba8>
   1d5a8:	00800084 	movi	r2,2
   1d5ac:	f800283a 	ret
   1d5b0:	39c03fcc 	andi	r7,r7,255
   1d5b4:	39400726 	beq	r7,r5,1d5d4 <__ledf2+0xbc>
   1d5b8:	2800081e 	bne	r5,zero,1d5dc <__ledf2+0xc4>
   1d5bc:	00800044 	movi	r2,1
   1d5c0:	f800283a 	ret
   1d5c4:	2292b03a 	or	r9,r4,r10
   1d5c8:	483fdf26 	beq	r9,zero,1d548 <_gp+0xffff6ba0>
   1d5cc:	00800084 	movi	r2,2
   1d5d0:	f800283a 	ret
   1d5d4:	4080030e 	bge	r8,r2,1d5e4 <__ledf2+0xcc>
   1d5d8:	383fef26 	beq	r7,zero,1d598 <_gp+0xffff6bf0>
   1d5dc:	00bfffc4 	movi	r2,-1
   1d5e0:	f800283a 	ret
   1d5e4:	123feb16 	blt	r2,r8,1d594 <_gp+0xffff6bec>
   1d5e8:	1abff336 	bltu	r3,r10,1d5b8 <_gp+0xffff6c10>
   1d5ec:	50c00326 	beq	r10,r3,1d5fc <__ledf2+0xe4>
   1d5f0:	50c0042e 	bgeu	r10,r3,1d604 <__ledf2+0xec>
   1d5f4:	283fe81e 	bne	r5,zero,1d598 <_gp+0xffff6bf0>
   1d5f8:	003ff806 	br	1d5dc <_gp+0xffff6c34>
   1d5fc:	313fee36 	bltu	r6,r4,1d5b8 <_gp+0xffff6c10>
   1d600:	21bffc36 	bltu	r4,r6,1d5f4 <_gp+0xffff6c4c>
   1d604:	0005883a 	mov	r2,zero
   1d608:	f800283a 	ret

0001d60c <__floatunsidf>:
   1d60c:	defffe04 	addi	sp,sp,-8
   1d610:	dc000015 	stw	r16,0(sp)
   1d614:	dfc00115 	stw	ra,4(sp)
   1d618:	2021883a 	mov	r16,r4
   1d61c:	20002226 	beq	r4,zero,1d6a8 <__floatunsidf+0x9c>
   1d620:	00140b80 	call	140b8 <__clzsi2>
   1d624:	01010784 	movi	r4,1054
   1d628:	2089c83a 	sub	r4,r4,r2
   1d62c:	01810cc4 	movi	r6,1075
   1d630:	310dc83a 	sub	r6,r6,r4
   1d634:	00c007c4 	movi	r3,31
   1d638:	1980120e 	bge	r3,r6,1d684 <__floatunsidf+0x78>
   1d63c:	00c104c4 	movi	r3,1043
   1d640:	1907c83a 	sub	r3,r3,r4
   1d644:	80ca983a 	sll	r5,r16,r3
   1d648:	00800434 	movhi	r2,16
   1d64c:	10bfffc4 	addi	r2,r2,-1
   1d650:	2101ffcc 	andi	r4,r4,2047
   1d654:	0021883a 	mov	r16,zero
   1d658:	288a703a 	and	r5,r5,r2
   1d65c:	2008953a 	slli	r4,r4,20
   1d660:	00c00434 	movhi	r3,16
   1d664:	18ffffc4 	addi	r3,r3,-1
   1d668:	28c6703a 	and	r3,r5,r3
   1d66c:	8005883a 	mov	r2,r16
   1d670:	1906b03a 	or	r3,r3,r4
   1d674:	dfc00117 	ldw	ra,4(sp)
   1d678:	dc000017 	ldw	r16,0(sp)
   1d67c:	dec00204 	addi	sp,sp,8
   1d680:	f800283a 	ret
   1d684:	00c002c4 	movi	r3,11
   1d688:	188bc83a 	sub	r5,r3,r2
   1d68c:	814ad83a 	srl	r5,r16,r5
   1d690:	00c00434 	movhi	r3,16
   1d694:	18ffffc4 	addi	r3,r3,-1
   1d698:	81a0983a 	sll	r16,r16,r6
   1d69c:	2101ffcc 	andi	r4,r4,2047
   1d6a0:	28ca703a 	and	r5,r5,r3
   1d6a4:	003fed06 	br	1d65c <_gp+0xffff6cb4>
   1d6a8:	0009883a 	mov	r4,zero
   1d6ac:	000b883a 	mov	r5,zero
   1d6b0:	003fea06 	br	1d65c <_gp+0xffff6cb4>

0001d6b4 <alt_getchar>:
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
   1d6b4:	008000b4 	movhi	r2,2
   1d6b8:	10ba5404 	addi	r2,r2,-5808
   1d6bc:	11c00217 	ldw	r7,8(r2)
 * Uses the ALT_DRIVER_READ() macro to call directly to driver if available.
 * Otherwise, uses newlib provided getchar() routine.
 */
int 
alt_getchar(void)
{
   1d6c0:	defffe04 	addi	sp,sp,-8
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
   1d6c4:	010000b4 	movhi	r4,2
   1d6c8:	01800044 	movi	r6,1
   1d6cc:	d80b883a 	mov	r5,sp
   1d6d0:	213a7404 	addi	r4,r4,-5680
 * Uses the ALT_DRIVER_READ() macro to call directly to driver if available.
 * Otherwise, uses newlib provided getchar() routine.
 */
int 
alt_getchar(void)
{
   1d6d4:	dfc00115 	stw	ra,4(sp)
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
   1d6d8:	001d96c0 	call	1d96c <altera_avalon_jtag_uart_read>
   1d6dc:	0080020e 	bge	zero,r2,1d6e8 <alt_getchar+0x34>
        return -1;
    }
    return c;
   1d6e0:	d8800007 	ldb	r2,0(sp)
   1d6e4:	00000106 	br	1d6ec <alt_getchar+0x38>
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
        return -1;
   1d6e8:	00bfffc4 	movi	r2,-1
    return c;
#else
    return getchar();
#endif
#endif
}
   1d6ec:	dfc00117 	ldw	ra,4(sp)
   1d6f0:	dec00204 	addi	sp,sp,8
   1d6f4:	f800283a 	ret

0001d6f8 <alt_irq_register>:
                      alt_isr_func handler)
{
  int rc = -EINVAL;  
  alt_irq_context status;

  if (id < ALT_NIRQ)
   1d6f8:	008007c4 	movi	r2,31
   1d6fc:	11002136 	bltu	r2,r4,1d784 <alt_irq_register+0x8c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1d700:	000f303a 	rdctl	r7,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1d704:	00ffff84 	movi	r3,-2
   1d708:	38c4703a 	and	r2,r7,r3
   1d70c:	1001703a 	wrctl	status,r2
     * state.
     */

    status = alt_irq_disable_all ();

    alt_irq[id].handler = handler;
   1d710:	200490fa 	slli	r2,r4,3
   1d714:	020000b4 	movhi	r8,2
   1d718:	423dc904 	addi	r8,r8,-2268
   1d71c:	4085883a 	add	r2,r8,r2
   1d720:	11800015 	stw	r6,0(r2)
    alt_irq[id].context = context;
   1d724:	11400115 	stw	r5,4(r2)
   1d728:	00800044 	movi	r2,1

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   1d72c:	30000726 	beq	r6,zero,1d74c <alt_irq_register+0x54>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1d730:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1d734:	28c6703a 	and	r3,r5,r3
   1d738:	1801703a 	wrctl	status,r3
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active |= (1 << id);
   1d73c:	d0e28417 	ldw	r3,-30192(gp)
   1d740:	1104983a 	sll	r2,r2,r4
   1d744:	10c4b03a 	or	r2,r2,r3
   1d748:	00000706 	br	1d768 <alt_irq_register+0x70>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1d74c:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1d750:	28c6703a 	and	r3,r5,r3
   1d754:	1801703a 	wrctl	status,r3
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active &= ~(1 << id);
   1d758:	1104983a 	sll	r2,r2,r4
   1d75c:	d0e28417 	ldw	r3,-30192(gp)
   1d760:	0084303a 	nor	r2,zero,r2
   1d764:	10c4703a 	and	r2,r2,r3
   1d768:	d0a28415 	stw	r2,-30192(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   1d76c:	d0a28417 	ldw	r2,-30192(gp)
   1d770:	100170fa 	wrctl	ienable,r2
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1d774:	2801703a 	wrctl	status,r5
   1d778:	3801703a 	wrctl	status,r7
   1d77c:	0005883a 	mov	r2,zero
   1d780:	f800283a 	ret
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
  int rc = -EINVAL;  
   1d784:	00bffa84 	movi	r2,-22
    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);

    alt_irq_enable_all(status);
  }
  return rc; 
}
   1d788:	f800283a 	ret

0001d78c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   1d78c:	deffff04 	addi	sp,sp,-4
   1d790:	010000b4 	movhi	r4,2
   1d794:	014000b4 	movhi	r5,2
   1d798:	dfc00015 	stw	ra,0(sp)
   1d79c:	21382004 	addi	r4,r4,-8064
   1d7a0:	297a7b04 	addi	r5,r5,-5652

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   1d7a4:	2140061e 	bne	r4,r5,1d7c0 <alt_load+0x34>
   1d7a8:	01000074 	movhi	r4,1
   1d7ac:	01400074 	movhi	r5,1
   1d7b0:	21000804 	addi	r4,r4,32
   1d7b4:	29400804 	addi	r5,r5,32
   1d7b8:	2140121e 	bne	r4,r5,1d804 <alt_load+0x78>
   1d7bc:	00000b06 	br	1d7ec <alt_load+0x60>
   1d7c0:	00c000b4 	movhi	r3,2
   1d7c4:	18fa7b04 	addi	r3,r3,-5652
   1d7c8:	1907c83a 	sub	r3,r3,r4
   1d7cc:	0005883a 	mov	r2,zero
  {
    while( to != end )
   1d7d0:	10fff526 	beq	r2,r3,1d7a8 <_gp+0xffff6e00>
    {
      *to++ = *from++;
   1d7d4:	114f883a 	add	r7,r2,r5
   1d7d8:	39c00017 	ldw	r7,0(r7)
   1d7dc:	110d883a 	add	r6,r2,r4
   1d7e0:	10800104 	addi	r2,r2,4
   1d7e4:	31c00015 	stw	r7,0(r6)
   1d7e8:	003ff906 	br	1d7d0 <_gp+0xffff6e28>
   1d7ec:	010000b4 	movhi	r4,2
   1d7f0:	014000b4 	movhi	r5,2
   1d7f4:	21373204 	addi	r4,r4,-9016
   1d7f8:	29773204 	addi	r5,r5,-9016

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   1d7fc:	2140101e 	bne	r4,r5,1d840 <alt_load+0xb4>
   1d800:	00000b06 	br	1d830 <alt_load+0xa4>
   1d804:	00c00074 	movhi	r3,1
   1d808:	18c06004 	addi	r3,r3,384
   1d80c:	1907c83a 	sub	r3,r3,r4
   1d810:	0005883a 	mov	r2,zero
  {
    while( to != end )
   1d814:	10fff526 	beq	r2,r3,1d7ec <_gp+0xffff6e44>
    {
      *to++ = *from++;
   1d818:	114f883a 	add	r7,r2,r5
   1d81c:	39c00017 	ldw	r7,0(r7)
   1d820:	110d883a 	add	r6,r2,r4
   1d824:	10800104 	addi	r2,r2,4
   1d828:	31c00015 	stw	r7,0(r6)
   1d82c:	003ff906 	br	1d814 <_gp+0xffff6e6c>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   1d830:	001db5c0 	call	1db5c <alt_dcache_flush_all>
  alt_icache_flush_all();
}
   1d834:	dfc00017 	ldw	ra,0(sp)
   1d838:	dec00104 	addi	sp,sp,4
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  alt_icache_flush_all();
   1d83c:	001dc481 	jmpi	1dc48 <alt_icache_flush_all>
   1d840:	00c000b4 	movhi	r3,2
   1d844:	18f82004 	addi	r3,r3,-8064
   1d848:	1907c83a 	sub	r3,r3,r4

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   1d84c:	0005883a 	mov	r2,zero
  {
    while( to != end )
   1d850:	18bff726 	beq	r3,r2,1d830 <_gp+0xffff6e88>
    {
      *to++ = *from++;
   1d854:	114f883a 	add	r7,r2,r5
   1d858:	39c00017 	ldw	r7,0(r7)
   1d85c:	110d883a 	add	r6,r2,r4
   1d860:	10800104 	addi	r2,r2,4
   1d864:	31c00015 	stw	r7,0(r6)
   1d868:	003ff906 	br	1d850 <_gp+0xffff6ea8>

0001d86c <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   1d86c:	deffff04 	addi	sp,sp,-4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   1d870:	0009883a 	mov	r4,zero
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   1d874:	dfc00015 	stw	ra,0(sp)
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   1d878:	001d9240 	call	1d924 <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   1d87c:	001d9440 	call	1d944 <alt_sys_init>
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
   1d880:	d1a28517 	ldw	r6,-30188(gp)
   1d884:	d1628617 	ldw	r5,-30184(gp)
   1d888:	d1228717 	ldw	r4,-30180(gp)
  close(STDOUT_FILENO);
  exit (result);
#endif

  ALT_LOG_PRINT_BOOT("[alt_main.c] After main - we should not be here?.\r\n");
}
   1d88c:	dfc00017 	ldw	ra,0(sp)
   1d890:	dec00104 	addi	sp,sp,4
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
   1d894:	0010b141 	jmpi	10b14 <main>

0001d898 <__malloc_lock>:
   1d898:	f800283a 	ret

0001d89c <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   1d89c:	f800283a 	ret

0001d8a0 <alt_putstr>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided fputs() routine.
 */
int 
alt_putstr(const char* str)
{
   1d8a0:	defffe04 	addi	sp,sp,-8
   1d8a4:	dc000015 	stw	r16,0(sp)
   1d8a8:	dfc00115 	stw	ra,4(sp)
   1d8ac:	2021883a 	mov	r16,r4
#ifdef ALT_SEMIHOSTING
    return write(STDOUT_FILENO,str,strlen(str));
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
   1d8b0:	001abb40 	call	1abb4 <strlen>
   1d8b4:	010000b4 	movhi	r4,2
   1d8b8:	000f883a 	mov	r7,zero
   1d8bc:	100d883a 	mov	r6,r2
   1d8c0:	800b883a 	mov	r5,r16
   1d8c4:	213a7404 	addi	r4,r4,-5680
#else
    return fputs(str, stdout);
#endif
#endif
}
   1d8c8:	dfc00117 	ldw	ra,4(sp)
   1d8cc:	dc000017 	ldw	r16,0(sp)
   1d8d0:	dec00204 	addi	sp,sp,8
#ifdef ALT_SEMIHOSTING
    return write(STDOUT_FILENO,str,strlen(str));
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
   1d8d4:	001d9c81 	jmpi	1d9c8 <altera_avalon_jtag_uart_write>

0001d8d8 <sbrk>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1d8d8:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1d8dc:	00bfff84 	movi	r2,-2
   1d8e0:	2884703a 	and	r2,r5,r2
   1d8e4:	1001703a 	wrctl	status,r2
  char *prev_heap_end; 

  context = alt_irq_disable_all();

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   1d8e8:	d0a00917 	ldw	r2,-32732(gp)
   1d8ec:	00ffff04 	movi	r3,-4
   1d8f0:	108000c4 	addi	r2,r2,3
   1d8f4:	10c4703a 	and	r2,r2,r3
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   1d8f8:	00c000b4 	movhi	r3,2
  char *prev_heap_end; 

  context = alt_irq_disable_all();

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   1d8fc:	d0a00915 	stw	r2,-32732(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   1d900:	1109883a 	add	r4,r2,r4
   1d904:	18c00004 	addi	r3,r3,0
   1d908:	1900032e 	bgeu	r3,r4,1d918 <sbrk+0x40>
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1d90c:	2801703a 	wrctl	status,r5
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   1d910:	00bfffc4 	movi	r2,-1
   1d914:	f800283a 	ret
  }
#endif

  prev_heap_end = heap_end; 
  heap_end += incr; 
   1d918:	d1200915 	stw	r4,-32732(gp)
   1d91c:	2801703a 	wrctl	status,r5
#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
} 
   1d920:	f800283a 	ret

0001d924 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   1d924:	deffff04 	addi	sp,sp,-4
   1d928:	dfc00015 	stw	ra,0(sp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
   1d92c:	001dc4c0 	call	1dc4c <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   1d930:	00800044 	movi	r2,1
   1d934:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   1d938:	dfc00017 	ldw	ra,0(sp)
   1d93c:	dec00104 	addi	sp,sp,4
   1d940:	f800283a 	ret

0001d944 <alt_sys_init>:
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   1d944:	008000b4 	movhi	r2,2
   1d948:	10840004 	addi	r2,r2,4096
   1d94c:	d0a28915 	stw	r2,-30172(gp)

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   1d950:	010000b4 	movhi	r4,2
   1d954:	0080bef4 	movhi	r2,763
   1d958:	10bc2004 	addi	r2,r2,-3968
   1d95c:	d1600c04 	addi	r5,gp,-32720
   1d960:	213a4904 	addi	r4,r4,-5852
   1d964:	d0a28815 	stw	r2,-30176(gp)
   1d968:	001db681 	jmpi	1db68 <alt_dev_llist_insert>

0001d96c <altera_avalon_jtag_uart_read>:

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char* buffer, int space, int flags)
{
  unsigned int base = sp->base;
   1d96c:	21000017 	ldw	r4,0(r4)

  char * ptr = buffer;
  char * end = buffer + space;
   1d970:	298d883a 	add	r6,r5,r6

  while (ptr < end)
   1d974:	2805883a 	mov	r2,r5

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    else if (ptr != buffer)
      break;
    else if(flags & O_NONBLOCK)
   1d978:	3a10000c 	andi	r8,r7,16384
  unsigned int base = sp->base;

  char * ptr = buffer;
  char * end = buffer + space;

  while (ptr < end)
   1d97c:	11800b2e 	bgeu	r2,r6,1d9ac <altera_avalon_jtag_uart_read+0x40>
  {
    unsigned int data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   1d980:	20c00037 	ldwio	r3,0(r4)

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
   1d984:	1a60000c 	andi	r9,r3,32768
   1d988:	48000326 	beq	r9,zero,1d998 <altera_avalon_jtag_uart_read+0x2c>
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   1d98c:	10c00005 	stb	r3,0(r2)
   1d990:	10800044 	addi	r2,r2,1
   1d994:	003ff906 	br	1d97c <_gp+0xffff6fd4>
    else if (ptr != buffer)
   1d998:	11400226 	beq	r2,r5,1d9a4 <altera_avalon_jtag_uart_read+0x38>
      break;   
    
  }

  if (ptr != buffer)
    return ptr - buffer;
   1d99c:	1145c83a 	sub	r2,r2,r5
   1d9a0:	f800283a 	ret

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    else if (ptr != buffer)
      break;
    else if(flags & O_NONBLOCK)
   1d9a4:	403ff526 	beq	r8,zero,1d97c <_gp+0xffff6fd4>
   1d9a8:	00000106 	br	1d9b0 <altera_avalon_jtag_uart_read+0x44>
      break;   
    
  }

  if (ptr != buffer)
   1d9ac:	117ffb1e 	bne	r2,r5,1d99c <_gp+0xffff6ff4>
    return ptr - buffer;
  else if (flags & O_NONBLOCK)
   1d9b0:	39d0000c 	andi	r7,r7,16384
   1d9b4:	3800021e 	bne	r7,zero,1d9c0 <altera_avalon_jtag_uart_read+0x54>
    return -EWOULDBLOCK;
  else
    return -EIO;
   1d9b8:	00bffec4 	movi	r2,-5
   1d9bc:	f800283a 	ret
  }

  if (ptr != buffer)
    return ptr - buffer;
  else if (flags & O_NONBLOCK)
    return -EWOULDBLOCK;
   1d9c0:	00bffd44 	movi	r2,-11
  else
    return -EIO;
}
   1d9c4:	f800283a 	ret

0001d9c8 <altera_avalon_jtag_uart_write>:
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  unsigned int base = sp->base;
   1d9c8:	21000017 	ldw	r4,0(r4)
 * one FIFOs worth of data.  But you said you didn't want to use interrupts :-)
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   1d9cc:	3005883a 	mov	r2,r6
  unsigned int base = sp->base;

  const char * end = ptr + count;
   1d9d0:	298d883a 	add	r6,r5,r6

  while (ptr < end)
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
   1d9d4:	21c00104 	addi	r7,r4,4
{
  unsigned int base = sp->base;

  const char * end = ptr + count;

  while (ptr < end)
   1d9d8:	2980072e 	bgeu	r5,r6,1d9f8 <altera_avalon_jtag_uart_write+0x30>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
   1d9dc:	38c00037 	ldwio	r3,0(r7)
   1d9e0:	18ffffec 	andhi	r3,r3,65535
   1d9e4:	183ffc26 	beq	r3,zero,1d9d8 <_gp+0xffff7030>
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);
   1d9e8:	28c00007 	ldb	r3,0(r5)
   1d9ec:	20c00035 	stwio	r3,0(r4)
   1d9f0:	29400044 	addi	r5,r5,1
   1d9f4:	003ff806 	br	1d9d8 <_gp+0xffff7030>

  return count;
}
   1d9f8:	f800283a 	ret

0001d9fc <alt_up_accelerometer_spi_open_dev>:
{
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_accelerometer_spi_dev *dev = (alt_up_accelerometer_spi_dev*)alt_find_dev(name, &alt_dev_list);
   1d9fc:	d1600c04 	addi	r5,gp,-32720
   1da00:	001dbd41 	jmpi	1dbd4 <alt_find_dev>

0001da04 <alt_up_accelerometer_spi_read_address_register>:
 * @return 0 for success 
 **/
int alt_up_accelerometer_spi_read_address_register(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 *addr)
{
	// reads data from the device Address register
	*(addr) = IORD_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base); 
   1da04:	20800a17 	ldw	r2,40(r4)
   1da08:	10800023 	ldbuio	r2,0(r2)
   1da0c:	28800005 	stb	r2,0(r5)

	return 0;
}
   1da10:	0005883a 	mov	r2,zero
   1da14:	f800283a 	ret

0001da18 <alt_up_accelerometer_spi_read>:
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_read(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 *data)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1da18:	20800a17 	ldw	r2,40(r4)
   1da1c:	29400fcc 	andi	r5,r5,63
   1da20:	11400025 	stbio	r5,0(r2)

	// read data to the device Data register
	*(data) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1da24:	20800a17 	ldw	r2,40(r4)
   1da28:	10800063 	ldbuio	r2,1(r2)
   1da2c:	30800005 	stb	r2,0(r6)

	return 0;
}
   1da30:	0005883a 	mov	r2,zero
   1da34:	f800283a 	ret

0001da38 <alt_up_accelerometer_spi_write>:
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_write(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 data)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1da38:	20800a17 	ldw	r2,40(r4)
   1da3c:	29400fcc 	andi	r5,r5,63
   1da40:	11400025 	stbio	r5,0(r2)

	// write data to the device Data register
	IOWR_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base, data & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK); 
   1da44:	20800a17 	ldw	r2,40(r4)
   1da48:	11800065 	stbio	r6,1(r2)

	return 0;
}
   1da4c:	0005883a 	mov	r2,zero
   1da50:	f800283a 	ret

0001da54 <alt_up_accelerometer_spi_read_x_axis>:
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_x_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *x_axis)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1da54:	20800a17 	ldw	r2,40(r4)
   1da58:	00c00c84 	movi	r3,50
   1da5c:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1da60:	20800a17 	ldw	r2,40(r4)
   1da64:	10800063 	ldbuio	r2,1(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1da68:	00c00cc4 	movi	r3,51
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1da6c:	10803fcc 	andi	r2,r2,255
   1da70:	28800015 	stw	r2,0(r5)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1da74:	20800a17 	ldw	r2,40(r4)
   1da78:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(x_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   1da7c:	20800a17 	ldw	r2,40(r4)
   1da80:	10800063 	ldbuio	r2,1(r2)
   1da84:	10803fcc 	andi	r2,r2,255
   1da88:	1006923a 	slli	r3,r2,8
   1da8c:	28800017 	ldw	r2,0(r5)
   1da90:	1885883a 	add	r2,r3,r2

	if (*(x_axis) & 0x00008000)
   1da94:	10e0000c 	andi	r3,r2,32768
   1da98:	18000126 	beq	r3,zero,1daa0 <alt_up_accelerometer_spi_read_x_axis+0x4c>
	{
		*(x_axis) |= 0xFFFF0000;
   1da9c:	10bffff4 	orhi	r2,r2,65535
   1daa0:	28800015 	stw	r2,0(r5)
	}

	return 0;
}
   1daa4:	0005883a 	mov	r2,zero
   1daa8:	f800283a 	ret

0001daac <alt_up_accelerometer_spi_read_y_axis>:
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_y_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *y_axis)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1daac:	20800a17 	ldw	r2,40(r4)
   1dab0:	00c00d04 	movi	r3,52
   1dab4:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1dab8:	20800a17 	ldw	r2,40(r4)
   1dabc:	10800063 	ldbuio	r2,1(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1dac0:	00c00d44 	movi	r3,53
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1dac4:	10803fcc 	andi	r2,r2,255
   1dac8:	28800015 	stw	r2,0(r5)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1dacc:	20800a17 	ldw	r2,40(r4)
   1dad0:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(y_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   1dad4:	20800a17 	ldw	r2,40(r4)
   1dad8:	10800063 	ldbuio	r2,1(r2)
   1dadc:	10803fcc 	andi	r2,r2,255
   1dae0:	1006923a 	slli	r3,r2,8
   1dae4:	28800017 	ldw	r2,0(r5)
   1dae8:	1885883a 	add	r2,r3,r2

	if (*(y_axis) & 0x00008000)
   1daec:	10e0000c 	andi	r3,r2,32768
   1daf0:	18000126 	beq	r3,zero,1daf8 <alt_up_accelerometer_spi_read_y_axis+0x4c>
	{
		*(y_axis) |= 0xFFFF0000;
   1daf4:	10bffff4 	orhi	r2,r2,65535
   1daf8:	28800015 	stw	r2,0(r5)
	}

	return 0;
}
   1dafc:	0005883a 	mov	r2,zero
   1db00:	f800283a 	ret

0001db04 <alt_up_accelerometer_spi_read_z_axis>:
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_z_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *z_axis)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1db04:	20800a17 	ldw	r2,40(r4)
   1db08:	00c00d84 	movi	r3,54
   1db0c:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1db10:	20800a17 	ldw	r2,40(r4)
   1db14:	10800063 	ldbuio	r2,1(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1db18:	00c00dc4 	movi	r3,55
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1db1c:	10803fcc 	andi	r2,r2,255
   1db20:	28800015 	stw	r2,0(r5)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1db24:	20800a17 	ldw	r2,40(r4)
   1db28:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(z_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   1db2c:	20800a17 	ldw	r2,40(r4)
   1db30:	10800063 	ldbuio	r2,1(r2)
   1db34:	10803fcc 	andi	r2,r2,255
   1db38:	1006923a 	slli	r3,r2,8
   1db3c:	28800017 	ldw	r2,0(r5)
   1db40:	1885883a 	add	r2,r3,r2

	if (*(z_axis) & 0x00008000)
   1db44:	10e0000c 	andi	r3,r2,32768
   1db48:	18000126 	beq	r3,zero,1db50 <alt_up_accelerometer_spi_read_z_axis+0x4c>
	{
		*(z_axis) |= 0xFFFF0000;
   1db4c:	10bffff4 	orhi	r2,r2,65535
   1db50:	28800015 	stw	r2,0(r5)
	}

	return 0;
}
   1db54:	0005883a 	mov	r2,zero
   1db58:	f800283a 	ret

0001db5c <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   1db5c:	f800283a 	ret

0001db60 <alt_dev_null_write>:
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  return len;
}
   1db60:	3005883a 	mov	r2,r6
   1db64:	f800283a 	ret

0001db68 <alt_dev_llist_insert>:
{
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   1db68:	20000226 	beq	r4,zero,1db74 <alt_dev_llist_insert+0xc>
   1db6c:	20800217 	ldw	r2,8(r4)
   1db70:	1000101e 	bne	r2,zero,1dbb4 <alt_dev_llist_insert+0x4c>

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  return ((alt_errno) ? alt_errno() : &errno);
   1db74:	d0a01017 	ldw	r2,-32704(gp)
   1db78:	10000926 	beq	r2,zero,1dba0 <alt_dev_llist_insert+0x38>
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   1db7c:	deffff04 	addi	sp,sp,-4
   1db80:	dfc00015 	stw	ra,0(sp)
   1db84:	103ee83a 	callr	r2
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  {
    ALT_ERRNO = EINVAL;
   1db88:	00c00584 	movi	r3,22
   1db8c:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
   1db90:	00bffa84 	movi	r2,-22
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
}
   1db94:	dfc00017 	ldw	ra,0(sp)
   1db98:	dec00104 	addi	sp,sp,4
   1db9c:	f800283a 	ret
   1dba0:	d0a28004 	addi	r2,gp,-30208
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  {
    ALT_ERRNO = EINVAL;
   1dba4:	00c00584 	movi	r3,22
   1dba8:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
   1dbac:	00bffa84 	movi	r2,-22
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
}
   1dbb0:	f800283a 	ret

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  entry->next     = list->next;
   1dbb4:	28800017 	ldw	r2,0(r5)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   1dbb8:	21400115 	stw	r5,4(r4)
  entry->next     = list->next;
   1dbbc:	20800015 	stw	r2,0(r4)

  list->next->previous = entry;
   1dbc0:	28800017 	ldw	r2,0(r5)
   1dbc4:	11000115 	stw	r4,4(r2)
  list->next           = entry;
   1dbc8:	29000015 	stw	r4,0(r5)
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
   1dbcc:	0005883a 	mov	r2,zero
   1dbd0:	f800283a 	ret

0001dbd4 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   1dbd4:	defffb04 	addi	sp,sp,-20
   1dbd8:	dcc00315 	stw	r19,12(sp)
   1dbdc:	dc800215 	stw	r18,8(sp)
   1dbe0:	dc400115 	stw	r17,4(sp)
   1dbe4:	dc000015 	stw	r16,0(sp)
   1dbe8:	dfc00415 	stw	ra,16(sp)
   1dbec:	2027883a 	mov	r19,r4
   1dbf0:	2823883a 	mov	r17,r5
  alt_dev* next = (alt_dev*) llist->next;
   1dbf4:	2c000017 	ldw	r16,0(r5)
  alt_32 len;

  len  = strlen(name) + 1;
   1dbf8:	001abb40 	call	1abb4 <strlen>
   1dbfc:	14800044 	addi	r18,r2,1
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   1dc00:	84400726 	beq	r16,r17,1dc20 <alt_find_dev+0x4c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   1dc04:	81000217 	ldw	r4,8(r16)
   1dc08:	900d883a 	mov	r6,r18
   1dc0c:	980b883a 	mov	r5,r19
   1dc10:	001985c0 	call	1985c <memcmp>
   1dc14:	10000426 	beq	r2,zero,1dc28 <alt_find_dev+0x54>
    {
      /* match found */

      return next;
    }
    next = (alt_dev*) next->llist.next;
   1dc18:	84000017 	ldw	r16,0(r16)
   1dc1c:	003ff806 	br	1dc00 <_gp+0xffff7258>
  }
  
  /* No match found */
  
  return NULL;
   1dc20:	0005883a 	mov	r2,zero
   1dc24:	00000106 	br	1dc2c <alt_find_dev+0x58>
   1dc28:	8005883a 	mov	r2,r16
}
   1dc2c:	dfc00417 	ldw	ra,16(sp)
   1dc30:	dcc00317 	ldw	r19,12(sp)
   1dc34:	dc800217 	ldw	r18,8(sp)
   1dc38:	dc400117 	ldw	r17,4(sp)
   1dc3c:	dc000017 	ldw	r16,0(sp)
   1dc40:	dec00504 	addi	sp,sp,20
   1dc44:	f800283a 	ret

0001dc48 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   1dc48:	f800283a 	ret

0001dc4c <altera_nios2_gen2_irq_init>:
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    NIOS2_WRITE_IENABLE(0);
   1dc4c:	000170fa 	wrctl	ienable,zero
   1dc50:	f800283a 	ret

0001dc54 <alt_exception_cause_generated_bad_addr>:
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  switch (cause) {
   1dc54:	213ffe84 	addi	r4,r4,-6
   1dc58:	008003c4 	movi	r2,15
   1dc5c:	11001636 	bltu	r2,r4,1dcb8 <alt_exception_cause_generated_bad_addr+0x64>
   1dc60:	200890ba 	slli	r4,r4,2
   1dc64:	008000b4 	movhi	r2,2
   1dc68:	10b71e04 	addi	r2,r2,-9096
   1dc6c:	2089883a 	add	r4,r4,r2
   1dc70:	20800017 	ldw	r2,0(r4)
   1dc74:	1000683a 	jmp	r2
   1dc78:	0001dcc0 	call	1dcc <__alt_mem_onchip_memory-0xe234>
   1dc7c:	0001dcc0 	call	1dcc <__alt_mem_onchip_memory-0xe234>
   1dc80:	0001dcb8 	rdprs	zero,zero,1906
   1dc84:	0001dcb8 	rdprs	zero,zero,1906
   1dc88:	0001dcb8 	rdprs	zero,zero,1906
   1dc8c:	0001dcc0 	call	1dcc <__alt_mem_onchip_memory-0xe234>
   1dc90:	0001dcb8 	rdprs	zero,zero,1906
   1dc94:	0001dcb8 	rdprs	zero,zero,1906
   1dc98:	0001dcc0 	call	1dcc <__alt_mem_onchip_memory-0xe234>
   1dc9c:	0001dcc0 	call	1dcc <__alt_mem_onchip_memory-0xe234>
   1dca0:	0001dcb8 	rdprs	zero,zero,1906
   1dca4:	0001dcc0 	call	1dcc <__alt_mem_onchip_memory-0xe234>
   1dca8:	0001dcb8 	rdprs	zero,zero,1906
   1dcac:	0001dcb8 	rdprs	zero,zero,1906
   1dcb0:	0001dcb8 	rdprs	zero,zero,1906
   1dcb4:	0001dcc0 	call	1dcc <__alt_mem_onchip_memory-0xe234>
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   1dcb8:	0005883a 	mov	r2,zero
   1dcbc:	f800283a 	ret
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   1dcc0:	00800044 	movi	r2,1
    return 0;

  default:
    return 0;
  }
}
   1dcc4:	f800283a 	ret
