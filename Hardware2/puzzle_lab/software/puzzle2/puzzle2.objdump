
puzzle2.elf:     file format elf32-littlenios2
puzzle2.elf
architecture: nios2:r1, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010180

Program Header:
    LOAD off    0x00001000 vaddr 0x00010000 paddr 0x00010000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x00010020 paddr 0x00010020 align 2**12
         filesz 0x0000d774 memsz 0x0000d774 flags r-x
    LOAD off    0x0000e794 vaddr 0x0001d794 paddr 0x0001e104 align 2**12
         filesz 0x00000970 memsz 0x00000970 flags rw-
    LOAD off    0x0000fa74 vaddr 0x0001ea74 paddr 0x0001ea74 align 2**12
         filesz 0x00000000 memsz 0x000004cc flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  00010000  00010000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000160  00010020  00010020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         0000d290  00010180  00010180  00001180  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       00000384  0001d410  0001d410  0000e410  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00000970  0001d794  0001e104  0000e794  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000004cc  0001ea74  0001ea74  0000fa74  2**2
                  ALLOC, SMALL_DATA
  6 .onchip_memory 00000000  0001ef40  0001ef40  0000f104  2**0
                  CONTENTS
  7 .comment      00000023  00000000  00000000  0000f104  2**0
                  CONTENTS, READONLY
  8 .debug_aranges 000009c0  00000000  00000000  0000f128  2**3
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_info   000147f2  00000000  00000000  0000fae8  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_abbrev 00005645  00000000  00000000  000242da  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_line   00007ab2  00000000  00000000  0002991f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_frame  0000138c  00000000  00000000  000313d4  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_str    000031de  00000000  00000000  00032760  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_loc    00016e89  00000000  00000000  0003593e  2**0
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_alt_sim_info 00000010  00000000  00000000  0004c7c8  2**2
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_ranges 000014f8  00000000  00000000  0004c7d8  2**3
                  CONTENTS, READONLY, DEBUGGING
 17 .thread_model 00000003  00000000  00000000  000505fe  2**0
                  CONTENTS, READONLY
 18 .cpu          00000003  00000000  00000000  00050601  2**0
                  CONTENTS, READONLY
 19 .qsys         00000001  00000000  00000000  00050604  2**0
                  CONTENTS, READONLY
 20 .simulation_enabled 00000001  00000000  00000000  00050605  2**0
                  CONTENTS, READONLY
 21 .sysid_hash   00000004  00000000  00000000  00050606  2**0
                  CONTENTS, READONLY
 22 .sysid_base   00000004  00000000  00000000  0005060a  2**0
                  CONTENTS, READONLY
 23 .sysid_time   00000004  00000000  00000000  0005060e  2**0
                  CONTENTS, READONLY
 24 .stderr_dev   00000009  00000000  00000000  00050612  2**0
                  CONTENTS, READONLY
 25 .stdin_dev    00000009  00000000  00000000  0005061b  2**0
                  CONTENTS, READONLY
 26 .stdout_dev   00000009  00000000  00000000  00050624  2**0
                  CONTENTS, READONLY
 27 .sopc_system_name 0000000c  00000000  00000000  0005062d  2**0
                  CONTENTS, READONLY
 28 .quartus_project_dir 00000023  00000000  00000000  00050639  2**0
                  CONTENTS, READONLY
 29 .jdi          00004a13  00000000  00000000  0005065c  2**0
                  CONTENTS, READONLY
 30 .sopcinfo     000717fd  00000000  00000000  0005506f  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
00010000 l    d  .entry	00000000 .entry
00010020 l    d  .exceptions	00000000 .exceptions
00010180 l    d  .text	00000000 .text
0001d410 l    d  .rodata	00000000 .rodata
0001d794 l    d  .rwdata	00000000 .rwdata
0001ea74 l    d  .bss	00000000 .bss
0001ef40 l    d  .onchip_memory	00000000 .onchip_memory
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../puzzle2_bsp//obj/HAL/src/crt0.o
000101b8 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 alt_instruction_exception_entry.c
00000000 l    df *ABS*	00000000 DE_seven_segment_display.c
0001d46c l     O .rodata	0000002b CSWTCH.28
0001eb04 l     O .bss	00000014 filter_x.3939
0001eaf0 l     O .bss	00000014 filter_y.3940
0001d498 l     O .rodata	00000028 h.3938
00000000 l    df *ABS*	00000000 lib2-divmod.c
00000000 l    df *ABS*	00000000 adddf3.c
00000000 l    df *ABS*	00000000 muldf3.c
00000000 l    df *ABS*	00000000 fixdfsi.c
00000000 l    df *ABS*	00000000 floatsidf.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 asprintf.c
00000000 l    df *ABS*	00000000 impure.c
0001d794 l     O .rwdata	00000424 impure_data
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 strchr.c
00000000 l    df *ABS*	00000000 strcpy.c
00000000 l    df *ABS*	00000000 strstr.c
00012fdc l     F .text	00000104 critical_factorization
000130e0 l     F .text	000003b0 two_way_long_needle
00000000 l    df *ABS*	00000000 vfprintf.c
0001d606 l     O .rodata	00000010 zeroes.4389
0001d616 l     O .rodata	00000010 blanks.4388
00000000 l    df *ABS*	00000000 dtoa.c
00015afc l     F .text	00000228 quorem
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 locale.c
0001dfe0 l     O .rwdata	00000020 lc_ctype_charset
0001dfc0 l     O .rwdata	00000020 lc_message_charset
0001e000 l     O .rwdata	00000038 lconv
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 mprec.c
0001d644 l     O .rodata	0000000c p05.2768
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0001d768 l     O .rodata	00000010 zeroes.4333
0001d778 l     O .rodata	00000010 blanks.4332
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 divdf3.c
00000000 l    df *ABS*	00000000 eqdf2.c
00000000 l    df *ABS*	00000000 gedf2.c
00000000 l    df *ABS*	00000000 ledf2.c
00000000 l    df *ABS*	00000000 subdf3.c
00000000 l    df *ABS*	00000000 floatunsidf.c
00000000 l    df *ABS*	00000000 alt_getchar.c
00000000 l    df *ABS*	00000000 alt_irq_register.c
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_load.c
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_putstr.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
0001e0dc l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_sys_init.c
0001e038 l     O .rwdata	0000002c accelerometer_spi
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 altera_avalon_timer_sc.c
0001cff4 l     F .text	0000003c alt_avalon_timer_sc_irq
00000000 l    df *ABS*	00000000 altera_up_avalon_accelerometer_spi.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev.c
0001d1bc l     F .text	00000008 alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_gen2_irq.c
0001eaec g     O .bss	00000004 alt_instruction_exception_handler
00018aa4 g     F .text	00000074 _mprec_log10
00018b90 g     F .text	0000008c __any_on
0001d650 g     O .rodata	00000028 __mprec_tinytens
0001ce54 g     F .text	0000002c alt_main
00012f4c g     F .text	00000090 strcpy
00010494 g     F .text	00000014 led_write
0001ee40 g     O .bss	00000100 alt_irq
0001e104 g       *ABS*	00000000 __flash_rwdata_start
0001c0a0 g     F .text	00000088 .hidden __eqdf2
0001ea78 g     O .bss	00000004 pause
00010704 g     F .text	00000054 print
0001ef40 g       *ABS*	00000000 __alt_heap_start
0001ea7c g     O .bss	00000004 dancing
0001023c g     F .text	00000044 print_data
0001ea80 g     O .bss	00000004 disp_off
000177e0 g     F .text	0000007c _setlocale_r
0001ce84 g     F .text	00000004 __malloc_unlock
0001a450 g     F .text	0000015c memmove
00017b64 g     F .text	000000a8 _Balloc
0001e0c0 g     O .rwdata	00000004 timer
0001ea84 g     O .bss	00000004 reverse
000101bc g     F .text	00000080 sys_timer_isr
0001044c g     F .text	00000048 read_chars
0001ce88 g     F .text	00000038 alt_putstr
0001c128 g     F .text	000000dc .hidden __gtdf2
0001e0e0 g     O .rwdata	00000004 jtag_uart
0001d394 g     F .text	00000008 altera_nios2_gen2_irq_init
00010000 g     F .entry	0000000c __reset
0001d0b0 g     F .text	00000058 alt_up_accelerometer_spi_read_x_axis
00010020 g       *ABS*	00000000 __flash_exceptions_start
0001eac4 g     O .bss	00000004 errno
00018fd4 g     F .text	000013a0 ___svfiprintf_internal_r
0001eadc g     O .bss	00000004 alt_argv
000260bc g       *ABS*	00000000 _gp
000102d0 g     F .text	000000b4 generate_text
0001e064 g     O .rwdata	00000030 alt_fd_list
0001d230 g     F .text	00000074 alt_find_dev
00017a1c g     F .text	00000148 memcpy
00012130 g     F .text	000000dc .hidden __floatsidf
0001c204 g     F .text	000000f4 .hidden __ltdf2
0001ea88 g     O .bss	00000001 prevLetter
0001d39c g     F .text	00000074 alt_exception_cause_generated_bad_addr
00018c1c g     F .text	00000074 __fpclassifyd
00018a00 g     F .text	000000a4 __ratio
0001cf64 g     F .text	0000005c altera_avalon_jtag_uart_read
00012374 g     F .text	00000014 malloc
00010edc g     F .text	00000064 .hidden __udivsi3
00010628 g     F .text	00000054 getBinLow
0001d6a0 g     O .rodata	000000c8 __mprec_tens
0001785c g     F .text	0000000c __locale_charset
0001eac0 g     O .bss	00000004 __malloc_top_pad
0001ea8c g     O .bss	00000004 flag
0001e0d4 g     O .rwdata	00000004 __mb_cur_max
0001788c g     F .text	0000000c _localeconv_r
0001ea90 g     O .bss	00000004 length
00017f98 g     F .text	0000003c __i2b
00012cd0 g     F .text	00000054 _sbrk_r
0001e0e4 g     O .rwdata	00000004 alt_max_fd
0001eabc g     O .bss	00000004 __malloc_max_sbrked_mem
0001cce0 g     F .text	00000094 alt_irq_register
00010f98 g     F .text	000008ac .hidden __adddf3
000187a8 g     F .text	0000010c __b2d
0001b10c g     F .text	000005c4 .hidden __umoddi3
0001e0c4 g     O .rwdata	00000004 _global_impure_ptr
0001a5ac g     F .text	00000564 _realloc_r
0001ef40 g       *ABS*	00000000 __bss_end
0001cc9c g     F .text	00000044 alt_getchar
0001d2dc g     F .text	000000b8 alt_tick
000105f4 g     F .text	00000034 getBinLowLow
0001ab10 g     F .text	000005fc .hidden __udivdi3
0001d678 g     O .rodata	00000028 __mprec_bigtens
00017d7c g     F .text	00000104 __s2b
0001cbf4 g     F .text	000000a8 .hidden __floatunsidf
000184e8 g     F .text	00000060 __mcmp
0001d2a8 g     F .text	00000034 alt_alarm_stop
0001ead4 g     O .bss	00000004 alt_irq_active
000100fc g     F .exceptions	00000060 alt_irq_handler
0001e094 g     O .rwdata	00000028 alt_dev_null
0001d1b8 g     F .text	00000004 alt_dcache_flush_all
00017e80 g     F .text	00000068 __hi0bits
000120b0 g     F .text	00000080 .hidden __fixdfsi
0001e104 g       *ABS*	00000000 __ram_rwdata_end
000104dc g     F .text	00000070 timer_init
00010000 g       *ABS*	00000000 __alt_mem_onchip_memory
00010758 g     F .text	00000280 print_letters
0001e0e8 g     O .rwdata	00000008 alt_dev_list
0001eb40 g     O .bss	00000200 text
0001ea94 g     O .bss	00000004 dance_dir
0001d794 g       *ABS*	00000000 __ram_rodata_end
0001c204 g     F .text	000000f4 .hidden __ledf2
00018260 g     F .text	00000140 __pow5mult
0001ea98 g     O .bss	00000001 led
0001ead0 g     O .bss	00000004 __nlocale_changed
00010f40 g     F .text	00000058 .hidden __umodsi3
0001ef40 g       *ABS*	00000000 end
0001015c g     F .exceptions	00000024 alt_instruction_exception_entry
00020000 g       *ABS*	00000000 __alt_stack_pointer
0001d030 g     F .text	00000028 alt_avalon_timer_sc_init
0001220c g     F .text	00000064 .hidden __clzsi2
0001cfc0 g     F .text	00000034 altera_avalon_jtag_uart_write
00010384 g     F .text	000000c8 interpret_command
00012298 g     F .text	00000064 _asprintf_r
000178bc g     F .text	000000e4 memchr
00012d24 g     F .text	00000058 _sprintf_r
000174d0 g     F .text	00000310 _free_r
00017868 g     F .text	00000010 __locale_mb_cur_max
0001eacc g     O .bss	00000004 __mlocale_changed
0001e0cc g     O .rwdata	00000004 __malloc_sbrk_base
00010180 g     F .text	0000003c _start
0001ea9c g     O .bss	00000004 level
0001eae8 g     O .bss	00000004 _alt_tick_rate
00013490 g     F .text	000003b0 strstr
000183a0 g     F .text	00000148 __lshift
0001eae4 g     O .bss	00000004 _alt_nticks
0001cf2c g     F .text	00000038 alt_sys_init
0001d060 g     F .text	00000014 alt_up_accelerometer_spi_read_address_register
00018e04 g     F .text	000001d0 __ssprint_r
00017fd4 g     F .text	0000028c __multiply
00012270 g     F .text	00000028 .hidden __mulsi3
0001d794 g       *ABS*	00000000 __ram_rwdata_start
0001d410 g       *ABS*	00000000 __ram_rodata_start
0001eb18 g     O .bss	00000028 __malloc_current_mallinfo
000188b4 g     F .text	0000014c __d2b
0001d108 g     F .text	00000058 alt_up_accelerometer_spi_read_y_axis
0001eaa0 g     O .bss	00000004 slowdown_toggle
000179a0 g     F .text	0000007c memcmp
0001ef40 g       *ABS*	00000000 __alt_stack_base
00010578 g     F .text	0000007c getBinaryLetter
0001b6d0 g     F .text	000009d0 .hidden __divdf3
00018b18 g     F .text	00000078 __copybits
0001dbb8 g     O .rwdata	00000408 __malloc_av_
00011844 g     F .text	0000086c .hidden __muldf3
0001d1c4 g     F .text	0000006c alt_dev_llist_insert
0001ce80 g     F .text	00000004 __malloc_lock
0001cec0 g     F .text	0000004c sbrk
00013840 g     F .text	000022bc ___svfprintf_internal_r
0001ed40 g     O .bss	00000100 enteredText
0001a374 g     F .text	000000dc _calloc_r
0001ea74 g       *ABS*	00000000 __bss_start
00012ba8 g     F .text	00000128 memset
000109d8 g     F .text	0000040c main
0001ead8 g     O .bss	00000004 alt_envp
0001eab8 g     O .bss	00000004 __malloc_max_total_mem
00020000 g       *ABS*	00000000 __alt_heap_limit
00015d24 g     F .text	00001688 _dtoa_r
0001239c g     F .text	0000080c _malloc_r
0001e0bc g     O .rwdata	00000004 life
0001e0f8 g     O .rwdata	00000004 alt_errno
00010de4 g     F .text	00000084 .hidden __divsi3
000173ac g     F .text	00000124 _malloc_trim_r
00018c90 g     F .text	000000dc strcmp
0001d410 g       *ABS*	00000000 __flash_rodata_start
0001c0a0 g     F .text	00000088 .hidden __nedf2
0001cf0c g     F .text	00000020 alt_irq_init
00012d7c g     F .text	0000006c sprintf
0001d4c0 g     O .rodata	00000100 .hidden __clz_tab
000122fc g     F .text	00000078 asprintf
0001eac8 g     O .bss	00000004 _PathLocale
00017898 g     F .text	00000018 setlocale
0001e0c8 g     O .rwdata	00000004 _impure_ptr
0001eae0 g     O .bss	00000004 alt_argc
00017884 g     F .text	00000008 __locale_cjk_lang
0001067c g     F .text	00000054 getBinHigh
00010020 g       .exceptions	00000000 alt_irq_entry
00018744 g     F .text	00000064 __ulp
0001ea74 g     O .bss	00000001 pwm
0001eaa4 g     O .bss	00000004 toggle
0001e0f0 g     O .rwdata	00000008 alt_fs_list
0001eaa8 g     O .bss	00000004 speedup_toggle
00010020 g       *ABS*	00000000 __ram_exceptions_start
0001d058 g     F .text	00000008 alt_up_accelerometer_spi_open_dev
000178b0 g     F .text	0000000c localeconv
0001eaac g     O .bss	00000004 upsideDown
0001e104 g       *ABS*	00000000 _edata
0001eab0 g     O .bss	00000004 dance_state
0001ef40 g       *ABS*	00000000 _end
00010180 g       *ABS*	00000000 __ram_exceptions_end
0001e0d0 g     O .rwdata	00000004 __malloc_trim_threshold
00017878 g     F .text	0000000c __locale_msgcharset
00018548 g     F .text	000001fc __mdiff
00010e68 g     F .text	00000074 .hidden __modsi3
0001d160 g     F .text	00000058 alt_up_accelerometer_spi_read_z_axis
00020000 g       *ABS*	00000000 __alt_data_end
00010020 g     F .exceptions	00000000 alt_exception
000106d0 g     F .text	00000034 getBinHighHigh
000104a8 g     F .text	00000034 convert_read
0001000c g       .entry	00000000 _exit
0001d074 g     F .text	00000020 alt_up_accelerometer_spi_read
0001d094 g     F .text	0000001c alt_up_accelerometer_spi_write
0001054c g     F .text	0000002c getBin
00018d6c g     F .text	00000098 strlen
0001c128 g     F .text	000000dc .hidden __gedf2
0001d2a4 g     F .text	00000004 alt_icache_flush_all
00012de8 g     F .text	00000164 strchr
0001e0d8 g     O .rwdata	00000004 alt_priority_mask
0001eab4 g     O .bss	00000004 re_enter
0001c2f8 g     F .text	000008fc .hidden __subdf3
00017ee8 g     F .text	000000b0 __lo0bits
0001e0fc g     O .rwdata	00000008 alt_alarm_list
00010280 g     F .text	00000050 send_text
0001cd74 g     F .text	000000e0 alt_load
00012388 g     F .text	00000014 free
00017c34 g     F .text	00000148 __multadd
00017c0c g     F .text	00000028 _Bfree



Disassembly of section .entry:

00010000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
   10000:	00400074 	movhi	at,1
    ori r1, r1, %lo(_start)
   10004:	08406014 	ori	at,at,384
    jmp r1
   10008:	0800683a 	jmp	at

0001000c <_exit>:
	...

Disassembly of section .exceptions:

00010020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
   10020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
   10024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
   10028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
   1002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
   10030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
   10034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
   10038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
   1003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
   10040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
   10044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
   10048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
   1004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
   10050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
   10054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
   10058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
   1005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
   10060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
   10064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
   10068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
   1006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   10070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
   10074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
   10078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
   1007c:	10000326 	beq	r2,zero,1008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
   10080:	20000226 	beq	r4,zero,1008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
   10084:	00100fc0 	call	100fc <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
   10088:	00000706 	br	100a8 <alt_exception+0x88>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw ea, 72(sp) /* EA is PC+4 so will skip over instruction causing exception */
   1008c:	df401215 	stw	ea,72(sp)
.Lunknown_16bit:
        addi.n r4, r4, 2 /* Need PC+2 to skip over instruction causing exception */
        stw r4, 72(sp)

#else /* CDX is not Enabled and all instructions are 32bits */
        ldw r2, -4(ea) /* Instruction value that caused exception */
   10090:	e8bfff17 	ldw	r2,-4(ea)
         * debugger is present) or go into an infinite loop since the
         * handling behavior is undefined; in that case we will not return here.
         */

        /* Load exception-causing address as first argument (r4) */
        addi   r4, ea, -4
   10094:	e93fff04 	addi	r4,ea,-4

        /* Call the instruction-exception entry */
        call   alt_instruction_exception_entry
   10098:	001015c0 	call	1015c <alt_instruction_exception_entry>
         * instruction
         *
         * Return code was 0: Skip. The instruction after the exception is
         * already stored in 72(sp).
         */
        bne   r2, r0, .Lexception_exit
   1009c:	1000021e 	bne	r2,zero,100a8 <alt_exception+0x88>

        /*
         * Otherwise, modify 72(sp) to re-issue the instruction that caused the
         * exception.
         */
        addi  r15, ea, -4  /* instruction that caused exception */
   100a0:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
   100a4:	dbc01215 	stw	r15,72(sp)
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
   100a8:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
   100ac:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
   100b0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
   100b4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
   100b8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
   100bc:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
   100c0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
   100c4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
   100c8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
   100cc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
   100d0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
   100d4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
   100d8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
   100dc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
   100e0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
   100e4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
   100e8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
   100ec:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
   100f0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
   100f4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
   100f8:	ef80083a 	eret

000100fc <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
   100fc:	defffe04 	addi	sp,sp,-8
   10100:	dfc00115 	stw	ra,4(sp)
   10104:	dc000015 	stw	r16,0(sp)
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
   10108:	0007313a 	rdctl	r3,ipending
      if (active & mask)
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
   1010c:	040000b4 	movhi	r16,2
   10110:	843b9004 	addi	r16,r16,-4544

  active = alt_irq_pending ();

  do
  {
    i = 0;
   10114:	000b883a 	mov	r5,zero
    mask = 1;
   10118:	00800044 	movi	r2,1
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
   1011c:	1888703a 	and	r4,r3,r2
   10120:	20000b26 	beq	r4,zero,10150 <alt_irq_handler+0x54>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
   10124:	280490fa 	slli	r2,r5,3
   10128:	8085883a 	add	r2,r16,r2
   1012c:	10c00017 	ldw	r3,0(r2)
   10130:	11000117 	ldw	r4,4(r2)
   10134:	183ee83a 	callr	r3
   10138:	0007313a 	rdctl	r3,ipending

    } while (1);

    active = alt_irq_pending ();
    
  } while (active);
   1013c:	183ff51e 	bne	r3,zero,10114 <_gp+0xfffea058>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
   10140:	dfc00117 	ldw	ra,4(sp)
   10144:	dc000017 	ldw	r16,0(sp)
   10148:	dec00204 	addi	sp,sp,8
   1014c:	f800283a 	ret
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
   10150:	1085883a 	add	r2,r2,r2
      i++;
   10154:	29400044 	addi	r5,r5,1

    } while (1);
   10158:	003ff006 	br	1011c <_gp+0xfffea060>

0001015c <alt_instruction_exception_entry>:
#else
  cause = NIOS2_EXCEPTION_CAUSE_NOT_PRESENT;
  badaddr = 0;
#endif /* NIOS2_HAS_EXTRA_EXCEPTION_INFO */

  if(alt_instruction_exception_handler) {
   1015c:	d0a28c17 	ldw	r2,-30160(gp)
   10160:	10000426 	beq	r2,zero,10174 <alt_instruction_exception_entry+0x18>
     * Call handler. Its return value indicates whether the exception-causing
     * instruction should be re-issued. The code that called us,
     * alt_eceptions_entry.S, will look at this value and adjust the ea
     * register as necessary
     */
    return alt_instruction_exception_handler(cause, exception_pc, badaddr);
   10164:	200b883a 	mov	r5,r4
   10168:	000d883a 	mov	r6,zero
   1016c:	013fffc4 	movi	r4,-1
   10170:	1000683a 	jmp	r2
   *    (a peripheral which negates its interrupt output before its
   *    interrupt handler has been executed will cause spurious interrupts)
   */
  else {
#ifdef NIOS2_HAS_DEBUG_STUB
    NIOS2_BREAK();
   10174:	003da03a 	break	0
#endif /* NIOS2_HAS_DEBUG_STUB */
  }

  /* We should not get here. Remove compiler warning. */
  return NIOS2_EXCEPTION_RETURN_REISSUE_INST;
}
   10178:	0005883a 	mov	r2,zero
   1017c:	f800283a 	ret

Disassembly of section .text:

00010180 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
   10180:	06c000b4 	movhi	sp,2
    ori sp, sp, %lo(__alt_stack_pointer)
   10184:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
   10188:	068000b4 	movhi	gp,2
    ori gp, gp, %lo(_gp)
   1018c:	d6982f14 	ori	gp,gp,24764
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
   10190:	00800074 	movhi	r2,1
    ori r2, r2, %lo(__bss_start)
   10194:	10ba9d14 	ori	r2,r2,60020

    movhi r3, %hi(__bss_end)
   10198:	00c00074 	movhi	r3,1
    ori r3, r3, %lo(__bss_end)
   1019c:	18fbd014 	ori	r3,r3,61248

    beq r2, r3, 1f
   101a0:	10c00326 	beq	r2,r3,101b0 <_start+0x30>

0:
    stw zero, (r2)
   101a4:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
   101a8:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
   101ac:	10fffd36 	bltu	r2,r3,101a4 <_gp+0xfffea0e8>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
   101b0:	001cd740 	call	1cd74 <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
   101b4:	001ce540 	call	1ce54 <alt_main>

000101b8 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
   101b8:	003fff06 	br	101b8 <_gp+0xfffea0fc>

000101bc <sys_timer_isr>:
    * led = (8 >> val) | (8 << (8 - val));
    * level = (acc_read >> 1) & 0x1f;
}

void sys_timer_isr() {
    IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_BASE, 0);
   101bc:	008000b4 	movhi	r2,2
   101c0:	10840004 	addi	r2,r2,4096
   101c4:	10000035 	stwio	zero,0(r2)

    if (pwm < abs(level)) {
   101c8:	d0a27817 	ldw	r2,-30240(gp)
   101cc:	d1626e07 	ldb	r5,-30280(gp)
   101d0:	1009883a 	mov	r4,r2
   101d4:	1000010e 	bge	r2,zero,101dc <sys_timer_isr+0x20>
   101d8:	0089c83a 	sub	r4,zero,r2
   101dc:	00c000b4 	movhi	r3,2
   101e0:	18c42004 	addi	r3,r3,4224
   101e4:	2900080e 	bge	r5,r4,10208 <sys_timer_isr+0x4c>

        if (level < 0) {
   101e8:	1000040e 	bge	r2,zero,101fc <sys_timer_isr+0x40>
alt_8 pwm = 0;
alt_u8 led;
int level;

void led_write(alt_u8 led_pattern) {
    IOWR(LED_BASE, 0, led_pattern);
   101ec:	d0a27703 	ldbu	r2,-30244(gp)
   101f0:	1085883a 	add	r2,r2,r2
   101f4:	10803fcc 	andi	r2,r2,255
   101f8:	00000406 	br	1020c <sys_timer_isr+0x50>
   101fc:	d0a27703 	ldbu	r2,-30244(gp)
   10200:	1004d07a 	srli	r2,r2,1
   10204:	00000106 	br	1020c <sys_timer_isr+0x50>
   10208:	d0a27703 	ldbu	r2,-30244(gp)
   1020c:	18800035 	stwio	r2,0(r3)

    } else {
        led_write(led);
    }

    if (pwm > PWM_PERIOD) {
   10210:	d0a26e03 	ldbu	r2,-30280(gp)
   10214:	01000404 	movi	r4,16
   10218:	10c03fcc 	andi	r3,r2,255
   1021c:	18c0201c 	xori	r3,r3,128
   10220:	18ffe004 	addi	r3,r3,-128
   10224:	20c0020e 	bge	r4,r3,10230 <sys_timer_isr+0x74>
        pwm = 0;
   10228:	d0226e05 	stb	zero,-30280(gp)
   1022c:	f800283a 	ret
    } else {
        pwm++;
   10230:	10800044 	addi	r2,r2,1
   10234:	d0a26e05 	stb	r2,-30280(gp)
   10238:	f800283a 	ret

0001023c <print_data>:
char text[2*CHARLIM];//The text that has been adjusted for the allowed letters
int pause, reverse, toggle, speedup_toggle, slowdown_toggle, dance_state, dancing, dance_dir, upsideDown, length, re_enter, disp_off, flag;
int timer = CLOCKINIT;  //Standard speed for movement
int life = 1023;

void print_data(char *accel_x, char *accel_y, char *switchdata, char *buttondata){
   1023c:	defffc04 	addi	sp,sp,-16
	char *printMsg;
	asprintf(&printMsg, "%s %s %s %s\n", accel_x, accel_y, switchdata, buttondata); 	// Print out the strings
   10240:	d9c00115 	stw	r7,4(sp)
   10244:	280f883a 	mov	r7,r5
   10248:	014000b4 	movhi	r5,2
   1024c:	29750404 	addi	r5,r5,-11248
   10250:	d9800015 	stw	r6,0(sp)
   10254:	200d883a 	mov	r6,r4
   10258:	d9000204 	addi	r4,sp,8
char text[2*CHARLIM];//The text that has been adjusted for the allowed letters
int pause, reverse, toggle, speedup_toggle, slowdown_toggle, dance_state, dancing, dance_dir, upsideDown, length, re_enter, disp_off, flag;
int timer = CLOCKINIT;  //Standard speed for movement
int life = 1023;

void print_data(char *accel_x, char *accel_y, char *switchdata, char *buttondata){
   1025c:	dfc00315 	stw	ra,12(sp)
	char *printMsg;
	asprintf(&printMsg, "%s %s %s %s\n", accel_x, accel_y, switchdata, buttondata); 	// Print out the strings
   10260:	00122fc0 	call	122fc <asprintf>
	alt_putstr(printMsg);
   10264:	d9000217 	ldw	r4,8(sp)
   10268:	001ce880 	call	1ce88 <alt_putstr>
	free(printMsg);
   1026c:	d9000217 	ldw	r4,8(sp)
   10270:	00123880 	call	12388 <free>
	//memset(accel_x, 0, 4*CHARLIM);
	//memset(accel_y, 0, 4*CHARLIM);
	//memset(switchdata, 0, 4*CHARLIM);
	//memset(buttondata, 0, 4*CHARLIM);
}
   10274:	dfc00317 	ldw	ra,12(sp)
   10278:	dec00404 	addi	sp,sp,16
   1027c:	f800283a 	ret

00010280 <send_text>:

void send_text(char *text) {
   10280:	defffd04 	addi	sp,sp,-12
	char *printMsg;
	asprintf(&printMsg, "<--> %s <--> \n", text); 	// Print out the strings
   10284:	014000b4 	movhi	r5,2
   10288:	200d883a 	mov	r6,r4
   1028c:	29750804 	addi	r5,r5,-11232
	//memset(accel_y, 0, 4*CHARLIM);
	//memset(switchdata, 0, 4*CHARLIM);
	//memset(buttondata, 0, 4*CHARLIM);
}

void send_text(char *text) {
   10290:	dc000115 	stw	r16,4(sp)
   10294:	2021883a 	mov	r16,r4
	char *printMsg;
	asprintf(&printMsg, "<--> %s <--> \n", text); 	// Print out the strings
   10298:	d809883a 	mov	r4,sp
	//memset(accel_y, 0, 4*CHARLIM);
	//memset(switchdata, 0, 4*CHARLIM);
	//memset(buttondata, 0, 4*CHARLIM);
}

void send_text(char *text) {
   1029c:	dfc00215 	stw	ra,8(sp)
	char *printMsg;
	asprintf(&printMsg, "<--> %s <--> \n", text); 	// Print out the strings
   102a0:	00122fc0 	call	122fc <asprintf>
	alt_putstr(printMsg);
   102a4:	d9000017 	ldw	r4,0(sp)
   102a8:	001ce880 	call	1ce88 <alt_putstr>
	free(printMsg);
   102ac:	d9000017 	ldw	r4,0(sp)
   102b0:	00123880 	call	12388 <free>
	memset(text, 0, 2*CHARLIM);								// Empty the text buffer for next input
   102b4:	01808004 	movi	r6,512
   102b8:	000b883a 	mov	r5,zero
   102bc:	8009883a 	mov	r4,r16
}
   102c0:	dfc00217 	ldw	ra,8(sp)
   102c4:	dc000117 	ldw	r16,4(sp)
   102c8:	dec00304 	addi	sp,sp,12
void send_text(char *text) {
	char *printMsg;
	asprintf(&printMsg, "<--> %s <--> \n", text); 	// Print out the strings
	alt_putstr(printMsg);
	free(printMsg);
	memset(text, 0, 2*CHARLIM);								// Empty the text buffer for next input
   102cc:	0012ba81 	jmpi	12ba8 <memset>

000102d0 <generate_text>:
}

char generate_text(char curr, int *length, char *text, int *running) {
   102d0:	2005883a 	mov	r2,r4
	if(curr == '\n') return curr;								// If the line is empty, return nothing.
   102d4:	21003fcc 	andi	r4,r4,255
   102d8:	2100201c 	xori	r4,r4,128
   102dc:	213fe004 	addi	r4,r4,-128
   102e0:	00c00284 	movi	r3,10
   102e4:	20c02626 	beq	r4,r3,10380 <generate_text+0xb0>
	alt_putstr(printMsg);
	free(printMsg);
	memset(text, 0, 2*CHARLIM);								// Empty the text buffer for next input
}

char generate_text(char curr, int *length, char *text, int *running) {
   102e8:	defff804 	addi	sp,sp,-32
   102ec:	dd800615 	stw	r22,24(sp)
   102f0:	dd400515 	stw	r21,20(sp)
   102f4:	dd000415 	stw	r20,16(sp)
   102f8:	dcc00315 	stw	r19,12(sp)
   102fc:	dc800215 	stw	r18,8(sp)
   10300:	dc400115 	stw	r17,4(sp)
   10304:	dc000015 	stw	r16,0(sp)
   10308:	dfc00715 	stw	ra,28(sp)
   1030c:	3829883a 	mov	r20,r7
   10310:	3025883a 	mov	r18,r6
   10314:	2827883a 	mov	r19,r5
	if(curr == '\n') return curr;								// If the line is empty, return nothing.
   10318:	3023883a 	mov	r17,r6
	int idx = 0;										// Keep track of how many characters have been sent down for later printing
	char newCurr = curr;

	while (newCurr != EOF && newCurr != '\n'){						// Keep reading characters until we get to the end of the line
   1031c:	057fffc4 	movi	r21,-1
   10320:	1821883a 	mov	r16,r3
		if (newCurr == QUITLETTER) { *running = 0; }					// If quitting letter is encountered, setting running to 0
   10324:	05801f84 	movi	r22,126
char generate_text(char curr, int *length, char *text, int *running) {
	if(curr == '\n') return curr;								// If the line is empty, return nothing.
	int idx = 0;										// Keep track of how many characters have been sent down for later printing
	char newCurr = curr;

	while (newCurr != EOF && newCurr != '\n'){						// Keep reading characters until we get to the end of the line
   10328:	10c03fcc 	andi	r3,r2,255
   1032c:	18c0201c 	xori	r3,r3,128
   10330:	18ffe004 	addi	r3,r3,-128
   10334:	8c89c83a 	sub	r4,r17,r18
   10338:	1d400726 	beq	r3,r21,10358 <generate_text+0x88>
   1033c:	1c000626 	beq	r3,r16,10358 <generate_text+0x88>
		if (newCurr == QUITLETTER) { *running = 0; }					// If quitting letter is encountered, setting running to 0
   10340:	1d80011e 	bne	r3,r22,10348 <generate_text+0x78>
   10344:	a0000015 	stw	zero,0(r20)
		text[idx] = newCurr;								// Add the next letter to the text buffer
   10348:	88800005 	stb	r2,0(r17)
		idx++;										// Keep track of the number of characters read
		newCurr = alt_getchar();							// Get the next character
   1034c:	001cc9c0 	call	1cc9c <alt_getchar>
   10350:	8c400044 	addi	r17,r17,1
   10354:	003ff406 	br	10328 <_gp+0xfffea26c>
	}
	*length = idx;
   10358:	99000015 	stw	r4,0(r19)

	return newCurr;
}
   1035c:	dfc00717 	ldw	ra,28(sp)
   10360:	dd800617 	ldw	r22,24(sp)
   10364:	dd400517 	ldw	r21,20(sp)
   10368:	dd000417 	ldw	r20,16(sp)
   1036c:	dcc00317 	ldw	r19,12(sp)
   10370:	dc800217 	ldw	r18,8(sp)
   10374:	dc400117 	ldw	r17,4(sp)
   10378:	dc000017 	ldw	r16,0(sp)
   1037c:	dec00804 	addi	sp,sp,32
   10380:	f800283a 	ret

00010384 <interpret_command>:

char * interpret_command(char* command)
{
	if ( strstr(command, "7SEG=") != 0 ) {
   10384:	014000b4 	movhi	r5,2

	return newCurr;
}

char * interpret_command(char* command)
{
   10388:	defffe04 	addi	sp,sp,-8
	if ( strstr(command, "7SEG=") != 0 ) {
   1038c:	29750c04 	addi	r5,r5,-11216

	return newCurr;
}

char * interpret_command(char* command)
{
   10390:	dc000015 	stw	r16,0(sp)
   10394:	dfc00115 	stw	ra,4(sp)
   10398:	2021883a 	mov	r16,r4
	if ( strstr(command, "7SEG=") != 0 ) {
   1039c:	00134900 	call	13490 <strstr>
   103a0:	10000226 	beq	r2,zero,103ac <interpret_command+0x28>
		command += 5;
   103a4:	80800144 	addi	r2,r16,5
		return command;
   103a8:	00002406 	br	1043c <interpret_command+0xb8>
	}
	if ( strstr(command, "LED=") != 0 ) {
   103ac:	014000b4 	movhi	r5,2
   103b0:	29750e04 	addi	r5,r5,-11208
   103b4:	8009883a 	mov	r4,r16
   103b8:	00134900 	call	13490 <strstr>
   103bc:	10000226 	beq	r2,zero,103c8 <interpret_command+0x44>
		command += 4;
   103c0:	80800104 	addi	r2,r16,4
		return command;
   103c4:	00001d06 	br	1043c <interpret_command+0xb8>
	}
	if ( strstr(command, "LIFE+") != 0 )	{
   103c8:	014000b4 	movhi	r5,2
   103cc:	29751004 	addi	r5,r5,-11200
   103d0:	8009883a 	mov	r4,r16
   103d4:	00134900 	call	13490 <strstr>
   103d8:	10000426 	beq	r2,zero,103ec <interpret_command+0x68>
		life = ((life + 1) * 2) - 1;
   103dc:	d0a00017 	ldw	r2,-32768(gp)
   103e0:	1004907a 	slli	r2,r2,1
   103e4:	10800044 	addi	r2,r2,1
   103e8:	00001106 	br	10430 <interpret_command+0xac>
		command += 5;
		return "";
	}
	if ( strstr(command, "LIFE-") != 0 )	{
   103ec:	014000b4 	movhi	r5,2
   103f0:	29751204 	addi	r5,r5,-11192
   103f4:	8009883a 	mov	r4,r16
   103f8:	00134900 	call	13490 <strstr>
   103fc:	10000726 	beq	r2,zero,1041c <interpret_command+0x98>
		life = ((life + 1) / 2) - 1;
   10400:	d0a00017 	ldw	r2,-32768(gp)
   10404:	10800044 	addi	r2,r2,1
   10408:	1006d7fa 	srli	r3,r2,31
   1040c:	1885883a 	add	r2,r3,r2
   10410:	1005d07a 	srai	r2,r2,1
   10414:	10bfffc4 	addi	r2,r2,-1
   10418:	00000506 	br	10430 <interpret_command+0xac>
		command += 5;
		return "";
	}
	if ( strstr(command, "r") != 0 ) {
   1041c:	01401c84 	movi	r5,114
   10420:	8009883a 	mov	r4,r16
   10424:	0012de80 	call	12de8 <strchr>
   10428:	10000226 	beq	r2,zero,10434 <interpret_command+0xb0>
		life = 1023;
   1042c:	0080ffc4 	movi	r2,1023
   10430:	d0a00015 	stw	r2,-32768(gp)
	if ( strstr(command, "LIFE-") != 0 )	{
		life = ((life + 1) / 2) - 1;
		command += 5;
		return "";
	}
	if ( strstr(command, "r") != 0 ) {
   10434:	008000b4 	movhi	r2,2
   10438:	10b50704 	addi	r2,r2,-11236
	}
	if ( strcmp(command, "") != 0 ) {
		return "";
	}
	return "";
}
   1043c:	dfc00117 	ldw	ra,4(sp)
   10440:	dc000017 	ldw	r16,0(sp)
   10444:	dec00204 	addi	sp,sp,8
   10448:	f800283a 	ret

0001044c <read_chars>:

char * read_chars() {
   1044c:	deff7d04 	addi	sp,sp,-524
	char data[2*CHARLIM];									// The buffer for the printing text
	char prevLetter = '!';
	int length = 0;
	int running = 1;
   10450:	00800044 	movi	r2,1
		return "";
	}
	return "";
}

char * read_chars() {
   10454:	dfc08215 	stw	ra,520(sp)
	char data[2*CHARLIM];									// The buffer for the printing text
	char prevLetter = '!';
	int length = 0;
   10458:	d8008115 	stw	zero,516(sp)
	int running = 1;
   1045c:	d8808015 	stw	r2,512(sp)

	prevLetter = alt_getchar();							// Extract the first character (and create a hold until one arrives)
   10460:	001cc9c0 	call	1cc9c <alt_getchar>
	prevLetter = generate_text(prevLetter, &length, data, &running);		// Process input text
   10464:	11003fcc 	andi	r4,r2,255
   10468:	2100201c 	xori	r4,r4,128
   1046c:	d9c08004 	addi	r7,sp,512
   10470:	d80d883a 	mov	r6,sp
   10474:	d9408104 	addi	r5,sp,516
   10478:	213fe004 	addi	r4,r4,-128
   1047c:	00102d00 	call	102d0 <generate_text>
	//print_text(text, length);							// Print input text

	return interpret_command(data);
   10480:	d809883a 	mov	r4,sp
   10484:	00103840 	call	10384 <interpret_command>
}
   10488:	dfc08217 	ldw	ra,520(sp)
   1048c:	dec08304 	addi	sp,sp,524
   10490:	f800283a 	ret

00010494 <led_write>:
alt_8 pwm = 0;
alt_u8 led;
int level;

void led_write(alt_u8 led_pattern) {
    IOWR(LED_BASE, 0, led_pattern);
   10494:	008000b4 	movhi	r2,2
   10498:	21003fcc 	andi	r4,r4,255
   1049c:	10842004 	addi	r2,r2,4224
   104a0:	11000035 	stwio	r4,0(r2)
   104a4:	f800283a 	ret

000104a8 <convert_read>:
}

void convert_read(alt_32 acc_read, int * level, alt_u8 * led) {
    acc_read += OFFSET;
   104a8:	213ff804 	addi	r4,r4,-32
    alt_u8 val = (acc_read >> 6) & 0x07;
    * led = (8 >> val) | (8 << (8 - val));
   104ac:	2005d1ba 	srai	r2,r4,6
    * level = (acc_read >> 1) & 0x1f;
   104b0:	2009d07a 	srai	r4,r4,1
}

void convert_read(alt_32 acc_read, int * level, alt_u8 * led) {
    acc_read += OFFSET;
    alt_u8 val = (acc_read >> 6) & 0x07;
    * led = (8 >> val) | (8 << (8 - val));
   104b4:	10c001cc 	andi	r3,r2,7
   104b8:	00800204 	movi	r2,8
   104bc:	10cfc83a 	sub	r7,r2,r3
   104c0:	11ce983a 	sll	r7,r2,r7
   104c4:	10c5d83a 	sra	r2,r2,r3
    * level = (acc_read >> 1) & 0x1f;
   104c8:	210007cc 	andi	r4,r4,31
}

void convert_read(alt_32 acc_read, int * level, alt_u8 * led) {
    acc_read += OFFSET;
    alt_u8 val = (acc_read >> 6) & 0x07;
    * led = (8 >> val) | (8 << (8 - val));
   104cc:	3884b03a 	or	r2,r7,r2
   104d0:	30800005 	stb	r2,0(r6)
    * level = (acc_read >> 1) & 0x1f;
   104d4:	29000015 	stw	r4,0(r5)
   104d8:	f800283a 	ret

000104dc <timer_init>:
    } else {
        pwm++;
    }
}

void timer_init(void * isr) {
   104dc:	defffe04 	addi	sp,sp,-8
   104e0:	dc000015 	stw	r16,0(sp)
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0003);
   104e4:	040000b4 	movhi	r16,2
    } else {
        pwm++;
    }
}

void timer_init(void * isr) {
   104e8:	dfc00115 	stw	ra,4(sp)
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0003);
   104ec:	84040104 	addi	r16,r16,4100
   104f0:	008000c4 	movi	r2,3
   104f4:	80800035 	stwio	r2,0(r16)
    IOWR_ALTERA_AVALON_TIMER_STATUS(TIMER_BASE, 0);
   104f8:	00c000b4 	movhi	r3,2
   104fc:	0005883a 	mov	r2,zero
   10500:	18c40004 	addi	r3,r3,4096
   10504:	18800035 	stwio	r2,0(r3)
    IOWR_ALTERA_AVALON_TIMER_PERIODL(TIMER_BASE, 0x0900);
   10508:	00c000b4 	movhi	r3,2
   1050c:	18c40204 	addi	r3,r3,4104
   10510:	01424004 	movi	r5,2304
   10514:	19400035 	stwio	r5,0(r3)
    IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_BASE, 0x0000);
   10518:	00c000b4 	movhi	r3,2
   1051c:	18c40304 	addi	r3,r3,4108
   10520:	18800035 	stwio	r2,0(r3)
    alt_irq_register(TIMER_IRQ, 0, isr);
   10524:	200d883a 	mov	r6,r4
   10528:	000b883a 	mov	r5,zero
   1052c:	01000084 	movi	r4,2
   10530:	001cce00 	call	1cce0 <alt_irq_register>
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0007);
   10534:	008001c4 	movi	r2,7
   10538:	80800035 	stwio	r2,0(r16)
}
   1053c:	dfc00117 	ldw	ra,4(sp)
   10540:	dc000017 	ldw	r16,0(sp)
   10544:	dec00204 	addi	sp,sp,8
   10548:	f800283a 	ret

0001054c <getBin>:
	int bit7 = (letter_inv & 0b1000000) >> 3;
	int res = (0b0000000) | bit0 | bit1 | bit5 | bit7;
	return ~res; //Uninvert the binary representation so the display knows which lights to turn on
}
//Gets the binary representation of the character
int getBin(char letter){
   1054c:	213ff404 	addi	r4,r4,-48
   10550:	21003fcc 	andi	r4,r4,255
   10554:	00800a84 	movi	r2,42
   10558:	11000536 	bltu	r2,r4,10570 <getBin+0x24>
   1055c:	008000b4 	movhi	r2,2
   10560:	10b51b04 	addi	r2,r2,-11156
   10564:	1109883a 	add	r4,r2,r4
   10568:	20800007 	ldb	r2,0(r4)
   1056c:	f800283a 	ret
	/*Based on the character entered, we convert to binary so the 7-segment knows which lights to turn on.
	The 7-segment has inverted logic so a 0 means the light is on and a 1 means the light is off.
	The rightmost bit starts the index at HEX#[0], and the leftmost bit is HEX#[6], the pattern
	for the 7-segment is shown in the DE0_C5 User Manual*/
	switch(letter){
   10570:	00801fc4 	movi	r2,127
	case 'Z':
		return 0b0100100;
	default:
		return 0b1111111;
	}
}
   10574:	f800283a 	ret

00010578 <getBinaryLetter>:
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
}
//Returns the letter or the upsideDown version of the letter
int getBinaryLetter(char letter){
	int let = getBin(letter);
   10578:	21003fcc 	andi	r4,r4,255
   1057c:	2100201c 	xori	r4,r4,128
	int bit3 = (letter_inv & 0b0001000) >> 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
}
//Returns the letter or the upsideDown version of the letter
int getBinaryLetter(char letter){
   10580:	deffff04 	addi	sp,sp,-4
	int let = getBin(letter);
   10584:	213fe004 	addi	r4,r4,-128
	int bit3 = (letter_inv & 0b0001000) >> 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
}
//Returns the letter or the upsideDown version of the letter
int getBinaryLetter(char letter){
   10588:	dfc00015 	stw	ra,0(sp)
	int let = getBin(letter);
   1058c:	001054c0 	call	1054c <getBin>
	if (upsideDown){
   10590:	d0e27c17 	ldw	r3,-30224(gp)
   10594:	18001426 	beq	r3,zero,105e8 <getBinaryLetter+0x70>
		//If the user has toggled the upsideDown switch, (SW8), we can use bit shifting to invert the display
		int letter_inv = ~let; //Inverting the binary makes the logic easier to deal with.
   10598:	0086303a 	nor	r3,zero,r2
		int bit3 = (letter_inv & 0b0001000) >> 3;
		int bit4 = (letter_inv & 0b0010000) << 1;
		int bit5 = (letter_inv & 0b0100000) >> 1;
		int bit6 = (letter_inv & 0b1000000);
		int full_inv = (0b0000000) | bit0 | bit1 | bit2 | bit3 | bit4 | bit5 | bit6;
		return ~full_inv; //Invert the logic back again
   1059c:	1880004c 	andi	r2,r3,1
   105a0:	100890fa 	slli	r4,r2,3
   105a4:	1880008c 	andi	r2,r3,2
   105a8:	1085883a 	add	r2,r2,r2
   105ac:	2084b03a 	or	r2,r4,r2
   105b0:	1900100c 	andi	r4,r3,64
   105b4:	1104b03a 	or	r2,r2,r4
   105b8:	1900010c 	andi	r4,r3,4
   105bc:	2009d07a 	srai	r4,r4,1
   105c0:	1104b03a 	or	r2,r2,r4
   105c4:	1900020c 	andi	r4,r3,8
   105c8:	2009d0fa 	srai	r4,r4,3
   105cc:	1104b03a 	or	r2,r2,r4
   105d0:	1900040c 	andi	r4,r3,16
   105d4:	18c0080c 	andi	r3,r3,32
   105d8:	1807d07a 	srai	r3,r3,1
   105dc:	2109883a 	add	r4,r4,r4
   105e0:	1104b03a 	or	r2,r2,r4
   105e4:	10c4303a 	nor	r2,r2,r3
	}
	//Otherwise, if the SW8 is in the rightside-up position, we can just display the letter
	return let;
}
   105e8:	dfc00017 	ldw	ra,0(sp)
   105ec:	dec00104 	addi	sp,sp,4
   105f0:	f800283a 	ret

000105f4 <getBinLowLow>:

//Does initial setup of display

//Gets the lowest number representation of the given letter
int getBinLowLow(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; the inverting logic is easier to deal with
   105f4:	21003fcc 	andi	r4,r4,255
   105f8:	2100201c 	xori	r4,r4,128
}

//Does initial setup of display

//Gets the lowest number representation of the given letter
int getBinLowLow(char letter){
   105fc:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; the inverting logic is easier to deal with
   10600:	213fe004 	addi	r4,r4,-128
}

//Does initial setup of display

//Gets the lowest number representation of the given letter
int getBinLowLow(char letter){
   10604:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; the inverting logic is easier to deal with
   10608:	00105780 	call	10578 <getBinaryLetter>
	int bit0 = (letter_inv & 0b0000001) << 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit0;
	return ~res; //Reinvert the binary representation of the modified letter so the display reads the correct representation
   1060c:	0084303a 	nor	r2,zero,r2
   10610:	1080004c 	andi	r2,r2,1
   10614:	100490fa 	slli	r2,r2,3
}
   10618:	0084303a 	nor	r2,zero,r2
   1061c:	dfc00017 	ldw	ra,0(sp)
   10620:	dec00104 	addi	sp,sp,4
   10624:	f800283a 	ret

00010628 <getBinLow>:
//Gets a lower integer representation of the given letter
int getBinLow(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; inverting the binary makes the logic easier
   10628:	21003fcc 	andi	r4,r4,255
   1062c:	2100201c 	xori	r4,r4,128
	int bit0 = (letter_inv & 0b0000001) << 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit0;
	return ~res; //Reinvert the binary representation of the modified letter so the display reads the correct representation
}
//Gets a lower integer representation of the given letter
int getBinLow(char letter){
   10630:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; inverting the binary makes the logic easier
   10634:	213fe004 	addi	r4,r4,-128
	int bit0 = (letter_inv & 0b0000001) << 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit0;
	return ~res; //Reinvert the binary representation of the modified letter so the display reads the correct representation
}
//Gets a lower integer representation of the given letter
int getBinLow(char letter){
   10638:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter; inverting the binary makes the logic easier
   1063c:	00105780 	call	10578 <getBinaryLetter>
   10640:	0086303a 	nor	r3,zero,r2
	int bit0 = (letter_inv & 0b0000001) << 6; //This logic deals with bit shifting so the letters appear higher on the display
	int bit1 = (letter_inv & 0b0000010) << 1;
	int bit5 = (letter_inv & 0b0100000) >> 1;
	int bit7 = (letter_inv & 0b1000000) >> 3;
	int res = (0b0000000) | bit0 | bit1 | bit5 | bit7;
	return ~res; //Uninvert the binary representation so the display knows which lights to turn on
   10644:	1900004c 	andi	r4,r3,1
   10648:	200491ba 	slli	r2,r4,6
   1064c:	1900008c 	andi	r4,r3,2
   10650:	2109883a 	add	r4,r4,r4
   10654:	1108b03a 	or	r4,r2,r4
   10658:	1880080c 	andi	r2,r3,32
   1065c:	1005d07a 	srai	r2,r2,1
   10660:	18c0100c 	andi	r3,r3,64
   10664:	2088b03a 	or	r4,r4,r2
   10668:	1805d0fa 	srai	r2,r3,3
}
   1066c:	2084303a 	nor	r2,r4,r2
   10670:	dfc00017 	ldw	ra,0(sp)
   10674:	dec00104 	addi	sp,sp,4
   10678:	f800283a 	ret

0001067c <getBinHigh>:
		return 0b1111111;
	}
}
//Gets the upper binary representation of the character
int getBinHigh(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, the logic is easier to work with inverted
   1067c:	21003fcc 	andi	r4,r4,255
   10680:	2100201c 	xori	r4,r4,128
	default:
		return 0b1111111;
	}
}
//Gets the upper binary representation of the character
int getBinHigh(char letter){
   10684:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, the logic is easier to work with inverted
   10688:	213fe004 	addi	r4,r4,-128
	default:
		return 0b1111111;
	}
}
//Gets the upper binary representation of the character
int getBinHigh(char letter){
   1068c:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, the logic is easier to work with inverted
   10690:	00105780 	call	10578 <getBinaryLetter>
   10694:	0086303a 	nor	r3,zero,r2
	int bit2 = (letter_inv & 0b0000100) >> 1 ; //This logic deals with bit shifting so the letters appear higher on the display
	int bit3 = (letter_inv & 0b0001000) << 3;
	int bit4 = (letter_inv & 0b0010000) << 1 ;
	int bit6 = (letter_inv & 0b1000000) >> 6;
	int res = (0b0000000) | bit2 | bit3 | bit4 | bit6;
	return ~res;//Uninvert the logic to get the correct representation
   10698:	1880010c 	andi	r2,r3,4
   1069c:	1009d07a 	srai	r4,r2,1
   106a0:	1880020c 	andi	r2,r3,8
   106a4:	100490fa 	slli	r2,r2,3
   106a8:	2084b03a 	or	r2,r4,r2
   106ac:	1900040c 	andi	r4,r3,16
   106b0:	18c0100c 	andi	r3,r3,64
   106b4:	1807d1ba 	srai	r3,r3,6
   106b8:	2109883a 	add	r4,r4,r4
   106bc:	1104b03a 	or	r2,r2,r4
}
   106c0:	10c4303a 	nor	r2,r2,r3
   106c4:	dfc00017 	ldw	ra,0(sp)
   106c8:	dec00104 	addi	sp,sp,4
   106cc:	f800283a 	ret

000106d0 <getBinHighHigh>:
//Gets the highest number representation of the given letter
int getBinHighHigh(char letter){
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, it is easier to deal with the inverted logic
   106d0:	21003fcc 	andi	r4,r4,255
   106d4:	2100201c 	xori	r4,r4,128
	int bit6 = (letter_inv & 0b1000000) >> 6;
	int res = (0b0000000) | bit2 | bit3 | bit4 | bit6;
	return ~res;//Uninvert the logic to get the correct representation
}
//Gets the highest number representation of the given letter
int getBinHighHigh(char letter){
   106d8:	deffff04 	addi	sp,sp,-4
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, it is easier to deal with the inverted logic
   106dc:	213fe004 	addi	r4,r4,-128
	int bit6 = (letter_inv & 0b1000000) >> 6;
	int res = (0b0000000) | bit2 | bit3 | bit4 | bit6;
	return ~res;//Uninvert the logic to get the correct representation
}
//Gets the highest number representation of the given letter
int getBinHighHigh(char letter){
   106e0:	dfc00015 	stw	ra,0(sp)
	int letter_inv = ~getBinaryLetter(letter); //Get the integer representation of the letter, it is easier to deal with the inverted logic
   106e4:	00105780 	call	10578 <getBinaryLetter>
	int bit3 = (letter_inv & 0b0001000) >> 3; //This logic deals with bit shifting so the letters appear higher on the display
	int res = (0b0000000) | bit3;
	return ~res; //Uninvert the logic to get the correct representation
   106e8:	0084303a 	nor	r2,zero,r2
   106ec:	1080020c 	andi	r2,r2,8
   106f0:	1005d0fa 	srai	r2,r2,3
}
   106f4:	0084303a 	nor	r2,zero,r2
   106f8:	dfc00017 	ldw	ra,0(sp)
   106fc:	dec00104 	addi	sp,sp,4
   10700:	f800283a 	ret

00010704 <print>:
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   10704:	008000b4 	movhi	r2,2
   10708:	10840804 	addi	r2,r2,4128
   1070c:	11000035 	stwio	r4,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   10710:	008000b4 	movhi	r2,2
   10714:	10840c04 	addi	r2,r2,4144
   10718:	11400035 	stwio	r5,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   1071c:	008000b4 	movhi	r2,2
   10720:	10841004 	addi	r2,r2,4160
   10724:	11800035 	stwio	r6,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   10728:	008000b4 	movhi	r2,2
   1072c:	10841404 	addi	r2,r2,4176
   10730:	11c00035 	stwio	r7,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   10734:	d8c00017 	ldw	r3,0(sp)
   10738:	008000b4 	movhi	r2,2
   1073c:	10841804 	addi	r2,r2,4192
   10740:	10c00035 	stwio	r3,0(r2)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, let0);
   10744:	d8c00117 	ldw	r3,4(sp)
   10748:	008000b4 	movhi	r2,2
   1074c:	10841c04 	addi	r2,r2,4208
   10750:	10c00035 	stwio	r3,0(r2)
   10754:	f800283a 	ret

00010758 <print_letters>:
	return;
}
//Prints each of the letters out to the screen; takes into account the dancing letters
void print_letters(char let5, char let4, char let3, char let2, char let1, char let0, int state){
	//If the display is "muted," don't show anything
	if (disp_off){
   10758:	d0e27117 	ldw	r3,-30268(gp)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, let0);
	return;
}
//Prints each of the letters out to the screen; takes into account the dancing letters
void print_letters(char let5, char let4, char let3, char let2, char let1, char let0, int state){
   1075c:	defff404 	addi	sp,sp,-48
   10760:	df000a15 	stw	fp,40(sp)
   10764:	ddc00915 	stw	r23,36(sp)
   10768:	dd800815 	stw	r22,32(sp)
   1076c:	dd400715 	stw	r21,28(sp)
   10770:	dd000615 	stw	r20,24(sp)
   10774:	dcc00515 	stw	r19,20(sp)
   10778:	dc400315 	stw	r17,12(sp)
   1077c:	dc000215 	stw	r16,8(sp)
   10780:	070000b4 	movhi	fp,2
   10784:	05c000b4 	movhi	r23,2
   10788:	058000b4 	movhi	r22,2
   1078c:	054000b4 	movhi	r21,2
   10790:	044000b4 	movhi	r17,2
   10794:	040000b4 	movhi	r16,2
   10798:	dfc00b15 	stw	ra,44(sp)
   1079c:	dc800415 	stw	r18,16(sp)
   107a0:	dd000c17 	ldw	r20,48(sp)
   107a4:	dcc00d17 	ldw	r19,52(sp)
   107a8:	d8800e17 	ldw	r2,56(sp)
   107ac:	e7040804 	addi	fp,fp,4128
   107b0:	bdc40c04 	addi	r23,r23,4144
   107b4:	b5841004 	addi	r22,r22,4160
   107b8:	ad441404 	addi	r21,r21,4176
   107bc:	8c441804 	addi	r17,r17,4192
   107c0:	84041c04 	addi	r16,r16,4208
	//If the display is "muted," don't show anything
	if (disp_off){
   107c4:	18000726 	beq	r3,zero,107e4 <print_letters+0x8c>
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   107c8:	00801fc4 	movi	r2,127
   107cc:	e0800035 	stwio	r2,0(fp)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   107d0:	b8800035 	stwio	r2,0(r23)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   107d4:	b0800035 	stwio	r2,0(r22)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   107d8:	a8800035 	stwio	r2,0(r21)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   107dc:	88800035 	stwio	r2,0(r17)
   107e0:	00007006 	br	109a4 <print_letters+0x24c>
   107e4:	31803fcc 	andi	r6,r6,255
   107e8:	39c03fcc 	andi	r7,r7,255
   107ec:	3180201c 	xori	r6,r6,128
   107f0:	39c0201c 	xori	r7,r7,128
   107f4:	21003fcc 	andi	r4,r4,255
   107f8:	2c803fcc 	andi	r18,r5,255
   107fc:	31bfe004 	addi	r6,r6,-128
   10800:	39ffe004 	addi	r7,r7,-128
   10804:	a5003fcc 	andi	r20,r20,255
   10808:	9cc03fcc 	andi	r19,r19,255
   1080c:	2100201c 	xori	r4,r4,128
   10810:	9480201c 	xori	r18,r18,128
   10814:	a500201c 	xori	r20,r20,128
   10818:	9cc0201c 	xori	r19,r19,128
	if (disp_off){
		print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
		return;
	}
	//State refers to which dancing state the characters are in
	switch (state){
   1081c:	00c00044 	movi	r3,1
   10820:	d9800015 	stw	r6,0(sp)
   10824:	d9c00115 	stw	r7,4(sp)
   10828:	213fe004 	addi	r4,r4,-128
   1082c:	94bfe004 	addi	r18,r18,-128
   10830:	a53fe004 	addi	r20,r20,-128
   10834:	9cffe004 	addi	r19,r19,-128
   10838:	10c02826 	beq	r2,r3,108dc <print_letters+0x184>
   1083c:	18801216 	blt	r3,r2,10888 <print_letters+0x130>
   10840:	1000481e 	bne	r2,zero,10964 <print_letters+0x20c>
	//This is the case where the letters are shifted down by the maximum amount on the display
	case 0:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinLowLow(let5));
   10844:	00105f40 	call	105f4 <getBinLowLow>
   10848:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinLowLow(let4));
   1084c:	9009883a 	mov	r4,r18
   10850:	00105f40 	call	105f4 <getBinLowLow>
   10854:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinLowLow(let3));
   10858:	d9000017 	ldw	r4,0(sp)
   1085c:	00105f40 	call	105f4 <getBinLowLow>
   10860:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinLowLow(let2));
   10864:	d9000117 	ldw	r4,4(sp)
   10868:	00105f40 	call	105f4 <getBinLowLow>
   1086c:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinLowLow(let1));
   10870:	a009883a 	mov	r4,r20
   10874:	00105f40 	call	105f4 <getBinLowLow>
   10878:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinLowLow(let0));
   1087c:	9809883a 	mov	r4,r19
   10880:	00105f40 	call	105f4 <getBinLowLow>
   10884:	00004706 	br	109a4 <print_letters+0x24c>
	if (disp_off){
		print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
		return;
	}
	//State refers to which dancing state the characters are in
	switch (state){
   10888:	00c00084 	movi	r3,2
   1088c:	10c02426 	beq	r2,r3,10920 <print_letters+0x1c8>
   10890:	00c000c4 	movi	r3,3
   10894:	10c0331e 	bne	r2,r3,10964 <print_letters+0x20c>
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinaryLetter(let1));
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinaryLetter(let0));
		return;
	//This is the case where the letters are shifted up a bit on the display
	case 3:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinHigh(let5));
   10898:	001067c0 	call	1067c <getBinHigh>
   1089c:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinHigh(let4));
   108a0:	9009883a 	mov	r4,r18
   108a4:	001067c0 	call	1067c <getBinHigh>
   108a8:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinHigh(let3));
   108ac:	d9000017 	ldw	r4,0(sp)
   108b0:	001067c0 	call	1067c <getBinHigh>
   108b4:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinHigh(let2));
   108b8:	d9000117 	ldw	r4,4(sp)
   108bc:	001067c0 	call	1067c <getBinHigh>
   108c0:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinHigh(let1));
   108c4:	a009883a 	mov	r4,r20
   108c8:	001067c0 	call	1067c <getBinHigh>
   108cc:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinHigh(let0));
   108d0:	9809883a 	mov	r4,r19
   108d4:	001067c0 	call	1067c <getBinHigh>
   108d8:	00003206 	br	109a4 <print_letters+0x24c>
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinLowLow(let1));
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinLowLow(let0));
		return;
	//This is the case where the letters are shifted down a bit on the display
	case 1:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinLow(let5));
   108dc:	00106280 	call	10628 <getBinLow>
   108e0:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinLow(let4));
   108e4:	9009883a 	mov	r4,r18
   108e8:	00106280 	call	10628 <getBinLow>
   108ec:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinLow(let3));
   108f0:	d9000017 	ldw	r4,0(sp)
   108f4:	00106280 	call	10628 <getBinLow>
   108f8:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinLow(let2));
   108fc:	d9000117 	ldw	r4,4(sp)
   10900:	00106280 	call	10628 <getBinLow>
   10904:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinLow(let1));
   10908:	a009883a 	mov	r4,r20
   1090c:	00106280 	call	10628 <getBinLow>
   10910:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinLow(let0));
   10914:	9809883a 	mov	r4,r19
   10918:	00106280 	call	10628 <getBinLow>
   1091c:	00002106 	br	109a4 <print_letters+0x24c>
		return;
	//This is the "main" case, where the full letters are displayed on the display
	case 2:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinaryLetter(let5));
   10920:	00105780 	call	10578 <getBinaryLetter>
   10924:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinaryLetter(let4));
   10928:	9009883a 	mov	r4,r18
   1092c:	00105780 	call	10578 <getBinaryLetter>
   10930:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinaryLetter(let3));
   10934:	d9000017 	ldw	r4,0(sp)
   10938:	00105780 	call	10578 <getBinaryLetter>
   1093c:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinaryLetter(let2));
   10940:	d9000117 	ldw	r4,4(sp)
   10944:	00105780 	call	10578 <getBinaryLetter>
   10948:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinaryLetter(let1));
   1094c:	a009883a 	mov	r4,r20
   10950:	00105780 	call	10578 <getBinaryLetter>
   10954:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinaryLetter(let0));
   10958:	9809883a 	mov	r4,r19
   1095c:	00105780 	call	10578 <getBinaryLetter>
   10960:	00001006 	br	109a4 <print_letters+0x24c>
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinHigh(let1));
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinHigh(let0));
		return;
	//This is the case where the letters are shifted by the maximum amount on the display
	default:
		IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, getBinHighHigh(let5));
   10964:	00106d00 	call	106d0 <getBinHighHigh>
   10968:	e0800035 	stwio	r2,0(fp)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, getBinHighHigh(let4));
   1096c:	9009883a 	mov	r4,r18
   10970:	00106d00 	call	106d0 <getBinHighHigh>
   10974:	b8800035 	stwio	r2,0(r23)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, getBinHighHigh(let3));
   10978:	d9000017 	ldw	r4,0(sp)
   1097c:	00106d00 	call	106d0 <getBinHighHigh>
   10980:	b0800035 	stwio	r2,0(r22)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, getBinHighHigh(let2));
   10984:	d9000117 	ldw	r4,4(sp)
   10988:	00106d00 	call	106d0 <getBinHighHigh>
   1098c:	a8800035 	stwio	r2,0(r21)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, getBinHighHigh(let1));
   10990:	a009883a 	mov	r4,r20
   10994:	00106d00 	call	106d0 <getBinHighHigh>
   10998:	88800035 	stwio	r2,0(r17)
		IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, getBinHighHigh(let0));
   1099c:	9809883a 	mov	r4,r19
   109a0:	00106d00 	call	106d0 <getBinHighHigh>
   109a4:	80800035 	stwio	r2,0(r16)
		return;
	}
}
   109a8:	dfc00b17 	ldw	ra,44(sp)
   109ac:	df000a17 	ldw	fp,40(sp)
   109b0:	ddc00917 	ldw	r23,36(sp)
   109b4:	dd800817 	ldw	r22,32(sp)
   109b8:	dd400717 	ldw	r21,28(sp)
   109bc:	dd000617 	ldw	r20,24(sp)
   109c0:	dcc00517 	ldw	r19,20(sp)
   109c4:	dc800417 	ldw	r18,16(sp)
   109c8:	dc400317 	ldw	r17,12(sp)
   109cc:	dc000217 	ldw	r16,8(sp)
   109d0:	dec00c04 	addi	sp,sp,48
   109d4:	f800283a 	ret

000109d8 <main>:
	// ACCELEROMTER INITIALISE
	alt_32 x_read;
	alt_32 y_read;
	alt_32 z_read;
	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   109d8:	010000b4 	movhi	r4,2
    IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_BASE, 0x0000);
    alt_irq_register(TIMER_IRQ, 0, isr);
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0007);
}

int main(){
   109dc:	def9ec04 	addi	sp,sp,-6224
	// ACCELEROMTER INITIALISE
	alt_32 x_read;
	alt_32 y_read;
	alt_32 z_read;
	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   109e0:	21351404 	addi	r4,r4,-11184
    IOWR_ALTERA_AVALON_TIMER_PERIODH(TIMER_BASE, 0x0000);
    alt_irq_register(TIMER_IRQ, 0, isr);
    IOWR_ALTERA_AVALON_TIMER_CONTROL(TIMER_BASE, 0x0007);
}

int main(){
   109e4:	dfc61315 	stw	ra,6220(sp)
   109e8:	df061215 	stw	fp,6216(sp)
   109ec:	ddc61115 	stw	r23,6212(sp)
   109f0:	dd861015 	stw	r22,6208(sp)
   109f4:	dd460f15 	stw	r21,6204(sp)
   109f8:	dd060e15 	stw	r20,6200(sp)
   109fc:	dcc60d15 	stw	r19,6196(sp)
   10a00:	dc860c15 	stw	r18,6192(sp)
   10a04:	dc460b15 	stw	r17,6188(sp)
   10a08:	dc060a15 	stw	r16,6184(sp)
	// ACCELEROMTER INITIALISE
	alt_32 x_read;
	alt_32 y_read;
	alt_32 z_read;
	alt_up_accelerometer_spi_dev * acc_dev;
	acc_dev = alt_up_accelerometer_spi_open_dev("/dev/accelerometer_spi");
   10a0c:	001d0580 	call	1d058 <alt_up_accelerometer_spi_open_dev>
	if (acc_dev == NULL) { // if return 1, check if the spi ip name is "accelerometer_spi"
   10a10:	1000e726 	beq	r2,zero,10db0 <main+0x3d8>
		return 1;
	}
	timer_init(sys_timer_isr);
   10a14:	01000074 	movhi	r4,1
   10a18:	21006f04 	addi	r4,r4,444
   10a1c:	1029883a 	mov	r20,r2
   10a20:	00104dc0 	call	104dc <timer_init>
	char accel_data_z[4*CHARLIM];
	char switch_data[4*CHARLIM];
	char button_data[4*CHARLIM];

	// SWITCH
	int switch_datain, switch_data_old = IORD_ALTERA_AVALON_PIO_DATA(SWITCH_BASE);
   10a24:	008000b4 	movhi	r2,2
   10a28:	10842404 	addi	r2,r2,4240
   10a2c:	10c00037 	ldwio	r3,0(r2)
	// BUTTON
	int button_datain, button_data_old = IORD_ALTERA_AVALON_PIO_DATA(BUTTON_BASE);
   10a30:	04c000b4 	movhi	r19,2
   10a34:	9cc42804 	addi	r19,r19,4256
   10a38:	98c00037 	ldwio	r3,0(r19)
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
   10a3c:	04c000b4 	movhi	r19,2


	int length = 0;
	int temp_length = 0;
	int x = -1;
	int count = 0;
   10a40:	0025883a 	mov	r18,zero
	alt_32 out_y, out_x;


	int length = 0;
	int temp_length = 0;
	int x = -1;
   10a44:	047fffc4 	movi	r17,-1
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
   10a48:	9cfac104 	addi	r19,r19,-5372
	int x = -1;
	int count = 0;

	while (1) {
		count++;
		IOWR_ALTERA_AVALON_PIO_DATA(LED_BASE, life);
   10a4c:	d0a00017 	ldw	r2,-32768(gp)
   10a50:	00c000b4 	movhi	r3,2
	int temp_length = 0;
	int x = -1;
	int count = 0;

	while (1) {
		count++;
   10a54:	94800044 	addi	r18,r18,1
		IOWR_ALTERA_AVALON_PIO_DATA(LED_BASE, life);
   10a58:	18c42004 	addi	r3,r3,4224
   10a5c:	18800035 	stwio	r2,0(r3)

		/* <--> SENDING DATA <--> */
		alt_up_accelerometer_spi_read_x_axis(acc_dev, & x_read);
   10a60:	d9460104 	addi	r5,sp,6148
   10a64:	a009883a 	mov	r4,r20
   10a68:	001d0b00 	call	1d0b0 <alt_up_accelerometer_spi_read_x_axis>
		alt_up_accelerometer_spi_read_y_axis(acc_dev, & y_read);
   10a6c:	d9460004 	addi	r5,sp,6144
   10a70:	a009883a 	mov	r4,r20
   10a74:	001d1080 	call	1d108 <alt_up_accelerometer_spi_read_y_axis>
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
   10a78:	98800317 	ldw	r2,12(r19)
		filter_x[3] = filter_x[2];
		filter_x[2] = filter_x[1];
		filter_x[1] = filter_x[0];
		filter_x[0] = x_read;

		filter_y[4] = filter_y[3];
   10a7c:	040000b4 	movhi	r16,2
   10a80:	843abc04 	addi	r16,r16,-5392
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
   10a84:	98800415 	stw	r2,16(r19)
		filter_x[3] = filter_x[2];
   10a88:	98800217 	ldw	r2,8(r19)
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
		{
			out_x += h[i]*filter_x[i];
   10a8c:	034000b4 	movhi	r13,2

		filter_y[4] = filter_y[3];
		filter_y[3] = filter_y[2];
		filter_y[2] = filter_y[1];
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;
   10a90:	0013883a 	mov	r9,zero

		out_y = 0;
		out_x = 0;

		filter_x[4] = filter_x[3];
		filter_x[3] = filter_x[2];
   10a94:	98800315 	stw	r2,12(r19)
		filter_x[2] = filter_x[1];
   10a98:	98800117 	ldw	r2,4(r19)
		alt_up_accelerometer_spi_read_x_axis(acc_dev, & x_read);
		alt_up_accelerometer_spi_read_y_axis(acc_dev, & y_read);
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
		out_x = 0;
   10a9c:	0039883a 	mov	fp,zero
		/* <--> SENDING DATA <--> */
		alt_up_accelerometer_spi_read_x_axis(acc_dev, & x_read);
		alt_up_accelerometer_spi_read_y_axis(acc_dev, & y_read);
		//alt_up_accelerometer_spi_read_z_axis(acc_dev, & z_read);

		out_y = 0;
   10aa0:	002f883a 	mov	r23,zero
		out_x = 0;

		filter_x[4] = filter_x[3];
		filter_x[3] = filter_x[2];
		filter_x[2] = filter_x[1];
   10aa4:	98800215 	stw	r2,8(r19)
		filter_x[1] = filter_x[0];
   10aa8:	98800017 	ldw	r2,0(r19)
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
		{
			out_x += h[i]*filter_x[i];
   10aac:	6b752604 	addi	r13,r13,-11112
		filter_y[3] = filter_y[2];
		filter_y[2] = filter_y[1];
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
   10ab0:	03000504 	movi	r12,20
		out_x = 0;

		filter_x[4] = filter_x[3];
		filter_x[3] = filter_x[2];
		filter_x[2] = filter_x[1];
		filter_x[1] = filter_x[0];
   10ab4:	98800115 	stw	r2,4(r19)
		filter_x[0] = x_read;
   10ab8:	d8860117 	ldw	r2,6148(sp)
   10abc:	98800015 	stw	r2,0(r19)

		filter_y[4] = filter_y[3];
   10ac0:	80800317 	ldw	r2,12(r16)
   10ac4:	80800415 	stw	r2,16(r16)
		filter_y[3] = filter_y[2];
   10ac8:	80800217 	ldw	r2,8(r16)
   10acc:	80800315 	stw	r2,12(r16)
		filter_y[2] = filter_y[1];
   10ad0:	80800117 	ldw	r2,4(r16)
   10ad4:	80800215 	stw	r2,8(r16)
		filter_y[1] = filter_y[0];
   10ad8:	80800017 	ldw	r2,0(r16)
   10adc:	80800115 	stw	r2,4(r16)
		filter_y[0] = y_read;
   10ae0:	d8860017 	ldw	r2,6144(sp)
   10ae4:	80800015 	stw	r2,0(r16)

		for ( int i = 0; i < 5; i++ )
		{
			out_x += h[i]*filter_x[i];
   10ae8:	4a45883a 	add	r2,r9,r9
   10aec:	00c000b4 	movhi	r3,2
   10af0:	1345883a 	add	r2,r2,r13
   10af4:	18fac104 	addi	r3,r3,-5372
   10af8:	15800017 	ldw	r22,0(r2)
   10afc:	15400117 	ldw	r21,4(r2)
   10b00:	48c5883a 	add	r2,r9,r3
   10b04:	11000017 	ldw	r4,0(r2)
   10b08:	db060815 	stw	r12,6176(sp)
   10b0c:	db460915 	stw	r13,6180(sp)
   10b10:	da460415 	stw	r9,6160(sp)
   10b14:	00121300 	call	12130 <__floatsidf>
   10b18:	b00d883a 	mov	r6,r22
   10b1c:	a80f883a 	mov	r7,r21
   10b20:	180b883a 	mov	r5,r3
   10b24:	1009883a 	mov	r4,r2
   10b28:	00118440 	call	11844 <__muldf3>
   10b2c:	e009883a 	mov	r4,fp
   10b30:	d8c60315 	stw	r3,6156(sp)
   10b34:	d8860215 	stw	r2,6152(sp)
   10b38:	00121300 	call	12130 <__floatsidf>
   10b3c:	db860217 	ldw	r14,6152(sp)
   10b40:	d9460317 	ldw	r5,6156(sp)
   10b44:	100d883a 	mov	r6,r2
   10b48:	7009883a 	mov	r4,r14
   10b4c:	180f883a 	mov	r7,r3
   10b50:	0010f980 	call	10f98 <__adddf3>
   10b54:	180b883a 	mov	r5,r3
   10b58:	1009883a 	mov	r4,r2
   10b5c:	00120b00 	call	120b0 <__fixdfsi>
			out_y += h[i]*filter_y[i];
   10b60:	da460417 	ldw	r9,6160(sp)
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
		{
			out_x += h[i]*filter_x[i];
   10b64:	1039883a 	mov	fp,r2
			out_y += h[i]*filter_y[i];
   10b68:	4c05883a 	add	r2,r9,r16
   10b6c:	11000017 	ldw	r4,0(r2)
   10b70:	00121300 	call	12130 <__floatsidf>
   10b74:	b00d883a 	mov	r6,r22
   10b78:	a80f883a 	mov	r7,r21
   10b7c:	180b883a 	mov	r5,r3
   10b80:	1009883a 	mov	r4,r2
   10b84:	00118440 	call	11844 <__muldf3>
   10b88:	b809883a 	mov	r4,r23
   10b8c:	102d883a 	mov	r22,r2
   10b90:	182b883a 	mov	r21,r3
   10b94:	00121300 	call	12130 <__floatsidf>
   10b98:	100d883a 	mov	r6,r2
   10b9c:	180f883a 	mov	r7,r3
   10ba0:	b009883a 	mov	r4,r22
   10ba4:	a80b883a 	mov	r5,r21
   10ba8:	0010f980 	call	10f98 <__adddf3>
   10bac:	1009883a 	mov	r4,r2
   10bb0:	180b883a 	mov	r5,r3
   10bb4:	00120b00 	call	120b0 <__fixdfsi>
   10bb8:	da460417 	ldw	r9,6160(sp)
		filter_y[3] = filter_y[2];
		filter_y[2] = filter_y[1];
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
   10bbc:	db060817 	ldw	r12,6176(sp)
		{
			out_x += h[i]*filter_x[i];
			out_y += h[i]*filter_y[i];
   10bc0:	102f883a 	mov	r23,r2
   10bc4:	4a400104 	addi	r9,r9,4
		filter_y[3] = filter_y[2];
		filter_y[2] = filter_y[1];
		filter_y[1] = filter_y[0];
		filter_y[0] = y_read;

		for ( int i = 0; i < 5; i++ )
   10bc8:	db460917 	ldw	r13,6180(sp)
   10bcc:	4b3fc61e 	bne	r9,r12,10ae8 <_gp+0xfffeaa2c>
			out_x += h[i]*filter_x[i];
			out_y += h[i]*filter_y[i];
		}

		//sprintf(accel_data_z, "%x", z_read);
		sprintf(accel_data_x, "%x", out_x);
   10bd0:	014000b4 	movhi	r5,2
   10bd4:	e00d883a 	mov	r6,fp
   10bd8:	d9050004 	addi	r4,sp,5120
   10bdc:	29751a04 	addi	r5,r5,-11160
   10be0:	0012d7c0 	call	12d7c <sprintf>
		sprintf(accel_data_y, "%x", out_y);
   10be4:	014000b4 	movhi	r5,2
   10be8:	b80d883a 	mov	r6,r23
   10bec:	29751a04 	addi	r5,r5,-11160
   10bf0:	d9040004 	addi	r4,sp,4096
   10bf4:	0012d7c0 	call	12d7c <sprintf>

		//SWITCH
		//switch_datain = IORD_ALTERA_AVALON_PIO_DATA(SWITCH_BASE);
		//output_switch( switch_datain, switch_data_old );
		//switch_data_old = switch_datain;
		switch_datain = IORD_ALTERA_AVALON_PIO_DATA(SWITCH_BASE);
   10bf8:	008000b4 	movhi	r2,2
   10bfc:	10842404 	addi	r2,r2,4240
   10c00:	11800037 	ldwio	r6,0(r2)
		sprintf(switch_data, "%x", switch_datain);
   10c04:	014000b4 	movhi	r5,2
   10c08:	29751a04 	addi	r5,r5,-11160
   10c0c:	d9030004 	addi	r4,sp,3072
   10c10:	0012d7c0 	call	12d7c <sprintf>

		// BUTTON
		//button_datain = IORD_ALTERA_AVALON_PIO_DATA(BUTTON_BASE);
		//output_button( button_datain, button_data_old );
		//button_data_old = button_datain;
		button_datain = IORD_ALTERA_AVALON_PIO_DATA(BUTTON_BASE);
   10c14:	00c000b4 	movhi	r3,2
   10c18:	18c42804 	addi	r3,r3,4256
   10c1c:	19800037 	ldwio	r6,0(r3)
		sprintf(button_data, "%x", button_datain);
   10c20:	014000b4 	movhi	r5,2
   10c24:	29751a04 	addi	r5,r5,-11160
   10c28:	d9020004 	addi	r4,sp,2048
   10c2c:	0012d7c0 	call	12d7c <sprintf>

		print_data(accel_data_x, accel_data_y, switch_data, button_data);
   10c30:	d9c20004 	addi	r7,sp,2048
   10c34:	d9830004 	addi	r6,sp,3072
   10c38:	d9440004 	addi	r5,sp,4096
   10c3c:	d9050004 	addi	r4,sp,5120
   10c40:	001023c0 	call	1023c <print_data>

		// HEX7 display
		char temp_data[4*CHARLIM];
		char to_print[4*CHARLIM];

		strcpy(to_print, read_chars());
   10c44:	001044c0 	call	1044c <read_chars>
   10c48:	100b883a 	mov	r5,r2
   10c4c:	d809883a 	mov	r4,sp
   10c50:	0012f4c0 	call	12f4c <strcpy>
		strcpy(temp_data, to_print);
   10c54:	d80b883a 	mov	r5,sp
   10c58:	d9010004 	addi	r4,sp,1024
   10c5c:	0012f4c0 	call	12f4c <strcpy>
		//alt_putstr( to_print );

		if (count == 5)
   10c60:	00800144 	movi	r2,5
   10c64:	9080021e 	bne	r18,r2,10c70 <main+0x298>
		{
			x++;
   10c68:	8c400044 	addi	r17,r17,1
			count = 0;
   10c6c:	0025883a 	mov	r18,zero
   10c70:	01c000b4 	movhi	r7,2
   10c74:	018000b4 	movhi	r6,2
   10c78:	00c000b4 	movhi	r3,2
   10c7c:	058000b4 	movhi	r22,2
   10c80:	054000b4 	movhi	r21,2
   10c84:	040000b4 	movhi	r16,2
		}
		if (x > 40)
   10c88:	00800a04 	movi	r2,40
   10c8c:	39c40804 	addi	r7,r7,4128
   10c90:	31840c04 	addi	r6,r6,4144
   10c94:	18c41004 	addi	r3,r3,4160
   10c98:	b5841404 	addi	r22,r22,4176
   10c9c:	ad441804 	addi	r21,r21,4192
   10ca0:	84041c04 	addi	r16,r16,4208
   10ca4:	1440070e 	bge	r2,r17,10cc4 <main+0x2ec>
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   10ca8:	00801fc4 	movi	r2,127
   10cac:	38800035 	stwio	r2,0(r7)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   10cb0:	30800035 	stwio	r2,0(r6)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   10cb4:	18800035 	stwio	r2,0(r3)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   10cb8:	b0800035 	stwio	r2,0(r22)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   10cbc:	a8800035 	stwio	r2,0(r21)
   10cc0:	00003906 	br	10da8 <main+0x3d0>
		if (x > 40)
		{
			print(getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'), getBin('!'));
		}
		else{
			print(getBin(to_print[x%20]), getBin(to_print[(x+1)%20]), getBin(to_print[(x+2)%20]), getBin(to_print[(x+3)%20]), getBin(to_print[(x+4)%20]), getBin(to_print[(x+5)%20]));
   10cc4:	01400504 	movi	r5,20
   10cc8:	8809883a 	mov	r4,r17
   10ccc:	d9c60515 	stw	r7,6164(sp)
   10cd0:	d8c60715 	stw	r3,6172(sp)
   10cd4:	d9860615 	stw	r6,6168(sp)
   10cd8:	0010e680 	call	10e68 <__modsi3>
   10cdc:	d885883a 	add	r2,sp,r2
   10ce0:	11000007 	ldb	r4,0(r2)
   10ce4:	001054c0 	call	1054c <getBin>
   10ce8:	01400504 	movi	r5,20
   10cec:	89000044 	addi	r4,r17,1
   10cf0:	d8860915 	stw	r2,6180(sp)
   10cf4:	0010e680 	call	10e68 <__modsi3>
   10cf8:	d885883a 	add	r2,sp,r2
   10cfc:	11000007 	ldb	r4,0(r2)
   10d00:	001054c0 	call	1054c <getBin>
   10d04:	01400504 	movi	r5,20
   10d08:	89000084 	addi	r4,r17,2
   10d0c:	d8860815 	stw	r2,6176(sp)
   10d10:	0010e680 	call	10e68 <__modsi3>
   10d14:	d885883a 	add	r2,sp,r2
   10d18:	11000007 	ldb	r4,0(r2)
   10d1c:	001054c0 	call	1054c <getBin>
   10d20:	01400504 	movi	r5,20
   10d24:	890000c4 	addi	r4,r17,3
   10d28:	d8860315 	stw	r2,6156(sp)
   10d2c:	0010e680 	call	10e68 <__modsi3>
   10d30:	d885883a 	add	r2,sp,r2
   10d34:	11000007 	ldb	r4,0(r2)
   10d38:	001054c0 	call	1054c <getBin>
   10d3c:	01400504 	movi	r5,20
   10d40:	89000104 	addi	r4,r17,4
   10d44:	d8860215 	stw	r2,6152(sp)
   10d48:	0010e680 	call	10e68 <__modsi3>
   10d4c:	d885883a 	add	r2,sp,r2
   10d50:	11000007 	ldb	r4,0(r2)
   10d54:	001054c0 	call	1054c <getBin>
   10d58:	01400504 	movi	r5,20
   10d5c:	89000144 	addi	r4,r17,5
   10d60:	d8860415 	stw	r2,6160(sp)
   10d64:	0010e680 	call	10e68 <__modsi3>
   10d68:	d885883a 	add	r2,sp,r2
   10d6c:	11000007 	ldb	r4,0(r2)
   10d70:	001054c0 	call	1054c <getBin>
	return let;
}
//Prints each of the letters out to the screen
void print(int let5, int let4, int let3, int let2, int let1, int let0){
	//Takes the binary value for each letter and places it on each of the six 7-segment displays
	IOWR_ALTERA_AVALON_PIO_DATA(HEX5_BASE, let5);
   10d74:	d9c60517 	ldw	r7,6164(sp)
   10d78:	db460917 	ldw	r13,6180(sp)
   10d7c:	3b400035 	stwio	r13,0(r7)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX4_BASE, let4);
   10d80:	d9860617 	ldw	r6,6168(sp)
   10d84:	db060817 	ldw	r12,6176(sp)
   10d88:	33000035 	stwio	r12,0(r6)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX3_BASE, let3);
   10d8c:	d8c60717 	ldw	r3,6172(sp)
   10d90:	dac60317 	ldw	r11,6156(sp)
   10d94:	1ac00035 	stwio	r11,0(r3)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX2_BASE, let2);
   10d98:	da860217 	ldw	r10,6152(sp)
   10d9c:	b2800035 	stwio	r10,0(r22)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX1_BASE, let1);
   10da0:	da460417 	ldw	r9,6160(sp)
   10da4:	aa400035 	stwio	r9,0(r21)
	IOWR_ALTERA_AVALON_PIO_DATA(HEX0_BASE, let0);
   10da8:	80800035 	stwio	r2,0(r16)
		}
		else{
			print(getBin(to_print[x%20]), getBin(to_print[(x+1)%20]), getBin(to_print[(x+2)%20]), getBin(to_print[(x+3)%20]), getBin(to_print[(x+4)%20]), getBin(to_print[(x+5)%20]));
		}

	}
   10dac:	003f2706 	br	10a4c <_gp+0xfffea990>
	return 0;
}
   10db0:	00800044 	movi	r2,1
   10db4:	dfc61317 	ldw	ra,6220(sp)
   10db8:	df061217 	ldw	fp,6216(sp)
   10dbc:	ddc61117 	ldw	r23,6212(sp)
   10dc0:	dd861017 	ldw	r22,6208(sp)
   10dc4:	dd460f17 	ldw	r21,6204(sp)
   10dc8:	dd060e17 	ldw	r20,6200(sp)
   10dcc:	dcc60d17 	ldw	r19,6196(sp)
   10dd0:	dc860c17 	ldw	r18,6192(sp)
   10dd4:	dc460b17 	ldw	r17,6188(sp)
   10dd8:	dc060a17 	ldw	r16,6184(sp)
   10ddc:	dec61404 	addi	sp,sp,6224
   10de0:	f800283a 	ret

00010de4 <__divsi3>:
   10de4:	20001b16 	blt	r4,zero,10e54 <__divsi3+0x70>
   10de8:	000f883a 	mov	r7,zero
   10dec:	28001616 	blt	r5,zero,10e48 <__divsi3+0x64>
   10df0:	200d883a 	mov	r6,r4
   10df4:	29001a2e 	bgeu	r5,r4,10e60 <__divsi3+0x7c>
   10df8:	00800804 	movi	r2,32
   10dfc:	00c00044 	movi	r3,1
   10e00:	00000106 	br	10e08 <__divsi3+0x24>
   10e04:	10000d26 	beq	r2,zero,10e3c <__divsi3+0x58>
   10e08:	294b883a 	add	r5,r5,r5
   10e0c:	10bfffc4 	addi	r2,r2,-1
   10e10:	18c7883a 	add	r3,r3,r3
   10e14:	293ffb36 	bltu	r5,r4,10e04 <_gp+0xfffead48>
   10e18:	0005883a 	mov	r2,zero
   10e1c:	18000726 	beq	r3,zero,10e3c <__divsi3+0x58>
   10e20:	0005883a 	mov	r2,zero
   10e24:	31400236 	bltu	r6,r5,10e30 <__divsi3+0x4c>
   10e28:	314dc83a 	sub	r6,r6,r5
   10e2c:	10c4b03a 	or	r2,r2,r3
   10e30:	1806d07a 	srli	r3,r3,1
   10e34:	280ad07a 	srli	r5,r5,1
   10e38:	183ffa1e 	bne	r3,zero,10e24 <_gp+0xfffead68>
   10e3c:	38000126 	beq	r7,zero,10e44 <__divsi3+0x60>
   10e40:	0085c83a 	sub	r2,zero,r2
   10e44:	f800283a 	ret
   10e48:	014bc83a 	sub	r5,zero,r5
   10e4c:	39c0005c 	xori	r7,r7,1
   10e50:	003fe706 	br	10df0 <_gp+0xfffead34>
   10e54:	0109c83a 	sub	r4,zero,r4
   10e58:	01c00044 	movi	r7,1
   10e5c:	003fe306 	br	10dec <_gp+0xfffead30>
   10e60:	00c00044 	movi	r3,1
   10e64:	003fee06 	br	10e20 <_gp+0xfffead64>

00010e68 <__modsi3>:
   10e68:	20001716 	blt	r4,zero,10ec8 <__modsi3+0x60>
   10e6c:	000f883a 	mov	r7,zero
   10e70:	2005883a 	mov	r2,r4
   10e74:	28001216 	blt	r5,zero,10ec0 <__modsi3+0x58>
   10e78:	2900162e 	bgeu	r5,r4,10ed4 <__modsi3+0x6c>
   10e7c:	01800804 	movi	r6,32
   10e80:	00c00044 	movi	r3,1
   10e84:	00000106 	br	10e8c <__modsi3+0x24>
   10e88:	30000a26 	beq	r6,zero,10eb4 <__modsi3+0x4c>
   10e8c:	294b883a 	add	r5,r5,r5
   10e90:	31bfffc4 	addi	r6,r6,-1
   10e94:	18c7883a 	add	r3,r3,r3
   10e98:	293ffb36 	bltu	r5,r4,10e88 <_gp+0xfffeadcc>
   10e9c:	18000526 	beq	r3,zero,10eb4 <__modsi3+0x4c>
   10ea0:	1806d07a 	srli	r3,r3,1
   10ea4:	11400136 	bltu	r2,r5,10eac <__modsi3+0x44>
   10ea8:	1145c83a 	sub	r2,r2,r5
   10eac:	280ad07a 	srli	r5,r5,1
   10eb0:	183ffb1e 	bne	r3,zero,10ea0 <_gp+0xfffeade4>
   10eb4:	38000126 	beq	r7,zero,10ebc <__modsi3+0x54>
   10eb8:	0085c83a 	sub	r2,zero,r2
   10ebc:	f800283a 	ret
   10ec0:	014bc83a 	sub	r5,zero,r5
   10ec4:	003fec06 	br	10e78 <_gp+0xfffeadbc>
   10ec8:	0109c83a 	sub	r4,zero,r4
   10ecc:	01c00044 	movi	r7,1
   10ed0:	003fe706 	br	10e70 <_gp+0xfffeadb4>
   10ed4:	00c00044 	movi	r3,1
   10ed8:	003ff106 	br	10ea0 <_gp+0xfffeade4>

00010edc <__udivsi3>:
   10edc:	200d883a 	mov	r6,r4
   10ee0:	2900152e 	bgeu	r5,r4,10f38 <__udivsi3+0x5c>
   10ee4:	28001416 	blt	r5,zero,10f38 <__udivsi3+0x5c>
   10ee8:	00800804 	movi	r2,32
   10eec:	00c00044 	movi	r3,1
   10ef0:	00000206 	br	10efc <__udivsi3+0x20>
   10ef4:	10000e26 	beq	r2,zero,10f30 <__udivsi3+0x54>
   10ef8:	28000516 	blt	r5,zero,10f10 <__udivsi3+0x34>
   10efc:	294b883a 	add	r5,r5,r5
   10f00:	10bfffc4 	addi	r2,r2,-1
   10f04:	18c7883a 	add	r3,r3,r3
   10f08:	293ffa36 	bltu	r5,r4,10ef4 <_gp+0xfffeae38>
   10f0c:	18000826 	beq	r3,zero,10f30 <__udivsi3+0x54>
   10f10:	0005883a 	mov	r2,zero
   10f14:	31400236 	bltu	r6,r5,10f20 <__udivsi3+0x44>
   10f18:	314dc83a 	sub	r6,r6,r5
   10f1c:	10c4b03a 	or	r2,r2,r3
   10f20:	1806d07a 	srli	r3,r3,1
   10f24:	280ad07a 	srli	r5,r5,1
   10f28:	183ffa1e 	bne	r3,zero,10f14 <_gp+0xfffeae58>
   10f2c:	f800283a 	ret
   10f30:	0005883a 	mov	r2,zero
   10f34:	f800283a 	ret
   10f38:	00c00044 	movi	r3,1
   10f3c:	003ff406 	br	10f10 <_gp+0xfffeae54>

00010f40 <__umodsi3>:
   10f40:	2005883a 	mov	r2,r4
   10f44:	2900122e 	bgeu	r5,r4,10f90 <__umodsi3+0x50>
   10f48:	28001116 	blt	r5,zero,10f90 <__umodsi3+0x50>
   10f4c:	01800804 	movi	r6,32
   10f50:	00c00044 	movi	r3,1
   10f54:	00000206 	br	10f60 <__umodsi3+0x20>
   10f58:	30000c26 	beq	r6,zero,10f8c <__umodsi3+0x4c>
   10f5c:	28000516 	blt	r5,zero,10f74 <__umodsi3+0x34>
   10f60:	294b883a 	add	r5,r5,r5
   10f64:	31bfffc4 	addi	r6,r6,-1
   10f68:	18c7883a 	add	r3,r3,r3
   10f6c:	293ffa36 	bltu	r5,r4,10f58 <_gp+0xfffeae9c>
   10f70:	18000626 	beq	r3,zero,10f8c <__umodsi3+0x4c>
   10f74:	1806d07a 	srli	r3,r3,1
   10f78:	11400136 	bltu	r2,r5,10f80 <__umodsi3+0x40>
   10f7c:	1145c83a 	sub	r2,r2,r5
   10f80:	280ad07a 	srli	r5,r5,1
   10f84:	183ffb1e 	bne	r3,zero,10f74 <_gp+0xfffeaeb8>
   10f88:	f800283a 	ret
   10f8c:	f800283a 	ret
   10f90:	00c00044 	movi	r3,1
   10f94:	003ff706 	br	10f74 <_gp+0xfffeaeb8>

00010f98 <__adddf3>:
   10f98:	02c00434 	movhi	r11,16
   10f9c:	5affffc4 	addi	r11,r11,-1
   10fa0:	2806d7fa 	srli	r3,r5,31
   10fa4:	2ad4703a 	and	r10,r5,r11
   10fa8:	3ad2703a 	and	r9,r7,r11
   10fac:	3804d53a 	srli	r2,r7,20
   10fb0:	3018d77a 	srli	r12,r6,29
   10fb4:	280ad53a 	srli	r5,r5,20
   10fb8:	501490fa 	slli	r10,r10,3
   10fbc:	2010d77a 	srli	r8,r4,29
   10fc0:	481290fa 	slli	r9,r9,3
   10fc4:	380ed7fa 	srli	r7,r7,31
   10fc8:	defffb04 	addi	sp,sp,-20
   10fcc:	dc800215 	stw	r18,8(sp)
   10fd0:	dc400115 	stw	r17,4(sp)
   10fd4:	dc000015 	stw	r16,0(sp)
   10fd8:	dfc00415 	stw	ra,16(sp)
   10fdc:	dcc00315 	stw	r19,12(sp)
   10fe0:	1c803fcc 	andi	r18,r3,255
   10fe4:	2c01ffcc 	andi	r16,r5,2047
   10fe8:	5210b03a 	or	r8,r10,r8
   10fec:	202290fa 	slli	r17,r4,3
   10ff0:	1081ffcc 	andi	r2,r2,2047
   10ff4:	4b12b03a 	or	r9,r9,r12
   10ff8:	300c90fa 	slli	r6,r6,3
   10ffc:	91c07526 	beq	r18,r7,111d4 <__adddf3+0x23c>
   11000:	8087c83a 	sub	r3,r16,r2
   11004:	00c0ab0e 	bge	zero,r3,112b4 <__adddf3+0x31c>
   11008:	10002a1e 	bne	r2,zero,110b4 <__adddf3+0x11c>
   1100c:	4984b03a 	or	r2,r9,r6
   11010:	1000961e 	bne	r2,zero,1126c <__adddf3+0x2d4>
   11014:	888001cc 	andi	r2,r17,7
   11018:	10000726 	beq	r2,zero,11038 <__adddf3+0xa0>
   1101c:	888003cc 	andi	r2,r17,15
   11020:	00c00104 	movi	r3,4
   11024:	10c00426 	beq	r2,r3,11038 <__adddf3+0xa0>
   11028:	88c7883a 	add	r3,r17,r3
   1102c:	1c63803a 	cmpltu	r17,r3,r17
   11030:	4451883a 	add	r8,r8,r17
   11034:	1823883a 	mov	r17,r3
   11038:	4080202c 	andhi	r2,r8,128
   1103c:	10005926 	beq	r2,zero,111a4 <__adddf3+0x20c>
   11040:	84000044 	addi	r16,r16,1
   11044:	0081ffc4 	movi	r2,2047
   11048:	8080ba26 	beq	r16,r2,11334 <__adddf3+0x39c>
   1104c:	00bfe034 	movhi	r2,65408
   11050:	10bfffc4 	addi	r2,r2,-1
   11054:	4090703a 	and	r8,r8,r2
   11058:	4004977a 	slli	r2,r8,29
   1105c:	4010927a 	slli	r8,r8,9
   11060:	8822d0fa 	srli	r17,r17,3
   11064:	8401ffcc 	andi	r16,r16,2047
   11068:	4010d33a 	srli	r8,r8,12
   1106c:	9007883a 	mov	r3,r18
   11070:	1444b03a 	or	r2,r2,r17
   11074:	8401ffcc 	andi	r16,r16,2047
   11078:	8020953a 	slli	r16,r16,20
   1107c:	18c03fcc 	andi	r3,r3,255
   11080:	01000434 	movhi	r4,16
   11084:	213fffc4 	addi	r4,r4,-1
   11088:	180697fa 	slli	r3,r3,31
   1108c:	4110703a 	and	r8,r8,r4
   11090:	4410b03a 	or	r8,r8,r16
   11094:	40c6b03a 	or	r3,r8,r3
   11098:	dfc00417 	ldw	ra,16(sp)
   1109c:	dcc00317 	ldw	r19,12(sp)
   110a0:	dc800217 	ldw	r18,8(sp)
   110a4:	dc400117 	ldw	r17,4(sp)
   110a8:	dc000017 	ldw	r16,0(sp)
   110ac:	dec00504 	addi	sp,sp,20
   110b0:	f800283a 	ret
   110b4:	0081ffc4 	movi	r2,2047
   110b8:	80bfd626 	beq	r16,r2,11014 <_gp+0xfffeaf58>
   110bc:	4a402034 	orhi	r9,r9,128
   110c0:	00800e04 	movi	r2,56
   110c4:	10c09f16 	blt	r2,r3,11344 <__adddf3+0x3ac>
   110c8:	008007c4 	movi	r2,31
   110cc:	10c0c216 	blt	r2,r3,113d8 <__adddf3+0x440>
   110d0:	00800804 	movi	r2,32
   110d4:	10c5c83a 	sub	r2,r2,r3
   110d8:	488a983a 	sll	r5,r9,r2
   110dc:	30c8d83a 	srl	r4,r6,r3
   110e0:	3084983a 	sll	r2,r6,r2
   110e4:	48c6d83a 	srl	r3,r9,r3
   110e8:	290cb03a 	or	r6,r5,r4
   110ec:	1004c03a 	cmpne	r2,r2,zero
   110f0:	308cb03a 	or	r6,r6,r2
   110f4:	898dc83a 	sub	r6,r17,r6
   110f8:	89a3803a 	cmpltu	r17,r17,r6
   110fc:	40d1c83a 	sub	r8,r8,r3
   11100:	4451c83a 	sub	r8,r8,r17
   11104:	3023883a 	mov	r17,r6
   11108:	4080202c 	andhi	r2,r8,128
   1110c:	10002326 	beq	r2,zero,1119c <__adddf3+0x204>
   11110:	04c02034 	movhi	r19,128
   11114:	9cffffc4 	addi	r19,r19,-1
   11118:	44e6703a 	and	r19,r8,r19
   1111c:	98007626 	beq	r19,zero,112f8 <__adddf3+0x360>
   11120:	9809883a 	mov	r4,r19
   11124:	001220c0 	call	1220c <__clzsi2>
   11128:	10fffe04 	addi	r3,r2,-8
   1112c:	010007c4 	movi	r4,31
   11130:	20c07716 	blt	r4,r3,11310 <__adddf3+0x378>
   11134:	00800804 	movi	r2,32
   11138:	10c5c83a 	sub	r2,r2,r3
   1113c:	8884d83a 	srl	r2,r17,r2
   11140:	98d0983a 	sll	r8,r19,r3
   11144:	88e2983a 	sll	r17,r17,r3
   11148:	1204b03a 	or	r2,r2,r8
   1114c:	1c007416 	blt	r3,r16,11320 <__adddf3+0x388>
   11150:	1c21c83a 	sub	r16,r3,r16
   11154:	82000044 	addi	r8,r16,1
   11158:	00c007c4 	movi	r3,31
   1115c:	1a009116 	blt	r3,r8,113a4 <__adddf3+0x40c>
   11160:	00c00804 	movi	r3,32
   11164:	1a07c83a 	sub	r3,r3,r8
   11168:	8a08d83a 	srl	r4,r17,r8
   1116c:	88e2983a 	sll	r17,r17,r3
   11170:	10c6983a 	sll	r3,r2,r3
   11174:	1210d83a 	srl	r8,r2,r8
   11178:	8804c03a 	cmpne	r2,r17,zero
   1117c:	1906b03a 	or	r3,r3,r4
   11180:	18a2b03a 	or	r17,r3,r2
   11184:	0021883a 	mov	r16,zero
   11188:	003fa206 	br	11014 <_gp+0xfffeaf58>
   1118c:	1890b03a 	or	r8,r3,r2
   11190:	40017d26 	beq	r8,zero,11788 <__adddf3+0x7f0>
   11194:	1011883a 	mov	r8,r2
   11198:	1823883a 	mov	r17,r3
   1119c:	888001cc 	andi	r2,r17,7
   111a0:	103f9e1e 	bne	r2,zero,1101c <_gp+0xfffeaf60>
   111a4:	4004977a 	slli	r2,r8,29
   111a8:	8822d0fa 	srli	r17,r17,3
   111ac:	4010d0fa 	srli	r8,r8,3
   111b0:	9007883a 	mov	r3,r18
   111b4:	1444b03a 	or	r2,r2,r17
   111b8:	0101ffc4 	movi	r4,2047
   111bc:	81002426 	beq	r16,r4,11250 <__adddf3+0x2b8>
   111c0:	8120703a 	and	r16,r16,r4
   111c4:	01000434 	movhi	r4,16
   111c8:	213fffc4 	addi	r4,r4,-1
   111cc:	4110703a 	and	r8,r8,r4
   111d0:	003fa806 	br	11074 <_gp+0xfffeafb8>
   111d4:	8089c83a 	sub	r4,r16,r2
   111d8:	01005e0e 	bge	zero,r4,11354 <__adddf3+0x3bc>
   111dc:	10002b26 	beq	r2,zero,1128c <__adddf3+0x2f4>
   111e0:	0081ffc4 	movi	r2,2047
   111e4:	80bf8b26 	beq	r16,r2,11014 <_gp+0xfffeaf58>
   111e8:	4a402034 	orhi	r9,r9,128
   111ec:	00800e04 	movi	r2,56
   111f0:	1100a40e 	bge	r2,r4,11484 <__adddf3+0x4ec>
   111f4:	498cb03a 	or	r6,r9,r6
   111f8:	300ac03a 	cmpne	r5,r6,zero
   111fc:	0013883a 	mov	r9,zero
   11200:	2c4b883a 	add	r5,r5,r17
   11204:	2c63803a 	cmpltu	r17,r5,r17
   11208:	4a11883a 	add	r8,r9,r8
   1120c:	8a11883a 	add	r8,r17,r8
   11210:	2823883a 	mov	r17,r5
   11214:	4080202c 	andhi	r2,r8,128
   11218:	103fe026 	beq	r2,zero,1119c <_gp+0xfffeb0e0>
   1121c:	84000044 	addi	r16,r16,1
   11220:	0081ffc4 	movi	r2,2047
   11224:	8080d226 	beq	r16,r2,11570 <__adddf3+0x5d8>
   11228:	00bfe034 	movhi	r2,65408
   1122c:	10bfffc4 	addi	r2,r2,-1
   11230:	4090703a 	and	r8,r8,r2
   11234:	880ad07a 	srli	r5,r17,1
   11238:	400897fa 	slli	r4,r8,31
   1123c:	88c0004c 	andi	r3,r17,1
   11240:	28e2b03a 	or	r17,r5,r3
   11244:	4010d07a 	srli	r8,r8,1
   11248:	2462b03a 	or	r17,r4,r17
   1124c:	003f7106 	br	11014 <_gp+0xfffeaf58>
   11250:	4088b03a 	or	r4,r8,r2
   11254:	20014526 	beq	r4,zero,1176c <__adddf3+0x7d4>
   11258:	01000434 	movhi	r4,16
   1125c:	42000234 	orhi	r8,r8,8
   11260:	213fffc4 	addi	r4,r4,-1
   11264:	4110703a 	and	r8,r8,r4
   11268:	003f8206 	br	11074 <_gp+0xfffeafb8>
   1126c:	18ffffc4 	addi	r3,r3,-1
   11270:	1800491e 	bne	r3,zero,11398 <__adddf3+0x400>
   11274:	898bc83a 	sub	r5,r17,r6
   11278:	8963803a 	cmpltu	r17,r17,r5
   1127c:	4251c83a 	sub	r8,r8,r9
   11280:	4451c83a 	sub	r8,r8,r17
   11284:	2823883a 	mov	r17,r5
   11288:	003f9f06 	br	11108 <_gp+0xfffeb04c>
   1128c:	4984b03a 	or	r2,r9,r6
   11290:	103f6026 	beq	r2,zero,11014 <_gp+0xfffeaf58>
   11294:	213fffc4 	addi	r4,r4,-1
   11298:	2000931e 	bne	r4,zero,114e8 <__adddf3+0x550>
   1129c:	898d883a 	add	r6,r17,r6
   112a0:	3463803a 	cmpltu	r17,r6,r17
   112a4:	4251883a 	add	r8,r8,r9
   112a8:	8a11883a 	add	r8,r17,r8
   112ac:	3023883a 	mov	r17,r6
   112b0:	003fd806 	br	11214 <_gp+0xfffeb158>
   112b4:	1800541e 	bne	r3,zero,11408 <__adddf3+0x470>
   112b8:	80800044 	addi	r2,r16,1
   112bc:	1081ffcc 	andi	r2,r2,2047
   112c0:	00c00044 	movi	r3,1
   112c4:	1880a00e 	bge	r3,r2,11548 <__adddf3+0x5b0>
   112c8:	8989c83a 	sub	r4,r17,r6
   112cc:	8905803a 	cmpltu	r2,r17,r4
   112d0:	4267c83a 	sub	r19,r8,r9
   112d4:	98a7c83a 	sub	r19,r19,r2
   112d8:	9880202c 	andhi	r2,r19,128
   112dc:	10006326 	beq	r2,zero,1146c <__adddf3+0x4d4>
   112e0:	3463c83a 	sub	r17,r6,r17
   112e4:	4a07c83a 	sub	r3,r9,r8
   112e8:	344d803a 	cmpltu	r6,r6,r17
   112ec:	19a7c83a 	sub	r19,r3,r6
   112f0:	3825883a 	mov	r18,r7
   112f4:	983f8a1e 	bne	r19,zero,11120 <_gp+0xfffeb064>
   112f8:	8809883a 	mov	r4,r17
   112fc:	001220c0 	call	1220c <__clzsi2>
   11300:	10800804 	addi	r2,r2,32
   11304:	10fffe04 	addi	r3,r2,-8
   11308:	010007c4 	movi	r4,31
   1130c:	20ff890e 	bge	r4,r3,11134 <_gp+0xfffeb078>
   11310:	10bff604 	addi	r2,r2,-40
   11314:	8884983a 	sll	r2,r17,r2
   11318:	0023883a 	mov	r17,zero
   1131c:	1c3f8c0e 	bge	r3,r16,11150 <_gp+0xfffeb094>
   11320:	023fe034 	movhi	r8,65408
   11324:	423fffc4 	addi	r8,r8,-1
   11328:	80e1c83a 	sub	r16,r16,r3
   1132c:	1210703a 	and	r8,r2,r8
   11330:	003f3806 	br	11014 <_gp+0xfffeaf58>
   11334:	9007883a 	mov	r3,r18
   11338:	0011883a 	mov	r8,zero
   1133c:	0005883a 	mov	r2,zero
   11340:	003f4c06 	br	11074 <_gp+0xfffeafb8>
   11344:	498cb03a 	or	r6,r9,r6
   11348:	300cc03a 	cmpne	r6,r6,zero
   1134c:	0007883a 	mov	r3,zero
   11350:	003f6806 	br	110f4 <_gp+0xfffeb038>
   11354:	20009c1e 	bne	r4,zero,115c8 <__adddf3+0x630>
   11358:	80800044 	addi	r2,r16,1
   1135c:	1141ffcc 	andi	r5,r2,2047
   11360:	01000044 	movi	r4,1
   11364:	2140670e 	bge	r4,r5,11504 <__adddf3+0x56c>
   11368:	0101ffc4 	movi	r4,2047
   1136c:	11007f26 	beq	r2,r4,1156c <__adddf3+0x5d4>
   11370:	898d883a 	add	r6,r17,r6
   11374:	4247883a 	add	r3,r8,r9
   11378:	3451803a 	cmpltu	r8,r6,r17
   1137c:	40d1883a 	add	r8,r8,r3
   11380:	402297fa 	slli	r17,r8,31
   11384:	300cd07a 	srli	r6,r6,1
   11388:	4010d07a 	srli	r8,r8,1
   1138c:	1021883a 	mov	r16,r2
   11390:	89a2b03a 	or	r17,r17,r6
   11394:	003f1f06 	br	11014 <_gp+0xfffeaf58>
   11398:	0081ffc4 	movi	r2,2047
   1139c:	80bf481e 	bne	r16,r2,110c0 <_gp+0xfffeb004>
   113a0:	003f1c06 	br	11014 <_gp+0xfffeaf58>
   113a4:	843ff844 	addi	r16,r16,-31
   113a8:	01000804 	movi	r4,32
   113ac:	1406d83a 	srl	r3,r2,r16
   113b0:	41005026 	beq	r8,r4,114f4 <__adddf3+0x55c>
   113b4:	01001004 	movi	r4,64
   113b8:	2211c83a 	sub	r8,r4,r8
   113bc:	1204983a 	sll	r2,r2,r8
   113c0:	88a2b03a 	or	r17,r17,r2
   113c4:	8822c03a 	cmpne	r17,r17,zero
   113c8:	1c62b03a 	or	r17,r3,r17
   113cc:	0011883a 	mov	r8,zero
   113d0:	0021883a 	mov	r16,zero
   113d4:	003f7106 	br	1119c <_gp+0xfffeb0e0>
   113d8:	193ff804 	addi	r4,r3,-32
   113dc:	00800804 	movi	r2,32
   113e0:	4908d83a 	srl	r4,r9,r4
   113e4:	18804526 	beq	r3,r2,114fc <__adddf3+0x564>
   113e8:	00801004 	movi	r2,64
   113ec:	10c5c83a 	sub	r2,r2,r3
   113f0:	4886983a 	sll	r3,r9,r2
   113f4:	198cb03a 	or	r6,r3,r6
   113f8:	300cc03a 	cmpne	r6,r6,zero
   113fc:	218cb03a 	or	r6,r4,r6
   11400:	0007883a 	mov	r3,zero
   11404:	003f3b06 	br	110f4 <_gp+0xfffeb038>
   11408:	80002a26 	beq	r16,zero,114b4 <__adddf3+0x51c>
   1140c:	0101ffc4 	movi	r4,2047
   11410:	11006826 	beq	r2,r4,115b4 <__adddf3+0x61c>
   11414:	00c7c83a 	sub	r3,zero,r3
   11418:	42002034 	orhi	r8,r8,128
   1141c:	01000e04 	movi	r4,56
   11420:	20c07c16 	blt	r4,r3,11614 <__adddf3+0x67c>
   11424:	010007c4 	movi	r4,31
   11428:	20c0da16 	blt	r4,r3,11794 <__adddf3+0x7fc>
   1142c:	01000804 	movi	r4,32
   11430:	20c9c83a 	sub	r4,r4,r3
   11434:	4114983a 	sll	r10,r8,r4
   11438:	88cad83a 	srl	r5,r17,r3
   1143c:	8908983a 	sll	r4,r17,r4
   11440:	40c6d83a 	srl	r3,r8,r3
   11444:	5162b03a 	or	r17,r10,r5
   11448:	2008c03a 	cmpne	r4,r4,zero
   1144c:	8922b03a 	or	r17,r17,r4
   11450:	3463c83a 	sub	r17,r6,r17
   11454:	48c7c83a 	sub	r3,r9,r3
   11458:	344d803a 	cmpltu	r6,r6,r17
   1145c:	1991c83a 	sub	r8,r3,r6
   11460:	1021883a 	mov	r16,r2
   11464:	3825883a 	mov	r18,r7
   11468:	003f2706 	br	11108 <_gp+0xfffeb04c>
   1146c:	24d0b03a 	or	r8,r4,r19
   11470:	40001b1e 	bne	r8,zero,114e0 <__adddf3+0x548>
   11474:	0005883a 	mov	r2,zero
   11478:	0007883a 	mov	r3,zero
   1147c:	0021883a 	mov	r16,zero
   11480:	003f4d06 	br	111b8 <_gp+0xfffeb0fc>
   11484:	008007c4 	movi	r2,31
   11488:	11003c16 	blt	r2,r4,1157c <__adddf3+0x5e4>
   1148c:	00800804 	movi	r2,32
   11490:	1105c83a 	sub	r2,r2,r4
   11494:	488e983a 	sll	r7,r9,r2
   11498:	310ad83a 	srl	r5,r6,r4
   1149c:	3084983a 	sll	r2,r6,r2
   114a0:	4912d83a 	srl	r9,r9,r4
   114a4:	394ab03a 	or	r5,r7,r5
   114a8:	1004c03a 	cmpne	r2,r2,zero
   114ac:	288ab03a 	or	r5,r5,r2
   114b0:	003f5306 	br	11200 <_gp+0xfffeb144>
   114b4:	4448b03a 	or	r4,r8,r17
   114b8:	20003e26 	beq	r4,zero,115b4 <__adddf3+0x61c>
   114bc:	00c6303a 	nor	r3,zero,r3
   114c0:	18003a1e 	bne	r3,zero,115ac <__adddf3+0x614>
   114c4:	3463c83a 	sub	r17,r6,r17
   114c8:	4a07c83a 	sub	r3,r9,r8
   114cc:	344d803a 	cmpltu	r6,r6,r17
   114d0:	1991c83a 	sub	r8,r3,r6
   114d4:	1021883a 	mov	r16,r2
   114d8:	3825883a 	mov	r18,r7
   114dc:	003f0a06 	br	11108 <_gp+0xfffeb04c>
   114e0:	2023883a 	mov	r17,r4
   114e4:	003f0d06 	br	1111c <_gp+0xfffeb060>
   114e8:	0081ffc4 	movi	r2,2047
   114ec:	80bf3f1e 	bne	r16,r2,111ec <_gp+0xfffeb130>
   114f0:	003ec806 	br	11014 <_gp+0xfffeaf58>
   114f4:	0005883a 	mov	r2,zero
   114f8:	003fb106 	br	113c0 <_gp+0xfffeb304>
   114fc:	0007883a 	mov	r3,zero
   11500:	003fbc06 	br	113f4 <_gp+0xfffeb338>
   11504:	4444b03a 	or	r2,r8,r17
   11508:	8000871e 	bne	r16,zero,11728 <__adddf3+0x790>
   1150c:	1000ba26 	beq	r2,zero,117f8 <__adddf3+0x860>
   11510:	4984b03a 	or	r2,r9,r6
   11514:	103ebf26 	beq	r2,zero,11014 <_gp+0xfffeaf58>
   11518:	8985883a 	add	r2,r17,r6
   1151c:	4247883a 	add	r3,r8,r9
   11520:	1451803a 	cmpltu	r8,r2,r17
   11524:	40d1883a 	add	r8,r8,r3
   11528:	40c0202c 	andhi	r3,r8,128
   1152c:	1023883a 	mov	r17,r2
   11530:	183f1a26 	beq	r3,zero,1119c <_gp+0xfffeb0e0>
   11534:	00bfe034 	movhi	r2,65408
   11538:	10bfffc4 	addi	r2,r2,-1
   1153c:	2021883a 	mov	r16,r4
   11540:	4090703a 	and	r8,r8,r2
   11544:	003eb306 	br	11014 <_gp+0xfffeaf58>
   11548:	4444b03a 	or	r2,r8,r17
   1154c:	8000291e 	bne	r16,zero,115f4 <__adddf3+0x65c>
   11550:	10004b1e 	bne	r2,zero,11680 <__adddf3+0x6e8>
   11554:	4990b03a 	or	r8,r9,r6
   11558:	40008b26 	beq	r8,zero,11788 <__adddf3+0x7f0>
   1155c:	4811883a 	mov	r8,r9
   11560:	3023883a 	mov	r17,r6
   11564:	3825883a 	mov	r18,r7
   11568:	003eaa06 	br	11014 <_gp+0xfffeaf58>
   1156c:	1021883a 	mov	r16,r2
   11570:	0011883a 	mov	r8,zero
   11574:	0005883a 	mov	r2,zero
   11578:	003f0f06 	br	111b8 <_gp+0xfffeb0fc>
   1157c:	217ff804 	addi	r5,r4,-32
   11580:	00800804 	movi	r2,32
   11584:	494ad83a 	srl	r5,r9,r5
   11588:	20807d26 	beq	r4,r2,11780 <__adddf3+0x7e8>
   1158c:	00801004 	movi	r2,64
   11590:	1109c83a 	sub	r4,r2,r4
   11594:	4912983a 	sll	r9,r9,r4
   11598:	498cb03a 	or	r6,r9,r6
   1159c:	300cc03a 	cmpne	r6,r6,zero
   115a0:	298ab03a 	or	r5,r5,r6
   115a4:	0013883a 	mov	r9,zero
   115a8:	003f1506 	br	11200 <_gp+0xfffeb144>
   115ac:	0101ffc4 	movi	r4,2047
   115b0:	113f9a1e 	bne	r2,r4,1141c <_gp+0xfffeb360>
   115b4:	4811883a 	mov	r8,r9
   115b8:	3023883a 	mov	r17,r6
   115bc:	1021883a 	mov	r16,r2
   115c0:	3825883a 	mov	r18,r7
   115c4:	003e9306 	br	11014 <_gp+0xfffeaf58>
   115c8:	8000161e 	bne	r16,zero,11624 <__adddf3+0x68c>
   115cc:	444ab03a 	or	r5,r8,r17
   115d0:	28005126 	beq	r5,zero,11718 <__adddf3+0x780>
   115d4:	0108303a 	nor	r4,zero,r4
   115d8:	20004d1e 	bne	r4,zero,11710 <__adddf3+0x778>
   115dc:	89a3883a 	add	r17,r17,r6
   115e0:	4253883a 	add	r9,r8,r9
   115e4:	898d803a 	cmpltu	r6,r17,r6
   115e8:	3251883a 	add	r8,r6,r9
   115ec:	1021883a 	mov	r16,r2
   115f0:	003f0806 	br	11214 <_gp+0xfffeb158>
   115f4:	1000301e 	bne	r2,zero,116b8 <__adddf3+0x720>
   115f8:	4984b03a 	or	r2,r9,r6
   115fc:	10007126 	beq	r2,zero,117c4 <__adddf3+0x82c>
   11600:	4811883a 	mov	r8,r9
   11604:	3023883a 	mov	r17,r6
   11608:	3825883a 	mov	r18,r7
   1160c:	0401ffc4 	movi	r16,2047
   11610:	003e8006 	br	11014 <_gp+0xfffeaf58>
   11614:	4462b03a 	or	r17,r8,r17
   11618:	8822c03a 	cmpne	r17,r17,zero
   1161c:	0007883a 	mov	r3,zero
   11620:	003f8b06 	br	11450 <_gp+0xfffeb394>
   11624:	0141ffc4 	movi	r5,2047
   11628:	11403b26 	beq	r2,r5,11718 <__adddf3+0x780>
   1162c:	0109c83a 	sub	r4,zero,r4
   11630:	42002034 	orhi	r8,r8,128
   11634:	01400e04 	movi	r5,56
   11638:	29006716 	blt	r5,r4,117d8 <__adddf3+0x840>
   1163c:	014007c4 	movi	r5,31
   11640:	29007016 	blt	r5,r4,11804 <__adddf3+0x86c>
   11644:	01400804 	movi	r5,32
   11648:	290bc83a 	sub	r5,r5,r4
   1164c:	4154983a 	sll	r10,r8,r5
   11650:	890ed83a 	srl	r7,r17,r4
   11654:	894a983a 	sll	r5,r17,r5
   11658:	4108d83a 	srl	r4,r8,r4
   1165c:	51e2b03a 	or	r17,r10,r7
   11660:	280ac03a 	cmpne	r5,r5,zero
   11664:	8962b03a 	or	r17,r17,r5
   11668:	89a3883a 	add	r17,r17,r6
   1166c:	2253883a 	add	r9,r4,r9
   11670:	898d803a 	cmpltu	r6,r17,r6
   11674:	3251883a 	add	r8,r6,r9
   11678:	1021883a 	mov	r16,r2
   1167c:	003ee506 	br	11214 <_gp+0xfffeb158>
   11680:	4984b03a 	or	r2,r9,r6
   11684:	103e6326 	beq	r2,zero,11014 <_gp+0xfffeaf58>
   11688:	8987c83a 	sub	r3,r17,r6
   1168c:	88c9803a 	cmpltu	r4,r17,r3
   11690:	4245c83a 	sub	r2,r8,r9
   11694:	1105c83a 	sub	r2,r2,r4
   11698:	1100202c 	andhi	r4,r2,128
   1169c:	203ebb26 	beq	r4,zero,1118c <_gp+0xfffeb0d0>
   116a0:	3463c83a 	sub	r17,r6,r17
   116a4:	4a07c83a 	sub	r3,r9,r8
   116a8:	344d803a 	cmpltu	r6,r6,r17
   116ac:	1991c83a 	sub	r8,r3,r6
   116b0:	3825883a 	mov	r18,r7
   116b4:	003e5706 	br	11014 <_gp+0xfffeaf58>
   116b8:	4984b03a 	or	r2,r9,r6
   116bc:	10002e26 	beq	r2,zero,11778 <__adddf3+0x7e0>
   116c0:	4004d0fa 	srli	r2,r8,3
   116c4:	8822d0fa 	srli	r17,r17,3
   116c8:	4010977a 	slli	r8,r8,29
   116cc:	10c0022c 	andhi	r3,r2,8
   116d0:	4462b03a 	or	r17,r8,r17
   116d4:	18000826 	beq	r3,zero,116f8 <__adddf3+0x760>
   116d8:	4808d0fa 	srli	r4,r9,3
   116dc:	20c0022c 	andhi	r3,r4,8
   116e0:	1800051e 	bne	r3,zero,116f8 <__adddf3+0x760>
   116e4:	300cd0fa 	srli	r6,r6,3
   116e8:	4806977a 	slli	r3,r9,29
   116ec:	2005883a 	mov	r2,r4
   116f0:	3825883a 	mov	r18,r7
   116f4:	19a2b03a 	or	r17,r3,r6
   116f8:	8810d77a 	srli	r8,r17,29
   116fc:	100490fa 	slli	r2,r2,3
   11700:	882290fa 	slli	r17,r17,3
   11704:	0401ffc4 	movi	r16,2047
   11708:	4090b03a 	or	r8,r8,r2
   1170c:	003e4106 	br	11014 <_gp+0xfffeaf58>
   11710:	0141ffc4 	movi	r5,2047
   11714:	117fc71e 	bne	r2,r5,11634 <_gp+0xfffeb578>
   11718:	4811883a 	mov	r8,r9
   1171c:	3023883a 	mov	r17,r6
   11720:	1021883a 	mov	r16,r2
   11724:	003e3b06 	br	11014 <_gp+0xfffeaf58>
   11728:	10002f26 	beq	r2,zero,117e8 <__adddf3+0x850>
   1172c:	4984b03a 	or	r2,r9,r6
   11730:	10001126 	beq	r2,zero,11778 <__adddf3+0x7e0>
   11734:	4004d0fa 	srli	r2,r8,3
   11738:	8822d0fa 	srli	r17,r17,3
   1173c:	4010977a 	slli	r8,r8,29
   11740:	10c0022c 	andhi	r3,r2,8
   11744:	4462b03a 	or	r17,r8,r17
   11748:	183feb26 	beq	r3,zero,116f8 <_gp+0xfffeb63c>
   1174c:	4808d0fa 	srli	r4,r9,3
   11750:	20c0022c 	andhi	r3,r4,8
   11754:	183fe81e 	bne	r3,zero,116f8 <_gp+0xfffeb63c>
   11758:	300cd0fa 	srli	r6,r6,3
   1175c:	4806977a 	slli	r3,r9,29
   11760:	2005883a 	mov	r2,r4
   11764:	19a2b03a 	or	r17,r3,r6
   11768:	003fe306 	br	116f8 <_gp+0xfffeb63c>
   1176c:	0011883a 	mov	r8,zero
   11770:	0005883a 	mov	r2,zero
   11774:	003e3f06 	br	11074 <_gp+0xfffeafb8>
   11778:	0401ffc4 	movi	r16,2047
   1177c:	003e2506 	br	11014 <_gp+0xfffeaf58>
   11780:	0013883a 	mov	r9,zero
   11784:	003f8406 	br	11598 <_gp+0xfffeb4dc>
   11788:	0005883a 	mov	r2,zero
   1178c:	0007883a 	mov	r3,zero
   11790:	003e8906 	br	111b8 <_gp+0xfffeb0fc>
   11794:	197ff804 	addi	r5,r3,-32
   11798:	01000804 	movi	r4,32
   1179c:	414ad83a 	srl	r5,r8,r5
   117a0:	19002426 	beq	r3,r4,11834 <__adddf3+0x89c>
   117a4:	01001004 	movi	r4,64
   117a8:	20c7c83a 	sub	r3,r4,r3
   117ac:	40c6983a 	sll	r3,r8,r3
   117b0:	1c46b03a 	or	r3,r3,r17
   117b4:	1806c03a 	cmpne	r3,r3,zero
   117b8:	28e2b03a 	or	r17,r5,r3
   117bc:	0007883a 	mov	r3,zero
   117c0:	003f2306 	br	11450 <_gp+0xfffeb394>
   117c4:	0007883a 	mov	r3,zero
   117c8:	5811883a 	mov	r8,r11
   117cc:	00bfffc4 	movi	r2,-1
   117d0:	0401ffc4 	movi	r16,2047
   117d4:	003e7806 	br	111b8 <_gp+0xfffeb0fc>
   117d8:	4462b03a 	or	r17,r8,r17
   117dc:	8822c03a 	cmpne	r17,r17,zero
   117e0:	0009883a 	mov	r4,zero
   117e4:	003fa006 	br	11668 <_gp+0xfffeb5ac>
   117e8:	4811883a 	mov	r8,r9
   117ec:	3023883a 	mov	r17,r6
   117f0:	0401ffc4 	movi	r16,2047
   117f4:	003e0706 	br	11014 <_gp+0xfffeaf58>
   117f8:	4811883a 	mov	r8,r9
   117fc:	3023883a 	mov	r17,r6
   11800:	003e0406 	br	11014 <_gp+0xfffeaf58>
   11804:	21fff804 	addi	r7,r4,-32
   11808:	01400804 	movi	r5,32
   1180c:	41ced83a 	srl	r7,r8,r7
   11810:	21400a26 	beq	r4,r5,1183c <__adddf3+0x8a4>
   11814:	01401004 	movi	r5,64
   11818:	2909c83a 	sub	r4,r5,r4
   1181c:	4108983a 	sll	r4,r8,r4
   11820:	2448b03a 	or	r4,r4,r17
   11824:	2008c03a 	cmpne	r4,r4,zero
   11828:	3922b03a 	or	r17,r7,r4
   1182c:	0009883a 	mov	r4,zero
   11830:	003f8d06 	br	11668 <_gp+0xfffeb5ac>
   11834:	0007883a 	mov	r3,zero
   11838:	003fdd06 	br	117b0 <_gp+0xfffeb6f4>
   1183c:	0009883a 	mov	r4,zero
   11840:	003ff706 	br	11820 <_gp+0xfffeb764>

00011844 <__muldf3>:
   11844:	deffee04 	addi	sp,sp,-72
   11848:	dd000c15 	stw	r20,48(sp)
   1184c:	2828d53a 	srli	r20,r5,20
   11850:	ddc00f15 	stw	r23,60(sp)
   11854:	282ed7fa 	srli	r23,r5,31
   11858:	dc000815 	stw	r16,32(sp)
   1185c:	04000434 	movhi	r16,16
   11860:	dcc00b15 	stw	r19,44(sp)
   11864:	843fffc4 	addi	r16,r16,-1
   11868:	dfc01115 	stw	ra,68(sp)
   1186c:	df001015 	stw	fp,64(sp)
   11870:	dd800e15 	stw	r22,56(sp)
   11874:	dd400d15 	stw	r21,52(sp)
   11878:	dc800a15 	stw	r18,40(sp)
   1187c:	dc400915 	stw	r17,36(sp)
   11880:	a501ffcc 	andi	r20,r20,2047
   11884:	2c20703a 	and	r16,r5,r16
   11888:	b827883a 	mov	r19,r23
   1188c:	ba403fcc 	andi	r9,r23,255
   11890:	a0006026 	beq	r20,zero,11a14 <__muldf3+0x1d0>
   11894:	0081ffc4 	movi	r2,2047
   11898:	202d883a 	mov	r22,r4
   1189c:	a0803626 	beq	r20,r2,11978 <__muldf3+0x134>
   118a0:	84000434 	orhi	r16,r16,16
   118a4:	200ad77a 	srli	r5,r4,29
   118a8:	800490fa 	slli	r2,r16,3
   118ac:	202c90fa 	slli	r22,r4,3
   118b0:	a53f0044 	addi	r20,r20,-1023
   118b4:	28a0b03a 	or	r16,r5,r2
   118b8:	002b883a 	mov	r21,zero
   118bc:	000b883a 	mov	r5,zero
   118c0:	3804d53a 	srli	r2,r7,20
   118c4:	3838d7fa 	srli	fp,r7,31
   118c8:	04400434 	movhi	r17,16
   118cc:	8c7fffc4 	addi	r17,r17,-1
   118d0:	1081ffcc 	andi	r2,r2,2047
   118d4:	3025883a 	mov	r18,r6
   118d8:	3c62703a 	and	r17,r7,r17
   118dc:	e2803fcc 	andi	r10,fp,255
   118e0:	10006d26 	beq	r2,zero,11a98 <__muldf3+0x254>
   118e4:	00c1ffc4 	movi	r3,2047
   118e8:	10c06526 	beq	r2,r3,11a80 <__muldf3+0x23c>
   118ec:	8c400434 	orhi	r17,r17,16
   118f0:	300ed77a 	srli	r7,r6,29
   118f4:	880690fa 	slli	r3,r17,3
   118f8:	302490fa 	slli	r18,r6,3
   118fc:	10bf0044 	addi	r2,r2,-1023
   11900:	38e2b03a 	or	r17,r7,r3
   11904:	000f883a 	mov	r7,zero
   11908:	a087883a 	add	r3,r20,r2
   1190c:	010003c4 	movi	r4,15
   11910:	3d44b03a 	or	r2,r7,r21
   11914:	e5ccf03a 	xor	r6,fp,r23
   11918:	1a000044 	addi	r8,r3,1
   1191c:	20809b36 	bltu	r4,r2,11b8c <__muldf3+0x348>
   11920:	100490ba 	slli	r2,r2,2
   11924:	01000074 	movhi	r4,1
   11928:	21064e04 	addi	r4,r4,6456
   1192c:	1105883a 	add	r2,r2,r4
   11930:	10800017 	ldw	r2,0(r2)
   11934:	1000683a 	jmp	r2
   11938:	00011b8c 	andi	zero,zero,1134
   1193c:	00011998 	cmpnei	zero,zero,1126
   11940:	00011998 	cmpnei	zero,zero,1126
   11944:	00011994 	movui	zero,1126
   11948:	00011b68 	cmpgeui	zero,zero,1133
   1194c:	00011b68 	cmpgeui	zero,zero,1133
   11950:	00011b50 	cmplti	zero,zero,1133
   11954:	00011994 	movui	zero,1126
   11958:	00011b68 	cmpgeui	zero,zero,1133
   1195c:	00011b50 	cmplti	zero,zero,1133
   11960:	00011b68 	cmpgeui	zero,zero,1133
   11964:	00011994 	movui	zero,1126
   11968:	00011b78 	rdprs	zero,zero,1133
   1196c:	00011b78 	rdprs	zero,zero,1133
   11970:	00011b78 	rdprs	zero,zero,1133
   11974:	00011ed8 	cmpnei	zero,zero,1147
   11978:	2404b03a 	or	r2,r4,r16
   1197c:	1000711e 	bne	r2,zero,11b44 <__muldf3+0x300>
   11980:	05400204 	movi	r21,8
   11984:	0021883a 	mov	r16,zero
   11988:	002d883a 	mov	r22,zero
   1198c:	01400084 	movi	r5,2
   11990:	003fcb06 	br	118c0 <_gp+0xfffeb804>
   11994:	500d883a 	mov	r6,r10
   11998:	00800084 	movi	r2,2
   1199c:	38805926 	beq	r7,r2,11b04 <__muldf3+0x2c0>
   119a0:	008000c4 	movi	r2,3
   119a4:	3881bb26 	beq	r7,r2,12094 <__muldf3+0x850>
   119a8:	00800044 	movi	r2,1
   119ac:	3881961e 	bne	r7,r2,12008 <__muldf3+0x7c4>
   119b0:	3027883a 	mov	r19,r6
   119b4:	0005883a 	mov	r2,zero
   119b8:	0021883a 	mov	r16,zero
   119bc:	002d883a 	mov	r22,zero
   119c0:	1004953a 	slli	r2,r2,20
   119c4:	98c03fcc 	andi	r3,r19,255
   119c8:	04400434 	movhi	r17,16
   119cc:	8c7fffc4 	addi	r17,r17,-1
   119d0:	180697fa 	slli	r3,r3,31
   119d4:	8460703a 	and	r16,r16,r17
   119d8:	80a0b03a 	or	r16,r16,r2
   119dc:	80c6b03a 	or	r3,r16,r3
   119e0:	b005883a 	mov	r2,r22
   119e4:	dfc01117 	ldw	ra,68(sp)
   119e8:	df001017 	ldw	fp,64(sp)
   119ec:	ddc00f17 	ldw	r23,60(sp)
   119f0:	dd800e17 	ldw	r22,56(sp)
   119f4:	dd400d17 	ldw	r21,52(sp)
   119f8:	dd000c17 	ldw	r20,48(sp)
   119fc:	dcc00b17 	ldw	r19,44(sp)
   11a00:	dc800a17 	ldw	r18,40(sp)
   11a04:	dc400917 	ldw	r17,36(sp)
   11a08:	dc000817 	ldw	r16,32(sp)
   11a0c:	dec01204 	addi	sp,sp,72
   11a10:	f800283a 	ret
   11a14:	2404b03a 	or	r2,r4,r16
   11a18:	202b883a 	mov	r21,r4
   11a1c:	10004426 	beq	r2,zero,11b30 <__muldf3+0x2ec>
   11a20:	80015126 	beq	r16,zero,11f68 <__muldf3+0x724>
   11a24:	8009883a 	mov	r4,r16
   11a28:	d9800715 	stw	r6,28(sp)
   11a2c:	d9c00215 	stw	r7,8(sp)
   11a30:	da400415 	stw	r9,16(sp)
   11a34:	001220c0 	call	1220c <__clzsi2>
   11a38:	d9800717 	ldw	r6,28(sp)
   11a3c:	d9c00217 	ldw	r7,8(sp)
   11a40:	da400417 	ldw	r9,16(sp)
   11a44:	113ffd44 	addi	r4,r2,-11
   11a48:	00c00704 	movi	r3,28
   11a4c:	19014216 	blt	r3,r4,11f58 <__muldf3+0x714>
   11a50:	00c00744 	movi	r3,29
   11a54:	15bffe04 	addi	r22,r2,-8
   11a58:	1907c83a 	sub	r3,r3,r4
   11a5c:	85a0983a 	sll	r16,r16,r22
   11a60:	a8c6d83a 	srl	r3,r21,r3
   11a64:	adac983a 	sll	r22,r21,r22
   11a68:	1c20b03a 	or	r16,r3,r16
   11a6c:	1080fcc4 	addi	r2,r2,1011
   11a70:	00a9c83a 	sub	r20,zero,r2
   11a74:	002b883a 	mov	r21,zero
   11a78:	000b883a 	mov	r5,zero
   11a7c:	003f9006 	br	118c0 <_gp+0xfffeb804>
   11a80:	3446b03a 	or	r3,r6,r17
   11a84:	1800281e 	bne	r3,zero,11b28 <__muldf3+0x2e4>
   11a88:	0023883a 	mov	r17,zero
   11a8c:	0025883a 	mov	r18,zero
   11a90:	01c00084 	movi	r7,2
   11a94:	003f9c06 	br	11908 <_gp+0xfffeb84c>
   11a98:	3446b03a 	or	r3,r6,r17
   11a9c:	18001e26 	beq	r3,zero,11b18 <__muldf3+0x2d4>
   11aa0:	88012126 	beq	r17,zero,11f28 <__muldf3+0x6e4>
   11aa4:	8809883a 	mov	r4,r17
   11aa8:	d9400215 	stw	r5,8(sp)
   11aac:	d9800715 	stw	r6,28(sp)
   11ab0:	da400415 	stw	r9,16(sp)
   11ab4:	da800315 	stw	r10,12(sp)
   11ab8:	001220c0 	call	1220c <__clzsi2>
   11abc:	d9400217 	ldw	r5,8(sp)
   11ac0:	d9800717 	ldw	r6,28(sp)
   11ac4:	da400417 	ldw	r9,16(sp)
   11ac8:	da800317 	ldw	r10,12(sp)
   11acc:	113ffd44 	addi	r4,r2,-11
   11ad0:	00c00704 	movi	r3,28
   11ad4:	19011016 	blt	r3,r4,11f18 <__muldf3+0x6d4>
   11ad8:	00c00744 	movi	r3,29
   11adc:	14bffe04 	addi	r18,r2,-8
   11ae0:	1907c83a 	sub	r3,r3,r4
   11ae4:	8ca2983a 	sll	r17,r17,r18
   11ae8:	30c6d83a 	srl	r3,r6,r3
   11aec:	34a4983a 	sll	r18,r6,r18
   11af0:	1c62b03a 	or	r17,r3,r17
   11af4:	1080fcc4 	addi	r2,r2,1011
   11af8:	0085c83a 	sub	r2,zero,r2
   11afc:	000f883a 	mov	r7,zero
   11b00:	003f8106 	br	11908 <_gp+0xfffeb84c>
   11b04:	3027883a 	mov	r19,r6
   11b08:	0081ffc4 	movi	r2,2047
   11b0c:	0021883a 	mov	r16,zero
   11b10:	002d883a 	mov	r22,zero
   11b14:	003faa06 	br	119c0 <_gp+0xfffeb904>
   11b18:	0023883a 	mov	r17,zero
   11b1c:	0025883a 	mov	r18,zero
   11b20:	01c00044 	movi	r7,1
   11b24:	003f7806 	br	11908 <_gp+0xfffeb84c>
   11b28:	01c000c4 	movi	r7,3
   11b2c:	003f7606 	br	11908 <_gp+0xfffeb84c>
   11b30:	05400104 	movi	r21,4
   11b34:	0021883a 	mov	r16,zero
   11b38:	002d883a 	mov	r22,zero
   11b3c:	01400044 	movi	r5,1
   11b40:	003f5f06 	br	118c0 <_gp+0xfffeb804>
   11b44:	05400304 	movi	r21,12
   11b48:	014000c4 	movi	r5,3
   11b4c:	003f5c06 	br	118c0 <_gp+0xfffeb804>
   11b50:	04000434 	movhi	r16,16
   11b54:	0027883a 	mov	r19,zero
   11b58:	843fffc4 	addi	r16,r16,-1
   11b5c:	05bfffc4 	movi	r22,-1
   11b60:	0081ffc4 	movi	r2,2047
   11b64:	003f9606 	br	119c0 <_gp+0xfffeb904>
   11b68:	8023883a 	mov	r17,r16
   11b6c:	b025883a 	mov	r18,r22
   11b70:	280f883a 	mov	r7,r5
   11b74:	003f8806 	br	11998 <_gp+0xfffeb8dc>
   11b78:	8023883a 	mov	r17,r16
   11b7c:	b025883a 	mov	r18,r22
   11b80:	480d883a 	mov	r6,r9
   11b84:	280f883a 	mov	r7,r5
   11b88:	003f8306 	br	11998 <_gp+0xfffeb8dc>
   11b8c:	b026d43a 	srli	r19,r22,16
   11b90:	902ed43a 	srli	r23,r18,16
   11b94:	b5bfffcc 	andi	r22,r22,65535
   11b98:	94bfffcc 	andi	r18,r18,65535
   11b9c:	b00b883a 	mov	r5,r22
   11ba0:	9009883a 	mov	r4,r18
   11ba4:	d8c00515 	stw	r3,20(sp)
   11ba8:	d9800715 	stw	r6,28(sp)
   11bac:	da000615 	stw	r8,24(sp)
   11bb0:	00122700 	call	12270 <__mulsi3>
   11bb4:	980b883a 	mov	r5,r19
   11bb8:	9009883a 	mov	r4,r18
   11bbc:	1029883a 	mov	r20,r2
   11bc0:	00122700 	call	12270 <__mulsi3>
   11bc4:	b80b883a 	mov	r5,r23
   11bc8:	9809883a 	mov	r4,r19
   11bcc:	102b883a 	mov	r21,r2
   11bd0:	00122700 	call	12270 <__mulsi3>
   11bd4:	b809883a 	mov	r4,r23
   11bd8:	b00b883a 	mov	r5,r22
   11bdc:	1039883a 	mov	fp,r2
   11be0:	00122700 	call	12270 <__mulsi3>
   11be4:	a008d43a 	srli	r4,r20,16
   11be8:	1545883a 	add	r2,r2,r21
   11bec:	d8c00517 	ldw	r3,20(sp)
   11bf0:	2085883a 	add	r2,r4,r2
   11bf4:	d9800717 	ldw	r6,28(sp)
   11bf8:	da000617 	ldw	r8,24(sp)
   11bfc:	1540022e 	bgeu	r2,r21,11c08 <__muldf3+0x3c4>
   11c00:	01000074 	movhi	r4,1
   11c04:	e139883a 	add	fp,fp,r4
   11c08:	100e943a 	slli	r7,r2,16
   11c0c:	1004d43a 	srli	r2,r2,16
   11c10:	882ad43a 	srli	r21,r17,16
   11c14:	a53fffcc 	andi	r20,r20,65535
   11c18:	8c7fffcc 	andi	r17,r17,65535
   11c1c:	3d29883a 	add	r20,r7,r20
   11c20:	b00b883a 	mov	r5,r22
   11c24:	8809883a 	mov	r4,r17
   11c28:	d8c00515 	stw	r3,20(sp)
   11c2c:	d9800715 	stw	r6,28(sp)
   11c30:	da000615 	stw	r8,24(sp)
   11c34:	dd000115 	stw	r20,4(sp)
   11c38:	d8800015 	stw	r2,0(sp)
   11c3c:	00122700 	call	12270 <__mulsi3>
   11c40:	980b883a 	mov	r5,r19
   11c44:	8809883a 	mov	r4,r17
   11c48:	d8800215 	stw	r2,8(sp)
   11c4c:	00122700 	call	12270 <__mulsi3>
   11c50:	9809883a 	mov	r4,r19
   11c54:	a80b883a 	mov	r5,r21
   11c58:	1029883a 	mov	r20,r2
   11c5c:	00122700 	call	12270 <__mulsi3>
   11c60:	b00b883a 	mov	r5,r22
   11c64:	a809883a 	mov	r4,r21
   11c68:	d8800415 	stw	r2,16(sp)
   11c6c:	00122700 	call	12270 <__mulsi3>
   11c70:	d9c00217 	ldw	r7,8(sp)
   11c74:	1505883a 	add	r2,r2,r20
   11c78:	d8c00517 	ldw	r3,20(sp)
   11c7c:	3826d43a 	srli	r19,r7,16
   11c80:	d9800717 	ldw	r6,28(sp)
   11c84:	da000617 	ldw	r8,24(sp)
   11c88:	9885883a 	add	r2,r19,r2
   11c8c:	da400417 	ldw	r9,16(sp)
   11c90:	1500022e 	bgeu	r2,r20,11c9c <__muldf3+0x458>
   11c94:	01000074 	movhi	r4,1
   11c98:	4913883a 	add	r9,r9,r4
   11c9c:	1028d43a 	srli	r20,r2,16
   11ca0:	1004943a 	slli	r2,r2,16
   11ca4:	802cd43a 	srli	r22,r16,16
   11ca8:	843fffcc 	andi	r16,r16,65535
   11cac:	3cffffcc 	andi	r19,r7,65535
   11cb0:	9009883a 	mov	r4,r18
   11cb4:	800b883a 	mov	r5,r16
   11cb8:	a269883a 	add	r20,r20,r9
   11cbc:	d8c00515 	stw	r3,20(sp)
   11cc0:	d9800715 	stw	r6,28(sp)
   11cc4:	da000615 	stw	r8,24(sp)
   11cc8:	14e7883a 	add	r19,r2,r19
   11ccc:	00122700 	call	12270 <__mulsi3>
   11cd0:	9009883a 	mov	r4,r18
   11cd4:	b00b883a 	mov	r5,r22
   11cd8:	d8800315 	stw	r2,12(sp)
   11cdc:	00122700 	call	12270 <__mulsi3>
   11ce0:	b809883a 	mov	r4,r23
   11ce4:	b00b883a 	mov	r5,r22
   11ce8:	d8800215 	stw	r2,8(sp)
   11cec:	00122700 	call	12270 <__mulsi3>
   11cf0:	b80b883a 	mov	r5,r23
   11cf4:	8009883a 	mov	r4,r16
   11cf8:	d8800415 	stw	r2,16(sp)
   11cfc:	00122700 	call	12270 <__mulsi3>
   11d00:	da800317 	ldw	r10,12(sp)
   11d04:	d9c00217 	ldw	r7,8(sp)
   11d08:	d9000017 	ldw	r4,0(sp)
   11d0c:	502ed43a 	srli	r23,r10,16
   11d10:	11c5883a 	add	r2,r2,r7
   11d14:	24e5883a 	add	r18,r4,r19
   11d18:	b885883a 	add	r2,r23,r2
   11d1c:	d8c00517 	ldw	r3,20(sp)
   11d20:	d9800717 	ldw	r6,28(sp)
   11d24:	da000617 	ldw	r8,24(sp)
   11d28:	da400417 	ldw	r9,16(sp)
   11d2c:	11c0022e 	bgeu	r2,r7,11d38 <__muldf3+0x4f4>
   11d30:	01000074 	movhi	r4,1
   11d34:	4913883a 	add	r9,r9,r4
   11d38:	100ed43a 	srli	r7,r2,16
   11d3c:	1004943a 	slli	r2,r2,16
   11d40:	55ffffcc 	andi	r23,r10,65535
   11d44:	3a53883a 	add	r9,r7,r9
   11d48:	8809883a 	mov	r4,r17
   11d4c:	800b883a 	mov	r5,r16
   11d50:	d8c00515 	stw	r3,20(sp)
   11d54:	d9800715 	stw	r6,28(sp)
   11d58:	da000615 	stw	r8,24(sp)
   11d5c:	da400415 	stw	r9,16(sp)
   11d60:	15ef883a 	add	r23,r2,r23
   11d64:	00122700 	call	12270 <__mulsi3>
   11d68:	8809883a 	mov	r4,r17
   11d6c:	b00b883a 	mov	r5,r22
   11d70:	d8800215 	stw	r2,8(sp)
   11d74:	00122700 	call	12270 <__mulsi3>
   11d78:	b00b883a 	mov	r5,r22
   11d7c:	a809883a 	mov	r4,r21
   11d80:	d8800315 	stw	r2,12(sp)
   11d84:	00122700 	call	12270 <__mulsi3>
   11d88:	8009883a 	mov	r4,r16
   11d8c:	a80b883a 	mov	r5,r21
   11d90:	1023883a 	mov	r17,r2
   11d94:	00122700 	call	12270 <__mulsi3>
   11d98:	d9c00217 	ldw	r7,8(sp)
   11d9c:	da800317 	ldw	r10,12(sp)
   11da0:	d8c00517 	ldw	r3,20(sp)
   11da4:	3808d43a 	srli	r4,r7,16
   11da8:	1285883a 	add	r2,r2,r10
   11dac:	d9800717 	ldw	r6,28(sp)
   11db0:	2085883a 	add	r2,r4,r2
   11db4:	da000617 	ldw	r8,24(sp)
   11db8:	da400417 	ldw	r9,16(sp)
   11dbc:	1280022e 	bgeu	r2,r10,11dc8 <__muldf3+0x584>
   11dc0:	01000074 	movhi	r4,1
   11dc4:	8923883a 	add	r17,r17,r4
   11dc8:	1008943a 	slli	r4,r2,16
   11dcc:	39ffffcc 	andi	r7,r7,65535
   11dd0:	e4b9883a 	add	fp,fp,r18
   11dd4:	21cf883a 	add	r7,r4,r7
   11dd8:	e4e7803a 	cmpltu	r19,fp,r19
   11ddc:	3d0f883a 	add	r7,r7,r20
   11de0:	bf39883a 	add	fp,r23,fp
   11de4:	99c9883a 	add	r4,r19,r7
   11de8:	e5ef803a 	cmpltu	r23,fp,r23
   11dec:	490b883a 	add	r5,r9,r4
   11df0:	1004d43a 	srli	r2,r2,16
   11df4:	b965883a 	add	r18,r23,r5
   11df8:	24c9803a 	cmpltu	r4,r4,r19
   11dfc:	3d29803a 	cmpltu	r20,r7,r20
   11e00:	a128b03a 	or	r20,r20,r4
   11e04:	95ef803a 	cmpltu	r23,r18,r23
   11e08:	2a53803a 	cmpltu	r9,r5,r9
   11e0c:	a0a9883a 	add	r20,r20,r2
   11e10:	4deeb03a 	or	r23,r9,r23
   11e14:	a5ef883a 	add	r23,r20,r23
   11e18:	bc63883a 	add	r17,r23,r17
   11e1c:	e004927a 	slli	r2,fp,9
   11e20:	d9000117 	ldw	r4,4(sp)
   11e24:	882e927a 	slli	r23,r17,9
   11e28:	9022d5fa 	srli	r17,r18,23
   11e2c:	e038d5fa 	srli	fp,fp,23
   11e30:	1104b03a 	or	r2,r2,r4
   11e34:	9024927a 	slli	r18,r18,9
   11e38:	1004c03a 	cmpne	r2,r2,zero
   11e3c:	bc62b03a 	or	r17,r23,r17
   11e40:	1738b03a 	or	fp,r2,fp
   11e44:	8880402c 	andhi	r2,r17,256
   11e48:	e4a4b03a 	or	r18,fp,r18
   11e4c:	10000726 	beq	r2,zero,11e6c <__muldf3+0x628>
   11e50:	9006d07a 	srli	r3,r18,1
   11e54:	880497fa 	slli	r2,r17,31
   11e58:	9480004c 	andi	r18,r18,1
   11e5c:	8822d07a 	srli	r17,r17,1
   11e60:	1ca4b03a 	or	r18,r3,r18
   11e64:	14a4b03a 	or	r18,r2,r18
   11e68:	4007883a 	mov	r3,r8
   11e6c:	1880ffc4 	addi	r2,r3,1023
   11e70:	0080460e 	bge	zero,r2,11f8c <__muldf3+0x748>
   11e74:	910001cc 	andi	r4,r18,7
   11e78:	20000726 	beq	r4,zero,11e98 <__muldf3+0x654>
   11e7c:	910003cc 	andi	r4,r18,15
   11e80:	01400104 	movi	r5,4
   11e84:	21400426 	beq	r4,r5,11e98 <__muldf3+0x654>
   11e88:	9149883a 	add	r4,r18,r5
   11e8c:	24a5803a 	cmpltu	r18,r4,r18
   11e90:	8ca3883a 	add	r17,r17,r18
   11e94:	2025883a 	mov	r18,r4
   11e98:	8900402c 	andhi	r4,r17,256
   11e9c:	20000426 	beq	r4,zero,11eb0 <__muldf3+0x66c>
   11ea0:	18810004 	addi	r2,r3,1024
   11ea4:	00ffc034 	movhi	r3,65280
   11ea8:	18ffffc4 	addi	r3,r3,-1
   11eac:	88e2703a 	and	r17,r17,r3
   11eb0:	00c1ff84 	movi	r3,2046
   11eb4:	18bf1316 	blt	r3,r2,11b04 <_gp+0xfffeba48>
   11eb8:	882c977a 	slli	r22,r17,29
   11ebc:	9024d0fa 	srli	r18,r18,3
   11ec0:	8822927a 	slli	r17,r17,9
   11ec4:	1081ffcc 	andi	r2,r2,2047
   11ec8:	b4acb03a 	or	r22,r22,r18
   11ecc:	8820d33a 	srli	r16,r17,12
   11ed0:	3027883a 	mov	r19,r6
   11ed4:	003eba06 	br	119c0 <_gp+0xfffeb904>
   11ed8:	8080022c 	andhi	r2,r16,8
   11edc:	10000926 	beq	r2,zero,11f04 <__muldf3+0x6c0>
   11ee0:	8880022c 	andhi	r2,r17,8
   11ee4:	1000071e 	bne	r2,zero,11f04 <__muldf3+0x6c0>
   11ee8:	00800434 	movhi	r2,16
   11eec:	8c000234 	orhi	r16,r17,8
   11ef0:	10bfffc4 	addi	r2,r2,-1
   11ef4:	e027883a 	mov	r19,fp
   11ef8:	80a0703a 	and	r16,r16,r2
   11efc:	902d883a 	mov	r22,r18
   11f00:	003f1706 	br	11b60 <_gp+0xfffebaa4>
   11f04:	00800434 	movhi	r2,16
   11f08:	84000234 	orhi	r16,r16,8
   11f0c:	10bfffc4 	addi	r2,r2,-1
   11f10:	80a0703a 	and	r16,r16,r2
   11f14:	003f1206 	br	11b60 <_gp+0xfffebaa4>
   11f18:	147ff604 	addi	r17,r2,-40
   11f1c:	3462983a 	sll	r17,r6,r17
   11f20:	0025883a 	mov	r18,zero
   11f24:	003ef306 	br	11af4 <_gp+0xfffeba38>
   11f28:	3009883a 	mov	r4,r6
   11f2c:	d9400215 	stw	r5,8(sp)
   11f30:	d9800715 	stw	r6,28(sp)
   11f34:	da400415 	stw	r9,16(sp)
   11f38:	da800315 	stw	r10,12(sp)
   11f3c:	001220c0 	call	1220c <__clzsi2>
   11f40:	10800804 	addi	r2,r2,32
   11f44:	da800317 	ldw	r10,12(sp)
   11f48:	da400417 	ldw	r9,16(sp)
   11f4c:	d9800717 	ldw	r6,28(sp)
   11f50:	d9400217 	ldw	r5,8(sp)
   11f54:	003edd06 	br	11acc <_gp+0xfffeba10>
   11f58:	143ff604 	addi	r16,r2,-40
   11f5c:	ac20983a 	sll	r16,r21,r16
   11f60:	002d883a 	mov	r22,zero
   11f64:	003ec106 	br	11a6c <_gp+0xfffeb9b0>
   11f68:	d9800715 	stw	r6,28(sp)
   11f6c:	d9c00215 	stw	r7,8(sp)
   11f70:	da400415 	stw	r9,16(sp)
   11f74:	001220c0 	call	1220c <__clzsi2>
   11f78:	10800804 	addi	r2,r2,32
   11f7c:	da400417 	ldw	r9,16(sp)
   11f80:	d9c00217 	ldw	r7,8(sp)
   11f84:	d9800717 	ldw	r6,28(sp)
   11f88:	003eae06 	br	11a44 <_gp+0xfffeb988>
   11f8c:	00c00044 	movi	r3,1
   11f90:	1887c83a 	sub	r3,r3,r2
   11f94:	01000e04 	movi	r4,56
   11f98:	20fe8516 	blt	r4,r3,119b0 <_gp+0xfffeb8f4>
   11f9c:	010007c4 	movi	r4,31
   11fa0:	20c01b16 	blt	r4,r3,12010 <__muldf3+0x7cc>
   11fa4:	00800804 	movi	r2,32
   11fa8:	10c5c83a 	sub	r2,r2,r3
   11fac:	888a983a 	sll	r5,r17,r2
   11fb0:	90c8d83a 	srl	r4,r18,r3
   11fb4:	9084983a 	sll	r2,r18,r2
   11fb8:	88e2d83a 	srl	r17,r17,r3
   11fbc:	2906b03a 	or	r3,r5,r4
   11fc0:	1004c03a 	cmpne	r2,r2,zero
   11fc4:	1886b03a 	or	r3,r3,r2
   11fc8:	188001cc 	andi	r2,r3,7
   11fcc:	10000726 	beq	r2,zero,11fec <__muldf3+0x7a8>
   11fd0:	188003cc 	andi	r2,r3,15
   11fd4:	01000104 	movi	r4,4
   11fd8:	11000426 	beq	r2,r4,11fec <__muldf3+0x7a8>
   11fdc:	1805883a 	mov	r2,r3
   11fe0:	10c00104 	addi	r3,r2,4
   11fe4:	1885803a 	cmpltu	r2,r3,r2
   11fe8:	88a3883a 	add	r17,r17,r2
   11fec:	8880202c 	andhi	r2,r17,128
   11ff0:	10001c26 	beq	r2,zero,12064 <__muldf3+0x820>
   11ff4:	3027883a 	mov	r19,r6
   11ff8:	00800044 	movi	r2,1
   11ffc:	0021883a 	mov	r16,zero
   12000:	002d883a 	mov	r22,zero
   12004:	003e6e06 	br	119c0 <_gp+0xfffeb904>
   12008:	4007883a 	mov	r3,r8
   1200c:	003f9706 	br	11e6c <_gp+0xfffebdb0>
   12010:	017ff844 	movi	r5,-31
   12014:	2885c83a 	sub	r2,r5,r2
   12018:	888ad83a 	srl	r5,r17,r2
   1201c:	00800804 	movi	r2,32
   12020:	18801a26 	beq	r3,r2,1208c <__muldf3+0x848>
   12024:	01001004 	movi	r4,64
   12028:	20c7c83a 	sub	r3,r4,r3
   1202c:	88e2983a 	sll	r17,r17,r3
   12030:	8ca4b03a 	or	r18,r17,r18
   12034:	9004c03a 	cmpne	r2,r18,zero
   12038:	2884b03a 	or	r2,r5,r2
   1203c:	144001cc 	andi	r17,r2,7
   12040:	88000d1e 	bne	r17,zero,12078 <__muldf3+0x834>
   12044:	0021883a 	mov	r16,zero
   12048:	102cd0fa 	srli	r22,r2,3
   1204c:	3027883a 	mov	r19,r6
   12050:	0005883a 	mov	r2,zero
   12054:	b46cb03a 	or	r22,r22,r17
   12058:	003e5906 	br	119c0 <_gp+0xfffeb904>
   1205c:	1007883a 	mov	r3,r2
   12060:	0023883a 	mov	r17,zero
   12064:	8820927a 	slli	r16,r17,9
   12068:	1805883a 	mov	r2,r3
   1206c:	8822977a 	slli	r17,r17,29
   12070:	8020d33a 	srli	r16,r16,12
   12074:	003ff406 	br	12048 <_gp+0xfffebf8c>
   12078:	10c003cc 	andi	r3,r2,15
   1207c:	01000104 	movi	r4,4
   12080:	193ff626 	beq	r3,r4,1205c <_gp+0xfffebfa0>
   12084:	0023883a 	mov	r17,zero
   12088:	003fd506 	br	11fe0 <_gp+0xfffebf24>
   1208c:	0023883a 	mov	r17,zero
   12090:	003fe706 	br	12030 <_gp+0xfffebf74>
   12094:	00800434 	movhi	r2,16
   12098:	8c000234 	orhi	r16,r17,8
   1209c:	10bfffc4 	addi	r2,r2,-1
   120a0:	3027883a 	mov	r19,r6
   120a4:	80a0703a 	and	r16,r16,r2
   120a8:	902d883a 	mov	r22,r18
   120ac:	003eac06 	br	11b60 <_gp+0xfffebaa4>

000120b0 <__fixdfsi>:
   120b0:	280cd53a 	srli	r6,r5,20
   120b4:	00c00434 	movhi	r3,16
   120b8:	18ffffc4 	addi	r3,r3,-1
   120bc:	3181ffcc 	andi	r6,r6,2047
   120c0:	01c0ff84 	movi	r7,1022
   120c4:	28c6703a 	and	r3,r5,r3
   120c8:	280ad7fa 	srli	r5,r5,31
   120cc:	3980120e 	bge	r7,r6,12118 <__fixdfsi+0x68>
   120d0:	00810744 	movi	r2,1053
   120d4:	11800c16 	blt	r2,r6,12108 <__fixdfsi+0x58>
   120d8:	00810cc4 	movi	r2,1075
   120dc:	1185c83a 	sub	r2,r2,r6
   120e0:	01c007c4 	movi	r7,31
   120e4:	18c00434 	orhi	r3,r3,16
   120e8:	38800d16 	blt	r7,r2,12120 <__fixdfsi+0x70>
   120ec:	31befb44 	addi	r6,r6,-1043
   120f0:	2084d83a 	srl	r2,r4,r2
   120f4:	1986983a 	sll	r3,r3,r6
   120f8:	1884b03a 	or	r2,r3,r2
   120fc:	28000726 	beq	r5,zero,1211c <__fixdfsi+0x6c>
   12100:	0085c83a 	sub	r2,zero,r2
   12104:	f800283a 	ret
   12108:	00a00034 	movhi	r2,32768
   1210c:	10bfffc4 	addi	r2,r2,-1
   12110:	2885883a 	add	r2,r5,r2
   12114:	f800283a 	ret
   12118:	0005883a 	mov	r2,zero
   1211c:	f800283a 	ret
   12120:	008104c4 	movi	r2,1043
   12124:	1185c83a 	sub	r2,r2,r6
   12128:	1884d83a 	srl	r2,r3,r2
   1212c:	003ff306 	br	120fc <_gp+0xfffec040>

00012130 <__floatsidf>:
   12130:	defffd04 	addi	sp,sp,-12
   12134:	dfc00215 	stw	ra,8(sp)
   12138:	dc400115 	stw	r17,4(sp)
   1213c:	dc000015 	stw	r16,0(sp)
   12140:	20002b26 	beq	r4,zero,121f0 <__floatsidf+0xc0>
   12144:	2023883a 	mov	r17,r4
   12148:	2020d7fa 	srli	r16,r4,31
   1214c:	20002d16 	blt	r4,zero,12204 <__floatsidf+0xd4>
   12150:	8809883a 	mov	r4,r17
   12154:	001220c0 	call	1220c <__clzsi2>
   12158:	01410784 	movi	r5,1054
   1215c:	288bc83a 	sub	r5,r5,r2
   12160:	01010cc4 	movi	r4,1075
   12164:	2149c83a 	sub	r4,r4,r5
   12168:	00c007c4 	movi	r3,31
   1216c:	1900160e 	bge	r3,r4,121c8 <__floatsidf+0x98>
   12170:	00c104c4 	movi	r3,1043
   12174:	1947c83a 	sub	r3,r3,r5
   12178:	88c6983a 	sll	r3,r17,r3
   1217c:	00800434 	movhi	r2,16
   12180:	10bfffc4 	addi	r2,r2,-1
   12184:	1886703a 	and	r3,r3,r2
   12188:	2941ffcc 	andi	r5,r5,2047
   1218c:	800d883a 	mov	r6,r16
   12190:	0005883a 	mov	r2,zero
   12194:	280a953a 	slli	r5,r5,20
   12198:	31803fcc 	andi	r6,r6,255
   1219c:	01000434 	movhi	r4,16
   121a0:	300c97fa 	slli	r6,r6,31
   121a4:	213fffc4 	addi	r4,r4,-1
   121a8:	1906703a 	and	r3,r3,r4
   121ac:	1946b03a 	or	r3,r3,r5
   121b0:	1986b03a 	or	r3,r3,r6
   121b4:	dfc00217 	ldw	ra,8(sp)
   121b8:	dc400117 	ldw	r17,4(sp)
   121bc:	dc000017 	ldw	r16,0(sp)
   121c0:	dec00304 	addi	sp,sp,12
   121c4:	f800283a 	ret
   121c8:	00c002c4 	movi	r3,11
   121cc:	1887c83a 	sub	r3,r3,r2
   121d0:	88c6d83a 	srl	r3,r17,r3
   121d4:	8904983a 	sll	r2,r17,r4
   121d8:	01000434 	movhi	r4,16
   121dc:	213fffc4 	addi	r4,r4,-1
   121e0:	2941ffcc 	andi	r5,r5,2047
   121e4:	1906703a 	and	r3,r3,r4
   121e8:	800d883a 	mov	r6,r16
   121ec:	003fe906 	br	12194 <_gp+0xfffec0d8>
   121f0:	000d883a 	mov	r6,zero
   121f4:	000b883a 	mov	r5,zero
   121f8:	0007883a 	mov	r3,zero
   121fc:	0005883a 	mov	r2,zero
   12200:	003fe406 	br	12194 <_gp+0xfffec0d8>
   12204:	0123c83a 	sub	r17,zero,r4
   12208:	003fd106 	br	12150 <_gp+0xfffec094>

0001220c <__clzsi2>:
   1220c:	00bfffd4 	movui	r2,65535
   12210:	11000536 	bltu	r2,r4,12228 <__clzsi2+0x1c>
   12214:	00803fc4 	movi	r2,255
   12218:	11000f36 	bltu	r2,r4,12258 <__clzsi2+0x4c>
   1221c:	00800804 	movi	r2,32
   12220:	0007883a 	mov	r3,zero
   12224:	00000506 	br	1223c <__clzsi2+0x30>
   12228:	00804034 	movhi	r2,256
   1222c:	10bfffc4 	addi	r2,r2,-1
   12230:	11000c2e 	bgeu	r2,r4,12264 <__clzsi2+0x58>
   12234:	00800204 	movi	r2,8
   12238:	00c00604 	movi	r3,24
   1223c:	20c8d83a 	srl	r4,r4,r3
   12240:	00c000b4 	movhi	r3,2
   12244:	18f53004 	addi	r3,r3,-11072
   12248:	1909883a 	add	r4,r3,r4
   1224c:	20c00003 	ldbu	r3,0(r4)
   12250:	10c5c83a 	sub	r2,r2,r3
   12254:	f800283a 	ret
   12258:	00800604 	movi	r2,24
   1225c:	00c00204 	movi	r3,8
   12260:	003ff606 	br	1223c <_gp+0xfffec180>
   12264:	00800404 	movi	r2,16
   12268:	1007883a 	mov	r3,r2
   1226c:	003ff306 	br	1223c <_gp+0xfffec180>

00012270 <__mulsi3>:
   12270:	0005883a 	mov	r2,zero
   12274:	20000726 	beq	r4,zero,12294 <__mulsi3+0x24>
   12278:	20c0004c 	andi	r3,r4,1
   1227c:	2008d07a 	srli	r4,r4,1
   12280:	18000126 	beq	r3,zero,12288 <__mulsi3+0x18>
   12284:	1145883a 	add	r2,r2,r5
   12288:	294b883a 	add	r5,r5,r5
   1228c:	203ffa1e 	bne	r4,zero,12278 <_gp+0xfffec1bc>
   12290:	f800283a 	ret
   12294:	f800283a 	ret

00012298 <_asprintf_r>:
   12298:	deffe304 	addi	sp,sp,-116
   1229c:	dc001a15 	stw	r16,104(sp)
   122a0:	2821883a 	mov	r16,r5
   122a4:	dfc01b15 	stw	ra,108(sp)
   122a8:	d9c01c15 	stw	r7,112(sp)
   122ac:	0080a204 	movi	r2,648
   122b0:	d880030d 	sth	r2,12(sp)
   122b4:	d9c01c04 	addi	r7,sp,112
   122b8:	00bfffc4 	movi	r2,-1
   122bc:	d80b883a 	mov	r5,sp
   122c0:	d8000015 	stw	zero,0(sp)
   122c4:	d8000415 	stw	zero,16(sp)
   122c8:	d8000215 	stw	zero,8(sp)
   122cc:	d8000515 	stw	zero,20(sp)
   122d0:	d880038d 	sth	r2,14(sp)
   122d4:	00138400 	call	13840 <___svfprintf_internal_r>
   122d8:	10000416 	blt	r2,zero,122ec <_asprintf_r+0x54>
   122dc:	d8c00017 	ldw	r3,0(sp)
   122e0:	18000005 	stb	zero,0(r3)
   122e4:	d8c00417 	ldw	r3,16(sp)
   122e8:	80c00015 	stw	r3,0(r16)
   122ec:	dfc01b17 	ldw	ra,108(sp)
   122f0:	dc001a17 	ldw	r16,104(sp)
   122f4:	dec01d04 	addi	sp,sp,116
   122f8:	f800283a 	ret

000122fc <asprintf>:
   122fc:	deffe204 	addi	sp,sp,-120
   12300:	dc001a15 	stw	r16,104(sp)
   12304:	2021883a 	mov	r16,r4
   12308:	dfc01b15 	stw	ra,108(sp)
   1230c:	d9801c15 	stw	r6,112(sp)
   12310:	d9c01d15 	stw	r7,116(sp)
   12314:	008000b4 	movhi	r2,2
   12318:	10b83204 	addi	r2,r2,-7992
   1231c:	11000017 	ldw	r4,0(r2)
   12320:	0080a204 	movi	r2,648
   12324:	280d883a 	mov	r6,r5
   12328:	d880030d 	sth	r2,12(sp)
   1232c:	d9c01c04 	addi	r7,sp,112
   12330:	00bfffc4 	movi	r2,-1
   12334:	d80b883a 	mov	r5,sp
   12338:	d8000015 	stw	zero,0(sp)
   1233c:	d8000415 	stw	zero,16(sp)
   12340:	d8000215 	stw	zero,8(sp)
   12344:	d8000515 	stw	zero,20(sp)
   12348:	d880038d 	sth	r2,14(sp)
   1234c:	00138400 	call	13840 <___svfprintf_internal_r>
   12350:	10000416 	blt	r2,zero,12364 <asprintf+0x68>
   12354:	d8c00017 	ldw	r3,0(sp)
   12358:	18000005 	stb	zero,0(r3)
   1235c:	d8c00417 	ldw	r3,16(sp)
   12360:	80c00015 	stw	r3,0(r16)
   12364:	dfc01b17 	ldw	ra,108(sp)
   12368:	dc001a17 	ldw	r16,104(sp)
   1236c:	dec01e04 	addi	sp,sp,120
   12370:	f800283a 	ret

00012374 <malloc>:
   12374:	008000b4 	movhi	r2,2
   12378:	10b83204 	addi	r2,r2,-7992
   1237c:	200b883a 	mov	r5,r4
   12380:	11000017 	ldw	r4,0(r2)
   12384:	001239c1 	jmpi	1239c <_malloc_r>

00012388 <free>:
   12388:	008000b4 	movhi	r2,2
   1238c:	10b83204 	addi	r2,r2,-7992
   12390:	200b883a 	mov	r5,r4
   12394:	11000017 	ldw	r4,0(r2)
   12398:	00174d01 	jmpi	174d0 <_free_r>

0001239c <_malloc_r>:
   1239c:	defff504 	addi	sp,sp,-44
   123a0:	dc800315 	stw	r18,12(sp)
   123a4:	dfc00a15 	stw	ra,40(sp)
   123a8:	df000915 	stw	fp,36(sp)
   123ac:	ddc00815 	stw	r23,32(sp)
   123b0:	dd800715 	stw	r22,28(sp)
   123b4:	dd400615 	stw	r21,24(sp)
   123b8:	dd000515 	stw	r20,20(sp)
   123bc:	dcc00415 	stw	r19,16(sp)
   123c0:	dc400215 	stw	r17,8(sp)
   123c4:	dc000115 	stw	r16,4(sp)
   123c8:	288002c4 	addi	r2,r5,11
   123cc:	00c00584 	movi	r3,22
   123d0:	2025883a 	mov	r18,r4
   123d4:	18807f2e 	bgeu	r3,r2,125d4 <_malloc_r+0x238>
   123d8:	047ffe04 	movi	r17,-8
   123dc:	1462703a 	and	r17,r2,r17
   123e0:	8800a316 	blt	r17,zero,12670 <_malloc_r+0x2d4>
   123e4:	8940a236 	bltu	r17,r5,12670 <_malloc_r+0x2d4>
   123e8:	001ce800 	call	1ce80 <__malloc_lock>
   123ec:	00807dc4 	movi	r2,503
   123f0:	1441e92e 	bgeu	r2,r17,12b98 <_malloc_r+0x7fc>
   123f4:	8804d27a 	srli	r2,r17,9
   123f8:	1000a126 	beq	r2,zero,12680 <_malloc_r+0x2e4>
   123fc:	00c00104 	movi	r3,4
   12400:	18811e36 	bltu	r3,r2,1287c <_malloc_r+0x4e0>
   12404:	8804d1ba 	srli	r2,r17,6
   12408:	12000e44 	addi	r8,r2,57
   1240c:	11c00e04 	addi	r7,r2,56
   12410:	4209883a 	add	r4,r8,r8
   12414:	04c000b4 	movhi	r19,2
   12418:	2109883a 	add	r4,r4,r4
   1241c:	9cf6ee04 	addi	r19,r19,-9288
   12420:	2109883a 	add	r4,r4,r4
   12424:	9909883a 	add	r4,r19,r4
   12428:	24000117 	ldw	r16,4(r4)
   1242c:	213ffe04 	addi	r4,r4,-8
   12430:	24009726 	beq	r4,r16,12690 <_malloc_r+0x2f4>
   12434:	80800117 	ldw	r2,4(r16)
   12438:	01bfff04 	movi	r6,-4
   1243c:	014003c4 	movi	r5,15
   12440:	1184703a 	and	r2,r2,r6
   12444:	1447c83a 	sub	r3,r2,r17
   12448:	28c00716 	blt	r5,r3,12468 <_malloc_r+0xcc>
   1244c:	1800920e 	bge	r3,zero,12698 <_malloc_r+0x2fc>
   12450:	84000317 	ldw	r16,12(r16)
   12454:	24008e26 	beq	r4,r16,12690 <_malloc_r+0x2f4>
   12458:	80800117 	ldw	r2,4(r16)
   1245c:	1184703a 	and	r2,r2,r6
   12460:	1447c83a 	sub	r3,r2,r17
   12464:	28fff90e 	bge	r5,r3,1244c <_gp+0xfffec390>
   12468:	3809883a 	mov	r4,r7
   1246c:	018000b4 	movhi	r6,2
   12470:	9c000417 	ldw	r16,16(r19)
   12474:	31b6ee04 	addi	r6,r6,-9288
   12478:	32000204 	addi	r8,r6,8
   1247c:	82013426 	beq	r16,r8,12950 <_malloc_r+0x5b4>
   12480:	80c00117 	ldw	r3,4(r16)
   12484:	00bfff04 	movi	r2,-4
   12488:	188e703a 	and	r7,r3,r2
   1248c:	3c45c83a 	sub	r2,r7,r17
   12490:	00c003c4 	movi	r3,15
   12494:	18811f16 	blt	r3,r2,12914 <_malloc_r+0x578>
   12498:	32000515 	stw	r8,20(r6)
   1249c:	32000415 	stw	r8,16(r6)
   124a0:	10007f0e 	bge	r2,zero,126a0 <_malloc_r+0x304>
   124a4:	00807fc4 	movi	r2,511
   124a8:	11c0fd36 	bltu	r2,r7,128a0 <_malloc_r+0x504>
   124ac:	3806d0fa 	srli	r3,r7,3
   124b0:	01c00044 	movi	r7,1
   124b4:	30800117 	ldw	r2,4(r6)
   124b8:	19400044 	addi	r5,r3,1
   124bc:	294b883a 	add	r5,r5,r5
   124c0:	1807d0ba 	srai	r3,r3,2
   124c4:	294b883a 	add	r5,r5,r5
   124c8:	294b883a 	add	r5,r5,r5
   124cc:	298b883a 	add	r5,r5,r6
   124d0:	38c6983a 	sll	r3,r7,r3
   124d4:	29c00017 	ldw	r7,0(r5)
   124d8:	2a7ffe04 	addi	r9,r5,-8
   124dc:	1886b03a 	or	r3,r3,r2
   124e0:	82400315 	stw	r9,12(r16)
   124e4:	81c00215 	stw	r7,8(r16)
   124e8:	30c00115 	stw	r3,4(r6)
   124ec:	2c000015 	stw	r16,0(r5)
   124f0:	3c000315 	stw	r16,12(r7)
   124f4:	2005d0ba 	srai	r2,r4,2
   124f8:	01400044 	movi	r5,1
   124fc:	288a983a 	sll	r5,r5,r2
   12500:	19406f36 	bltu	r3,r5,126c0 <_malloc_r+0x324>
   12504:	28c4703a 	and	r2,r5,r3
   12508:	10000a1e 	bne	r2,zero,12534 <_malloc_r+0x198>
   1250c:	00bfff04 	movi	r2,-4
   12510:	294b883a 	add	r5,r5,r5
   12514:	2088703a 	and	r4,r4,r2
   12518:	28c4703a 	and	r2,r5,r3
   1251c:	21000104 	addi	r4,r4,4
   12520:	1000041e 	bne	r2,zero,12534 <_malloc_r+0x198>
   12524:	294b883a 	add	r5,r5,r5
   12528:	28c4703a 	and	r2,r5,r3
   1252c:	21000104 	addi	r4,r4,4
   12530:	103ffc26 	beq	r2,zero,12524 <_gp+0xfffec468>
   12534:	02bfff04 	movi	r10,-4
   12538:	024003c4 	movi	r9,15
   1253c:	21800044 	addi	r6,r4,1
   12540:	318d883a 	add	r6,r6,r6
   12544:	318d883a 	add	r6,r6,r6
   12548:	318d883a 	add	r6,r6,r6
   1254c:	998d883a 	add	r6,r19,r6
   12550:	333ffe04 	addi	r12,r6,-8
   12554:	2017883a 	mov	r11,r4
   12558:	31800104 	addi	r6,r6,4
   1255c:	34000017 	ldw	r16,0(r6)
   12560:	31fffd04 	addi	r7,r6,-12
   12564:	81c0041e 	bne	r16,r7,12578 <_malloc_r+0x1dc>
   12568:	0000fb06 	br	12958 <_malloc_r+0x5bc>
   1256c:	1801030e 	bge	r3,zero,1297c <_malloc_r+0x5e0>
   12570:	84000317 	ldw	r16,12(r16)
   12574:	81c0f826 	beq	r16,r7,12958 <_malloc_r+0x5bc>
   12578:	80800117 	ldw	r2,4(r16)
   1257c:	1284703a 	and	r2,r2,r10
   12580:	1447c83a 	sub	r3,r2,r17
   12584:	48fff90e 	bge	r9,r3,1256c <_gp+0xfffec4b0>
   12588:	80800317 	ldw	r2,12(r16)
   1258c:	81000217 	ldw	r4,8(r16)
   12590:	89400054 	ori	r5,r17,1
   12594:	81400115 	stw	r5,4(r16)
   12598:	20800315 	stw	r2,12(r4)
   1259c:	11000215 	stw	r4,8(r2)
   125a0:	8463883a 	add	r17,r16,r17
   125a4:	9c400515 	stw	r17,20(r19)
   125a8:	9c400415 	stw	r17,16(r19)
   125ac:	18800054 	ori	r2,r3,1
   125b0:	88800115 	stw	r2,4(r17)
   125b4:	8a000315 	stw	r8,12(r17)
   125b8:	8a000215 	stw	r8,8(r17)
   125bc:	88e3883a 	add	r17,r17,r3
   125c0:	88c00015 	stw	r3,0(r17)
   125c4:	9009883a 	mov	r4,r18
   125c8:	001ce840 	call	1ce84 <__malloc_unlock>
   125cc:	80800204 	addi	r2,r16,8
   125d0:	00001b06 	br	12640 <_malloc_r+0x2a4>
   125d4:	04400404 	movi	r17,16
   125d8:	89402536 	bltu	r17,r5,12670 <_malloc_r+0x2d4>
   125dc:	001ce800 	call	1ce80 <__malloc_lock>
   125e0:	00800184 	movi	r2,6
   125e4:	01000084 	movi	r4,2
   125e8:	04c000b4 	movhi	r19,2
   125ec:	1085883a 	add	r2,r2,r2
   125f0:	9cf6ee04 	addi	r19,r19,-9288
   125f4:	1085883a 	add	r2,r2,r2
   125f8:	9885883a 	add	r2,r19,r2
   125fc:	14000117 	ldw	r16,4(r2)
   12600:	10fffe04 	addi	r3,r2,-8
   12604:	80c0d926 	beq	r16,r3,1296c <_malloc_r+0x5d0>
   12608:	80c00117 	ldw	r3,4(r16)
   1260c:	81000317 	ldw	r4,12(r16)
   12610:	00bfff04 	movi	r2,-4
   12614:	1884703a 	and	r2,r3,r2
   12618:	81400217 	ldw	r5,8(r16)
   1261c:	8085883a 	add	r2,r16,r2
   12620:	10c00117 	ldw	r3,4(r2)
   12624:	29000315 	stw	r4,12(r5)
   12628:	21400215 	stw	r5,8(r4)
   1262c:	18c00054 	ori	r3,r3,1
   12630:	10c00115 	stw	r3,4(r2)
   12634:	9009883a 	mov	r4,r18
   12638:	001ce840 	call	1ce84 <__malloc_unlock>
   1263c:	80800204 	addi	r2,r16,8
   12640:	dfc00a17 	ldw	ra,40(sp)
   12644:	df000917 	ldw	fp,36(sp)
   12648:	ddc00817 	ldw	r23,32(sp)
   1264c:	dd800717 	ldw	r22,28(sp)
   12650:	dd400617 	ldw	r21,24(sp)
   12654:	dd000517 	ldw	r20,20(sp)
   12658:	dcc00417 	ldw	r19,16(sp)
   1265c:	dc800317 	ldw	r18,12(sp)
   12660:	dc400217 	ldw	r17,8(sp)
   12664:	dc000117 	ldw	r16,4(sp)
   12668:	dec00b04 	addi	sp,sp,44
   1266c:	f800283a 	ret
   12670:	00800304 	movi	r2,12
   12674:	90800015 	stw	r2,0(r18)
   12678:	0005883a 	mov	r2,zero
   1267c:	003ff006 	br	12640 <_gp+0xfffec584>
   12680:	01002004 	movi	r4,128
   12684:	02001004 	movi	r8,64
   12688:	01c00fc4 	movi	r7,63
   1268c:	003f6106 	br	12414 <_gp+0xfffec358>
   12690:	4009883a 	mov	r4,r8
   12694:	003f7506 	br	1246c <_gp+0xfffec3b0>
   12698:	81000317 	ldw	r4,12(r16)
   1269c:	003fde06 	br	12618 <_gp+0xfffec55c>
   126a0:	81c5883a 	add	r2,r16,r7
   126a4:	11400117 	ldw	r5,4(r2)
   126a8:	9009883a 	mov	r4,r18
   126ac:	29400054 	ori	r5,r5,1
   126b0:	11400115 	stw	r5,4(r2)
   126b4:	001ce840 	call	1ce84 <__malloc_unlock>
   126b8:	80800204 	addi	r2,r16,8
   126bc:	003fe006 	br	12640 <_gp+0xfffec584>
   126c0:	9c000217 	ldw	r16,8(r19)
   126c4:	00bfff04 	movi	r2,-4
   126c8:	85800117 	ldw	r22,4(r16)
   126cc:	b0ac703a 	and	r22,r22,r2
   126d0:	b4400336 	bltu	r22,r17,126e0 <_malloc_r+0x344>
   126d4:	b445c83a 	sub	r2,r22,r17
   126d8:	00c003c4 	movi	r3,15
   126dc:	18805d16 	blt	r3,r2,12854 <_malloc_r+0x4b8>
   126e0:	05c000b4 	movhi	r23,2
   126e4:	008000b4 	movhi	r2,2
   126e8:	10bab004 	addi	r2,r2,-5440
   126ec:	bdf83304 	addi	r23,r23,-7988
   126f0:	15400017 	ldw	r21,0(r2)
   126f4:	b8c00017 	ldw	r3,0(r23)
   126f8:	00bfffc4 	movi	r2,-1
   126fc:	858d883a 	add	r6,r16,r22
   12700:	8d6b883a 	add	r21,r17,r21
   12704:	1880ea26 	beq	r3,r2,12ab0 <_malloc_r+0x714>
   12708:	ad4403c4 	addi	r21,r21,4111
   1270c:	00bc0004 	movi	r2,-4096
   12710:	a8aa703a 	and	r21,r21,r2
   12714:	a80b883a 	mov	r5,r21
   12718:	9009883a 	mov	r4,r18
   1271c:	d9800015 	stw	r6,0(sp)
   12720:	0012cd00 	call	12cd0 <_sbrk_r>
   12724:	1029883a 	mov	r20,r2
   12728:	00bfffc4 	movi	r2,-1
   1272c:	d9800017 	ldw	r6,0(sp)
   12730:	a080e826 	beq	r20,r2,12ad4 <_malloc_r+0x738>
   12734:	a180a636 	bltu	r20,r6,129d0 <_malloc_r+0x634>
   12738:	070000b4 	movhi	fp,2
   1273c:	e73ac604 	addi	fp,fp,-5352
   12740:	e0800017 	ldw	r2,0(fp)
   12744:	a887883a 	add	r3,r21,r2
   12748:	e0c00015 	stw	r3,0(fp)
   1274c:	3500e626 	beq	r6,r20,12ae8 <_malloc_r+0x74c>
   12750:	b9000017 	ldw	r4,0(r23)
   12754:	00bfffc4 	movi	r2,-1
   12758:	2080ee26 	beq	r4,r2,12b14 <_malloc_r+0x778>
   1275c:	a185c83a 	sub	r2,r20,r6
   12760:	10c5883a 	add	r2,r2,r3
   12764:	e0800015 	stw	r2,0(fp)
   12768:	a0c001cc 	andi	r3,r20,7
   1276c:	1800bc26 	beq	r3,zero,12a60 <_malloc_r+0x6c4>
   12770:	a0e9c83a 	sub	r20,r20,r3
   12774:	00840204 	movi	r2,4104
   12778:	a5000204 	addi	r20,r20,8
   1277c:	10c7c83a 	sub	r3,r2,r3
   12780:	a545883a 	add	r2,r20,r21
   12784:	1083ffcc 	andi	r2,r2,4095
   12788:	18abc83a 	sub	r21,r3,r2
   1278c:	a80b883a 	mov	r5,r21
   12790:	9009883a 	mov	r4,r18
   12794:	0012cd00 	call	12cd0 <_sbrk_r>
   12798:	00ffffc4 	movi	r3,-1
   1279c:	10c0e126 	beq	r2,r3,12b24 <_malloc_r+0x788>
   127a0:	1505c83a 	sub	r2,r2,r20
   127a4:	1545883a 	add	r2,r2,r21
   127a8:	10800054 	ori	r2,r2,1
   127ac:	e0c00017 	ldw	r3,0(fp)
   127b0:	9d000215 	stw	r20,8(r19)
   127b4:	a0800115 	stw	r2,4(r20)
   127b8:	a8c7883a 	add	r3,r21,r3
   127bc:	e0c00015 	stw	r3,0(fp)
   127c0:	84c00e26 	beq	r16,r19,127fc <_malloc_r+0x460>
   127c4:	018003c4 	movi	r6,15
   127c8:	3580a72e 	bgeu	r6,r22,12a68 <_malloc_r+0x6cc>
   127cc:	81400117 	ldw	r5,4(r16)
   127d0:	013ffe04 	movi	r4,-8
   127d4:	b0bffd04 	addi	r2,r22,-12
   127d8:	1104703a 	and	r2,r2,r4
   127dc:	2900004c 	andi	r4,r5,1
   127e0:	2088b03a 	or	r4,r4,r2
   127e4:	81000115 	stw	r4,4(r16)
   127e8:	01400144 	movi	r5,5
   127ec:	8089883a 	add	r4,r16,r2
   127f0:	21400115 	stw	r5,4(r4)
   127f4:	21400215 	stw	r5,8(r4)
   127f8:	3080cd36 	bltu	r6,r2,12b30 <_malloc_r+0x794>
   127fc:	008000b4 	movhi	r2,2
   12800:	10baaf04 	addi	r2,r2,-5444
   12804:	11000017 	ldw	r4,0(r2)
   12808:	20c0012e 	bgeu	r4,r3,12810 <_malloc_r+0x474>
   1280c:	10c00015 	stw	r3,0(r2)
   12810:	008000b4 	movhi	r2,2
   12814:	10baae04 	addi	r2,r2,-5448
   12818:	11000017 	ldw	r4,0(r2)
   1281c:	9c000217 	ldw	r16,8(r19)
   12820:	20c0012e 	bgeu	r4,r3,12828 <_malloc_r+0x48c>
   12824:	10c00015 	stw	r3,0(r2)
   12828:	80c00117 	ldw	r3,4(r16)
   1282c:	00bfff04 	movi	r2,-4
   12830:	1886703a 	and	r3,r3,r2
   12834:	1c45c83a 	sub	r2,r3,r17
   12838:	1c400236 	bltu	r3,r17,12844 <_malloc_r+0x4a8>
   1283c:	00c003c4 	movi	r3,15
   12840:	18800416 	blt	r3,r2,12854 <_malloc_r+0x4b8>
   12844:	9009883a 	mov	r4,r18
   12848:	001ce840 	call	1ce84 <__malloc_unlock>
   1284c:	0005883a 	mov	r2,zero
   12850:	003f7b06 	br	12640 <_gp+0xfffec584>
   12854:	88c00054 	ori	r3,r17,1
   12858:	80c00115 	stw	r3,4(r16)
   1285c:	8463883a 	add	r17,r16,r17
   12860:	10800054 	ori	r2,r2,1
   12864:	9c400215 	stw	r17,8(r19)
   12868:	88800115 	stw	r2,4(r17)
   1286c:	9009883a 	mov	r4,r18
   12870:	001ce840 	call	1ce84 <__malloc_unlock>
   12874:	80800204 	addi	r2,r16,8
   12878:	003f7106 	br	12640 <_gp+0xfffec584>
   1287c:	00c00504 	movi	r3,20
   12880:	18804a2e 	bgeu	r3,r2,129ac <_malloc_r+0x610>
   12884:	00c01504 	movi	r3,84
   12888:	18806e36 	bltu	r3,r2,12a44 <_malloc_r+0x6a8>
   1288c:	8804d33a 	srli	r2,r17,12
   12890:	12001bc4 	addi	r8,r2,111
   12894:	11c01b84 	addi	r7,r2,110
   12898:	4209883a 	add	r4,r8,r8
   1289c:	003edd06 	br	12414 <_gp+0xfffec358>
   128a0:	3804d27a 	srli	r2,r7,9
   128a4:	00c00104 	movi	r3,4
   128a8:	1880442e 	bgeu	r3,r2,129bc <_malloc_r+0x620>
   128ac:	00c00504 	movi	r3,20
   128b0:	18808136 	bltu	r3,r2,12ab8 <_malloc_r+0x71c>
   128b4:	11401704 	addi	r5,r2,92
   128b8:	10c016c4 	addi	r3,r2,91
   128bc:	294b883a 	add	r5,r5,r5
   128c0:	294b883a 	add	r5,r5,r5
   128c4:	294b883a 	add	r5,r5,r5
   128c8:	994b883a 	add	r5,r19,r5
   128cc:	28800017 	ldw	r2,0(r5)
   128d0:	018000b4 	movhi	r6,2
   128d4:	297ffe04 	addi	r5,r5,-8
   128d8:	31b6ee04 	addi	r6,r6,-9288
   128dc:	28806526 	beq	r5,r2,12a74 <_malloc_r+0x6d8>
   128e0:	01bfff04 	movi	r6,-4
   128e4:	10c00117 	ldw	r3,4(r2)
   128e8:	1986703a 	and	r3,r3,r6
   128ec:	38c0022e 	bgeu	r7,r3,128f8 <_malloc_r+0x55c>
   128f0:	10800217 	ldw	r2,8(r2)
   128f4:	28bffb1e 	bne	r5,r2,128e4 <_gp+0xfffec828>
   128f8:	11400317 	ldw	r5,12(r2)
   128fc:	98c00117 	ldw	r3,4(r19)
   12900:	81400315 	stw	r5,12(r16)
   12904:	80800215 	stw	r2,8(r16)
   12908:	2c000215 	stw	r16,8(r5)
   1290c:	14000315 	stw	r16,12(r2)
   12910:	003ef806 	br	124f4 <_gp+0xfffec438>
   12914:	88c00054 	ori	r3,r17,1
   12918:	80c00115 	stw	r3,4(r16)
   1291c:	8463883a 	add	r17,r16,r17
   12920:	34400515 	stw	r17,20(r6)
   12924:	34400415 	stw	r17,16(r6)
   12928:	10c00054 	ori	r3,r2,1
   1292c:	8a000315 	stw	r8,12(r17)
   12930:	8a000215 	stw	r8,8(r17)
   12934:	88c00115 	stw	r3,4(r17)
   12938:	88a3883a 	add	r17,r17,r2
   1293c:	88800015 	stw	r2,0(r17)
   12940:	9009883a 	mov	r4,r18
   12944:	001ce840 	call	1ce84 <__malloc_unlock>
   12948:	80800204 	addi	r2,r16,8
   1294c:	003f3c06 	br	12640 <_gp+0xfffec584>
   12950:	30c00117 	ldw	r3,4(r6)
   12954:	003ee706 	br	124f4 <_gp+0xfffec438>
   12958:	5ac00044 	addi	r11,r11,1
   1295c:	588000cc 	andi	r2,r11,3
   12960:	31800204 	addi	r6,r6,8
   12964:	103efd1e 	bne	r2,zero,1255c <_gp+0xfffec4a0>
   12968:	00002406 	br	129fc <_malloc_r+0x660>
   1296c:	14000317 	ldw	r16,12(r2)
   12970:	143f251e 	bne	r2,r16,12608 <_gp+0xfffec54c>
   12974:	21000084 	addi	r4,r4,2
   12978:	003ebc06 	br	1246c <_gp+0xfffec3b0>
   1297c:	8085883a 	add	r2,r16,r2
   12980:	10c00117 	ldw	r3,4(r2)
   12984:	81000317 	ldw	r4,12(r16)
   12988:	81400217 	ldw	r5,8(r16)
   1298c:	18c00054 	ori	r3,r3,1
   12990:	10c00115 	stw	r3,4(r2)
   12994:	29000315 	stw	r4,12(r5)
   12998:	21400215 	stw	r5,8(r4)
   1299c:	9009883a 	mov	r4,r18
   129a0:	001ce840 	call	1ce84 <__malloc_unlock>
   129a4:	80800204 	addi	r2,r16,8
   129a8:	003f2506 	br	12640 <_gp+0xfffec584>
   129ac:	12001704 	addi	r8,r2,92
   129b0:	11c016c4 	addi	r7,r2,91
   129b4:	4209883a 	add	r4,r8,r8
   129b8:	003e9606 	br	12414 <_gp+0xfffec358>
   129bc:	3804d1ba 	srli	r2,r7,6
   129c0:	11400e44 	addi	r5,r2,57
   129c4:	10c00e04 	addi	r3,r2,56
   129c8:	294b883a 	add	r5,r5,r5
   129cc:	003fbc06 	br	128c0 <_gp+0xfffec804>
   129d0:	84ff5926 	beq	r16,r19,12738 <_gp+0xfffec67c>
   129d4:	008000b4 	movhi	r2,2
   129d8:	10b6ee04 	addi	r2,r2,-9288
   129dc:	14000217 	ldw	r16,8(r2)
   129e0:	00bfff04 	movi	r2,-4
   129e4:	80c00117 	ldw	r3,4(r16)
   129e8:	1886703a 	and	r3,r3,r2
   129ec:	003f9106 	br	12834 <_gp+0xfffec778>
   129f0:	60800217 	ldw	r2,8(r12)
   129f4:	213fffc4 	addi	r4,r4,-1
   129f8:	1300651e 	bne	r2,r12,12b90 <_malloc_r+0x7f4>
   129fc:	208000cc 	andi	r2,r4,3
   12a00:	633ffe04 	addi	r12,r12,-8
   12a04:	103ffa1e 	bne	r2,zero,129f0 <_gp+0xfffec934>
   12a08:	98800117 	ldw	r2,4(r19)
   12a0c:	0146303a 	nor	r3,zero,r5
   12a10:	1884703a 	and	r2,r3,r2
   12a14:	98800115 	stw	r2,4(r19)
   12a18:	294b883a 	add	r5,r5,r5
   12a1c:	117f2836 	bltu	r2,r5,126c0 <_gp+0xfffec604>
   12a20:	283f2726 	beq	r5,zero,126c0 <_gp+0xfffec604>
   12a24:	2886703a 	and	r3,r5,r2
   12a28:	5809883a 	mov	r4,r11
   12a2c:	183ec31e 	bne	r3,zero,1253c <_gp+0xfffec480>
   12a30:	294b883a 	add	r5,r5,r5
   12a34:	2886703a 	and	r3,r5,r2
   12a38:	21000104 	addi	r4,r4,4
   12a3c:	183ffc26 	beq	r3,zero,12a30 <_gp+0xfffec974>
   12a40:	003ebe06 	br	1253c <_gp+0xfffec480>
   12a44:	00c05504 	movi	r3,340
   12a48:	18801236 	bltu	r3,r2,12a94 <_malloc_r+0x6f8>
   12a4c:	8804d3fa 	srli	r2,r17,15
   12a50:	12001e04 	addi	r8,r2,120
   12a54:	11c01dc4 	addi	r7,r2,119
   12a58:	4209883a 	add	r4,r8,r8
   12a5c:	003e6d06 	br	12414 <_gp+0xfffec358>
   12a60:	00c40004 	movi	r3,4096
   12a64:	003f4606 	br	12780 <_gp+0xfffec6c4>
   12a68:	00800044 	movi	r2,1
   12a6c:	a0800115 	stw	r2,4(r20)
   12a70:	003f7406 	br	12844 <_gp+0xfffec788>
   12a74:	1805d0ba 	srai	r2,r3,2
   12a78:	01c00044 	movi	r7,1
   12a7c:	30c00117 	ldw	r3,4(r6)
   12a80:	388e983a 	sll	r7,r7,r2
   12a84:	2805883a 	mov	r2,r5
   12a88:	38c6b03a 	or	r3,r7,r3
   12a8c:	30c00115 	stw	r3,4(r6)
   12a90:	003f9b06 	br	12900 <_gp+0xfffec844>
   12a94:	00c15504 	movi	r3,1364
   12a98:	18801a36 	bltu	r3,r2,12b04 <_malloc_r+0x768>
   12a9c:	8804d4ba 	srli	r2,r17,18
   12aa0:	12001f44 	addi	r8,r2,125
   12aa4:	11c01f04 	addi	r7,r2,124
   12aa8:	4209883a 	add	r4,r8,r8
   12aac:	003e5906 	br	12414 <_gp+0xfffec358>
   12ab0:	ad400404 	addi	r21,r21,16
   12ab4:	003f1706 	br	12714 <_gp+0xfffec658>
   12ab8:	00c01504 	movi	r3,84
   12abc:	18802336 	bltu	r3,r2,12b4c <_malloc_r+0x7b0>
   12ac0:	3804d33a 	srli	r2,r7,12
   12ac4:	11401bc4 	addi	r5,r2,111
   12ac8:	10c01b84 	addi	r3,r2,110
   12acc:	294b883a 	add	r5,r5,r5
   12ad0:	003f7b06 	br	128c0 <_gp+0xfffec804>
   12ad4:	9c000217 	ldw	r16,8(r19)
   12ad8:	00bfff04 	movi	r2,-4
   12adc:	80c00117 	ldw	r3,4(r16)
   12ae0:	1886703a 	and	r3,r3,r2
   12ae4:	003f5306 	br	12834 <_gp+0xfffec778>
   12ae8:	3083ffcc 	andi	r2,r6,4095
   12aec:	103f181e 	bne	r2,zero,12750 <_gp+0xfffec694>
   12af0:	99000217 	ldw	r4,8(r19)
   12af4:	b545883a 	add	r2,r22,r21
   12af8:	10800054 	ori	r2,r2,1
   12afc:	20800115 	stw	r2,4(r4)
   12b00:	003f3e06 	br	127fc <_gp+0xfffec740>
   12b04:	01003f84 	movi	r4,254
   12b08:	02001fc4 	movi	r8,127
   12b0c:	01c01f84 	movi	r7,126
   12b10:	003e4006 	br	12414 <_gp+0xfffec358>
   12b14:	008000b4 	movhi	r2,2
   12b18:	10b83304 	addi	r2,r2,-7988
   12b1c:	15000015 	stw	r20,0(r2)
   12b20:	003f1106 	br	12768 <_gp+0xfffec6ac>
   12b24:	00800044 	movi	r2,1
   12b28:	002b883a 	mov	r21,zero
   12b2c:	003f1f06 	br	127ac <_gp+0xfffec6f0>
   12b30:	81400204 	addi	r5,r16,8
   12b34:	9009883a 	mov	r4,r18
   12b38:	00174d00 	call	174d0 <_free_r>
   12b3c:	008000b4 	movhi	r2,2
   12b40:	10bac604 	addi	r2,r2,-5352
   12b44:	10c00017 	ldw	r3,0(r2)
   12b48:	003f2c06 	br	127fc <_gp+0xfffec740>
   12b4c:	00c05504 	movi	r3,340
   12b50:	18800536 	bltu	r3,r2,12b68 <_malloc_r+0x7cc>
   12b54:	3804d3fa 	srli	r2,r7,15
   12b58:	11401e04 	addi	r5,r2,120
   12b5c:	10c01dc4 	addi	r3,r2,119
   12b60:	294b883a 	add	r5,r5,r5
   12b64:	003f5606 	br	128c0 <_gp+0xfffec804>
   12b68:	00c15504 	movi	r3,1364
   12b6c:	18800536 	bltu	r3,r2,12b84 <_malloc_r+0x7e8>
   12b70:	3804d4ba 	srli	r2,r7,18
   12b74:	11401f44 	addi	r5,r2,125
   12b78:	10c01f04 	addi	r3,r2,124
   12b7c:	294b883a 	add	r5,r5,r5
   12b80:	003f4f06 	br	128c0 <_gp+0xfffec804>
   12b84:	01403f84 	movi	r5,254
   12b88:	00c01f84 	movi	r3,126
   12b8c:	003f4c06 	br	128c0 <_gp+0xfffec804>
   12b90:	98800117 	ldw	r2,4(r19)
   12b94:	003fa006 	br	12a18 <_gp+0xfffec95c>
   12b98:	8808d0fa 	srli	r4,r17,3
   12b9c:	20800044 	addi	r2,r4,1
   12ba0:	1085883a 	add	r2,r2,r2
   12ba4:	003e9006 	br	125e8 <_gp+0xfffec52c>

00012ba8 <memset>:
   12ba8:	20c000cc 	andi	r3,r4,3
   12bac:	2005883a 	mov	r2,r4
   12bb0:	18004426 	beq	r3,zero,12cc4 <memset+0x11c>
   12bb4:	31ffffc4 	addi	r7,r6,-1
   12bb8:	30004026 	beq	r6,zero,12cbc <memset+0x114>
   12bbc:	2813883a 	mov	r9,r5
   12bc0:	200d883a 	mov	r6,r4
   12bc4:	2007883a 	mov	r3,r4
   12bc8:	00000406 	br	12bdc <memset+0x34>
   12bcc:	3a3fffc4 	addi	r8,r7,-1
   12bd0:	31800044 	addi	r6,r6,1
   12bd4:	38003926 	beq	r7,zero,12cbc <memset+0x114>
   12bd8:	400f883a 	mov	r7,r8
   12bdc:	18c00044 	addi	r3,r3,1
   12be0:	32400005 	stb	r9,0(r6)
   12be4:	1a0000cc 	andi	r8,r3,3
   12be8:	403ff81e 	bne	r8,zero,12bcc <_gp+0xfffecb10>
   12bec:	010000c4 	movi	r4,3
   12bf0:	21c02d2e 	bgeu	r4,r7,12ca8 <memset+0x100>
   12bf4:	29003fcc 	andi	r4,r5,255
   12bf8:	200c923a 	slli	r6,r4,8
   12bfc:	3108b03a 	or	r4,r6,r4
   12c00:	200c943a 	slli	r6,r4,16
   12c04:	218cb03a 	or	r6,r4,r6
   12c08:	010003c4 	movi	r4,15
   12c0c:	21c0182e 	bgeu	r4,r7,12c70 <memset+0xc8>
   12c10:	3b3ffc04 	addi	r12,r7,-16
   12c14:	6018d13a 	srli	r12,r12,4
   12c18:	1a000104 	addi	r8,r3,4
   12c1c:	1ac00204 	addi	r11,r3,8
   12c20:	6008913a 	slli	r4,r12,4
   12c24:	1a800304 	addi	r10,r3,12
   12c28:	1813883a 	mov	r9,r3
   12c2c:	21000504 	addi	r4,r4,20
   12c30:	1909883a 	add	r4,r3,r4
   12c34:	49800015 	stw	r6,0(r9)
   12c38:	41800015 	stw	r6,0(r8)
   12c3c:	59800015 	stw	r6,0(r11)
   12c40:	51800015 	stw	r6,0(r10)
   12c44:	42000404 	addi	r8,r8,16
   12c48:	4a400404 	addi	r9,r9,16
   12c4c:	5ac00404 	addi	r11,r11,16
   12c50:	52800404 	addi	r10,r10,16
   12c54:	413ff71e 	bne	r8,r4,12c34 <_gp+0xfffecb78>
   12c58:	63000044 	addi	r12,r12,1
   12c5c:	6018913a 	slli	r12,r12,4
   12c60:	39c003cc 	andi	r7,r7,15
   12c64:	010000c4 	movi	r4,3
   12c68:	1b07883a 	add	r3,r3,r12
   12c6c:	21c00e2e 	bgeu	r4,r7,12ca8 <memset+0x100>
   12c70:	1813883a 	mov	r9,r3
   12c74:	3811883a 	mov	r8,r7
   12c78:	010000c4 	movi	r4,3
   12c7c:	49800015 	stw	r6,0(r9)
   12c80:	423fff04 	addi	r8,r8,-4
   12c84:	4a400104 	addi	r9,r9,4
   12c88:	223ffc36 	bltu	r4,r8,12c7c <_gp+0xfffecbc0>
   12c8c:	393fff04 	addi	r4,r7,-4
   12c90:	2008d0ba 	srli	r4,r4,2
   12c94:	39c000cc 	andi	r7,r7,3
   12c98:	21000044 	addi	r4,r4,1
   12c9c:	2109883a 	add	r4,r4,r4
   12ca0:	2109883a 	add	r4,r4,r4
   12ca4:	1907883a 	add	r3,r3,r4
   12ca8:	38000526 	beq	r7,zero,12cc0 <memset+0x118>
   12cac:	19cf883a 	add	r7,r3,r7
   12cb0:	19400005 	stb	r5,0(r3)
   12cb4:	18c00044 	addi	r3,r3,1
   12cb8:	38fffd1e 	bne	r7,r3,12cb0 <_gp+0xfffecbf4>
   12cbc:	f800283a 	ret
   12cc0:	f800283a 	ret
   12cc4:	2007883a 	mov	r3,r4
   12cc8:	300f883a 	mov	r7,r6
   12ccc:	003fc706 	br	12bec <_gp+0xfffecb30>

00012cd0 <_sbrk_r>:
   12cd0:	defffd04 	addi	sp,sp,-12
   12cd4:	dc000015 	stw	r16,0(sp)
   12cd8:	040000b4 	movhi	r16,2
   12cdc:	dc400115 	stw	r17,4(sp)
   12ce0:	843ab104 	addi	r16,r16,-5436
   12ce4:	2023883a 	mov	r17,r4
   12ce8:	2809883a 	mov	r4,r5
   12cec:	dfc00215 	stw	ra,8(sp)
   12cf0:	80000015 	stw	zero,0(r16)
   12cf4:	001cec00 	call	1cec0 <sbrk>
   12cf8:	00ffffc4 	movi	r3,-1
   12cfc:	10c00526 	beq	r2,r3,12d14 <_sbrk_r+0x44>
   12d00:	dfc00217 	ldw	ra,8(sp)
   12d04:	dc400117 	ldw	r17,4(sp)
   12d08:	dc000017 	ldw	r16,0(sp)
   12d0c:	dec00304 	addi	sp,sp,12
   12d10:	f800283a 	ret
   12d14:	80c00017 	ldw	r3,0(r16)
   12d18:	183ff926 	beq	r3,zero,12d00 <_gp+0xfffecc44>
   12d1c:	88c00015 	stw	r3,0(r17)
   12d20:	003ff706 	br	12d00 <_gp+0xfffecc44>

00012d24 <_sprintf_r>:
   12d24:	deffe404 	addi	sp,sp,-112
   12d28:	2807883a 	mov	r3,r5
   12d2c:	dfc01a15 	stw	ra,104(sp)
   12d30:	d9c01b15 	stw	r7,108(sp)
   12d34:	00a00034 	movhi	r2,32768
   12d38:	10bfffc4 	addi	r2,r2,-1
   12d3c:	02008204 	movi	r8,520
   12d40:	d8800215 	stw	r2,8(sp)
   12d44:	d8800515 	stw	r2,20(sp)
   12d48:	d9c01b04 	addi	r7,sp,108
   12d4c:	d80b883a 	mov	r5,sp
   12d50:	00bfffc4 	movi	r2,-1
   12d54:	d8c00015 	stw	r3,0(sp)
   12d58:	d8c00415 	stw	r3,16(sp)
   12d5c:	da00030d 	sth	r8,12(sp)
   12d60:	d880038d 	sth	r2,14(sp)
   12d64:	00138400 	call	13840 <___svfprintf_internal_r>
   12d68:	d8c00017 	ldw	r3,0(sp)
   12d6c:	18000005 	stb	zero,0(r3)
   12d70:	dfc01a17 	ldw	ra,104(sp)
   12d74:	dec01c04 	addi	sp,sp,112
   12d78:	f800283a 	ret

00012d7c <sprintf>:
   12d7c:	deffe304 	addi	sp,sp,-116
   12d80:	2007883a 	mov	r3,r4
   12d84:	dfc01a15 	stw	ra,104(sp)
   12d88:	d9801b15 	stw	r6,108(sp)
   12d8c:	d9c01c15 	stw	r7,112(sp)
   12d90:	010000b4 	movhi	r4,2
   12d94:	21383204 	addi	r4,r4,-7992
   12d98:	21000017 	ldw	r4,0(r4)
   12d9c:	00a00034 	movhi	r2,32768
   12da0:	10bfffc4 	addi	r2,r2,-1
   12da4:	280d883a 	mov	r6,r5
   12da8:	02008204 	movi	r8,520
   12dac:	d8800215 	stw	r2,8(sp)
   12db0:	d8800515 	stw	r2,20(sp)
   12db4:	d9c01b04 	addi	r7,sp,108
   12db8:	d80b883a 	mov	r5,sp
   12dbc:	00bfffc4 	movi	r2,-1
   12dc0:	d8c00015 	stw	r3,0(sp)
   12dc4:	d8c00415 	stw	r3,16(sp)
   12dc8:	da00030d 	sth	r8,12(sp)
   12dcc:	d880038d 	sth	r2,14(sp)
   12dd0:	00138400 	call	13840 <___svfprintf_internal_r>
   12dd4:	d8c00017 	ldw	r3,0(sp)
   12dd8:	18000005 	stb	zero,0(r3)
   12ddc:	dfc01a17 	ldw	ra,104(sp)
   12de0:	dec01d04 	addi	sp,sp,116
   12de4:	f800283a 	ret

00012de8 <strchr>:
   12de8:	2ac03fcc 	andi	r11,r5,255
   12dec:	2813883a 	mov	r9,r5
   12df0:	208000cc 	andi	r2,r4,3
   12df4:	58003726 	beq	r11,zero,12ed4 <strchr+0xec>
   12df8:	10000b26 	beq	r2,zero,12e28 <strchr+0x40>
   12dfc:	20800003 	ldbu	r2,0(r4)
   12e00:	10003226 	beq	r2,zero,12ecc <strchr+0xe4>
   12e04:	28c03fcc 	andi	r3,r5,255
   12e08:	5880041e 	bne	r11,r2,12e1c <strchr+0x34>
   12e0c:	00004d06 	br	12f44 <strchr+0x15c>
   12e10:	20800003 	ldbu	r2,0(r4)
   12e14:	10002d26 	beq	r2,zero,12ecc <strchr+0xe4>
   12e18:	18804a26 	beq	r3,r2,12f44 <strchr+0x15c>
   12e1c:	21000044 	addi	r4,r4,1
   12e20:	208000cc 	andi	r2,r4,3
   12e24:	103ffa1e 	bne	r2,zero,12e10 <_gp+0xfffecd54>
   12e28:	29403fcc 	andi	r5,r5,255
   12e2c:	2814923a 	slli	r10,r5,8
   12e30:	20800017 	ldw	r2,0(r4)
   12e34:	01bfbff4 	movhi	r6,65279
   12e38:	2a8ab03a 	or	r5,r5,r10
   12e3c:	2814943a 	slli	r10,r5,16
   12e40:	31bfbfc4 	addi	r6,r6,-257
   12e44:	119b883a 	add	r13,r2,r6
   12e48:	5154b03a 	or	r10,r10,r5
   12e4c:	008e303a 	nor	r7,zero,r2
   12e50:	5084f03a 	xor	r2,r10,r2
   12e54:	1191883a 	add	r8,r2,r6
   12e58:	0086303a 	nor	r3,zero,r2
   12e5c:	03202074 	movhi	r12,32897
   12e60:	69ca703a 	and	r5,r13,r7
   12e64:	40c4703a 	and	r2,r8,r3
   12e68:	63202004 	addi	r12,r12,-32640
   12e6c:	2884b03a 	or	r2,r5,r2
   12e70:	1304703a 	and	r2,r2,r12
   12e74:	10000c1e 	bne	r2,zero,12ea8 <strchr+0xc0>
   12e78:	21000104 	addi	r4,r4,4
   12e7c:	20c00017 	ldw	r3,0(r4)
   12e80:	50c4f03a 	xor	r2,r10,r3
   12e84:	1991883a 	add	r8,r3,r6
   12e88:	00ca303a 	nor	r5,zero,r3
   12e8c:	118f883a 	add	r7,r2,r6
   12e90:	0086303a 	nor	r3,zero,r2
   12e94:	414a703a 	and	r5,r8,r5
   12e98:	38c4703a 	and	r2,r7,r3
   12e9c:	2884b03a 	or	r2,r5,r2
   12ea0:	1304703a 	and	r2,r2,r12
   12ea4:	103ff426 	beq	r2,zero,12e78 <_gp+0xfffecdbc>
   12ea8:	20800003 	ldbu	r2,0(r4)
   12eac:	10000726 	beq	r2,zero,12ecc <strchr+0xe4>
   12eb0:	58802426 	beq	r11,r2,12f44 <strchr+0x15c>
   12eb4:	48c03fcc 	andi	r3,r9,255
   12eb8:	00000106 	br	12ec0 <strchr+0xd8>
   12ebc:	18802126 	beq	r3,r2,12f44 <strchr+0x15c>
   12ec0:	21000044 	addi	r4,r4,1
   12ec4:	20800003 	ldbu	r2,0(r4)
   12ec8:	103ffc1e 	bne	r2,zero,12ebc <_gp+0xfffece00>
   12ecc:	0005883a 	mov	r2,zero
   12ed0:	f800283a 	ret
   12ed4:	10000526 	beq	r2,zero,12eec <strchr+0x104>
   12ed8:	20800003 	ldbu	r2,0(r4)
   12edc:	10001926 	beq	r2,zero,12f44 <strchr+0x15c>
   12ee0:	21000044 	addi	r4,r4,1
   12ee4:	208000cc 	andi	r2,r4,3
   12ee8:	103ffb1e 	bne	r2,zero,12ed8 <_gp+0xfffece1c>
   12eec:	20800017 	ldw	r2,0(r4)
   12ef0:	01bfbff4 	movhi	r6,65279
   12ef4:	31bfbfc4 	addi	r6,r6,-257
   12ef8:	0086303a 	nor	r3,zero,r2
   12efc:	01602074 	movhi	r5,32897
   12f00:	1185883a 	add	r2,r2,r6
   12f04:	29602004 	addi	r5,r5,-32640
   12f08:	10c4703a 	and	r2,r2,r3
   12f0c:	1144703a 	and	r2,r2,r5
   12f10:	1000071e 	bne	r2,zero,12f30 <strchr+0x148>
   12f14:	21000104 	addi	r4,r4,4
   12f18:	20800017 	ldw	r2,0(r4)
   12f1c:	1187883a 	add	r3,r2,r6
   12f20:	0084303a 	nor	r2,zero,r2
   12f24:	1884703a 	and	r2,r3,r2
   12f28:	1144703a 	and	r2,r2,r5
   12f2c:	103ff926 	beq	r2,zero,12f14 <_gp+0xfffece58>
   12f30:	20800003 	ldbu	r2,0(r4)
   12f34:	10000326 	beq	r2,zero,12f44 <strchr+0x15c>
   12f38:	21000044 	addi	r4,r4,1
   12f3c:	20800003 	ldbu	r2,0(r4)
   12f40:	103ffd1e 	bne	r2,zero,12f38 <_gp+0xfffece7c>
   12f44:	2005883a 	mov	r2,r4
   12f48:	f800283a 	ret

00012f4c <strcpy>:
   12f4c:	2906b03a 	or	r3,r5,r4
   12f50:	18c000cc 	andi	r3,r3,3
   12f54:	2005883a 	mov	r2,r4
   12f58:	1800161e 	bne	r3,zero,12fb4 <strcpy+0x68>
   12f5c:	29c00017 	ldw	r7,0(r5)
   12f60:	02ffbff4 	movhi	r11,65279
   12f64:	5affbfc4 	addi	r11,r11,-257
   12f68:	02a02074 	movhi	r10,32897
   12f6c:	01c6303a 	nor	r3,zero,r7
   12f70:	3ac9883a 	add	r4,r7,r11
   12f74:	52a02004 	addi	r10,r10,-32640
   12f78:	20c6703a 	and	r3,r4,r3
   12f7c:	1a86703a 	and	r3,r3,r10
   12f80:	18000c1e 	bne	r3,zero,12fb4 <strcpy+0x68>
   12f84:	1011883a 	mov	r8,r2
   12f88:	41c00015 	stw	r7,0(r8)
   12f8c:	29400104 	addi	r5,r5,4
   12f90:	29c00017 	ldw	r7,0(r5)
   12f94:	41800104 	addi	r6,r8,4
   12f98:	3011883a 	mov	r8,r6
   12f9c:	3ad3883a 	add	r9,r7,r11
   12fa0:	01c6303a 	nor	r3,zero,r7
   12fa4:	48c6703a 	and	r3,r9,r3
   12fa8:	1a86703a 	and	r3,r3,r10
   12fac:	183ff626 	beq	r3,zero,12f88 <_gp+0xfffececc>
   12fb0:	00000106 	br	12fb8 <strcpy+0x6c>
   12fb4:	100d883a 	mov	r6,r2
   12fb8:	28c00003 	ldbu	r3,0(r5)
   12fbc:	31800044 	addi	r6,r6,1
   12fc0:	29400044 	addi	r5,r5,1
   12fc4:	30ffffc5 	stb	r3,-1(r6)
   12fc8:	18c03fcc 	andi	r3,r3,255
   12fcc:	18c0201c 	xori	r3,r3,128
   12fd0:	18ffe004 	addi	r3,r3,-128
   12fd4:	183ff81e 	bne	r3,zero,12fb8 <_gp+0xfffecefc>
   12fd8:	f800283a 	ret

00012fdc <critical_factorization>:
   12fdc:	02c00044 	movi	r11,1
   12fe0:	5811883a 	mov	r8,r11
   12fe4:	0013883a 	mov	r9,zero
   12fe8:	00bfffc4 	movi	r2,-1
   12fec:	2087883a 	add	r3,r4,r2
   12ff0:	1a0f883a 	add	r7,r3,r8
   12ff4:	4a07883a 	add	r3,r9,r8
   12ff8:	20d5883a 	add	r10,r4,r3
   12ffc:	1940102e 	bgeu	r3,r5,13040 <critical_factorization+0x64>
   13000:	52800003 	ldbu	r10,0(r10)
   13004:	39c00003 	ldbu	r7,0(r7)
   13008:	51c0042e 	bgeu	r10,r7,1301c <critical_factorization+0x40>
   1300c:	1897c83a 	sub	r11,r3,r2
   13010:	1813883a 	mov	r9,r3
   13014:	02000044 	movi	r8,1
   13018:	003ff406 	br	12fec <_gp+0xfffecf30>
   1301c:	51c00526 	beq	r10,r7,13034 <critical_factorization+0x58>
   13020:	02c00044 	movi	r11,1
   13024:	4805883a 	mov	r2,r9
   13028:	5811883a 	mov	r8,r11
   1302c:	4ad3883a 	add	r9,r9,r11
   13030:	003fee06 	br	12fec <_gp+0xfffecf30>
   13034:	42c02226 	beq	r8,r11,130c0 <critical_factorization+0xe4>
   13038:	42000044 	addi	r8,r8,1
   1303c:	003feb06 	br	12fec <_gp+0xfffecf30>
   13040:	03000044 	movi	r12,1
   13044:	32c00015 	stw	r11,0(r6)
   13048:	6011883a 	mov	r8,r12
   1304c:	0013883a 	mov	r9,zero
   13050:	02ffffc4 	movi	r11,-1
   13054:	22c7883a 	add	r3,r4,r11
   13058:	1a0f883a 	add	r7,r3,r8
   1305c:	4a07883a 	add	r3,r9,r8
   13060:	20d5883a 	add	r10,r4,r3
   13064:	1940102e 	bgeu	r3,r5,130a8 <critical_factorization+0xcc>
   13068:	52800003 	ldbu	r10,0(r10)
   1306c:	39c00003 	ldbu	r7,0(r7)
   13070:	3a80042e 	bgeu	r7,r10,13084 <critical_factorization+0xa8>
   13074:	1ad9c83a 	sub	r12,r3,r11
   13078:	1813883a 	mov	r9,r3
   1307c:	02000044 	movi	r8,1
   13080:	003ff406 	br	13054 <_gp+0xfffecf98>
   13084:	51c00526 	beq	r10,r7,1309c <critical_factorization+0xc0>
   13088:	03000044 	movi	r12,1
   1308c:	4817883a 	mov	r11,r9
   13090:	6011883a 	mov	r8,r12
   13094:	4b13883a 	add	r9,r9,r12
   13098:	003fee06 	br	13054 <_gp+0xfffecf98>
   1309c:	43000c26 	beq	r8,r12,130d0 <critical_factorization+0xf4>
   130a0:	42000044 	addi	r8,r8,1
   130a4:	003feb06 	br	13054 <_gp+0xfffecf98>
   130a8:	5ac00044 	addi	r11,r11,1
   130ac:	10800044 	addi	r2,r2,1
   130b0:	58800236 	bltu	r11,r2,130bc <critical_factorization+0xe0>
   130b4:	33000015 	stw	r12,0(r6)
   130b8:	5805883a 	mov	r2,r11
   130bc:	f800283a 	ret
   130c0:	4017883a 	mov	r11,r8
   130c4:	1813883a 	mov	r9,r3
   130c8:	02000044 	movi	r8,1
   130cc:	003fc706 	br	12fec <_gp+0xfffecf30>
   130d0:	4019883a 	mov	r12,r8
   130d4:	1813883a 	mov	r9,r3
   130d8:	02000044 	movi	r8,1
   130dc:	003fdd06 	br	13054 <_gp+0xfffecf98>

000130e0 <two_way_long_needle>:
   130e0:	defef104 	addi	sp,sp,-1084
   130e4:	dc810715 	stw	r18,1052(sp)
   130e8:	dc410615 	stw	r17,1048(sp)
   130ec:	dc810004 	addi	r18,sp,1024
   130f0:	3023883a 	mov	r17,r6
   130f4:	2807883a 	mov	r3,r5
   130f8:	ddc10c15 	stw	r23,1072(sp)
   130fc:	900d883a 	mov	r6,r18
   13100:	202f883a 	mov	r23,r4
   13104:	380b883a 	mov	r5,r7
   13108:	8809883a 	mov	r4,r17
   1310c:	dd810b15 	stw	r22,1068(sp)
   13110:	dc010515 	stw	r16,1044(sp)
   13114:	d8c10415 	stw	r3,1040(sp)
   13118:	dfc10e15 	stw	ra,1080(sp)
   1311c:	df010d15 	stw	fp,1076(sp)
   13120:	dd410a15 	stw	r21,1064(sp)
   13124:	dd010915 	stw	r20,1060(sp)
   13128:	dcc10815 	stw	r19,1056(sp)
   1312c:	382d883a 	mov	r22,r7
   13130:	0012fdc0 	call	12fdc <critical_factorization>
   13134:	d8c10417 	ldw	r3,1040(sp)
   13138:	1021883a 	mov	r16,r2
   1313c:	d805883a 	mov	r2,sp
   13140:	15800015 	stw	r22,0(r2)
   13144:	10800104 	addi	r2,r2,4
   13148:	90bffd1e 	bne	r18,r2,13140 <_gp+0xfffed084>
   1314c:	b0000b26 	beq	r22,zero,1317c <two_way_long_needle+0x9c>
   13150:	b17fffc4 	addi	r5,r22,-1
   13154:	8809883a 	mov	r4,r17
   13158:	8d8d883a 	add	r6,r17,r22
   1315c:	20800003 	ldbu	r2,0(r4)
   13160:	21000044 	addi	r4,r4,1
   13164:	1085883a 	add	r2,r2,r2
   13168:	1085883a 	add	r2,r2,r2
   1316c:	d885883a 	add	r2,sp,r2
   13170:	11400015 	stw	r5,0(r2)
   13174:	297fffc4 	addi	r5,r5,-1
   13178:	21bff81e 	bne	r4,r6,1315c <_gp+0xfffed0a0>
   1317c:	d9410017 	ldw	r5,1024(sp)
   13180:	800d883a 	mov	r6,r16
   13184:	8809883a 	mov	r4,r17
   13188:	894b883a 	add	r5,r17,r5
   1318c:	d8c10415 	stw	r3,1040(sp)
   13190:	00179a00 	call	179a0 <memcmp>
   13194:	d8c10417 	ldw	r3,1040(sp)
   13198:	10006a1e 	bne	r2,zero,13344 <two_way_long_needle+0x264>
   1319c:	84bfffc4 	addi	r18,r16,-1
   131a0:	8c85883a 	add	r2,r17,r18
   131a4:	d8810215 	stw	r2,1032(sp)
   131a8:	00800044 	movi	r2,1
   131ac:	813fff84 	addi	r4,r16,-2
   131b0:	1405c83a 	sub	r2,r2,r16
   131b4:	0029883a 	mov	r20,zero
   131b8:	0039883a 	mov	fp,zero
   131bc:	b57fffc4 	addi	r21,r22,-1
   131c0:	d9010115 	stw	r4,1028(sp)
   131c4:	d8810315 	stw	r2,1036(sp)
   131c8:	00000706 	br	131e8 <two_way_long_needle+0x108>
   131cc:	a0000326 	beq	r20,zero,131dc <two_way_long_needle+0xfc>
   131d0:	d8c10017 	ldw	r3,1024(sp)
   131d4:	10c0012e 	bgeu	r2,r3,131dc <two_way_long_needle+0xfc>
   131d8:	b0c5c83a 	sub	r2,r22,r3
   131dc:	e0b9883a 	add	fp,fp,r2
   131e0:	0029883a 	mov	r20,zero
   131e4:	9807883a 	mov	r3,r19
   131e8:	e5a7883a 	add	r19,fp,r22
   131ec:	98cdc83a 	sub	r6,r19,r3
   131f0:	000b883a 	mov	r5,zero
   131f4:	b8c9883a 	add	r4,r23,r3
   131f8:	00178bc0 	call	178bc <memchr>
   131fc:	1000441e 	bne	r2,zero,13310 <two_way_long_needle+0x230>
   13200:	98004326 	beq	r19,zero,13310 <two_way_long_needle+0x230>
   13204:	bcc5883a 	add	r2,r23,r19
   13208:	10bfffc3 	ldbu	r2,-1(r2)
   1320c:	1085883a 	add	r2,r2,r2
   13210:	1085883a 	add	r2,r2,r2
   13214:	d885883a 	add	r2,sp,r2
   13218:	10800017 	ldw	r2,0(r2)
   1321c:	103feb1e 	bne	r2,zero,131cc <_gp+0xfffed110>
   13220:	a015883a 	mov	r10,r20
   13224:	a400012e 	bgeu	r20,r16,1322c <two_way_long_needle+0x14c>
   13228:	8015883a 	mov	r10,r16
   1322c:	5540152e 	bgeu	r10,r21,13284 <two_way_long_needle+0x1a4>
   13230:	bf05883a 	add	r2,r23,fp
   13234:	8a87883a 	add	r3,r17,r10
   13238:	1285883a 	add	r2,r2,r10
   1323c:	18c00003 	ldbu	r3,0(r3)
   13240:	10800003 	ldbu	r2,0(r2)
   13244:	18802d1e 	bne	r3,r2,132fc <two_way_long_needle+0x21c>
   13248:	e1400044 	addi	r5,fp,1
   1324c:	50800044 	addi	r2,r10,1
   13250:	2a8b883a 	add	r5,r5,r10
   13254:	888d883a 	add	r6,r17,r2
   13258:	b94b883a 	add	r5,r23,r5
   1325c:	00000706 	br	1327c <two_way_long_needle+0x19c>
   13260:	31000003 	ldbu	r4,0(r6)
   13264:	28c00003 	ldbu	r3,0(r5)
   13268:	31800044 	addi	r6,r6,1
   1326c:	21003fcc 	andi	r4,r4,255
   13270:	29400044 	addi	r5,r5,1
   13274:	20c0211e 	bne	r4,r3,132fc <two_way_long_needle+0x21c>
   13278:	10800044 	addi	r2,r2,1
   1327c:	1015883a 	mov	r10,r2
   13280:	157ff736 	bltu	r2,r21,13260 <_gp+0xfffed1a4>
   13284:	900d883a 	mov	r6,r18
   13288:	a4007d2e 	bgeu	r20,r16,13480 <two_way_long_needle+0x3a0>
   1328c:	d9410217 	ldw	r5,1032(sp)
   13290:	bf05883a 	add	r2,r23,fp
   13294:	1485883a 	add	r2,r2,r18
   13298:	28c00003 	ldbu	r3,0(r5)
   1329c:	10800003 	ldbu	r2,0(r2)
   132a0:	1880771e 	bne	r3,r2,13480 <two_way_long_needle+0x3a0>
   132a4:	d8c10117 	ldw	r3,1028(sp)
   132a8:	a2ffffc4 	addi	r11,r20,-1
   132ac:	8ad7883a 	add	r11,r17,r11
   132b0:	e0cb883a 	add	r5,fp,r3
   132b4:	88c5883a 	add	r2,r17,r3
   132b8:	b94b883a 	add	r5,r23,r5
   132bc:	00000706 	br	132dc <two_way_long_needle+0x1fc>
   132c0:	11000003 	ldbu	r4,0(r2)
   132c4:	28c00003 	ldbu	r3,0(r5)
   132c8:	10bfffc4 	addi	r2,r2,-1
   132cc:	21003fcc 	andi	r4,r4,255
   132d0:	297fffc4 	addi	r5,r5,-1
   132d4:	20c0031e 	bne	r4,r3,132e4 <two_way_long_needle+0x204>
   132d8:	500d883a 	mov	r6,r10
   132dc:	32bfffc4 	addi	r10,r6,-1
   132e0:	58bff71e 	bne	r11,r2,132c0 <_gp+0xfffed204>
   132e4:	a2400044 	addi	r9,r20,1
   132e8:	32406736 	bltu	r6,r9,13488 <two_way_long_needle+0x3a8>
   132ec:	da410017 	ldw	r9,1024(sp)
   132f0:	e279883a 	add	fp,fp,r9
   132f4:	b269c83a 	sub	r20,r22,r9
   132f8:	003fba06 	br	131e4 <_gp+0xfffed128>
   132fc:	d8c10317 	ldw	r3,1036(sp)
   13300:	0029883a 	mov	r20,zero
   13304:	1f39883a 	add	fp,r3,fp
   13308:	e2b9883a 	add	fp,fp,r10
   1330c:	003fb506 	br	131e4 <_gp+0xfffed128>
   13310:	0005883a 	mov	r2,zero
   13314:	dfc10e17 	ldw	ra,1080(sp)
   13318:	df010d17 	ldw	fp,1076(sp)
   1331c:	ddc10c17 	ldw	r23,1072(sp)
   13320:	dd810b17 	ldw	r22,1068(sp)
   13324:	dd410a17 	ldw	r21,1064(sp)
   13328:	dd010917 	ldw	r20,1060(sp)
   1332c:	dcc10817 	ldw	r19,1056(sp)
   13330:	dc810717 	ldw	r18,1052(sp)
   13334:	dc410617 	ldw	r17,1048(sp)
   13338:	dc010517 	ldw	r16,1044(sp)
   1333c:	dec10f04 	addi	sp,sp,1084
   13340:	f800283a 	ret
   13344:	b405c83a 	sub	r2,r22,r16
   13348:	14004b36 	bltu	r2,r16,13478 <two_way_long_needle+0x398>
   1334c:	10800044 	addi	r2,r2,1
   13350:	84bfffc4 	addi	r18,r16,-1
   13354:	d8810015 	stw	r2,1024(sp)
   13358:	00800044 	movi	r2,1
   1335c:	8c89883a 	add	r4,r17,r18
   13360:	817fff84 	addi	r5,r16,-2
   13364:	1405c83a 	sub	r2,r2,r16
   13368:	0029883a 	mov	r20,zero
   1336c:	b73fffc4 	addi	fp,r22,-1
   13370:	d9010215 	stw	r4,1032(sp)
   13374:	d9410115 	stw	r5,1028(sp)
   13378:	8d7fffc4 	addi	r21,r17,-1
   1337c:	d8810315 	stw	r2,1036(sp)
   13380:	a5a7883a 	add	r19,r20,r22
   13384:	98cdc83a 	sub	r6,r19,r3
   13388:	000b883a 	mov	r5,zero
   1338c:	b8c9883a 	add	r4,r23,r3
   13390:	00178bc0 	call	178bc <memchr>
   13394:	103fde1e 	bne	r2,zero,13310 <_gp+0xfffed254>
   13398:	983fdd26 	beq	r19,zero,13310 <_gp+0xfffed254>
   1339c:	bcc5883a 	add	r2,r23,r19
   133a0:	10bfffc3 	ldbu	r2,-1(r2)
   133a4:	1085883a 	add	r2,r2,r2
   133a8:	1085883a 	add	r2,r2,r2
   133ac:	d885883a 	add	r2,sp,r2
   133b0:	10800017 	ldw	r2,0(r2)
   133b4:	1000291e 	bne	r2,zero,1345c <two_way_long_needle+0x37c>
   133b8:	bd05883a 	add	r2,r23,r20
   133bc:	8700142e 	bgeu	r16,fp,13410 <two_way_long_needle+0x330>
   133c0:	8c07883a 	add	r3,r17,r16
   133c4:	140b883a 	add	r5,r2,r16
   133c8:	19000003 	ldbu	r4,0(r3)
   133cc:	28c00003 	ldbu	r3,0(r5)
   133d0:	800d883a 	mov	r6,r16
   133d4:	20c0241e 	bne	r4,r3,13468 <two_way_long_needle+0x388>
   133d8:	81400044 	addi	r5,r16,1
   133dc:	a155883a 	add	r10,r20,r5
   133e0:	ba95883a 	add	r10,r23,r10
   133e4:	894b883a 	add	r5,r17,r5
   133e8:	800d883a 	mov	r6,r16
   133ec:	00000606 	br	13408 <two_way_long_needle+0x328>
   133f0:	29000003 	ldbu	r4,0(r5)
   133f4:	50c00003 	ldbu	r3,0(r10)
   133f8:	29400044 	addi	r5,r5,1
   133fc:	21003fcc 	andi	r4,r4,255
   13400:	52800044 	addi	r10,r10,1
   13404:	20c0181e 	bne	r4,r3,13468 <two_way_long_needle+0x388>
   13408:	31800044 	addi	r6,r6,1
   1340c:	373ff836 	bltu	r6,fp,133f0 <_gp+0xfffed334>
   13410:	00ffffc4 	movi	r3,-1
   13414:	90ffbf26 	beq	r18,r3,13314 <_gp+0xfffed258>
   13418:	d9410217 	ldw	r5,1032(sp)
   1341c:	1487883a 	add	r3,r2,r18
   13420:	18c00003 	ldbu	r3,0(r3)
   13424:	29000003 	ldbu	r4,0(r5)
   13428:	20c00b1e 	bne	r4,r3,13458 <two_way_long_needle+0x378>
   1342c:	d8c10117 	ldw	r3,1028(sp)
   13430:	a0cd883a 	add	r6,r20,r3
   13434:	b98d883a 	add	r6,r23,r6
   13438:	88c7883a 	add	r3,r17,r3
   1343c:	1d7fb526 	beq	r3,r21,13314 <_gp+0xfffed258>
   13440:	19400003 	ldbu	r5,0(r3)
   13444:	31000003 	ldbu	r4,0(r6)
   13448:	18ffffc4 	addi	r3,r3,-1
   1344c:	29403fcc 	andi	r5,r5,255
   13450:	31bfffc4 	addi	r6,r6,-1
   13454:	293ff926 	beq	r5,r4,1343c <_gp+0xfffed380>
   13458:	d8810017 	ldw	r2,1024(sp)
   1345c:	a0a9883a 	add	r20,r20,r2
   13460:	9807883a 	mov	r3,r19
   13464:	003fc606 	br	13380 <_gp+0xfffed2c4>
   13468:	d8c10317 	ldw	r3,1036(sp)
   1346c:	1d11883a 	add	r8,r3,r20
   13470:	41a9883a 	add	r20,r8,r6
   13474:	003ffa06 	br	13460 <_gp+0xfffed3a4>
   13478:	8005883a 	mov	r2,r16
   1347c:	003fb306 	br	1334c <_gp+0xfffed290>
   13480:	800d883a 	mov	r6,r16
   13484:	003f9706 	br	132e4 <_gp+0xfffed228>
   13488:	bf05883a 	add	r2,r23,fp
   1348c:	003fa106 	br	13314 <_gp+0xfffed258>

00013490 <strstr>:
   13490:	21800007 	ldb	r6,0(r4)
   13494:	30009226 	beq	r6,zero,136e0 <strstr+0x250>
   13498:	28c00007 	ldb	r3,0(r5)
   1349c:	18000f26 	beq	r3,zero,134dc <strstr+0x4c>
   134a0:	280f883a 	mov	r7,r5
   134a4:	2011883a 	mov	r8,r4
   134a8:	02400044 	movi	r9,1
   134ac:	00000206 	br	134b8 <strstr+0x28>
   134b0:	38c00007 	ldb	r3,0(r7)
   134b4:	18000826 	beq	r3,zero,134d8 <strstr+0x48>
   134b8:	42000044 	addi	r8,r8,1
   134bc:	1987003a 	cmpeq	r3,r3,r6
   134c0:	41800007 	ldb	r6,0(r8)
   134c4:	39c00044 	addi	r7,r7,1
   134c8:	48d2703a 	and	r9,r9,r3
   134cc:	303ff81e 	bne	r6,zero,134b0 <_gp+0xfffed3f4>
   134d0:	38800007 	ldb	r2,0(r7)
   134d4:	1000841e 	bne	r2,zero,136e8 <strstr+0x258>
   134d8:	48000226 	beq	r9,zero,134e4 <strstr+0x54>
   134dc:	2005883a 	mov	r2,r4
   134e0:	f800283a 	ret
   134e4:	defff104 	addi	sp,sp,-60
   134e8:	ddc00c15 	stw	r23,48(sp)
   134ec:	dd800b15 	stw	r22,44(sp)
   134f0:	dd400a15 	stw	r21,40(sp)
   134f4:	dc000515 	stw	r16,20(sp)
   134f8:	dfc00e15 	stw	ra,56(sp)
   134fc:	df000d15 	stw	fp,52(sp)
   13500:	dd000915 	stw	r20,36(sp)
   13504:	dcc00815 	stw	r19,32(sp)
   13508:	dc800715 	stw	r18,28(sp)
   1350c:	dc400615 	stw	r17,24(sp)
   13510:	282d883a 	mov	r22,r5
   13514:	29400007 	ldb	r5,0(r5)
   13518:	202b883a 	mov	r21,r4
   1351c:	21000044 	addi	r4,r4,1
   13520:	3da1c83a 	sub	r16,r7,r22
   13524:	0012de80 	call	12de8 <strchr>
   13528:	102f883a 	mov	r23,r2
   1352c:	10007526 	beq	r2,zero,13704 <strstr+0x274>
   13530:	00c00044 	movi	r3,1
   13534:	80c00a26 	beq	r16,r3,13560 <strstr+0xd0>
   13538:	ac09883a 	add	r4,r21,r16
   1353c:	20800136 	bltu	r4,r2,13544 <strstr+0xb4>
   13540:	2087c83a 	sub	r3,r4,r2
   13544:	008007c4 	movi	r2,31
   13548:	1400112e 	bgeu	r2,r16,13590 <strstr+0x100>
   1354c:	800f883a 	mov	r7,r16
   13550:	b00d883a 	mov	r6,r22
   13554:	180b883a 	mov	r5,r3
   13558:	b809883a 	mov	r4,r23
   1355c:	00130e00 	call	130e0 <two_way_long_needle>
   13560:	dfc00e17 	ldw	ra,56(sp)
   13564:	df000d17 	ldw	fp,52(sp)
   13568:	ddc00c17 	ldw	r23,48(sp)
   1356c:	dd800b17 	ldw	r22,44(sp)
   13570:	dd400a17 	ldw	r21,40(sp)
   13574:	dd000917 	ldw	r20,36(sp)
   13578:	dcc00817 	ldw	r19,32(sp)
   1357c:	dc800717 	ldw	r18,28(sp)
   13580:	dc400617 	ldw	r17,24(sp)
   13584:	dc000517 	ldw	r16,20(sp)
   13588:	dec00f04 	addi	sp,sp,60
   1358c:	f800283a 	ret
   13590:	d80d883a 	mov	r6,sp
   13594:	800b883a 	mov	r5,r16
   13598:	b009883a 	mov	r4,r22
   1359c:	d8c00415 	stw	r3,16(sp)
   135a0:	0012fdc0 	call	12fdc <critical_factorization>
   135a4:	d9400017 	ldw	r5,0(sp)
   135a8:	100d883a 	mov	r6,r2
   135ac:	b009883a 	mov	r4,r22
   135b0:	b14b883a 	add	r5,r22,r5
   135b4:	1039883a 	mov	fp,r2
   135b8:	00179a00 	call	179a0 <memcmp>
   135bc:	d8c00417 	ldw	r3,16(sp)
   135c0:	1000521e 	bne	r2,zero,1370c <strstr+0x27c>
   135c4:	e47fffc4 	addi	r17,fp,-1
   135c8:	04c00044 	movi	r19,1
   135cc:	b445883a 	add	r2,r22,r17
   135d0:	9f27c83a 	sub	r19,r19,fp
   135d4:	0029883a 	mov	r20,zero
   135d8:	002b883a 	mov	r21,zero
   135dc:	d8800215 	stw	r2,8(sp)
   135e0:	e4bfff84 	addi	r18,fp,-2
   135e4:	dcc00115 	stw	r19,4(sp)
   135e8:	8567883a 	add	r19,r16,r21
   135ec:	98cdc83a 	sub	r6,r19,r3
   135f0:	000b883a 	mov	r5,zero
   135f4:	b8c9883a 	add	r4,r23,r3
   135f8:	00178bc0 	call	178bc <memchr>
   135fc:	1000411e 	bne	r2,zero,13704 <strstr+0x274>
   13600:	98004026 	beq	r19,zero,13704 <strstr+0x274>
   13604:	e00b883a 	mov	r5,fp
   13608:	e500012e 	bgeu	fp,r20,13610 <strstr+0x180>
   1360c:	a00b883a 	mov	r5,r20
   13610:	2c00152e 	bgeu	r5,r16,13668 <strstr+0x1d8>
   13614:	b947883a 	add	r3,r23,r5
   13618:	1d47883a 	add	r3,r3,r21
   1361c:	b145883a 	add	r2,r22,r5
   13620:	18c00003 	ldbu	r3,0(r3)
   13624:	10800003 	ldbu	r2,0(r2)
   13628:	1880311e 	bne	r3,r2,136f0 <strstr+0x260>
   1362c:	a8800044 	addi	r2,r21,1
   13630:	28c00044 	addi	r3,r5,1
   13634:	1145883a 	add	r2,r2,r5
   13638:	b0c9883a 	add	r4,r22,r3
   1363c:	b885883a 	add	r2,r23,r2
   13640:	00000706 	br	13660 <strstr+0x1d0>
   13644:	21c00003 	ldbu	r7,0(r4)
   13648:	11800003 	ldbu	r6,0(r2)
   1364c:	21000044 	addi	r4,r4,1
   13650:	39c03fcc 	andi	r7,r7,255
   13654:	10800044 	addi	r2,r2,1
   13658:	3980251e 	bne	r7,r6,136f0 <strstr+0x260>
   1365c:	18c00044 	addi	r3,r3,1
   13660:	180b883a 	mov	r5,r3
   13664:	1c3ff736 	bltu	r3,r16,13644 <_gp+0xfffed588>
   13668:	880d883a 	mov	r6,r17
   1366c:	a700702e 	bgeu	r20,fp,13830 <strstr+0x3a0>
   13670:	d9000217 	ldw	r4,8(sp)
   13674:	bd45883a 	add	r2,r23,r21
   13678:	1445883a 	add	r2,r2,r17
   1367c:	20c00003 	ldbu	r3,0(r4)
   13680:	10800003 	ldbu	r2,0(r2)
   13684:	18806a1e 	bne	r3,r2,13830 <strstr+0x3a0>
   13688:	954b883a 	add	r5,r18,r21
   1368c:	a2bfffc4 	addi	r10,r20,-1
   13690:	b485883a 	add	r2,r22,r18
   13694:	b94b883a 	add	r5,r23,r5
   13698:	b295883a 	add	r10,r22,r10
   1369c:	00000706 	br	136bc <strstr+0x22c>
   136a0:	11000003 	ldbu	r4,0(r2)
   136a4:	28c00003 	ldbu	r3,0(r5)
   136a8:	10bfffc4 	addi	r2,r2,-1
   136ac:	21003fcc 	andi	r4,r4,255
   136b0:	297fffc4 	addi	r5,r5,-1
   136b4:	20c0031e 	bne	r4,r3,136c4 <strstr+0x234>
   136b8:	380d883a 	mov	r6,r7
   136bc:	31ffffc4 	addi	r7,r6,-1
   136c0:	12bff71e 	bne	r2,r10,136a0 <_gp+0xfffed5e4>
   136c4:	a2000044 	addi	r8,r20,1
   136c8:	32005b36 	bltu	r6,r8,13838 <strstr+0x3a8>
   136cc:	da000017 	ldw	r8,0(sp)
   136d0:	aa2b883a 	add	r21,r21,r8
   136d4:	8229c83a 	sub	r20,r16,r8
   136d8:	9807883a 	mov	r3,r19
   136dc:	003fc206 	br	135e8 <_gp+0xfffed52c>
   136e0:	28800007 	ldb	r2,0(r5)
   136e4:	103f7d26 	beq	r2,zero,134dc <_gp+0xfffed420>
   136e8:	0005883a 	mov	r2,zero
   136ec:	f800283a 	ret
   136f0:	d8c00117 	ldw	r3,4(sp)
   136f4:	0029883a 	mov	r20,zero
   136f8:	1d6b883a 	add	r21,r3,r21
   136fc:	a96b883a 	add	r21,r21,r5
   13700:	003ff506 	br	136d8 <_gp+0xfffed61c>
   13704:	0005883a 	mov	r2,zero
   13708:	003f9506 	br	13560 <_gp+0xfffed4a4>
   1370c:	8705c83a 	sub	r2,r16,fp
   13710:	1700012e 	bgeu	r2,fp,13718 <strstr+0x288>
   13714:	e005883a 	mov	r2,fp
   13718:	10800044 	addi	r2,r2,1
   1371c:	e4bfffc4 	addi	r18,fp,-1
   13720:	05000044 	movi	r20,1
   13724:	a729c83a 	sub	r20,r20,fp
   13728:	d8800015 	stw	r2,0(sp)
   1372c:	b48b883a 	add	r5,r22,r18
   13730:	e0bfff84 	addi	r2,fp,-2
   13734:	dd000215 	stw	r20,8(sp)
   13738:	002b883a 	mov	r21,zero
   1373c:	e4400044 	addi	r17,fp,1
   13740:	d9400315 	stw	r5,12(sp)
   13744:	d8800115 	stw	r2,4(sp)
   13748:	b53fffc4 	addi	r20,r22,-1
   1374c:	8567883a 	add	r19,r16,r21
   13750:	98cdc83a 	sub	r6,r19,r3
   13754:	000b883a 	mov	r5,zero
   13758:	b8c9883a 	add	r4,r23,r3
   1375c:	00178bc0 	call	178bc <memchr>
   13760:	103fe81e 	bne	r2,zero,13704 <_gp+0xfffed648>
   13764:	983fe726 	beq	r19,zero,13704 <_gp+0xfffed648>
   13768:	e400132e 	bgeu	fp,r16,137b8 <strstr+0x328>
   1376c:	bf07883a 	add	r3,r23,fp
   13770:	1d47883a 	add	r3,r3,r21
   13774:	b705883a 	add	r2,r22,fp
   13778:	18c00003 	ldbu	r3,0(r3)
   1377c:	10800003 	ldbu	r2,0(r2)
   13780:	1880241e 	bne	r3,r2,13814 <strstr+0x384>
   13784:	ac45883a 	add	r2,r21,r17
   13788:	b44b883a 	add	r5,r22,r17
   1378c:	b885883a 	add	r2,r23,r2
   13790:	e009883a 	mov	r4,fp
   13794:	00000606 	br	137b0 <strstr+0x320>
   13798:	29800003 	ldbu	r6,0(r5)
   1379c:	10c00003 	ldbu	r3,0(r2)
   137a0:	29400044 	addi	r5,r5,1
   137a4:	31803fcc 	andi	r6,r6,255
   137a8:	10800044 	addi	r2,r2,1
   137ac:	30c01a1e 	bne	r6,r3,13818 <strstr+0x388>
   137b0:	21000044 	addi	r4,r4,1
   137b4:	243ff836 	bltu	r4,r16,13798 <_gp+0xfffed6dc>
   137b8:	00bfffc4 	movi	r2,-1
   137bc:	bd49883a 	add	r4,r23,r21
   137c0:	90801926 	beq	r18,r2,13828 <strstr+0x398>
   137c4:	d9400317 	ldw	r5,12(sp)
   137c8:	2485883a 	add	r2,r4,r18
   137cc:	10800003 	ldbu	r2,0(r2)
   137d0:	28c00003 	ldbu	r3,0(r5)
   137d4:	18800b1e 	bne	r3,r2,13804 <strstr+0x374>
   137d8:	d8c00117 	ldw	r3,4(sp)
   137dc:	a8c5883a 	add	r2,r21,r3
   137e0:	b885883a 	add	r2,r23,r2
   137e4:	b0c7883a 	add	r3,r22,r3
   137e8:	1d000f26 	beq	r3,r20,13828 <strstr+0x398>
   137ec:	19800003 	ldbu	r6,0(r3)
   137f0:	11400003 	ldbu	r5,0(r2)
   137f4:	18ffffc4 	addi	r3,r3,-1
   137f8:	31803fcc 	andi	r6,r6,255
   137fc:	10bfffc4 	addi	r2,r2,-1
   13800:	317ff926 	beq	r6,r5,137e8 <_gp+0xfffed72c>
   13804:	d8800017 	ldw	r2,0(sp)
   13808:	a8ab883a 	add	r21,r21,r2
   1380c:	9807883a 	mov	r3,r19
   13810:	003fce06 	br	1374c <_gp+0xfffed690>
   13814:	e009883a 	mov	r4,fp
   13818:	d8c00217 	ldw	r3,8(sp)
   1381c:	1d4f883a 	add	r7,r3,r21
   13820:	392b883a 	add	r21,r7,r4
   13824:	003ff906 	br	1380c <_gp+0xfffed750>
   13828:	2005883a 	mov	r2,r4
   1382c:	003f4c06 	br	13560 <_gp+0xfffed4a4>
   13830:	e00d883a 	mov	r6,fp
   13834:	003fa306 	br	136c4 <_gp+0xfffed608>
   13838:	bd45883a 	add	r2,r23,r21
   1383c:	003f4806 	br	13560 <_gp+0xfffed4a4>

00013840 <___svfprintf_internal_r>:
   13840:	deffb704 	addi	sp,sp,-292
   13844:	dfc04815 	stw	ra,288(sp)
   13848:	ddc04615 	stw	r23,280(sp)
   1384c:	d9402d15 	stw	r5,180(sp)
   13850:	d9003915 	stw	r4,228(sp)
   13854:	302f883a 	mov	r23,r6
   13858:	d9c02e15 	stw	r7,184(sp)
   1385c:	df004715 	stw	fp,284(sp)
   13860:	dd804515 	stw	r22,276(sp)
   13864:	dd404415 	stw	r21,272(sp)
   13868:	dd004315 	stw	r20,268(sp)
   1386c:	dcc04215 	stw	r19,264(sp)
   13870:	dc804115 	stw	r18,260(sp)
   13874:	dc404015 	stw	r17,256(sp)
   13878:	dc003f15 	stw	r16,252(sp)
   1387c:	001788c0 	call	1788c <_localeconv_r>
   13880:	10800017 	ldw	r2,0(r2)
   13884:	1009883a 	mov	r4,r2
   13888:	d8803415 	stw	r2,208(sp)
   1388c:	0018d6c0 	call	18d6c <strlen>
   13890:	d8c02d17 	ldw	r3,180(sp)
   13894:	d8803815 	stw	r2,224(sp)
   13898:	1880030b 	ldhu	r2,12(r3)
   1389c:	1080200c 	andi	r2,r2,128
   138a0:	10000226 	beq	r2,zero,138ac <___svfprintf_internal_r+0x6c>
   138a4:	18800417 	ldw	r2,16(r3)
   138a8:	1006b126 	beq	r2,zero,15370 <___svfprintf_internal_r+0x1b30>
   138ac:	dcc03917 	ldw	r19,228(sp)
   138b0:	d8c00404 	addi	r3,sp,16
   138b4:	054000b4 	movhi	r21,2
   138b8:	d9001e04 	addi	r4,sp,120
   138bc:	ad758184 	addi	r21,r21,-10746
   138c0:	d8c01e15 	stw	r3,120(sp)
   138c4:	d8002015 	stw	zero,128(sp)
   138c8:	d8001f15 	stw	zero,124(sp)
   138cc:	d8003315 	stw	zero,204(sp)
   138d0:	d8003615 	stw	zero,216(sp)
   138d4:	d8003715 	stw	zero,220(sp)
   138d8:	1811883a 	mov	r8,r3
   138dc:	d8003a15 	stw	zero,232(sp)
   138e0:	d8003b15 	stw	zero,236(sp)
   138e4:	d8002f15 	stw	zero,188(sp)
   138e8:	d9002815 	stw	r4,160(sp)
   138ec:	b8800007 	ldb	r2,0(r23)
   138f0:	10027726 	beq	r2,zero,142d0 <___svfprintf_internal_r+0xa90>
   138f4:	00c00944 	movi	r3,37
   138f8:	b823883a 	mov	r17,r23
   138fc:	10c0021e 	bne	r2,r3,13908 <___svfprintf_internal_r+0xc8>
   13900:	00001406 	br	13954 <___svfprintf_internal_r+0x114>
   13904:	10c00326 	beq	r2,r3,13914 <___svfprintf_internal_r+0xd4>
   13908:	8c400044 	addi	r17,r17,1
   1390c:	88800007 	ldb	r2,0(r17)
   13910:	103ffc1e 	bne	r2,zero,13904 <_gp+0xfffed848>
   13914:	8de1c83a 	sub	r16,r17,r23
   13918:	80000e26 	beq	r16,zero,13954 <___svfprintf_internal_r+0x114>
   1391c:	d8c02017 	ldw	r3,128(sp)
   13920:	d8801f17 	ldw	r2,124(sp)
   13924:	45c00015 	stw	r23,0(r8)
   13928:	1c07883a 	add	r3,r3,r16
   1392c:	10800044 	addi	r2,r2,1
   13930:	d8c02015 	stw	r3,128(sp)
   13934:	44000115 	stw	r16,4(r8)
   13938:	d8801f15 	stw	r2,124(sp)
   1393c:	00c001c4 	movi	r3,7
   13940:	18809916 	blt	r3,r2,13ba8 <___svfprintf_internal_r+0x368>
   13944:	42000204 	addi	r8,r8,8
   13948:	d9402f17 	ldw	r5,188(sp)
   1394c:	2c0b883a 	add	r5,r5,r16
   13950:	d9402f15 	stw	r5,188(sp)
   13954:	88800007 	ldb	r2,0(r17)
   13958:	10009a26 	beq	r2,zero,13bc4 <___svfprintf_internal_r+0x384>
   1395c:	8dc00044 	addi	r23,r17,1
   13960:	8c400047 	ldb	r17,1(r17)
   13964:	0021883a 	mov	r16,zero
   13968:	00bfffc4 	movi	r2,-1
   1396c:	0025883a 	mov	r18,zero
   13970:	dc002905 	stb	r16,164(sp)
   13974:	d8002785 	stb	zero,158(sp)
   13978:	d8002b05 	stb	zero,172(sp)
   1397c:	d8802a15 	stw	r2,168(sp)
   13980:	d8003115 	stw	zero,196(sp)
   13984:	05001604 	movi	r20,88
   13988:	05800244 	movi	r22,9
   1398c:	4039883a 	mov	fp,r8
   13990:	9021883a 	mov	r16,r18
   13994:	bdc00044 	addi	r23,r23,1
   13998:	88bff804 	addi	r2,r17,-32
   1399c:	a0831e36 	bltu	r20,r2,14618 <___svfprintf_internal_r+0xdd8>
   139a0:	100490ba 	slli	r2,r2,2
   139a4:	00c00074 	movhi	r3,1
   139a8:	18ce6e04 	addi	r3,r3,14776
   139ac:	10c5883a 	add	r2,r2,r3
   139b0:	10800017 	ldw	r2,0(r2)
   139b4:	1000683a 	jmp	r2
   139b8:	00014560 	cmpeqi	zero,zero,1301
   139bc:	00014618 	cmpnei	zero,zero,1304
   139c0:	00014618 	cmpnei	zero,zero,1304
   139c4:	00014554 	movui	zero,1301
   139c8:	00014618 	cmpnei	zero,zero,1304
   139cc:	00014618 	cmpnei	zero,zero,1304
   139d0:	00014618 	cmpnei	zero,zero,1304
   139d4:	00014618 	cmpnei	zero,zero,1304
   139d8:	00014618 	cmpnei	zero,zero,1304
   139dc:	00014618 	cmpnei	zero,zero,1304
   139e0:	00013c20 	cmpeqi	zero,zero,1264
   139e4:	00014464 	muli	zero,zero,1297
   139e8:	00014618 	cmpnei	zero,zero,1304
   139ec:	00013b2c 	andhi	zero,zero,1260
   139f0:	00013c44 	movi	zero,1265
   139f4:	00014618 	cmpnei	zero,zero,1304
   139f8:	00013cd0 	cmplti	zero,zero,1267
   139fc:	00013c94 	movui	zero,1266
   13a00:	00013c94 	movui	zero,1266
   13a04:	00013c94 	movui	zero,1266
   13a08:	00013c94 	movui	zero,1266
   13a0c:	00013c94 	movui	zero,1266
   13a10:	00013c94 	movui	zero,1266
   13a14:	00013c94 	movui	zero,1266
   13a18:	00013c94 	movui	zero,1266
   13a1c:	00013c94 	movui	zero,1266
   13a20:	00014618 	cmpnei	zero,zero,1304
   13a24:	00014618 	cmpnei	zero,zero,1304
   13a28:	00014618 	cmpnei	zero,zero,1304
   13a2c:	00014618 	cmpnei	zero,zero,1304
   13a30:	00014618 	cmpnei	zero,zero,1304
   13a34:	00014618 	cmpnei	zero,zero,1304
   13a38:	00014618 	cmpnei	zero,zero,1304
   13a3c:	00014618 	cmpnei	zero,zero,1304
   13a40:	00014618 	cmpnei	zero,zero,1304
   13a44:	00014618 	cmpnei	zero,zero,1304
   13a48:	00013d94 	movui	zero,1270
   13a4c:	00013cdc 	xori	zero,zero,1267
   13a50:	00014618 	cmpnei	zero,zero,1304
   13a54:	00013cdc 	xori	zero,zero,1267
   13a58:	00014618 	cmpnei	zero,zero,1304
   13a5c:	00014618 	cmpnei	zero,zero,1304
   13a60:	00014618 	cmpnei	zero,zero,1304
   13a64:	00014618 	cmpnei	zero,zero,1304
   13a68:	00013d88 	cmpgei	zero,zero,1270
   13a6c:	00014618 	cmpnei	zero,zero,1304
   13a70:	00014618 	cmpnei	zero,zero,1304
   13a74:	00013e5c 	xori	zero,zero,1273
   13a78:	00014618 	cmpnei	zero,zero,1304
   13a7c:	00014618 	cmpnei	zero,zero,1304
   13a80:	00014618 	cmpnei	zero,zero,1304
   13a84:	00014618 	cmpnei	zero,zero,1304
   13a88:	00014618 	cmpnei	zero,zero,1304
   13a8c:	000142d8 	cmpnei	zero,zero,1291
   13a90:	00014618 	cmpnei	zero,zero,1304
   13a94:	00014618 	cmpnei	zero,zero,1304
   13a98:	00014344 	movi	zero,1293
   13a9c:	00014618 	cmpnei	zero,zero,1304
   13aa0:	00014618 	cmpnei	zero,zero,1304
   13aa4:	00014618 	cmpnei	zero,zero,1304
   13aa8:	00014618 	cmpnei	zero,zero,1304
   13aac:	00014618 	cmpnei	zero,zero,1304
   13ab0:	00014618 	cmpnei	zero,zero,1304
   13ab4:	00014618 	cmpnei	zero,zero,1304
   13ab8:	00014618 	cmpnei	zero,zero,1304
   13abc:	00014618 	cmpnei	zero,zero,1304
   13ac0:	00014618 	cmpnei	zero,zero,1304
   13ac4:	00014400 	call	1440 <__alt_mem_onchip_memory-0xebc0>
   13ac8:	00014580 	call	1458 <__alt_mem_onchip_memory-0xeba8>
   13acc:	00013cdc 	xori	zero,zero,1267
   13ad0:	00013cdc 	xori	zero,zero,1267
   13ad4:	00013cdc 	xori	zero,zero,1267
   13ad8:	000145f4 	movhi	zero,1303
   13adc:	00014580 	call	1458 <__alt_mem_onchip_memory-0xeba8>
   13ae0:	00014618 	cmpnei	zero,zero,1304
   13ae4:	00014618 	cmpnei	zero,zero,1304
   13ae8:	000145a0 	cmpeqi	zero,zero,1302
   13aec:	00014618 	cmpnei	zero,zero,1304
   13af0:	000145b4 	movhi	zero,1302
   13af4:	00014444 	movi	zero,1297
   13af8:	00013b38 	rdprs	zero,zero,1260
   13afc:	0001447c 	xorhi	zero,zero,1297
   13b00:	00014618 	cmpnei	zero,zero,1304
   13b04:	00014488 	cmpgei	zero,zero,1298
   13b08:	00014618 	cmpnei	zero,zero,1304
   13b0c:	000144ec 	andhi	zero,zero,1299
   13b10:	00014618 	cmpnei	zero,zero,1304
   13b14:	00014618 	cmpnei	zero,zero,1304
   13b18:	0001450c 	andi	zero,zero,1300
   13b1c:	d8c03117 	ldw	r3,196(sp)
   13b20:	d8802e15 	stw	r2,184(sp)
   13b24:	00c7c83a 	sub	r3,zero,r3
   13b28:	d8c03115 	stw	r3,196(sp)
   13b2c:	84000114 	ori	r16,r16,4
   13b30:	bc400007 	ldb	r17,0(r23)
   13b34:	003f9706 	br	13994 <_gp+0xfffed8d8>
   13b38:	00800c04 	movi	r2,48
   13b3c:	d8802705 	stb	r2,156(sp)
   13b40:	00801e04 	movi	r2,120
   13b44:	d8802745 	stb	r2,157(sp)
   13b48:	d9002a17 	ldw	r4,168(sp)
   13b4c:	d8802e17 	ldw	r2,184(sp)
   13b50:	d8002785 	stb	zero,158(sp)
   13b54:	e011883a 	mov	r8,fp
   13b58:	10c00104 	addi	r3,r2,4
   13b5c:	15000017 	ldw	r20,0(r2)
   13b60:	002d883a 	mov	r22,zero
   13b64:	80800094 	ori	r2,r16,2
   13b68:	2002b616 	blt	r4,zero,14644 <___svfprintf_internal_r+0xe04>
   13b6c:	00bfdfc4 	movi	r2,-129
   13b70:	80a4703a 	and	r18,r16,r2
   13b74:	d8c02e15 	stw	r3,184(sp)
   13b78:	94800094 	ori	r18,r18,2
   13b7c:	a002a01e 	bne	r20,zero,14600 <___svfprintf_internal_r+0xdc0>
   13b80:	014000b4 	movhi	r5,2
   13b84:	29757a04 	addi	r5,r5,-10776
   13b88:	d9403a15 	stw	r5,232(sp)
   13b8c:	04401e04 	movi	r17,120
   13b90:	d8c02a17 	ldw	r3,168(sp)
   13b94:	0039883a 	mov	fp,zero
   13b98:	1801e626 	beq	r3,zero,14334 <___svfprintf_internal_r+0xaf4>
   13b9c:	0029883a 	mov	r20,zero
   13ba0:	002d883a 	mov	r22,zero
   13ba4:	00020506 	br	143bc <___svfprintf_internal_r+0xb7c>
   13ba8:	d9402d17 	ldw	r5,180(sp)
   13bac:	d9801e04 	addi	r6,sp,120
   13bb0:	9809883a 	mov	r4,r19
   13bb4:	0018e040 	call	18e04 <__ssprint_r>
   13bb8:	1000081e 	bne	r2,zero,13bdc <___svfprintf_internal_r+0x39c>
   13bbc:	da000404 	addi	r8,sp,16
   13bc0:	003f6106 	br	13948 <_gp+0xfffed88c>
   13bc4:	d8802017 	ldw	r2,128(sp)
   13bc8:	10000426 	beq	r2,zero,13bdc <___svfprintf_internal_r+0x39c>
   13bcc:	d9402d17 	ldw	r5,180(sp)
   13bd0:	d9003917 	ldw	r4,228(sp)
   13bd4:	d9801e04 	addi	r6,sp,120
   13bd8:	0018e040 	call	18e04 <__ssprint_r>
   13bdc:	d8802d17 	ldw	r2,180(sp)
   13be0:	10c0030b 	ldhu	r3,12(r2)
   13be4:	d8802f17 	ldw	r2,188(sp)
   13be8:	18c0100c 	andi	r3,r3,64
   13bec:	1806251e 	bne	r3,zero,15484 <___svfprintf_internal_r+0x1c44>
   13bf0:	dfc04817 	ldw	ra,288(sp)
   13bf4:	df004717 	ldw	fp,284(sp)
   13bf8:	ddc04617 	ldw	r23,280(sp)
   13bfc:	dd804517 	ldw	r22,276(sp)
   13c00:	dd404417 	ldw	r21,272(sp)
   13c04:	dd004317 	ldw	r20,268(sp)
   13c08:	dcc04217 	ldw	r19,264(sp)
   13c0c:	dc804117 	ldw	r18,260(sp)
   13c10:	dc404017 	ldw	r17,256(sp)
   13c14:	dc003f17 	ldw	r16,252(sp)
   13c18:	dec04904 	addi	sp,sp,292
   13c1c:	f800283a 	ret
   13c20:	d9002e17 	ldw	r4,184(sp)
   13c24:	d9402e17 	ldw	r5,184(sp)
   13c28:	21000017 	ldw	r4,0(r4)
   13c2c:	28800104 	addi	r2,r5,4
   13c30:	d9003115 	stw	r4,196(sp)
   13c34:	203fb916 	blt	r4,zero,13b1c <_gp+0xfffeda60>
   13c38:	d8802e15 	stw	r2,184(sp)
   13c3c:	bc400007 	ldb	r17,0(r23)
   13c40:	003f5406 	br	13994 <_gp+0xfffed8d8>
   13c44:	bc400007 	ldb	r17,0(r23)
   13c48:	01000a84 	movi	r4,42
   13c4c:	b8c00044 	addi	r3,r23,1
   13c50:	89076926 	beq	r17,r4,159f8 <___svfprintf_internal_r+0x21b8>
   13c54:	8cbff404 	addi	r18,r17,-48
   13c58:	b486b936 	bltu	r22,r18,15740 <___svfprintf_internal_r+0x1f00>
   13c5c:	0009883a 	mov	r4,zero
   13c60:	1823883a 	mov	r17,r3
   13c64:	01400284 	movi	r5,10
   13c68:	00122700 	call	12270 <__mulsi3>
   13c6c:	88c00007 	ldb	r3,0(r17)
   13c70:	1489883a 	add	r4,r2,r18
   13c74:	8dc00044 	addi	r23,r17,1
   13c78:	1cbff404 	addi	r18,r3,-48
   13c7c:	b823883a 	mov	r17,r23
   13c80:	b4bff82e 	bgeu	r22,r18,13c64 <_gp+0xfffedba8>
   13c84:	1823883a 	mov	r17,r3
   13c88:	20060416 	blt	r4,zero,1549c <___svfprintf_internal_r+0x1c5c>
   13c8c:	d9002a15 	stw	r4,168(sp)
   13c90:	003f4106 	br	13998 <_gp+0xfffed8dc>
   13c94:	8cbff404 	addi	r18,r17,-48
   13c98:	d8003115 	stw	zero,196(sp)
   13c9c:	0009883a 	mov	r4,zero
   13ca0:	b823883a 	mov	r17,r23
   13ca4:	01400284 	movi	r5,10
   13ca8:	00122700 	call	12270 <__mulsi3>
   13cac:	88c00007 	ldb	r3,0(r17)
   13cb0:	9089883a 	add	r4,r18,r2
   13cb4:	bdc00044 	addi	r23,r23,1
   13cb8:	1cbff404 	addi	r18,r3,-48
   13cbc:	b823883a 	mov	r17,r23
   13cc0:	b4bff82e 	bgeu	r22,r18,13ca4 <_gp+0xfffedbe8>
   13cc4:	1823883a 	mov	r17,r3
   13cc8:	d9003115 	stw	r4,196(sp)
   13ccc:	003f3206 	br	13998 <_gp+0xfffed8dc>
   13cd0:	84002014 	ori	r16,r16,128
   13cd4:	bc400007 	ldb	r17,0(r23)
   13cd8:	003f2e06 	br	13994 <_gp+0xfffed8d8>
   13cdc:	8025883a 	mov	r18,r16
   13ce0:	dc002903 	ldbu	r16,164(sp)
   13ce4:	e011883a 	mov	r8,fp
   13ce8:	84003fcc 	andi	r16,r16,255
   13cec:	8007721e 	bne	r16,zero,15ab8 <___svfprintf_internal_r+0x2278>
   13cf0:	9080020c 	andi	r2,r18,8
   13cf4:	1004a526 	beq	r2,zero,14f8c <___svfprintf_internal_r+0x174c>
   13cf8:	d9002e17 	ldw	r4,184(sp)
   13cfc:	d9402e17 	ldw	r5,184(sp)
   13d00:	d8802e17 	ldw	r2,184(sp)
   13d04:	21000017 	ldw	r4,0(r4)
   13d08:	29400117 	ldw	r5,4(r5)
   13d0c:	10800204 	addi	r2,r2,8
   13d10:	d9003615 	stw	r4,216(sp)
   13d14:	d9403715 	stw	r5,220(sp)
   13d18:	d8802e15 	stw	r2,184(sp)
   13d1c:	d9003617 	ldw	r4,216(sp)
   13d20:	d9403717 	ldw	r5,220(sp)
   13d24:	da003e15 	stw	r8,248(sp)
   13d28:	04000044 	movi	r16,1
   13d2c:	0018c1c0 	call	18c1c <__fpclassifyd>
   13d30:	da003e17 	ldw	r8,248(sp)
   13d34:	1404731e 	bne	r2,r16,14f04 <___svfprintf_internal_r+0x16c4>
   13d38:	d9003617 	ldw	r4,216(sp)
   13d3c:	d9403717 	ldw	r5,220(sp)
   13d40:	000d883a 	mov	r6,zero
   13d44:	000f883a 	mov	r7,zero
   13d48:	001c2040 	call	1c204 <__ledf2>
   13d4c:	da003e17 	ldw	r8,248(sp)
   13d50:	10061b16 	blt	r2,zero,155c0 <___svfprintf_internal_r+0x1d80>
   13d54:	df002783 	ldbu	fp,158(sp)
   13d58:	008011c4 	movi	r2,71
   13d5c:	1445810e 	bge	r2,r17,15364 <___svfprintf_internal_r+0x1b24>
   13d60:	040000b4 	movhi	r16,2
   13d64:	84357204 	addi	r16,r16,-10808
   13d68:	00c000c4 	movi	r3,3
   13d6c:	00bfdfc4 	movi	r2,-129
   13d70:	d8c02915 	stw	r3,164(sp)
   13d74:	90a4703a 	and	r18,r18,r2
   13d78:	d8c02b15 	stw	r3,172(sp)
   13d7c:	d8002a15 	stw	zero,168(sp)
   13d80:	d8003215 	stw	zero,200(sp)
   13d84:	00006c06 	br	13f38 <___svfprintf_internal_r+0x6f8>
   13d88:	84000214 	ori	r16,r16,8
   13d8c:	bc400007 	ldb	r17,0(r23)
   13d90:	003f0006 	br	13994 <_gp+0xfffed8d8>
   13d94:	8025883a 	mov	r18,r16
   13d98:	dc002903 	ldbu	r16,164(sp)
   13d9c:	e011883a 	mov	r8,fp
   13da0:	84003fcc 	andi	r16,r16,255
   13da4:	80073f1e 	bne	r16,zero,15aa4 <___svfprintf_internal_r+0x2264>
   13da8:	94800414 	ori	r18,r18,16
   13dac:	9080080c 	andi	r2,r18,32
   13db0:	1003bb26 	beq	r2,zero,14ca0 <___svfprintf_internal_r+0x1460>
   13db4:	d9002e17 	ldw	r4,184(sp)
   13db8:	20800117 	ldw	r2,4(r4)
   13dbc:	25000017 	ldw	r20,0(r4)
   13dc0:	21000204 	addi	r4,r4,8
   13dc4:	d9002e15 	stw	r4,184(sp)
   13dc8:	102d883a 	mov	r22,r2
   13dcc:	1003bd16 	blt	r2,zero,14cc4 <___svfprintf_internal_r+0x1484>
   13dd0:	d9002a17 	ldw	r4,168(sp)
   13dd4:	df002783 	ldbu	fp,158(sp)
   13dd8:	2003d016 	blt	r4,zero,14d1c <___svfprintf_internal_r+0x14dc>
   13ddc:	00ffdfc4 	movi	r3,-129
   13de0:	a584b03a 	or	r2,r20,r22
   13de4:	90e4703a 	and	r18,r18,r3
   13de8:	10015026 	beq	r2,zero,1432c <___svfprintf_internal_r+0xaec>
   13dec:	b0037026 	beq	r22,zero,14bb0 <___svfprintf_internal_r+0x1370>
   13df0:	dc402915 	stw	r17,164(sp)
   13df4:	dc001e04 	addi	r16,sp,120
   13df8:	b023883a 	mov	r17,r22
   13dfc:	402d883a 	mov	r22,r8
   13e00:	a009883a 	mov	r4,r20
   13e04:	880b883a 	mov	r5,r17
   13e08:	01800284 	movi	r6,10
   13e0c:	000f883a 	mov	r7,zero
   13e10:	001b10c0 	call	1b10c <__umoddi3>
   13e14:	10800c04 	addi	r2,r2,48
   13e18:	843fffc4 	addi	r16,r16,-1
   13e1c:	a009883a 	mov	r4,r20
   13e20:	880b883a 	mov	r5,r17
   13e24:	80800005 	stb	r2,0(r16)
   13e28:	01800284 	movi	r6,10
   13e2c:	000f883a 	mov	r7,zero
   13e30:	001ab100 	call	1ab10 <__udivdi3>
   13e34:	1029883a 	mov	r20,r2
   13e38:	10c4b03a 	or	r2,r2,r3
   13e3c:	1823883a 	mov	r17,r3
   13e40:	103fef1e 	bne	r2,zero,13e00 <_gp+0xfffedd44>
   13e44:	d8c02817 	ldw	r3,160(sp)
   13e48:	dc402917 	ldw	r17,164(sp)
   13e4c:	b011883a 	mov	r8,r22
   13e50:	1c07c83a 	sub	r3,r3,r16
   13e54:	d8c02b15 	stw	r3,172(sp)
   13e58:	00003106 	br	13f20 <___svfprintf_internal_r+0x6e0>
   13e5c:	8025883a 	mov	r18,r16
   13e60:	dc002903 	ldbu	r16,164(sp)
   13e64:	e011883a 	mov	r8,fp
   13e68:	84003fcc 	andi	r16,r16,255
   13e6c:	80070a1e 	bne	r16,zero,15a98 <___svfprintf_internal_r+0x2258>
   13e70:	94800414 	ori	r18,r18,16
   13e74:	9080080c 	andi	r2,r18,32
   13e78:	1002f626 	beq	r2,zero,14a54 <___svfprintf_internal_r+0x1214>
   13e7c:	d9002e17 	ldw	r4,184(sp)
   13e80:	d9402a17 	ldw	r5,168(sp)
   13e84:	d8002785 	stb	zero,158(sp)
   13e88:	20800204 	addi	r2,r4,8
   13e8c:	25000017 	ldw	r20,0(r4)
   13e90:	25800117 	ldw	r22,4(r4)
   13e94:	28043716 	blt	r5,zero,14f74 <___svfprintf_internal_r+0x1734>
   13e98:	013fdfc4 	movi	r4,-129
   13e9c:	a586b03a 	or	r3,r20,r22
   13ea0:	d8802e15 	stw	r2,184(sp)
   13ea4:	9124703a 	and	r18,r18,r4
   13ea8:	1802f71e 	bne	r3,zero,14a88 <___svfprintf_internal_r+0x1248>
   13eac:	d9402a17 	ldw	r5,168(sp)
   13eb0:	0039883a 	mov	fp,zero
   13eb4:	2806df26 	beq	r5,zero,15a34 <___svfprintf_internal_r+0x21f4>
   13eb8:	0029883a 	mov	r20,zero
   13ebc:	002d883a 	mov	r22,zero
   13ec0:	dc001e04 	addi	r16,sp,120
   13ec4:	a006d0fa 	srli	r3,r20,3
   13ec8:	b008977a 	slli	r4,r22,29
   13ecc:	b02cd0fa 	srli	r22,r22,3
   13ed0:	a50001cc 	andi	r20,r20,7
   13ed4:	a0800c04 	addi	r2,r20,48
   13ed8:	843fffc4 	addi	r16,r16,-1
   13edc:	20e8b03a 	or	r20,r4,r3
   13ee0:	80800005 	stb	r2,0(r16)
   13ee4:	a586b03a 	or	r3,r20,r22
   13ee8:	183ff61e 	bne	r3,zero,13ec4 <_gp+0xfffede08>
   13eec:	90c0004c 	andi	r3,r18,1
   13ef0:	18013f26 	beq	r3,zero,143f0 <___svfprintf_internal_r+0xbb0>
   13ef4:	10803fcc 	andi	r2,r2,255
   13ef8:	1080201c 	xori	r2,r2,128
   13efc:	10bfe004 	addi	r2,r2,-128
   13f00:	00c00c04 	movi	r3,48
   13f04:	10c13a26 	beq	r2,r3,143f0 <___svfprintf_internal_r+0xbb0>
   13f08:	80ffffc5 	stb	r3,-1(r16)
   13f0c:	d8c02817 	ldw	r3,160(sp)
   13f10:	80bfffc4 	addi	r2,r16,-1
   13f14:	1021883a 	mov	r16,r2
   13f18:	1887c83a 	sub	r3,r3,r2
   13f1c:	d8c02b15 	stw	r3,172(sp)
   13f20:	d8802b17 	ldw	r2,172(sp)
   13f24:	d9002a17 	ldw	r4,168(sp)
   13f28:	1100010e 	bge	r2,r4,13f30 <___svfprintf_internal_r+0x6f0>
   13f2c:	2005883a 	mov	r2,r4
   13f30:	d8802915 	stw	r2,164(sp)
   13f34:	d8003215 	stw	zero,200(sp)
   13f38:	e7003fcc 	andi	fp,fp,255
   13f3c:	e700201c 	xori	fp,fp,128
   13f40:	e73fe004 	addi	fp,fp,-128
   13f44:	e0000326 	beq	fp,zero,13f54 <___svfprintf_internal_r+0x714>
   13f48:	d8c02917 	ldw	r3,164(sp)
   13f4c:	18c00044 	addi	r3,r3,1
   13f50:	d8c02915 	stw	r3,164(sp)
   13f54:	90c0008c 	andi	r3,r18,2
   13f58:	d8c02c15 	stw	r3,176(sp)
   13f5c:	18000326 	beq	r3,zero,13f6c <___svfprintf_internal_r+0x72c>
   13f60:	d8c02917 	ldw	r3,164(sp)
   13f64:	18c00084 	addi	r3,r3,2
   13f68:	d8c02915 	stw	r3,164(sp)
   13f6c:	90c0210c 	andi	r3,r18,132
   13f70:	d8c03015 	stw	r3,192(sp)
   13f74:	1801c31e 	bne	r3,zero,14684 <___svfprintf_internal_r+0xe44>
   13f78:	d9003117 	ldw	r4,196(sp)
   13f7c:	d8c02917 	ldw	r3,164(sp)
   13f80:	20e9c83a 	sub	r20,r4,r3
   13f84:	0501bf0e 	bge	zero,r20,14684 <___svfprintf_internal_r+0xe44>
   13f88:	02400404 	movi	r9,16
   13f8c:	d8c02017 	ldw	r3,128(sp)
   13f90:	d8801f17 	ldw	r2,124(sp)
   13f94:	4d053d0e 	bge	r9,r20,1548c <___svfprintf_internal_r+0x1c4c>
   13f98:	014000b4 	movhi	r5,2
   13f9c:	29758584 	addi	r5,r5,-10730
   13fa0:	dc403c15 	stw	r17,240(sp)
   13fa4:	d9403515 	stw	r5,212(sp)
   13fa8:	a023883a 	mov	r17,r20
   13fac:	482d883a 	mov	r22,r9
   13fb0:	9029883a 	mov	r20,r18
   13fb4:	070001c4 	movi	fp,7
   13fb8:	8025883a 	mov	r18,r16
   13fbc:	dc002d17 	ldw	r16,180(sp)
   13fc0:	00000306 	br	13fd0 <___svfprintf_internal_r+0x790>
   13fc4:	8c7ffc04 	addi	r17,r17,-16
   13fc8:	42000204 	addi	r8,r8,8
   13fcc:	b440130e 	bge	r22,r17,1401c <___svfprintf_internal_r+0x7dc>
   13fd0:	010000b4 	movhi	r4,2
   13fd4:	18c00404 	addi	r3,r3,16
   13fd8:	10800044 	addi	r2,r2,1
   13fdc:	21358584 	addi	r4,r4,-10730
   13fe0:	41000015 	stw	r4,0(r8)
   13fe4:	45800115 	stw	r22,4(r8)
   13fe8:	d8c02015 	stw	r3,128(sp)
   13fec:	d8801f15 	stw	r2,124(sp)
   13ff0:	e0bff40e 	bge	fp,r2,13fc4 <_gp+0xfffedf08>
   13ff4:	d9801e04 	addi	r6,sp,120
   13ff8:	800b883a 	mov	r5,r16
   13ffc:	9809883a 	mov	r4,r19
   14000:	0018e040 	call	18e04 <__ssprint_r>
   14004:	103ef51e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14008:	8c7ffc04 	addi	r17,r17,-16
   1400c:	d8c02017 	ldw	r3,128(sp)
   14010:	d8801f17 	ldw	r2,124(sp)
   14014:	da000404 	addi	r8,sp,16
   14018:	b47fed16 	blt	r22,r17,13fd0 <_gp+0xfffedf14>
   1401c:	9021883a 	mov	r16,r18
   14020:	a025883a 	mov	r18,r20
   14024:	8829883a 	mov	r20,r17
   14028:	dc403c17 	ldw	r17,240(sp)
   1402c:	d9403517 	ldw	r5,212(sp)
   14030:	a0c7883a 	add	r3,r20,r3
   14034:	10800044 	addi	r2,r2,1
   14038:	41400015 	stw	r5,0(r8)
   1403c:	45000115 	stw	r20,4(r8)
   14040:	d8c02015 	stw	r3,128(sp)
   14044:	d8801f15 	stw	r2,124(sp)
   14048:	010001c4 	movi	r4,7
   1404c:	2082c116 	blt	r4,r2,14b54 <___svfprintf_internal_r+0x1314>
   14050:	df002787 	ldb	fp,158(sp)
   14054:	42000204 	addi	r8,r8,8
   14058:	e0000c26 	beq	fp,zero,1408c <___svfprintf_internal_r+0x84c>
   1405c:	d8801f17 	ldw	r2,124(sp)
   14060:	d9002784 	addi	r4,sp,158
   14064:	18c00044 	addi	r3,r3,1
   14068:	10800044 	addi	r2,r2,1
   1406c:	41000015 	stw	r4,0(r8)
   14070:	01000044 	movi	r4,1
   14074:	41000115 	stw	r4,4(r8)
   14078:	d8c02015 	stw	r3,128(sp)
   1407c:	d8801f15 	stw	r2,124(sp)
   14080:	010001c4 	movi	r4,7
   14084:	20825a16 	blt	r4,r2,149f0 <___svfprintf_internal_r+0x11b0>
   14088:	42000204 	addi	r8,r8,8
   1408c:	d8802c17 	ldw	r2,176(sp)
   14090:	10000c26 	beq	r2,zero,140c4 <___svfprintf_internal_r+0x884>
   14094:	d8801f17 	ldw	r2,124(sp)
   14098:	d9002704 	addi	r4,sp,156
   1409c:	18c00084 	addi	r3,r3,2
   140a0:	10800044 	addi	r2,r2,1
   140a4:	41000015 	stw	r4,0(r8)
   140a8:	01000084 	movi	r4,2
   140ac:	41000115 	stw	r4,4(r8)
   140b0:	d8c02015 	stw	r3,128(sp)
   140b4:	d8801f15 	stw	r2,124(sp)
   140b8:	010001c4 	movi	r4,7
   140bc:	20825416 	blt	r4,r2,14a10 <___svfprintf_internal_r+0x11d0>
   140c0:	42000204 	addi	r8,r8,8
   140c4:	d9003017 	ldw	r4,192(sp)
   140c8:	00802004 	movi	r2,128
   140cc:	2081b926 	beq	r4,r2,147b4 <___svfprintf_internal_r+0xf74>
   140d0:	d9402a17 	ldw	r5,168(sp)
   140d4:	d8802b17 	ldw	r2,172(sp)
   140d8:	28adc83a 	sub	r22,r5,r2
   140dc:	05802f0e 	bge	zero,r22,1419c <___svfprintf_internal_r+0x95c>
   140e0:	07000404 	movi	fp,16
   140e4:	d8801f17 	ldw	r2,124(sp)
   140e8:	e583e20e 	bge	fp,r22,15074 <___svfprintf_internal_r+0x1834>
   140ec:	014000b4 	movhi	r5,2
   140f0:	29758184 	addi	r5,r5,-10746
   140f4:	dc402a15 	stw	r17,168(sp)
   140f8:	d9402c15 	stw	r5,176(sp)
   140fc:	b023883a 	mov	r17,r22
   14100:	050001c4 	movi	r20,7
   14104:	902d883a 	mov	r22,r18
   14108:	8025883a 	mov	r18,r16
   1410c:	dc002d17 	ldw	r16,180(sp)
   14110:	00000306 	br	14120 <___svfprintf_internal_r+0x8e0>
   14114:	8c7ffc04 	addi	r17,r17,-16
   14118:	42000204 	addi	r8,r8,8
   1411c:	e440110e 	bge	fp,r17,14164 <___svfprintf_internal_r+0x924>
   14120:	18c00404 	addi	r3,r3,16
   14124:	10800044 	addi	r2,r2,1
   14128:	45400015 	stw	r21,0(r8)
   1412c:	47000115 	stw	fp,4(r8)
   14130:	d8c02015 	stw	r3,128(sp)
   14134:	d8801f15 	stw	r2,124(sp)
   14138:	a0bff60e 	bge	r20,r2,14114 <_gp+0xfffee058>
   1413c:	d9801e04 	addi	r6,sp,120
   14140:	800b883a 	mov	r5,r16
   14144:	9809883a 	mov	r4,r19
   14148:	0018e040 	call	18e04 <__ssprint_r>
   1414c:	103ea31e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14150:	8c7ffc04 	addi	r17,r17,-16
   14154:	d8c02017 	ldw	r3,128(sp)
   14158:	d8801f17 	ldw	r2,124(sp)
   1415c:	da000404 	addi	r8,sp,16
   14160:	e47fef16 	blt	fp,r17,14120 <_gp+0xfffee064>
   14164:	9021883a 	mov	r16,r18
   14168:	b025883a 	mov	r18,r22
   1416c:	882d883a 	mov	r22,r17
   14170:	dc402a17 	ldw	r17,168(sp)
   14174:	d9002c17 	ldw	r4,176(sp)
   14178:	1d87883a 	add	r3,r3,r22
   1417c:	10800044 	addi	r2,r2,1
   14180:	41000015 	stw	r4,0(r8)
   14184:	45800115 	stw	r22,4(r8)
   14188:	d8c02015 	stw	r3,128(sp)
   1418c:	d8801f15 	stw	r2,124(sp)
   14190:	010001c4 	movi	r4,7
   14194:	20820e16 	blt	r4,r2,149d0 <___svfprintf_internal_r+0x1190>
   14198:	42000204 	addi	r8,r8,8
   1419c:	9080400c 	andi	r2,r18,256
   141a0:	10013a1e 	bne	r2,zero,1468c <___svfprintf_internal_r+0xe4c>
   141a4:	d9402b17 	ldw	r5,172(sp)
   141a8:	d8801f17 	ldw	r2,124(sp)
   141ac:	44000015 	stw	r16,0(r8)
   141b0:	1947883a 	add	r3,r3,r5
   141b4:	10800044 	addi	r2,r2,1
   141b8:	41400115 	stw	r5,4(r8)
   141bc:	d8c02015 	stw	r3,128(sp)
   141c0:	d8801f15 	stw	r2,124(sp)
   141c4:	010001c4 	movi	r4,7
   141c8:	2081f316 	blt	r4,r2,14998 <___svfprintf_internal_r+0x1158>
   141cc:	42000204 	addi	r8,r8,8
   141d0:	9480010c 	andi	r18,r18,4
   141d4:	90003226 	beq	r18,zero,142a0 <___svfprintf_internal_r+0xa60>
   141d8:	d9403117 	ldw	r5,196(sp)
   141dc:	d8802917 	ldw	r2,164(sp)
   141e0:	28a1c83a 	sub	r16,r5,r2
   141e4:	04002e0e 	bge	zero,r16,142a0 <___svfprintf_internal_r+0xa60>
   141e8:	04400404 	movi	r17,16
   141ec:	d8801f17 	ldw	r2,124(sp)
   141f0:	8c04db0e 	bge	r17,r16,15560 <___svfprintf_internal_r+0x1d20>
   141f4:	014000b4 	movhi	r5,2
   141f8:	29758584 	addi	r5,r5,-10730
   141fc:	d9403515 	stw	r5,212(sp)
   14200:	048001c4 	movi	r18,7
   14204:	dd002d17 	ldw	r20,180(sp)
   14208:	00000306 	br	14218 <___svfprintf_internal_r+0x9d8>
   1420c:	843ffc04 	addi	r16,r16,-16
   14210:	42000204 	addi	r8,r8,8
   14214:	8c00130e 	bge	r17,r16,14264 <___svfprintf_internal_r+0xa24>
   14218:	010000b4 	movhi	r4,2
   1421c:	18c00404 	addi	r3,r3,16
   14220:	10800044 	addi	r2,r2,1
   14224:	21358584 	addi	r4,r4,-10730
   14228:	41000015 	stw	r4,0(r8)
   1422c:	44400115 	stw	r17,4(r8)
   14230:	d8c02015 	stw	r3,128(sp)
   14234:	d8801f15 	stw	r2,124(sp)
   14238:	90bff40e 	bge	r18,r2,1420c <_gp+0xfffee150>
   1423c:	d9801e04 	addi	r6,sp,120
   14240:	a00b883a 	mov	r5,r20
   14244:	9809883a 	mov	r4,r19
   14248:	0018e040 	call	18e04 <__ssprint_r>
   1424c:	103e631e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14250:	843ffc04 	addi	r16,r16,-16
   14254:	d8c02017 	ldw	r3,128(sp)
   14258:	d8801f17 	ldw	r2,124(sp)
   1425c:	da000404 	addi	r8,sp,16
   14260:	8c3fed16 	blt	r17,r16,14218 <_gp+0xfffee15c>
   14264:	d9403517 	ldw	r5,212(sp)
   14268:	1c07883a 	add	r3,r3,r16
   1426c:	10800044 	addi	r2,r2,1
   14270:	41400015 	stw	r5,0(r8)
   14274:	44000115 	stw	r16,4(r8)
   14278:	d8c02015 	stw	r3,128(sp)
   1427c:	d8801f15 	stw	r2,124(sp)
   14280:	010001c4 	movi	r4,7
   14284:	2080060e 	bge	r4,r2,142a0 <___svfprintf_internal_r+0xa60>
   14288:	d9402d17 	ldw	r5,180(sp)
   1428c:	d9801e04 	addi	r6,sp,120
   14290:	9809883a 	mov	r4,r19
   14294:	0018e040 	call	18e04 <__ssprint_r>
   14298:	103e501e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   1429c:	d8c02017 	ldw	r3,128(sp)
   142a0:	d8803117 	ldw	r2,196(sp)
   142a4:	d9002917 	ldw	r4,164(sp)
   142a8:	1100010e 	bge	r2,r4,142b0 <___svfprintf_internal_r+0xa70>
   142ac:	2005883a 	mov	r2,r4
   142b0:	d9402f17 	ldw	r5,188(sp)
   142b4:	288b883a 	add	r5,r5,r2
   142b8:	d9402f15 	stw	r5,188(sp)
   142bc:	1801be1e 	bne	r3,zero,149b8 <___svfprintf_internal_r+0x1178>
   142c0:	b8800007 	ldb	r2,0(r23)
   142c4:	d8001f15 	stw	zero,124(sp)
   142c8:	da000404 	addi	r8,sp,16
   142cc:	103d891e 	bne	r2,zero,138f4 <_gp+0xfffed838>
   142d0:	b823883a 	mov	r17,r23
   142d4:	003d9f06 	br	13954 <_gp+0xfffed898>
   142d8:	8025883a 	mov	r18,r16
   142dc:	dc002903 	ldbu	r16,164(sp)
   142e0:	e011883a 	mov	r8,fp
   142e4:	84003fcc 	andi	r16,r16,255
   142e8:	8005e61e 	bne	r16,zero,15a84 <___svfprintf_internal_r+0x2244>
   142ec:	94800414 	ori	r18,r18,16
   142f0:	9080080c 	andi	r2,r18,32
   142f4:	10022026 	beq	r2,zero,14b78 <___svfprintf_internal_r+0x1338>
   142f8:	d9002e17 	ldw	r4,184(sp)
   142fc:	d9402a17 	ldw	r5,168(sp)
   14300:	d8002785 	stb	zero,158(sp)
   14304:	20c00204 	addi	r3,r4,8
   14308:	25000017 	ldw	r20,0(r4)
   1430c:	25800117 	ldw	r22,4(r4)
   14310:	2803ad16 	blt	r5,zero,151c8 <___svfprintf_internal_r+0x1988>
   14314:	013fdfc4 	movi	r4,-129
   14318:	a584b03a 	or	r2,r20,r22
   1431c:	d8c02e15 	stw	r3,184(sp)
   14320:	9124703a 	and	r18,r18,r4
   14324:	0039883a 	mov	fp,zero
   14328:	103eb01e 	bne	r2,zero,13dec <_gp+0xfffedd30>
   1432c:	d8802a17 	ldw	r2,168(sp)
   14330:	1002e71e 	bne	r2,zero,14ed0 <___svfprintf_internal_r+0x1690>
   14334:	d8002a15 	stw	zero,168(sp)
   14338:	d8002b15 	stw	zero,172(sp)
   1433c:	dc001e04 	addi	r16,sp,120
   14340:	003ef706 	br	13f20 <_gp+0xfffede64>
   14344:	8025883a 	mov	r18,r16
   14348:	dc002903 	ldbu	r16,164(sp)
   1434c:	e011883a 	mov	r8,fp
   14350:	84003fcc 	andi	r16,r16,255
   14354:	8005c81e 	bne	r16,zero,15a78 <___svfprintf_internal_r+0x2238>
   14358:	010000b4 	movhi	r4,2
   1435c:	21357504 	addi	r4,r4,-10796
   14360:	d9003a15 	stw	r4,232(sp)
   14364:	9080080c 	andi	r2,r18,32
   14368:	10007226 	beq	r2,zero,14534 <___svfprintf_internal_r+0xcf4>
   1436c:	d9402e17 	ldw	r5,184(sp)
   14370:	2d000017 	ldw	r20,0(r5)
   14374:	2d800117 	ldw	r22,4(r5)
   14378:	29400204 	addi	r5,r5,8
   1437c:	d9402e15 	stw	r5,184(sp)
   14380:	9080004c 	andi	r2,r18,1
   14384:	1001aa26 	beq	r2,zero,14a30 <___svfprintf_internal_r+0x11f0>
   14388:	a584b03a 	or	r2,r20,r22
   1438c:	10032526 	beq	r2,zero,15024 <___svfprintf_internal_r+0x17e4>
   14390:	d8c02a17 	ldw	r3,168(sp)
   14394:	00800c04 	movi	r2,48
   14398:	d8802705 	stb	r2,156(sp)
   1439c:	dc402745 	stb	r17,157(sp)
   143a0:	d8002785 	stb	zero,158(sp)
   143a4:	90800094 	ori	r2,r18,2
   143a8:	1804a316 	blt	r3,zero,15638 <___svfprintf_internal_r+0x1df8>
   143ac:	00bfdfc4 	movi	r2,-129
   143b0:	90a4703a 	and	r18,r18,r2
   143b4:	94800094 	ori	r18,r18,2
   143b8:	0039883a 	mov	fp,zero
   143bc:	d9003a17 	ldw	r4,232(sp)
   143c0:	dc001e04 	addi	r16,sp,120
   143c4:	a08003cc 	andi	r2,r20,15
   143c8:	b006973a 	slli	r3,r22,28
   143cc:	2085883a 	add	r2,r4,r2
   143d0:	a028d13a 	srli	r20,r20,4
   143d4:	10800003 	ldbu	r2,0(r2)
   143d8:	b02cd13a 	srli	r22,r22,4
   143dc:	843fffc4 	addi	r16,r16,-1
   143e0:	1d28b03a 	or	r20,r3,r20
   143e4:	80800005 	stb	r2,0(r16)
   143e8:	a584b03a 	or	r2,r20,r22
   143ec:	103ff51e 	bne	r2,zero,143c4 <_gp+0xfffee308>
   143f0:	d8c02817 	ldw	r3,160(sp)
   143f4:	1c07c83a 	sub	r3,r3,r16
   143f8:	d8c02b15 	stw	r3,172(sp)
   143fc:	003ec806 	br	13f20 <_gp+0xfffede64>
   14400:	d8c02e17 	ldw	r3,184(sp)
   14404:	d9002e17 	ldw	r4,184(sp)
   14408:	8025883a 	mov	r18,r16
   1440c:	18800017 	ldw	r2,0(r3)
   14410:	21000104 	addi	r4,r4,4
   14414:	00c00044 	movi	r3,1
   14418:	e011883a 	mov	r8,fp
   1441c:	d8c02915 	stw	r3,164(sp)
   14420:	d8002785 	stb	zero,158(sp)
   14424:	d8801405 	stb	r2,80(sp)
   14428:	d9002e15 	stw	r4,184(sp)
   1442c:	d8c02b15 	stw	r3,172(sp)
   14430:	d8002a15 	stw	zero,168(sp)
   14434:	d8003215 	stw	zero,200(sp)
   14438:	dc001404 	addi	r16,sp,80
   1443c:	0039883a 	mov	fp,zero
   14440:	003ec406 	br	13f54 <_gp+0xfffede98>
   14444:	8025883a 	mov	r18,r16
   14448:	dc002903 	ldbu	r16,164(sp)
   1444c:	e011883a 	mov	r8,fp
   14450:	84003fcc 	andi	r16,r16,255
   14454:	803e8726 	beq	r16,zero,13e74 <_gp+0xfffeddb8>
   14458:	d8c02b03 	ldbu	r3,172(sp)
   1445c:	d8c02785 	stb	r3,158(sp)
   14460:	003e8406 	br	13e74 <_gp+0xfffeddb8>
   14464:	00c00044 	movi	r3,1
   14468:	d8c02905 	stb	r3,164(sp)
   1446c:	00c00ac4 	movi	r3,43
   14470:	d8c02b05 	stb	r3,172(sp)
   14474:	bc400007 	ldb	r17,0(r23)
   14478:	003d4606 	br	13994 <_gp+0xfffed8d8>
   1447c:	84000814 	ori	r16,r16,32
   14480:	bc400007 	ldb	r17,0(r23)
   14484:	003d4306 	br	13994 <_gp+0xfffed8d8>
   14488:	d8802e17 	ldw	r2,184(sp)
   1448c:	8025883a 	mov	r18,r16
   14490:	d8002785 	stb	zero,158(sp)
   14494:	14000017 	ldw	r16,0(r2)
   14498:	e011883a 	mov	r8,fp
   1449c:	15000104 	addi	r20,r2,4
   144a0:	80042126 	beq	r16,zero,15528 <___svfprintf_internal_r+0x1ce8>
   144a4:	d8c02a17 	ldw	r3,168(sp)
   144a8:	1803ee16 	blt	r3,zero,15464 <___svfprintf_internal_r+0x1c24>
   144ac:	180d883a 	mov	r6,r3
   144b0:	000b883a 	mov	r5,zero
   144b4:	8009883a 	mov	r4,r16
   144b8:	df003e15 	stw	fp,248(sp)
   144bc:	00178bc0 	call	178bc <memchr>
   144c0:	da003e17 	ldw	r8,248(sp)
   144c4:	10046a26 	beq	r2,zero,15670 <___svfprintf_internal_r+0x1e30>
   144c8:	1405c83a 	sub	r2,r2,r16
   144cc:	d8802b15 	stw	r2,172(sp)
   144d0:	1003ea16 	blt	r2,zero,1547c <___svfprintf_internal_r+0x1c3c>
   144d4:	df002783 	ldbu	fp,158(sp)
   144d8:	d8802915 	stw	r2,164(sp)
   144dc:	dd002e15 	stw	r20,184(sp)
   144e0:	d8002a15 	stw	zero,168(sp)
   144e4:	d8003215 	stw	zero,200(sp)
   144e8:	003e9306 	br	13f38 <_gp+0xfffede7c>
   144ec:	8025883a 	mov	r18,r16
   144f0:	dc002903 	ldbu	r16,164(sp)
   144f4:	e011883a 	mov	r8,fp
   144f8:	84003fcc 	andi	r16,r16,255
   144fc:	803f7c26 	beq	r16,zero,142f0 <_gp+0xfffee234>
   14500:	d8c02b03 	ldbu	r3,172(sp)
   14504:	d8c02785 	stb	r3,158(sp)
   14508:	003f7906 	br	142f0 <_gp+0xfffee234>
   1450c:	8025883a 	mov	r18,r16
   14510:	dc002903 	ldbu	r16,164(sp)
   14514:	e011883a 	mov	r8,fp
   14518:	84003fcc 	andi	r16,r16,255
   1451c:	8005741e 	bne	r16,zero,15af0 <___svfprintf_internal_r+0x22b0>
   14520:	010000b4 	movhi	r4,2
   14524:	21357a04 	addi	r4,r4,-10776
   14528:	d9003a15 	stw	r4,232(sp)
   1452c:	9080080c 	andi	r2,r18,32
   14530:	103f8e1e 	bne	r2,zero,1436c <_gp+0xfffee2b0>
   14534:	9080040c 	andi	r2,r18,16
   14538:	1002a726 	beq	r2,zero,14fd8 <___svfprintf_internal_r+0x1798>
   1453c:	d8802e17 	ldw	r2,184(sp)
   14540:	002d883a 	mov	r22,zero
   14544:	15000017 	ldw	r20,0(r2)
   14548:	10800104 	addi	r2,r2,4
   1454c:	d8802e15 	stw	r2,184(sp)
   14550:	003f8b06 	br	14380 <_gp+0xfffee2c4>
   14554:	84000054 	ori	r16,r16,1
   14558:	bc400007 	ldb	r17,0(r23)
   1455c:	003d0d06 	br	13994 <_gp+0xfffed8d8>
   14560:	d8802b07 	ldb	r2,172(sp)
   14564:	1002a41e 	bne	r2,zero,14ff8 <___svfprintf_internal_r+0x17b8>
   14568:	00c00044 	movi	r3,1
   1456c:	d8c02905 	stb	r3,164(sp)
   14570:	00c00804 	movi	r3,32
   14574:	d8c02b05 	stb	r3,172(sp)
   14578:	bc400007 	ldb	r17,0(r23)
   1457c:	003d0506 	br	13994 <_gp+0xfffed8d8>
   14580:	8025883a 	mov	r18,r16
   14584:	dc002903 	ldbu	r16,164(sp)
   14588:	e011883a 	mov	r8,fp
   1458c:	84003fcc 	andi	r16,r16,255
   14590:	803e0626 	beq	r16,zero,13dac <_gp+0xfffedcf0>
   14594:	d8c02b03 	ldbu	r3,172(sp)
   14598:	d8c02785 	stb	r3,158(sp)
   1459c:	003e0306 	br	13dac <_gp+0xfffedcf0>
   145a0:	bc400007 	ldb	r17,0(r23)
   145a4:	00801b04 	movi	r2,108
   145a8:	88830a26 	beq	r17,r2,151d4 <___svfprintf_internal_r+0x1994>
   145ac:	84000414 	ori	r16,r16,16
   145b0:	003cf806 	br	13994 <_gp+0xfffed8d8>
   145b4:	8025883a 	mov	r18,r16
   145b8:	dc002903 	ldbu	r16,164(sp)
   145bc:	e011883a 	mov	r8,fp
   145c0:	84003fcc 	andi	r16,r16,255
   145c4:	8005471e 	bne	r16,zero,15ae4 <___svfprintf_internal_r+0x22a4>
   145c8:	9080080c 	andi	r2,r18,32
   145cc:	10028c26 	beq	r2,zero,15000 <___svfprintf_internal_r+0x17c0>
   145d0:	d9002e17 	ldw	r4,184(sp)
   145d4:	d9402f17 	ldw	r5,188(sp)
   145d8:	20800017 	ldw	r2,0(r4)
   145dc:	2807d7fa 	srai	r3,r5,31
   145e0:	21000104 	addi	r4,r4,4
   145e4:	d9002e15 	stw	r4,184(sp)
   145e8:	11400015 	stw	r5,0(r2)
   145ec:	10c00115 	stw	r3,4(r2)
   145f0:	003cbe06 	br	138ec <_gp+0xfffed830>
   145f4:	84001014 	ori	r16,r16,64
   145f8:	bc400007 	ldb	r17,0(r23)
   145fc:	003ce506 	br	13994 <_gp+0xfffed8d8>
   14600:	010000b4 	movhi	r4,2
   14604:	21357a04 	addi	r4,r4,-10776
   14608:	0039883a 	mov	fp,zero
   1460c:	d9003a15 	stw	r4,232(sp)
   14610:	04401e04 	movi	r17,120
   14614:	003f6906 	br	143bc <_gp+0xfffee300>
   14618:	8025883a 	mov	r18,r16
   1461c:	dc002903 	ldbu	r16,164(sp)
   14620:	e011883a 	mov	r8,fp
   14624:	84003fcc 	andi	r16,r16,255
   14628:	8005261e 	bne	r16,zero,15ac4 <___svfprintf_internal_r+0x2284>
   1462c:	883d6526 	beq	r17,zero,13bc4 <_gp+0xfffedb08>
   14630:	00c00044 	movi	r3,1
   14634:	d8c02915 	stw	r3,164(sp)
   14638:	dc401405 	stb	r17,80(sp)
   1463c:	d8002785 	stb	zero,158(sp)
   14640:	003f7a06 	br	1442c <_gp+0xfffee370>
   14644:	010000b4 	movhi	r4,2
   14648:	21357a04 	addi	r4,r4,-10776
   1464c:	d9003a15 	stw	r4,232(sp)
   14650:	d8c02e15 	stw	r3,184(sp)
   14654:	1025883a 	mov	r18,r2
   14658:	04401e04 	movi	r17,120
   1465c:	a584b03a 	or	r2,r20,r22
   14660:	1000fa1e 	bne	r2,zero,14a4c <___svfprintf_internal_r+0x120c>
   14664:	0039883a 	mov	fp,zero
   14668:	00800084 	movi	r2,2
   1466c:	10803fcc 	andi	r2,r2,255
   14670:	00c00044 	movi	r3,1
   14674:	10c21626 	beq	r2,r3,14ed0 <___svfprintf_internal_r+0x1690>
   14678:	00c00084 	movi	r3,2
   1467c:	10fe0e1e 	bne	r2,r3,13eb8 <_gp+0xfffeddfc>
   14680:	003d4606 	br	13b9c <_gp+0xfffedae0>
   14684:	d8c02017 	ldw	r3,128(sp)
   14688:	003e7306 	br	14058 <_gp+0xfffedf9c>
   1468c:	00801944 	movi	r2,101
   14690:	14407c0e 	bge	r2,r17,14884 <___svfprintf_internal_r+0x1044>
   14694:	d9003617 	ldw	r4,216(sp)
   14698:	d9403717 	ldw	r5,220(sp)
   1469c:	000d883a 	mov	r6,zero
   146a0:	000f883a 	mov	r7,zero
   146a4:	d8c03d15 	stw	r3,244(sp)
   146a8:	da003e15 	stw	r8,248(sp)
   146ac:	001c0a00 	call	1c0a0 <__eqdf2>
   146b0:	d8c03d17 	ldw	r3,244(sp)
   146b4:	da003e17 	ldw	r8,248(sp)
   146b8:	1000f51e 	bne	r2,zero,14a90 <___svfprintf_internal_r+0x1250>
   146bc:	d8801f17 	ldw	r2,124(sp)
   146c0:	010000b4 	movhi	r4,2
   146c4:	21358104 	addi	r4,r4,-10748
   146c8:	18c00044 	addi	r3,r3,1
   146cc:	10800044 	addi	r2,r2,1
   146d0:	41000015 	stw	r4,0(r8)
   146d4:	01000044 	movi	r4,1
   146d8:	41000115 	stw	r4,4(r8)
   146dc:	d8c02015 	stw	r3,128(sp)
   146e0:	d8801f15 	stw	r2,124(sp)
   146e4:	010001c4 	movi	r4,7
   146e8:	20826616 	blt	r4,r2,15084 <___svfprintf_internal_r+0x1844>
   146ec:	42000204 	addi	r8,r8,8
   146f0:	d8802617 	ldw	r2,152(sp)
   146f4:	d9403317 	ldw	r5,204(sp)
   146f8:	11400216 	blt	r2,r5,14704 <___svfprintf_internal_r+0xec4>
   146fc:	9080004c 	andi	r2,r18,1
   14700:	103eb326 	beq	r2,zero,141d0 <_gp+0xfffee114>
   14704:	d8803817 	ldw	r2,224(sp)
   14708:	d9003417 	ldw	r4,208(sp)
   1470c:	d9403817 	ldw	r5,224(sp)
   14710:	1887883a 	add	r3,r3,r2
   14714:	d8801f17 	ldw	r2,124(sp)
   14718:	41000015 	stw	r4,0(r8)
   1471c:	41400115 	stw	r5,4(r8)
   14720:	10800044 	addi	r2,r2,1
   14724:	d8c02015 	stw	r3,128(sp)
   14728:	d8801f15 	stw	r2,124(sp)
   1472c:	010001c4 	movi	r4,7
   14730:	2082af16 	blt	r4,r2,151f0 <___svfprintf_internal_r+0x19b0>
   14734:	42000204 	addi	r8,r8,8
   14738:	d8803317 	ldw	r2,204(sp)
   1473c:	143fffc4 	addi	r16,r2,-1
   14740:	043ea30e 	bge	zero,r16,141d0 <_gp+0xfffee114>
   14744:	04400404 	movi	r17,16
   14748:	d8801f17 	ldw	r2,124(sp)
   1474c:	8c00860e 	bge	r17,r16,14968 <___svfprintf_internal_r+0x1128>
   14750:	014000b4 	movhi	r5,2
   14754:	29758184 	addi	r5,r5,-10746
   14758:	d9402c15 	stw	r5,176(sp)
   1475c:	058001c4 	movi	r22,7
   14760:	dd002d17 	ldw	r20,180(sp)
   14764:	00000306 	br	14774 <___svfprintf_internal_r+0xf34>
   14768:	42000204 	addi	r8,r8,8
   1476c:	843ffc04 	addi	r16,r16,-16
   14770:	8c00800e 	bge	r17,r16,14974 <___svfprintf_internal_r+0x1134>
   14774:	18c00404 	addi	r3,r3,16
   14778:	10800044 	addi	r2,r2,1
   1477c:	45400015 	stw	r21,0(r8)
   14780:	44400115 	stw	r17,4(r8)
   14784:	d8c02015 	stw	r3,128(sp)
   14788:	d8801f15 	stw	r2,124(sp)
   1478c:	b0bff60e 	bge	r22,r2,14768 <_gp+0xfffee6ac>
   14790:	d9801e04 	addi	r6,sp,120
   14794:	a00b883a 	mov	r5,r20
   14798:	9809883a 	mov	r4,r19
   1479c:	0018e040 	call	18e04 <__ssprint_r>
   147a0:	103d0e1e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   147a4:	d8c02017 	ldw	r3,128(sp)
   147a8:	d8801f17 	ldw	r2,124(sp)
   147ac:	da000404 	addi	r8,sp,16
   147b0:	003fee06 	br	1476c <_gp+0xfffee6b0>
   147b4:	d9403117 	ldw	r5,196(sp)
   147b8:	d8802917 	ldw	r2,164(sp)
   147bc:	28adc83a 	sub	r22,r5,r2
   147c0:	05be430e 	bge	zero,r22,140d0 <_gp+0xfffee014>
   147c4:	07000404 	movi	fp,16
   147c8:	d8801f17 	ldw	r2,124(sp)
   147cc:	e583a20e 	bge	fp,r22,15658 <___svfprintf_internal_r+0x1e18>
   147d0:	014000b4 	movhi	r5,2
   147d4:	29758184 	addi	r5,r5,-10746
   147d8:	dc403015 	stw	r17,192(sp)
   147dc:	d9402c15 	stw	r5,176(sp)
   147e0:	b023883a 	mov	r17,r22
   147e4:	050001c4 	movi	r20,7
   147e8:	902d883a 	mov	r22,r18
   147ec:	8025883a 	mov	r18,r16
   147f0:	dc002d17 	ldw	r16,180(sp)
   147f4:	00000306 	br	14804 <___svfprintf_internal_r+0xfc4>
   147f8:	8c7ffc04 	addi	r17,r17,-16
   147fc:	42000204 	addi	r8,r8,8
   14800:	e440110e 	bge	fp,r17,14848 <___svfprintf_internal_r+0x1008>
   14804:	18c00404 	addi	r3,r3,16
   14808:	10800044 	addi	r2,r2,1
   1480c:	45400015 	stw	r21,0(r8)
   14810:	47000115 	stw	fp,4(r8)
   14814:	d8c02015 	stw	r3,128(sp)
   14818:	d8801f15 	stw	r2,124(sp)
   1481c:	a0bff60e 	bge	r20,r2,147f8 <_gp+0xfffee73c>
   14820:	d9801e04 	addi	r6,sp,120
   14824:	800b883a 	mov	r5,r16
   14828:	9809883a 	mov	r4,r19
   1482c:	0018e040 	call	18e04 <__ssprint_r>
   14830:	103cea1e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14834:	8c7ffc04 	addi	r17,r17,-16
   14838:	d8c02017 	ldw	r3,128(sp)
   1483c:	d8801f17 	ldw	r2,124(sp)
   14840:	da000404 	addi	r8,sp,16
   14844:	e47fef16 	blt	fp,r17,14804 <_gp+0xfffee748>
   14848:	9021883a 	mov	r16,r18
   1484c:	b025883a 	mov	r18,r22
   14850:	882d883a 	mov	r22,r17
   14854:	dc403017 	ldw	r17,192(sp)
   14858:	d9002c17 	ldw	r4,176(sp)
   1485c:	1d87883a 	add	r3,r3,r22
   14860:	10800044 	addi	r2,r2,1
   14864:	41000015 	stw	r4,0(r8)
   14868:	45800115 	stw	r22,4(r8)
   1486c:	d8c02015 	stw	r3,128(sp)
   14870:	d8801f15 	stw	r2,124(sp)
   14874:	010001c4 	movi	r4,7
   14878:	20819a16 	blt	r4,r2,14ee4 <___svfprintf_internal_r+0x16a4>
   1487c:	42000204 	addi	r8,r8,8
   14880:	003e1306 	br	140d0 <_gp+0xfffee014>
   14884:	d9403317 	ldw	r5,204(sp)
   14888:	00800044 	movi	r2,1
   1488c:	18c00044 	addi	r3,r3,1
   14890:	1141710e 	bge	r2,r5,14e58 <___svfprintf_internal_r+0x1618>
   14894:	dc401f17 	ldw	r17,124(sp)
   14898:	00800044 	movi	r2,1
   1489c:	40800115 	stw	r2,4(r8)
   148a0:	8c400044 	addi	r17,r17,1
   148a4:	44000015 	stw	r16,0(r8)
   148a8:	d8c02015 	stw	r3,128(sp)
   148ac:	dc401f15 	stw	r17,124(sp)
   148b0:	008001c4 	movi	r2,7
   148b4:	14417416 	blt	r2,r17,14e88 <___svfprintf_internal_r+0x1648>
   148b8:	42000204 	addi	r8,r8,8
   148bc:	d8803817 	ldw	r2,224(sp)
   148c0:	d9003417 	ldw	r4,208(sp)
   148c4:	8c400044 	addi	r17,r17,1
   148c8:	10c7883a 	add	r3,r2,r3
   148cc:	40800115 	stw	r2,4(r8)
   148d0:	41000015 	stw	r4,0(r8)
   148d4:	d8c02015 	stw	r3,128(sp)
   148d8:	dc401f15 	stw	r17,124(sp)
   148dc:	008001c4 	movi	r2,7
   148e0:	14417216 	blt	r2,r17,14eac <___svfprintf_internal_r+0x166c>
   148e4:	45800204 	addi	r22,r8,8
   148e8:	d9003617 	ldw	r4,216(sp)
   148ec:	d9403717 	ldw	r5,220(sp)
   148f0:	000d883a 	mov	r6,zero
   148f4:	000f883a 	mov	r7,zero
   148f8:	d8c03d15 	stw	r3,244(sp)
   148fc:	001c0a00 	call	1c0a0 <__eqdf2>
   14900:	d8c03d17 	ldw	r3,244(sp)
   14904:	1000b326 	beq	r2,zero,14bd4 <___svfprintf_internal_r+0x1394>
   14908:	d9403317 	ldw	r5,204(sp)
   1490c:	84000044 	addi	r16,r16,1
   14910:	8c400044 	addi	r17,r17,1
   14914:	28bfffc4 	addi	r2,r5,-1
   14918:	1887883a 	add	r3,r3,r2
   1491c:	b0800115 	stw	r2,4(r22)
   14920:	b4000015 	stw	r16,0(r22)
   14924:	d8c02015 	stw	r3,128(sp)
   14928:	dc401f15 	stw	r17,124(sp)
   1492c:	008001c4 	movi	r2,7
   14930:	1440d216 	blt	r2,r17,14c7c <___svfprintf_internal_r+0x143c>
   14934:	b5800204 	addi	r22,r22,8
   14938:	d9003b17 	ldw	r4,236(sp)
   1493c:	df0022c4 	addi	fp,sp,139
   14940:	8c400044 	addi	r17,r17,1
   14944:	20c7883a 	add	r3,r4,r3
   14948:	b7000015 	stw	fp,0(r22)
   1494c:	b1000115 	stw	r4,4(r22)
   14950:	d8c02015 	stw	r3,128(sp)
   14954:	dc401f15 	stw	r17,124(sp)
   14958:	008001c4 	movi	r2,7
   1495c:	14400e16 	blt	r2,r17,14998 <___svfprintf_internal_r+0x1158>
   14960:	b2000204 	addi	r8,r22,8
   14964:	003e1a06 	br	141d0 <_gp+0xfffee114>
   14968:	010000b4 	movhi	r4,2
   1496c:	21358184 	addi	r4,r4,-10746
   14970:	d9002c15 	stw	r4,176(sp)
   14974:	d9002c17 	ldw	r4,176(sp)
   14978:	1c07883a 	add	r3,r3,r16
   1497c:	44000115 	stw	r16,4(r8)
   14980:	41000015 	stw	r4,0(r8)
   14984:	10800044 	addi	r2,r2,1
   14988:	d8c02015 	stw	r3,128(sp)
   1498c:	d8801f15 	stw	r2,124(sp)
   14990:	010001c4 	movi	r4,7
   14994:	20be0d0e 	bge	r4,r2,141cc <_gp+0xfffee110>
   14998:	d9402d17 	ldw	r5,180(sp)
   1499c:	d9801e04 	addi	r6,sp,120
   149a0:	9809883a 	mov	r4,r19
   149a4:	0018e040 	call	18e04 <__ssprint_r>
   149a8:	103c8c1e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   149ac:	d8c02017 	ldw	r3,128(sp)
   149b0:	da000404 	addi	r8,sp,16
   149b4:	003e0606 	br	141d0 <_gp+0xfffee114>
   149b8:	d9402d17 	ldw	r5,180(sp)
   149bc:	d9801e04 	addi	r6,sp,120
   149c0:	9809883a 	mov	r4,r19
   149c4:	0018e040 	call	18e04 <__ssprint_r>
   149c8:	103e3d26 	beq	r2,zero,142c0 <_gp+0xfffee204>
   149cc:	003c8306 	br	13bdc <_gp+0xfffedb20>
   149d0:	d9402d17 	ldw	r5,180(sp)
   149d4:	d9801e04 	addi	r6,sp,120
   149d8:	9809883a 	mov	r4,r19
   149dc:	0018e040 	call	18e04 <__ssprint_r>
   149e0:	103c7e1e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   149e4:	d8c02017 	ldw	r3,128(sp)
   149e8:	da000404 	addi	r8,sp,16
   149ec:	003deb06 	br	1419c <_gp+0xfffee0e0>
   149f0:	d9402d17 	ldw	r5,180(sp)
   149f4:	d9801e04 	addi	r6,sp,120
   149f8:	9809883a 	mov	r4,r19
   149fc:	0018e040 	call	18e04 <__ssprint_r>
   14a00:	103c761e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14a04:	d8c02017 	ldw	r3,128(sp)
   14a08:	da000404 	addi	r8,sp,16
   14a0c:	003d9f06 	br	1408c <_gp+0xfffedfd0>
   14a10:	d9402d17 	ldw	r5,180(sp)
   14a14:	d9801e04 	addi	r6,sp,120
   14a18:	9809883a 	mov	r4,r19
   14a1c:	0018e040 	call	18e04 <__ssprint_r>
   14a20:	103c6e1e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14a24:	d8c02017 	ldw	r3,128(sp)
   14a28:	da000404 	addi	r8,sp,16
   14a2c:	003da506 	br	140c4 <_gp+0xfffee008>
   14a30:	d9402a17 	ldw	r5,168(sp)
   14a34:	d8002785 	stb	zero,158(sp)
   14a38:	283f0816 	blt	r5,zero,1465c <_gp+0xfffee5a0>
   14a3c:	00ffdfc4 	movi	r3,-129
   14a40:	a584b03a 	or	r2,r20,r22
   14a44:	90e4703a 	and	r18,r18,r3
   14a48:	103c5126 	beq	r2,zero,13b90 <_gp+0xfffedad4>
   14a4c:	0039883a 	mov	fp,zero
   14a50:	003e5a06 	br	143bc <_gp+0xfffee300>
   14a54:	9080040c 	andi	r2,r18,16
   14a58:	10013d26 	beq	r2,zero,14f50 <___svfprintf_internal_r+0x1710>
   14a5c:	d8c02e17 	ldw	r3,184(sp)
   14a60:	d9002a17 	ldw	r4,168(sp)
   14a64:	d8002785 	stb	zero,158(sp)
   14a68:	18800104 	addi	r2,r3,4
   14a6c:	1d000017 	ldw	r20,0(r3)
   14a70:	002d883a 	mov	r22,zero
   14a74:	20013f16 	blt	r4,zero,14f74 <___svfprintf_internal_r+0x1734>
   14a78:	00ffdfc4 	movi	r3,-129
   14a7c:	d8802e15 	stw	r2,184(sp)
   14a80:	90e4703a 	and	r18,r18,r3
   14a84:	a03d0926 	beq	r20,zero,13eac <_gp+0xfffeddf0>
   14a88:	0039883a 	mov	fp,zero
   14a8c:	003d0c06 	br	13ec0 <_gp+0xfffede04>
   14a90:	dc402617 	ldw	r17,152(sp)
   14a94:	0441830e 	bge	zero,r17,150a4 <___svfprintf_internal_r+0x1864>
   14a98:	dc403217 	ldw	r17,200(sp)
   14a9c:	d8803317 	ldw	r2,204(sp)
   14aa0:	1440010e 	bge	r2,r17,14aa8 <___svfprintf_internal_r+0x1268>
   14aa4:	1023883a 	mov	r17,r2
   14aa8:	04400a0e 	bge	zero,r17,14ad4 <___svfprintf_internal_r+0x1294>
   14aac:	d8801f17 	ldw	r2,124(sp)
   14ab0:	1c47883a 	add	r3,r3,r17
   14ab4:	44000015 	stw	r16,0(r8)
   14ab8:	10800044 	addi	r2,r2,1
   14abc:	44400115 	stw	r17,4(r8)
   14ac0:	d8c02015 	stw	r3,128(sp)
   14ac4:	d8801f15 	stw	r2,124(sp)
   14ac8:	010001c4 	movi	r4,7
   14acc:	20827516 	blt	r4,r2,154a4 <___svfprintf_internal_r+0x1c64>
   14ad0:	42000204 	addi	r8,r8,8
   14ad4:	88027b16 	blt	r17,zero,154c4 <___svfprintf_internal_r+0x1c84>
   14ad8:	d9003217 	ldw	r4,200(sp)
   14adc:	2463c83a 	sub	r17,r4,r17
   14ae0:	0440990e 	bge	zero,r17,14d48 <___svfprintf_internal_r+0x1508>
   14ae4:	05800404 	movi	r22,16
   14ae8:	d8801f17 	ldw	r2,124(sp)
   14aec:	b441530e 	bge	r22,r17,1503c <___svfprintf_internal_r+0x17fc>
   14af0:	010000b4 	movhi	r4,2
   14af4:	21358184 	addi	r4,r4,-10746
   14af8:	d9002c15 	stw	r4,176(sp)
   14afc:	070001c4 	movi	fp,7
   14b00:	dd002d17 	ldw	r20,180(sp)
   14b04:	00000306 	br	14b14 <___svfprintf_internal_r+0x12d4>
   14b08:	42000204 	addi	r8,r8,8
   14b0c:	8c7ffc04 	addi	r17,r17,-16
   14b10:	b4414d0e 	bge	r22,r17,15048 <___svfprintf_internal_r+0x1808>
   14b14:	18c00404 	addi	r3,r3,16
   14b18:	10800044 	addi	r2,r2,1
   14b1c:	45400015 	stw	r21,0(r8)
   14b20:	45800115 	stw	r22,4(r8)
   14b24:	d8c02015 	stw	r3,128(sp)
   14b28:	d8801f15 	stw	r2,124(sp)
   14b2c:	e0bff60e 	bge	fp,r2,14b08 <_gp+0xfffeea4c>
   14b30:	d9801e04 	addi	r6,sp,120
   14b34:	a00b883a 	mov	r5,r20
   14b38:	9809883a 	mov	r4,r19
   14b3c:	0018e040 	call	18e04 <__ssprint_r>
   14b40:	103c261e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14b44:	d8c02017 	ldw	r3,128(sp)
   14b48:	d8801f17 	ldw	r2,124(sp)
   14b4c:	da000404 	addi	r8,sp,16
   14b50:	003fee06 	br	14b0c <_gp+0xfffeea50>
   14b54:	d9402d17 	ldw	r5,180(sp)
   14b58:	d9801e04 	addi	r6,sp,120
   14b5c:	9809883a 	mov	r4,r19
   14b60:	0018e040 	call	18e04 <__ssprint_r>
   14b64:	103c1d1e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14b68:	d8c02017 	ldw	r3,128(sp)
   14b6c:	df002787 	ldb	fp,158(sp)
   14b70:	da000404 	addi	r8,sp,16
   14b74:	003d3806 	br	14058 <_gp+0xfffedf9c>
   14b78:	9080040c 	andi	r2,r18,16
   14b7c:	10005c26 	beq	r2,zero,14cf0 <___svfprintf_internal_r+0x14b0>
   14b80:	d8c02e17 	ldw	r3,184(sp)
   14b84:	d9002a17 	ldw	r4,168(sp)
   14b88:	d8002785 	stb	zero,158(sp)
   14b8c:	18800104 	addi	r2,r3,4
   14b90:	1d000017 	ldw	r20,0(r3)
   14b94:	002d883a 	mov	r22,zero
   14b98:	20005e16 	blt	r4,zero,14d14 <___svfprintf_internal_r+0x14d4>
   14b9c:	00ffdfc4 	movi	r3,-129
   14ba0:	d8802e15 	stw	r2,184(sp)
   14ba4:	90e4703a 	and	r18,r18,r3
   14ba8:	0039883a 	mov	fp,zero
   14bac:	a03ddf26 	beq	r20,zero,1432c <_gp+0xfffee270>
   14bb0:	00800244 	movi	r2,9
   14bb4:	153c8e36 	bltu	r2,r20,13df0 <_gp+0xfffedd34>
   14bb8:	a5000c04 	addi	r20,r20,48
   14bbc:	dc001dc4 	addi	r16,sp,119
   14bc0:	dd001dc5 	stb	r20,119(sp)
   14bc4:	d8c02817 	ldw	r3,160(sp)
   14bc8:	1c07c83a 	sub	r3,r3,r16
   14bcc:	d8c02b15 	stw	r3,172(sp)
   14bd0:	003cd306 	br	13f20 <_gp+0xfffede64>
   14bd4:	d8803317 	ldw	r2,204(sp)
   14bd8:	143fffc4 	addi	r16,r2,-1
   14bdc:	043f560e 	bge	zero,r16,14938 <_gp+0xfffee87c>
   14be0:	07000404 	movi	fp,16
   14be4:	e403530e 	bge	fp,r16,15934 <___svfprintf_internal_r+0x20f4>
   14be8:	014000b4 	movhi	r5,2
   14bec:	29758184 	addi	r5,r5,-10746
   14bf0:	d9402c15 	stw	r5,176(sp)
   14bf4:	01c001c4 	movi	r7,7
   14bf8:	dd002d17 	ldw	r20,180(sp)
   14bfc:	00000306 	br	14c0c <___svfprintf_internal_r+0x13cc>
   14c00:	843ffc04 	addi	r16,r16,-16
   14c04:	b5800204 	addi	r22,r22,8
   14c08:	e400130e 	bge	fp,r16,14c58 <___svfprintf_internal_r+0x1418>
   14c0c:	18c00404 	addi	r3,r3,16
   14c10:	8c400044 	addi	r17,r17,1
   14c14:	b5400015 	stw	r21,0(r22)
   14c18:	b7000115 	stw	fp,4(r22)
   14c1c:	d8c02015 	stw	r3,128(sp)
   14c20:	dc401f15 	stw	r17,124(sp)
   14c24:	3c7ff60e 	bge	r7,r17,14c00 <_gp+0xfffeeb44>
   14c28:	d9801e04 	addi	r6,sp,120
   14c2c:	a00b883a 	mov	r5,r20
   14c30:	9809883a 	mov	r4,r19
   14c34:	d9c03d15 	stw	r7,244(sp)
   14c38:	0018e040 	call	18e04 <__ssprint_r>
   14c3c:	d9c03d17 	ldw	r7,244(sp)
   14c40:	103be61e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14c44:	843ffc04 	addi	r16,r16,-16
   14c48:	d8c02017 	ldw	r3,128(sp)
   14c4c:	dc401f17 	ldw	r17,124(sp)
   14c50:	dd800404 	addi	r22,sp,16
   14c54:	e43fed16 	blt	fp,r16,14c0c <_gp+0xfffeeb50>
   14c58:	d8802c17 	ldw	r2,176(sp)
   14c5c:	1c07883a 	add	r3,r3,r16
   14c60:	8c400044 	addi	r17,r17,1
   14c64:	b0800015 	stw	r2,0(r22)
   14c68:	b4000115 	stw	r16,4(r22)
   14c6c:	d8c02015 	stw	r3,128(sp)
   14c70:	dc401f15 	stw	r17,124(sp)
   14c74:	008001c4 	movi	r2,7
   14c78:	147f2e0e 	bge	r2,r17,14934 <_gp+0xfffee878>
   14c7c:	d9402d17 	ldw	r5,180(sp)
   14c80:	d9801e04 	addi	r6,sp,120
   14c84:	9809883a 	mov	r4,r19
   14c88:	0018e040 	call	18e04 <__ssprint_r>
   14c8c:	103bd31e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14c90:	d8c02017 	ldw	r3,128(sp)
   14c94:	dc401f17 	ldw	r17,124(sp)
   14c98:	dd800404 	addi	r22,sp,16
   14c9c:	003f2606 	br	14938 <_gp+0xfffee87c>
   14ca0:	9080040c 	andi	r2,r18,16
   14ca4:	1000c326 	beq	r2,zero,14fb4 <___svfprintf_internal_r+0x1774>
   14ca8:	d9402e17 	ldw	r5,184(sp)
   14cac:	2d000017 	ldw	r20,0(r5)
   14cb0:	29400104 	addi	r5,r5,4
   14cb4:	d9402e15 	stw	r5,184(sp)
   14cb8:	a02dd7fa 	srai	r22,r20,31
   14cbc:	b005883a 	mov	r2,r22
   14cc0:	103c430e 	bge	r2,zero,13dd0 <_gp+0xfffedd14>
   14cc4:	d9402a17 	ldw	r5,168(sp)
   14cc8:	0529c83a 	sub	r20,zero,r20
   14ccc:	07000b44 	movi	fp,45
   14cd0:	a004c03a 	cmpne	r2,r20,zero
   14cd4:	05adc83a 	sub	r22,zero,r22
   14cd8:	df002785 	stb	fp,158(sp)
   14cdc:	b0adc83a 	sub	r22,r22,r2
   14ce0:	28022e16 	blt	r5,zero,1559c <___svfprintf_internal_r+0x1d5c>
   14ce4:	00bfdfc4 	movi	r2,-129
   14ce8:	90a4703a 	and	r18,r18,r2
   14cec:	003c3f06 	br	13dec <_gp+0xfffedd30>
   14cf0:	9080100c 	andi	r2,r18,64
   14cf4:	d8002785 	stb	zero,158(sp)
   14cf8:	10012526 	beq	r2,zero,15190 <___svfprintf_internal_r+0x1950>
   14cfc:	d9402e17 	ldw	r5,184(sp)
   14d00:	d8c02a17 	ldw	r3,168(sp)
   14d04:	002d883a 	mov	r22,zero
   14d08:	28800104 	addi	r2,r5,4
   14d0c:	2d00000b 	ldhu	r20,0(r5)
   14d10:	183fa20e 	bge	r3,zero,14b9c <_gp+0xfffeeae0>
   14d14:	d8802e15 	stw	r2,184(sp)
   14d18:	0039883a 	mov	fp,zero
   14d1c:	a584b03a 	or	r2,r20,r22
   14d20:	103c321e 	bne	r2,zero,13dec <_gp+0xfffedd30>
   14d24:	00800044 	movi	r2,1
   14d28:	003e5006 	br	1466c <_gp+0xfffee5b0>
   14d2c:	d9402d17 	ldw	r5,180(sp)
   14d30:	d9801e04 	addi	r6,sp,120
   14d34:	9809883a 	mov	r4,r19
   14d38:	0018e040 	call	18e04 <__ssprint_r>
   14d3c:	103ba71e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14d40:	d8c02017 	ldw	r3,128(sp)
   14d44:	da000404 	addi	r8,sp,16
   14d48:	d9003217 	ldw	r4,200(sp)
   14d4c:	d8802617 	ldw	r2,152(sp)
   14d50:	d9403317 	ldw	r5,204(sp)
   14d54:	8123883a 	add	r17,r16,r4
   14d58:	11400216 	blt	r2,r5,14d64 <___svfprintf_internal_r+0x1524>
   14d5c:	9100004c 	andi	r4,r18,1
   14d60:	20000d26 	beq	r4,zero,14d98 <___svfprintf_internal_r+0x1558>
   14d64:	d9003817 	ldw	r4,224(sp)
   14d68:	d9403417 	ldw	r5,208(sp)
   14d6c:	1907883a 	add	r3,r3,r4
   14d70:	d9001f17 	ldw	r4,124(sp)
   14d74:	41400015 	stw	r5,0(r8)
   14d78:	d9403817 	ldw	r5,224(sp)
   14d7c:	21000044 	addi	r4,r4,1
   14d80:	d8c02015 	stw	r3,128(sp)
   14d84:	41400115 	stw	r5,4(r8)
   14d88:	d9001f15 	stw	r4,124(sp)
   14d8c:	014001c4 	movi	r5,7
   14d90:	2901dc16 	blt	r5,r4,15504 <___svfprintf_internal_r+0x1cc4>
   14d94:	42000204 	addi	r8,r8,8
   14d98:	d9003317 	ldw	r4,204(sp)
   14d9c:	8121883a 	add	r16,r16,r4
   14da0:	2085c83a 	sub	r2,r4,r2
   14da4:	8461c83a 	sub	r16,r16,r17
   14da8:	1400010e 	bge	r2,r16,14db0 <___svfprintf_internal_r+0x1570>
   14dac:	1021883a 	mov	r16,r2
   14db0:	04000a0e 	bge	zero,r16,14ddc <___svfprintf_internal_r+0x159c>
   14db4:	d9001f17 	ldw	r4,124(sp)
   14db8:	1c07883a 	add	r3,r3,r16
   14dbc:	44400015 	stw	r17,0(r8)
   14dc0:	21000044 	addi	r4,r4,1
   14dc4:	44000115 	stw	r16,4(r8)
   14dc8:	d8c02015 	stw	r3,128(sp)
   14dcc:	d9001f15 	stw	r4,124(sp)
   14dd0:	014001c4 	movi	r5,7
   14dd4:	2901e616 	blt	r5,r4,15570 <___svfprintf_internal_r+0x1d30>
   14dd8:	42000204 	addi	r8,r8,8
   14ddc:	8001f616 	blt	r16,zero,155b8 <___svfprintf_internal_r+0x1d78>
   14de0:	1421c83a 	sub	r16,r2,r16
   14de4:	043cfa0e 	bge	zero,r16,141d0 <_gp+0xfffee114>
   14de8:	04400404 	movi	r17,16
   14dec:	d8801f17 	ldw	r2,124(sp)
   14df0:	8c3edd0e 	bge	r17,r16,14968 <_gp+0xfffee8ac>
   14df4:	014000b4 	movhi	r5,2
   14df8:	29758184 	addi	r5,r5,-10746
   14dfc:	d9402c15 	stw	r5,176(sp)
   14e00:	058001c4 	movi	r22,7
   14e04:	dd002d17 	ldw	r20,180(sp)
   14e08:	00000306 	br	14e18 <___svfprintf_internal_r+0x15d8>
   14e0c:	42000204 	addi	r8,r8,8
   14e10:	843ffc04 	addi	r16,r16,-16
   14e14:	8c3ed70e 	bge	r17,r16,14974 <_gp+0xfffee8b8>
   14e18:	18c00404 	addi	r3,r3,16
   14e1c:	10800044 	addi	r2,r2,1
   14e20:	45400015 	stw	r21,0(r8)
   14e24:	44400115 	stw	r17,4(r8)
   14e28:	d8c02015 	stw	r3,128(sp)
   14e2c:	d8801f15 	stw	r2,124(sp)
   14e30:	b0bff60e 	bge	r22,r2,14e0c <_gp+0xfffeed50>
   14e34:	d9801e04 	addi	r6,sp,120
   14e38:	a00b883a 	mov	r5,r20
   14e3c:	9809883a 	mov	r4,r19
   14e40:	0018e040 	call	18e04 <__ssprint_r>
   14e44:	103b651e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14e48:	d8c02017 	ldw	r3,128(sp)
   14e4c:	d8801f17 	ldw	r2,124(sp)
   14e50:	da000404 	addi	r8,sp,16
   14e54:	003fee06 	br	14e10 <_gp+0xfffeed54>
   14e58:	9088703a 	and	r4,r18,r2
   14e5c:	203e8d1e 	bne	r4,zero,14894 <_gp+0xfffee7d8>
   14e60:	dc401f17 	ldw	r17,124(sp)
   14e64:	40800115 	stw	r2,4(r8)
   14e68:	44000015 	stw	r16,0(r8)
   14e6c:	8c400044 	addi	r17,r17,1
   14e70:	d8c02015 	stw	r3,128(sp)
   14e74:	dc401f15 	stw	r17,124(sp)
   14e78:	008001c4 	movi	r2,7
   14e7c:	147f7f16 	blt	r2,r17,14c7c <_gp+0xfffeebc0>
   14e80:	45800204 	addi	r22,r8,8
   14e84:	003eac06 	br	14938 <_gp+0xfffee87c>
   14e88:	d9402d17 	ldw	r5,180(sp)
   14e8c:	d9801e04 	addi	r6,sp,120
   14e90:	9809883a 	mov	r4,r19
   14e94:	0018e040 	call	18e04 <__ssprint_r>
   14e98:	103b501e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14e9c:	d8c02017 	ldw	r3,128(sp)
   14ea0:	dc401f17 	ldw	r17,124(sp)
   14ea4:	da000404 	addi	r8,sp,16
   14ea8:	003e8406 	br	148bc <_gp+0xfffee800>
   14eac:	d9402d17 	ldw	r5,180(sp)
   14eb0:	d9801e04 	addi	r6,sp,120
   14eb4:	9809883a 	mov	r4,r19
   14eb8:	0018e040 	call	18e04 <__ssprint_r>
   14ebc:	103b471e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14ec0:	d8c02017 	ldw	r3,128(sp)
   14ec4:	dc401f17 	ldw	r17,124(sp)
   14ec8:	dd800404 	addi	r22,sp,16
   14ecc:	003e8606 	br	148e8 <_gp+0xfffee82c>
   14ed0:	0029883a 	mov	r20,zero
   14ed4:	a5000c04 	addi	r20,r20,48
   14ed8:	dc001dc4 	addi	r16,sp,119
   14edc:	dd001dc5 	stb	r20,119(sp)
   14ee0:	003f3806 	br	14bc4 <_gp+0xfffeeb08>
   14ee4:	d9402d17 	ldw	r5,180(sp)
   14ee8:	d9801e04 	addi	r6,sp,120
   14eec:	9809883a 	mov	r4,r19
   14ef0:	0018e040 	call	18e04 <__ssprint_r>
   14ef4:	103b391e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   14ef8:	d8c02017 	ldw	r3,128(sp)
   14efc:	da000404 	addi	r8,sp,16
   14f00:	003c7306 	br	140d0 <_gp+0xfffee014>
   14f04:	d9003617 	ldw	r4,216(sp)
   14f08:	d9403717 	ldw	r5,220(sp)
   14f0c:	da003e15 	stw	r8,248(sp)
   14f10:	0018c1c0 	call	18c1c <__fpclassifyd>
   14f14:	da003e17 	ldw	r8,248(sp)
   14f18:	1000bd1e 	bne	r2,zero,15210 <___svfprintf_internal_r+0x19d0>
   14f1c:	008011c4 	movi	r2,71
   14f20:	14411e0e 	bge	r2,r17,1539c <___svfprintf_internal_r+0x1b5c>
   14f24:	040000b4 	movhi	r16,2
   14f28:	84357404 	addi	r16,r16,-10800
   14f2c:	00c000c4 	movi	r3,3
   14f30:	00bfdfc4 	movi	r2,-129
   14f34:	d8c02915 	stw	r3,164(sp)
   14f38:	90a4703a 	and	r18,r18,r2
   14f3c:	df002783 	ldbu	fp,158(sp)
   14f40:	d8c02b15 	stw	r3,172(sp)
   14f44:	d8002a15 	stw	zero,168(sp)
   14f48:	d8003215 	stw	zero,200(sp)
   14f4c:	003bfa06 	br	13f38 <_gp+0xfffede7c>
   14f50:	9080100c 	andi	r2,r18,64
   14f54:	d8002785 	stb	zero,158(sp)
   14f58:	10009426 	beq	r2,zero,151ac <___svfprintf_internal_r+0x196c>
   14f5c:	d9402e17 	ldw	r5,184(sp)
   14f60:	d8c02a17 	ldw	r3,168(sp)
   14f64:	002d883a 	mov	r22,zero
   14f68:	28800104 	addi	r2,r5,4
   14f6c:	2d00000b 	ldhu	r20,0(r5)
   14f70:	183ec10e 	bge	r3,zero,14a78 <_gp+0xfffee9bc>
   14f74:	a586b03a 	or	r3,r20,r22
   14f78:	d8802e15 	stw	r2,184(sp)
   14f7c:	183ec21e 	bne	r3,zero,14a88 <_gp+0xfffee9cc>
   14f80:	0039883a 	mov	fp,zero
   14f84:	0005883a 	mov	r2,zero
   14f88:	003db806 	br	1466c <_gp+0xfffee5b0>
   14f8c:	d8c02e17 	ldw	r3,184(sp)
   14f90:	d9002e17 	ldw	r4,184(sp)
   14f94:	d9402e17 	ldw	r5,184(sp)
   14f98:	18c00017 	ldw	r3,0(r3)
   14f9c:	21000117 	ldw	r4,4(r4)
   14fa0:	29400204 	addi	r5,r5,8
   14fa4:	d8c03615 	stw	r3,216(sp)
   14fa8:	d9003715 	stw	r4,220(sp)
   14fac:	d9402e15 	stw	r5,184(sp)
   14fb0:	003b5a06 	br	13d1c <_gp+0xfffedc60>
   14fb4:	9080100c 	andi	r2,r18,64
   14fb8:	10010726 	beq	r2,zero,153d8 <___svfprintf_internal_r+0x1b98>
   14fbc:	d8802e17 	ldw	r2,184(sp)
   14fc0:	1500000f 	ldh	r20,0(r2)
   14fc4:	10800104 	addi	r2,r2,4
   14fc8:	d8802e15 	stw	r2,184(sp)
   14fcc:	a02dd7fa 	srai	r22,r20,31
   14fd0:	b005883a 	mov	r2,r22
   14fd4:	003b7d06 	br	13dcc <_gp+0xfffedd10>
   14fd8:	9080100c 	andi	r2,r18,64
   14fdc:	10010526 	beq	r2,zero,153f4 <___svfprintf_internal_r+0x1bb4>
   14fe0:	d8c02e17 	ldw	r3,184(sp)
   14fe4:	002d883a 	mov	r22,zero
   14fe8:	1d00000b 	ldhu	r20,0(r3)
   14fec:	18c00104 	addi	r3,r3,4
   14ff0:	d8c02e15 	stw	r3,184(sp)
   14ff4:	003ce206 	br	14380 <_gp+0xfffee2c4>
   14ff8:	bc400007 	ldb	r17,0(r23)
   14ffc:	003a6506 	br	13994 <_gp+0xfffed8d8>
   15000:	9080040c 	andi	r2,r18,16
   15004:	10010126 	beq	r2,zero,1540c <___svfprintf_internal_r+0x1bcc>
   15008:	d8c02e17 	ldw	r3,184(sp)
   1500c:	d9002f17 	ldw	r4,188(sp)
   15010:	18800017 	ldw	r2,0(r3)
   15014:	18c00104 	addi	r3,r3,4
   15018:	d8c02e15 	stw	r3,184(sp)
   1501c:	11000015 	stw	r4,0(r2)
   15020:	003a3206 	br	138ec <_gp+0xfffed830>
   15024:	d9002a17 	ldw	r4,168(sp)
   15028:	d8002785 	stb	zero,158(sp)
   1502c:	203d8d16 	blt	r4,zero,14664 <_gp+0xfffee5a8>
   15030:	00bfdfc4 	movi	r2,-129
   15034:	90a4703a 	and	r18,r18,r2
   15038:	003ad506 	br	13b90 <_gp+0xfffedad4>
   1503c:	014000b4 	movhi	r5,2
   15040:	29758184 	addi	r5,r5,-10746
   15044:	d9402c15 	stw	r5,176(sp)
   15048:	d9402c17 	ldw	r5,176(sp)
   1504c:	1c47883a 	add	r3,r3,r17
   15050:	10800044 	addi	r2,r2,1
   15054:	41400015 	stw	r5,0(r8)
   15058:	44400115 	stw	r17,4(r8)
   1505c:	d8c02015 	stw	r3,128(sp)
   15060:	d8801f15 	stw	r2,124(sp)
   15064:	010001c4 	movi	r4,7
   15068:	20bf3016 	blt	r4,r2,14d2c <_gp+0xfffeec70>
   1506c:	42000204 	addi	r8,r8,8
   15070:	003f3506 	br	14d48 <_gp+0xfffeec8c>
   15074:	010000b4 	movhi	r4,2
   15078:	21358184 	addi	r4,r4,-10746
   1507c:	d9002c15 	stw	r4,176(sp)
   15080:	003c3c06 	br	14174 <_gp+0xfffee0b8>
   15084:	d9402d17 	ldw	r5,180(sp)
   15088:	d9801e04 	addi	r6,sp,120
   1508c:	9809883a 	mov	r4,r19
   15090:	0018e040 	call	18e04 <__ssprint_r>
   15094:	103ad11e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   15098:	d8c02017 	ldw	r3,128(sp)
   1509c:	da000404 	addi	r8,sp,16
   150a0:	003d9306 	br	146f0 <_gp+0xfffee634>
   150a4:	d8801f17 	ldw	r2,124(sp)
   150a8:	014000b4 	movhi	r5,2
   150ac:	01000044 	movi	r4,1
   150b0:	18c00044 	addi	r3,r3,1
   150b4:	10800044 	addi	r2,r2,1
   150b8:	29758104 	addi	r5,r5,-10748
   150bc:	41000115 	stw	r4,4(r8)
   150c0:	41400015 	stw	r5,0(r8)
   150c4:	d8c02015 	stw	r3,128(sp)
   150c8:	d8801f15 	stw	r2,124(sp)
   150cc:	010001c4 	movi	r4,7
   150d0:	2080b516 	blt	r4,r2,153a8 <___svfprintf_internal_r+0x1b68>
   150d4:	42000204 	addi	r8,r8,8
   150d8:	8800041e 	bne	r17,zero,150ec <___svfprintf_internal_r+0x18ac>
   150dc:	d8803317 	ldw	r2,204(sp)
   150e0:	1000021e 	bne	r2,zero,150ec <___svfprintf_internal_r+0x18ac>
   150e4:	9080004c 	andi	r2,r18,1
   150e8:	103c3926 	beq	r2,zero,141d0 <_gp+0xfffee114>
   150ec:	d9003817 	ldw	r4,224(sp)
   150f0:	d8801f17 	ldw	r2,124(sp)
   150f4:	d9403417 	ldw	r5,208(sp)
   150f8:	20c7883a 	add	r3,r4,r3
   150fc:	10800044 	addi	r2,r2,1
   15100:	41000115 	stw	r4,4(r8)
   15104:	41400015 	stw	r5,0(r8)
   15108:	d8c02015 	stw	r3,128(sp)
   1510c:	d8801f15 	stw	r2,124(sp)
   15110:	010001c4 	movi	r4,7
   15114:	20818016 	blt	r4,r2,15718 <___svfprintf_internal_r+0x1ed8>
   15118:	42000204 	addi	r8,r8,8
   1511c:	0463c83a 	sub	r17,zero,r17
   15120:	0440cb0e 	bge	zero,r17,15450 <___svfprintf_internal_r+0x1c10>
   15124:	05800404 	movi	r22,16
   15128:	b440e80e 	bge	r22,r17,154cc <___svfprintf_internal_r+0x1c8c>
   1512c:	014000b4 	movhi	r5,2
   15130:	29758184 	addi	r5,r5,-10746
   15134:	d9402c15 	stw	r5,176(sp)
   15138:	070001c4 	movi	fp,7
   1513c:	dd002d17 	ldw	r20,180(sp)
   15140:	00000306 	br	15150 <___svfprintf_internal_r+0x1910>
   15144:	42000204 	addi	r8,r8,8
   15148:	8c7ffc04 	addi	r17,r17,-16
   1514c:	b440e20e 	bge	r22,r17,154d8 <___svfprintf_internal_r+0x1c98>
   15150:	18c00404 	addi	r3,r3,16
   15154:	10800044 	addi	r2,r2,1
   15158:	45400015 	stw	r21,0(r8)
   1515c:	45800115 	stw	r22,4(r8)
   15160:	d8c02015 	stw	r3,128(sp)
   15164:	d8801f15 	stw	r2,124(sp)
   15168:	e0bff60e 	bge	fp,r2,15144 <_gp+0xfffef088>
   1516c:	d9801e04 	addi	r6,sp,120
   15170:	a00b883a 	mov	r5,r20
   15174:	9809883a 	mov	r4,r19
   15178:	0018e040 	call	18e04 <__ssprint_r>
   1517c:	103a971e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   15180:	d8c02017 	ldw	r3,128(sp)
   15184:	d8801f17 	ldw	r2,124(sp)
   15188:	da000404 	addi	r8,sp,16
   1518c:	003fee06 	br	15148 <_gp+0xfffef08c>
   15190:	d9002e17 	ldw	r4,184(sp)
   15194:	d9402a17 	ldw	r5,168(sp)
   15198:	002d883a 	mov	r22,zero
   1519c:	20800104 	addi	r2,r4,4
   151a0:	25000017 	ldw	r20,0(r4)
   151a4:	283e7d0e 	bge	r5,zero,14b9c <_gp+0xfffeeae0>
   151a8:	003eda06 	br	14d14 <_gp+0xfffeec58>
   151ac:	d9002e17 	ldw	r4,184(sp)
   151b0:	d9402a17 	ldw	r5,168(sp)
   151b4:	002d883a 	mov	r22,zero
   151b8:	20800104 	addi	r2,r4,4
   151bc:	25000017 	ldw	r20,0(r4)
   151c0:	283e2d0e 	bge	r5,zero,14a78 <_gp+0xfffee9bc>
   151c4:	003f6b06 	br	14f74 <_gp+0xfffeeeb8>
   151c8:	d8c02e15 	stw	r3,184(sp)
   151cc:	0039883a 	mov	fp,zero
   151d0:	003ed206 	br	14d1c <_gp+0xfffeec60>
   151d4:	bc400043 	ldbu	r17,1(r23)
   151d8:	84000814 	ori	r16,r16,32
   151dc:	bdc00044 	addi	r23,r23,1
   151e0:	8c403fcc 	andi	r17,r17,255
   151e4:	8c40201c 	xori	r17,r17,128
   151e8:	8c7fe004 	addi	r17,r17,-128
   151ec:	0039e906 	br	13994 <_gp+0xfffed8d8>
   151f0:	d9402d17 	ldw	r5,180(sp)
   151f4:	d9801e04 	addi	r6,sp,120
   151f8:	9809883a 	mov	r4,r19
   151fc:	0018e040 	call	18e04 <__ssprint_r>
   15200:	103a761e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   15204:	d8c02017 	ldw	r3,128(sp)
   15208:	da000404 	addi	r8,sp,16
   1520c:	003d4a06 	br	14738 <_gp+0xfffee67c>
   15210:	d9002a17 	ldw	r4,168(sp)
   15214:	05bff7c4 	movi	r22,-33
   15218:	00bfffc4 	movi	r2,-1
   1521c:	8dac703a 	and	r22,r17,r22
   15220:	20806a26 	beq	r4,r2,153cc <___svfprintf_internal_r+0x1b8c>
   15224:	008011c4 	movi	r2,71
   15228:	b0813726 	beq	r22,r2,15708 <___svfprintf_internal_r+0x1ec8>
   1522c:	d9003717 	ldw	r4,220(sp)
   15230:	90c04014 	ori	r3,r18,256
   15234:	d8c02c15 	stw	r3,176(sp)
   15238:	20015d16 	blt	r4,zero,157b0 <___svfprintf_internal_r+0x1f70>
   1523c:	dd003717 	ldw	r20,220(sp)
   15240:	d8002905 	stb	zero,164(sp)
   15244:	00801984 	movi	r2,102
   15248:	88814026 	beq	r17,r2,1574c <___svfprintf_internal_r+0x1f0c>
   1524c:	00801184 	movi	r2,70
   15250:	88817126 	beq	r17,r2,15818 <___svfprintf_internal_r+0x1fd8>
   15254:	00801144 	movi	r2,69
   15258:	b0816226 	beq	r22,r2,157e4 <___svfprintf_internal_r+0x1fa4>
   1525c:	d8c02a17 	ldw	r3,168(sp)
   15260:	d8802104 	addi	r2,sp,132
   15264:	d8800315 	stw	r2,12(sp)
   15268:	d9403617 	ldw	r5,216(sp)
   1526c:	d8802504 	addi	r2,sp,148
   15270:	d8800215 	stw	r2,8(sp)
   15274:	d8802604 	addi	r2,sp,152
   15278:	d8c00015 	stw	r3,0(sp)
   1527c:	d8800115 	stw	r2,4(sp)
   15280:	01c00084 	movi	r7,2
   15284:	a00d883a 	mov	r6,r20
   15288:	9809883a 	mov	r4,r19
   1528c:	d8c03d15 	stw	r3,244(sp)
   15290:	da003e15 	stw	r8,248(sp)
   15294:	0015d240 	call	15d24 <_dtoa_r>
   15298:	1021883a 	mov	r16,r2
   1529c:	008019c4 	movi	r2,103
   152a0:	d8c03d17 	ldw	r3,244(sp)
   152a4:	da003e17 	ldw	r8,248(sp)
   152a8:	8880e726 	beq	r17,r2,15648 <___svfprintf_internal_r+0x1e08>
   152ac:	008011c4 	movi	r2,71
   152b0:	8880d426 	beq	r17,r2,15604 <___svfprintf_internal_r+0x1dc4>
   152b4:	80f9883a 	add	fp,r16,r3
   152b8:	d9003617 	ldw	r4,216(sp)
   152bc:	000d883a 	mov	r6,zero
   152c0:	000f883a 	mov	r7,zero
   152c4:	a00b883a 	mov	r5,r20
   152c8:	da003e15 	stw	r8,248(sp)
   152cc:	001c0a00 	call	1c0a0 <__eqdf2>
   152d0:	da003e17 	ldw	r8,248(sp)
   152d4:	1000e426 	beq	r2,zero,15668 <___svfprintf_internal_r+0x1e28>
   152d8:	d8802117 	ldw	r2,132(sp)
   152dc:	1700062e 	bgeu	r2,fp,152f8 <___svfprintf_internal_r+0x1ab8>
   152e0:	01000c04 	movi	r4,48
   152e4:	10c00044 	addi	r3,r2,1
   152e8:	d8c02115 	stw	r3,132(sp)
   152ec:	11000005 	stb	r4,0(r2)
   152f0:	d8802117 	ldw	r2,132(sp)
   152f4:	173ffb36 	bltu	r2,fp,152e4 <_gp+0xfffef228>
   152f8:	1405c83a 	sub	r2,r2,r16
   152fc:	d8803315 	stw	r2,204(sp)
   15300:	008011c4 	movi	r2,71
   15304:	b080c526 	beq	r22,r2,1561c <___svfprintf_internal_r+0x1ddc>
   15308:	00801944 	movi	r2,101
   1530c:	1441d80e 	bge	r2,r17,15a70 <___svfprintf_internal_r+0x2230>
   15310:	d8c02617 	ldw	r3,152(sp)
   15314:	00801984 	movi	r2,102
   15318:	d8c03215 	stw	r3,200(sp)
   1531c:	88813426 	beq	r17,r2,157f0 <___svfprintf_internal_r+0x1fb0>
   15320:	d8c03217 	ldw	r3,200(sp)
   15324:	d9003317 	ldw	r4,204(sp)
   15328:	19012516 	blt	r3,r4,157c0 <___svfprintf_internal_r+0x1f80>
   1532c:	9480004c 	andi	r18,r18,1
   15330:	9001841e 	bne	r18,zero,15944 <___svfprintf_internal_r+0x2104>
   15334:	1805883a 	mov	r2,r3
   15338:	1801cb16 	blt	r3,zero,15a68 <___svfprintf_internal_r+0x2228>
   1533c:	d8c03217 	ldw	r3,200(sp)
   15340:	044019c4 	movi	r17,103
   15344:	d8c02b15 	stw	r3,172(sp)
   15348:	df002907 	ldb	fp,164(sp)
   1534c:	e000a61e 	bne	fp,zero,155e8 <___svfprintf_internal_r+0x1da8>
   15350:	df002783 	ldbu	fp,158(sp)
   15354:	d8802915 	stw	r2,164(sp)
   15358:	dc802c17 	ldw	r18,176(sp)
   1535c:	d8002a15 	stw	zero,168(sp)
   15360:	003af506 	br	13f38 <_gp+0xfffede7c>
   15364:	040000b4 	movhi	r16,2
   15368:	84357104 	addi	r16,r16,-10812
   1536c:	003a7e06 	br	13d68 <_gp+0xfffedcac>
   15370:	d9003917 	ldw	r4,228(sp)
   15374:	04001004 	movi	r16,64
   15378:	800b883a 	mov	r5,r16
   1537c:	001239c0 	call	1239c <_malloc_r>
   15380:	d9002d17 	ldw	r4,180(sp)
   15384:	20800015 	stw	r2,0(r4)
   15388:	20800415 	stw	r2,16(r4)
   1538c:	1001d026 	beq	r2,zero,15ad0 <___svfprintf_internal_r+0x2290>
   15390:	d8802d17 	ldw	r2,180(sp)
   15394:	14000515 	stw	r16,20(r2)
   15398:	00394406 	br	138ac <_gp+0xfffed7f0>
   1539c:	040000b4 	movhi	r16,2
   153a0:	84357304 	addi	r16,r16,-10804
   153a4:	003ee106 	br	14f2c <_gp+0xfffeee70>
   153a8:	d9402d17 	ldw	r5,180(sp)
   153ac:	d9801e04 	addi	r6,sp,120
   153b0:	9809883a 	mov	r4,r19
   153b4:	0018e040 	call	18e04 <__ssprint_r>
   153b8:	103a081e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   153bc:	dc402617 	ldw	r17,152(sp)
   153c0:	d8c02017 	ldw	r3,128(sp)
   153c4:	da000404 	addi	r8,sp,16
   153c8:	003f4306 	br	150d8 <_gp+0xfffef01c>
   153cc:	01400184 	movi	r5,6
   153d0:	d9402a15 	stw	r5,168(sp)
   153d4:	003f9506 	br	1522c <_gp+0xfffef170>
   153d8:	d8c02e17 	ldw	r3,184(sp)
   153dc:	1d000017 	ldw	r20,0(r3)
   153e0:	18c00104 	addi	r3,r3,4
   153e4:	d8c02e15 	stw	r3,184(sp)
   153e8:	a02dd7fa 	srai	r22,r20,31
   153ec:	b005883a 	mov	r2,r22
   153f0:	003a7606 	br	13dcc <_gp+0xfffedd10>
   153f4:	d9002e17 	ldw	r4,184(sp)
   153f8:	002d883a 	mov	r22,zero
   153fc:	25000017 	ldw	r20,0(r4)
   15400:	21000104 	addi	r4,r4,4
   15404:	d9002e15 	stw	r4,184(sp)
   15408:	003bdd06 	br	14380 <_gp+0xfffee2c4>
   1540c:	9480100c 	andi	r18,r18,64
   15410:	90006e26 	beq	r18,zero,155cc <___svfprintf_internal_r+0x1d8c>
   15414:	d9402e17 	ldw	r5,184(sp)
   15418:	d8c02f17 	ldw	r3,188(sp)
   1541c:	28800017 	ldw	r2,0(r5)
   15420:	29400104 	addi	r5,r5,4
   15424:	d9402e15 	stw	r5,184(sp)
   15428:	10c0000d 	sth	r3,0(r2)
   1542c:	00392f06 	br	138ec <_gp+0xfffed830>
   15430:	d9402d17 	ldw	r5,180(sp)
   15434:	d9801e04 	addi	r6,sp,120
   15438:	9809883a 	mov	r4,r19
   1543c:	0018e040 	call	18e04 <__ssprint_r>
   15440:	1039e61e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   15444:	d8c02017 	ldw	r3,128(sp)
   15448:	d8801f17 	ldw	r2,124(sp)
   1544c:	da000404 	addi	r8,sp,16
   15450:	d9403317 	ldw	r5,204(sp)
   15454:	10800044 	addi	r2,r2,1
   15458:	44000015 	stw	r16,0(r8)
   1545c:	28c7883a 	add	r3,r5,r3
   15460:	003b5506 	br	141b8 <_gp+0xfffee0fc>
   15464:	8009883a 	mov	r4,r16
   15468:	df003e15 	stw	fp,248(sp)
   1546c:	0018d6c0 	call	18d6c <strlen>
   15470:	d8802b15 	stw	r2,172(sp)
   15474:	da003e17 	ldw	r8,248(sp)
   15478:	103c160e 	bge	r2,zero,144d4 <_gp+0xfffee418>
   1547c:	0005883a 	mov	r2,zero
   15480:	003c1406 	br	144d4 <_gp+0xfffee418>
   15484:	00bfffc4 	movi	r2,-1
   15488:	0039d906 	br	13bf0 <_gp+0xfffedb34>
   1548c:	010000b4 	movhi	r4,2
   15490:	21358584 	addi	r4,r4,-10730
   15494:	d9003515 	stw	r4,212(sp)
   15498:	003ae406 	br	1402c <_gp+0xfffedf70>
   1549c:	013fffc4 	movi	r4,-1
   154a0:	0039fa06 	br	13c8c <_gp+0xfffedbd0>
   154a4:	d9402d17 	ldw	r5,180(sp)
   154a8:	d9801e04 	addi	r6,sp,120
   154ac:	9809883a 	mov	r4,r19
   154b0:	0018e040 	call	18e04 <__ssprint_r>
   154b4:	1039c91e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   154b8:	d8c02017 	ldw	r3,128(sp)
   154bc:	da000404 	addi	r8,sp,16
   154c0:	003d8406 	br	14ad4 <_gp+0xfffeea18>
   154c4:	0023883a 	mov	r17,zero
   154c8:	003d8306 	br	14ad8 <_gp+0xfffeea1c>
   154cc:	010000b4 	movhi	r4,2
   154d0:	21358184 	addi	r4,r4,-10746
   154d4:	d9002c15 	stw	r4,176(sp)
   154d8:	d9002c17 	ldw	r4,176(sp)
   154dc:	1c47883a 	add	r3,r3,r17
   154e0:	10800044 	addi	r2,r2,1
   154e4:	41000015 	stw	r4,0(r8)
   154e8:	44400115 	stw	r17,4(r8)
   154ec:	d8c02015 	stw	r3,128(sp)
   154f0:	d8801f15 	stw	r2,124(sp)
   154f4:	010001c4 	movi	r4,7
   154f8:	20bfcd16 	blt	r4,r2,15430 <_gp+0xfffef374>
   154fc:	42000204 	addi	r8,r8,8
   15500:	003fd306 	br	15450 <_gp+0xfffef394>
   15504:	d9402d17 	ldw	r5,180(sp)
   15508:	d9801e04 	addi	r6,sp,120
   1550c:	9809883a 	mov	r4,r19
   15510:	0018e040 	call	18e04 <__ssprint_r>
   15514:	1039b11e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   15518:	d8802617 	ldw	r2,152(sp)
   1551c:	d8c02017 	ldw	r3,128(sp)
   15520:	da000404 	addi	r8,sp,16
   15524:	003e1c06 	br	14d98 <_gp+0xfffeecdc>
   15528:	d8802a17 	ldw	r2,168(sp)
   1552c:	00c00184 	movi	r3,6
   15530:	1880012e 	bgeu	r3,r2,15538 <___svfprintf_internal_r+0x1cf8>
   15534:	1805883a 	mov	r2,r3
   15538:	d8802b15 	stw	r2,172(sp)
   1553c:	1000f316 	blt	r2,zero,1590c <___svfprintf_internal_r+0x20cc>
   15540:	040000b4 	movhi	r16,2
   15544:	d8802915 	stw	r2,164(sp)
   15548:	dd002e15 	stw	r20,184(sp)
   1554c:	d8002a15 	stw	zero,168(sp)
   15550:	d8003215 	stw	zero,200(sp)
   15554:	84357f04 	addi	r16,r16,-10756
   15558:	0039883a 	mov	fp,zero
   1555c:	003a7d06 	br	13f54 <_gp+0xfffede98>
   15560:	010000b4 	movhi	r4,2
   15564:	21358584 	addi	r4,r4,-10730
   15568:	d9003515 	stw	r4,212(sp)
   1556c:	003b3d06 	br	14264 <_gp+0xfffee1a8>
   15570:	d9402d17 	ldw	r5,180(sp)
   15574:	d9801e04 	addi	r6,sp,120
   15578:	9809883a 	mov	r4,r19
   1557c:	0018e040 	call	18e04 <__ssprint_r>
   15580:	1039961e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   15584:	d8802617 	ldw	r2,152(sp)
   15588:	d9403317 	ldw	r5,204(sp)
   1558c:	d8c02017 	ldw	r3,128(sp)
   15590:	da000404 	addi	r8,sp,16
   15594:	2885c83a 	sub	r2,r5,r2
   15598:	003e1006 	br	14ddc <_gp+0xfffeed20>
   1559c:	00800044 	movi	r2,1
   155a0:	10803fcc 	andi	r2,r2,255
   155a4:	00c00044 	movi	r3,1
   155a8:	10fa1026 	beq	r2,r3,13dec <_gp+0xfffedd30>
   155ac:	00c00084 	movi	r3,2
   155b0:	10fb8226 	beq	r2,r3,143bc <_gp+0xfffee300>
   155b4:	003a4206 	br	13ec0 <_gp+0xfffede04>
   155b8:	0021883a 	mov	r16,zero
   155bc:	003e0806 	br	14de0 <_gp+0xfffeed24>
   155c0:	07000b44 	movi	fp,45
   155c4:	df002785 	stb	fp,158(sp)
   155c8:	0039e306 	br	13d58 <_gp+0xfffedc9c>
   155cc:	d9002e17 	ldw	r4,184(sp)
   155d0:	d9402f17 	ldw	r5,188(sp)
   155d4:	20800017 	ldw	r2,0(r4)
   155d8:	21000104 	addi	r4,r4,4
   155dc:	d9002e15 	stw	r4,184(sp)
   155e0:	11400015 	stw	r5,0(r2)
   155e4:	0038c106 	br	138ec <_gp+0xfffed830>
   155e8:	00c00b44 	movi	r3,45
   155ec:	d8c02785 	stb	r3,158(sp)
   155f0:	d8802915 	stw	r2,164(sp)
   155f4:	dc802c17 	ldw	r18,176(sp)
   155f8:	d8002a15 	stw	zero,168(sp)
   155fc:	07000b44 	movi	fp,45
   15600:	003a5106 	br	13f48 <_gp+0xfffede8c>
   15604:	9080004c 	andi	r2,r18,1
   15608:	1000941e 	bne	r2,zero,1585c <___svfprintf_internal_r+0x201c>
   1560c:	d8802117 	ldw	r2,132(sp)
   15610:	1405c83a 	sub	r2,r2,r16
   15614:	d8803315 	stw	r2,204(sp)
   15618:	b441151e 	bne	r22,r17,15a70 <___svfprintf_internal_r+0x2230>
   1561c:	dd802617 	ldw	r22,152(sp)
   15620:	00bfff44 	movi	r2,-3
   15624:	b0801a16 	blt	r22,r2,15690 <___svfprintf_internal_r+0x1e50>
   15628:	d9402a17 	ldw	r5,168(sp)
   1562c:	2d801816 	blt	r5,r22,15690 <___svfprintf_internal_r+0x1e50>
   15630:	dd803215 	stw	r22,200(sp)
   15634:	003f3a06 	br	15320 <_gp+0xfffef264>
   15638:	1025883a 	mov	r18,r2
   1563c:	0039883a 	mov	fp,zero
   15640:	00800084 	movi	r2,2
   15644:	003fd606 	br	155a0 <_gp+0xfffef4e4>
   15648:	9080004c 	andi	r2,r18,1
   1564c:	103f191e 	bne	r2,zero,152b4 <_gp+0xfffef1f8>
   15650:	d8802117 	ldw	r2,132(sp)
   15654:	003f2806 	br	152f8 <_gp+0xfffef23c>
   15658:	010000b4 	movhi	r4,2
   1565c:	21358184 	addi	r4,r4,-10746
   15660:	d9002c15 	stw	r4,176(sp)
   15664:	003c7c06 	br	14858 <_gp+0xfffee79c>
   15668:	e005883a 	mov	r2,fp
   1566c:	003f2206 	br	152f8 <_gp+0xfffef23c>
   15670:	d9002a17 	ldw	r4,168(sp)
   15674:	df002783 	ldbu	fp,158(sp)
   15678:	dd002e15 	stw	r20,184(sp)
   1567c:	d9002915 	stw	r4,164(sp)
   15680:	d9002b15 	stw	r4,172(sp)
   15684:	d8002a15 	stw	zero,168(sp)
   15688:	d8003215 	stw	zero,200(sp)
   1568c:	003a2a06 	br	13f38 <_gp+0xfffede7c>
   15690:	8c7fff84 	addi	r17,r17,-2
   15694:	b5bfffc4 	addi	r22,r22,-1
   15698:	dd802615 	stw	r22,152(sp)
   1569c:	dc4022c5 	stb	r17,139(sp)
   156a0:	b000c316 	blt	r22,zero,159b0 <___svfprintf_internal_r+0x2170>
   156a4:	00800ac4 	movi	r2,43
   156a8:	d8802305 	stb	r2,140(sp)
   156ac:	00800244 	movi	r2,9
   156b0:	15806e16 	blt	r2,r22,1586c <___svfprintf_internal_r+0x202c>
   156b4:	00800c04 	movi	r2,48
   156b8:	b5800c04 	addi	r22,r22,48
   156bc:	d8802345 	stb	r2,141(sp)
   156c0:	dd802385 	stb	r22,142(sp)
   156c4:	d88023c4 	addi	r2,sp,143
   156c8:	df0022c4 	addi	fp,sp,139
   156cc:	d8c03317 	ldw	r3,204(sp)
   156d0:	1739c83a 	sub	fp,r2,fp
   156d4:	d9003317 	ldw	r4,204(sp)
   156d8:	e0c7883a 	add	r3,fp,r3
   156dc:	df003b15 	stw	fp,236(sp)
   156e0:	d8c02b15 	stw	r3,172(sp)
   156e4:	00800044 	movi	r2,1
   156e8:	1100b70e 	bge	r2,r4,159c8 <___svfprintf_internal_r+0x2188>
   156ec:	d8c02b17 	ldw	r3,172(sp)
   156f0:	18c00044 	addi	r3,r3,1
   156f4:	d8c02b15 	stw	r3,172(sp)
   156f8:	1805883a 	mov	r2,r3
   156fc:	1800b016 	blt	r3,zero,159c0 <___svfprintf_internal_r+0x2180>
   15700:	d8003215 	stw	zero,200(sp)
   15704:	003f1006 	br	15348 <_gp+0xfffef28c>
   15708:	d8802a17 	ldw	r2,168(sp)
   1570c:	103ec71e 	bne	r2,zero,1522c <_gp+0xfffef170>
   15710:	dc002a15 	stw	r16,168(sp)
   15714:	003ec506 	br	1522c <_gp+0xfffef170>
   15718:	d9402d17 	ldw	r5,180(sp)
   1571c:	d9801e04 	addi	r6,sp,120
   15720:	9809883a 	mov	r4,r19
   15724:	0018e040 	call	18e04 <__ssprint_r>
   15728:	10392c1e 	bne	r2,zero,13bdc <_gp+0xfffedb20>
   1572c:	dc402617 	ldw	r17,152(sp)
   15730:	d8c02017 	ldw	r3,128(sp)
   15734:	d8801f17 	ldw	r2,124(sp)
   15738:	da000404 	addi	r8,sp,16
   1573c:	003e7706 	br	1511c <_gp+0xfffef060>
   15740:	182f883a 	mov	r23,r3
   15744:	d8002a15 	stw	zero,168(sp)
   15748:	00389306 	br	13998 <_gp+0xfffed8dc>
   1574c:	d8c02a17 	ldw	r3,168(sp)
   15750:	d8802104 	addi	r2,sp,132
   15754:	d8800315 	stw	r2,12(sp)
   15758:	d9403617 	ldw	r5,216(sp)
   1575c:	d8802504 	addi	r2,sp,148
   15760:	d8800215 	stw	r2,8(sp)
   15764:	d8802604 	addi	r2,sp,152
   15768:	d8c00015 	stw	r3,0(sp)
   1576c:	9809883a 	mov	r4,r19
   15770:	d8800115 	stw	r2,4(sp)
   15774:	01c000c4 	movi	r7,3
   15778:	a00d883a 	mov	r6,r20
   1577c:	da003e15 	stw	r8,248(sp)
   15780:	0015d240 	call	15d24 <_dtoa_r>
   15784:	d9002a17 	ldw	r4,168(sp)
   15788:	da003e17 	ldw	r8,248(sp)
   1578c:	1021883a 	mov	r16,r2
   15790:	1139883a 	add	fp,r2,r4
   15794:	2007883a 	mov	r3,r4
   15798:	81000007 	ldb	r4,0(r16)
   1579c:	00800c04 	movi	r2,48
   157a0:	20806f26 	beq	r4,r2,15960 <___svfprintf_internal_r+0x2120>
   157a4:	d8c02617 	ldw	r3,152(sp)
   157a8:	e0f9883a 	add	fp,fp,r3
   157ac:	003ec206 	br	152b8 <_gp+0xfffef1fc>
   157b0:	00c00b44 	movi	r3,45
   157b4:	2520003c 	xorhi	r20,r4,32768
   157b8:	d8c02905 	stb	r3,164(sp)
   157bc:	003ea106 	br	15244 <_gp+0xfffef188>
   157c0:	d8c03217 	ldw	r3,200(sp)
   157c4:	00c0890e 	bge	zero,r3,159ec <___svfprintf_internal_r+0x21ac>
   157c8:	00800044 	movi	r2,1
   157cc:	d9003317 	ldw	r4,204(sp)
   157d0:	1105883a 	add	r2,r2,r4
   157d4:	d8802b15 	stw	r2,172(sp)
   157d8:	10005f16 	blt	r2,zero,15958 <___svfprintf_internal_r+0x2118>
   157dc:	044019c4 	movi	r17,103
   157e0:	003ed906 	br	15348 <_gp+0xfffef28c>
   157e4:	d9002a17 	ldw	r4,168(sp)
   157e8:	20c00044 	addi	r3,r4,1
   157ec:	003e9c06 	br	15260 <_gp+0xfffef1a4>
   157f0:	d9002a17 	ldw	r4,168(sp)
   157f4:	00c0680e 	bge	zero,r3,15998 <___svfprintf_internal_r+0x2158>
   157f8:	2000461e 	bne	r4,zero,15914 <___svfprintf_internal_r+0x20d4>
   157fc:	9480004c 	andi	r18,r18,1
   15800:	9000441e 	bne	r18,zero,15914 <___svfprintf_internal_r+0x20d4>
   15804:	1805883a 	mov	r2,r3
   15808:	1800a116 	blt	r3,zero,15a90 <___svfprintf_internal_r+0x2250>
   1580c:	d8c03217 	ldw	r3,200(sp)
   15810:	d8c02b15 	stw	r3,172(sp)
   15814:	003ecc06 	br	15348 <_gp+0xfffef28c>
   15818:	d9402a17 	ldw	r5,168(sp)
   1581c:	d8802104 	addi	r2,sp,132
   15820:	d8800315 	stw	r2,12(sp)
   15824:	d9400015 	stw	r5,0(sp)
   15828:	d8802504 	addi	r2,sp,148
   1582c:	d9403617 	ldw	r5,216(sp)
   15830:	d8800215 	stw	r2,8(sp)
   15834:	d8802604 	addi	r2,sp,152
   15838:	d8800115 	stw	r2,4(sp)
   1583c:	01c000c4 	movi	r7,3
   15840:	a00d883a 	mov	r6,r20
   15844:	9809883a 	mov	r4,r19
   15848:	da003e15 	stw	r8,248(sp)
   1584c:	0015d240 	call	15d24 <_dtoa_r>
   15850:	d8c02a17 	ldw	r3,168(sp)
   15854:	da003e17 	ldw	r8,248(sp)
   15858:	1021883a 	mov	r16,r2
   1585c:	00801184 	movi	r2,70
   15860:	80f9883a 	add	fp,r16,r3
   15864:	88bfcc26 	beq	r17,r2,15798 <_gp+0xfffef6dc>
   15868:	003e9306 	br	152b8 <_gp+0xfffef1fc>
   1586c:	df0022c4 	addi	fp,sp,139
   15870:	dc002a15 	stw	r16,168(sp)
   15874:	9829883a 	mov	r20,r19
   15878:	e021883a 	mov	r16,fp
   1587c:	4027883a 	mov	r19,r8
   15880:	b009883a 	mov	r4,r22
   15884:	01400284 	movi	r5,10
   15888:	0010e680 	call	10e68 <__modsi3>
   1588c:	10800c04 	addi	r2,r2,48
   15890:	843fffc4 	addi	r16,r16,-1
   15894:	b009883a 	mov	r4,r22
   15898:	01400284 	movi	r5,10
   1589c:	80800005 	stb	r2,0(r16)
   158a0:	0010de40 	call	10de4 <__divsi3>
   158a4:	102d883a 	mov	r22,r2
   158a8:	00800244 	movi	r2,9
   158ac:	15bff416 	blt	r2,r22,15880 <_gp+0xfffef7c4>
   158b0:	9811883a 	mov	r8,r19
   158b4:	b0800c04 	addi	r2,r22,48
   158b8:	a027883a 	mov	r19,r20
   158bc:	8029883a 	mov	r20,r16
   158c0:	a17fffc4 	addi	r5,r20,-1
   158c4:	a0bfffc5 	stb	r2,-1(r20)
   158c8:	dc002a17 	ldw	r16,168(sp)
   158cc:	2f00782e 	bgeu	r5,fp,15ab0 <___svfprintf_internal_r+0x2270>
   158d0:	d9c02384 	addi	r7,sp,142
   158d4:	3d0fc83a 	sub	r7,r7,r20
   158d8:	d9002344 	addi	r4,sp,141
   158dc:	e1cf883a 	add	r7,fp,r7
   158e0:	00000106 	br	158e8 <___svfprintf_internal_r+0x20a8>
   158e4:	28800003 	ldbu	r2,0(r5)
   158e8:	20800005 	stb	r2,0(r4)
   158ec:	21000044 	addi	r4,r4,1
   158f0:	29400044 	addi	r5,r5,1
   158f4:	21fffb1e 	bne	r4,r7,158e4 <_gp+0xfffef828>
   158f8:	d8802304 	addi	r2,sp,140
   158fc:	1505c83a 	sub	r2,r2,r20
   15900:	d8c02344 	addi	r3,sp,141
   15904:	1885883a 	add	r2,r3,r2
   15908:	003f7006 	br	156cc <_gp+0xfffef610>
   1590c:	0005883a 	mov	r2,zero
   15910:	003f0b06 	br	15540 <_gp+0xfffef484>
   15914:	d9002a17 	ldw	r4,168(sp)
   15918:	d8c03217 	ldw	r3,200(sp)
   1591c:	20800044 	addi	r2,r4,1
   15920:	1885883a 	add	r2,r3,r2
   15924:	d8802b15 	stw	r2,172(sp)
   15928:	103e870e 	bge	r2,zero,15348 <_gp+0xfffef28c>
   1592c:	0005883a 	mov	r2,zero
   15930:	003e8506 	br	15348 <_gp+0xfffef28c>
   15934:	010000b4 	movhi	r4,2
   15938:	21358184 	addi	r4,r4,-10746
   1593c:	d9002c15 	stw	r4,176(sp)
   15940:	003cc506 	br	14c58 <_gp+0xfffeeb9c>
   15944:	d8c03217 	ldw	r3,200(sp)
   15948:	18c00044 	addi	r3,r3,1
   1594c:	d8c02b15 	stw	r3,172(sp)
   15950:	1805883a 	mov	r2,r3
   15954:	183fa10e 	bge	r3,zero,157dc <_gp+0xfffef720>
   15958:	0005883a 	mov	r2,zero
   1595c:	003f9f06 	br	157dc <_gp+0xfffef720>
   15960:	d9003617 	ldw	r4,216(sp)
   15964:	000d883a 	mov	r6,zero
   15968:	000f883a 	mov	r7,zero
   1596c:	a00b883a 	mov	r5,r20
   15970:	d8c03d15 	stw	r3,244(sp)
   15974:	da003e15 	stw	r8,248(sp)
   15978:	001c0a00 	call	1c0a0 <__eqdf2>
   1597c:	d8c03d17 	ldw	r3,244(sp)
   15980:	da003e17 	ldw	r8,248(sp)
   15984:	103f8726 	beq	r2,zero,157a4 <_gp+0xfffef6e8>
   15988:	00800044 	movi	r2,1
   1598c:	10c7c83a 	sub	r3,r2,r3
   15990:	d8c02615 	stw	r3,152(sp)
   15994:	003f8406 	br	157a8 <_gp+0xfffef6ec>
   15998:	20000e1e 	bne	r4,zero,159d4 <___svfprintf_internal_r+0x2194>
   1599c:	9480004c 	andi	r18,r18,1
   159a0:	90000c1e 	bne	r18,zero,159d4 <___svfprintf_internal_r+0x2194>
   159a4:	00800044 	movi	r2,1
   159a8:	d8802b15 	stw	r2,172(sp)
   159ac:	003e6606 	br	15348 <_gp+0xfffef28c>
   159b0:	00800b44 	movi	r2,45
   159b4:	05adc83a 	sub	r22,zero,r22
   159b8:	d8802305 	stb	r2,140(sp)
   159bc:	003f3b06 	br	156ac <_gp+0xfffef5f0>
   159c0:	0005883a 	mov	r2,zero
   159c4:	003f4e06 	br	15700 <_gp+0xfffef644>
   159c8:	90a4703a 	and	r18,r18,r2
   159cc:	903f4a26 	beq	r18,zero,156f8 <_gp+0xfffef63c>
   159d0:	003f4606 	br	156ec <_gp+0xfffef630>
   159d4:	d8c02a17 	ldw	r3,168(sp)
   159d8:	18c00084 	addi	r3,r3,2
   159dc:	d8c02b15 	stw	r3,172(sp)
   159e0:	1805883a 	mov	r2,r3
   159e4:	183e580e 	bge	r3,zero,15348 <_gp+0xfffef28c>
   159e8:	003fd006 	br	1592c <_gp+0xfffef870>
   159ec:	00800084 	movi	r2,2
   159f0:	10c5c83a 	sub	r2,r2,r3
   159f4:	003f7506 	br	157cc <_gp+0xfffef710>
   159f8:	d9402e17 	ldw	r5,184(sp)
   159fc:	d9002e17 	ldw	r4,184(sp)
   15a00:	bc400043 	ldbu	r17,1(r23)
   15a04:	29400017 	ldw	r5,0(r5)
   15a08:	20800104 	addi	r2,r4,4
   15a0c:	d8802e15 	stw	r2,184(sp)
   15a10:	d9402a15 	stw	r5,168(sp)
   15a14:	182f883a 	mov	r23,r3
   15a18:	283df10e 	bge	r5,zero,151e0 <_gp+0xfffef124>
   15a1c:	8c403fcc 	andi	r17,r17,255
   15a20:	017fffc4 	movi	r5,-1
   15a24:	8c40201c 	xori	r17,r17,128
   15a28:	d9402a15 	stw	r5,168(sp)
   15a2c:	8c7fe004 	addi	r17,r17,-128
   15a30:	0037d806 	br	13994 <_gp+0xfffed8d8>
   15a34:	9080004c 	andi	r2,r18,1
   15a38:	0039883a 	mov	fp,zero
   15a3c:	10000726 	beq	r2,zero,15a5c <___svfprintf_internal_r+0x221c>
   15a40:	d8c02817 	ldw	r3,160(sp)
   15a44:	dc001dc4 	addi	r16,sp,119
   15a48:	00800c04 	movi	r2,48
   15a4c:	1c07c83a 	sub	r3,r3,r16
   15a50:	d8801dc5 	stb	r2,119(sp)
   15a54:	d8c02b15 	stw	r3,172(sp)
   15a58:	00393106 	br	13f20 <_gp+0xfffede64>
   15a5c:	d8002b15 	stw	zero,172(sp)
   15a60:	dc001e04 	addi	r16,sp,120
   15a64:	00392e06 	br	13f20 <_gp+0xfffede64>
   15a68:	0005883a 	mov	r2,zero
   15a6c:	003e3306 	br	1533c <_gp+0xfffef280>
   15a70:	dd802617 	ldw	r22,152(sp)
   15a74:	003f0706 	br	15694 <_gp+0xfffef5d8>
   15a78:	d8c02b03 	ldbu	r3,172(sp)
   15a7c:	d8c02785 	stb	r3,158(sp)
   15a80:	003a3506 	br	14358 <_gp+0xfffee29c>
   15a84:	d8c02b03 	ldbu	r3,172(sp)
   15a88:	d8c02785 	stb	r3,158(sp)
   15a8c:	003a1706 	br	142ec <_gp+0xfffee230>
   15a90:	0005883a 	mov	r2,zero
   15a94:	003f5d06 	br	1580c <_gp+0xfffef750>
   15a98:	d8c02b03 	ldbu	r3,172(sp)
   15a9c:	d8c02785 	stb	r3,158(sp)
   15aa0:	0038f306 	br	13e70 <_gp+0xfffeddb4>
   15aa4:	d8c02b03 	ldbu	r3,172(sp)
   15aa8:	d8c02785 	stb	r3,158(sp)
   15aac:	0038be06 	br	13da8 <_gp+0xfffedcec>
   15ab0:	d8802344 	addi	r2,sp,141
   15ab4:	003f0506 	br	156cc <_gp+0xfffef610>
   15ab8:	d8c02b03 	ldbu	r3,172(sp)
   15abc:	d8c02785 	stb	r3,158(sp)
   15ac0:	00388b06 	br	13cf0 <_gp+0xfffedc34>
   15ac4:	d8c02b03 	ldbu	r3,172(sp)
   15ac8:	d8c02785 	stb	r3,158(sp)
   15acc:	003ad706 	br	1462c <_gp+0xfffee570>
   15ad0:	d9403917 	ldw	r5,228(sp)
   15ad4:	00800304 	movi	r2,12
   15ad8:	28800015 	stw	r2,0(r5)
   15adc:	00bfffc4 	movi	r2,-1
   15ae0:	00384306 	br	13bf0 <_gp+0xfffedb34>
   15ae4:	d8c02b03 	ldbu	r3,172(sp)
   15ae8:	d8c02785 	stb	r3,158(sp)
   15aec:	003ab606 	br	145c8 <_gp+0xfffee50c>
   15af0:	d8c02b03 	ldbu	r3,172(sp)
   15af4:	d8c02785 	stb	r3,158(sp)
   15af8:	003a8906 	br	14520 <_gp+0xfffee464>

00015afc <quorem>:
   15afc:	defff204 	addi	sp,sp,-56
   15b00:	ddc00b15 	stw	r23,44(sp)
   15b04:	20800417 	ldw	r2,16(r4)
   15b08:	2dc00417 	ldw	r23,16(r5)
   15b0c:	dfc00d15 	stw	ra,52(sp)
   15b10:	df000c15 	stw	fp,48(sp)
   15b14:	dd800a15 	stw	r22,40(sp)
   15b18:	dd400915 	stw	r21,36(sp)
   15b1c:	dd000815 	stw	r20,32(sp)
   15b20:	dcc00715 	stw	r19,28(sp)
   15b24:	dc800615 	stw	r18,24(sp)
   15b28:	dc400515 	stw	r17,20(sp)
   15b2c:	dc000415 	stw	r16,16(sp)
   15b30:	15c07a16 	blt	r2,r23,15d1c <quorem+0x220>
   15b34:	bdffffc4 	addi	r23,r23,-1
   15b38:	bde9883a 	add	r20,r23,r23
   15b3c:	28c00504 	addi	r3,r5,20
   15b40:	a529883a 	add	r20,r20,r20
   15b44:	1d39883a 	add	fp,r3,r20
   15b48:	24c00504 	addi	r19,r4,20
   15b4c:	d9400215 	stw	r5,8(sp)
   15b50:	9d29883a 	add	r20,r19,r20
   15b54:	e1400017 	ldw	r5,0(fp)
   15b58:	d9000015 	stw	r4,0(sp)
   15b5c:	a1000017 	ldw	r4,0(r20)
   15b60:	29400044 	addi	r5,r5,1
   15b64:	d8c00115 	stw	r3,4(sp)
   15b68:	dd000315 	stw	r20,12(sp)
   15b6c:	0010edc0 	call	10edc <__udivsi3>
   15b70:	1025883a 	mov	r18,r2
   15b74:	10003026 	beq	r2,zero,15c38 <quorem+0x13c>
   15b78:	dc400117 	ldw	r17,4(sp)
   15b7c:	9829883a 	mov	r20,r19
   15b80:	002d883a 	mov	r22,zero
   15b84:	0021883a 	mov	r16,zero
   15b88:	8d400017 	ldw	r21,0(r17)
   15b8c:	900b883a 	mov	r5,r18
   15b90:	8c400104 	addi	r17,r17,4
   15b94:	a93fffcc 	andi	r4,r21,65535
   15b98:	00122700 	call	12270 <__mulsi3>
   15b9c:	a808d43a 	srli	r4,r21,16
   15ba0:	900b883a 	mov	r5,r18
   15ba4:	15ad883a 	add	r22,r2,r22
   15ba8:	00122700 	call	12270 <__mulsi3>
   15bac:	a1000017 	ldw	r4,0(r20)
   15bb0:	b00cd43a 	srli	r6,r22,16
   15bb4:	b0ffffcc 	andi	r3,r22,65535
   15bb8:	217fffcc 	andi	r5,r4,65535
   15bbc:	2c21883a 	add	r16,r5,r16
   15bc0:	80c7c83a 	sub	r3,r16,r3
   15bc4:	2008d43a 	srli	r4,r4,16
   15bc8:	1185883a 	add	r2,r2,r6
   15bcc:	1821d43a 	srai	r16,r3,16
   15bd0:	117fffcc 	andi	r5,r2,65535
   15bd4:	2149c83a 	sub	r4,r4,r5
   15bd8:	2421883a 	add	r16,r4,r16
   15bdc:	8008943a 	slli	r4,r16,16
   15be0:	18ffffcc 	andi	r3,r3,65535
   15be4:	102cd43a 	srli	r22,r2,16
   15be8:	20c8b03a 	or	r4,r4,r3
   15bec:	a1000015 	stw	r4,0(r20)
   15bf0:	8021d43a 	srai	r16,r16,16
   15bf4:	a5000104 	addi	r20,r20,4
   15bf8:	e47fe32e 	bgeu	fp,r17,15b88 <_gp+0xfffefacc>
   15bfc:	d8c00317 	ldw	r3,12(sp)
   15c00:	18800017 	ldw	r2,0(r3)
   15c04:	10000c1e 	bne	r2,zero,15c38 <quorem+0x13c>
   15c08:	18bfff04 	addi	r2,r3,-4
   15c0c:	9880082e 	bgeu	r19,r2,15c30 <quorem+0x134>
   15c10:	18ffff17 	ldw	r3,-4(r3)
   15c14:	18000326 	beq	r3,zero,15c24 <quorem+0x128>
   15c18:	00000506 	br	15c30 <quorem+0x134>
   15c1c:	10c00017 	ldw	r3,0(r2)
   15c20:	1800031e 	bne	r3,zero,15c30 <quorem+0x134>
   15c24:	10bfff04 	addi	r2,r2,-4
   15c28:	bdffffc4 	addi	r23,r23,-1
   15c2c:	98bffb36 	bltu	r19,r2,15c1c <_gp+0xfffefb60>
   15c30:	d8c00017 	ldw	r3,0(sp)
   15c34:	1dc00415 	stw	r23,16(r3)
   15c38:	d9400217 	ldw	r5,8(sp)
   15c3c:	d9000017 	ldw	r4,0(sp)
   15c40:	00184e80 	call	184e8 <__mcmp>
   15c44:	10002816 	blt	r2,zero,15ce8 <quorem+0x1ec>
   15c48:	dc400117 	ldw	r17,4(sp)
   15c4c:	94800044 	addi	r18,r18,1
   15c50:	980d883a 	mov	r6,r19
   15c54:	0007883a 	mov	r3,zero
   15c58:	31000017 	ldw	r4,0(r6)
   15c5c:	89400017 	ldw	r5,0(r17)
   15c60:	31800104 	addi	r6,r6,4
   15c64:	20bfffcc 	andi	r2,r4,65535
   15c68:	10c7883a 	add	r3,r2,r3
   15c6c:	28bfffcc 	andi	r2,r5,65535
   15c70:	1885c83a 	sub	r2,r3,r2
   15c74:	280ad43a 	srli	r5,r5,16
   15c78:	2008d43a 	srli	r4,r4,16
   15c7c:	1007d43a 	srai	r3,r2,16
   15c80:	10bfffcc 	andi	r2,r2,65535
   15c84:	2149c83a 	sub	r4,r4,r5
   15c88:	20c9883a 	add	r4,r4,r3
   15c8c:	200a943a 	slli	r5,r4,16
   15c90:	8c400104 	addi	r17,r17,4
   15c94:	2007d43a 	srai	r3,r4,16
   15c98:	2884b03a 	or	r2,r5,r2
   15c9c:	30bfff15 	stw	r2,-4(r6)
   15ca0:	e47fed2e 	bgeu	fp,r17,15c58 <_gp+0xfffefb9c>
   15ca4:	bdc5883a 	add	r2,r23,r23
   15ca8:	1085883a 	add	r2,r2,r2
   15cac:	9887883a 	add	r3,r19,r2
   15cb0:	18800017 	ldw	r2,0(r3)
   15cb4:	10000c1e 	bne	r2,zero,15ce8 <quorem+0x1ec>
   15cb8:	18bfff04 	addi	r2,r3,-4
   15cbc:	9880082e 	bgeu	r19,r2,15ce0 <quorem+0x1e4>
   15cc0:	18ffff17 	ldw	r3,-4(r3)
   15cc4:	18000326 	beq	r3,zero,15cd4 <quorem+0x1d8>
   15cc8:	00000506 	br	15ce0 <quorem+0x1e4>
   15ccc:	10c00017 	ldw	r3,0(r2)
   15cd0:	1800031e 	bne	r3,zero,15ce0 <quorem+0x1e4>
   15cd4:	10bfff04 	addi	r2,r2,-4
   15cd8:	bdffffc4 	addi	r23,r23,-1
   15cdc:	98bffb36 	bltu	r19,r2,15ccc <_gp+0xfffefc10>
   15ce0:	d8c00017 	ldw	r3,0(sp)
   15ce4:	1dc00415 	stw	r23,16(r3)
   15ce8:	9005883a 	mov	r2,r18
   15cec:	dfc00d17 	ldw	ra,52(sp)
   15cf0:	df000c17 	ldw	fp,48(sp)
   15cf4:	ddc00b17 	ldw	r23,44(sp)
   15cf8:	dd800a17 	ldw	r22,40(sp)
   15cfc:	dd400917 	ldw	r21,36(sp)
   15d00:	dd000817 	ldw	r20,32(sp)
   15d04:	dcc00717 	ldw	r19,28(sp)
   15d08:	dc800617 	ldw	r18,24(sp)
   15d0c:	dc400517 	ldw	r17,20(sp)
   15d10:	dc000417 	ldw	r16,16(sp)
   15d14:	dec00e04 	addi	sp,sp,56
   15d18:	f800283a 	ret
   15d1c:	0005883a 	mov	r2,zero
   15d20:	003ff206 	br	15cec <_gp+0xfffefc30>

00015d24 <_dtoa_r>:
   15d24:	20801017 	ldw	r2,64(r4)
   15d28:	deffde04 	addi	sp,sp,-136
   15d2c:	df002015 	stw	fp,128(sp)
   15d30:	dcc01b15 	stw	r19,108(sp)
   15d34:	dc801a15 	stw	r18,104(sp)
   15d38:	dc401915 	stw	r17,100(sp)
   15d3c:	dc001815 	stw	r16,96(sp)
   15d40:	dfc02115 	stw	ra,132(sp)
   15d44:	ddc01f15 	stw	r23,124(sp)
   15d48:	dd801e15 	stw	r22,120(sp)
   15d4c:	dd401d15 	stw	r21,116(sp)
   15d50:	dd001c15 	stw	r20,112(sp)
   15d54:	d9c00315 	stw	r7,12(sp)
   15d58:	2039883a 	mov	fp,r4
   15d5c:	3023883a 	mov	r17,r6
   15d60:	2825883a 	mov	r18,r5
   15d64:	dc002417 	ldw	r16,144(sp)
   15d68:	3027883a 	mov	r19,r6
   15d6c:	10000826 	beq	r2,zero,15d90 <_dtoa_r+0x6c>
   15d70:	21801117 	ldw	r6,68(r4)
   15d74:	00c00044 	movi	r3,1
   15d78:	100b883a 	mov	r5,r2
   15d7c:	1986983a 	sll	r3,r3,r6
   15d80:	11800115 	stw	r6,4(r2)
   15d84:	10c00215 	stw	r3,8(r2)
   15d88:	0017c0c0 	call	17c0c <_Bfree>
   15d8c:	e0001015 	stw	zero,64(fp)
   15d90:	88002e16 	blt	r17,zero,15e4c <_dtoa_r+0x128>
   15d94:	80000015 	stw	zero,0(r16)
   15d98:	889ffc2c 	andhi	r2,r17,32752
   15d9c:	00dffc34 	movhi	r3,32752
   15da0:	10c01c26 	beq	r2,r3,15e14 <_dtoa_r+0xf0>
   15da4:	000d883a 	mov	r6,zero
   15da8:	000f883a 	mov	r7,zero
   15dac:	9009883a 	mov	r4,r18
   15db0:	980b883a 	mov	r5,r19
   15db4:	001c0a00 	call	1c0a0 <__eqdf2>
   15db8:	10002b1e 	bne	r2,zero,15e68 <_dtoa_r+0x144>
   15dbc:	d9c02317 	ldw	r7,140(sp)
   15dc0:	00800044 	movi	r2,1
   15dc4:	38800015 	stw	r2,0(r7)
   15dc8:	d8802517 	ldw	r2,148(sp)
   15dcc:	10019e26 	beq	r2,zero,16448 <_dtoa_r+0x724>
   15dd0:	d8c02517 	ldw	r3,148(sp)
   15dd4:	008000b4 	movhi	r2,2
   15dd8:	10b58144 	addi	r2,r2,-10747
   15ddc:	18800015 	stw	r2,0(r3)
   15de0:	10bfffc4 	addi	r2,r2,-1
   15de4:	dfc02117 	ldw	ra,132(sp)
   15de8:	df002017 	ldw	fp,128(sp)
   15dec:	ddc01f17 	ldw	r23,124(sp)
   15df0:	dd801e17 	ldw	r22,120(sp)
   15df4:	dd401d17 	ldw	r21,116(sp)
   15df8:	dd001c17 	ldw	r20,112(sp)
   15dfc:	dcc01b17 	ldw	r19,108(sp)
   15e00:	dc801a17 	ldw	r18,104(sp)
   15e04:	dc401917 	ldw	r17,100(sp)
   15e08:	dc001817 	ldw	r16,96(sp)
   15e0c:	dec02204 	addi	sp,sp,136
   15e10:	f800283a 	ret
   15e14:	d8c02317 	ldw	r3,140(sp)
   15e18:	0089c3c4 	movi	r2,9999
   15e1c:	18800015 	stw	r2,0(r3)
   15e20:	90017726 	beq	r18,zero,16400 <_dtoa_r+0x6dc>
   15e24:	008000b4 	movhi	r2,2
   15e28:	10b58d04 	addi	r2,r2,-10700
   15e2c:	d9002517 	ldw	r4,148(sp)
   15e30:	203fec26 	beq	r4,zero,15de4 <_gp+0xfffefd28>
   15e34:	10c000c7 	ldb	r3,3(r2)
   15e38:	1801781e 	bne	r3,zero,1641c <_dtoa_r+0x6f8>
   15e3c:	10c000c4 	addi	r3,r2,3
   15e40:	d9802517 	ldw	r6,148(sp)
   15e44:	30c00015 	stw	r3,0(r6)
   15e48:	003fe606 	br	15de4 <_gp+0xfffefd28>
   15e4c:	04e00034 	movhi	r19,32768
   15e50:	9cffffc4 	addi	r19,r19,-1
   15e54:	00800044 	movi	r2,1
   15e58:	8ce6703a 	and	r19,r17,r19
   15e5c:	80800015 	stw	r2,0(r16)
   15e60:	9823883a 	mov	r17,r19
   15e64:	003fcc06 	br	15d98 <_gp+0xfffefcdc>
   15e68:	d8800204 	addi	r2,sp,8
   15e6c:	d8800015 	stw	r2,0(sp)
   15e70:	d9c00104 	addi	r7,sp,4
   15e74:	900b883a 	mov	r5,r18
   15e78:	980d883a 	mov	r6,r19
   15e7c:	e009883a 	mov	r4,fp
   15e80:	8820d53a 	srli	r16,r17,20
   15e84:	00188b40 	call	188b4 <__d2b>
   15e88:	d8800915 	stw	r2,36(sp)
   15e8c:	8001651e 	bne	r16,zero,16424 <_dtoa_r+0x700>
   15e90:	dd800217 	ldw	r22,8(sp)
   15e94:	dc000117 	ldw	r16,4(sp)
   15e98:	00800804 	movi	r2,32
   15e9c:	b421883a 	add	r16,r22,r16
   15ea0:	80c10c84 	addi	r3,r16,1074
   15ea4:	10c2d10e 	bge	r2,r3,169ec <_dtoa_r+0xcc8>
   15ea8:	00801004 	movi	r2,64
   15eac:	81010484 	addi	r4,r16,1042
   15eb0:	10c7c83a 	sub	r3,r2,r3
   15eb4:	9108d83a 	srl	r4,r18,r4
   15eb8:	88e2983a 	sll	r17,r17,r3
   15ebc:	2448b03a 	or	r4,r4,r17
   15ec0:	001cbf40 	call	1cbf4 <__floatunsidf>
   15ec4:	017f8434 	movhi	r5,65040
   15ec8:	01800044 	movi	r6,1
   15ecc:	1009883a 	mov	r4,r2
   15ed0:	194b883a 	add	r5,r3,r5
   15ed4:	843fffc4 	addi	r16,r16,-1
   15ed8:	d9801115 	stw	r6,68(sp)
   15edc:	000d883a 	mov	r6,zero
   15ee0:	01cffe34 	movhi	r7,16376
   15ee4:	001c2f80 	call	1c2f8 <__subdf3>
   15ee8:	0198dbf4 	movhi	r6,25455
   15eec:	01cff4f4 	movhi	r7,16339
   15ef0:	3190d844 	addi	r6,r6,17249
   15ef4:	39e1e9c4 	addi	r7,r7,-30809
   15ef8:	1009883a 	mov	r4,r2
   15efc:	180b883a 	mov	r5,r3
   15f00:	00118440 	call	11844 <__muldf3>
   15f04:	01a2d874 	movhi	r6,35681
   15f08:	01cff1f4 	movhi	r7,16327
   15f0c:	31b22cc4 	addi	r6,r6,-14157
   15f10:	39e28a04 	addi	r7,r7,-30168
   15f14:	180b883a 	mov	r5,r3
   15f18:	1009883a 	mov	r4,r2
   15f1c:	0010f980 	call	10f98 <__adddf3>
   15f20:	8009883a 	mov	r4,r16
   15f24:	1029883a 	mov	r20,r2
   15f28:	1823883a 	mov	r17,r3
   15f2c:	00121300 	call	12130 <__floatsidf>
   15f30:	019427f4 	movhi	r6,20639
   15f34:	01cff4f4 	movhi	r7,16339
   15f38:	319e7ec4 	addi	r6,r6,31227
   15f3c:	39d104c4 	addi	r7,r7,17427
   15f40:	1009883a 	mov	r4,r2
   15f44:	180b883a 	mov	r5,r3
   15f48:	00118440 	call	11844 <__muldf3>
   15f4c:	100d883a 	mov	r6,r2
   15f50:	180f883a 	mov	r7,r3
   15f54:	a009883a 	mov	r4,r20
   15f58:	880b883a 	mov	r5,r17
   15f5c:	0010f980 	call	10f98 <__adddf3>
   15f60:	1009883a 	mov	r4,r2
   15f64:	180b883a 	mov	r5,r3
   15f68:	1029883a 	mov	r20,r2
   15f6c:	1823883a 	mov	r17,r3
   15f70:	00120b00 	call	120b0 <__fixdfsi>
   15f74:	000d883a 	mov	r6,zero
   15f78:	000f883a 	mov	r7,zero
   15f7c:	a009883a 	mov	r4,r20
   15f80:	880b883a 	mov	r5,r17
   15f84:	d8800515 	stw	r2,20(sp)
   15f88:	001c2040 	call	1c204 <__ledf2>
   15f8c:	10028716 	blt	r2,zero,169ac <_dtoa_r+0xc88>
   15f90:	d8c00517 	ldw	r3,20(sp)
   15f94:	00800584 	movi	r2,22
   15f98:	10c27536 	bltu	r2,r3,16970 <_dtoa_r+0xc4c>
   15f9c:	180490fa 	slli	r2,r3,3
   15fa0:	00c000b4 	movhi	r3,2
   15fa4:	18f5a804 	addi	r3,r3,-10592
   15fa8:	1885883a 	add	r2,r3,r2
   15fac:	11000017 	ldw	r4,0(r2)
   15fb0:	11400117 	ldw	r5,4(r2)
   15fb4:	900d883a 	mov	r6,r18
   15fb8:	980f883a 	mov	r7,r19
   15fbc:	001c1280 	call	1c128 <__gedf2>
   15fc0:	00828d0e 	bge	zero,r2,169f8 <_dtoa_r+0xcd4>
   15fc4:	d9000517 	ldw	r4,20(sp)
   15fc8:	d8000e15 	stw	zero,56(sp)
   15fcc:	213fffc4 	addi	r4,r4,-1
   15fd0:	d9000515 	stw	r4,20(sp)
   15fd4:	b42dc83a 	sub	r22,r22,r16
   15fd8:	b5bfffc4 	addi	r22,r22,-1
   15fdc:	b0026f16 	blt	r22,zero,1699c <_dtoa_r+0xc78>
   15fe0:	d8000815 	stw	zero,32(sp)
   15fe4:	d9c00517 	ldw	r7,20(sp)
   15fe8:	38026416 	blt	r7,zero,1697c <_dtoa_r+0xc58>
   15fec:	b1ed883a 	add	r22,r22,r7
   15ff0:	d9c00d15 	stw	r7,52(sp)
   15ff4:	d8000a15 	stw	zero,40(sp)
   15ff8:	d9800317 	ldw	r6,12(sp)
   15ffc:	00800244 	movi	r2,9
   16000:	11811436 	bltu	r2,r6,16454 <_dtoa_r+0x730>
   16004:	00800144 	movi	r2,5
   16008:	1184e10e 	bge	r2,r6,17390 <_dtoa_r+0x166c>
   1600c:	31bfff04 	addi	r6,r6,-4
   16010:	d9800315 	stw	r6,12(sp)
   16014:	0023883a 	mov	r17,zero
   16018:	d9800317 	ldw	r6,12(sp)
   1601c:	008000c4 	movi	r2,3
   16020:	30836726 	beq	r6,r2,16dc0 <_dtoa_r+0x109c>
   16024:	1183410e 	bge	r2,r6,16d2c <_dtoa_r+0x1008>
   16028:	d9c00317 	ldw	r7,12(sp)
   1602c:	00800104 	movi	r2,4
   16030:	38827c26 	beq	r7,r2,16a24 <_dtoa_r+0xd00>
   16034:	00800144 	movi	r2,5
   16038:	3884c41e 	bne	r7,r2,1734c <_dtoa_r+0x1628>
   1603c:	00800044 	movi	r2,1
   16040:	d8800b15 	stw	r2,44(sp)
   16044:	d8c00517 	ldw	r3,20(sp)
   16048:	d9002217 	ldw	r4,136(sp)
   1604c:	1907883a 	add	r3,r3,r4
   16050:	19800044 	addi	r6,r3,1
   16054:	d8c00c15 	stw	r3,48(sp)
   16058:	d9800615 	stw	r6,24(sp)
   1605c:	0183a40e 	bge	zero,r6,16ef0 <_dtoa_r+0x11cc>
   16060:	d9800617 	ldw	r6,24(sp)
   16064:	3021883a 	mov	r16,r6
   16068:	e0001115 	stw	zero,68(fp)
   1606c:	008005c4 	movi	r2,23
   16070:	1184c92e 	bgeu	r2,r6,17398 <_dtoa_r+0x1674>
   16074:	00c00044 	movi	r3,1
   16078:	00800104 	movi	r2,4
   1607c:	1085883a 	add	r2,r2,r2
   16080:	11000504 	addi	r4,r2,20
   16084:	180b883a 	mov	r5,r3
   16088:	18c00044 	addi	r3,r3,1
   1608c:	313ffb2e 	bgeu	r6,r4,1607c <_gp+0xfffeffc0>
   16090:	e1401115 	stw	r5,68(fp)
   16094:	e009883a 	mov	r4,fp
   16098:	0017b640 	call	17b64 <_Balloc>
   1609c:	d8800715 	stw	r2,28(sp)
   160a0:	e0801015 	stw	r2,64(fp)
   160a4:	00800384 	movi	r2,14
   160a8:	1400f736 	bltu	r2,r16,16488 <_dtoa_r+0x764>
   160ac:	8800f626 	beq	r17,zero,16488 <_dtoa_r+0x764>
   160b0:	d9c00517 	ldw	r7,20(sp)
   160b4:	01c39a0e 	bge	zero,r7,16f20 <_dtoa_r+0x11fc>
   160b8:	388003cc 	andi	r2,r7,15
   160bc:	100490fa 	slli	r2,r2,3
   160c0:	382bd13a 	srai	r21,r7,4
   160c4:	00c000b4 	movhi	r3,2
   160c8:	18f5a804 	addi	r3,r3,-10592
   160cc:	1885883a 	add	r2,r3,r2
   160d0:	a8c0040c 	andi	r3,r21,16
   160d4:	12400017 	ldw	r9,0(r2)
   160d8:	12000117 	ldw	r8,4(r2)
   160dc:	18037926 	beq	r3,zero,16ec4 <_dtoa_r+0x11a0>
   160e0:	008000b4 	movhi	r2,2
   160e4:	10b59e04 	addi	r2,r2,-10632
   160e8:	11800817 	ldw	r6,32(r2)
   160ec:	11c00917 	ldw	r7,36(r2)
   160f0:	9009883a 	mov	r4,r18
   160f4:	980b883a 	mov	r5,r19
   160f8:	da001715 	stw	r8,92(sp)
   160fc:	da401615 	stw	r9,88(sp)
   16100:	001b6d00 	call	1b6d0 <__divdf3>
   16104:	da001717 	ldw	r8,92(sp)
   16108:	da401617 	ldw	r9,88(sp)
   1610c:	ad4003cc 	andi	r21,r21,15
   16110:	040000c4 	movi	r16,3
   16114:	1023883a 	mov	r17,r2
   16118:	1829883a 	mov	r20,r3
   1611c:	a8001126 	beq	r21,zero,16164 <_dtoa_r+0x440>
   16120:	05c000b4 	movhi	r23,2
   16124:	bdf59e04 	addi	r23,r23,-10632
   16128:	4805883a 	mov	r2,r9
   1612c:	4007883a 	mov	r3,r8
   16130:	a980004c 	andi	r6,r21,1
   16134:	1009883a 	mov	r4,r2
   16138:	a82bd07a 	srai	r21,r21,1
   1613c:	180b883a 	mov	r5,r3
   16140:	30000426 	beq	r6,zero,16154 <_dtoa_r+0x430>
   16144:	b9800017 	ldw	r6,0(r23)
   16148:	b9c00117 	ldw	r7,4(r23)
   1614c:	84000044 	addi	r16,r16,1
   16150:	00118440 	call	11844 <__muldf3>
   16154:	bdc00204 	addi	r23,r23,8
   16158:	a83ff51e 	bne	r21,zero,16130 <_gp+0xffff0074>
   1615c:	1013883a 	mov	r9,r2
   16160:	1811883a 	mov	r8,r3
   16164:	480d883a 	mov	r6,r9
   16168:	400f883a 	mov	r7,r8
   1616c:	8809883a 	mov	r4,r17
   16170:	a00b883a 	mov	r5,r20
   16174:	001b6d00 	call	1b6d0 <__divdf3>
   16178:	d8800f15 	stw	r2,60(sp)
   1617c:	d8c01015 	stw	r3,64(sp)
   16180:	d8c00e17 	ldw	r3,56(sp)
   16184:	18000626 	beq	r3,zero,161a0 <_dtoa_r+0x47c>
   16188:	d9000f17 	ldw	r4,60(sp)
   1618c:	d9401017 	ldw	r5,64(sp)
   16190:	000d883a 	mov	r6,zero
   16194:	01cffc34 	movhi	r7,16368
   16198:	001c2040 	call	1c204 <__ledf2>
   1619c:	10040b16 	blt	r2,zero,171cc <_dtoa_r+0x14a8>
   161a0:	8009883a 	mov	r4,r16
   161a4:	00121300 	call	12130 <__floatsidf>
   161a8:	d9800f17 	ldw	r6,60(sp)
   161ac:	d9c01017 	ldw	r7,64(sp)
   161b0:	1009883a 	mov	r4,r2
   161b4:	180b883a 	mov	r5,r3
   161b8:	00118440 	call	11844 <__muldf3>
   161bc:	000d883a 	mov	r6,zero
   161c0:	01d00734 	movhi	r7,16412
   161c4:	1009883a 	mov	r4,r2
   161c8:	180b883a 	mov	r5,r3
   161cc:	0010f980 	call	10f98 <__adddf3>
   161d0:	1021883a 	mov	r16,r2
   161d4:	d8800617 	ldw	r2,24(sp)
   161d8:	047f3034 	movhi	r17,64704
   161dc:	1c63883a 	add	r17,r3,r17
   161e0:	10031826 	beq	r2,zero,16e44 <_dtoa_r+0x1120>
   161e4:	d8c00517 	ldw	r3,20(sp)
   161e8:	db000617 	ldw	r12,24(sp)
   161ec:	d8c01315 	stw	r3,76(sp)
   161f0:	d9000b17 	ldw	r4,44(sp)
   161f4:	20038f26 	beq	r4,zero,17034 <_dtoa_r+0x1310>
   161f8:	60bfffc4 	addi	r2,r12,-1
   161fc:	100490fa 	slli	r2,r2,3
   16200:	00c000b4 	movhi	r3,2
   16204:	18f5a804 	addi	r3,r3,-10592
   16208:	1885883a 	add	r2,r3,r2
   1620c:	11800017 	ldw	r6,0(r2)
   16210:	11c00117 	ldw	r7,4(r2)
   16214:	d8800717 	ldw	r2,28(sp)
   16218:	0009883a 	mov	r4,zero
   1621c:	014ff834 	movhi	r5,16352
   16220:	db001615 	stw	r12,88(sp)
   16224:	15c00044 	addi	r23,r2,1
   16228:	001b6d00 	call	1b6d0 <__divdf3>
   1622c:	800d883a 	mov	r6,r16
   16230:	880f883a 	mov	r7,r17
   16234:	1009883a 	mov	r4,r2
   16238:	180b883a 	mov	r5,r3
   1623c:	001c2f80 	call	1c2f8 <__subdf3>
   16240:	d9401017 	ldw	r5,64(sp)
   16244:	d9000f17 	ldw	r4,60(sp)
   16248:	102b883a 	mov	r21,r2
   1624c:	d8c01215 	stw	r3,72(sp)
   16250:	00120b00 	call	120b0 <__fixdfsi>
   16254:	1009883a 	mov	r4,r2
   16258:	1029883a 	mov	r20,r2
   1625c:	00121300 	call	12130 <__floatsidf>
   16260:	d9000f17 	ldw	r4,60(sp)
   16264:	d9401017 	ldw	r5,64(sp)
   16268:	100d883a 	mov	r6,r2
   1626c:	180f883a 	mov	r7,r3
   16270:	001c2f80 	call	1c2f8 <__subdf3>
   16274:	1823883a 	mov	r17,r3
   16278:	d8c00717 	ldw	r3,28(sp)
   1627c:	d9401217 	ldw	r5,72(sp)
   16280:	a2000c04 	addi	r8,r20,48
   16284:	1021883a 	mov	r16,r2
   16288:	1a000005 	stb	r8,0(r3)
   1628c:	800d883a 	mov	r6,r16
   16290:	880f883a 	mov	r7,r17
   16294:	a809883a 	mov	r4,r21
   16298:	4029883a 	mov	r20,r8
   1629c:	001c1280 	call	1c128 <__gedf2>
   162a0:	00841d16 	blt	zero,r2,17318 <_dtoa_r+0x15f4>
   162a4:	800d883a 	mov	r6,r16
   162a8:	880f883a 	mov	r7,r17
   162ac:	0009883a 	mov	r4,zero
   162b0:	014ffc34 	movhi	r5,16368
   162b4:	001c2f80 	call	1c2f8 <__subdf3>
   162b8:	d9401217 	ldw	r5,72(sp)
   162bc:	100d883a 	mov	r6,r2
   162c0:	180f883a 	mov	r7,r3
   162c4:	a809883a 	mov	r4,r21
   162c8:	001c1280 	call	1c128 <__gedf2>
   162cc:	db001617 	ldw	r12,88(sp)
   162d0:	00840e16 	blt	zero,r2,1730c <_dtoa_r+0x15e8>
   162d4:	00800044 	movi	r2,1
   162d8:	13006b0e 	bge	r2,r12,16488 <_dtoa_r+0x764>
   162dc:	d9000717 	ldw	r4,28(sp)
   162e0:	dd800f15 	stw	r22,60(sp)
   162e4:	dcc01015 	stw	r19,64(sp)
   162e8:	2319883a 	add	r12,r4,r12
   162ec:	dcc01217 	ldw	r19,72(sp)
   162f0:	602d883a 	mov	r22,r12
   162f4:	dc801215 	stw	r18,72(sp)
   162f8:	b825883a 	mov	r18,r23
   162fc:	00000906 	br	16324 <_dtoa_r+0x600>
   16300:	001c2f80 	call	1c2f8 <__subdf3>
   16304:	a80d883a 	mov	r6,r21
   16308:	980f883a 	mov	r7,r19
   1630c:	1009883a 	mov	r4,r2
   16310:	180b883a 	mov	r5,r3
   16314:	001c2040 	call	1c204 <__ledf2>
   16318:	1003e816 	blt	r2,zero,172bc <_dtoa_r+0x1598>
   1631c:	b825883a 	mov	r18,r23
   16320:	bd83e926 	beq	r23,r22,172c8 <_dtoa_r+0x15a4>
   16324:	a809883a 	mov	r4,r21
   16328:	980b883a 	mov	r5,r19
   1632c:	000d883a 	mov	r6,zero
   16330:	01d00934 	movhi	r7,16420
   16334:	00118440 	call	11844 <__muldf3>
   16338:	000d883a 	mov	r6,zero
   1633c:	01d00934 	movhi	r7,16420
   16340:	8009883a 	mov	r4,r16
   16344:	880b883a 	mov	r5,r17
   16348:	102b883a 	mov	r21,r2
   1634c:	1827883a 	mov	r19,r3
   16350:	00118440 	call	11844 <__muldf3>
   16354:	180b883a 	mov	r5,r3
   16358:	1009883a 	mov	r4,r2
   1635c:	1821883a 	mov	r16,r3
   16360:	1023883a 	mov	r17,r2
   16364:	00120b00 	call	120b0 <__fixdfsi>
   16368:	1009883a 	mov	r4,r2
   1636c:	1029883a 	mov	r20,r2
   16370:	00121300 	call	12130 <__floatsidf>
   16374:	8809883a 	mov	r4,r17
   16378:	800b883a 	mov	r5,r16
   1637c:	100d883a 	mov	r6,r2
   16380:	180f883a 	mov	r7,r3
   16384:	001c2f80 	call	1c2f8 <__subdf3>
   16388:	a5000c04 	addi	r20,r20,48
   1638c:	a80d883a 	mov	r6,r21
   16390:	980f883a 	mov	r7,r19
   16394:	1009883a 	mov	r4,r2
   16398:	180b883a 	mov	r5,r3
   1639c:	95000005 	stb	r20,0(r18)
   163a0:	1021883a 	mov	r16,r2
   163a4:	1823883a 	mov	r17,r3
   163a8:	001c2040 	call	1c204 <__ledf2>
   163ac:	bdc00044 	addi	r23,r23,1
   163b0:	800d883a 	mov	r6,r16
   163b4:	880f883a 	mov	r7,r17
   163b8:	0009883a 	mov	r4,zero
   163bc:	014ffc34 	movhi	r5,16368
   163c0:	103fcf0e 	bge	r2,zero,16300 <_gp+0xffff0244>
   163c4:	d8c01317 	ldw	r3,76(sp)
   163c8:	d8c00515 	stw	r3,20(sp)
   163cc:	d9400917 	ldw	r5,36(sp)
   163d0:	e009883a 	mov	r4,fp
   163d4:	0017c0c0 	call	17c0c <_Bfree>
   163d8:	d9000517 	ldw	r4,20(sp)
   163dc:	d9802317 	ldw	r6,140(sp)
   163e0:	d9c02517 	ldw	r7,148(sp)
   163e4:	b8000005 	stb	zero,0(r23)
   163e8:	20800044 	addi	r2,r4,1
   163ec:	30800015 	stw	r2,0(r6)
   163f0:	3802aa26 	beq	r7,zero,16e9c <_dtoa_r+0x1178>
   163f4:	3dc00015 	stw	r23,0(r7)
   163f8:	d8800717 	ldw	r2,28(sp)
   163fc:	003e7906 	br	15de4 <_gp+0xfffefd28>
   16400:	00800434 	movhi	r2,16
   16404:	10bfffc4 	addi	r2,r2,-1
   16408:	88a2703a 	and	r17,r17,r2
   1640c:	883e851e 	bne	r17,zero,15e24 <_gp+0xfffefd68>
   16410:	008000b4 	movhi	r2,2
   16414:	10b58a04 	addi	r2,r2,-10712
   16418:	003e8406 	br	15e2c <_gp+0xfffefd70>
   1641c:	10c00204 	addi	r3,r2,8
   16420:	003e8706 	br	15e40 <_gp+0xfffefd84>
   16424:	01400434 	movhi	r5,16
   16428:	297fffc4 	addi	r5,r5,-1
   1642c:	994a703a 	and	r5,r19,r5
   16430:	9009883a 	mov	r4,r18
   16434:	843f0044 	addi	r16,r16,-1023
   16438:	294ffc34 	orhi	r5,r5,16368
   1643c:	dd800217 	ldw	r22,8(sp)
   16440:	d8001115 	stw	zero,68(sp)
   16444:	003ea506 	br	15edc <_gp+0xfffefe20>
   16448:	008000b4 	movhi	r2,2
   1644c:	10b58104 	addi	r2,r2,-10748
   16450:	003e6406 	br	15de4 <_gp+0xfffefd28>
   16454:	e0001115 	stw	zero,68(fp)
   16458:	000b883a 	mov	r5,zero
   1645c:	e009883a 	mov	r4,fp
   16460:	0017b640 	call	17b64 <_Balloc>
   16464:	01bfffc4 	movi	r6,-1
   16468:	01c00044 	movi	r7,1
   1646c:	d8800715 	stw	r2,28(sp)
   16470:	d9800c15 	stw	r6,48(sp)
   16474:	e0801015 	stw	r2,64(fp)
   16478:	d8000315 	stw	zero,12(sp)
   1647c:	d9c00b15 	stw	r7,44(sp)
   16480:	d9800615 	stw	r6,24(sp)
   16484:	d8002215 	stw	zero,136(sp)
   16488:	d8800117 	ldw	r2,4(sp)
   1648c:	10008916 	blt	r2,zero,166b4 <_dtoa_r+0x990>
   16490:	d9000517 	ldw	r4,20(sp)
   16494:	00c00384 	movi	r3,14
   16498:	19008616 	blt	r3,r4,166b4 <_dtoa_r+0x990>
   1649c:	200490fa 	slli	r2,r4,3
   164a0:	00c000b4 	movhi	r3,2
   164a4:	d9802217 	ldw	r6,136(sp)
   164a8:	18f5a804 	addi	r3,r3,-10592
   164ac:	1885883a 	add	r2,r3,r2
   164b0:	14000017 	ldw	r16,0(r2)
   164b4:	14400117 	ldw	r17,4(r2)
   164b8:	30016316 	blt	r6,zero,16a48 <_dtoa_r+0xd24>
   164bc:	800d883a 	mov	r6,r16
   164c0:	880f883a 	mov	r7,r17
   164c4:	9009883a 	mov	r4,r18
   164c8:	980b883a 	mov	r5,r19
   164cc:	001b6d00 	call	1b6d0 <__divdf3>
   164d0:	180b883a 	mov	r5,r3
   164d4:	1009883a 	mov	r4,r2
   164d8:	00120b00 	call	120b0 <__fixdfsi>
   164dc:	1009883a 	mov	r4,r2
   164e0:	102b883a 	mov	r21,r2
   164e4:	00121300 	call	12130 <__floatsidf>
   164e8:	800d883a 	mov	r6,r16
   164ec:	880f883a 	mov	r7,r17
   164f0:	1009883a 	mov	r4,r2
   164f4:	180b883a 	mov	r5,r3
   164f8:	00118440 	call	11844 <__muldf3>
   164fc:	100d883a 	mov	r6,r2
   16500:	180f883a 	mov	r7,r3
   16504:	9009883a 	mov	r4,r18
   16508:	980b883a 	mov	r5,r19
   1650c:	001c2f80 	call	1c2f8 <__subdf3>
   16510:	d9c00717 	ldw	r7,28(sp)
   16514:	1009883a 	mov	r4,r2
   16518:	a8800c04 	addi	r2,r21,48
   1651c:	38800005 	stb	r2,0(r7)
   16520:	3dc00044 	addi	r23,r7,1
   16524:	d9c00617 	ldw	r7,24(sp)
   16528:	01800044 	movi	r6,1
   1652c:	180b883a 	mov	r5,r3
   16530:	2005883a 	mov	r2,r4
   16534:	39803826 	beq	r7,r6,16618 <_dtoa_r+0x8f4>
   16538:	000d883a 	mov	r6,zero
   1653c:	01d00934 	movhi	r7,16420
   16540:	00118440 	call	11844 <__muldf3>
   16544:	000d883a 	mov	r6,zero
   16548:	000f883a 	mov	r7,zero
   1654c:	1009883a 	mov	r4,r2
   16550:	180b883a 	mov	r5,r3
   16554:	1025883a 	mov	r18,r2
   16558:	1827883a 	mov	r19,r3
   1655c:	001c0a00 	call	1c0a0 <__eqdf2>
   16560:	103f9a26 	beq	r2,zero,163cc <_gp+0xffff0310>
   16564:	d9c00617 	ldw	r7,24(sp)
   16568:	d8c00717 	ldw	r3,28(sp)
   1656c:	b829883a 	mov	r20,r23
   16570:	38bfffc4 	addi	r2,r7,-1
   16574:	18ad883a 	add	r22,r3,r2
   16578:	00000a06 	br	165a4 <_dtoa_r+0x880>
   1657c:	00118440 	call	11844 <__muldf3>
   16580:	000d883a 	mov	r6,zero
   16584:	000f883a 	mov	r7,zero
   16588:	1009883a 	mov	r4,r2
   1658c:	180b883a 	mov	r5,r3
   16590:	1025883a 	mov	r18,r2
   16594:	1827883a 	mov	r19,r3
   16598:	b829883a 	mov	r20,r23
   1659c:	001c0a00 	call	1c0a0 <__eqdf2>
   165a0:	103f8a26 	beq	r2,zero,163cc <_gp+0xffff0310>
   165a4:	800d883a 	mov	r6,r16
   165a8:	880f883a 	mov	r7,r17
   165ac:	9009883a 	mov	r4,r18
   165b0:	980b883a 	mov	r5,r19
   165b4:	001b6d00 	call	1b6d0 <__divdf3>
   165b8:	180b883a 	mov	r5,r3
   165bc:	1009883a 	mov	r4,r2
   165c0:	00120b00 	call	120b0 <__fixdfsi>
   165c4:	1009883a 	mov	r4,r2
   165c8:	102b883a 	mov	r21,r2
   165cc:	00121300 	call	12130 <__floatsidf>
   165d0:	800d883a 	mov	r6,r16
   165d4:	880f883a 	mov	r7,r17
   165d8:	1009883a 	mov	r4,r2
   165dc:	180b883a 	mov	r5,r3
   165e0:	00118440 	call	11844 <__muldf3>
   165e4:	100d883a 	mov	r6,r2
   165e8:	180f883a 	mov	r7,r3
   165ec:	9009883a 	mov	r4,r18
   165f0:	980b883a 	mov	r5,r19
   165f4:	001c2f80 	call	1c2f8 <__subdf3>
   165f8:	aa000c04 	addi	r8,r21,48
   165fc:	a2000005 	stb	r8,0(r20)
   16600:	000d883a 	mov	r6,zero
   16604:	01d00934 	movhi	r7,16420
   16608:	1009883a 	mov	r4,r2
   1660c:	180b883a 	mov	r5,r3
   16610:	a5c00044 	addi	r23,r20,1
   16614:	b53fd91e 	bne	r22,r20,1657c <_gp+0xffff04c0>
   16618:	100d883a 	mov	r6,r2
   1661c:	180f883a 	mov	r7,r3
   16620:	1009883a 	mov	r4,r2
   16624:	180b883a 	mov	r5,r3
   16628:	0010f980 	call	10f98 <__adddf3>
   1662c:	100d883a 	mov	r6,r2
   16630:	180f883a 	mov	r7,r3
   16634:	8009883a 	mov	r4,r16
   16638:	880b883a 	mov	r5,r17
   1663c:	1027883a 	mov	r19,r2
   16640:	1825883a 	mov	r18,r3
   16644:	001c2040 	call	1c204 <__ledf2>
   16648:	10000816 	blt	r2,zero,1666c <_dtoa_r+0x948>
   1664c:	980d883a 	mov	r6,r19
   16650:	900f883a 	mov	r7,r18
   16654:	8009883a 	mov	r4,r16
   16658:	880b883a 	mov	r5,r17
   1665c:	001c0a00 	call	1c0a0 <__eqdf2>
   16660:	103f5a1e 	bne	r2,zero,163cc <_gp+0xffff0310>
   16664:	ad40004c 	andi	r21,r21,1
   16668:	a83f5826 	beq	r21,zero,163cc <_gp+0xffff0310>
   1666c:	bd3fffc3 	ldbu	r20,-1(r23)
   16670:	b8bfffc4 	addi	r2,r23,-1
   16674:	1007883a 	mov	r3,r2
   16678:	01400e44 	movi	r5,57
   1667c:	d9800717 	ldw	r6,28(sp)
   16680:	00000506 	br	16698 <_dtoa_r+0x974>
   16684:	18ffffc4 	addi	r3,r3,-1
   16688:	11824726 	beq	r2,r6,16fa8 <_dtoa_r+0x1284>
   1668c:	1d000003 	ldbu	r20,0(r3)
   16690:	102f883a 	mov	r23,r2
   16694:	10bfffc4 	addi	r2,r2,-1
   16698:	a1003fcc 	andi	r4,r20,255
   1669c:	2100201c 	xori	r4,r4,128
   166a0:	213fe004 	addi	r4,r4,-128
   166a4:	217ff726 	beq	r4,r5,16684 <_gp+0xffff05c8>
   166a8:	a2000044 	addi	r8,r20,1
   166ac:	12000005 	stb	r8,0(r2)
   166b0:	003f4606 	br	163cc <_gp+0xffff0310>
   166b4:	d9000b17 	ldw	r4,44(sp)
   166b8:	2000c826 	beq	r4,zero,169dc <_dtoa_r+0xcb8>
   166bc:	d9800317 	ldw	r6,12(sp)
   166c0:	00c00044 	movi	r3,1
   166c4:	1980f90e 	bge	r3,r6,16aac <_dtoa_r+0xd88>
   166c8:	d8800617 	ldw	r2,24(sp)
   166cc:	d8c00a17 	ldw	r3,40(sp)
   166d0:	157fffc4 	addi	r21,r2,-1
   166d4:	1d41f316 	blt	r3,r21,16ea4 <_dtoa_r+0x1180>
   166d8:	1d6bc83a 	sub	r21,r3,r21
   166dc:	d9c00617 	ldw	r7,24(sp)
   166e0:	3802aa16 	blt	r7,zero,1718c <_dtoa_r+0x1468>
   166e4:	dd000817 	ldw	r20,32(sp)
   166e8:	d8800617 	ldw	r2,24(sp)
   166ec:	d8c00817 	ldw	r3,32(sp)
   166f0:	01400044 	movi	r5,1
   166f4:	e009883a 	mov	r4,fp
   166f8:	1887883a 	add	r3,r3,r2
   166fc:	d8c00815 	stw	r3,32(sp)
   16700:	b0ad883a 	add	r22,r22,r2
   16704:	0017f980 	call	17f98 <__i2b>
   16708:	1023883a 	mov	r17,r2
   1670c:	a0000826 	beq	r20,zero,16730 <_dtoa_r+0xa0c>
   16710:	0580070e 	bge	zero,r22,16730 <_dtoa_r+0xa0c>
   16714:	a005883a 	mov	r2,r20
   16718:	b500b916 	blt	r22,r20,16a00 <_dtoa_r+0xcdc>
   1671c:	d9000817 	ldw	r4,32(sp)
   16720:	a0a9c83a 	sub	r20,r20,r2
   16724:	b0adc83a 	sub	r22,r22,r2
   16728:	2089c83a 	sub	r4,r4,r2
   1672c:	d9000815 	stw	r4,32(sp)
   16730:	d9800a17 	ldw	r6,40(sp)
   16734:	0181810e 	bge	zero,r6,16d3c <_dtoa_r+0x1018>
   16738:	d9c00b17 	ldw	r7,44(sp)
   1673c:	3800b326 	beq	r7,zero,16a0c <_dtoa_r+0xce8>
   16740:	a800b226 	beq	r21,zero,16a0c <_dtoa_r+0xce8>
   16744:	880b883a 	mov	r5,r17
   16748:	a80d883a 	mov	r6,r21
   1674c:	e009883a 	mov	r4,fp
   16750:	00182600 	call	18260 <__pow5mult>
   16754:	d9800917 	ldw	r6,36(sp)
   16758:	100b883a 	mov	r5,r2
   1675c:	e009883a 	mov	r4,fp
   16760:	1023883a 	mov	r17,r2
   16764:	0017fd40 	call	17fd4 <__multiply>
   16768:	1021883a 	mov	r16,r2
   1676c:	d8800a17 	ldw	r2,40(sp)
   16770:	d9400917 	ldw	r5,36(sp)
   16774:	e009883a 	mov	r4,fp
   16778:	1545c83a 	sub	r2,r2,r21
   1677c:	d8800a15 	stw	r2,40(sp)
   16780:	0017c0c0 	call	17c0c <_Bfree>
   16784:	d8c00a17 	ldw	r3,40(sp)
   16788:	18009f1e 	bne	r3,zero,16a08 <_dtoa_r+0xce4>
   1678c:	05c00044 	movi	r23,1
   16790:	e009883a 	mov	r4,fp
   16794:	b80b883a 	mov	r5,r23
   16798:	0017f980 	call	17f98 <__i2b>
   1679c:	d9000d17 	ldw	r4,52(sp)
   167a0:	102b883a 	mov	r21,r2
   167a4:	2000ce26 	beq	r4,zero,16ae0 <_dtoa_r+0xdbc>
   167a8:	200d883a 	mov	r6,r4
   167ac:	100b883a 	mov	r5,r2
   167b0:	e009883a 	mov	r4,fp
   167b4:	00182600 	call	18260 <__pow5mult>
   167b8:	d9800317 	ldw	r6,12(sp)
   167bc:	102b883a 	mov	r21,r2
   167c0:	b981810e 	bge	r23,r6,16dc8 <_dtoa_r+0x10a4>
   167c4:	0027883a 	mov	r19,zero
   167c8:	a8800417 	ldw	r2,16(r21)
   167cc:	05c00804 	movi	r23,32
   167d0:	10800104 	addi	r2,r2,4
   167d4:	1085883a 	add	r2,r2,r2
   167d8:	1085883a 	add	r2,r2,r2
   167dc:	a885883a 	add	r2,r21,r2
   167e0:	11000017 	ldw	r4,0(r2)
   167e4:	0017e800 	call	17e80 <__hi0bits>
   167e8:	b885c83a 	sub	r2,r23,r2
   167ec:	1585883a 	add	r2,r2,r22
   167f0:	108007cc 	andi	r2,r2,31
   167f4:	1000b326 	beq	r2,zero,16ac4 <_dtoa_r+0xda0>
   167f8:	00c00804 	movi	r3,32
   167fc:	1887c83a 	sub	r3,r3,r2
   16800:	01000104 	movi	r4,4
   16804:	20c2cd0e 	bge	r4,r3,1733c <_dtoa_r+0x1618>
   16808:	00c00704 	movi	r3,28
   1680c:	1885c83a 	sub	r2,r3,r2
   16810:	d8c00817 	ldw	r3,32(sp)
   16814:	a0a9883a 	add	r20,r20,r2
   16818:	b0ad883a 	add	r22,r22,r2
   1681c:	1887883a 	add	r3,r3,r2
   16820:	d8c00815 	stw	r3,32(sp)
   16824:	d9800817 	ldw	r6,32(sp)
   16828:	0180040e 	bge	zero,r6,1683c <_dtoa_r+0xb18>
   1682c:	800b883a 	mov	r5,r16
   16830:	e009883a 	mov	r4,fp
   16834:	00183a00 	call	183a0 <__lshift>
   16838:	1021883a 	mov	r16,r2
   1683c:	0580050e 	bge	zero,r22,16854 <_dtoa_r+0xb30>
   16840:	a80b883a 	mov	r5,r21
   16844:	b00d883a 	mov	r6,r22
   16848:	e009883a 	mov	r4,fp
   1684c:	00183a00 	call	183a0 <__lshift>
   16850:	102b883a 	mov	r21,r2
   16854:	d9c00e17 	ldw	r7,56(sp)
   16858:	3801211e 	bne	r7,zero,16ce0 <_dtoa_r+0xfbc>
   1685c:	d9800617 	ldw	r6,24(sp)
   16860:	0181380e 	bge	zero,r6,16d44 <_dtoa_r+0x1020>
   16864:	d8c00b17 	ldw	r3,44(sp)
   16868:	1800ab1e 	bne	r3,zero,16b18 <_dtoa_r+0xdf4>
   1686c:	dc800717 	ldw	r18,28(sp)
   16870:	dcc00617 	ldw	r19,24(sp)
   16874:	9029883a 	mov	r20,r18
   16878:	00000206 	br	16884 <_dtoa_r+0xb60>
   1687c:	0017c340 	call	17c34 <__multadd>
   16880:	1021883a 	mov	r16,r2
   16884:	a80b883a 	mov	r5,r21
   16888:	8009883a 	mov	r4,r16
   1688c:	0015afc0 	call	15afc <quorem>
   16890:	10800c04 	addi	r2,r2,48
   16894:	90800005 	stb	r2,0(r18)
   16898:	94800044 	addi	r18,r18,1
   1689c:	9507c83a 	sub	r3,r18,r20
   168a0:	000f883a 	mov	r7,zero
   168a4:	01800284 	movi	r6,10
   168a8:	800b883a 	mov	r5,r16
   168ac:	e009883a 	mov	r4,fp
   168b0:	1cfff216 	blt	r3,r19,1687c <_gp+0xffff07c0>
   168b4:	1011883a 	mov	r8,r2
   168b8:	d8800617 	ldw	r2,24(sp)
   168bc:	0082370e 	bge	zero,r2,1719c <_dtoa_r+0x1478>
   168c0:	d9000717 	ldw	r4,28(sp)
   168c4:	0025883a 	mov	r18,zero
   168c8:	20af883a 	add	r23,r4,r2
   168cc:	01800044 	movi	r6,1
   168d0:	800b883a 	mov	r5,r16
   168d4:	e009883a 	mov	r4,fp
   168d8:	da001715 	stw	r8,92(sp)
   168dc:	00183a00 	call	183a0 <__lshift>
   168e0:	a80b883a 	mov	r5,r21
   168e4:	1009883a 	mov	r4,r2
   168e8:	d8800915 	stw	r2,36(sp)
   168ec:	00184e80 	call	184e8 <__mcmp>
   168f0:	da001717 	ldw	r8,92(sp)
   168f4:	0081800e 	bge	zero,r2,16ef8 <_dtoa_r+0x11d4>
   168f8:	b93fffc3 	ldbu	r4,-1(r23)
   168fc:	b8bfffc4 	addi	r2,r23,-1
   16900:	1007883a 	mov	r3,r2
   16904:	01800e44 	movi	r6,57
   16908:	d9c00717 	ldw	r7,28(sp)
   1690c:	00000506 	br	16924 <_dtoa_r+0xc00>
   16910:	18ffffc4 	addi	r3,r3,-1
   16914:	11c12326 	beq	r2,r7,16da4 <_dtoa_r+0x1080>
   16918:	19000003 	ldbu	r4,0(r3)
   1691c:	102f883a 	mov	r23,r2
   16920:	10bfffc4 	addi	r2,r2,-1
   16924:	21403fcc 	andi	r5,r4,255
   16928:	2940201c 	xori	r5,r5,128
   1692c:	297fe004 	addi	r5,r5,-128
   16930:	29bff726 	beq	r5,r6,16910 <_gp+0xffff0854>
   16934:	21000044 	addi	r4,r4,1
   16938:	11000005 	stb	r4,0(r2)
   1693c:	a80b883a 	mov	r5,r21
   16940:	e009883a 	mov	r4,fp
   16944:	0017c0c0 	call	17c0c <_Bfree>
   16948:	883ea026 	beq	r17,zero,163cc <_gp+0xffff0310>
   1694c:	90000426 	beq	r18,zero,16960 <_dtoa_r+0xc3c>
   16950:	94400326 	beq	r18,r17,16960 <_dtoa_r+0xc3c>
   16954:	900b883a 	mov	r5,r18
   16958:	e009883a 	mov	r4,fp
   1695c:	0017c0c0 	call	17c0c <_Bfree>
   16960:	880b883a 	mov	r5,r17
   16964:	e009883a 	mov	r4,fp
   16968:	0017c0c0 	call	17c0c <_Bfree>
   1696c:	003e9706 	br	163cc <_gp+0xffff0310>
   16970:	01800044 	movi	r6,1
   16974:	d9800e15 	stw	r6,56(sp)
   16978:	003d9606 	br	15fd4 <_gp+0xfffeff18>
   1697c:	d8800817 	ldw	r2,32(sp)
   16980:	d8c00517 	ldw	r3,20(sp)
   16984:	d8000d15 	stw	zero,52(sp)
   16988:	10c5c83a 	sub	r2,r2,r3
   1698c:	00c9c83a 	sub	r4,zero,r3
   16990:	d8800815 	stw	r2,32(sp)
   16994:	d9000a15 	stw	r4,40(sp)
   16998:	003d9706 	br	15ff8 <_gp+0xfffeff3c>
   1699c:	05adc83a 	sub	r22,zero,r22
   169a0:	dd800815 	stw	r22,32(sp)
   169a4:	002d883a 	mov	r22,zero
   169a8:	003d8e06 	br	15fe4 <_gp+0xfffeff28>
   169ac:	d9000517 	ldw	r4,20(sp)
   169b0:	00121300 	call	12130 <__floatsidf>
   169b4:	100d883a 	mov	r6,r2
   169b8:	180f883a 	mov	r7,r3
   169bc:	a009883a 	mov	r4,r20
   169c0:	880b883a 	mov	r5,r17
   169c4:	001c0a00 	call	1c0a0 <__eqdf2>
   169c8:	103d7126 	beq	r2,zero,15f90 <_gp+0xfffefed4>
   169cc:	d9c00517 	ldw	r7,20(sp)
   169d0:	39ffffc4 	addi	r7,r7,-1
   169d4:	d9c00515 	stw	r7,20(sp)
   169d8:	003d6d06 	br	15f90 <_gp+0xfffefed4>
   169dc:	dd400a17 	ldw	r21,40(sp)
   169e0:	dd000817 	ldw	r20,32(sp)
   169e4:	0023883a 	mov	r17,zero
   169e8:	003f4806 	br	1670c <_gp+0xffff0650>
   169ec:	10e3c83a 	sub	r17,r2,r3
   169f0:	9448983a 	sll	r4,r18,r17
   169f4:	003d3206 	br	15ec0 <_gp+0xfffefe04>
   169f8:	d8000e15 	stw	zero,56(sp)
   169fc:	003d7506 	br	15fd4 <_gp+0xfffeff18>
   16a00:	b005883a 	mov	r2,r22
   16a04:	003f4506 	br	1671c <_gp+0xffff0660>
   16a08:	dc000915 	stw	r16,36(sp)
   16a0c:	d9800a17 	ldw	r6,40(sp)
   16a10:	d9400917 	ldw	r5,36(sp)
   16a14:	e009883a 	mov	r4,fp
   16a18:	00182600 	call	18260 <__pow5mult>
   16a1c:	1021883a 	mov	r16,r2
   16a20:	003f5a06 	br	1678c <_gp+0xffff06d0>
   16a24:	01c00044 	movi	r7,1
   16a28:	d9c00b15 	stw	r7,44(sp)
   16a2c:	d8802217 	ldw	r2,136(sp)
   16a30:	0081280e 	bge	zero,r2,16ed4 <_dtoa_r+0x11b0>
   16a34:	100d883a 	mov	r6,r2
   16a38:	1021883a 	mov	r16,r2
   16a3c:	d8800c15 	stw	r2,48(sp)
   16a40:	d8800615 	stw	r2,24(sp)
   16a44:	003d8806 	br	16068 <_gp+0xfffeffac>
   16a48:	d8800617 	ldw	r2,24(sp)
   16a4c:	00be9b16 	blt	zero,r2,164bc <_gp+0xffff0400>
   16a50:	10010f1e 	bne	r2,zero,16e90 <_dtoa_r+0x116c>
   16a54:	880b883a 	mov	r5,r17
   16a58:	000d883a 	mov	r6,zero
   16a5c:	01d00534 	movhi	r7,16404
   16a60:	8009883a 	mov	r4,r16
   16a64:	00118440 	call	11844 <__muldf3>
   16a68:	900d883a 	mov	r6,r18
   16a6c:	980f883a 	mov	r7,r19
   16a70:	1009883a 	mov	r4,r2
   16a74:	180b883a 	mov	r5,r3
   16a78:	001c1280 	call	1c128 <__gedf2>
   16a7c:	002b883a 	mov	r21,zero
   16a80:	0023883a 	mov	r17,zero
   16a84:	1000bf16 	blt	r2,zero,16d84 <_dtoa_r+0x1060>
   16a88:	d9802217 	ldw	r6,136(sp)
   16a8c:	ddc00717 	ldw	r23,28(sp)
   16a90:	018c303a 	nor	r6,zero,r6
   16a94:	d9800515 	stw	r6,20(sp)
   16a98:	a80b883a 	mov	r5,r21
   16a9c:	e009883a 	mov	r4,fp
   16aa0:	0017c0c0 	call	17c0c <_Bfree>
   16aa4:	883e4926 	beq	r17,zero,163cc <_gp+0xffff0310>
   16aa8:	003fad06 	br	16960 <_gp+0xffff08a4>
   16aac:	d9c01117 	ldw	r7,68(sp)
   16ab0:	3801bc26 	beq	r7,zero,171a4 <_dtoa_r+0x1480>
   16ab4:	10810cc4 	addi	r2,r2,1075
   16ab8:	dd400a17 	ldw	r21,40(sp)
   16abc:	dd000817 	ldw	r20,32(sp)
   16ac0:	003f0a06 	br	166ec <_gp+0xffff0630>
   16ac4:	00800704 	movi	r2,28
   16ac8:	d9000817 	ldw	r4,32(sp)
   16acc:	a0a9883a 	add	r20,r20,r2
   16ad0:	b0ad883a 	add	r22,r22,r2
   16ad4:	2089883a 	add	r4,r4,r2
   16ad8:	d9000815 	stw	r4,32(sp)
   16adc:	003f5106 	br	16824 <_gp+0xffff0768>
   16ae0:	d8c00317 	ldw	r3,12(sp)
   16ae4:	b8c1fc0e 	bge	r23,r3,172d8 <_dtoa_r+0x15b4>
   16ae8:	0027883a 	mov	r19,zero
   16aec:	b805883a 	mov	r2,r23
   16af0:	003f3e06 	br	167ec <_gp+0xffff0730>
   16af4:	880b883a 	mov	r5,r17
   16af8:	e009883a 	mov	r4,fp
   16afc:	000f883a 	mov	r7,zero
   16b00:	01800284 	movi	r6,10
   16b04:	0017c340 	call	17c34 <__multadd>
   16b08:	d9000c17 	ldw	r4,48(sp)
   16b0c:	1023883a 	mov	r17,r2
   16b10:	0102040e 	bge	zero,r4,17324 <_dtoa_r+0x1600>
   16b14:	d9000615 	stw	r4,24(sp)
   16b18:	0500050e 	bge	zero,r20,16b30 <_dtoa_r+0xe0c>
   16b1c:	880b883a 	mov	r5,r17
   16b20:	a00d883a 	mov	r6,r20
   16b24:	e009883a 	mov	r4,fp
   16b28:	00183a00 	call	183a0 <__lshift>
   16b2c:	1023883a 	mov	r17,r2
   16b30:	9801241e 	bne	r19,zero,16fc4 <_dtoa_r+0x12a0>
   16b34:	8829883a 	mov	r20,r17
   16b38:	d9000617 	ldw	r4,24(sp)
   16b3c:	dcc00717 	ldw	r19,28(sp)
   16b40:	9480004c 	andi	r18,r18,1
   16b44:	20bfffc4 	addi	r2,r4,-1
   16b48:	9885883a 	add	r2,r19,r2
   16b4c:	d8800415 	stw	r2,16(sp)
   16b50:	dc800615 	stw	r18,24(sp)
   16b54:	a80b883a 	mov	r5,r21
   16b58:	8009883a 	mov	r4,r16
   16b5c:	0015afc0 	call	15afc <quorem>
   16b60:	880b883a 	mov	r5,r17
   16b64:	8009883a 	mov	r4,r16
   16b68:	102f883a 	mov	r23,r2
   16b6c:	00184e80 	call	184e8 <__mcmp>
   16b70:	a80b883a 	mov	r5,r21
   16b74:	a00d883a 	mov	r6,r20
   16b78:	e009883a 	mov	r4,fp
   16b7c:	102d883a 	mov	r22,r2
   16b80:	00185480 	call	18548 <__mdiff>
   16b84:	1007883a 	mov	r3,r2
   16b88:	10800317 	ldw	r2,12(r2)
   16b8c:	bc800c04 	addi	r18,r23,48
   16b90:	180b883a 	mov	r5,r3
   16b94:	10004e1e 	bne	r2,zero,16cd0 <_dtoa_r+0xfac>
   16b98:	8009883a 	mov	r4,r16
   16b9c:	d8c01615 	stw	r3,88(sp)
   16ba0:	00184e80 	call	184e8 <__mcmp>
   16ba4:	d8c01617 	ldw	r3,88(sp)
   16ba8:	e009883a 	mov	r4,fp
   16bac:	d8801615 	stw	r2,88(sp)
   16bb0:	180b883a 	mov	r5,r3
   16bb4:	0017c0c0 	call	17c0c <_Bfree>
   16bb8:	d8801617 	ldw	r2,88(sp)
   16bbc:	1000041e 	bne	r2,zero,16bd0 <_dtoa_r+0xeac>
   16bc0:	d9800317 	ldw	r6,12(sp)
   16bc4:	3000021e 	bne	r6,zero,16bd0 <_dtoa_r+0xeac>
   16bc8:	d8c00617 	ldw	r3,24(sp)
   16bcc:	18003726 	beq	r3,zero,16cac <_dtoa_r+0xf88>
   16bd0:	b0002016 	blt	r22,zero,16c54 <_dtoa_r+0xf30>
   16bd4:	b000041e 	bne	r22,zero,16be8 <_dtoa_r+0xec4>
   16bd8:	d9000317 	ldw	r4,12(sp)
   16bdc:	2000021e 	bne	r4,zero,16be8 <_dtoa_r+0xec4>
   16be0:	d8c00617 	ldw	r3,24(sp)
   16be4:	18001b26 	beq	r3,zero,16c54 <_dtoa_r+0xf30>
   16be8:	00810716 	blt	zero,r2,17008 <_dtoa_r+0x12e4>
   16bec:	d8c00417 	ldw	r3,16(sp)
   16bf0:	9d800044 	addi	r22,r19,1
   16bf4:	9c800005 	stb	r18,0(r19)
   16bf8:	b02f883a 	mov	r23,r22
   16bfc:	98c10626 	beq	r19,r3,17018 <_dtoa_r+0x12f4>
   16c00:	800b883a 	mov	r5,r16
   16c04:	000f883a 	mov	r7,zero
   16c08:	01800284 	movi	r6,10
   16c0c:	e009883a 	mov	r4,fp
   16c10:	0017c340 	call	17c34 <__multadd>
   16c14:	1021883a 	mov	r16,r2
   16c18:	000f883a 	mov	r7,zero
   16c1c:	01800284 	movi	r6,10
   16c20:	880b883a 	mov	r5,r17
   16c24:	e009883a 	mov	r4,fp
   16c28:	8d002526 	beq	r17,r20,16cc0 <_dtoa_r+0xf9c>
   16c2c:	0017c340 	call	17c34 <__multadd>
   16c30:	a00b883a 	mov	r5,r20
   16c34:	000f883a 	mov	r7,zero
   16c38:	01800284 	movi	r6,10
   16c3c:	e009883a 	mov	r4,fp
   16c40:	1023883a 	mov	r17,r2
   16c44:	0017c340 	call	17c34 <__multadd>
   16c48:	1029883a 	mov	r20,r2
   16c4c:	b027883a 	mov	r19,r22
   16c50:	003fc006 	br	16b54 <_gp+0xffff0a98>
   16c54:	9011883a 	mov	r8,r18
   16c58:	00800e0e 	bge	zero,r2,16c94 <_dtoa_r+0xf70>
   16c5c:	800b883a 	mov	r5,r16
   16c60:	01800044 	movi	r6,1
   16c64:	e009883a 	mov	r4,fp
   16c68:	da001715 	stw	r8,92(sp)
   16c6c:	00183a00 	call	183a0 <__lshift>
   16c70:	a80b883a 	mov	r5,r21
   16c74:	1009883a 	mov	r4,r2
   16c78:	1021883a 	mov	r16,r2
   16c7c:	00184e80 	call	184e8 <__mcmp>
   16c80:	da001717 	ldw	r8,92(sp)
   16c84:	0081960e 	bge	zero,r2,172e0 <_dtoa_r+0x15bc>
   16c88:	00800e44 	movi	r2,57
   16c8c:	40817026 	beq	r8,r2,17250 <_dtoa_r+0x152c>
   16c90:	ba000c44 	addi	r8,r23,49
   16c94:	8825883a 	mov	r18,r17
   16c98:	9dc00044 	addi	r23,r19,1
   16c9c:	9a000005 	stb	r8,0(r19)
   16ca0:	a023883a 	mov	r17,r20
   16ca4:	dc000915 	stw	r16,36(sp)
   16ca8:	003f2406 	br	1693c <_gp+0xffff0880>
   16cac:	00800e44 	movi	r2,57
   16cb0:	9011883a 	mov	r8,r18
   16cb4:	90816626 	beq	r18,r2,17250 <_dtoa_r+0x152c>
   16cb8:	05bff516 	blt	zero,r22,16c90 <_gp+0xffff0bd4>
   16cbc:	003ff506 	br	16c94 <_gp+0xffff0bd8>
   16cc0:	0017c340 	call	17c34 <__multadd>
   16cc4:	1023883a 	mov	r17,r2
   16cc8:	1029883a 	mov	r20,r2
   16ccc:	003fdf06 	br	16c4c <_gp+0xffff0b90>
   16cd0:	e009883a 	mov	r4,fp
   16cd4:	0017c0c0 	call	17c0c <_Bfree>
   16cd8:	00800044 	movi	r2,1
   16cdc:	003fbc06 	br	16bd0 <_gp+0xffff0b14>
   16ce0:	a80b883a 	mov	r5,r21
   16ce4:	8009883a 	mov	r4,r16
   16ce8:	00184e80 	call	184e8 <__mcmp>
   16cec:	103edb0e 	bge	r2,zero,1685c <_gp+0xffff07a0>
   16cf0:	800b883a 	mov	r5,r16
   16cf4:	000f883a 	mov	r7,zero
   16cf8:	01800284 	movi	r6,10
   16cfc:	e009883a 	mov	r4,fp
   16d00:	0017c340 	call	17c34 <__multadd>
   16d04:	1021883a 	mov	r16,r2
   16d08:	d8800517 	ldw	r2,20(sp)
   16d0c:	d8c00b17 	ldw	r3,44(sp)
   16d10:	10bfffc4 	addi	r2,r2,-1
   16d14:	d8800515 	stw	r2,20(sp)
   16d18:	183f761e 	bne	r3,zero,16af4 <_gp+0xffff0a38>
   16d1c:	d9000c17 	ldw	r4,48(sp)
   16d20:	0101730e 	bge	zero,r4,172f0 <_dtoa_r+0x15cc>
   16d24:	d9000615 	stw	r4,24(sp)
   16d28:	003ed006 	br	1686c <_gp+0xffff07b0>
   16d2c:	00800084 	movi	r2,2
   16d30:	3081861e 	bne	r6,r2,1734c <_dtoa_r+0x1628>
   16d34:	d8000b15 	stw	zero,44(sp)
   16d38:	003f3c06 	br	16a2c <_gp+0xffff0970>
   16d3c:	dc000917 	ldw	r16,36(sp)
   16d40:	003e9206 	br	1678c <_gp+0xffff06d0>
   16d44:	d9c00317 	ldw	r7,12(sp)
   16d48:	00800084 	movi	r2,2
   16d4c:	11fec50e 	bge	r2,r7,16864 <_gp+0xffff07a8>
   16d50:	d9000617 	ldw	r4,24(sp)
   16d54:	20013c1e 	bne	r4,zero,17248 <_dtoa_r+0x1524>
   16d58:	a80b883a 	mov	r5,r21
   16d5c:	000f883a 	mov	r7,zero
   16d60:	01800144 	movi	r6,5
   16d64:	e009883a 	mov	r4,fp
   16d68:	0017c340 	call	17c34 <__multadd>
   16d6c:	100b883a 	mov	r5,r2
   16d70:	8009883a 	mov	r4,r16
   16d74:	102b883a 	mov	r21,r2
   16d78:	00184e80 	call	184e8 <__mcmp>
   16d7c:	dc000915 	stw	r16,36(sp)
   16d80:	00bf410e 	bge	zero,r2,16a88 <_gp+0xffff09cc>
   16d84:	d9c00717 	ldw	r7,28(sp)
   16d88:	00800c44 	movi	r2,49
   16d8c:	38800005 	stb	r2,0(r7)
   16d90:	d8800517 	ldw	r2,20(sp)
   16d94:	3dc00044 	addi	r23,r7,1
   16d98:	10800044 	addi	r2,r2,1
   16d9c:	d8800515 	stw	r2,20(sp)
   16da0:	003f3d06 	br	16a98 <_gp+0xffff09dc>
   16da4:	d9800517 	ldw	r6,20(sp)
   16da8:	d9c00717 	ldw	r7,28(sp)
   16dac:	00800c44 	movi	r2,49
   16db0:	31800044 	addi	r6,r6,1
   16db4:	d9800515 	stw	r6,20(sp)
   16db8:	38800005 	stb	r2,0(r7)
   16dbc:	003edf06 	br	1693c <_gp+0xffff0880>
   16dc0:	d8000b15 	stw	zero,44(sp)
   16dc4:	003c9f06 	br	16044 <_gp+0xfffeff88>
   16dc8:	903e7e1e 	bne	r18,zero,167c4 <_gp+0xffff0708>
   16dcc:	00800434 	movhi	r2,16
   16dd0:	10bfffc4 	addi	r2,r2,-1
   16dd4:	9884703a 	and	r2,r19,r2
   16dd8:	1000ea1e 	bne	r2,zero,17184 <_dtoa_r+0x1460>
   16ddc:	9cdffc2c 	andhi	r19,r19,32752
   16de0:	9800e826 	beq	r19,zero,17184 <_dtoa_r+0x1460>
   16de4:	d9c00817 	ldw	r7,32(sp)
   16de8:	b5800044 	addi	r22,r22,1
   16dec:	04c00044 	movi	r19,1
   16df0:	39c00044 	addi	r7,r7,1
   16df4:	d9c00815 	stw	r7,32(sp)
   16df8:	d8800d17 	ldw	r2,52(sp)
   16dfc:	103e721e 	bne	r2,zero,167c8 <_gp+0xffff070c>
   16e00:	00800044 	movi	r2,1
   16e04:	003e7906 	br	167ec <_gp+0xffff0730>
   16e08:	8009883a 	mov	r4,r16
   16e0c:	00121300 	call	12130 <__floatsidf>
   16e10:	d9800f17 	ldw	r6,60(sp)
   16e14:	d9c01017 	ldw	r7,64(sp)
   16e18:	1009883a 	mov	r4,r2
   16e1c:	180b883a 	mov	r5,r3
   16e20:	00118440 	call	11844 <__muldf3>
   16e24:	000d883a 	mov	r6,zero
   16e28:	01d00734 	movhi	r7,16412
   16e2c:	1009883a 	mov	r4,r2
   16e30:	180b883a 	mov	r5,r3
   16e34:	0010f980 	call	10f98 <__adddf3>
   16e38:	047f3034 	movhi	r17,64704
   16e3c:	1021883a 	mov	r16,r2
   16e40:	1c63883a 	add	r17,r3,r17
   16e44:	d9000f17 	ldw	r4,60(sp)
   16e48:	d9401017 	ldw	r5,64(sp)
   16e4c:	000d883a 	mov	r6,zero
   16e50:	01d00534 	movhi	r7,16404
   16e54:	001c2f80 	call	1c2f8 <__subdf3>
   16e58:	800d883a 	mov	r6,r16
   16e5c:	880f883a 	mov	r7,r17
   16e60:	1009883a 	mov	r4,r2
   16e64:	180b883a 	mov	r5,r3
   16e68:	102b883a 	mov	r21,r2
   16e6c:	1829883a 	mov	r20,r3
   16e70:	001c1280 	call	1c128 <__gedf2>
   16e74:	00806c16 	blt	zero,r2,17028 <_dtoa_r+0x1304>
   16e78:	89e0003c 	xorhi	r7,r17,32768
   16e7c:	800d883a 	mov	r6,r16
   16e80:	a809883a 	mov	r4,r21
   16e84:	a00b883a 	mov	r5,r20
   16e88:	001c2040 	call	1c204 <__ledf2>
   16e8c:	103d7e0e 	bge	r2,zero,16488 <_gp+0xffff03cc>
   16e90:	002b883a 	mov	r21,zero
   16e94:	0023883a 	mov	r17,zero
   16e98:	003efb06 	br	16a88 <_gp+0xffff09cc>
   16e9c:	d8800717 	ldw	r2,28(sp)
   16ea0:	003bd006 	br	15de4 <_gp+0xfffefd28>
   16ea4:	d9000a17 	ldw	r4,40(sp)
   16ea8:	d9800d17 	ldw	r6,52(sp)
   16eac:	dd400a15 	stw	r21,40(sp)
   16eb0:	a905c83a 	sub	r2,r21,r4
   16eb4:	308d883a 	add	r6,r6,r2
   16eb8:	d9800d15 	stw	r6,52(sp)
   16ebc:	002b883a 	mov	r21,zero
   16ec0:	003e0606 	br	166dc <_gp+0xffff0620>
   16ec4:	9023883a 	mov	r17,r18
   16ec8:	9829883a 	mov	r20,r19
   16ecc:	04000084 	movi	r16,2
   16ed0:	003c9206 	br	1611c <_gp+0xffff0060>
   16ed4:	04000044 	movi	r16,1
   16ed8:	dc000c15 	stw	r16,48(sp)
   16edc:	dc000615 	stw	r16,24(sp)
   16ee0:	dc002215 	stw	r16,136(sp)
   16ee4:	e0001115 	stw	zero,68(fp)
   16ee8:	000b883a 	mov	r5,zero
   16eec:	003c6906 	br	16094 <_gp+0xfffeffd8>
   16ef0:	3021883a 	mov	r16,r6
   16ef4:	003ffb06 	br	16ee4 <_gp+0xffff0e28>
   16ef8:	1000021e 	bne	r2,zero,16f04 <_dtoa_r+0x11e0>
   16efc:	4200004c 	andi	r8,r8,1
   16f00:	403e7d1e 	bne	r8,zero,168f8 <_gp+0xffff083c>
   16f04:	01000c04 	movi	r4,48
   16f08:	00000106 	br	16f10 <_dtoa_r+0x11ec>
   16f0c:	102f883a 	mov	r23,r2
   16f10:	b8bfffc4 	addi	r2,r23,-1
   16f14:	10c00007 	ldb	r3,0(r2)
   16f18:	193ffc26 	beq	r3,r4,16f0c <_gp+0xffff0e50>
   16f1c:	003e8706 	br	1693c <_gp+0xffff0880>
   16f20:	d8800517 	ldw	r2,20(sp)
   16f24:	00a3c83a 	sub	r17,zero,r2
   16f28:	8800a426 	beq	r17,zero,171bc <_dtoa_r+0x1498>
   16f2c:	888003cc 	andi	r2,r17,15
   16f30:	100490fa 	slli	r2,r2,3
   16f34:	00c000b4 	movhi	r3,2
   16f38:	18f5a804 	addi	r3,r3,-10592
   16f3c:	1885883a 	add	r2,r3,r2
   16f40:	11800017 	ldw	r6,0(r2)
   16f44:	11c00117 	ldw	r7,4(r2)
   16f48:	9009883a 	mov	r4,r18
   16f4c:	980b883a 	mov	r5,r19
   16f50:	8823d13a 	srai	r17,r17,4
   16f54:	00118440 	call	11844 <__muldf3>
   16f58:	d8800f15 	stw	r2,60(sp)
   16f5c:	d8c01015 	stw	r3,64(sp)
   16f60:	8800e826 	beq	r17,zero,17304 <_dtoa_r+0x15e0>
   16f64:	050000b4 	movhi	r20,2
   16f68:	a5359e04 	addi	r20,r20,-10632
   16f6c:	04000084 	movi	r16,2
   16f70:	8980004c 	andi	r6,r17,1
   16f74:	1009883a 	mov	r4,r2
   16f78:	8823d07a 	srai	r17,r17,1
   16f7c:	180b883a 	mov	r5,r3
   16f80:	30000426 	beq	r6,zero,16f94 <_dtoa_r+0x1270>
   16f84:	a1800017 	ldw	r6,0(r20)
   16f88:	a1c00117 	ldw	r7,4(r20)
   16f8c:	84000044 	addi	r16,r16,1
   16f90:	00118440 	call	11844 <__muldf3>
   16f94:	a5000204 	addi	r20,r20,8
   16f98:	883ff51e 	bne	r17,zero,16f70 <_gp+0xffff0eb4>
   16f9c:	d8800f15 	stw	r2,60(sp)
   16fa0:	d8c01015 	stw	r3,64(sp)
   16fa4:	003c7606 	br	16180 <_gp+0xffff00c4>
   16fa8:	00c00c04 	movi	r3,48
   16fac:	10c00005 	stb	r3,0(r2)
   16fb0:	d8c00517 	ldw	r3,20(sp)
   16fb4:	bd3fffc3 	ldbu	r20,-1(r23)
   16fb8:	18c00044 	addi	r3,r3,1
   16fbc:	d8c00515 	stw	r3,20(sp)
   16fc0:	003db906 	br	166a8 <_gp+0xffff05ec>
   16fc4:	89400117 	ldw	r5,4(r17)
   16fc8:	e009883a 	mov	r4,fp
   16fcc:	0017b640 	call	17b64 <_Balloc>
   16fd0:	89800417 	ldw	r6,16(r17)
   16fd4:	89400304 	addi	r5,r17,12
   16fd8:	11000304 	addi	r4,r2,12
   16fdc:	31800084 	addi	r6,r6,2
   16fe0:	318d883a 	add	r6,r6,r6
   16fe4:	318d883a 	add	r6,r6,r6
   16fe8:	1027883a 	mov	r19,r2
   16fec:	0017a1c0 	call	17a1c <memcpy>
   16ff0:	01800044 	movi	r6,1
   16ff4:	980b883a 	mov	r5,r19
   16ff8:	e009883a 	mov	r4,fp
   16ffc:	00183a00 	call	183a0 <__lshift>
   17000:	1029883a 	mov	r20,r2
   17004:	003ecc06 	br	16b38 <_gp+0xffff0a7c>
   17008:	00800e44 	movi	r2,57
   1700c:	90809026 	beq	r18,r2,17250 <_dtoa_r+0x152c>
   17010:	92000044 	addi	r8,r18,1
   17014:	003f1f06 	br	16c94 <_gp+0xffff0bd8>
   17018:	9011883a 	mov	r8,r18
   1701c:	8825883a 	mov	r18,r17
   17020:	a023883a 	mov	r17,r20
   17024:	003e2906 	br	168cc <_gp+0xffff0810>
   17028:	002b883a 	mov	r21,zero
   1702c:	0023883a 	mov	r17,zero
   17030:	003f5406 	br	16d84 <_gp+0xffff0cc8>
   17034:	61bfffc4 	addi	r6,r12,-1
   17038:	300490fa 	slli	r2,r6,3
   1703c:	00c000b4 	movhi	r3,2
   17040:	18f5a804 	addi	r3,r3,-10592
   17044:	1885883a 	add	r2,r3,r2
   17048:	11000017 	ldw	r4,0(r2)
   1704c:	11400117 	ldw	r5,4(r2)
   17050:	d8800717 	ldw	r2,28(sp)
   17054:	880f883a 	mov	r7,r17
   17058:	d9801215 	stw	r6,72(sp)
   1705c:	800d883a 	mov	r6,r16
   17060:	db001615 	stw	r12,88(sp)
   17064:	15c00044 	addi	r23,r2,1
   17068:	00118440 	call	11844 <__muldf3>
   1706c:	d9401017 	ldw	r5,64(sp)
   17070:	d9000f17 	ldw	r4,60(sp)
   17074:	d8c01515 	stw	r3,84(sp)
   17078:	d8801415 	stw	r2,80(sp)
   1707c:	00120b00 	call	120b0 <__fixdfsi>
   17080:	1009883a 	mov	r4,r2
   17084:	1021883a 	mov	r16,r2
   17088:	00121300 	call	12130 <__floatsidf>
   1708c:	d9000f17 	ldw	r4,60(sp)
   17090:	d9401017 	ldw	r5,64(sp)
   17094:	100d883a 	mov	r6,r2
   17098:	180f883a 	mov	r7,r3
   1709c:	001c2f80 	call	1c2f8 <__subdf3>
   170a0:	1829883a 	mov	r20,r3
   170a4:	d8c00717 	ldw	r3,28(sp)
   170a8:	84000c04 	addi	r16,r16,48
   170ac:	1023883a 	mov	r17,r2
   170b0:	1c000005 	stb	r16,0(r3)
   170b4:	db001617 	ldw	r12,88(sp)
   170b8:	00800044 	movi	r2,1
   170bc:	60802226 	beq	r12,r2,17148 <_dtoa_r+0x1424>
   170c0:	d9c00717 	ldw	r7,28(sp)
   170c4:	8805883a 	mov	r2,r17
   170c8:	b82b883a 	mov	r21,r23
   170cc:	3b19883a 	add	r12,r7,r12
   170d0:	6023883a 	mov	r17,r12
   170d4:	a007883a 	mov	r3,r20
   170d8:	dc800f15 	stw	r18,60(sp)
   170dc:	000d883a 	mov	r6,zero
   170e0:	01d00934 	movhi	r7,16420
   170e4:	1009883a 	mov	r4,r2
   170e8:	180b883a 	mov	r5,r3
   170ec:	00118440 	call	11844 <__muldf3>
   170f0:	180b883a 	mov	r5,r3
   170f4:	1009883a 	mov	r4,r2
   170f8:	1829883a 	mov	r20,r3
   170fc:	1025883a 	mov	r18,r2
   17100:	00120b00 	call	120b0 <__fixdfsi>
   17104:	1009883a 	mov	r4,r2
   17108:	1021883a 	mov	r16,r2
   1710c:	00121300 	call	12130 <__floatsidf>
   17110:	100d883a 	mov	r6,r2
   17114:	180f883a 	mov	r7,r3
   17118:	9009883a 	mov	r4,r18
   1711c:	a00b883a 	mov	r5,r20
   17120:	84000c04 	addi	r16,r16,48
   17124:	001c2f80 	call	1c2f8 <__subdf3>
   17128:	ad400044 	addi	r21,r21,1
   1712c:	ac3fffc5 	stb	r16,-1(r21)
   17130:	ac7fea1e 	bne	r21,r17,170dc <_gp+0xffff1020>
   17134:	1023883a 	mov	r17,r2
   17138:	d8801217 	ldw	r2,72(sp)
   1713c:	dc800f17 	ldw	r18,60(sp)
   17140:	1829883a 	mov	r20,r3
   17144:	b8af883a 	add	r23,r23,r2
   17148:	d9001417 	ldw	r4,80(sp)
   1714c:	d9401517 	ldw	r5,84(sp)
   17150:	000d883a 	mov	r6,zero
   17154:	01cff834 	movhi	r7,16352
   17158:	0010f980 	call	10f98 <__adddf3>
   1715c:	880d883a 	mov	r6,r17
   17160:	a00f883a 	mov	r7,r20
   17164:	1009883a 	mov	r4,r2
   17168:	180b883a 	mov	r5,r3
   1716c:	001c2040 	call	1c204 <__ledf2>
   17170:	10003e0e 	bge	r2,zero,1726c <_dtoa_r+0x1548>
   17174:	d9001317 	ldw	r4,76(sp)
   17178:	bd3fffc3 	ldbu	r20,-1(r23)
   1717c:	d9000515 	stw	r4,20(sp)
   17180:	003d3b06 	br	16670 <_gp+0xffff05b4>
   17184:	0027883a 	mov	r19,zero
   17188:	003f1b06 	br	16df8 <_gp+0xffff0d3c>
   1718c:	d8800817 	ldw	r2,32(sp)
   17190:	11e9c83a 	sub	r20,r2,r7
   17194:	0005883a 	mov	r2,zero
   17198:	003d5406 	br	166ec <_gp+0xffff0630>
   1719c:	00800044 	movi	r2,1
   171a0:	003dc706 	br	168c0 <_gp+0xffff0804>
   171a4:	d8c00217 	ldw	r3,8(sp)
   171a8:	00800d84 	movi	r2,54
   171ac:	dd400a17 	ldw	r21,40(sp)
   171b0:	10c5c83a 	sub	r2,r2,r3
   171b4:	dd000817 	ldw	r20,32(sp)
   171b8:	003d4c06 	br	166ec <_gp+0xffff0630>
   171bc:	dc800f15 	stw	r18,60(sp)
   171c0:	dcc01015 	stw	r19,64(sp)
   171c4:	04000084 	movi	r16,2
   171c8:	003bed06 	br	16180 <_gp+0xffff00c4>
   171cc:	d9000617 	ldw	r4,24(sp)
   171d0:	203f0d26 	beq	r4,zero,16e08 <_gp+0xffff0d4c>
   171d4:	d9800c17 	ldw	r6,48(sp)
   171d8:	01bcab0e 	bge	zero,r6,16488 <_gp+0xffff03cc>
   171dc:	d9401017 	ldw	r5,64(sp)
   171e0:	d9000f17 	ldw	r4,60(sp)
   171e4:	000d883a 	mov	r6,zero
   171e8:	01d00934 	movhi	r7,16420
   171ec:	00118440 	call	11844 <__muldf3>
   171f0:	81000044 	addi	r4,r16,1
   171f4:	d8800f15 	stw	r2,60(sp)
   171f8:	d8c01015 	stw	r3,64(sp)
   171fc:	00121300 	call	12130 <__floatsidf>
   17200:	d9800f17 	ldw	r6,60(sp)
   17204:	d9c01017 	ldw	r7,64(sp)
   17208:	1009883a 	mov	r4,r2
   1720c:	180b883a 	mov	r5,r3
   17210:	00118440 	call	11844 <__muldf3>
   17214:	01d00734 	movhi	r7,16412
   17218:	000d883a 	mov	r6,zero
   1721c:	1009883a 	mov	r4,r2
   17220:	180b883a 	mov	r5,r3
   17224:	0010f980 	call	10f98 <__adddf3>
   17228:	d9c00517 	ldw	r7,20(sp)
   1722c:	047f3034 	movhi	r17,64704
   17230:	1021883a 	mov	r16,r2
   17234:	39ffffc4 	addi	r7,r7,-1
   17238:	d9c01315 	stw	r7,76(sp)
   1723c:	1c63883a 	add	r17,r3,r17
   17240:	db000c17 	ldw	r12,48(sp)
   17244:	003bea06 	br	161f0 <_gp+0xffff0134>
   17248:	dc000915 	stw	r16,36(sp)
   1724c:	003e0e06 	br	16a88 <_gp+0xffff09cc>
   17250:	01000e44 	movi	r4,57
   17254:	8825883a 	mov	r18,r17
   17258:	9dc00044 	addi	r23,r19,1
   1725c:	99000005 	stb	r4,0(r19)
   17260:	a023883a 	mov	r17,r20
   17264:	dc000915 	stw	r16,36(sp)
   17268:	003da406 	br	168fc <_gp+0xffff0840>
   1726c:	d9801417 	ldw	r6,80(sp)
   17270:	d9c01517 	ldw	r7,84(sp)
   17274:	0009883a 	mov	r4,zero
   17278:	014ff834 	movhi	r5,16352
   1727c:	001c2f80 	call	1c2f8 <__subdf3>
   17280:	880d883a 	mov	r6,r17
   17284:	a00f883a 	mov	r7,r20
   17288:	1009883a 	mov	r4,r2
   1728c:	180b883a 	mov	r5,r3
   17290:	001c1280 	call	1c128 <__gedf2>
   17294:	00bc7c0e 	bge	zero,r2,16488 <_gp+0xffff03cc>
   17298:	01000c04 	movi	r4,48
   1729c:	00000106 	br	172a4 <_dtoa_r+0x1580>
   172a0:	102f883a 	mov	r23,r2
   172a4:	b8bfffc4 	addi	r2,r23,-1
   172a8:	10c00007 	ldb	r3,0(r2)
   172ac:	193ffc26 	beq	r3,r4,172a0 <_gp+0xffff11e4>
   172b0:	d9801317 	ldw	r6,76(sp)
   172b4:	d9800515 	stw	r6,20(sp)
   172b8:	003c4406 	br	163cc <_gp+0xffff0310>
   172bc:	d9801317 	ldw	r6,76(sp)
   172c0:	d9800515 	stw	r6,20(sp)
   172c4:	003cea06 	br	16670 <_gp+0xffff05b4>
   172c8:	dd800f17 	ldw	r22,60(sp)
   172cc:	dcc01017 	ldw	r19,64(sp)
   172d0:	dc801217 	ldw	r18,72(sp)
   172d4:	003c6c06 	br	16488 <_gp+0xffff03cc>
   172d8:	903e031e 	bne	r18,zero,16ae8 <_gp+0xffff0a2c>
   172dc:	003ebb06 	br	16dcc <_gp+0xffff0d10>
   172e0:	103e6c1e 	bne	r2,zero,16c94 <_gp+0xffff0bd8>
   172e4:	4080004c 	andi	r2,r8,1
   172e8:	103e6a26 	beq	r2,zero,16c94 <_gp+0xffff0bd8>
   172ec:	003e6606 	br	16c88 <_gp+0xffff0bcc>
   172f0:	d8c00317 	ldw	r3,12(sp)
   172f4:	00800084 	movi	r2,2
   172f8:	10c02916 	blt	r2,r3,173a0 <_dtoa_r+0x167c>
   172fc:	d9000c17 	ldw	r4,48(sp)
   17300:	003e8806 	br	16d24 <_gp+0xffff0c68>
   17304:	04000084 	movi	r16,2
   17308:	003b9d06 	br	16180 <_gp+0xffff00c4>
   1730c:	d9001317 	ldw	r4,76(sp)
   17310:	d9000515 	stw	r4,20(sp)
   17314:	003cd606 	br	16670 <_gp+0xffff05b4>
   17318:	d8801317 	ldw	r2,76(sp)
   1731c:	d8800515 	stw	r2,20(sp)
   17320:	003c2a06 	br	163cc <_gp+0xffff0310>
   17324:	d9800317 	ldw	r6,12(sp)
   17328:	00800084 	movi	r2,2
   1732c:	11801516 	blt	r2,r6,17384 <_dtoa_r+0x1660>
   17330:	d9c00c17 	ldw	r7,48(sp)
   17334:	d9c00615 	stw	r7,24(sp)
   17338:	003df706 	br	16b18 <_gp+0xffff0a5c>
   1733c:	193d3926 	beq	r3,r4,16824 <_gp+0xffff0768>
   17340:	00c00f04 	movi	r3,60
   17344:	1885c83a 	sub	r2,r3,r2
   17348:	003ddf06 	br	16ac8 <_gp+0xffff0a0c>
   1734c:	e009883a 	mov	r4,fp
   17350:	e0001115 	stw	zero,68(fp)
   17354:	000b883a 	mov	r5,zero
   17358:	0017b640 	call	17b64 <_Balloc>
   1735c:	d8800715 	stw	r2,28(sp)
   17360:	d8c00717 	ldw	r3,28(sp)
   17364:	00bfffc4 	movi	r2,-1
   17368:	01000044 	movi	r4,1
   1736c:	d8800c15 	stw	r2,48(sp)
   17370:	e0c01015 	stw	r3,64(fp)
   17374:	d9000b15 	stw	r4,44(sp)
   17378:	d8800615 	stw	r2,24(sp)
   1737c:	d8002215 	stw	zero,136(sp)
   17380:	003c4106 	br	16488 <_gp+0xffff03cc>
   17384:	d8c00c17 	ldw	r3,48(sp)
   17388:	d8c00615 	stw	r3,24(sp)
   1738c:	003e7006 	br	16d50 <_gp+0xffff0c94>
   17390:	04400044 	movi	r17,1
   17394:	003b2006 	br	16018 <_gp+0xfffeff5c>
   17398:	000b883a 	mov	r5,zero
   1739c:	003b3d06 	br	16094 <_gp+0xfffeffd8>
   173a0:	d8800c17 	ldw	r2,48(sp)
   173a4:	d8800615 	stw	r2,24(sp)
   173a8:	003e6906 	br	16d50 <_gp+0xffff0c94>

000173ac <_malloc_trim_r>:
   173ac:	defffb04 	addi	sp,sp,-20
   173b0:	dcc00315 	stw	r19,12(sp)
   173b4:	04c000b4 	movhi	r19,2
   173b8:	dc800215 	stw	r18,8(sp)
   173bc:	dc400115 	stw	r17,4(sp)
   173c0:	dc000015 	stw	r16,0(sp)
   173c4:	dfc00415 	stw	ra,16(sp)
   173c8:	2821883a 	mov	r16,r5
   173cc:	9cf6ee04 	addi	r19,r19,-9288
   173d0:	2025883a 	mov	r18,r4
   173d4:	001ce800 	call	1ce80 <__malloc_lock>
   173d8:	98800217 	ldw	r2,8(r19)
   173dc:	14400117 	ldw	r17,4(r2)
   173e0:	00bfff04 	movi	r2,-4
   173e4:	88a2703a 	and	r17,r17,r2
   173e8:	8c21c83a 	sub	r16,r17,r16
   173ec:	8403fbc4 	addi	r16,r16,4079
   173f0:	8020d33a 	srli	r16,r16,12
   173f4:	0083ffc4 	movi	r2,4095
   173f8:	843fffc4 	addi	r16,r16,-1
   173fc:	8020933a 	slli	r16,r16,12
   17400:	1400060e 	bge	r2,r16,1741c <_malloc_trim_r+0x70>
   17404:	000b883a 	mov	r5,zero
   17408:	9009883a 	mov	r4,r18
   1740c:	0012cd00 	call	12cd0 <_sbrk_r>
   17410:	98c00217 	ldw	r3,8(r19)
   17414:	1c47883a 	add	r3,r3,r17
   17418:	10c00a26 	beq	r2,r3,17444 <_malloc_trim_r+0x98>
   1741c:	9009883a 	mov	r4,r18
   17420:	001ce840 	call	1ce84 <__malloc_unlock>
   17424:	0005883a 	mov	r2,zero
   17428:	dfc00417 	ldw	ra,16(sp)
   1742c:	dcc00317 	ldw	r19,12(sp)
   17430:	dc800217 	ldw	r18,8(sp)
   17434:	dc400117 	ldw	r17,4(sp)
   17438:	dc000017 	ldw	r16,0(sp)
   1743c:	dec00504 	addi	sp,sp,20
   17440:	f800283a 	ret
   17444:	040bc83a 	sub	r5,zero,r16
   17448:	9009883a 	mov	r4,r18
   1744c:	0012cd00 	call	12cd0 <_sbrk_r>
   17450:	00ffffc4 	movi	r3,-1
   17454:	10c00d26 	beq	r2,r3,1748c <_malloc_trim_r+0xe0>
   17458:	00c000b4 	movhi	r3,2
   1745c:	18fac604 	addi	r3,r3,-5352
   17460:	18800017 	ldw	r2,0(r3)
   17464:	99000217 	ldw	r4,8(r19)
   17468:	8c23c83a 	sub	r17,r17,r16
   1746c:	8c400054 	ori	r17,r17,1
   17470:	1421c83a 	sub	r16,r2,r16
   17474:	24400115 	stw	r17,4(r4)
   17478:	9009883a 	mov	r4,r18
   1747c:	1c000015 	stw	r16,0(r3)
   17480:	001ce840 	call	1ce84 <__malloc_unlock>
   17484:	00800044 	movi	r2,1
   17488:	003fe706 	br	17428 <_gp+0xffff136c>
   1748c:	000b883a 	mov	r5,zero
   17490:	9009883a 	mov	r4,r18
   17494:	0012cd00 	call	12cd0 <_sbrk_r>
   17498:	99000217 	ldw	r4,8(r19)
   1749c:	014003c4 	movi	r5,15
   174a0:	1107c83a 	sub	r3,r2,r4
   174a4:	28ffdd0e 	bge	r5,r3,1741c <_gp+0xffff1360>
   174a8:	014000b4 	movhi	r5,2
   174ac:	29783304 	addi	r5,r5,-7988
   174b0:	29400017 	ldw	r5,0(r5)
   174b4:	18c00054 	ori	r3,r3,1
   174b8:	20c00115 	stw	r3,4(r4)
   174bc:	00c000b4 	movhi	r3,2
   174c0:	1145c83a 	sub	r2,r2,r5
   174c4:	18fac604 	addi	r3,r3,-5352
   174c8:	18800015 	stw	r2,0(r3)
   174cc:	003fd306 	br	1741c <_gp+0xffff1360>

000174d0 <_free_r>:
   174d0:	28004126 	beq	r5,zero,175d8 <_free_r+0x108>
   174d4:	defffd04 	addi	sp,sp,-12
   174d8:	dc400115 	stw	r17,4(sp)
   174dc:	dc000015 	stw	r16,0(sp)
   174e0:	2023883a 	mov	r17,r4
   174e4:	2821883a 	mov	r16,r5
   174e8:	dfc00215 	stw	ra,8(sp)
   174ec:	001ce800 	call	1ce80 <__malloc_lock>
   174f0:	81ffff17 	ldw	r7,-4(r16)
   174f4:	00bfff84 	movi	r2,-2
   174f8:	010000b4 	movhi	r4,2
   174fc:	81bffe04 	addi	r6,r16,-8
   17500:	3884703a 	and	r2,r7,r2
   17504:	2136ee04 	addi	r4,r4,-9288
   17508:	308b883a 	add	r5,r6,r2
   1750c:	2a400117 	ldw	r9,4(r5)
   17510:	22000217 	ldw	r8,8(r4)
   17514:	00ffff04 	movi	r3,-4
   17518:	48c6703a 	and	r3,r9,r3
   1751c:	2a005726 	beq	r5,r8,1767c <_free_r+0x1ac>
   17520:	28c00115 	stw	r3,4(r5)
   17524:	39c0004c 	andi	r7,r7,1
   17528:	3800091e 	bne	r7,zero,17550 <_free_r+0x80>
   1752c:	823ffe17 	ldw	r8,-8(r16)
   17530:	22400204 	addi	r9,r4,8
   17534:	320dc83a 	sub	r6,r6,r8
   17538:	31c00217 	ldw	r7,8(r6)
   1753c:	1205883a 	add	r2,r2,r8
   17540:	3a406526 	beq	r7,r9,176d8 <_free_r+0x208>
   17544:	32000317 	ldw	r8,12(r6)
   17548:	3a000315 	stw	r8,12(r7)
   1754c:	41c00215 	stw	r7,8(r8)
   17550:	28cf883a 	add	r7,r5,r3
   17554:	39c00117 	ldw	r7,4(r7)
   17558:	39c0004c 	andi	r7,r7,1
   1755c:	38003a26 	beq	r7,zero,17648 <_free_r+0x178>
   17560:	10c00054 	ori	r3,r2,1
   17564:	30c00115 	stw	r3,4(r6)
   17568:	3087883a 	add	r3,r6,r2
   1756c:	18800015 	stw	r2,0(r3)
   17570:	00c07fc4 	movi	r3,511
   17574:	18801936 	bltu	r3,r2,175dc <_free_r+0x10c>
   17578:	1004d0fa 	srli	r2,r2,3
   1757c:	01c00044 	movi	r7,1
   17580:	21400117 	ldw	r5,4(r4)
   17584:	10c00044 	addi	r3,r2,1
   17588:	18c7883a 	add	r3,r3,r3
   1758c:	1005d0ba 	srai	r2,r2,2
   17590:	18c7883a 	add	r3,r3,r3
   17594:	18c7883a 	add	r3,r3,r3
   17598:	1907883a 	add	r3,r3,r4
   1759c:	3884983a 	sll	r2,r7,r2
   175a0:	19c00017 	ldw	r7,0(r3)
   175a4:	1a3ffe04 	addi	r8,r3,-8
   175a8:	1144b03a 	or	r2,r2,r5
   175ac:	32000315 	stw	r8,12(r6)
   175b0:	31c00215 	stw	r7,8(r6)
   175b4:	20800115 	stw	r2,4(r4)
   175b8:	19800015 	stw	r6,0(r3)
   175bc:	39800315 	stw	r6,12(r7)
   175c0:	8809883a 	mov	r4,r17
   175c4:	dfc00217 	ldw	ra,8(sp)
   175c8:	dc400117 	ldw	r17,4(sp)
   175cc:	dc000017 	ldw	r16,0(sp)
   175d0:	dec00304 	addi	sp,sp,12
   175d4:	001ce841 	jmpi	1ce84 <__malloc_unlock>
   175d8:	f800283a 	ret
   175dc:	100ad27a 	srli	r5,r2,9
   175e0:	00c00104 	movi	r3,4
   175e4:	19404a36 	bltu	r3,r5,17710 <_free_r+0x240>
   175e8:	100ad1ba 	srli	r5,r2,6
   175ec:	28c00e44 	addi	r3,r5,57
   175f0:	18c7883a 	add	r3,r3,r3
   175f4:	29400e04 	addi	r5,r5,56
   175f8:	18c7883a 	add	r3,r3,r3
   175fc:	18c7883a 	add	r3,r3,r3
   17600:	1909883a 	add	r4,r3,r4
   17604:	20c00017 	ldw	r3,0(r4)
   17608:	01c000b4 	movhi	r7,2
   1760c:	213ffe04 	addi	r4,r4,-8
   17610:	39f6ee04 	addi	r7,r7,-9288
   17614:	20c04426 	beq	r4,r3,17728 <_free_r+0x258>
   17618:	01ffff04 	movi	r7,-4
   1761c:	19400117 	ldw	r5,4(r3)
   17620:	29ca703a 	and	r5,r5,r7
   17624:	1140022e 	bgeu	r2,r5,17630 <_free_r+0x160>
   17628:	18c00217 	ldw	r3,8(r3)
   1762c:	20fffb1e 	bne	r4,r3,1761c <_gp+0xffff1560>
   17630:	19000317 	ldw	r4,12(r3)
   17634:	31000315 	stw	r4,12(r6)
   17638:	30c00215 	stw	r3,8(r6)
   1763c:	21800215 	stw	r6,8(r4)
   17640:	19800315 	stw	r6,12(r3)
   17644:	003fde06 	br	175c0 <_gp+0xffff1504>
   17648:	29c00217 	ldw	r7,8(r5)
   1764c:	10c5883a 	add	r2,r2,r3
   17650:	00c000b4 	movhi	r3,2
   17654:	18f6f004 	addi	r3,r3,-9280
   17658:	38c03b26 	beq	r7,r3,17748 <_free_r+0x278>
   1765c:	2a000317 	ldw	r8,12(r5)
   17660:	11400054 	ori	r5,r2,1
   17664:	3087883a 	add	r3,r6,r2
   17668:	3a000315 	stw	r8,12(r7)
   1766c:	41c00215 	stw	r7,8(r8)
   17670:	31400115 	stw	r5,4(r6)
   17674:	18800015 	stw	r2,0(r3)
   17678:	003fbd06 	br	17570 <_gp+0xffff14b4>
   1767c:	39c0004c 	andi	r7,r7,1
   17680:	10c5883a 	add	r2,r2,r3
   17684:	3800071e 	bne	r7,zero,176a4 <_free_r+0x1d4>
   17688:	81fffe17 	ldw	r7,-8(r16)
   1768c:	31cdc83a 	sub	r6,r6,r7
   17690:	30c00317 	ldw	r3,12(r6)
   17694:	31400217 	ldw	r5,8(r6)
   17698:	11c5883a 	add	r2,r2,r7
   1769c:	28c00315 	stw	r3,12(r5)
   176a0:	19400215 	stw	r5,8(r3)
   176a4:	10c00054 	ori	r3,r2,1
   176a8:	30c00115 	stw	r3,4(r6)
   176ac:	00c000b4 	movhi	r3,2
   176b0:	18f83404 	addi	r3,r3,-7984
   176b4:	18c00017 	ldw	r3,0(r3)
   176b8:	21800215 	stw	r6,8(r4)
   176bc:	10ffc036 	bltu	r2,r3,175c0 <_gp+0xffff1504>
   176c0:	008000b4 	movhi	r2,2
   176c4:	10bab004 	addi	r2,r2,-5440
   176c8:	11400017 	ldw	r5,0(r2)
   176cc:	8809883a 	mov	r4,r17
   176d0:	00173ac0 	call	173ac <_malloc_trim_r>
   176d4:	003fba06 	br	175c0 <_gp+0xffff1504>
   176d8:	28c9883a 	add	r4,r5,r3
   176dc:	21000117 	ldw	r4,4(r4)
   176e0:	2100004c 	andi	r4,r4,1
   176e4:	2000391e 	bne	r4,zero,177cc <_free_r+0x2fc>
   176e8:	29c00217 	ldw	r7,8(r5)
   176ec:	29000317 	ldw	r4,12(r5)
   176f0:	1885883a 	add	r2,r3,r2
   176f4:	10c00054 	ori	r3,r2,1
   176f8:	39000315 	stw	r4,12(r7)
   176fc:	21c00215 	stw	r7,8(r4)
   17700:	30c00115 	stw	r3,4(r6)
   17704:	308d883a 	add	r6,r6,r2
   17708:	30800015 	stw	r2,0(r6)
   1770c:	003fac06 	br	175c0 <_gp+0xffff1504>
   17710:	00c00504 	movi	r3,20
   17714:	19401536 	bltu	r3,r5,1776c <_free_r+0x29c>
   17718:	28c01704 	addi	r3,r5,92
   1771c:	18c7883a 	add	r3,r3,r3
   17720:	294016c4 	addi	r5,r5,91
   17724:	003fb406 	br	175f8 <_gp+0xffff153c>
   17728:	280bd0ba 	srai	r5,r5,2
   1772c:	00c00044 	movi	r3,1
   17730:	38800117 	ldw	r2,4(r7)
   17734:	194a983a 	sll	r5,r3,r5
   17738:	2007883a 	mov	r3,r4
   1773c:	2884b03a 	or	r2,r5,r2
   17740:	38800115 	stw	r2,4(r7)
   17744:	003fbb06 	br	17634 <_gp+0xffff1578>
   17748:	21800515 	stw	r6,20(r4)
   1774c:	21800415 	stw	r6,16(r4)
   17750:	10c00054 	ori	r3,r2,1
   17754:	31c00315 	stw	r7,12(r6)
   17758:	31c00215 	stw	r7,8(r6)
   1775c:	30c00115 	stw	r3,4(r6)
   17760:	308d883a 	add	r6,r6,r2
   17764:	30800015 	stw	r2,0(r6)
   17768:	003f9506 	br	175c0 <_gp+0xffff1504>
   1776c:	00c01504 	movi	r3,84
   17770:	19400536 	bltu	r3,r5,17788 <_free_r+0x2b8>
   17774:	100ad33a 	srli	r5,r2,12
   17778:	28c01bc4 	addi	r3,r5,111
   1777c:	18c7883a 	add	r3,r3,r3
   17780:	29401b84 	addi	r5,r5,110
   17784:	003f9c06 	br	175f8 <_gp+0xffff153c>
   17788:	00c05504 	movi	r3,340
   1778c:	19400536 	bltu	r3,r5,177a4 <_free_r+0x2d4>
   17790:	100ad3fa 	srli	r5,r2,15
   17794:	28c01e04 	addi	r3,r5,120
   17798:	18c7883a 	add	r3,r3,r3
   1779c:	29401dc4 	addi	r5,r5,119
   177a0:	003f9506 	br	175f8 <_gp+0xffff153c>
   177a4:	00c15504 	movi	r3,1364
   177a8:	19400536 	bltu	r3,r5,177c0 <_free_r+0x2f0>
   177ac:	100ad4ba 	srli	r5,r2,18
   177b0:	28c01f44 	addi	r3,r5,125
   177b4:	18c7883a 	add	r3,r3,r3
   177b8:	29401f04 	addi	r5,r5,124
   177bc:	003f8e06 	br	175f8 <_gp+0xffff153c>
   177c0:	00c03f84 	movi	r3,254
   177c4:	01401f84 	movi	r5,126
   177c8:	003f8b06 	br	175f8 <_gp+0xffff153c>
   177cc:	10c00054 	ori	r3,r2,1
   177d0:	30c00115 	stw	r3,4(r6)
   177d4:	308d883a 	add	r6,r6,r2
   177d8:	30800015 	stw	r2,0(r6)
   177dc:	003f7806 	br	175c0 <_gp+0xffff1504>

000177e0 <_setlocale_r>:
   177e0:	30001b26 	beq	r6,zero,17850 <_setlocale_r+0x70>
   177e4:	014000b4 	movhi	r5,2
   177e8:	defffe04 	addi	sp,sp,-8
   177ec:	29758e04 	addi	r5,r5,-10696
   177f0:	3009883a 	mov	r4,r6
   177f4:	dc000015 	stw	r16,0(sp)
   177f8:	dfc00115 	stw	ra,4(sp)
   177fc:	3021883a 	mov	r16,r6
   17800:	0018c900 	call	18c90 <strcmp>
   17804:	1000061e 	bne	r2,zero,17820 <_setlocale_r+0x40>
   17808:	008000b4 	movhi	r2,2
   1780c:	10b57004 	addi	r2,r2,-10816
   17810:	dfc00117 	ldw	ra,4(sp)
   17814:	dc000017 	ldw	r16,0(sp)
   17818:	dec00204 	addi	sp,sp,8
   1781c:	f800283a 	ret
   17820:	014000b4 	movhi	r5,2
   17824:	29757004 	addi	r5,r5,-10816
   17828:	8009883a 	mov	r4,r16
   1782c:	0018c900 	call	18c90 <strcmp>
   17830:	103ff526 	beq	r2,zero,17808 <_gp+0xffff174c>
   17834:	014000b4 	movhi	r5,2
   17838:	29750704 	addi	r5,r5,-11236
   1783c:	8009883a 	mov	r4,r16
   17840:	0018c900 	call	18c90 <strcmp>
   17844:	103ff026 	beq	r2,zero,17808 <_gp+0xffff174c>
   17848:	0005883a 	mov	r2,zero
   1784c:	003ff006 	br	17810 <_gp+0xffff1754>
   17850:	008000b4 	movhi	r2,2
   17854:	10b57004 	addi	r2,r2,-10816
   17858:	f800283a 	ret

0001785c <__locale_charset>:
   1785c:	008000b4 	movhi	r2,2
   17860:	10b7f804 	addi	r2,r2,-8224
   17864:	f800283a 	ret

00017868 <__locale_mb_cur_max>:
   17868:	008000b4 	movhi	r2,2
   1786c:	10b83504 	addi	r2,r2,-7980
   17870:	10800017 	ldw	r2,0(r2)
   17874:	f800283a 	ret

00017878 <__locale_msgcharset>:
   17878:	008000b4 	movhi	r2,2
   1787c:	10b7f004 	addi	r2,r2,-8256
   17880:	f800283a 	ret

00017884 <__locale_cjk_lang>:
   17884:	0005883a 	mov	r2,zero
   17888:	f800283a 	ret

0001788c <_localeconv_r>:
   1788c:	008000b4 	movhi	r2,2
   17890:	10b80004 	addi	r2,r2,-8192
   17894:	f800283a 	ret

00017898 <setlocale>:
   17898:	008000b4 	movhi	r2,2
   1789c:	10b83204 	addi	r2,r2,-7992
   178a0:	280d883a 	mov	r6,r5
   178a4:	200b883a 	mov	r5,r4
   178a8:	11000017 	ldw	r4,0(r2)
   178ac:	00177e01 	jmpi	177e0 <_setlocale_r>

000178b0 <localeconv>:
   178b0:	008000b4 	movhi	r2,2
   178b4:	10b80004 	addi	r2,r2,-8192
   178b8:	f800283a 	ret

000178bc <memchr>:
   178bc:	208000cc 	andi	r2,r4,3
   178c0:	280f883a 	mov	r7,r5
   178c4:	10003426 	beq	r2,zero,17998 <memchr+0xdc>
   178c8:	30bfffc4 	addi	r2,r6,-1
   178cc:	30001a26 	beq	r6,zero,17938 <memchr+0x7c>
   178d0:	20c00003 	ldbu	r3,0(r4)
   178d4:	29803fcc 	andi	r6,r5,255
   178d8:	30c0051e 	bne	r6,r3,178f0 <memchr+0x34>
   178dc:	00001806 	br	17940 <memchr+0x84>
   178e0:	10001526 	beq	r2,zero,17938 <memchr+0x7c>
   178e4:	20c00003 	ldbu	r3,0(r4)
   178e8:	10bfffc4 	addi	r2,r2,-1
   178ec:	30c01426 	beq	r6,r3,17940 <memchr+0x84>
   178f0:	21000044 	addi	r4,r4,1
   178f4:	20c000cc 	andi	r3,r4,3
   178f8:	183ff91e 	bne	r3,zero,178e0 <_gp+0xffff1824>
   178fc:	020000c4 	movi	r8,3
   17900:	40801136 	bltu	r8,r2,17948 <memchr+0x8c>
   17904:	10000c26 	beq	r2,zero,17938 <memchr+0x7c>
   17908:	20c00003 	ldbu	r3,0(r4)
   1790c:	29403fcc 	andi	r5,r5,255
   17910:	28c00b26 	beq	r5,r3,17940 <memchr+0x84>
   17914:	20c00044 	addi	r3,r4,1
   17918:	39803fcc 	andi	r6,r7,255
   1791c:	2089883a 	add	r4,r4,r2
   17920:	00000306 	br	17930 <memchr+0x74>
   17924:	18c00044 	addi	r3,r3,1
   17928:	197fffc3 	ldbu	r5,-1(r3)
   1792c:	31400526 	beq	r6,r5,17944 <memchr+0x88>
   17930:	1805883a 	mov	r2,r3
   17934:	20fffb1e 	bne	r4,r3,17924 <_gp+0xffff1868>
   17938:	0005883a 	mov	r2,zero
   1793c:	f800283a 	ret
   17940:	2005883a 	mov	r2,r4
   17944:	f800283a 	ret
   17948:	28c03fcc 	andi	r3,r5,255
   1794c:	1812923a 	slli	r9,r3,8
   17950:	02ffbff4 	movhi	r11,65279
   17954:	02a02074 	movhi	r10,32897
   17958:	48d2b03a 	or	r9,r9,r3
   1795c:	4806943a 	slli	r3,r9,16
   17960:	5affbfc4 	addi	r11,r11,-257
   17964:	52a02004 	addi	r10,r10,-32640
   17968:	48d2b03a 	or	r9,r9,r3
   1796c:	20c00017 	ldw	r3,0(r4)
   17970:	48c6f03a 	xor	r3,r9,r3
   17974:	1acd883a 	add	r6,r3,r11
   17978:	00c6303a 	nor	r3,zero,r3
   1797c:	30c6703a 	and	r3,r6,r3
   17980:	1a86703a 	and	r3,r3,r10
   17984:	183fe01e 	bne	r3,zero,17908 <_gp+0xffff184c>
   17988:	10bfff04 	addi	r2,r2,-4
   1798c:	21000104 	addi	r4,r4,4
   17990:	40bff636 	bltu	r8,r2,1796c <_gp+0xffff18b0>
   17994:	003fdb06 	br	17904 <_gp+0xffff1848>
   17998:	3005883a 	mov	r2,r6
   1799c:	003fd706 	br	178fc <_gp+0xffff1840>

000179a0 <memcmp>:
   179a0:	01c000c4 	movi	r7,3
   179a4:	3980192e 	bgeu	r7,r6,17a0c <memcmp+0x6c>
   179a8:	2144b03a 	or	r2,r4,r5
   179ac:	11c4703a 	and	r2,r2,r7
   179b0:	10000f26 	beq	r2,zero,179f0 <memcmp+0x50>
   179b4:	20800003 	ldbu	r2,0(r4)
   179b8:	28c00003 	ldbu	r3,0(r5)
   179bc:	10c0151e 	bne	r2,r3,17a14 <memcmp+0x74>
   179c0:	31bfff84 	addi	r6,r6,-2
   179c4:	01ffffc4 	movi	r7,-1
   179c8:	00000406 	br	179dc <memcmp+0x3c>
   179cc:	20800003 	ldbu	r2,0(r4)
   179d0:	28c00003 	ldbu	r3,0(r5)
   179d4:	31bfffc4 	addi	r6,r6,-1
   179d8:	10c00e1e 	bne	r2,r3,17a14 <memcmp+0x74>
   179dc:	21000044 	addi	r4,r4,1
   179e0:	29400044 	addi	r5,r5,1
   179e4:	31fff91e 	bne	r6,r7,179cc <_gp+0xffff1910>
   179e8:	0005883a 	mov	r2,zero
   179ec:	f800283a 	ret
   179f0:	20c00017 	ldw	r3,0(r4)
   179f4:	28800017 	ldw	r2,0(r5)
   179f8:	18bfee1e 	bne	r3,r2,179b4 <_gp+0xffff18f8>
   179fc:	31bfff04 	addi	r6,r6,-4
   17a00:	21000104 	addi	r4,r4,4
   17a04:	29400104 	addi	r5,r5,4
   17a08:	39bff936 	bltu	r7,r6,179f0 <_gp+0xffff1934>
   17a0c:	303fe91e 	bne	r6,zero,179b4 <_gp+0xffff18f8>
   17a10:	003ff506 	br	179e8 <_gp+0xffff192c>
   17a14:	10c5c83a 	sub	r2,r2,r3
   17a18:	f800283a 	ret

00017a1c <memcpy>:
   17a1c:	defffd04 	addi	sp,sp,-12
   17a20:	dfc00215 	stw	ra,8(sp)
   17a24:	dc400115 	stw	r17,4(sp)
   17a28:	dc000015 	stw	r16,0(sp)
   17a2c:	00c003c4 	movi	r3,15
   17a30:	2005883a 	mov	r2,r4
   17a34:	1980452e 	bgeu	r3,r6,17b4c <memcpy+0x130>
   17a38:	2906b03a 	or	r3,r5,r4
   17a3c:	18c000cc 	andi	r3,r3,3
   17a40:	1800441e 	bne	r3,zero,17b54 <memcpy+0x138>
   17a44:	347ffc04 	addi	r17,r6,-16
   17a48:	8822d13a 	srli	r17,r17,4
   17a4c:	28c00104 	addi	r3,r5,4
   17a50:	23400104 	addi	r13,r4,4
   17a54:	8820913a 	slli	r16,r17,4
   17a58:	2b000204 	addi	r12,r5,8
   17a5c:	22c00204 	addi	r11,r4,8
   17a60:	84000504 	addi	r16,r16,20
   17a64:	2a800304 	addi	r10,r5,12
   17a68:	22400304 	addi	r9,r4,12
   17a6c:	2c21883a 	add	r16,r5,r16
   17a70:	2811883a 	mov	r8,r5
   17a74:	200f883a 	mov	r7,r4
   17a78:	41000017 	ldw	r4,0(r8)
   17a7c:	1fc00017 	ldw	ra,0(r3)
   17a80:	63c00017 	ldw	r15,0(r12)
   17a84:	39000015 	stw	r4,0(r7)
   17a88:	53800017 	ldw	r14,0(r10)
   17a8c:	6fc00015 	stw	ra,0(r13)
   17a90:	5bc00015 	stw	r15,0(r11)
   17a94:	4b800015 	stw	r14,0(r9)
   17a98:	18c00404 	addi	r3,r3,16
   17a9c:	39c00404 	addi	r7,r7,16
   17aa0:	42000404 	addi	r8,r8,16
   17aa4:	6b400404 	addi	r13,r13,16
   17aa8:	63000404 	addi	r12,r12,16
   17aac:	5ac00404 	addi	r11,r11,16
   17ab0:	52800404 	addi	r10,r10,16
   17ab4:	4a400404 	addi	r9,r9,16
   17ab8:	1c3fef1e 	bne	r3,r16,17a78 <_gp+0xffff19bc>
   17abc:	89c00044 	addi	r7,r17,1
   17ac0:	380e913a 	slli	r7,r7,4
   17ac4:	310003cc 	andi	r4,r6,15
   17ac8:	02c000c4 	movi	r11,3
   17acc:	11c7883a 	add	r3,r2,r7
   17ad0:	29cb883a 	add	r5,r5,r7
   17ad4:	5900212e 	bgeu	r11,r4,17b5c <memcpy+0x140>
   17ad8:	1813883a 	mov	r9,r3
   17adc:	2811883a 	mov	r8,r5
   17ae0:	200f883a 	mov	r7,r4
   17ae4:	42800017 	ldw	r10,0(r8)
   17ae8:	4a400104 	addi	r9,r9,4
   17aec:	39ffff04 	addi	r7,r7,-4
   17af0:	4abfff15 	stw	r10,-4(r9)
   17af4:	42000104 	addi	r8,r8,4
   17af8:	59fffa36 	bltu	r11,r7,17ae4 <_gp+0xffff1a28>
   17afc:	213fff04 	addi	r4,r4,-4
   17b00:	2008d0ba 	srli	r4,r4,2
   17b04:	318000cc 	andi	r6,r6,3
   17b08:	21000044 	addi	r4,r4,1
   17b0c:	2109883a 	add	r4,r4,r4
   17b10:	2109883a 	add	r4,r4,r4
   17b14:	1907883a 	add	r3,r3,r4
   17b18:	290b883a 	add	r5,r5,r4
   17b1c:	30000626 	beq	r6,zero,17b38 <memcpy+0x11c>
   17b20:	198d883a 	add	r6,r3,r6
   17b24:	29c00003 	ldbu	r7,0(r5)
   17b28:	18c00044 	addi	r3,r3,1
   17b2c:	29400044 	addi	r5,r5,1
   17b30:	19ffffc5 	stb	r7,-1(r3)
   17b34:	19bffb1e 	bne	r3,r6,17b24 <_gp+0xffff1a68>
   17b38:	dfc00217 	ldw	ra,8(sp)
   17b3c:	dc400117 	ldw	r17,4(sp)
   17b40:	dc000017 	ldw	r16,0(sp)
   17b44:	dec00304 	addi	sp,sp,12
   17b48:	f800283a 	ret
   17b4c:	2007883a 	mov	r3,r4
   17b50:	003ff206 	br	17b1c <_gp+0xffff1a60>
   17b54:	2007883a 	mov	r3,r4
   17b58:	003ff106 	br	17b20 <_gp+0xffff1a64>
   17b5c:	200d883a 	mov	r6,r4
   17b60:	003fee06 	br	17b1c <_gp+0xffff1a60>

00017b64 <_Balloc>:
   17b64:	20801317 	ldw	r2,76(r4)
   17b68:	defffc04 	addi	sp,sp,-16
   17b6c:	dc400115 	stw	r17,4(sp)
   17b70:	dc000015 	stw	r16,0(sp)
   17b74:	dfc00315 	stw	ra,12(sp)
   17b78:	dc800215 	stw	r18,8(sp)
   17b7c:	2023883a 	mov	r17,r4
   17b80:	2821883a 	mov	r16,r5
   17b84:	10000f26 	beq	r2,zero,17bc4 <_Balloc+0x60>
   17b88:	8407883a 	add	r3,r16,r16
   17b8c:	18c7883a 	add	r3,r3,r3
   17b90:	10c7883a 	add	r3,r2,r3
   17b94:	18800017 	ldw	r2,0(r3)
   17b98:	10001126 	beq	r2,zero,17be0 <_Balloc+0x7c>
   17b9c:	11000017 	ldw	r4,0(r2)
   17ba0:	19000015 	stw	r4,0(r3)
   17ba4:	10000415 	stw	zero,16(r2)
   17ba8:	10000315 	stw	zero,12(r2)
   17bac:	dfc00317 	ldw	ra,12(sp)
   17bb0:	dc800217 	ldw	r18,8(sp)
   17bb4:	dc400117 	ldw	r17,4(sp)
   17bb8:	dc000017 	ldw	r16,0(sp)
   17bbc:	dec00404 	addi	sp,sp,16
   17bc0:	f800283a 	ret
   17bc4:	01800844 	movi	r6,33
   17bc8:	01400104 	movi	r5,4
   17bcc:	001a3740 	call	1a374 <_calloc_r>
   17bd0:	88801315 	stw	r2,76(r17)
   17bd4:	103fec1e 	bne	r2,zero,17b88 <_gp+0xffff1acc>
   17bd8:	0005883a 	mov	r2,zero
   17bdc:	003ff306 	br	17bac <_gp+0xffff1af0>
   17be0:	01400044 	movi	r5,1
   17be4:	2c24983a 	sll	r18,r5,r16
   17be8:	8809883a 	mov	r4,r17
   17bec:	91800144 	addi	r6,r18,5
   17bf0:	318d883a 	add	r6,r6,r6
   17bf4:	318d883a 	add	r6,r6,r6
   17bf8:	001a3740 	call	1a374 <_calloc_r>
   17bfc:	103ff626 	beq	r2,zero,17bd8 <_gp+0xffff1b1c>
   17c00:	14000115 	stw	r16,4(r2)
   17c04:	14800215 	stw	r18,8(r2)
   17c08:	003fe606 	br	17ba4 <_gp+0xffff1ae8>

00017c0c <_Bfree>:
   17c0c:	28000826 	beq	r5,zero,17c30 <_Bfree+0x24>
   17c10:	28c00117 	ldw	r3,4(r5)
   17c14:	20801317 	ldw	r2,76(r4)
   17c18:	18c7883a 	add	r3,r3,r3
   17c1c:	18c7883a 	add	r3,r3,r3
   17c20:	10c5883a 	add	r2,r2,r3
   17c24:	10c00017 	ldw	r3,0(r2)
   17c28:	28c00015 	stw	r3,0(r5)
   17c2c:	11400015 	stw	r5,0(r2)
   17c30:	f800283a 	ret

00017c34 <__multadd>:
   17c34:	defff704 	addi	sp,sp,-36
   17c38:	dc800215 	stw	r18,8(sp)
   17c3c:	2c800417 	ldw	r18,16(r5)
   17c40:	dd800615 	stw	r22,24(sp)
   17c44:	dd400515 	stw	r21,20(sp)
   17c48:	dd000415 	stw	r20,16(sp)
   17c4c:	dcc00315 	stw	r19,12(sp)
   17c50:	dc400115 	stw	r17,4(sp)
   17c54:	dc000015 	stw	r16,0(sp)
   17c58:	dfc00815 	stw	ra,32(sp)
   17c5c:	ddc00715 	stw	r23,28(sp)
   17c60:	2827883a 	mov	r19,r5
   17c64:	2029883a 	mov	r20,r4
   17c68:	3023883a 	mov	r17,r6
   17c6c:	3821883a 	mov	r16,r7
   17c70:	2d400504 	addi	r21,r5,20
   17c74:	002d883a 	mov	r22,zero
   17c78:	adc00017 	ldw	r23,0(r21)
   17c7c:	880b883a 	mov	r5,r17
   17c80:	ad400104 	addi	r21,r21,4
   17c84:	b93fffcc 	andi	r4,r23,65535
   17c88:	00122700 	call	12270 <__mulsi3>
   17c8c:	b808d43a 	srli	r4,r23,16
   17c90:	880b883a 	mov	r5,r17
   17c94:	1421883a 	add	r16,r2,r16
   17c98:	00122700 	call	12270 <__mulsi3>
   17c9c:	800ed43a 	srli	r7,r16,16
   17ca0:	80ffffcc 	andi	r3,r16,65535
   17ca4:	b5800044 	addi	r22,r22,1
   17ca8:	11c5883a 	add	r2,r2,r7
   17cac:	100e943a 	slli	r7,r2,16
   17cb0:	1020d43a 	srli	r16,r2,16
   17cb4:	38c7883a 	add	r3,r7,r3
   17cb8:	a8ffff15 	stw	r3,-4(r21)
   17cbc:	b4bfee16 	blt	r22,r18,17c78 <_gp+0xffff1bbc>
   17cc0:	80000926 	beq	r16,zero,17ce8 <__multadd+0xb4>
   17cc4:	98800217 	ldw	r2,8(r19)
   17cc8:	9080130e 	bge	r18,r2,17d18 <__multadd+0xe4>
   17ccc:	90800144 	addi	r2,r18,5
   17cd0:	1085883a 	add	r2,r2,r2
   17cd4:	1085883a 	add	r2,r2,r2
   17cd8:	9885883a 	add	r2,r19,r2
   17cdc:	14000015 	stw	r16,0(r2)
   17ce0:	94800044 	addi	r18,r18,1
   17ce4:	9c800415 	stw	r18,16(r19)
   17ce8:	9805883a 	mov	r2,r19
   17cec:	dfc00817 	ldw	ra,32(sp)
   17cf0:	ddc00717 	ldw	r23,28(sp)
   17cf4:	dd800617 	ldw	r22,24(sp)
   17cf8:	dd400517 	ldw	r21,20(sp)
   17cfc:	dd000417 	ldw	r20,16(sp)
   17d00:	dcc00317 	ldw	r19,12(sp)
   17d04:	dc800217 	ldw	r18,8(sp)
   17d08:	dc400117 	ldw	r17,4(sp)
   17d0c:	dc000017 	ldw	r16,0(sp)
   17d10:	dec00904 	addi	sp,sp,36
   17d14:	f800283a 	ret
   17d18:	99400117 	ldw	r5,4(r19)
   17d1c:	a009883a 	mov	r4,r20
   17d20:	29400044 	addi	r5,r5,1
   17d24:	0017b640 	call	17b64 <_Balloc>
   17d28:	99800417 	ldw	r6,16(r19)
   17d2c:	99400304 	addi	r5,r19,12
   17d30:	11000304 	addi	r4,r2,12
   17d34:	31800084 	addi	r6,r6,2
   17d38:	318d883a 	add	r6,r6,r6
   17d3c:	318d883a 	add	r6,r6,r6
   17d40:	1023883a 	mov	r17,r2
   17d44:	0017a1c0 	call	17a1c <memcpy>
   17d48:	98000a26 	beq	r19,zero,17d74 <__multadd+0x140>
   17d4c:	98c00117 	ldw	r3,4(r19)
   17d50:	a0801317 	ldw	r2,76(r20)
   17d54:	18c7883a 	add	r3,r3,r3
   17d58:	18c7883a 	add	r3,r3,r3
   17d5c:	10c5883a 	add	r2,r2,r3
   17d60:	10c00017 	ldw	r3,0(r2)
   17d64:	98c00015 	stw	r3,0(r19)
   17d68:	14c00015 	stw	r19,0(r2)
   17d6c:	8827883a 	mov	r19,r17
   17d70:	003fd606 	br	17ccc <_gp+0xffff1c10>
   17d74:	8827883a 	mov	r19,r17
   17d78:	003fd406 	br	17ccc <_gp+0xffff1c10>

00017d7c <__s2b>:
   17d7c:	defff904 	addi	sp,sp,-28
   17d80:	dc400115 	stw	r17,4(sp)
   17d84:	dc000015 	stw	r16,0(sp)
   17d88:	2023883a 	mov	r17,r4
   17d8c:	2821883a 	mov	r16,r5
   17d90:	39000204 	addi	r4,r7,8
   17d94:	01400244 	movi	r5,9
   17d98:	dcc00315 	stw	r19,12(sp)
   17d9c:	dc800215 	stw	r18,8(sp)
   17da0:	dfc00615 	stw	ra,24(sp)
   17da4:	dd400515 	stw	r21,20(sp)
   17da8:	dd000415 	stw	r20,16(sp)
   17dac:	3825883a 	mov	r18,r7
   17db0:	3027883a 	mov	r19,r6
   17db4:	0010de40 	call	10de4 <__divsi3>
   17db8:	00c00044 	movi	r3,1
   17dbc:	000b883a 	mov	r5,zero
   17dc0:	1880030e 	bge	r3,r2,17dd0 <__s2b+0x54>
   17dc4:	18c7883a 	add	r3,r3,r3
   17dc8:	29400044 	addi	r5,r5,1
   17dcc:	18bffd16 	blt	r3,r2,17dc4 <_gp+0xffff1d08>
   17dd0:	8809883a 	mov	r4,r17
   17dd4:	0017b640 	call	17b64 <_Balloc>
   17dd8:	d8c00717 	ldw	r3,28(sp)
   17ddc:	10c00515 	stw	r3,20(r2)
   17de0:	00c00044 	movi	r3,1
   17de4:	10c00415 	stw	r3,16(r2)
   17de8:	00c00244 	movi	r3,9
   17dec:	1cc0210e 	bge	r3,r19,17e74 <__s2b+0xf8>
   17df0:	80eb883a 	add	r21,r16,r3
   17df4:	a829883a 	mov	r20,r21
   17df8:	84e1883a 	add	r16,r16,r19
   17dfc:	a1c00007 	ldb	r7,0(r20)
   17e00:	01800284 	movi	r6,10
   17e04:	a5000044 	addi	r20,r20,1
   17e08:	100b883a 	mov	r5,r2
   17e0c:	39fff404 	addi	r7,r7,-48
   17e10:	8809883a 	mov	r4,r17
   17e14:	0017c340 	call	17c34 <__multadd>
   17e18:	a43ff81e 	bne	r20,r16,17dfc <_gp+0xffff1d40>
   17e1c:	ace1883a 	add	r16,r21,r19
   17e20:	843ffe04 	addi	r16,r16,-8
   17e24:	9c800a0e 	bge	r19,r18,17e50 <__s2b+0xd4>
   17e28:	94e5c83a 	sub	r18,r18,r19
   17e2c:	84a5883a 	add	r18,r16,r18
   17e30:	81c00007 	ldb	r7,0(r16)
   17e34:	01800284 	movi	r6,10
   17e38:	84000044 	addi	r16,r16,1
   17e3c:	100b883a 	mov	r5,r2
   17e40:	39fff404 	addi	r7,r7,-48
   17e44:	8809883a 	mov	r4,r17
   17e48:	0017c340 	call	17c34 <__multadd>
   17e4c:	84bff81e 	bne	r16,r18,17e30 <_gp+0xffff1d74>
   17e50:	dfc00617 	ldw	ra,24(sp)
   17e54:	dd400517 	ldw	r21,20(sp)
   17e58:	dd000417 	ldw	r20,16(sp)
   17e5c:	dcc00317 	ldw	r19,12(sp)
   17e60:	dc800217 	ldw	r18,8(sp)
   17e64:	dc400117 	ldw	r17,4(sp)
   17e68:	dc000017 	ldw	r16,0(sp)
   17e6c:	dec00704 	addi	sp,sp,28
   17e70:	f800283a 	ret
   17e74:	84000284 	addi	r16,r16,10
   17e78:	1827883a 	mov	r19,r3
   17e7c:	003fe906 	br	17e24 <_gp+0xffff1d68>

00017e80 <__hi0bits>:
   17e80:	20bfffec 	andhi	r2,r4,65535
   17e84:	1000141e 	bne	r2,zero,17ed8 <__hi0bits+0x58>
   17e88:	2008943a 	slli	r4,r4,16
   17e8c:	00800404 	movi	r2,16
   17e90:	20ffc02c 	andhi	r3,r4,65280
   17e94:	1800021e 	bne	r3,zero,17ea0 <__hi0bits+0x20>
   17e98:	2008923a 	slli	r4,r4,8
   17e9c:	10800204 	addi	r2,r2,8
   17ea0:	20fc002c 	andhi	r3,r4,61440
   17ea4:	1800021e 	bne	r3,zero,17eb0 <__hi0bits+0x30>
   17ea8:	2008913a 	slli	r4,r4,4
   17eac:	10800104 	addi	r2,r2,4
   17eb0:	20f0002c 	andhi	r3,r4,49152
   17eb4:	1800031e 	bne	r3,zero,17ec4 <__hi0bits+0x44>
   17eb8:	2109883a 	add	r4,r4,r4
   17ebc:	10800084 	addi	r2,r2,2
   17ec0:	2109883a 	add	r4,r4,r4
   17ec4:	20000316 	blt	r4,zero,17ed4 <__hi0bits+0x54>
   17ec8:	2110002c 	andhi	r4,r4,16384
   17ecc:	2000041e 	bne	r4,zero,17ee0 <__hi0bits+0x60>
   17ed0:	00800804 	movi	r2,32
   17ed4:	f800283a 	ret
   17ed8:	0005883a 	mov	r2,zero
   17edc:	003fec06 	br	17e90 <_gp+0xffff1dd4>
   17ee0:	10800044 	addi	r2,r2,1
   17ee4:	f800283a 	ret

00017ee8 <__lo0bits>:
   17ee8:	20c00017 	ldw	r3,0(r4)
   17eec:	188001cc 	andi	r2,r3,7
   17ef0:	10000826 	beq	r2,zero,17f14 <__lo0bits+0x2c>
   17ef4:	1880004c 	andi	r2,r3,1
   17ef8:	1000211e 	bne	r2,zero,17f80 <__lo0bits+0x98>
   17efc:	1880008c 	andi	r2,r3,2
   17f00:	1000211e 	bne	r2,zero,17f88 <__lo0bits+0xa0>
   17f04:	1806d0ba 	srli	r3,r3,2
   17f08:	00800084 	movi	r2,2
   17f0c:	20c00015 	stw	r3,0(r4)
   17f10:	f800283a 	ret
   17f14:	18bfffcc 	andi	r2,r3,65535
   17f18:	10001326 	beq	r2,zero,17f68 <__lo0bits+0x80>
   17f1c:	0005883a 	mov	r2,zero
   17f20:	19403fcc 	andi	r5,r3,255
   17f24:	2800021e 	bne	r5,zero,17f30 <__lo0bits+0x48>
   17f28:	1806d23a 	srli	r3,r3,8
   17f2c:	10800204 	addi	r2,r2,8
   17f30:	194003cc 	andi	r5,r3,15
   17f34:	2800021e 	bne	r5,zero,17f40 <__lo0bits+0x58>
   17f38:	1806d13a 	srli	r3,r3,4
   17f3c:	10800104 	addi	r2,r2,4
   17f40:	194000cc 	andi	r5,r3,3
   17f44:	2800021e 	bne	r5,zero,17f50 <__lo0bits+0x68>
   17f48:	1806d0ba 	srli	r3,r3,2
   17f4c:	10800084 	addi	r2,r2,2
   17f50:	1940004c 	andi	r5,r3,1
   17f54:	2800081e 	bne	r5,zero,17f78 <__lo0bits+0x90>
   17f58:	1806d07a 	srli	r3,r3,1
   17f5c:	1800051e 	bne	r3,zero,17f74 <__lo0bits+0x8c>
   17f60:	00800804 	movi	r2,32
   17f64:	f800283a 	ret
   17f68:	1806d43a 	srli	r3,r3,16
   17f6c:	00800404 	movi	r2,16
   17f70:	003feb06 	br	17f20 <_gp+0xffff1e64>
   17f74:	10800044 	addi	r2,r2,1
   17f78:	20c00015 	stw	r3,0(r4)
   17f7c:	f800283a 	ret
   17f80:	0005883a 	mov	r2,zero
   17f84:	f800283a 	ret
   17f88:	1806d07a 	srli	r3,r3,1
   17f8c:	00800044 	movi	r2,1
   17f90:	20c00015 	stw	r3,0(r4)
   17f94:	f800283a 	ret

00017f98 <__i2b>:
   17f98:	defffd04 	addi	sp,sp,-12
   17f9c:	dc000015 	stw	r16,0(sp)
   17fa0:	04000044 	movi	r16,1
   17fa4:	dc400115 	stw	r17,4(sp)
   17fa8:	2823883a 	mov	r17,r5
   17fac:	800b883a 	mov	r5,r16
   17fb0:	dfc00215 	stw	ra,8(sp)
   17fb4:	0017b640 	call	17b64 <_Balloc>
   17fb8:	14400515 	stw	r17,20(r2)
   17fbc:	14000415 	stw	r16,16(r2)
   17fc0:	dfc00217 	ldw	ra,8(sp)
   17fc4:	dc400117 	ldw	r17,4(sp)
   17fc8:	dc000017 	ldw	r16,0(sp)
   17fcc:	dec00304 	addi	sp,sp,12
   17fd0:	f800283a 	ret

00017fd4 <__multiply>:
   17fd4:	deffef04 	addi	sp,sp,-68
   17fd8:	dc400815 	stw	r17,32(sp)
   17fdc:	dc000715 	stw	r16,28(sp)
   17fe0:	34400417 	ldw	r17,16(r6)
   17fe4:	2c000417 	ldw	r16,16(r5)
   17fe8:	dd800d15 	stw	r22,52(sp)
   17fec:	dc800915 	stw	r18,36(sp)
   17ff0:	dfc01015 	stw	ra,64(sp)
   17ff4:	df000f15 	stw	fp,60(sp)
   17ff8:	ddc00e15 	stw	r23,56(sp)
   17ffc:	dd400c15 	stw	r21,48(sp)
   18000:	dd000b15 	stw	r20,44(sp)
   18004:	dcc00a15 	stw	r19,40(sp)
   18008:	2825883a 	mov	r18,r5
   1800c:	302d883a 	mov	r22,r6
   18010:	8440050e 	bge	r16,r17,18028 <__multiply+0x54>
   18014:	8007883a 	mov	r3,r16
   18018:	3025883a 	mov	r18,r6
   1801c:	8821883a 	mov	r16,r17
   18020:	282d883a 	mov	r22,r5
   18024:	1823883a 	mov	r17,r3
   18028:	90800217 	ldw	r2,8(r18)
   1802c:	8447883a 	add	r3,r16,r17
   18030:	d8c00215 	stw	r3,8(sp)
   18034:	91400117 	ldw	r5,4(r18)
   18038:	10c0010e 	bge	r2,r3,18040 <__multiply+0x6c>
   1803c:	29400044 	addi	r5,r5,1
   18040:	0017b640 	call	17b64 <_Balloc>
   18044:	d8c00217 	ldw	r3,8(sp)
   18048:	d8800615 	stw	r2,24(sp)
   1804c:	18eb883a 	add	r21,r3,r3
   18050:	ad6b883a 	add	r21,r21,r21
   18054:	10c00504 	addi	r3,r2,20
   18058:	1d6b883a 	add	r21,r3,r21
   1805c:	d8c00115 	stw	r3,4(sp)
   18060:	dd400315 	stw	r21,12(sp)
   18064:	1805883a 	mov	r2,r3
   18068:	1d40042e 	bgeu	r3,r21,1807c <__multiply+0xa8>
   1806c:	d8c00317 	ldw	r3,12(sp)
   18070:	10000015 	stw	zero,0(r2)
   18074:	10800104 	addi	r2,r2,4
   18078:	10fffc36 	bltu	r2,r3,1806c <_gp+0xffff1fb0>
   1807c:	8c63883a 	add	r17,r17,r17
   18080:	b5800504 	addi	r22,r22,20
   18084:	8c63883a 	add	r17,r17,r17
   18088:	94800504 	addi	r18,r18,20
   1808c:	8421883a 	add	r16,r16,r16
   18090:	b463883a 	add	r17,r22,r17
   18094:	8421883a 	add	r16,r16,r16
   18098:	dd800015 	stw	r22,0(sp)
   1809c:	dc800415 	stw	r18,16(sp)
   180a0:	dc400515 	stw	r17,20(sp)
   180a4:	9429883a 	add	r20,r18,r16
   180a8:	b4404f2e 	bgeu	r22,r17,181e8 <__multiply+0x214>
   180ac:	d8c00017 	ldw	r3,0(sp)
   180b0:	1c800017 	ldw	r18,0(r3)
   180b4:	947fffcc 	andi	r17,r18,65535
   180b8:	88001e26 	beq	r17,zero,18134 <__multiply+0x160>
   180bc:	dd800117 	ldw	r22,4(sp)
   180c0:	dd400417 	ldw	r21,16(sp)
   180c4:	0027883a 	mov	r19,zero
   180c8:	ac800017 	ldw	r18,0(r21)
   180cc:	b4000017 	ldw	r16,0(r22)
   180d0:	880b883a 	mov	r5,r17
   180d4:	913fffcc 	andi	r4,r18,65535
   180d8:	00122700 	call	12270 <__mulsi3>
   180dc:	9008d43a 	srli	r4,r18,16
   180e0:	84bfffcc 	andi	r18,r16,65535
   180e4:	1485883a 	add	r2,r2,r18
   180e8:	14e5883a 	add	r18,r2,r19
   180ec:	8020d43a 	srli	r16,r16,16
   180f0:	9026d43a 	srli	r19,r18,16
   180f4:	880b883a 	mov	r5,r17
   180f8:	00122700 	call	12270 <__mulsi3>
   180fc:	1405883a 	add	r2,r2,r16
   18100:	14e1883a 	add	r16,r2,r19
   18104:	90ffffcc 	andi	r3,r18,65535
   18108:	8024943a 	slli	r18,r16,16
   1810c:	ad400104 	addi	r21,r21,4
   18110:	b005883a 	mov	r2,r22
   18114:	90c6b03a 	or	r3,r18,r3
   18118:	b0c00015 	stw	r3,0(r22)
   1811c:	8026d43a 	srli	r19,r16,16
   18120:	b5800104 	addi	r22,r22,4
   18124:	ad3fe836 	bltu	r21,r20,180c8 <_gp+0xffff200c>
   18128:	d8c00017 	ldw	r3,0(sp)
   1812c:	14c00115 	stw	r19,4(r2)
   18130:	1c800017 	ldw	r18,0(r3)
   18134:	9024d43a 	srli	r18,r18,16
   18138:	90002226 	beq	r18,zero,181c4 <__multiply+0x1f0>
   1813c:	d8c00117 	ldw	r3,4(sp)
   18140:	dd800417 	ldw	r22,16(sp)
   18144:	002f883a 	mov	r23,zero
   18148:	1f000017 	ldw	fp,0(r3)
   1814c:	1823883a 	mov	r17,r3
   18150:	182b883a 	mov	r21,r3
   18154:	e021883a 	mov	r16,fp
   18158:	00000106 	br	18160 <__multiply+0x18c>
   1815c:	982b883a 	mov	r21,r19
   18160:	b100000b 	ldhu	r4,0(r22)
   18164:	8020d43a 	srli	r16,r16,16
   18168:	900b883a 	mov	r5,r18
   1816c:	00122700 	call	12270 <__mulsi3>
   18170:	1405883a 	add	r2,r2,r16
   18174:	15ef883a 	add	r23,r2,r23
   18178:	b804943a 	slli	r2,r23,16
   1817c:	e0ffffcc 	andi	r3,fp,65535
   18180:	8c400104 	addi	r17,r17,4
   18184:	10c6b03a 	or	r3,r2,r3
   18188:	88ffff15 	stw	r3,-4(r17)
   1818c:	b5800104 	addi	r22,r22,4
   18190:	b13fff17 	ldw	r4,-4(r22)
   18194:	acc00104 	addi	r19,r21,4
   18198:	900b883a 	mov	r5,r18
   1819c:	2008d43a 	srli	r4,r4,16
   181a0:	9c000017 	ldw	r16,0(r19)
   181a4:	00122700 	call	12270 <__mulsi3>
   181a8:	b806d43a 	srli	r3,r23,16
   181ac:	813fffcc 	andi	r4,r16,65535
   181b0:	1105883a 	add	r2,r2,r4
   181b4:	10f9883a 	add	fp,r2,r3
   181b8:	e02ed43a 	srli	r23,fp,16
   181bc:	b53fe736 	bltu	r22,r20,1815c <_gp+0xffff20a0>
   181c0:	af000115 	stw	fp,4(r21)
   181c4:	d8c00017 	ldw	r3,0(sp)
   181c8:	d9000517 	ldw	r4,20(sp)
   181cc:	18c00104 	addi	r3,r3,4
   181d0:	d8c00015 	stw	r3,0(sp)
   181d4:	d8c00117 	ldw	r3,4(sp)
   181d8:	18c00104 	addi	r3,r3,4
   181dc:	d8c00115 	stw	r3,4(sp)
   181e0:	d8c00017 	ldw	r3,0(sp)
   181e4:	193fb136 	bltu	r3,r4,180ac <_gp+0xffff1ff0>
   181e8:	d8c00217 	ldw	r3,8(sp)
   181ec:	00c00c0e 	bge	zero,r3,18220 <__multiply+0x24c>
   181f0:	d8c00317 	ldw	r3,12(sp)
   181f4:	18bfff17 	ldw	r2,-4(r3)
   181f8:	1d7fff04 	addi	r21,r3,-4
   181fc:	10000326 	beq	r2,zero,1820c <__multiply+0x238>
   18200:	00000706 	br	18220 <__multiply+0x24c>
   18204:	a8800017 	ldw	r2,0(r21)
   18208:	1000051e 	bne	r2,zero,18220 <__multiply+0x24c>
   1820c:	d8c00217 	ldw	r3,8(sp)
   18210:	ad7fff04 	addi	r21,r21,-4
   18214:	18ffffc4 	addi	r3,r3,-1
   18218:	d8c00215 	stw	r3,8(sp)
   1821c:	183ff91e 	bne	r3,zero,18204 <_gp+0xffff2148>
   18220:	d8c00617 	ldw	r3,24(sp)
   18224:	d9000217 	ldw	r4,8(sp)
   18228:	1805883a 	mov	r2,r3
   1822c:	19000415 	stw	r4,16(r3)
   18230:	dfc01017 	ldw	ra,64(sp)
   18234:	df000f17 	ldw	fp,60(sp)
   18238:	ddc00e17 	ldw	r23,56(sp)
   1823c:	dd800d17 	ldw	r22,52(sp)
   18240:	dd400c17 	ldw	r21,48(sp)
   18244:	dd000b17 	ldw	r20,44(sp)
   18248:	dcc00a17 	ldw	r19,40(sp)
   1824c:	dc800917 	ldw	r18,36(sp)
   18250:	dc400817 	ldw	r17,32(sp)
   18254:	dc000717 	ldw	r16,28(sp)
   18258:	dec01104 	addi	sp,sp,68
   1825c:	f800283a 	ret

00018260 <__pow5mult>:
   18260:	defffa04 	addi	sp,sp,-24
   18264:	dcc00315 	stw	r19,12(sp)
   18268:	dc000015 	stw	r16,0(sp)
   1826c:	dfc00515 	stw	ra,20(sp)
   18270:	dd000415 	stw	r20,16(sp)
   18274:	dc800215 	stw	r18,8(sp)
   18278:	dc400115 	stw	r17,4(sp)
   1827c:	308000cc 	andi	r2,r6,3
   18280:	3021883a 	mov	r16,r6
   18284:	2027883a 	mov	r19,r4
   18288:	10002f1e 	bne	r2,zero,18348 <__pow5mult+0xe8>
   1828c:	2825883a 	mov	r18,r5
   18290:	8021d0ba 	srai	r16,r16,2
   18294:	80001a26 	beq	r16,zero,18300 <__pow5mult+0xa0>
   18298:	9c401217 	ldw	r17,72(r19)
   1829c:	8800061e 	bne	r17,zero,182b8 <__pow5mult+0x58>
   182a0:	00003406 	br	18374 <__pow5mult+0x114>
   182a4:	8021d07a 	srai	r16,r16,1
   182a8:	80001526 	beq	r16,zero,18300 <__pow5mult+0xa0>
   182ac:	88800017 	ldw	r2,0(r17)
   182b0:	10001c26 	beq	r2,zero,18324 <__pow5mult+0xc4>
   182b4:	1023883a 	mov	r17,r2
   182b8:	8080004c 	andi	r2,r16,1
   182bc:	103ff926 	beq	r2,zero,182a4 <_gp+0xffff21e8>
   182c0:	880d883a 	mov	r6,r17
   182c4:	900b883a 	mov	r5,r18
   182c8:	9809883a 	mov	r4,r19
   182cc:	0017fd40 	call	17fd4 <__multiply>
   182d0:	90001b26 	beq	r18,zero,18340 <__pow5mult+0xe0>
   182d4:	91000117 	ldw	r4,4(r18)
   182d8:	98c01317 	ldw	r3,76(r19)
   182dc:	8021d07a 	srai	r16,r16,1
   182e0:	2109883a 	add	r4,r4,r4
   182e4:	2109883a 	add	r4,r4,r4
   182e8:	1907883a 	add	r3,r3,r4
   182ec:	19000017 	ldw	r4,0(r3)
   182f0:	91000015 	stw	r4,0(r18)
   182f4:	1c800015 	stw	r18,0(r3)
   182f8:	1025883a 	mov	r18,r2
   182fc:	803feb1e 	bne	r16,zero,182ac <_gp+0xffff21f0>
   18300:	9005883a 	mov	r2,r18
   18304:	dfc00517 	ldw	ra,20(sp)
   18308:	dd000417 	ldw	r20,16(sp)
   1830c:	dcc00317 	ldw	r19,12(sp)
   18310:	dc800217 	ldw	r18,8(sp)
   18314:	dc400117 	ldw	r17,4(sp)
   18318:	dc000017 	ldw	r16,0(sp)
   1831c:	dec00604 	addi	sp,sp,24
   18320:	f800283a 	ret
   18324:	880d883a 	mov	r6,r17
   18328:	880b883a 	mov	r5,r17
   1832c:	9809883a 	mov	r4,r19
   18330:	0017fd40 	call	17fd4 <__multiply>
   18334:	88800015 	stw	r2,0(r17)
   18338:	10000015 	stw	zero,0(r2)
   1833c:	003fdd06 	br	182b4 <_gp+0xffff21f8>
   18340:	1025883a 	mov	r18,r2
   18344:	003fd706 	br	182a4 <_gp+0xffff21e8>
   18348:	10bfffc4 	addi	r2,r2,-1
   1834c:	1085883a 	add	r2,r2,r2
   18350:	00c000b4 	movhi	r3,2
   18354:	18f59104 	addi	r3,r3,-10684
   18358:	1085883a 	add	r2,r2,r2
   1835c:	1885883a 	add	r2,r3,r2
   18360:	11800017 	ldw	r6,0(r2)
   18364:	000f883a 	mov	r7,zero
   18368:	0017c340 	call	17c34 <__multadd>
   1836c:	1025883a 	mov	r18,r2
   18370:	003fc706 	br	18290 <_gp+0xffff21d4>
   18374:	05000044 	movi	r20,1
   18378:	a00b883a 	mov	r5,r20
   1837c:	9809883a 	mov	r4,r19
   18380:	0017b640 	call	17b64 <_Balloc>
   18384:	1023883a 	mov	r17,r2
   18388:	00809c44 	movi	r2,625
   1838c:	88800515 	stw	r2,20(r17)
   18390:	8d000415 	stw	r20,16(r17)
   18394:	9c401215 	stw	r17,72(r19)
   18398:	88000015 	stw	zero,0(r17)
   1839c:	003fc606 	br	182b8 <_gp+0xffff21fc>

000183a0 <__lshift>:
   183a0:	defff904 	addi	sp,sp,-28
   183a4:	dd400515 	stw	r21,20(sp)
   183a8:	dcc00315 	stw	r19,12(sp)
   183ac:	302bd17a 	srai	r21,r6,5
   183b0:	2cc00417 	ldw	r19,16(r5)
   183b4:	28800217 	ldw	r2,8(r5)
   183b8:	dd000415 	stw	r20,16(sp)
   183bc:	ace7883a 	add	r19,r21,r19
   183c0:	dc800215 	stw	r18,8(sp)
   183c4:	dc400115 	stw	r17,4(sp)
   183c8:	dc000015 	stw	r16,0(sp)
   183cc:	dfc00615 	stw	ra,24(sp)
   183d0:	9c000044 	addi	r16,r19,1
   183d4:	2823883a 	mov	r17,r5
   183d8:	3029883a 	mov	r20,r6
   183dc:	2025883a 	mov	r18,r4
   183e0:	29400117 	ldw	r5,4(r5)
   183e4:	1400030e 	bge	r2,r16,183f4 <__lshift+0x54>
   183e8:	1085883a 	add	r2,r2,r2
   183ec:	29400044 	addi	r5,r5,1
   183f0:	143ffd16 	blt	r2,r16,183e8 <_gp+0xffff232c>
   183f4:	9009883a 	mov	r4,r18
   183f8:	0017b640 	call	17b64 <_Balloc>
   183fc:	10c00504 	addi	r3,r2,20
   18400:	0540070e 	bge	zero,r21,18420 <__lshift+0x80>
   18404:	ad6b883a 	add	r21,r21,r21
   18408:	ad6b883a 	add	r21,r21,r21
   1840c:	1809883a 	mov	r4,r3
   18410:	1d47883a 	add	r3,r3,r21
   18414:	20000015 	stw	zero,0(r4)
   18418:	21000104 	addi	r4,r4,4
   1841c:	193ffd1e 	bne	r3,r4,18414 <_gp+0xffff2358>
   18420:	8a000417 	ldw	r8,16(r17)
   18424:	89000504 	addi	r4,r17,20
   18428:	a18007cc 	andi	r6,r20,31
   1842c:	4211883a 	add	r8,r8,r8
   18430:	4211883a 	add	r8,r8,r8
   18434:	2211883a 	add	r8,r4,r8
   18438:	30002326 	beq	r6,zero,184c8 <__lshift+0x128>
   1843c:	02400804 	movi	r9,32
   18440:	4993c83a 	sub	r9,r9,r6
   18444:	000b883a 	mov	r5,zero
   18448:	21c00017 	ldw	r7,0(r4)
   1844c:	1815883a 	mov	r10,r3
   18450:	18c00104 	addi	r3,r3,4
   18454:	398e983a 	sll	r7,r7,r6
   18458:	21000104 	addi	r4,r4,4
   1845c:	394ab03a 	or	r5,r7,r5
   18460:	197fff15 	stw	r5,-4(r3)
   18464:	217fff17 	ldw	r5,-4(r4)
   18468:	2a4ad83a 	srl	r5,r5,r9
   1846c:	223ff636 	bltu	r4,r8,18448 <_gp+0xffff238c>
   18470:	51400115 	stw	r5,4(r10)
   18474:	28001a1e 	bne	r5,zero,184e0 <__lshift+0x140>
   18478:	843fffc4 	addi	r16,r16,-1
   1847c:	14000415 	stw	r16,16(r2)
   18480:	88000826 	beq	r17,zero,184a4 <__lshift+0x104>
   18484:	89000117 	ldw	r4,4(r17)
   18488:	90c01317 	ldw	r3,76(r18)
   1848c:	2109883a 	add	r4,r4,r4
   18490:	2109883a 	add	r4,r4,r4
   18494:	1907883a 	add	r3,r3,r4
   18498:	19000017 	ldw	r4,0(r3)
   1849c:	89000015 	stw	r4,0(r17)
   184a0:	1c400015 	stw	r17,0(r3)
   184a4:	dfc00617 	ldw	ra,24(sp)
   184a8:	dd400517 	ldw	r21,20(sp)
   184ac:	dd000417 	ldw	r20,16(sp)
   184b0:	dcc00317 	ldw	r19,12(sp)
   184b4:	dc800217 	ldw	r18,8(sp)
   184b8:	dc400117 	ldw	r17,4(sp)
   184bc:	dc000017 	ldw	r16,0(sp)
   184c0:	dec00704 	addi	sp,sp,28
   184c4:	f800283a 	ret
   184c8:	21400017 	ldw	r5,0(r4)
   184cc:	18c00104 	addi	r3,r3,4
   184d0:	21000104 	addi	r4,r4,4
   184d4:	197fff15 	stw	r5,-4(r3)
   184d8:	223ffb36 	bltu	r4,r8,184c8 <_gp+0xffff240c>
   184dc:	003fe606 	br	18478 <_gp+0xffff23bc>
   184e0:	9c000084 	addi	r16,r19,2
   184e4:	003fe406 	br	18478 <_gp+0xffff23bc>

000184e8 <__mcmp>:
   184e8:	20800417 	ldw	r2,16(r4)
   184ec:	28c00417 	ldw	r3,16(r5)
   184f0:	10c5c83a 	sub	r2,r2,r3
   184f4:	1000111e 	bne	r2,zero,1853c <__mcmp+0x54>
   184f8:	18c7883a 	add	r3,r3,r3
   184fc:	18c7883a 	add	r3,r3,r3
   18500:	21000504 	addi	r4,r4,20
   18504:	29400504 	addi	r5,r5,20
   18508:	20c5883a 	add	r2,r4,r3
   1850c:	28cb883a 	add	r5,r5,r3
   18510:	00000106 	br	18518 <__mcmp+0x30>
   18514:	20800a2e 	bgeu	r4,r2,18540 <__mcmp+0x58>
   18518:	10bfff04 	addi	r2,r2,-4
   1851c:	297fff04 	addi	r5,r5,-4
   18520:	11800017 	ldw	r6,0(r2)
   18524:	28c00017 	ldw	r3,0(r5)
   18528:	30fffa26 	beq	r6,r3,18514 <_gp+0xffff2458>
   1852c:	30c00236 	bltu	r6,r3,18538 <__mcmp+0x50>
   18530:	00800044 	movi	r2,1
   18534:	f800283a 	ret
   18538:	00bfffc4 	movi	r2,-1
   1853c:	f800283a 	ret
   18540:	0005883a 	mov	r2,zero
   18544:	f800283a 	ret

00018548 <__mdiff>:
   18548:	28c00417 	ldw	r3,16(r5)
   1854c:	30800417 	ldw	r2,16(r6)
   18550:	defffa04 	addi	sp,sp,-24
   18554:	dcc00315 	stw	r19,12(sp)
   18558:	dc800215 	stw	r18,8(sp)
   1855c:	dfc00515 	stw	ra,20(sp)
   18560:	dd000415 	stw	r20,16(sp)
   18564:	dc400115 	stw	r17,4(sp)
   18568:	dc000015 	stw	r16,0(sp)
   1856c:	1887c83a 	sub	r3,r3,r2
   18570:	2825883a 	mov	r18,r5
   18574:	3027883a 	mov	r19,r6
   18578:	1800141e 	bne	r3,zero,185cc <__mdiff+0x84>
   1857c:	1085883a 	add	r2,r2,r2
   18580:	1085883a 	add	r2,r2,r2
   18584:	2a000504 	addi	r8,r5,20
   18588:	34000504 	addi	r16,r6,20
   1858c:	4087883a 	add	r3,r8,r2
   18590:	8085883a 	add	r2,r16,r2
   18594:	00000106 	br	1859c <__mdiff+0x54>
   18598:	40c0592e 	bgeu	r8,r3,18700 <__mdiff+0x1b8>
   1859c:	18ffff04 	addi	r3,r3,-4
   185a0:	10bfff04 	addi	r2,r2,-4
   185a4:	19c00017 	ldw	r7,0(r3)
   185a8:	11400017 	ldw	r5,0(r2)
   185ac:	397ffa26 	beq	r7,r5,18598 <_gp+0xffff24dc>
   185b0:	3940592e 	bgeu	r7,r5,18718 <__mdiff+0x1d0>
   185b4:	9005883a 	mov	r2,r18
   185b8:	4023883a 	mov	r17,r8
   185bc:	9825883a 	mov	r18,r19
   185c0:	05000044 	movi	r20,1
   185c4:	1027883a 	mov	r19,r2
   185c8:	00000406 	br	185dc <__mdiff+0x94>
   185cc:	18005616 	blt	r3,zero,18728 <__mdiff+0x1e0>
   185d0:	34400504 	addi	r17,r6,20
   185d4:	2c000504 	addi	r16,r5,20
   185d8:	0029883a 	mov	r20,zero
   185dc:	91400117 	ldw	r5,4(r18)
   185e0:	0017b640 	call	17b64 <_Balloc>
   185e4:	92400417 	ldw	r9,16(r18)
   185e8:	9b000417 	ldw	r12,16(r19)
   185ec:	12c00504 	addi	r11,r2,20
   185f0:	4a51883a 	add	r8,r9,r9
   185f4:	6319883a 	add	r12,r12,r12
   185f8:	4211883a 	add	r8,r8,r8
   185fc:	6319883a 	add	r12,r12,r12
   18600:	15000315 	stw	r20,12(r2)
   18604:	8211883a 	add	r8,r16,r8
   18608:	8b19883a 	add	r12,r17,r12
   1860c:	0007883a 	mov	r3,zero
   18610:	81400017 	ldw	r5,0(r16)
   18614:	89c00017 	ldw	r7,0(r17)
   18618:	59800104 	addi	r6,r11,4
   1861c:	293fffcc 	andi	r4,r5,65535
   18620:	20c7883a 	add	r3,r4,r3
   18624:	393fffcc 	andi	r4,r7,65535
   18628:	1909c83a 	sub	r4,r3,r4
   1862c:	280ad43a 	srli	r5,r5,16
   18630:	380ed43a 	srli	r7,r7,16
   18634:	2007d43a 	srai	r3,r4,16
   18638:	213fffcc 	andi	r4,r4,65535
   1863c:	29cbc83a 	sub	r5,r5,r7
   18640:	28c7883a 	add	r3,r5,r3
   18644:	180a943a 	slli	r5,r3,16
   18648:	8c400104 	addi	r17,r17,4
   1864c:	84000104 	addi	r16,r16,4
   18650:	2908b03a 	or	r4,r5,r4
   18654:	59000015 	stw	r4,0(r11)
   18658:	1807d43a 	srai	r3,r3,16
   1865c:	3015883a 	mov	r10,r6
   18660:	3017883a 	mov	r11,r6
   18664:	8b3fea36 	bltu	r17,r12,18610 <_gp+0xffff2554>
   18668:	8200162e 	bgeu	r16,r8,186c4 <__mdiff+0x17c>
   1866c:	8017883a 	mov	r11,r16
   18670:	59400017 	ldw	r5,0(r11)
   18674:	31800104 	addi	r6,r6,4
   18678:	5ac00104 	addi	r11,r11,4
   1867c:	293fffcc 	andi	r4,r5,65535
   18680:	20c7883a 	add	r3,r4,r3
   18684:	280ed43a 	srli	r7,r5,16
   18688:	180bd43a 	srai	r5,r3,16
   1868c:	193fffcc 	andi	r4,r3,65535
   18690:	3947883a 	add	r3,r7,r5
   18694:	180a943a 	slli	r5,r3,16
   18698:	1807d43a 	srai	r3,r3,16
   1869c:	2908b03a 	or	r4,r5,r4
   186a0:	313fff15 	stw	r4,-4(r6)
   186a4:	5a3ff236 	bltu	r11,r8,18670 <_gp+0xffff25b4>
   186a8:	0406303a 	nor	r3,zero,r16
   186ac:	1a07883a 	add	r3,r3,r8
   186b0:	1806d0ba 	srli	r3,r3,2
   186b4:	18c00044 	addi	r3,r3,1
   186b8:	18c7883a 	add	r3,r3,r3
   186bc:	18c7883a 	add	r3,r3,r3
   186c0:	50d5883a 	add	r10,r10,r3
   186c4:	50ffff04 	addi	r3,r10,-4
   186c8:	2000041e 	bne	r4,zero,186dc <__mdiff+0x194>
   186cc:	18ffff04 	addi	r3,r3,-4
   186d0:	19000017 	ldw	r4,0(r3)
   186d4:	4a7fffc4 	addi	r9,r9,-1
   186d8:	203ffc26 	beq	r4,zero,186cc <_gp+0xffff2610>
   186dc:	12400415 	stw	r9,16(r2)
   186e0:	dfc00517 	ldw	ra,20(sp)
   186e4:	dd000417 	ldw	r20,16(sp)
   186e8:	dcc00317 	ldw	r19,12(sp)
   186ec:	dc800217 	ldw	r18,8(sp)
   186f0:	dc400117 	ldw	r17,4(sp)
   186f4:	dc000017 	ldw	r16,0(sp)
   186f8:	dec00604 	addi	sp,sp,24
   186fc:	f800283a 	ret
   18700:	000b883a 	mov	r5,zero
   18704:	0017b640 	call	17b64 <_Balloc>
   18708:	00c00044 	movi	r3,1
   1870c:	10c00415 	stw	r3,16(r2)
   18710:	10000515 	stw	zero,20(r2)
   18714:	003ff206 	br	186e0 <_gp+0xffff2624>
   18718:	8023883a 	mov	r17,r16
   1871c:	0029883a 	mov	r20,zero
   18720:	4021883a 	mov	r16,r8
   18724:	003fad06 	br	185dc <_gp+0xffff2520>
   18728:	9005883a 	mov	r2,r18
   1872c:	94400504 	addi	r17,r18,20
   18730:	9c000504 	addi	r16,r19,20
   18734:	9825883a 	mov	r18,r19
   18738:	05000044 	movi	r20,1
   1873c:	1027883a 	mov	r19,r2
   18740:	003fa606 	br	185dc <_gp+0xffff2520>

00018744 <__ulp>:
   18744:	295ffc2c 	andhi	r5,r5,32752
   18748:	00bf3034 	movhi	r2,64704
   1874c:	2887883a 	add	r3,r5,r2
   18750:	00c0020e 	bge	zero,r3,1875c <__ulp+0x18>
   18754:	0005883a 	mov	r2,zero
   18758:	f800283a 	ret
   1875c:	00c7c83a 	sub	r3,zero,r3
   18760:	1807d53a 	srai	r3,r3,20
   18764:	008004c4 	movi	r2,19
   18768:	10c00b0e 	bge	r2,r3,18798 <__ulp+0x54>
   1876c:	18bffb04 	addi	r2,r3,-20
   18770:	01000784 	movi	r4,30
   18774:	0007883a 	mov	r3,zero
   18778:	20800516 	blt	r4,r2,18790 <__ulp+0x4c>
   1877c:	010007c4 	movi	r4,31
   18780:	2089c83a 	sub	r4,r4,r2
   18784:	00800044 	movi	r2,1
   18788:	1104983a 	sll	r2,r2,r4
   1878c:	f800283a 	ret
   18790:	00800044 	movi	r2,1
   18794:	f800283a 	ret
   18798:	01400234 	movhi	r5,8
   1879c:	28c7d83a 	sra	r3,r5,r3
   187a0:	0005883a 	mov	r2,zero
   187a4:	f800283a 	ret

000187a8 <__b2d>:
   187a8:	defffa04 	addi	sp,sp,-24
   187ac:	dc000015 	stw	r16,0(sp)
   187b0:	24000417 	ldw	r16,16(r4)
   187b4:	dc400115 	stw	r17,4(sp)
   187b8:	24400504 	addi	r17,r4,20
   187bc:	8421883a 	add	r16,r16,r16
   187c0:	8421883a 	add	r16,r16,r16
   187c4:	8c21883a 	add	r16,r17,r16
   187c8:	dc800215 	stw	r18,8(sp)
   187cc:	84bfff17 	ldw	r18,-4(r16)
   187d0:	dd000415 	stw	r20,16(sp)
   187d4:	dcc00315 	stw	r19,12(sp)
   187d8:	9009883a 	mov	r4,r18
   187dc:	2829883a 	mov	r20,r5
   187e0:	dfc00515 	stw	ra,20(sp)
   187e4:	0017e800 	call	17e80 <__hi0bits>
   187e8:	00c00804 	movi	r3,32
   187ec:	1889c83a 	sub	r4,r3,r2
   187f0:	a1000015 	stw	r4,0(r20)
   187f4:	01000284 	movi	r4,10
   187f8:	84ffff04 	addi	r19,r16,-4
   187fc:	20801216 	blt	r4,r2,18848 <__b2d+0xa0>
   18800:	018002c4 	movi	r6,11
   18804:	308dc83a 	sub	r6,r6,r2
   18808:	9186d83a 	srl	r3,r18,r6
   1880c:	18cffc34 	orhi	r3,r3,16368
   18810:	8cc0212e 	bgeu	r17,r19,18898 <__b2d+0xf0>
   18814:	813ffe17 	ldw	r4,-8(r16)
   18818:	218cd83a 	srl	r6,r4,r6
   1881c:	10800544 	addi	r2,r2,21
   18820:	9084983a 	sll	r2,r18,r2
   18824:	1184b03a 	or	r2,r2,r6
   18828:	dfc00517 	ldw	ra,20(sp)
   1882c:	dd000417 	ldw	r20,16(sp)
   18830:	dcc00317 	ldw	r19,12(sp)
   18834:	dc800217 	ldw	r18,8(sp)
   18838:	dc400117 	ldw	r17,4(sp)
   1883c:	dc000017 	ldw	r16,0(sp)
   18840:	dec00604 	addi	sp,sp,24
   18844:	f800283a 	ret
   18848:	8cc00f2e 	bgeu	r17,r19,18888 <__b2d+0xe0>
   1884c:	117ffd44 	addi	r5,r2,-11
   18850:	80bffe17 	ldw	r2,-8(r16)
   18854:	28000e26 	beq	r5,zero,18890 <__b2d+0xe8>
   18858:	1949c83a 	sub	r4,r3,r5
   1885c:	9164983a 	sll	r18,r18,r5
   18860:	1106d83a 	srl	r3,r2,r4
   18864:	81bffe04 	addi	r6,r16,-8
   18868:	948ffc34 	orhi	r18,r18,16368
   1886c:	90c6b03a 	or	r3,r18,r3
   18870:	89800e2e 	bgeu	r17,r6,188ac <__b2d+0x104>
   18874:	81bffd17 	ldw	r6,-12(r16)
   18878:	1144983a 	sll	r2,r2,r5
   1887c:	310ad83a 	srl	r5,r6,r4
   18880:	2884b03a 	or	r2,r5,r2
   18884:	003fe806 	br	18828 <_gp+0xffff276c>
   18888:	10bffd44 	addi	r2,r2,-11
   1888c:	1000041e 	bne	r2,zero,188a0 <__b2d+0xf8>
   18890:	90cffc34 	orhi	r3,r18,16368
   18894:	003fe406 	br	18828 <_gp+0xffff276c>
   18898:	000d883a 	mov	r6,zero
   1889c:	003fdf06 	br	1881c <_gp+0xffff2760>
   188a0:	90a4983a 	sll	r18,r18,r2
   188a4:	0005883a 	mov	r2,zero
   188a8:	003ff906 	br	18890 <_gp+0xffff27d4>
   188ac:	1144983a 	sll	r2,r2,r5
   188b0:	003fdd06 	br	18828 <_gp+0xffff276c>

000188b4 <__d2b>:
   188b4:	defff804 	addi	sp,sp,-32
   188b8:	dc000215 	stw	r16,8(sp)
   188bc:	3021883a 	mov	r16,r6
   188c0:	dc400315 	stw	r17,12(sp)
   188c4:	8022907a 	slli	r17,r16,1
   188c8:	dd000615 	stw	r20,24(sp)
   188cc:	2829883a 	mov	r20,r5
   188d0:	01400044 	movi	r5,1
   188d4:	dcc00515 	stw	r19,20(sp)
   188d8:	dc800415 	stw	r18,16(sp)
   188dc:	dfc00715 	stw	ra,28(sp)
   188e0:	3825883a 	mov	r18,r7
   188e4:	8822d57a 	srli	r17,r17,21
   188e8:	0017b640 	call	17b64 <_Balloc>
   188ec:	1027883a 	mov	r19,r2
   188f0:	00800434 	movhi	r2,16
   188f4:	10bfffc4 	addi	r2,r2,-1
   188f8:	808c703a 	and	r6,r16,r2
   188fc:	88000126 	beq	r17,zero,18904 <__d2b+0x50>
   18900:	31800434 	orhi	r6,r6,16
   18904:	d9800015 	stw	r6,0(sp)
   18908:	a0002426 	beq	r20,zero,1899c <__d2b+0xe8>
   1890c:	d9000104 	addi	r4,sp,4
   18910:	dd000115 	stw	r20,4(sp)
   18914:	0017ee80 	call	17ee8 <__lo0bits>
   18918:	d8c00017 	ldw	r3,0(sp)
   1891c:	10002f1e 	bne	r2,zero,189dc <__d2b+0x128>
   18920:	d9000117 	ldw	r4,4(sp)
   18924:	99000515 	stw	r4,20(r19)
   18928:	1821003a 	cmpeq	r16,r3,zero
   1892c:	01000084 	movi	r4,2
   18930:	2421c83a 	sub	r16,r4,r16
   18934:	98c00615 	stw	r3,24(r19)
   18938:	9c000415 	stw	r16,16(r19)
   1893c:	88001f1e 	bne	r17,zero,189bc <__d2b+0x108>
   18940:	10bef384 	addi	r2,r2,-1074
   18944:	90800015 	stw	r2,0(r18)
   18948:	00900034 	movhi	r2,16384
   1894c:	10bfffc4 	addi	r2,r2,-1
   18950:	8085883a 	add	r2,r16,r2
   18954:	1085883a 	add	r2,r2,r2
   18958:	1085883a 	add	r2,r2,r2
   1895c:	9885883a 	add	r2,r19,r2
   18960:	11000517 	ldw	r4,20(r2)
   18964:	8020917a 	slli	r16,r16,5
   18968:	0017e800 	call	17e80 <__hi0bits>
   1896c:	d8c00817 	ldw	r3,32(sp)
   18970:	8085c83a 	sub	r2,r16,r2
   18974:	18800015 	stw	r2,0(r3)
   18978:	9805883a 	mov	r2,r19
   1897c:	dfc00717 	ldw	ra,28(sp)
   18980:	dd000617 	ldw	r20,24(sp)
   18984:	dcc00517 	ldw	r19,20(sp)
   18988:	dc800417 	ldw	r18,16(sp)
   1898c:	dc400317 	ldw	r17,12(sp)
   18990:	dc000217 	ldw	r16,8(sp)
   18994:	dec00804 	addi	sp,sp,32
   18998:	f800283a 	ret
   1899c:	d809883a 	mov	r4,sp
   189a0:	0017ee80 	call	17ee8 <__lo0bits>
   189a4:	d8c00017 	ldw	r3,0(sp)
   189a8:	04000044 	movi	r16,1
   189ac:	9c000415 	stw	r16,16(r19)
   189b0:	98c00515 	stw	r3,20(r19)
   189b4:	10800804 	addi	r2,r2,32
   189b8:	883fe126 	beq	r17,zero,18940 <_gp+0xffff2884>
   189bc:	00c00d44 	movi	r3,53
   189c0:	8c7ef344 	addi	r17,r17,-1075
   189c4:	88a3883a 	add	r17,r17,r2
   189c8:	1885c83a 	sub	r2,r3,r2
   189cc:	d8c00817 	ldw	r3,32(sp)
   189d0:	94400015 	stw	r17,0(r18)
   189d4:	18800015 	stw	r2,0(r3)
   189d8:	003fe706 	br	18978 <_gp+0xffff28bc>
   189dc:	01000804 	movi	r4,32
   189e0:	2089c83a 	sub	r4,r4,r2
   189e4:	1908983a 	sll	r4,r3,r4
   189e8:	d9400117 	ldw	r5,4(sp)
   189ec:	1886d83a 	srl	r3,r3,r2
   189f0:	2148b03a 	or	r4,r4,r5
   189f4:	99000515 	stw	r4,20(r19)
   189f8:	d8c00015 	stw	r3,0(sp)
   189fc:	003fca06 	br	18928 <_gp+0xffff286c>

00018a00 <__ratio>:
   18a00:	defff904 	addi	sp,sp,-28
   18a04:	dc400315 	stw	r17,12(sp)
   18a08:	2823883a 	mov	r17,r5
   18a0c:	d9400104 	addi	r5,sp,4
   18a10:	dfc00615 	stw	ra,24(sp)
   18a14:	dcc00515 	stw	r19,20(sp)
   18a18:	dc800415 	stw	r18,16(sp)
   18a1c:	2027883a 	mov	r19,r4
   18a20:	dc000215 	stw	r16,8(sp)
   18a24:	00187a80 	call	187a8 <__b2d>
   18a28:	d80b883a 	mov	r5,sp
   18a2c:	8809883a 	mov	r4,r17
   18a30:	1025883a 	mov	r18,r2
   18a34:	1821883a 	mov	r16,r3
   18a38:	00187a80 	call	187a8 <__b2d>
   18a3c:	8a000417 	ldw	r8,16(r17)
   18a40:	99000417 	ldw	r4,16(r19)
   18a44:	d9400117 	ldw	r5,4(sp)
   18a48:	2209c83a 	sub	r4,r4,r8
   18a4c:	2010917a 	slli	r8,r4,5
   18a50:	d9000017 	ldw	r4,0(sp)
   18a54:	2909c83a 	sub	r4,r5,r4
   18a58:	4109883a 	add	r4,r8,r4
   18a5c:	01000e0e 	bge	zero,r4,18a98 <__ratio+0x98>
   18a60:	2008953a 	slli	r4,r4,20
   18a64:	2421883a 	add	r16,r4,r16
   18a68:	100d883a 	mov	r6,r2
   18a6c:	180f883a 	mov	r7,r3
   18a70:	9009883a 	mov	r4,r18
   18a74:	800b883a 	mov	r5,r16
   18a78:	001b6d00 	call	1b6d0 <__divdf3>
   18a7c:	dfc00617 	ldw	ra,24(sp)
   18a80:	dcc00517 	ldw	r19,20(sp)
   18a84:	dc800417 	ldw	r18,16(sp)
   18a88:	dc400317 	ldw	r17,12(sp)
   18a8c:	dc000217 	ldw	r16,8(sp)
   18a90:	dec00704 	addi	sp,sp,28
   18a94:	f800283a 	ret
   18a98:	2008953a 	slli	r4,r4,20
   18a9c:	1907c83a 	sub	r3,r3,r4
   18aa0:	003ff106 	br	18a68 <_gp+0xffff29ac>

00018aa4 <_mprec_log10>:
   18aa4:	defffe04 	addi	sp,sp,-8
   18aa8:	dc000015 	stw	r16,0(sp)
   18aac:	dfc00115 	stw	ra,4(sp)
   18ab0:	008005c4 	movi	r2,23
   18ab4:	2021883a 	mov	r16,r4
   18ab8:	11000d0e 	bge	r2,r4,18af0 <_mprec_log10+0x4c>
   18abc:	0005883a 	mov	r2,zero
   18ac0:	00cffc34 	movhi	r3,16368
   18ac4:	843fffc4 	addi	r16,r16,-1
   18ac8:	000d883a 	mov	r6,zero
   18acc:	01d00934 	movhi	r7,16420
   18ad0:	1009883a 	mov	r4,r2
   18ad4:	180b883a 	mov	r5,r3
   18ad8:	00118440 	call	11844 <__muldf3>
   18adc:	803ff91e 	bne	r16,zero,18ac4 <_gp+0xffff2a08>
   18ae0:	dfc00117 	ldw	ra,4(sp)
   18ae4:	dc000017 	ldw	r16,0(sp)
   18ae8:	dec00204 	addi	sp,sp,8
   18aec:	f800283a 	ret
   18af0:	202090fa 	slli	r16,r4,3
   18af4:	008000b4 	movhi	r2,2
   18af8:	10b5a804 	addi	r2,r2,-10592
   18afc:	1421883a 	add	r16,r2,r16
   18b00:	80800017 	ldw	r2,0(r16)
   18b04:	80c00117 	ldw	r3,4(r16)
   18b08:	dfc00117 	ldw	ra,4(sp)
   18b0c:	dc000017 	ldw	r16,0(sp)
   18b10:	dec00204 	addi	sp,sp,8
   18b14:	f800283a 	ret

00018b18 <__copybits>:
   18b18:	297fffc4 	addi	r5,r5,-1
   18b1c:	280fd17a 	srai	r7,r5,5
   18b20:	30c00417 	ldw	r3,16(r6)
   18b24:	30800504 	addi	r2,r6,20
   18b28:	39c00044 	addi	r7,r7,1
   18b2c:	18c7883a 	add	r3,r3,r3
   18b30:	39cf883a 	add	r7,r7,r7
   18b34:	18c7883a 	add	r3,r3,r3
   18b38:	39cf883a 	add	r7,r7,r7
   18b3c:	10c7883a 	add	r3,r2,r3
   18b40:	21cf883a 	add	r7,r4,r7
   18b44:	10c00d2e 	bgeu	r2,r3,18b7c <__copybits+0x64>
   18b48:	200b883a 	mov	r5,r4
   18b4c:	12000017 	ldw	r8,0(r2)
   18b50:	29400104 	addi	r5,r5,4
   18b54:	10800104 	addi	r2,r2,4
   18b58:	2a3fff15 	stw	r8,-4(r5)
   18b5c:	10fffb36 	bltu	r2,r3,18b4c <_gp+0xffff2a90>
   18b60:	1985c83a 	sub	r2,r3,r6
   18b64:	10bffac4 	addi	r2,r2,-21
   18b68:	1004d0ba 	srli	r2,r2,2
   18b6c:	10800044 	addi	r2,r2,1
   18b70:	1085883a 	add	r2,r2,r2
   18b74:	1085883a 	add	r2,r2,r2
   18b78:	2089883a 	add	r4,r4,r2
   18b7c:	21c0032e 	bgeu	r4,r7,18b8c <__copybits+0x74>
   18b80:	20000015 	stw	zero,0(r4)
   18b84:	21000104 	addi	r4,r4,4
   18b88:	21fffd36 	bltu	r4,r7,18b80 <_gp+0xffff2ac4>
   18b8c:	f800283a 	ret

00018b90 <__any_on>:
   18b90:	20c00417 	ldw	r3,16(r4)
   18b94:	2805d17a 	srai	r2,r5,5
   18b98:	21000504 	addi	r4,r4,20
   18b9c:	18800d0e 	bge	r3,r2,18bd4 <__any_on+0x44>
   18ba0:	18c7883a 	add	r3,r3,r3
   18ba4:	18c7883a 	add	r3,r3,r3
   18ba8:	20c7883a 	add	r3,r4,r3
   18bac:	20c0192e 	bgeu	r4,r3,18c14 <__any_on+0x84>
   18bb0:	18bfff17 	ldw	r2,-4(r3)
   18bb4:	18ffff04 	addi	r3,r3,-4
   18bb8:	1000041e 	bne	r2,zero,18bcc <__any_on+0x3c>
   18bbc:	20c0142e 	bgeu	r4,r3,18c10 <__any_on+0x80>
   18bc0:	18ffff04 	addi	r3,r3,-4
   18bc4:	19400017 	ldw	r5,0(r3)
   18bc8:	283ffc26 	beq	r5,zero,18bbc <_gp+0xffff2b00>
   18bcc:	00800044 	movi	r2,1
   18bd0:	f800283a 	ret
   18bd4:	10c00a0e 	bge	r2,r3,18c00 <__any_on+0x70>
   18bd8:	1085883a 	add	r2,r2,r2
   18bdc:	1085883a 	add	r2,r2,r2
   18be0:	294007cc 	andi	r5,r5,31
   18be4:	2087883a 	add	r3,r4,r2
   18be8:	283ff026 	beq	r5,zero,18bac <_gp+0xffff2af0>
   18bec:	19800017 	ldw	r6,0(r3)
   18bf0:	3144d83a 	srl	r2,r6,r5
   18bf4:	114a983a 	sll	r5,r2,r5
   18bf8:	317ff41e 	bne	r6,r5,18bcc <_gp+0xffff2b10>
   18bfc:	003feb06 	br	18bac <_gp+0xffff2af0>
   18c00:	1085883a 	add	r2,r2,r2
   18c04:	1085883a 	add	r2,r2,r2
   18c08:	2087883a 	add	r3,r4,r2
   18c0c:	003fe706 	br	18bac <_gp+0xffff2af0>
   18c10:	f800283a 	ret
   18c14:	0005883a 	mov	r2,zero
   18c18:	f800283a 	ret

00018c1c <__fpclassifyd>:
   18c1c:	00a00034 	movhi	r2,32768
   18c20:	10bfffc4 	addi	r2,r2,-1
   18c24:	2884703a 	and	r2,r5,r2
   18c28:	10000726 	beq	r2,zero,18c48 <__fpclassifyd+0x2c>
   18c2c:	00fffc34 	movhi	r3,65520
   18c30:	019ff834 	movhi	r6,32736
   18c34:	28c7883a 	add	r3,r5,r3
   18c38:	31bfffc4 	addi	r6,r6,-1
   18c3c:	30c00536 	bltu	r6,r3,18c54 <__fpclassifyd+0x38>
   18c40:	00800104 	movi	r2,4
   18c44:	f800283a 	ret
   18c48:	2000021e 	bne	r4,zero,18c54 <__fpclassifyd+0x38>
   18c4c:	00800084 	movi	r2,2
   18c50:	f800283a 	ret
   18c54:	00dffc34 	movhi	r3,32752
   18c58:	019ff834 	movhi	r6,32736
   18c5c:	28cb883a 	add	r5,r5,r3
   18c60:	31bfffc4 	addi	r6,r6,-1
   18c64:	317ff62e 	bgeu	r6,r5,18c40 <_gp+0xffff2b84>
   18c68:	01400434 	movhi	r5,16
   18c6c:	297fffc4 	addi	r5,r5,-1
   18c70:	28800236 	bltu	r5,r2,18c7c <__fpclassifyd+0x60>
   18c74:	008000c4 	movi	r2,3
   18c78:	f800283a 	ret
   18c7c:	10c00226 	beq	r2,r3,18c88 <__fpclassifyd+0x6c>
   18c80:	0005883a 	mov	r2,zero
   18c84:	f800283a 	ret
   18c88:	2005003a 	cmpeq	r2,r4,zero
   18c8c:	f800283a 	ret

00018c90 <strcmp>:
   18c90:	2144b03a 	or	r2,r4,r5
   18c94:	108000cc 	andi	r2,r2,3
   18c98:	1000171e 	bne	r2,zero,18cf8 <strcmp+0x68>
   18c9c:	20800017 	ldw	r2,0(r4)
   18ca0:	28c00017 	ldw	r3,0(r5)
   18ca4:	10c0141e 	bne	r2,r3,18cf8 <strcmp+0x68>
   18ca8:	027fbff4 	movhi	r9,65279
   18cac:	4a7fbfc4 	addi	r9,r9,-257
   18cb0:	0086303a 	nor	r3,zero,r2
   18cb4:	02202074 	movhi	r8,32897
   18cb8:	1245883a 	add	r2,r2,r9
   18cbc:	42202004 	addi	r8,r8,-32640
   18cc0:	10c4703a 	and	r2,r2,r3
   18cc4:	1204703a 	and	r2,r2,r8
   18cc8:	10000226 	beq	r2,zero,18cd4 <strcmp+0x44>
   18ccc:	00002306 	br	18d5c <strcmp+0xcc>
   18cd0:	1000221e 	bne	r2,zero,18d5c <strcmp+0xcc>
   18cd4:	21000104 	addi	r4,r4,4
   18cd8:	20c00017 	ldw	r3,0(r4)
   18cdc:	29400104 	addi	r5,r5,4
   18ce0:	29800017 	ldw	r6,0(r5)
   18ce4:	1a4f883a 	add	r7,r3,r9
   18ce8:	00c4303a 	nor	r2,zero,r3
   18cec:	3884703a 	and	r2,r7,r2
   18cf0:	1204703a 	and	r2,r2,r8
   18cf4:	19bff626 	beq	r3,r6,18cd0 <_gp+0xffff2c14>
   18cf8:	20800003 	ldbu	r2,0(r4)
   18cfc:	10c03fcc 	andi	r3,r2,255
   18d00:	18c0201c 	xori	r3,r3,128
   18d04:	18ffe004 	addi	r3,r3,-128
   18d08:	18000c26 	beq	r3,zero,18d3c <strcmp+0xac>
   18d0c:	29800007 	ldb	r6,0(r5)
   18d10:	19800326 	beq	r3,r6,18d20 <strcmp+0x90>
   18d14:	00001306 	br	18d64 <strcmp+0xd4>
   18d18:	29800007 	ldb	r6,0(r5)
   18d1c:	11800b1e 	bne	r2,r6,18d4c <strcmp+0xbc>
   18d20:	21000044 	addi	r4,r4,1
   18d24:	20c00003 	ldbu	r3,0(r4)
   18d28:	29400044 	addi	r5,r5,1
   18d2c:	18803fcc 	andi	r2,r3,255
   18d30:	1080201c 	xori	r2,r2,128
   18d34:	10bfe004 	addi	r2,r2,-128
   18d38:	103ff71e 	bne	r2,zero,18d18 <_gp+0xffff2c5c>
   18d3c:	0007883a 	mov	r3,zero
   18d40:	28800003 	ldbu	r2,0(r5)
   18d44:	1885c83a 	sub	r2,r3,r2
   18d48:	f800283a 	ret
   18d4c:	28800003 	ldbu	r2,0(r5)
   18d50:	18c03fcc 	andi	r3,r3,255
   18d54:	1885c83a 	sub	r2,r3,r2
   18d58:	f800283a 	ret
   18d5c:	0005883a 	mov	r2,zero
   18d60:	f800283a 	ret
   18d64:	10c03fcc 	andi	r3,r2,255
   18d68:	003ff506 	br	18d40 <_gp+0xffff2c84>

00018d6c <strlen>:
   18d6c:	208000cc 	andi	r2,r4,3
   18d70:	10002026 	beq	r2,zero,18df4 <strlen+0x88>
   18d74:	20800007 	ldb	r2,0(r4)
   18d78:	10002026 	beq	r2,zero,18dfc <strlen+0x90>
   18d7c:	2005883a 	mov	r2,r4
   18d80:	00000206 	br	18d8c <strlen+0x20>
   18d84:	10c00007 	ldb	r3,0(r2)
   18d88:	18001826 	beq	r3,zero,18dec <strlen+0x80>
   18d8c:	10800044 	addi	r2,r2,1
   18d90:	10c000cc 	andi	r3,r2,3
   18d94:	183ffb1e 	bne	r3,zero,18d84 <_gp+0xffff2cc8>
   18d98:	10c00017 	ldw	r3,0(r2)
   18d9c:	01ffbff4 	movhi	r7,65279
   18da0:	39ffbfc4 	addi	r7,r7,-257
   18da4:	00ca303a 	nor	r5,zero,r3
   18da8:	01a02074 	movhi	r6,32897
   18dac:	19c7883a 	add	r3,r3,r7
   18db0:	31a02004 	addi	r6,r6,-32640
   18db4:	1946703a 	and	r3,r3,r5
   18db8:	1986703a 	and	r3,r3,r6
   18dbc:	1800091e 	bne	r3,zero,18de4 <strlen+0x78>
   18dc0:	10800104 	addi	r2,r2,4
   18dc4:	10c00017 	ldw	r3,0(r2)
   18dc8:	19cb883a 	add	r5,r3,r7
   18dcc:	00c6303a 	nor	r3,zero,r3
   18dd0:	28c6703a 	and	r3,r5,r3
   18dd4:	1986703a 	and	r3,r3,r6
   18dd8:	183ff926 	beq	r3,zero,18dc0 <_gp+0xffff2d04>
   18ddc:	00000106 	br	18de4 <strlen+0x78>
   18de0:	10800044 	addi	r2,r2,1
   18de4:	10c00007 	ldb	r3,0(r2)
   18de8:	183ffd1e 	bne	r3,zero,18de0 <_gp+0xffff2d24>
   18dec:	1105c83a 	sub	r2,r2,r4
   18df0:	f800283a 	ret
   18df4:	2005883a 	mov	r2,r4
   18df8:	003fe706 	br	18d98 <_gp+0xffff2cdc>
   18dfc:	0005883a 	mov	r2,zero
   18e00:	f800283a 	ret

00018e04 <__ssprint_r>:
   18e04:	30800217 	ldw	r2,8(r6)
   18e08:	defff604 	addi	sp,sp,-40
   18e0c:	dc800215 	stw	r18,8(sp)
   18e10:	dfc00915 	stw	ra,36(sp)
   18e14:	df000815 	stw	fp,32(sp)
   18e18:	ddc00715 	stw	r23,28(sp)
   18e1c:	dd800615 	stw	r22,24(sp)
   18e20:	dd400515 	stw	r21,20(sp)
   18e24:	dd000415 	stw	r20,16(sp)
   18e28:	dcc00315 	stw	r19,12(sp)
   18e2c:	dc400115 	stw	r17,4(sp)
   18e30:	dc000015 	stw	r16,0(sp)
   18e34:	3025883a 	mov	r18,r6
   18e38:	10005826 	beq	r2,zero,18f9c <__ssprint_r+0x198>
   18e3c:	2027883a 	mov	r19,r4
   18e40:	35c00017 	ldw	r23,0(r6)
   18e44:	29000017 	ldw	r4,0(r5)
   18e48:	28800217 	ldw	r2,8(r5)
   18e4c:	2823883a 	mov	r17,r5
   18e50:	0039883a 	mov	fp,zero
   18e54:	0021883a 	mov	r16,zero
   18e58:	80003926 	beq	r16,zero,18f40 <__ssprint_r+0x13c>
   18e5c:	102b883a 	mov	r21,r2
   18e60:	102d883a 	mov	r22,r2
   18e64:	80803a36 	bltu	r16,r2,18f50 <__ssprint_r+0x14c>
   18e68:	88c0030b 	ldhu	r3,12(r17)
   18e6c:	1881200c 	andi	r2,r3,1152
   18e70:	10002626 	beq	r2,zero,18f0c <__ssprint_r+0x108>
   18e74:	88800517 	ldw	r2,20(r17)
   18e78:	89400417 	ldw	r5,16(r17)
   18e7c:	81800044 	addi	r6,r16,1
   18e80:	108f883a 	add	r7,r2,r2
   18e84:	3885883a 	add	r2,r7,r2
   18e88:	100ed7fa 	srli	r7,r2,31
   18e8c:	216dc83a 	sub	r22,r4,r5
   18e90:	3589883a 	add	r4,r6,r22
   18e94:	3885883a 	add	r2,r7,r2
   18e98:	102bd07a 	srai	r21,r2,1
   18e9c:	a80d883a 	mov	r6,r21
   18ea0:	a900022e 	bgeu	r21,r4,18eac <__ssprint_r+0xa8>
   18ea4:	202b883a 	mov	r21,r4
   18ea8:	200d883a 	mov	r6,r4
   18eac:	18c1000c 	andi	r3,r3,1024
   18eb0:	18002a26 	beq	r3,zero,18f5c <__ssprint_r+0x158>
   18eb4:	300b883a 	mov	r5,r6
   18eb8:	9809883a 	mov	r4,r19
   18ebc:	001239c0 	call	1239c <_malloc_r>
   18ec0:	1029883a 	mov	r20,r2
   18ec4:	10002c26 	beq	r2,zero,18f78 <__ssprint_r+0x174>
   18ec8:	89400417 	ldw	r5,16(r17)
   18ecc:	b00d883a 	mov	r6,r22
   18ed0:	1009883a 	mov	r4,r2
   18ed4:	0017a1c0 	call	17a1c <memcpy>
   18ed8:	8880030b 	ldhu	r2,12(r17)
   18edc:	00fedfc4 	movi	r3,-1153
   18ee0:	10c4703a 	and	r2,r2,r3
   18ee4:	10802014 	ori	r2,r2,128
   18ee8:	8880030d 	sth	r2,12(r17)
   18eec:	a589883a 	add	r4,r20,r22
   18ef0:	adadc83a 	sub	r22,r21,r22
   18ef4:	8d400515 	stw	r21,20(r17)
   18ef8:	8d800215 	stw	r22,8(r17)
   18efc:	8d000415 	stw	r20,16(r17)
   18f00:	89000015 	stw	r4,0(r17)
   18f04:	802b883a 	mov	r21,r16
   18f08:	802d883a 	mov	r22,r16
   18f0c:	b00d883a 	mov	r6,r22
   18f10:	e00b883a 	mov	r5,fp
   18f14:	001a4500 	call	1a450 <memmove>
   18f18:	88800217 	ldw	r2,8(r17)
   18f1c:	89000017 	ldw	r4,0(r17)
   18f20:	90c00217 	ldw	r3,8(r18)
   18f24:	1545c83a 	sub	r2,r2,r21
   18f28:	2589883a 	add	r4,r4,r22
   18f2c:	88800215 	stw	r2,8(r17)
   18f30:	89000015 	stw	r4,0(r17)
   18f34:	1c21c83a 	sub	r16,r3,r16
   18f38:	94000215 	stw	r16,8(r18)
   18f3c:	80001726 	beq	r16,zero,18f9c <__ssprint_r+0x198>
   18f40:	bf000017 	ldw	fp,0(r23)
   18f44:	bc000117 	ldw	r16,4(r23)
   18f48:	bdc00204 	addi	r23,r23,8
   18f4c:	003fc206 	br	18e58 <_gp+0xffff2d9c>
   18f50:	802b883a 	mov	r21,r16
   18f54:	802d883a 	mov	r22,r16
   18f58:	003fec06 	br	18f0c <_gp+0xffff2e50>
   18f5c:	9809883a 	mov	r4,r19
   18f60:	001a5ac0 	call	1a5ac <_realloc_r>
   18f64:	1029883a 	mov	r20,r2
   18f68:	103fe01e 	bne	r2,zero,18eec <_gp+0xffff2e30>
   18f6c:	89400417 	ldw	r5,16(r17)
   18f70:	9809883a 	mov	r4,r19
   18f74:	00174d00 	call	174d0 <_free_r>
   18f78:	88c0030b 	ldhu	r3,12(r17)
   18f7c:	00800304 	movi	r2,12
   18f80:	98800015 	stw	r2,0(r19)
   18f84:	18c01014 	ori	r3,r3,64
   18f88:	88c0030d 	sth	r3,12(r17)
   18f8c:	00bfffc4 	movi	r2,-1
   18f90:	90000215 	stw	zero,8(r18)
   18f94:	90000115 	stw	zero,4(r18)
   18f98:	00000206 	br	18fa4 <__ssprint_r+0x1a0>
   18f9c:	90000115 	stw	zero,4(r18)
   18fa0:	0005883a 	mov	r2,zero
   18fa4:	dfc00917 	ldw	ra,36(sp)
   18fa8:	df000817 	ldw	fp,32(sp)
   18fac:	ddc00717 	ldw	r23,28(sp)
   18fb0:	dd800617 	ldw	r22,24(sp)
   18fb4:	dd400517 	ldw	r21,20(sp)
   18fb8:	dd000417 	ldw	r20,16(sp)
   18fbc:	dcc00317 	ldw	r19,12(sp)
   18fc0:	dc800217 	ldw	r18,8(sp)
   18fc4:	dc400117 	ldw	r17,4(sp)
   18fc8:	dc000017 	ldw	r16,0(sp)
   18fcc:	dec00a04 	addi	sp,sp,40
   18fd0:	f800283a 	ret

00018fd4 <___svfiprintf_internal_r>:
   18fd4:	2880030b 	ldhu	r2,12(r5)
   18fd8:	deffc804 	addi	sp,sp,-224
   18fdc:	dcc03115 	stw	r19,196(sp)
   18fe0:	dfc03715 	stw	ra,220(sp)
   18fe4:	df003615 	stw	fp,216(sp)
   18fe8:	ddc03515 	stw	r23,212(sp)
   18fec:	dd803415 	stw	r22,208(sp)
   18ff0:	dd403315 	stw	r21,204(sp)
   18ff4:	dd003215 	stw	r20,200(sp)
   18ff8:	dc803015 	stw	r18,192(sp)
   18ffc:	dc402f15 	stw	r17,188(sp)
   19000:	dc002e15 	stw	r16,184(sp)
   19004:	d9402315 	stw	r5,140(sp)
   19008:	d9002715 	stw	r4,156(sp)
   1900c:	1080200c 	andi	r2,r2,128
   19010:	d9c02415 	stw	r7,144(sp)
   19014:	3027883a 	mov	r19,r6
   19018:	10000226 	beq	r2,zero,19024 <___svfiprintf_internal_r+0x50>
   1901c:	28800417 	ldw	r2,16(r5)
   19020:	10046d26 	beq	r2,zero,1a1d8 <___svfiprintf_internal_r+0x1204>
   19024:	d8801a04 	addi	r2,sp,104
   19028:	d8c019c4 	addi	r3,sp,103
   1902c:	058000b4 	movhi	r22,2
   19030:	10c9c83a 	sub	r4,r2,r3
   19034:	b5b5da04 	addi	r22,r22,-10392
   19038:	d8801e15 	stw	r2,120(sp)
   1903c:	d8c01f15 	stw	r3,124(sp)
   19040:	dec01a15 	stw	sp,104(sp)
   19044:	d8001c15 	stw	zero,112(sp)
   19048:	d8001b15 	stw	zero,108(sp)
   1904c:	d811883a 	mov	r8,sp
   19050:	d8002915 	stw	zero,164(sp)
   19054:	d8002615 	stw	zero,152(sp)
   19058:	d9002c15 	stw	r4,176(sp)
   1905c:	98800007 	ldb	r2,0(r19)
   19060:	10031426 	beq	r2,zero,19cb4 <___svfiprintf_internal_r+0xce0>
   19064:	00c00944 	movi	r3,37
   19068:	9825883a 	mov	r18,r19
   1906c:	10c0021e 	bne	r2,r3,19078 <___svfiprintf_internal_r+0xa4>
   19070:	00001406 	br	190c4 <___svfiprintf_internal_r+0xf0>
   19074:	10c00326 	beq	r2,r3,19084 <___svfiprintf_internal_r+0xb0>
   19078:	94800044 	addi	r18,r18,1
   1907c:	90800007 	ldb	r2,0(r18)
   19080:	103ffc1e 	bne	r2,zero,19074 <_gp+0xffff2fb8>
   19084:	94e1c83a 	sub	r16,r18,r19
   19088:	80000e26 	beq	r16,zero,190c4 <___svfiprintf_internal_r+0xf0>
   1908c:	d8c01c17 	ldw	r3,112(sp)
   19090:	d8801b17 	ldw	r2,108(sp)
   19094:	44c00015 	stw	r19,0(r8)
   19098:	1c07883a 	add	r3,r3,r16
   1909c:	10800044 	addi	r2,r2,1
   190a0:	d8c01c15 	stw	r3,112(sp)
   190a4:	44000115 	stw	r16,4(r8)
   190a8:	d8801b15 	stw	r2,108(sp)
   190ac:	00c001c4 	movi	r3,7
   190b0:	18835c16 	blt	r3,r2,19e24 <___svfiprintf_internal_r+0xe50>
   190b4:	42000204 	addi	r8,r8,8
   190b8:	d9402617 	ldw	r5,152(sp)
   190bc:	2c0b883a 	add	r5,r5,r16
   190c0:	d9402615 	stw	r5,152(sp)
   190c4:	90800007 	ldb	r2,0(r18)
   190c8:	1002fc26 	beq	r2,zero,19cbc <___svfiprintf_internal_r+0xce8>
   190cc:	0023883a 	mov	r17,zero
   190d0:	00bfffc4 	movi	r2,-1
   190d4:	0021883a 	mov	r16,zero
   190d8:	94c00044 	addi	r19,r18,1
   190dc:	90c00047 	ldb	r3,1(r18)
   190e0:	dc402105 	stb	r17,132(sp)
   190e4:	d8001d85 	stb	zero,118(sp)
   190e8:	002b883a 	mov	r21,zero
   190ec:	d8802015 	stw	r2,128(sp)
   190f0:	d8002515 	stw	zero,148(sp)
   190f4:	04801604 	movi	r18,88
   190f8:	05000244 	movi	r20,9
   190fc:	402f883a 	mov	r23,r8
   19100:	8023883a 	mov	r17,r16
   19104:	9cc00044 	addi	r19,r19,1
   19108:	18bff804 	addi	r2,r3,-32
   1910c:	9081fb36 	bltu	r18,r2,198fc <___svfiprintf_internal_r+0x928>
   19110:	100490ba 	slli	r2,r2,2
   19114:	010000b4 	movhi	r4,2
   19118:	21244a04 	addi	r4,r4,-28376
   1911c:	1105883a 	add	r2,r2,r4
   19120:	10800017 	ldw	r2,0(r2)
   19124:	1000683a 	jmp	r2
   19128:	00019328 	cmpgeui	zero,zero,1612
   1912c:	000198fc 	xorhi	zero,zero,1635
   19130:	000198fc 	xorhi	zero,zero,1635
   19134:	0001931c 	xori	zero,zero,1612
   19138:	000198fc 	xorhi	zero,zero,1635
   1913c:	000198fc 	xorhi	zero,zero,1635
   19140:	000198fc 	xorhi	zero,zero,1635
   19144:	000198fc 	xorhi	zero,zero,1635
   19148:	000198fc 	xorhi	zero,zero,1635
   1914c:	000198fc 	xorhi	zero,zero,1635
   19150:	0001928c 	andi	zero,zero,1610
   19154:	00019488 	cmpgei	zero,zero,1618
   19158:	000198fc 	xorhi	zero,zero,1635
   1915c:	000192b4 	movhi	zero,1610
   19160:	00019938 	rdprs	zero,zero,1636
   19164:	000198fc 	xorhi	zero,zero,1635
   19168:	0001992c 	andhi	zero,zero,1636
   1916c:	000198c0 	call	198c <__alt_mem_onchip_memory-0xe674>
   19170:	000198c0 	call	198c <__alt_mem_onchip_memory-0xe674>
   19174:	000198c0 	call	198c <__alt_mem_onchip_memory-0xe674>
   19178:	000198c0 	call	198c <__alt_mem_onchip_memory-0xe674>
   1917c:	000198c0 	call	198c <__alt_mem_onchip_memory-0xe674>
   19180:	000198c0 	call	198c <__alt_mem_onchip_memory-0xe674>
   19184:	000198c0 	call	198c <__alt_mem_onchip_memory-0xe674>
   19188:	000198c0 	call	198c <__alt_mem_onchip_memory-0xe674>
   1918c:	000198c0 	call	198c <__alt_mem_onchip_memory-0xe674>
   19190:	000198fc 	xorhi	zero,zero,1635
   19194:	000198fc 	xorhi	zero,zero,1635
   19198:	000198fc 	xorhi	zero,zero,1635
   1919c:	000198fc 	xorhi	zero,zero,1635
   191a0:	000198fc 	xorhi	zero,zero,1635
   191a4:	000198fc 	xorhi	zero,zero,1635
   191a8:	000198fc 	xorhi	zero,zero,1635
   191ac:	000198fc 	xorhi	zero,zero,1635
   191b0:	000198fc 	xorhi	zero,zero,1635
   191b4:	000198fc 	xorhi	zero,zero,1635
   191b8:	00019844 	movi	zero,1633
   191bc:	000198fc 	xorhi	zero,zero,1635
   191c0:	000198fc 	xorhi	zero,zero,1635
   191c4:	000198fc 	xorhi	zero,zero,1635
   191c8:	000198fc 	xorhi	zero,zero,1635
   191cc:	000198fc 	xorhi	zero,zero,1635
   191d0:	000198fc 	xorhi	zero,zero,1635
   191d4:	000198fc 	xorhi	zero,zero,1635
   191d8:	000198fc 	xorhi	zero,zero,1635
   191dc:	000198fc 	xorhi	zero,zero,1635
   191e0:	000198fc 	xorhi	zero,zero,1635
   191e4:	000199f4 	movhi	zero,1639
   191e8:	000198fc 	xorhi	zero,zero,1635
   191ec:	000198fc 	xorhi	zero,zero,1635
   191f0:	000198fc 	xorhi	zero,zero,1635
   191f4:	000198fc 	xorhi	zero,zero,1635
   191f8:	000198fc 	xorhi	zero,zero,1635
   191fc:	00019980 	call	1998 <__alt_mem_onchip_memory-0xe668>
   19200:	000198fc 	xorhi	zero,zero,1635
   19204:	000198fc 	xorhi	zero,zero,1635
   19208:	00019680 	call	1968 <__alt_mem_onchip_memory-0xe698>
   1920c:	000198fc 	xorhi	zero,zero,1635
   19210:	000198fc 	xorhi	zero,zero,1635
   19214:	000198fc 	xorhi	zero,zero,1635
   19218:	000198fc 	xorhi	zero,zero,1635
   1921c:	000198fc 	xorhi	zero,zero,1635
   19220:	000198fc 	xorhi	zero,zero,1635
   19224:	000198fc 	xorhi	zero,zero,1635
   19228:	000198fc 	xorhi	zero,zero,1635
   1922c:	000198fc 	xorhi	zero,zero,1635
   19230:	000198fc 	xorhi	zero,zero,1635
   19234:	0001954c 	andi	zero,zero,1621
   19238:	00019730 	cmpltui	zero,zero,1628
   1923c:	000198fc 	xorhi	zero,zero,1635
   19240:	000198fc 	xorhi	zero,zero,1635
   19244:	000198fc 	xorhi	zero,zero,1635
   19248:	00019724 	muli	zero,zero,1628
   1924c:	00019730 	cmpltui	zero,zero,1628
   19250:	000198fc 	xorhi	zero,zero,1635
   19254:	000198fc 	xorhi	zero,zero,1635
   19258:	00019710 	cmplti	zero,zero,1628
   1925c:	000198fc 	xorhi	zero,zero,1635
   19260:	000196d0 	cmplti	zero,zero,1627
   19264:	0001949c 	xori	zero,zero,1618
   19268:	000192c0 	call	192c <__alt_mem_onchip_memory-0xe6d4>
   1926c:	00019838 	rdprs	zero,zero,1632
   19270:	000198fc 	xorhi	zero,zero,1635
   19274:	000197e4 	muli	zero,zero,1631
   19278:	000198fc 	xorhi	zero,zero,1635
   1927c:	00019400 	call	1940 <__alt_mem_onchip_memory-0xe6c0>
   19280:	000198fc 	xorhi	zero,zero,1635
   19284:	000198fc 	xorhi	zero,zero,1635
   19288:	0001934c 	andi	zero,zero,1613
   1928c:	d9002417 	ldw	r4,144(sp)
   19290:	d9402417 	ldw	r5,144(sp)
   19294:	21000017 	ldw	r4,0(r4)
   19298:	28800104 	addi	r2,r5,4
   1929c:	d9002515 	stw	r4,148(sp)
   192a0:	20032b0e 	bge	r4,zero,19f50 <___svfiprintf_internal_r+0xf7c>
   192a4:	d8c02517 	ldw	r3,148(sp)
   192a8:	d8802415 	stw	r2,144(sp)
   192ac:	00c7c83a 	sub	r3,zero,r3
   192b0:	d8c02515 	stw	r3,148(sp)
   192b4:	8c400114 	ori	r17,r17,4
   192b8:	98c00007 	ldb	r3,0(r19)
   192bc:	003f9106 	br	19104 <_gp+0xffff3048>
   192c0:	00800c04 	movi	r2,48
   192c4:	d9402417 	ldw	r5,144(sp)
   192c8:	d9002017 	ldw	r4,128(sp)
   192cc:	d8801d05 	stb	r2,116(sp)
   192d0:	00801e04 	movi	r2,120
   192d4:	d8801d45 	stb	r2,117(sp)
   192d8:	d8001d85 	stb	zero,118(sp)
   192dc:	b811883a 	mov	r8,r23
   192e0:	28c00104 	addi	r3,r5,4
   192e4:	2c800017 	ldw	r18,0(r5)
   192e8:	0029883a 	mov	r20,zero
   192ec:	88800094 	ori	r2,r17,2
   192f0:	20036316 	blt	r4,zero,1a080 <___svfiprintf_internal_r+0x10ac>
   192f4:	00bfdfc4 	movi	r2,-129
   192f8:	88a0703a 	and	r16,r17,r2
   192fc:	d8c02415 	stw	r3,144(sp)
   19300:	84000094 	ori	r16,r16,2
   19304:	90031c26 	beq	r18,zero,19f78 <___svfiprintf_internal_r+0xfa4>
   19308:	014000b4 	movhi	r5,2
   1930c:	29757a04 	addi	r5,r5,-10776
   19310:	002b883a 	mov	r21,zero
   19314:	d9402915 	stw	r5,164(sp)
   19318:	00002906 	br	193c0 <___svfiprintf_internal_r+0x3ec>
   1931c:	8c400054 	ori	r17,r17,1
   19320:	98c00007 	ldb	r3,0(r19)
   19324:	003f7706 	br	19104 <_gp+0xffff3048>
   19328:	a8803fcc 	andi	r2,r21,255
   1932c:	1080201c 	xori	r2,r2,128
   19330:	10bfe004 	addi	r2,r2,-128
   19334:	10032a1e 	bne	r2,zero,19fe0 <___svfiprintf_internal_r+0x100c>
   19338:	00c00044 	movi	r3,1
   1933c:	d8c02105 	stb	r3,132(sp)
   19340:	05400804 	movi	r21,32
   19344:	98c00007 	ldb	r3,0(r19)
   19348:	003f6e06 	br	19104 <_gp+0xffff3048>
   1934c:	8821883a 	mov	r16,r17
   19350:	dc402103 	ldbu	r17,132(sp)
   19354:	b811883a 	mov	r8,r23
   19358:	8c403fcc 	andi	r17,r17,255
   1935c:	8803f01e 	bne	r17,zero,1a320 <___svfiprintf_internal_r+0x134c>
   19360:	008000b4 	movhi	r2,2
   19364:	10b57a04 	addi	r2,r2,-10776
   19368:	d8802915 	stw	r2,164(sp)
   1936c:	8080080c 	andi	r2,r16,32
   19370:	1000cd26 	beq	r2,zero,196a8 <___svfiprintf_internal_r+0x6d4>
   19374:	d9002417 	ldw	r4,144(sp)
   19378:	24800017 	ldw	r18,0(r4)
   1937c:	25000117 	ldw	r20,4(r4)
   19380:	21000204 	addi	r4,r4,8
   19384:	d9002415 	stw	r4,144(sp)
   19388:	8080004c 	andi	r2,r16,1
   1938c:	1002c726 	beq	r2,zero,19eac <___svfiprintf_internal_r+0xed8>
   19390:	9504b03a 	or	r2,r18,r20
   19394:	1003061e 	bne	r2,zero,19fb0 <___svfiprintf_internal_r+0xfdc>
   19398:	d9002017 	ldw	r4,128(sp)
   1939c:	d8001d85 	stb	zero,118(sp)
   193a0:	20033e16 	blt	r4,zero,1a09c <___svfiprintf_internal_r+0x10c8>
   193a4:	00bfdfc4 	movi	r2,-129
   193a8:	80a0703a 	and	r16,r16,r2
   193ac:	d9402017 	ldw	r5,128(sp)
   193b0:	002b883a 	mov	r21,zero
   193b4:	28002826 	beq	r5,zero,19458 <___svfiprintf_internal_r+0x484>
   193b8:	0025883a 	mov	r18,zero
   193bc:	0029883a 	mov	r20,zero
   193c0:	d9002917 	ldw	r4,164(sp)
   193c4:	dc401a04 	addi	r17,sp,104
   193c8:	908003cc 	andi	r2,r18,15
   193cc:	a006973a 	slli	r3,r20,28
   193d0:	2085883a 	add	r2,r4,r2
   193d4:	9024d13a 	srli	r18,r18,4
   193d8:	10800003 	ldbu	r2,0(r2)
   193dc:	a028d13a 	srli	r20,r20,4
   193e0:	8c7fffc4 	addi	r17,r17,-1
   193e4:	1ca4b03a 	or	r18,r3,r18
   193e8:	88800005 	stb	r2,0(r17)
   193ec:	9504b03a 	or	r2,r18,r20
   193f0:	103ff51e 	bne	r2,zero,193c8 <_gp+0xffff330c>
   193f4:	d8801e17 	ldw	r2,120(sp)
   193f8:	1469c83a 	sub	r20,r2,r17
   193fc:	00001906 	br	19464 <___svfiprintf_internal_r+0x490>
   19400:	8821883a 	mov	r16,r17
   19404:	dc402103 	ldbu	r17,132(sp)
   19408:	b811883a 	mov	r8,r23
   1940c:	8c403fcc 	andi	r17,r17,255
   19410:	8803d01e 	bne	r17,zero,1a354 <___svfiprintf_internal_r+0x1380>
   19414:	8080080c 	andi	r2,r16,32
   19418:	10016126 	beq	r2,zero,199a0 <___svfiprintf_internal_r+0x9cc>
   1941c:	d9002417 	ldw	r4,144(sp)
   19420:	d9402017 	ldw	r5,128(sp)
   19424:	d8001d85 	stb	zero,118(sp)
   19428:	20c00204 	addi	r3,r4,8
   1942c:	24800017 	ldw	r18,0(r4)
   19430:	25000117 	ldw	r20,4(r4)
   19434:	28030f16 	blt	r5,zero,1a074 <___svfiprintf_internal_r+0x10a0>
   19438:	013fdfc4 	movi	r4,-129
   1943c:	9504b03a 	or	r2,r18,r20
   19440:	d8c02415 	stw	r3,144(sp)
   19444:	8120703a 	and	r16,r16,r4
   19448:	002b883a 	mov	r21,zero
   1944c:	1000cd1e 	bne	r2,zero,19784 <___svfiprintf_internal_r+0x7b0>
   19450:	d8c02017 	ldw	r3,128(sp)
   19454:	1803141e 	bne	r3,zero,1a0a8 <___svfiprintf_internal_r+0x10d4>
   19458:	d8002015 	stw	zero,128(sp)
   1945c:	0029883a 	mov	r20,zero
   19460:	dc401a04 	addi	r17,sp,104
   19464:	dc802017 	ldw	r18,128(sp)
   19468:	9500010e 	bge	r18,r20,19470 <___svfiprintf_internal_r+0x49c>
   1946c:	a025883a 	mov	r18,r20
   19470:	ad403fcc 	andi	r21,r21,255
   19474:	ad40201c 	xori	r21,r21,128
   19478:	ad7fe004 	addi	r21,r21,-128
   1947c:	a8003f26 	beq	r21,zero,1957c <___svfiprintf_internal_r+0x5a8>
   19480:	94800044 	addi	r18,r18,1
   19484:	00003d06 	br	1957c <___svfiprintf_internal_r+0x5a8>
   19488:	00c00044 	movi	r3,1
   1948c:	d8c02105 	stb	r3,132(sp)
   19490:	05400ac4 	movi	r21,43
   19494:	98c00007 	ldb	r3,0(r19)
   19498:	003f1a06 	br	19104 <_gp+0xffff3048>
   1949c:	8821883a 	mov	r16,r17
   194a0:	dc402103 	ldbu	r17,132(sp)
   194a4:	b811883a 	mov	r8,r23
   194a8:	8c403fcc 	andi	r17,r17,255
   194ac:	8803a71e 	bne	r17,zero,1a34c <___svfiprintf_internal_r+0x1378>
   194b0:	8080080c 	andi	r2,r16,32
   194b4:	10015726 	beq	r2,zero,19a14 <___svfiprintf_internal_r+0xa40>
   194b8:	d8c02417 	ldw	r3,144(sp)
   194bc:	d9002017 	ldw	r4,128(sp)
   194c0:	d8001d85 	stb	zero,118(sp)
   194c4:	18800204 	addi	r2,r3,8
   194c8:	1c800017 	ldw	r18,0(r3)
   194cc:	1d000117 	ldw	r20,4(r3)
   194d0:	2002db16 	blt	r4,zero,1a040 <___svfiprintf_internal_r+0x106c>
   194d4:	013fdfc4 	movi	r4,-129
   194d8:	9506b03a 	or	r3,r18,r20
   194dc:	d8802415 	stw	r2,144(sp)
   194e0:	8120703a 	and	r16,r16,r4
   194e4:	18015826 	beq	r3,zero,19a48 <___svfiprintf_internal_r+0xa74>
   194e8:	002b883a 	mov	r21,zero
   194ec:	dc401a04 	addi	r17,sp,104
   194f0:	9006d0fa 	srli	r3,r18,3
   194f4:	a008977a 	slli	r4,r20,29
   194f8:	a028d0fa 	srli	r20,r20,3
   194fc:	948001cc 	andi	r18,r18,7
   19500:	90800c04 	addi	r2,r18,48
   19504:	8c7fffc4 	addi	r17,r17,-1
   19508:	20e4b03a 	or	r18,r4,r3
   1950c:	88800005 	stb	r2,0(r17)
   19510:	9506b03a 	or	r3,r18,r20
   19514:	183ff61e 	bne	r3,zero,194f0 <_gp+0xffff3434>
   19518:	80c0004c 	andi	r3,r16,1
   1951c:	18028926 	beq	r3,zero,19f44 <___svfiprintf_internal_r+0xf70>
   19520:	10803fcc 	andi	r2,r2,255
   19524:	1080201c 	xori	r2,r2,128
   19528:	10bfe004 	addi	r2,r2,-128
   1952c:	00c00c04 	movi	r3,48
   19530:	10ffb026 	beq	r2,r3,193f4 <_gp+0xffff3338>
   19534:	88ffffc5 	stb	r3,-1(r17)
   19538:	d8c01e17 	ldw	r3,120(sp)
   1953c:	88bfffc4 	addi	r2,r17,-1
   19540:	1023883a 	mov	r17,r2
   19544:	18a9c83a 	sub	r20,r3,r2
   19548:	003fc606 	br	19464 <_gp+0xffff33a8>
   1954c:	d8c02417 	ldw	r3,144(sp)
   19550:	04800044 	movi	r18,1
   19554:	8821883a 	mov	r16,r17
   19558:	18800017 	ldw	r2,0(r3)
   1955c:	18c00104 	addi	r3,r3,4
   19560:	b811883a 	mov	r8,r23
   19564:	d8001d85 	stb	zero,118(sp)
   19568:	d8801005 	stb	r2,64(sp)
   1956c:	d8c02415 	stw	r3,144(sp)
   19570:	9029883a 	mov	r20,r18
   19574:	dc401004 	addi	r17,sp,64
   19578:	d8002015 	stw	zero,128(sp)
   1957c:	80c0008c 	andi	r3,r16,2
   19580:	d8c02115 	stw	r3,132(sp)
   19584:	18000126 	beq	r3,zero,1958c <___svfiprintf_internal_r+0x5b8>
   19588:	94800084 	addi	r18,r18,2
   1958c:	80c0210c 	andi	r3,r16,132
   19590:	d8c02215 	stw	r3,136(sp)
   19594:	1801321e 	bne	r3,zero,19a60 <___svfiprintf_internal_r+0xa8c>
   19598:	d9002517 	ldw	r4,148(sp)
   1959c:	24b9c83a 	sub	fp,r4,r18
   195a0:	07012f0e 	bge	zero,fp,19a60 <___svfiprintf_internal_r+0xa8c>
   195a4:	02400404 	movi	r9,16
   195a8:	d8c01c17 	ldw	r3,112(sp)
   195ac:	d8801b17 	ldw	r2,108(sp)
   195b0:	4f03250e 	bge	r9,fp,1a248 <___svfiprintf_internal_r+0x1274>
   195b4:	010000b4 	movhi	r4,2
   195b8:	2135de04 	addi	r4,r4,-10376
   195bc:	dc002a15 	stw	r16,168(sp)
   195c0:	dc402b15 	stw	r17,172(sp)
   195c4:	d9002815 	stw	r4,160(sp)
   195c8:	e023883a 	mov	r17,fp
   195cc:	482f883a 	mov	r23,r9
   195d0:	9839883a 	mov	fp,r19
   195d4:	054001c4 	movi	r21,7
   195d8:	9027883a 	mov	r19,r18
   195dc:	dc002717 	ldw	r16,156(sp)
   195e0:	dc802317 	ldw	r18,140(sp)
   195e4:	00000306 	br	195f4 <___svfiprintf_internal_r+0x620>
   195e8:	8c7ffc04 	addi	r17,r17,-16
   195ec:	42000204 	addi	r8,r8,8
   195f0:	bc40130e 	bge	r23,r17,19640 <___svfiprintf_internal_r+0x66c>
   195f4:	014000b4 	movhi	r5,2
   195f8:	18c00404 	addi	r3,r3,16
   195fc:	10800044 	addi	r2,r2,1
   19600:	2975de04 	addi	r5,r5,-10376
   19604:	41400015 	stw	r5,0(r8)
   19608:	45c00115 	stw	r23,4(r8)
   1960c:	d8c01c15 	stw	r3,112(sp)
   19610:	d8801b15 	stw	r2,108(sp)
   19614:	a8bff40e 	bge	r21,r2,195e8 <_gp+0xffff352c>
   19618:	d9801a04 	addi	r6,sp,104
   1961c:	900b883a 	mov	r5,r18
   19620:	8009883a 	mov	r4,r16
   19624:	0018e040 	call	18e04 <__ssprint_r>
   19628:	1001aa1e 	bne	r2,zero,19cd4 <___svfiprintf_internal_r+0xd00>
   1962c:	8c7ffc04 	addi	r17,r17,-16
   19630:	d8c01c17 	ldw	r3,112(sp)
   19634:	d8801b17 	ldw	r2,108(sp)
   19638:	d811883a 	mov	r8,sp
   1963c:	bc7fed16 	blt	r23,r17,195f4 <_gp+0xffff3538>
   19640:	9825883a 	mov	r18,r19
   19644:	dc002a17 	ldw	r16,168(sp)
   19648:	e027883a 	mov	r19,fp
   1964c:	8839883a 	mov	fp,r17
   19650:	dc402b17 	ldw	r17,172(sp)
   19654:	d9002817 	ldw	r4,160(sp)
   19658:	e0c7883a 	add	r3,fp,r3
   1965c:	10800044 	addi	r2,r2,1
   19660:	41000015 	stw	r4,0(r8)
   19664:	47000115 	stw	fp,4(r8)
   19668:	d8c01c15 	stw	r3,112(sp)
   1966c:	d8801b15 	stw	r2,108(sp)
   19670:	010001c4 	movi	r4,7
   19674:	20821616 	blt	r4,r2,19ed0 <___svfiprintf_internal_r+0xefc>
   19678:	42000204 	addi	r8,r8,8
   1967c:	0000fa06 	br	19a68 <___svfiprintf_internal_r+0xa94>
   19680:	8821883a 	mov	r16,r17
   19684:	dc402103 	ldbu	r17,132(sp)
   19688:	b811883a 	mov	r8,r23
   1968c:	8c403fcc 	andi	r17,r17,255
   19690:	8803361e 	bne	r17,zero,1a36c <___svfiprintf_internal_r+0x1398>
   19694:	014000b4 	movhi	r5,2
   19698:	29757504 	addi	r5,r5,-10796
   1969c:	d9402915 	stw	r5,164(sp)
   196a0:	8080080c 	andi	r2,r16,32
   196a4:	103f331e 	bne	r2,zero,19374 <_gp+0xffff32b8>
   196a8:	8080040c 	andi	r2,r16,16
   196ac:	1002551e 	bne	r2,zero,1a004 <___svfiprintf_internal_r+0x1030>
   196b0:	8080100c 	andi	r2,r16,64
   196b4:	1002a626 	beq	r2,zero,1a150 <___svfiprintf_internal_r+0x117c>
   196b8:	d8802417 	ldw	r2,144(sp)
   196bc:	0029883a 	mov	r20,zero
   196c0:	1480000b 	ldhu	r18,0(r2)
   196c4:	10800104 	addi	r2,r2,4
   196c8:	d8802415 	stw	r2,144(sp)
   196cc:	003f2e06 	br	19388 <_gp+0xffff32cc>
   196d0:	8821883a 	mov	r16,r17
   196d4:	dc402103 	ldbu	r17,132(sp)
   196d8:	b811883a 	mov	r8,r23
   196dc:	8c403fcc 	andi	r17,r17,255
   196e0:	88030b1e 	bne	r17,zero,1a310 <___svfiprintf_internal_r+0x133c>
   196e4:	8080080c 	andi	r2,r16,32
   196e8:	1002271e 	bne	r2,zero,19f88 <___svfiprintf_internal_r+0xfb4>
   196ec:	8080040c 	andi	r2,r16,16
   196f0:	10028e26 	beq	r2,zero,1a12c <___svfiprintf_internal_r+0x1158>
   196f4:	d8c02417 	ldw	r3,144(sp)
   196f8:	d9002617 	ldw	r4,152(sp)
   196fc:	18800017 	ldw	r2,0(r3)
   19700:	18c00104 	addi	r3,r3,4
   19704:	d8c02415 	stw	r3,144(sp)
   19708:	11000015 	stw	r4,0(r2)
   1970c:	003e5306 	br	1905c <_gp+0xffff2fa0>
   19710:	98c00007 	ldb	r3,0(r19)
   19714:	01401b04 	movi	r5,108
   19718:	19424f26 	beq	r3,r5,1a058 <___svfiprintf_internal_r+0x1084>
   1971c:	8c400414 	ori	r17,r17,16
   19720:	003e7806 	br	19104 <_gp+0xffff3048>
   19724:	8c401014 	ori	r17,r17,64
   19728:	98c00007 	ldb	r3,0(r19)
   1972c:	003e7506 	br	19104 <_gp+0xffff3048>
   19730:	8821883a 	mov	r16,r17
   19734:	dc402103 	ldbu	r17,132(sp)
   19738:	b811883a 	mov	r8,r23
   1973c:	8c403fcc 	andi	r17,r17,255
   19740:	8802fe1e 	bne	r17,zero,1a33c <___svfiprintf_internal_r+0x1368>
   19744:	8080080c 	andi	r2,r16,32
   19748:	10004626 	beq	r2,zero,19864 <___svfiprintf_internal_r+0x890>
   1974c:	d9002417 	ldw	r4,144(sp)
   19750:	20800117 	ldw	r2,4(r4)
   19754:	24800017 	ldw	r18,0(r4)
   19758:	21000204 	addi	r4,r4,8
   1975c:	d9002415 	stw	r4,144(sp)
   19760:	1029883a 	mov	r20,r2
   19764:	10004a16 	blt	r2,zero,19890 <___svfiprintf_internal_r+0x8bc>
   19768:	d9002017 	ldw	r4,128(sp)
   1976c:	dd401d83 	ldbu	r21,118(sp)
   19770:	2001eb16 	blt	r4,zero,19f20 <___svfiprintf_internal_r+0xf4c>
   19774:	00ffdfc4 	movi	r3,-129
   19778:	9504b03a 	or	r2,r18,r20
   1977c:	80e0703a 	and	r16,r16,r3
   19780:	103f3326 	beq	r2,zero,19450 <_gp+0xffff3394>
   19784:	a0009426 	beq	r20,zero,199d8 <___svfiprintf_internal_r+0xa04>
   19788:	dc401a04 	addi	r17,sp,104
   1978c:	402f883a 	mov	r23,r8
   19790:	9009883a 	mov	r4,r18
   19794:	a00b883a 	mov	r5,r20
   19798:	01800284 	movi	r6,10
   1979c:	000f883a 	mov	r7,zero
   197a0:	001b10c0 	call	1b10c <__umoddi3>
   197a4:	10800c04 	addi	r2,r2,48
   197a8:	8c7fffc4 	addi	r17,r17,-1
   197ac:	9009883a 	mov	r4,r18
   197b0:	a00b883a 	mov	r5,r20
   197b4:	88800005 	stb	r2,0(r17)
   197b8:	01800284 	movi	r6,10
   197bc:	000f883a 	mov	r7,zero
   197c0:	001ab100 	call	1ab10 <__udivdi3>
   197c4:	1025883a 	mov	r18,r2
   197c8:	10c4b03a 	or	r2,r2,r3
   197cc:	1829883a 	mov	r20,r3
   197d0:	103fef1e 	bne	r2,zero,19790 <_gp+0xffff36d4>
   197d4:	d9001e17 	ldw	r4,120(sp)
   197d8:	b811883a 	mov	r8,r23
   197dc:	2469c83a 	sub	r20,r4,r17
   197e0:	003f2006 	br	19464 <_gp+0xffff33a8>
   197e4:	d8802417 	ldw	r2,144(sp)
   197e8:	8821883a 	mov	r16,r17
   197ec:	d8001d85 	stb	zero,118(sp)
   197f0:	14400017 	ldw	r17,0(r2)
   197f4:	b811883a 	mov	r8,r23
   197f8:	15c00104 	addi	r23,r2,4
   197fc:	88026c26 	beq	r17,zero,1a1b0 <___svfiprintf_internal_r+0x11dc>
   19800:	d8c02017 	ldw	r3,128(sp)
   19804:	18025f16 	blt	r3,zero,1a184 <___svfiprintf_internal_r+0x11b0>
   19808:	180d883a 	mov	r6,r3
   1980c:	000b883a 	mov	r5,zero
   19810:	8809883a 	mov	r4,r17
   19814:	da002d15 	stw	r8,180(sp)
   19818:	00178bc0 	call	178bc <memchr>
   1981c:	da002d17 	ldw	r8,180(sp)
   19820:	1002a526 	beq	r2,zero,1a2b8 <___svfiprintf_internal_r+0x12e4>
   19824:	1469c83a 	sub	r20,r2,r17
   19828:	dd401d83 	ldbu	r21,118(sp)
   1982c:	ddc02415 	stw	r23,144(sp)
   19830:	d8002015 	stw	zero,128(sp)
   19834:	003f0b06 	br	19464 <_gp+0xffff33a8>
   19838:	8c400814 	ori	r17,r17,32
   1983c:	98c00007 	ldb	r3,0(r19)
   19840:	003e3006 	br	19104 <_gp+0xffff3048>
   19844:	8821883a 	mov	r16,r17
   19848:	dc402103 	ldbu	r17,132(sp)
   1984c:	b811883a 	mov	r8,r23
   19850:	8c403fcc 	andi	r17,r17,255
   19854:	8802b01e 	bne	r17,zero,1a318 <___svfiprintf_internal_r+0x1344>
   19858:	84000414 	ori	r16,r16,16
   1985c:	8080080c 	andi	r2,r16,32
   19860:	103fba1e 	bne	r2,zero,1974c <_gp+0xffff3690>
   19864:	8080040c 	andi	r2,r16,16
   19868:	1001df1e 	bne	r2,zero,19fe8 <___svfiprintf_internal_r+0x1014>
   1986c:	8080100c 	andi	r2,r16,64
   19870:	10023d26 	beq	r2,zero,1a168 <___svfiprintf_internal_r+0x1194>
   19874:	d8802417 	ldw	r2,144(sp)
   19878:	1480000f 	ldh	r18,0(r2)
   1987c:	10800104 	addi	r2,r2,4
   19880:	d8802415 	stw	r2,144(sp)
   19884:	9029d7fa 	srai	r20,r18,31
   19888:	a005883a 	mov	r2,r20
   1988c:	103fb60e 	bge	r2,zero,19768 <_gp+0xffff36ac>
   19890:	d9402017 	ldw	r5,128(sp)
   19894:	04a5c83a 	sub	r18,zero,r18
   19898:	05400b44 	movi	r21,45
   1989c:	9004c03a 	cmpne	r2,r18,zero
   198a0:	0529c83a 	sub	r20,zero,r20
   198a4:	dd401d85 	stb	r21,118(sp)
   198a8:	a0a9c83a 	sub	r20,r20,r2
   198ac:	28026c16 	blt	r5,zero,1a260 <___svfiprintf_internal_r+0x128c>
   198b0:	00bfdfc4 	movi	r2,-129
   198b4:	80a0703a 	and	r16,r16,r2
   198b8:	a03fb31e 	bne	r20,zero,19788 <_gp+0xffff36cc>
   198bc:	00004606 	br	199d8 <___svfiprintf_internal_r+0xa04>
   198c0:	9839883a 	mov	fp,r19
   198c4:	d8002515 	stw	zero,148(sp)
   198c8:	1c3ff404 	addi	r16,r3,-48
   198cc:	0009883a 	mov	r4,zero
   198d0:	01400284 	movi	r5,10
   198d4:	00122700 	call	12270 <__mulsi3>
   198d8:	e0c00007 	ldb	r3,0(fp)
   198dc:	8089883a 	add	r4,r16,r2
   198e0:	9cc00044 	addi	r19,r19,1
   198e4:	1c3ff404 	addi	r16,r3,-48
   198e8:	9839883a 	mov	fp,r19
   198ec:	a43ff82e 	bgeu	r20,r16,198d0 <_gp+0xffff3814>
   198f0:	d9002515 	stw	r4,148(sp)
   198f4:	18bff804 	addi	r2,r3,-32
   198f8:	90be052e 	bgeu	r18,r2,19110 <_gp+0xffff3054>
   198fc:	8821883a 	mov	r16,r17
   19900:	dc402103 	ldbu	r17,132(sp)
   19904:	b811883a 	mov	r8,r23
   19908:	8c403fcc 	andi	r17,r17,255
   1990c:	88028d1e 	bne	r17,zero,1a344 <___svfiprintf_internal_r+0x1370>
   19910:	1800ea26 	beq	r3,zero,19cbc <___svfiprintf_internal_r+0xce8>
   19914:	04800044 	movi	r18,1
   19918:	d8c01005 	stb	r3,64(sp)
   1991c:	d8001d85 	stb	zero,118(sp)
   19920:	9029883a 	mov	r20,r18
   19924:	dc401004 	addi	r17,sp,64
   19928:	003f1306 	br	19578 <_gp+0xffff34bc>
   1992c:	8c402014 	ori	r17,r17,128
   19930:	98c00007 	ldb	r3,0(r19)
   19934:	003df306 	br	19104 <_gp+0xffff3048>
   19938:	98c00007 	ldb	r3,0(r19)
   1993c:	01000a84 	movi	r4,42
   19940:	9f000044 	addi	fp,r19,1
   19944:	19026326 	beq	r3,r4,1a2d4 <___svfiprintf_internal_r+0x1300>
   19948:	1c3ff404 	addi	r16,r3,-48
   1994c:	0009883a 	mov	r4,zero
   19950:	a4025636 	bltu	r20,r16,1a2ac <___svfiprintf_internal_r+0x12d8>
   19954:	01400284 	movi	r5,10
   19958:	00122700 	call	12270 <__mulsi3>
   1995c:	e0c00007 	ldb	r3,0(fp)
   19960:	1409883a 	add	r4,r2,r16
   19964:	e4c00044 	addi	r19,fp,1
   19968:	1c3ff404 	addi	r16,r3,-48
   1996c:	9839883a 	mov	fp,r19
   19970:	a43ff82e 	bgeu	r20,r16,19954 <_gp+0xffff3898>
   19974:	20020c16 	blt	r4,zero,1a1a8 <___svfiprintf_internal_r+0x11d4>
   19978:	d9002015 	stw	r4,128(sp)
   1997c:	003de206 	br	19108 <_gp+0xffff304c>
   19980:	8821883a 	mov	r16,r17
   19984:	dc402103 	ldbu	r17,132(sp)
   19988:	b811883a 	mov	r8,r23
   1998c:	8c403fcc 	andi	r17,r17,255
   19990:	8802721e 	bne	r17,zero,1a35c <___svfiprintf_internal_r+0x1388>
   19994:	84000414 	ori	r16,r16,16
   19998:	8080080c 	andi	r2,r16,32
   1999c:	103e9f1e 	bne	r2,zero,1941c <_gp+0xffff3360>
   199a0:	8080040c 	andi	r2,r16,16
   199a4:	10015326 	beq	r2,zero,19ef4 <___svfiprintf_internal_r+0xf20>
   199a8:	d8c02417 	ldw	r3,144(sp)
   199ac:	d9002017 	ldw	r4,128(sp)
   199b0:	d8001d85 	stb	zero,118(sp)
   199b4:	18800104 	addi	r2,r3,4
   199b8:	1c800017 	ldw	r18,0(r3)
   199bc:	0029883a 	mov	r20,zero
   199c0:	20015516 	blt	r4,zero,19f18 <___svfiprintf_internal_r+0xf44>
   199c4:	00ffdfc4 	movi	r3,-129
   199c8:	d8802415 	stw	r2,144(sp)
   199cc:	80e0703a 	and	r16,r16,r3
   199d0:	002b883a 	mov	r21,zero
   199d4:	903e9e26 	beq	r18,zero,19450 <_gp+0xffff3394>
   199d8:	00800244 	movi	r2,9
   199dc:	14bf6a36 	bltu	r2,r18,19788 <_gp+0xffff36cc>
   199e0:	94800c04 	addi	r18,r18,48
   199e4:	dc8019c5 	stb	r18,103(sp)
   199e8:	dd002c17 	ldw	r20,176(sp)
   199ec:	dc4019c4 	addi	r17,sp,103
   199f0:	003e9c06 	br	19464 <_gp+0xffff33a8>
   199f4:	8821883a 	mov	r16,r17
   199f8:	dc402103 	ldbu	r17,132(sp)
   199fc:	b811883a 	mov	r8,r23
   19a00:	8c403fcc 	andi	r17,r17,255
   19a04:	8802571e 	bne	r17,zero,1a364 <___svfiprintf_internal_r+0x1390>
   19a08:	84000414 	ori	r16,r16,16
   19a0c:	8080080c 	andi	r2,r16,32
   19a10:	103ea91e 	bne	r2,zero,194b8 <_gp+0xffff33fc>
   19a14:	8080040c 	andi	r2,r16,16
   19a18:	10018026 	beq	r2,zero,1a01c <___svfiprintf_internal_r+0x1048>
   19a1c:	d9402417 	ldw	r5,144(sp)
   19a20:	d8c02017 	ldw	r3,128(sp)
   19a24:	d8001d85 	stb	zero,118(sp)
   19a28:	28800104 	addi	r2,r5,4
   19a2c:	2c800017 	ldw	r18,0(r5)
   19a30:	0029883a 	mov	r20,zero
   19a34:	18018216 	blt	r3,zero,1a040 <___svfiprintf_internal_r+0x106c>
   19a38:	00ffdfc4 	movi	r3,-129
   19a3c:	d8802415 	stw	r2,144(sp)
   19a40:	80e0703a 	and	r16,r16,r3
   19a44:	903ea81e 	bne	r18,zero,194e8 <_gp+0xffff342c>
   19a48:	d8802017 	ldw	r2,128(sp)
   19a4c:	002b883a 	mov	r21,zero
   19a50:	1001f226 	beq	r2,zero,1a21c <___svfiprintf_internal_r+0x1248>
   19a54:	0025883a 	mov	r18,zero
   19a58:	0029883a 	mov	r20,zero
   19a5c:	003ea306 	br	194ec <_gp+0xffff3430>
   19a60:	d8c01c17 	ldw	r3,112(sp)
   19a64:	d8801b17 	ldw	r2,108(sp)
   19a68:	d9001d87 	ldb	r4,118(sp)
   19a6c:	20000b26 	beq	r4,zero,19a9c <___svfiprintf_internal_r+0xac8>
   19a70:	d9001d84 	addi	r4,sp,118
   19a74:	18c00044 	addi	r3,r3,1
   19a78:	10800044 	addi	r2,r2,1
   19a7c:	41000015 	stw	r4,0(r8)
   19a80:	01000044 	movi	r4,1
   19a84:	41000115 	stw	r4,4(r8)
   19a88:	d8c01c15 	stw	r3,112(sp)
   19a8c:	d8801b15 	stw	r2,108(sp)
   19a90:	010001c4 	movi	r4,7
   19a94:	2080f316 	blt	r4,r2,19e64 <___svfiprintf_internal_r+0xe90>
   19a98:	42000204 	addi	r8,r8,8
   19a9c:	d9402117 	ldw	r5,132(sp)
   19aa0:	28000b26 	beq	r5,zero,19ad0 <___svfiprintf_internal_r+0xafc>
   19aa4:	d9001d04 	addi	r4,sp,116
   19aa8:	18c00084 	addi	r3,r3,2
   19aac:	10800044 	addi	r2,r2,1
   19ab0:	41000015 	stw	r4,0(r8)
   19ab4:	01000084 	movi	r4,2
   19ab8:	41000115 	stw	r4,4(r8)
   19abc:	d8c01c15 	stw	r3,112(sp)
   19ac0:	d8801b15 	stw	r2,108(sp)
   19ac4:	010001c4 	movi	r4,7
   19ac8:	2080ef16 	blt	r4,r2,19e88 <___svfiprintf_internal_r+0xeb4>
   19acc:	42000204 	addi	r8,r8,8
   19ad0:	d9402217 	ldw	r5,136(sp)
   19ad4:	01002004 	movi	r4,128
   19ad8:	29008f26 	beq	r5,r4,19d18 <___svfiprintf_internal_r+0xd44>
   19adc:	d9002017 	ldw	r4,128(sp)
   19ae0:	252fc83a 	sub	r23,r4,r20
   19ae4:	05c0310e 	bge	zero,r23,19bac <___svfiprintf_internal_r+0xbd8>
   19ae8:	07000404 	movi	fp,16
   19aec:	e5c17d0e 	bge	fp,r23,1a0e4 <___svfiprintf_internal_r+0x1110>
   19af0:	010000b4 	movhi	r4,2
   19af4:	2135da04 	addi	r4,r4,-10392
   19af8:	dc002015 	stw	r16,128(sp)
   19afc:	dc402215 	stw	r17,136(sp)
   19b00:	d9002115 	stw	r4,132(sp)
   19b04:	b823883a 	mov	r17,r23
   19b08:	054001c4 	movi	r21,7
   19b0c:	982f883a 	mov	r23,r19
   19b10:	dc002717 	ldw	r16,156(sp)
   19b14:	9027883a 	mov	r19,r18
   19b18:	dc802317 	ldw	r18,140(sp)
   19b1c:	00000306 	br	19b2c <___svfiprintf_internal_r+0xb58>
   19b20:	8c7ffc04 	addi	r17,r17,-16
   19b24:	42000204 	addi	r8,r8,8
   19b28:	e440110e 	bge	fp,r17,19b70 <___svfiprintf_internal_r+0xb9c>
   19b2c:	18c00404 	addi	r3,r3,16
   19b30:	10800044 	addi	r2,r2,1
   19b34:	45800015 	stw	r22,0(r8)
   19b38:	47000115 	stw	fp,4(r8)
   19b3c:	d8c01c15 	stw	r3,112(sp)
   19b40:	d8801b15 	stw	r2,108(sp)
   19b44:	a8bff60e 	bge	r21,r2,19b20 <_gp+0xffff3a64>
   19b48:	d9801a04 	addi	r6,sp,104
   19b4c:	900b883a 	mov	r5,r18
   19b50:	8009883a 	mov	r4,r16
   19b54:	0018e040 	call	18e04 <__ssprint_r>
   19b58:	10005e1e 	bne	r2,zero,19cd4 <___svfiprintf_internal_r+0xd00>
   19b5c:	8c7ffc04 	addi	r17,r17,-16
   19b60:	d8c01c17 	ldw	r3,112(sp)
   19b64:	d8801b17 	ldw	r2,108(sp)
   19b68:	d811883a 	mov	r8,sp
   19b6c:	e47fef16 	blt	fp,r17,19b2c <_gp+0xffff3a70>
   19b70:	9825883a 	mov	r18,r19
   19b74:	dc002017 	ldw	r16,128(sp)
   19b78:	b827883a 	mov	r19,r23
   19b7c:	882f883a 	mov	r23,r17
   19b80:	dc402217 	ldw	r17,136(sp)
   19b84:	d9402117 	ldw	r5,132(sp)
   19b88:	1dc7883a 	add	r3,r3,r23
   19b8c:	10800044 	addi	r2,r2,1
   19b90:	41400015 	stw	r5,0(r8)
   19b94:	45c00115 	stw	r23,4(r8)
   19b98:	d8c01c15 	stw	r3,112(sp)
   19b9c:	d8801b15 	stw	r2,108(sp)
   19ba0:	010001c4 	movi	r4,7
   19ba4:	2080a616 	blt	r4,r2,19e40 <___svfiprintf_internal_r+0xe6c>
   19ba8:	42000204 	addi	r8,r8,8
   19bac:	a0c7883a 	add	r3,r20,r3
   19bb0:	10800044 	addi	r2,r2,1
   19bb4:	44400015 	stw	r17,0(r8)
   19bb8:	45000115 	stw	r20,4(r8)
   19bbc:	d8c01c15 	stw	r3,112(sp)
   19bc0:	d8801b15 	stw	r2,108(sp)
   19bc4:	010001c4 	movi	r4,7
   19bc8:	20808816 	blt	r4,r2,19dec <___svfiprintf_internal_r+0xe18>
   19bcc:	42000204 	addi	r8,r8,8
   19bd0:	8400010c 	andi	r16,r16,4
   19bd4:	80002c26 	beq	r16,zero,19c88 <___svfiprintf_internal_r+0xcb4>
   19bd8:	d8802517 	ldw	r2,148(sp)
   19bdc:	14a1c83a 	sub	r16,r2,r18
   19be0:	0400290e 	bge	zero,r16,19c88 <___svfiprintf_internal_r+0xcb4>
   19be4:	04400404 	movi	r17,16
   19be8:	d8801b17 	ldw	r2,108(sp)
   19bec:	8c01a70e 	bge	r17,r16,1a28c <___svfiprintf_internal_r+0x12b8>
   19bf0:	014000b4 	movhi	r5,2
   19bf4:	2975de04 	addi	r5,r5,-10376
   19bf8:	d9402815 	stw	r5,160(sp)
   19bfc:	050001c4 	movi	r20,7
   19c00:	dd402717 	ldw	r21,156(sp)
   19c04:	ddc02317 	ldw	r23,140(sp)
   19c08:	00000306 	br	19c18 <___svfiprintf_internal_r+0xc44>
   19c0c:	843ffc04 	addi	r16,r16,-16
   19c10:	42000204 	addi	r8,r8,8
   19c14:	8c00130e 	bge	r17,r16,19c64 <___svfiprintf_internal_r+0xc90>
   19c18:	010000b4 	movhi	r4,2
   19c1c:	18c00404 	addi	r3,r3,16
   19c20:	10800044 	addi	r2,r2,1
   19c24:	2135de04 	addi	r4,r4,-10376
   19c28:	41000015 	stw	r4,0(r8)
   19c2c:	44400115 	stw	r17,4(r8)
   19c30:	d8c01c15 	stw	r3,112(sp)
   19c34:	d8801b15 	stw	r2,108(sp)
   19c38:	a0bff40e 	bge	r20,r2,19c0c <_gp+0xffff3b50>
   19c3c:	d9801a04 	addi	r6,sp,104
   19c40:	b80b883a 	mov	r5,r23
   19c44:	a809883a 	mov	r4,r21
   19c48:	0018e040 	call	18e04 <__ssprint_r>
   19c4c:	1000211e 	bne	r2,zero,19cd4 <___svfiprintf_internal_r+0xd00>
   19c50:	843ffc04 	addi	r16,r16,-16
   19c54:	d8c01c17 	ldw	r3,112(sp)
   19c58:	d8801b17 	ldw	r2,108(sp)
   19c5c:	d811883a 	mov	r8,sp
   19c60:	8c3fed16 	blt	r17,r16,19c18 <_gp+0xffff3b5c>
   19c64:	d9402817 	ldw	r5,160(sp)
   19c68:	1c07883a 	add	r3,r3,r16
   19c6c:	10800044 	addi	r2,r2,1
   19c70:	41400015 	stw	r5,0(r8)
   19c74:	44000115 	stw	r16,4(r8)
   19c78:	d8c01c15 	stw	r3,112(sp)
   19c7c:	d8801b15 	stw	r2,108(sp)
   19c80:	010001c4 	movi	r4,7
   19c84:	2080b516 	blt	r4,r2,19f5c <___svfiprintf_internal_r+0xf88>
   19c88:	d8802517 	ldw	r2,148(sp)
   19c8c:	1480010e 	bge	r2,r18,19c94 <___svfiprintf_internal_r+0xcc0>
   19c90:	9005883a 	mov	r2,r18
   19c94:	d9002617 	ldw	r4,152(sp)
   19c98:	2089883a 	add	r4,r4,r2
   19c9c:	d9002615 	stw	r4,152(sp)
   19ca0:	18005a1e 	bne	r3,zero,19e0c <___svfiprintf_internal_r+0xe38>
   19ca4:	98800007 	ldb	r2,0(r19)
   19ca8:	d8001b15 	stw	zero,108(sp)
   19cac:	d811883a 	mov	r8,sp
   19cb0:	103cec1e 	bne	r2,zero,19064 <_gp+0xffff2fa8>
   19cb4:	9825883a 	mov	r18,r19
   19cb8:	003d0206 	br	190c4 <_gp+0xffff3008>
   19cbc:	d8801c17 	ldw	r2,112(sp)
   19cc0:	10000426 	beq	r2,zero,19cd4 <___svfiprintf_internal_r+0xd00>
   19cc4:	d9402317 	ldw	r5,140(sp)
   19cc8:	d9002717 	ldw	r4,156(sp)
   19ccc:	d9801a04 	addi	r6,sp,104
   19cd0:	0018e040 	call	18e04 <__ssprint_r>
   19cd4:	d9402317 	ldw	r5,140(sp)
   19cd8:	d8802617 	ldw	r2,152(sp)
   19cdc:	28c0030b 	ldhu	r3,12(r5)
   19ce0:	18c0100c 	andi	r3,r3,64
   19ce4:	18015c1e 	bne	r3,zero,1a258 <___svfiprintf_internal_r+0x1284>
   19ce8:	dfc03717 	ldw	ra,220(sp)
   19cec:	df003617 	ldw	fp,216(sp)
   19cf0:	ddc03517 	ldw	r23,212(sp)
   19cf4:	dd803417 	ldw	r22,208(sp)
   19cf8:	dd403317 	ldw	r21,204(sp)
   19cfc:	dd003217 	ldw	r20,200(sp)
   19d00:	dcc03117 	ldw	r19,196(sp)
   19d04:	dc803017 	ldw	r18,192(sp)
   19d08:	dc402f17 	ldw	r17,188(sp)
   19d0c:	dc002e17 	ldw	r16,184(sp)
   19d10:	dec03804 	addi	sp,sp,224
   19d14:	f800283a 	ret
   19d18:	d9002517 	ldw	r4,148(sp)
   19d1c:	24afc83a 	sub	r23,r4,r18
   19d20:	05ff6e0e 	bge	zero,r23,19adc <_gp+0xffff3a20>
   19d24:	07000404 	movi	fp,16
   19d28:	e5c15c0e 	bge	fp,r23,1a29c <___svfiprintf_internal_r+0x12c8>
   19d2c:	010000b4 	movhi	r4,2
   19d30:	2135da04 	addi	r4,r4,-10392
   19d34:	dc002215 	stw	r16,136(sp)
   19d38:	dc402815 	stw	r17,160(sp)
   19d3c:	d9002115 	stw	r4,132(sp)
   19d40:	b823883a 	mov	r17,r23
   19d44:	054001c4 	movi	r21,7
   19d48:	982f883a 	mov	r23,r19
   19d4c:	dc002717 	ldw	r16,156(sp)
   19d50:	9027883a 	mov	r19,r18
   19d54:	dc802317 	ldw	r18,140(sp)
   19d58:	00000306 	br	19d68 <___svfiprintf_internal_r+0xd94>
   19d5c:	8c7ffc04 	addi	r17,r17,-16
   19d60:	42000204 	addi	r8,r8,8
   19d64:	e440110e 	bge	fp,r17,19dac <___svfiprintf_internal_r+0xdd8>
   19d68:	18c00404 	addi	r3,r3,16
   19d6c:	10800044 	addi	r2,r2,1
   19d70:	45800015 	stw	r22,0(r8)
   19d74:	47000115 	stw	fp,4(r8)
   19d78:	d8c01c15 	stw	r3,112(sp)
   19d7c:	d8801b15 	stw	r2,108(sp)
   19d80:	a8bff60e 	bge	r21,r2,19d5c <_gp+0xffff3ca0>
   19d84:	d9801a04 	addi	r6,sp,104
   19d88:	900b883a 	mov	r5,r18
   19d8c:	8009883a 	mov	r4,r16
   19d90:	0018e040 	call	18e04 <__ssprint_r>
   19d94:	103fcf1e 	bne	r2,zero,19cd4 <_gp+0xffff3c18>
   19d98:	8c7ffc04 	addi	r17,r17,-16
   19d9c:	d8c01c17 	ldw	r3,112(sp)
   19da0:	d8801b17 	ldw	r2,108(sp)
   19da4:	d811883a 	mov	r8,sp
   19da8:	e47fef16 	blt	fp,r17,19d68 <_gp+0xffff3cac>
   19dac:	9825883a 	mov	r18,r19
   19db0:	dc002217 	ldw	r16,136(sp)
   19db4:	b827883a 	mov	r19,r23
   19db8:	882f883a 	mov	r23,r17
   19dbc:	dc402817 	ldw	r17,160(sp)
   19dc0:	d9402117 	ldw	r5,132(sp)
   19dc4:	1dc7883a 	add	r3,r3,r23
   19dc8:	10800044 	addi	r2,r2,1
   19dcc:	41400015 	stw	r5,0(r8)
   19dd0:	45c00115 	stw	r23,4(r8)
   19dd4:	d8c01c15 	stw	r3,112(sp)
   19dd8:	d8801b15 	stw	r2,108(sp)
   19ddc:	010001c4 	movi	r4,7
   19de0:	2080b716 	blt	r4,r2,1a0c0 <___svfiprintf_internal_r+0x10ec>
   19de4:	42000204 	addi	r8,r8,8
   19de8:	003f3c06 	br	19adc <_gp+0xffff3a20>
   19dec:	d9402317 	ldw	r5,140(sp)
   19df0:	d9002717 	ldw	r4,156(sp)
   19df4:	d9801a04 	addi	r6,sp,104
   19df8:	0018e040 	call	18e04 <__ssprint_r>
   19dfc:	103fb51e 	bne	r2,zero,19cd4 <_gp+0xffff3c18>
   19e00:	d8c01c17 	ldw	r3,112(sp)
   19e04:	d811883a 	mov	r8,sp
   19e08:	003f7106 	br	19bd0 <_gp+0xffff3b14>
   19e0c:	d9402317 	ldw	r5,140(sp)
   19e10:	d9002717 	ldw	r4,156(sp)
   19e14:	d9801a04 	addi	r6,sp,104
   19e18:	0018e040 	call	18e04 <__ssprint_r>
   19e1c:	103fa126 	beq	r2,zero,19ca4 <_gp+0xffff3be8>
   19e20:	003fac06 	br	19cd4 <_gp+0xffff3c18>
   19e24:	d9402317 	ldw	r5,140(sp)
   19e28:	d9002717 	ldw	r4,156(sp)
   19e2c:	d9801a04 	addi	r6,sp,104
   19e30:	0018e040 	call	18e04 <__ssprint_r>
   19e34:	103fa71e 	bne	r2,zero,19cd4 <_gp+0xffff3c18>
   19e38:	d811883a 	mov	r8,sp
   19e3c:	003c9e06 	br	190b8 <_gp+0xffff2ffc>
   19e40:	d9402317 	ldw	r5,140(sp)
   19e44:	d9002717 	ldw	r4,156(sp)
   19e48:	d9801a04 	addi	r6,sp,104
   19e4c:	0018e040 	call	18e04 <__ssprint_r>
   19e50:	103fa01e 	bne	r2,zero,19cd4 <_gp+0xffff3c18>
   19e54:	d8c01c17 	ldw	r3,112(sp)
   19e58:	d8801b17 	ldw	r2,108(sp)
   19e5c:	d811883a 	mov	r8,sp
   19e60:	003f5206 	br	19bac <_gp+0xffff3af0>
   19e64:	d9402317 	ldw	r5,140(sp)
   19e68:	d9002717 	ldw	r4,156(sp)
   19e6c:	d9801a04 	addi	r6,sp,104
   19e70:	0018e040 	call	18e04 <__ssprint_r>
   19e74:	103f971e 	bne	r2,zero,19cd4 <_gp+0xffff3c18>
   19e78:	d8c01c17 	ldw	r3,112(sp)
   19e7c:	d8801b17 	ldw	r2,108(sp)
   19e80:	d811883a 	mov	r8,sp
   19e84:	003f0506 	br	19a9c <_gp+0xffff39e0>
   19e88:	d9402317 	ldw	r5,140(sp)
   19e8c:	d9002717 	ldw	r4,156(sp)
   19e90:	d9801a04 	addi	r6,sp,104
   19e94:	0018e040 	call	18e04 <__ssprint_r>
   19e98:	103f8e1e 	bne	r2,zero,19cd4 <_gp+0xffff3c18>
   19e9c:	d8c01c17 	ldw	r3,112(sp)
   19ea0:	d8801b17 	ldw	r2,108(sp)
   19ea4:	d811883a 	mov	r8,sp
   19ea8:	003f0906 	br	19ad0 <_gp+0xffff3a14>
   19eac:	d9402017 	ldw	r5,128(sp)
   19eb0:	d8001d85 	stb	zero,118(sp)
   19eb4:	28007716 	blt	r5,zero,1a094 <___svfiprintf_internal_r+0x10c0>
   19eb8:	00ffdfc4 	movi	r3,-129
   19ebc:	9504b03a 	or	r2,r18,r20
   19ec0:	80e0703a 	and	r16,r16,r3
   19ec4:	103d3926 	beq	r2,zero,193ac <_gp+0xffff32f0>
   19ec8:	002b883a 	mov	r21,zero
   19ecc:	003d3c06 	br	193c0 <_gp+0xffff3304>
   19ed0:	d9402317 	ldw	r5,140(sp)
   19ed4:	d9002717 	ldw	r4,156(sp)
   19ed8:	d9801a04 	addi	r6,sp,104
   19edc:	0018e040 	call	18e04 <__ssprint_r>
   19ee0:	103f7c1e 	bne	r2,zero,19cd4 <_gp+0xffff3c18>
   19ee4:	d8c01c17 	ldw	r3,112(sp)
   19ee8:	d8801b17 	ldw	r2,108(sp)
   19eec:	d811883a 	mov	r8,sp
   19ef0:	003edd06 	br	19a68 <_gp+0xffff39ac>
   19ef4:	8080100c 	andi	r2,r16,64
   19ef8:	d8001d85 	stb	zero,118(sp)
   19efc:	10008426 	beq	r2,zero,1a110 <___svfiprintf_internal_r+0x113c>
   19f00:	d9402417 	ldw	r5,144(sp)
   19f04:	d8c02017 	ldw	r3,128(sp)
   19f08:	0029883a 	mov	r20,zero
   19f0c:	28800104 	addi	r2,r5,4
   19f10:	2c80000b 	ldhu	r18,0(r5)
   19f14:	183eab0e 	bge	r3,zero,199c4 <_gp+0xffff3908>
   19f18:	d8802415 	stw	r2,144(sp)
   19f1c:	002b883a 	mov	r21,zero
   19f20:	9504b03a 	or	r2,r18,r20
   19f24:	103e171e 	bne	r2,zero,19784 <_gp+0xffff36c8>
   19f28:	00800044 	movi	r2,1
   19f2c:	10803fcc 	andi	r2,r2,255
   19f30:	00c00044 	movi	r3,1
   19f34:	10c05c26 	beq	r2,r3,1a0a8 <___svfiprintf_internal_r+0x10d4>
   19f38:	00c00084 	movi	r3,2
   19f3c:	10fd1e26 	beq	r2,r3,193b8 <_gp+0xffff32fc>
   19f40:	003ec406 	br	19a54 <_gp+0xffff3998>
   19f44:	d9401e17 	ldw	r5,120(sp)
   19f48:	2c69c83a 	sub	r20,r5,r17
   19f4c:	003d4506 	br	19464 <_gp+0xffff33a8>
   19f50:	d8802415 	stw	r2,144(sp)
   19f54:	98c00007 	ldb	r3,0(r19)
   19f58:	003c6a06 	br	19104 <_gp+0xffff3048>
   19f5c:	d9402317 	ldw	r5,140(sp)
   19f60:	d9002717 	ldw	r4,156(sp)
   19f64:	d9801a04 	addi	r6,sp,104
   19f68:	0018e040 	call	18e04 <__ssprint_r>
   19f6c:	103f591e 	bne	r2,zero,19cd4 <_gp+0xffff3c18>
   19f70:	d8c01c17 	ldw	r3,112(sp)
   19f74:	003f4406 	br	19c88 <_gp+0xffff3bcc>
   19f78:	014000b4 	movhi	r5,2
   19f7c:	29757a04 	addi	r5,r5,-10776
   19f80:	d9402915 	stw	r5,164(sp)
   19f84:	003d0906 	br	193ac <_gp+0xffff32f0>
   19f88:	d8c02417 	ldw	r3,144(sp)
   19f8c:	d9002617 	ldw	r4,152(sp)
   19f90:	d9402417 	ldw	r5,144(sp)
   19f94:	18800017 	ldw	r2,0(r3)
   19f98:	2007d7fa 	srai	r3,r4,31
   19f9c:	29400104 	addi	r5,r5,4
   19fa0:	d9402415 	stw	r5,144(sp)
   19fa4:	11000015 	stw	r4,0(r2)
   19fa8:	10c00115 	stw	r3,4(r2)
   19fac:	003c2b06 	br	1905c <_gp+0xffff2fa0>
   19fb0:	d8c01d45 	stb	r3,117(sp)
   19fb4:	d8c02017 	ldw	r3,128(sp)
   19fb8:	00800c04 	movi	r2,48
   19fbc:	d8801d05 	stb	r2,116(sp)
   19fc0:	d8001d85 	stb	zero,118(sp)
   19fc4:	80800094 	ori	r2,r16,2
   19fc8:	1800ac16 	blt	r3,zero,1a27c <___svfiprintf_internal_r+0x12a8>
   19fcc:	00bfdfc4 	movi	r2,-129
   19fd0:	80a0703a 	and	r16,r16,r2
   19fd4:	84000094 	ori	r16,r16,2
   19fd8:	002b883a 	mov	r21,zero
   19fdc:	003cf806 	br	193c0 <_gp+0xffff3304>
   19fe0:	98c00007 	ldb	r3,0(r19)
   19fe4:	003c4706 	br	19104 <_gp+0xffff3048>
   19fe8:	d9402417 	ldw	r5,144(sp)
   19fec:	2c800017 	ldw	r18,0(r5)
   19ff0:	29400104 	addi	r5,r5,4
   19ff4:	d9402415 	stw	r5,144(sp)
   19ff8:	9029d7fa 	srai	r20,r18,31
   19ffc:	a005883a 	mov	r2,r20
   1a000:	003dd806 	br	19764 <_gp+0xffff36a8>
   1a004:	d9402417 	ldw	r5,144(sp)
   1a008:	0029883a 	mov	r20,zero
   1a00c:	2c800017 	ldw	r18,0(r5)
   1a010:	29400104 	addi	r5,r5,4
   1a014:	d9402415 	stw	r5,144(sp)
   1a018:	003cdb06 	br	19388 <_gp+0xffff32cc>
   1a01c:	8080100c 	andi	r2,r16,64
   1a020:	d8001d85 	stb	zero,118(sp)
   1a024:	10003326 	beq	r2,zero,1a0f4 <___svfiprintf_internal_r+0x1120>
   1a028:	d9002417 	ldw	r4,144(sp)
   1a02c:	d9402017 	ldw	r5,128(sp)
   1a030:	0029883a 	mov	r20,zero
   1a034:	20800104 	addi	r2,r4,4
   1a038:	2480000b 	ldhu	r18,0(r4)
   1a03c:	283e7e0e 	bge	r5,zero,19a38 <_gp+0xffff397c>
   1a040:	9506b03a 	or	r3,r18,r20
   1a044:	d8802415 	stw	r2,144(sp)
   1a048:	183d271e 	bne	r3,zero,194e8 <_gp+0xffff342c>
   1a04c:	002b883a 	mov	r21,zero
   1a050:	0005883a 	mov	r2,zero
   1a054:	003fb506 	br	19f2c <_gp+0xffff3e70>
   1a058:	98c00043 	ldbu	r3,1(r19)
   1a05c:	8c400814 	ori	r17,r17,32
   1a060:	9cc00044 	addi	r19,r19,1
   1a064:	18c03fcc 	andi	r3,r3,255
   1a068:	18c0201c 	xori	r3,r3,128
   1a06c:	18ffe004 	addi	r3,r3,-128
   1a070:	003c2406 	br	19104 <_gp+0xffff3048>
   1a074:	d8c02415 	stw	r3,144(sp)
   1a078:	002b883a 	mov	r21,zero
   1a07c:	003fa806 	br	19f20 <_gp+0xffff3e64>
   1a080:	010000b4 	movhi	r4,2
   1a084:	21357a04 	addi	r4,r4,-10776
   1a088:	d9002915 	stw	r4,164(sp)
   1a08c:	d8c02415 	stw	r3,144(sp)
   1a090:	1021883a 	mov	r16,r2
   1a094:	9504b03a 	or	r2,r18,r20
   1a098:	103f8b1e 	bne	r2,zero,19ec8 <_gp+0xffff3e0c>
   1a09c:	002b883a 	mov	r21,zero
   1a0a0:	00800084 	movi	r2,2
   1a0a4:	003fa106 	br	19f2c <_gp+0xffff3e70>
   1a0a8:	0025883a 	mov	r18,zero
   1a0ac:	94800c04 	addi	r18,r18,48
   1a0b0:	dc8019c5 	stb	r18,103(sp)
   1a0b4:	dd002c17 	ldw	r20,176(sp)
   1a0b8:	dc4019c4 	addi	r17,sp,103
   1a0bc:	003ce906 	br	19464 <_gp+0xffff33a8>
   1a0c0:	d9402317 	ldw	r5,140(sp)
   1a0c4:	d9002717 	ldw	r4,156(sp)
   1a0c8:	d9801a04 	addi	r6,sp,104
   1a0cc:	0018e040 	call	18e04 <__ssprint_r>
   1a0d0:	103f001e 	bne	r2,zero,19cd4 <_gp+0xffff3c18>
   1a0d4:	d8c01c17 	ldw	r3,112(sp)
   1a0d8:	d8801b17 	ldw	r2,108(sp)
   1a0dc:	d811883a 	mov	r8,sp
   1a0e0:	003e7e06 	br	19adc <_gp+0xffff3a20>
   1a0e4:	014000b4 	movhi	r5,2
   1a0e8:	2975da04 	addi	r5,r5,-10392
   1a0ec:	d9402115 	stw	r5,132(sp)
   1a0f0:	003ea406 	br	19b84 <_gp+0xffff3ac8>
   1a0f4:	d8c02417 	ldw	r3,144(sp)
   1a0f8:	d9002017 	ldw	r4,128(sp)
   1a0fc:	0029883a 	mov	r20,zero
   1a100:	18800104 	addi	r2,r3,4
   1a104:	1c800017 	ldw	r18,0(r3)
   1a108:	203e4b0e 	bge	r4,zero,19a38 <_gp+0xffff397c>
   1a10c:	003fcc06 	br	1a040 <_gp+0xffff3f84>
   1a110:	d9002417 	ldw	r4,144(sp)
   1a114:	d9402017 	ldw	r5,128(sp)
   1a118:	0029883a 	mov	r20,zero
   1a11c:	20800104 	addi	r2,r4,4
   1a120:	24800017 	ldw	r18,0(r4)
   1a124:	283e270e 	bge	r5,zero,199c4 <_gp+0xffff3908>
   1a128:	003f7b06 	br	19f18 <_gp+0xffff3e5c>
   1a12c:	8400100c 	andi	r16,r16,64
   1a130:	80003326 	beq	r16,zero,1a200 <___svfiprintf_internal_r+0x122c>
   1a134:	d9402417 	ldw	r5,144(sp)
   1a138:	d8c02617 	ldw	r3,152(sp)
   1a13c:	28800017 	ldw	r2,0(r5)
   1a140:	29400104 	addi	r5,r5,4
   1a144:	d9402415 	stw	r5,144(sp)
   1a148:	10c0000d 	sth	r3,0(r2)
   1a14c:	003bc306 	br	1905c <_gp+0xffff2fa0>
   1a150:	d9002417 	ldw	r4,144(sp)
   1a154:	0029883a 	mov	r20,zero
   1a158:	24800017 	ldw	r18,0(r4)
   1a15c:	21000104 	addi	r4,r4,4
   1a160:	d9002415 	stw	r4,144(sp)
   1a164:	003c8806 	br	19388 <_gp+0xffff32cc>
   1a168:	d8c02417 	ldw	r3,144(sp)
   1a16c:	1c800017 	ldw	r18,0(r3)
   1a170:	18c00104 	addi	r3,r3,4
   1a174:	d8c02415 	stw	r3,144(sp)
   1a178:	9029d7fa 	srai	r20,r18,31
   1a17c:	a005883a 	mov	r2,r20
   1a180:	003d7806 	br	19764 <_gp+0xffff36a8>
   1a184:	8809883a 	mov	r4,r17
   1a188:	da002d15 	stw	r8,180(sp)
   1a18c:	0018d6c0 	call	18d6c <strlen>
   1a190:	1029883a 	mov	r20,r2
   1a194:	dd401d83 	ldbu	r21,118(sp)
   1a198:	ddc02415 	stw	r23,144(sp)
   1a19c:	d8002015 	stw	zero,128(sp)
   1a1a0:	da002d17 	ldw	r8,180(sp)
   1a1a4:	003caf06 	br	19464 <_gp+0xffff33a8>
   1a1a8:	013fffc4 	movi	r4,-1
   1a1ac:	003df206 	br	19978 <_gp+0xffff38bc>
   1a1b0:	dd002017 	ldw	r20,128(sp)
   1a1b4:	00800184 	movi	r2,6
   1a1b8:	1500012e 	bgeu	r2,r20,1a1c0 <___svfiprintf_internal_r+0x11ec>
   1a1bc:	1029883a 	mov	r20,r2
   1a1c0:	a025883a 	mov	r18,r20
   1a1c4:	a0004116 	blt	r20,zero,1a2cc <___svfiprintf_internal_r+0x12f8>
   1a1c8:	044000b4 	movhi	r17,2
   1a1cc:	ddc02415 	stw	r23,144(sp)
   1a1d0:	8c757f04 	addi	r17,r17,-10756
   1a1d4:	003ce806 	br	19578 <_gp+0xffff34bc>
   1a1d8:	04001004 	movi	r16,64
   1a1dc:	800b883a 	mov	r5,r16
   1a1e0:	001239c0 	call	1239c <_malloc_r>
   1a1e4:	d8c02317 	ldw	r3,140(sp)
   1a1e8:	18800015 	stw	r2,0(r3)
   1a1ec:	18800415 	stw	r2,16(r3)
   1a1f0:	10004d26 	beq	r2,zero,1a328 <___svfiprintf_internal_r+0x1354>
   1a1f4:	d9402317 	ldw	r5,140(sp)
   1a1f8:	2c000515 	stw	r16,20(r5)
   1a1fc:	003b8906 	br	19024 <_gp+0xffff2f68>
   1a200:	d9002417 	ldw	r4,144(sp)
   1a204:	d9402617 	ldw	r5,152(sp)
   1a208:	20800017 	ldw	r2,0(r4)
   1a20c:	21000104 	addi	r4,r4,4
   1a210:	d9002415 	stw	r4,144(sp)
   1a214:	11400015 	stw	r5,0(r2)
   1a218:	003b9006 	br	1905c <_gp+0xffff2fa0>
   1a21c:	8080004c 	andi	r2,r16,1
   1a220:	002b883a 	mov	r21,zero
   1a224:	10000526 	beq	r2,zero,1a23c <___svfiprintf_internal_r+0x1268>
   1a228:	00800c04 	movi	r2,48
   1a22c:	d88019c5 	stb	r2,103(sp)
   1a230:	dd002c17 	ldw	r20,176(sp)
   1a234:	dc4019c4 	addi	r17,sp,103
   1a238:	003c8a06 	br	19464 <_gp+0xffff33a8>
   1a23c:	0029883a 	mov	r20,zero
   1a240:	dc401a04 	addi	r17,sp,104
   1a244:	003c8706 	br	19464 <_gp+0xffff33a8>
   1a248:	014000b4 	movhi	r5,2
   1a24c:	2975de04 	addi	r5,r5,-10376
   1a250:	d9402815 	stw	r5,160(sp)
   1a254:	003cff06 	br	19654 <_gp+0xffff3598>
   1a258:	00bfffc4 	movi	r2,-1
   1a25c:	003ea206 	br	19ce8 <_gp+0xffff3c2c>
   1a260:	00800044 	movi	r2,1
   1a264:	10803fcc 	andi	r2,r2,255
   1a268:	00c00044 	movi	r3,1
   1a26c:	10fd4526 	beq	r2,r3,19784 <_gp+0xffff36c8>
   1a270:	00c00084 	movi	r3,2
   1a274:	10fc5226 	beq	r2,r3,193c0 <_gp+0xffff3304>
   1a278:	003c9c06 	br	194ec <_gp+0xffff3430>
   1a27c:	1021883a 	mov	r16,r2
   1a280:	002b883a 	mov	r21,zero
   1a284:	00800084 	movi	r2,2
   1a288:	003ff606 	br	1a264 <_gp+0xffff41a8>
   1a28c:	010000b4 	movhi	r4,2
   1a290:	2135de04 	addi	r4,r4,-10376
   1a294:	d9002815 	stw	r4,160(sp)
   1a298:	003e7206 	br	19c64 <_gp+0xffff3ba8>
   1a29c:	014000b4 	movhi	r5,2
   1a2a0:	2975da04 	addi	r5,r5,-10392
   1a2a4:	d9402115 	stw	r5,132(sp)
   1a2a8:	003ec506 	br	19dc0 <_gp+0xffff3d04>
   1a2ac:	e027883a 	mov	r19,fp
   1a2b0:	d8002015 	stw	zero,128(sp)
   1a2b4:	003b9406 	br	19108 <_gp+0xffff304c>
   1a2b8:	dd002017 	ldw	r20,128(sp)
   1a2bc:	dd401d83 	ldbu	r21,118(sp)
   1a2c0:	ddc02415 	stw	r23,144(sp)
   1a2c4:	d8002015 	stw	zero,128(sp)
   1a2c8:	003c6606 	br	19464 <_gp+0xffff33a8>
   1a2cc:	0025883a 	mov	r18,zero
   1a2d0:	003fbd06 	br	1a1c8 <_gp+0xffff410c>
   1a2d4:	d9402417 	ldw	r5,144(sp)
   1a2d8:	d8c02417 	ldw	r3,144(sp)
   1a2dc:	29400017 	ldw	r5,0(r5)
   1a2e0:	19000104 	addi	r4,r3,4
   1a2e4:	d9002415 	stw	r4,144(sp)
   1a2e8:	d9402015 	stw	r5,128(sp)
   1a2ec:	98c00043 	ldbu	r3,1(r19)
   1a2f0:	e027883a 	mov	r19,fp
   1a2f4:	283f5b0e 	bge	r5,zero,1a064 <_gp+0xffff3fa8>
   1a2f8:	18c03fcc 	andi	r3,r3,255
   1a2fc:	013fffc4 	movi	r4,-1
   1a300:	18c0201c 	xori	r3,r3,128
   1a304:	d9002015 	stw	r4,128(sp)
   1a308:	18ffe004 	addi	r3,r3,-128
   1a30c:	003b7d06 	br	19104 <_gp+0xffff3048>
   1a310:	dd401d85 	stb	r21,118(sp)
   1a314:	003cf306 	br	196e4 <_gp+0xffff3628>
   1a318:	dd401d85 	stb	r21,118(sp)
   1a31c:	003d4e06 	br	19858 <_gp+0xffff379c>
   1a320:	dd401d85 	stb	r21,118(sp)
   1a324:	003c0e06 	br	19360 <_gp+0xffff32a4>
   1a328:	d9002717 	ldw	r4,156(sp)
   1a32c:	00800304 	movi	r2,12
   1a330:	20800015 	stw	r2,0(r4)
   1a334:	00bfffc4 	movi	r2,-1
   1a338:	003e6b06 	br	19ce8 <_gp+0xffff3c2c>
   1a33c:	dd401d85 	stb	r21,118(sp)
   1a340:	003d0006 	br	19744 <_gp+0xffff3688>
   1a344:	dd401d85 	stb	r21,118(sp)
   1a348:	003d7106 	br	19910 <_gp+0xffff3854>
   1a34c:	dd401d85 	stb	r21,118(sp)
   1a350:	003c5706 	br	194b0 <_gp+0xffff33f4>
   1a354:	dd401d85 	stb	r21,118(sp)
   1a358:	003c2e06 	br	19414 <_gp+0xffff3358>
   1a35c:	dd401d85 	stb	r21,118(sp)
   1a360:	003d8c06 	br	19994 <_gp+0xffff38d8>
   1a364:	dd401d85 	stb	r21,118(sp)
   1a368:	003da706 	br	19a08 <_gp+0xffff394c>
   1a36c:	dd401d85 	stb	r21,118(sp)
   1a370:	003cc806 	br	19694 <_gp+0xffff35d8>

0001a374 <_calloc_r>:
   1a374:	defffe04 	addi	sp,sp,-8
   1a378:	2805883a 	mov	r2,r5
   1a37c:	dc000015 	stw	r16,0(sp)
   1a380:	300b883a 	mov	r5,r6
   1a384:	2021883a 	mov	r16,r4
   1a388:	1009883a 	mov	r4,r2
   1a38c:	dfc00115 	stw	ra,4(sp)
   1a390:	00122700 	call	12270 <__mulsi3>
   1a394:	100b883a 	mov	r5,r2
   1a398:	8009883a 	mov	r4,r16
   1a39c:	001239c0 	call	1239c <_malloc_r>
   1a3a0:	10002926 	beq	r2,zero,1a448 <_calloc_r+0xd4>
   1a3a4:	11bfff17 	ldw	r6,-4(r2)
   1a3a8:	1021883a 	mov	r16,r2
   1a3ac:	00bfff04 	movi	r2,-4
   1a3b0:	308c703a 	and	r6,r6,r2
   1a3b4:	00c00904 	movi	r3,36
   1a3b8:	308d883a 	add	r6,r6,r2
   1a3bc:	19801636 	bltu	r3,r6,1a418 <_calloc_r+0xa4>
   1a3c0:	008004c4 	movi	r2,19
   1a3c4:	11800b2e 	bgeu	r2,r6,1a3f4 <_calloc_r+0x80>
   1a3c8:	80000015 	stw	zero,0(r16)
   1a3cc:	80000115 	stw	zero,4(r16)
   1a3d0:	008006c4 	movi	r2,27
   1a3d4:	11801a2e 	bgeu	r2,r6,1a440 <_calloc_r+0xcc>
   1a3d8:	80000215 	stw	zero,8(r16)
   1a3dc:	80000315 	stw	zero,12(r16)
   1a3e0:	30c0151e 	bne	r6,r3,1a438 <_calloc_r+0xc4>
   1a3e4:	80000415 	stw	zero,16(r16)
   1a3e8:	80800604 	addi	r2,r16,24
   1a3ec:	80000515 	stw	zero,20(r16)
   1a3f0:	00000106 	br	1a3f8 <_calloc_r+0x84>
   1a3f4:	8005883a 	mov	r2,r16
   1a3f8:	10000015 	stw	zero,0(r2)
   1a3fc:	10000115 	stw	zero,4(r2)
   1a400:	10000215 	stw	zero,8(r2)
   1a404:	8005883a 	mov	r2,r16
   1a408:	dfc00117 	ldw	ra,4(sp)
   1a40c:	dc000017 	ldw	r16,0(sp)
   1a410:	dec00204 	addi	sp,sp,8
   1a414:	f800283a 	ret
   1a418:	000b883a 	mov	r5,zero
   1a41c:	8009883a 	mov	r4,r16
   1a420:	0012ba80 	call	12ba8 <memset>
   1a424:	8005883a 	mov	r2,r16
   1a428:	dfc00117 	ldw	ra,4(sp)
   1a42c:	dc000017 	ldw	r16,0(sp)
   1a430:	dec00204 	addi	sp,sp,8
   1a434:	f800283a 	ret
   1a438:	80800404 	addi	r2,r16,16
   1a43c:	003fee06 	br	1a3f8 <_gp+0xffff433c>
   1a440:	80800204 	addi	r2,r16,8
   1a444:	003fec06 	br	1a3f8 <_gp+0xffff433c>
   1a448:	0005883a 	mov	r2,zero
   1a44c:	003fee06 	br	1a408 <_gp+0xffff434c>

0001a450 <memmove>:
   1a450:	2005883a 	mov	r2,r4
   1a454:	29000b2e 	bgeu	r5,r4,1a484 <memmove+0x34>
   1a458:	298f883a 	add	r7,r5,r6
   1a45c:	21c0092e 	bgeu	r4,r7,1a484 <memmove+0x34>
   1a460:	2187883a 	add	r3,r4,r6
   1a464:	198bc83a 	sub	r5,r3,r6
   1a468:	30004826 	beq	r6,zero,1a58c <memmove+0x13c>
   1a46c:	39ffffc4 	addi	r7,r7,-1
   1a470:	39000003 	ldbu	r4,0(r7)
   1a474:	18ffffc4 	addi	r3,r3,-1
   1a478:	19000005 	stb	r4,0(r3)
   1a47c:	28fffb1e 	bne	r5,r3,1a46c <_gp+0xffff43b0>
   1a480:	f800283a 	ret
   1a484:	00c003c4 	movi	r3,15
   1a488:	1980412e 	bgeu	r3,r6,1a590 <memmove+0x140>
   1a48c:	2886b03a 	or	r3,r5,r2
   1a490:	18c000cc 	andi	r3,r3,3
   1a494:	1800401e 	bne	r3,zero,1a598 <memmove+0x148>
   1a498:	33fffc04 	addi	r15,r6,-16
   1a49c:	781ed13a 	srli	r15,r15,4
   1a4a0:	28c00104 	addi	r3,r5,4
   1a4a4:	13400104 	addi	r13,r2,4
   1a4a8:	781c913a 	slli	r14,r15,4
   1a4ac:	2b000204 	addi	r12,r5,8
   1a4b0:	12c00204 	addi	r11,r2,8
   1a4b4:	73800504 	addi	r14,r14,20
   1a4b8:	2a800304 	addi	r10,r5,12
   1a4bc:	12400304 	addi	r9,r2,12
   1a4c0:	2b9d883a 	add	r14,r5,r14
   1a4c4:	2811883a 	mov	r8,r5
   1a4c8:	100f883a 	mov	r7,r2
   1a4cc:	41000017 	ldw	r4,0(r8)
   1a4d0:	39c00404 	addi	r7,r7,16
   1a4d4:	18c00404 	addi	r3,r3,16
   1a4d8:	393ffc15 	stw	r4,-16(r7)
   1a4dc:	193ffc17 	ldw	r4,-16(r3)
   1a4e0:	6b400404 	addi	r13,r13,16
   1a4e4:	5ac00404 	addi	r11,r11,16
   1a4e8:	693ffc15 	stw	r4,-16(r13)
   1a4ec:	61000017 	ldw	r4,0(r12)
   1a4f0:	4a400404 	addi	r9,r9,16
   1a4f4:	42000404 	addi	r8,r8,16
   1a4f8:	593ffc15 	stw	r4,-16(r11)
   1a4fc:	51000017 	ldw	r4,0(r10)
   1a500:	63000404 	addi	r12,r12,16
   1a504:	52800404 	addi	r10,r10,16
   1a508:	493ffc15 	stw	r4,-16(r9)
   1a50c:	1bbfef1e 	bne	r3,r14,1a4cc <_gp+0xffff4410>
   1a510:	79000044 	addi	r4,r15,1
   1a514:	2008913a 	slli	r4,r4,4
   1a518:	328003cc 	andi	r10,r6,15
   1a51c:	02c000c4 	movi	r11,3
   1a520:	1107883a 	add	r3,r2,r4
   1a524:	290b883a 	add	r5,r5,r4
   1a528:	5a801e2e 	bgeu	r11,r10,1a5a4 <memmove+0x154>
   1a52c:	1813883a 	mov	r9,r3
   1a530:	2811883a 	mov	r8,r5
   1a534:	500f883a 	mov	r7,r10
   1a538:	41000017 	ldw	r4,0(r8)
   1a53c:	4a400104 	addi	r9,r9,4
   1a540:	39ffff04 	addi	r7,r7,-4
   1a544:	493fff15 	stw	r4,-4(r9)
   1a548:	42000104 	addi	r8,r8,4
   1a54c:	59fffa36 	bltu	r11,r7,1a538 <_gp+0xffff447c>
   1a550:	513fff04 	addi	r4,r10,-4
   1a554:	2008d0ba 	srli	r4,r4,2
   1a558:	318000cc 	andi	r6,r6,3
   1a55c:	21000044 	addi	r4,r4,1
   1a560:	2109883a 	add	r4,r4,r4
   1a564:	2109883a 	add	r4,r4,r4
   1a568:	1907883a 	add	r3,r3,r4
   1a56c:	290b883a 	add	r5,r5,r4
   1a570:	30000b26 	beq	r6,zero,1a5a0 <memmove+0x150>
   1a574:	198d883a 	add	r6,r3,r6
   1a578:	29c00003 	ldbu	r7,0(r5)
   1a57c:	18c00044 	addi	r3,r3,1
   1a580:	29400044 	addi	r5,r5,1
   1a584:	19ffffc5 	stb	r7,-1(r3)
   1a588:	19bffb1e 	bne	r3,r6,1a578 <_gp+0xffff44bc>
   1a58c:	f800283a 	ret
   1a590:	1007883a 	mov	r3,r2
   1a594:	003ff606 	br	1a570 <_gp+0xffff44b4>
   1a598:	1007883a 	mov	r3,r2
   1a59c:	003ff506 	br	1a574 <_gp+0xffff44b8>
   1a5a0:	f800283a 	ret
   1a5a4:	500d883a 	mov	r6,r10
   1a5a8:	003ff106 	br	1a570 <_gp+0xffff44b4>

0001a5ac <_realloc_r>:
   1a5ac:	defff604 	addi	sp,sp,-40
   1a5b0:	dc800215 	stw	r18,8(sp)
   1a5b4:	dfc00915 	stw	ra,36(sp)
   1a5b8:	df000815 	stw	fp,32(sp)
   1a5bc:	ddc00715 	stw	r23,28(sp)
   1a5c0:	dd800615 	stw	r22,24(sp)
   1a5c4:	dd400515 	stw	r21,20(sp)
   1a5c8:	dd000415 	stw	r20,16(sp)
   1a5cc:	dcc00315 	stw	r19,12(sp)
   1a5d0:	dc400115 	stw	r17,4(sp)
   1a5d4:	dc000015 	stw	r16,0(sp)
   1a5d8:	3025883a 	mov	r18,r6
   1a5dc:	2800b726 	beq	r5,zero,1a8bc <_realloc_r+0x310>
   1a5e0:	282b883a 	mov	r21,r5
   1a5e4:	2029883a 	mov	r20,r4
   1a5e8:	001ce800 	call	1ce80 <__malloc_lock>
   1a5ec:	a8bfff17 	ldw	r2,-4(r21)
   1a5f0:	043fff04 	movi	r16,-4
   1a5f4:	90c002c4 	addi	r3,r18,11
   1a5f8:	01000584 	movi	r4,22
   1a5fc:	acfffe04 	addi	r19,r21,-8
   1a600:	1420703a 	and	r16,r2,r16
   1a604:	20c0332e 	bgeu	r4,r3,1a6d4 <_realloc_r+0x128>
   1a608:	047ffe04 	movi	r17,-8
   1a60c:	1c62703a 	and	r17,r3,r17
   1a610:	8807883a 	mov	r3,r17
   1a614:	88005816 	blt	r17,zero,1a778 <_realloc_r+0x1cc>
   1a618:	8c805736 	bltu	r17,r18,1a778 <_realloc_r+0x1cc>
   1a61c:	80c0300e 	bge	r16,r3,1a6e0 <_realloc_r+0x134>
   1a620:	070000b4 	movhi	fp,2
   1a624:	e736ee04 	addi	fp,fp,-9288
   1a628:	e1c00217 	ldw	r7,8(fp)
   1a62c:	9c09883a 	add	r4,r19,r16
   1a630:	22000117 	ldw	r8,4(r4)
   1a634:	21c06326 	beq	r4,r7,1a7c4 <_realloc_r+0x218>
   1a638:	017fff84 	movi	r5,-2
   1a63c:	414a703a 	and	r5,r8,r5
   1a640:	214b883a 	add	r5,r4,r5
   1a644:	29800117 	ldw	r6,4(r5)
   1a648:	3180004c 	andi	r6,r6,1
   1a64c:	30003f26 	beq	r6,zero,1a74c <_realloc_r+0x1a0>
   1a650:	1080004c 	andi	r2,r2,1
   1a654:	10008326 	beq	r2,zero,1a864 <_realloc_r+0x2b8>
   1a658:	900b883a 	mov	r5,r18
   1a65c:	a009883a 	mov	r4,r20
   1a660:	001239c0 	call	1239c <_malloc_r>
   1a664:	1025883a 	mov	r18,r2
   1a668:	10011e26 	beq	r2,zero,1aae4 <_realloc_r+0x538>
   1a66c:	a93fff17 	ldw	r4,-4(r21)
   1a670:	10fffe04 	addi	r3,r2,-8
   1a674:	00bfff84 	movi	r2,-2
   1a678:	2084703a 	and	r2,r4,r2
   1a67c:	9885883a 	add	r2,r19,r2
   1a680:	1880ee26 	beq	r3,r2,1aa3c <_realloc_r+0x490>
   1a684:	81bfff04 	addi	r6,r16,-4
   1a688:	00800904 	movi	r2,36
   1a68c:	1180b836 	bltu	r2,r6,1a970 <_realloc_r+0x3c4>
   1a690:	00c004c4 	movi	r3,19
   1a694:	19809636 	bltu	r3,r6,1a8f0 <_realloc_r+0x344>
   1a698:	9005883a 	mov	r2,r18
   1a69c:	a807883a 	mov	r3,r21
   1a6a0:	19000017 	ldw	r4,0(r3)
   1a6a4:	11000015 	stw	r4,0(r2)
   1a6a8:	19000117 	ldw	r4,4(r3)
   1a6ac:	11000115 	stw	r4,4(r2)
   1a6b0:	18c00217 	ldw	r3,8(r3)
   1a6b4:	10c00215 	stw	r3,8(r2)
   1a6b8:	a80b883a 	mov	r5,r21
   1a6bc:	a009883a 	mov	r4,r20
   1a6c0:	00174d00 	call	174d0 <_free_r>
   1a6c4:	a009883a 	mov	r4,r20
   1a6c8:	001ce840 	call	1ce84 <__malloc_unlock>
   1a6cc:	9005883a 	mov	r2,r18
   1a6d0:	00001206 	br	1a71c <_realloc_r+0x170>
   1a6d4:	00c00404 	movi	r3,16
   1a6d8:	1823883a 	mov	r17,r3
   1a6dc:	003fce06 	br	1a618 <_gp+0xffff455c>
   1a6e0:	a825883a 	mov	r18,r21
   1a6e4:	8445c83a 	sub	r2,r16,r17
   1a6e8:	00c003c4 	movi	r3,15
   1a6ec:	18802636 	bltu	r3,r2,1a788 <_realloc_r+0x1dc>
   1a6f0:	99800117 	ldw	r6,4(r19)
   1a6f4:	9c07883a 	add	r3,r19,r16
   1a6f8:	3180004c 	andi	r6,r6,1
   1a6fc:	3420b03a 	or	r16,r6,r16
   1a700:	9c000115 	stw	r16,4(r19)
   1a704:	18800117 	ldw	r2,4(r3)
   1a708:	10800054 	ori	r2,r2,1
   1a70c:	18800115 	stw	r2,4(r3)
   1a710:	a009883a 	mov	r4,r20
   1a714:	001ce840 	call	1ce84 <__malloc_unlock>
   1a718:	9005883a 	mov	r2,r18
   1a71c:	dfc00917 	ldw	ra,36(sp)
   1a720:	df000817 	ldw	fp,32(sp)
   1a724:	ddc00717 	ldw	r23,28(sp)
   1a728:	dd800617 	ldw	r22,24(sp)
   1a72c:	dd400517 	ldw	r21,20(sp)
   1a730:	dd000417 	ldw	r20,16(sp)
   1a734:	dcc00317 	ldw	r19,12(sp)
   1a738:	dc800217 	ldw	r18,8(sp)
   1a73c:	dc400117 	ldw	r17,4(sp)
   1a740:	dc000017 	ldw	r16,0(sp)
   1a744:	dec00a04 	addi	sp,sp,40
   1a748:	f800283a 	ret
   1a74c:	017fff04 	movi	r5,-4
   1a750:	414a703a 	and	r5,r8,r5
   1a754:	814d883a 	add	r6,r16,r5
   1a758:	30c01f16 	blt	r6,r3,1a7d8 <_realloc_r+0x22c>
   1a75c:	20800317 	ldw	r2,12(r4)
   1a760:	20c00217 	ldw	r3,8(r4)
   1a764:	a825883a 	mov	r18,r21
   1a768:	3021883a 	mov	r16,r6
   1a76c:	18800315 	stw	r2,12(r3)
   1a770:	10c00215 	stw	r3,8(r2)
   1a774:	003fdb06 	br	1a6e4 <_gp+0xffff4628>
   1a778:	00800304 	movi	r2,12
   1a77c:	a0800015 	stw	r2,0(r20)
   1a780:	0005883a 	mov	r2,zero
   1a784:	003fe506 	br	1a71c <_gp+0xffff4660>
   1a788:	98c00117 	ldw	r3,4(r19)
   1a78c:	9c4b883a 	add	r5,r19,r17
   1a790:	11000054 	ori	r4,r2,1
   1a794:	18c0004c 	andi	r3,r3,1
   1a798:	1c62b03a 	or	r17,r3,r17
   1a79c:	9c400115 	stw	r17,4(r19)
   1a7a0:	29000115 	stw	r4,4(r5)
   1a7a4:	2885883a 	add	r2,r5,r2
   1a7a8:	10c00117 	ldw	r3,4(r2)
   1a7ac:	29400204 	addi	r5,r5,8
   1a7b0:	a009883a 	mov	r4,r20
   1a7b4:	18c00054 	ori	r3,r3,1
   1a7b8:	10c00115 	stw	r3,4(r2)
   1a7bc:	00174d00 	call	174d0 <_free_r>
   1a7c0:	003fd306 	br	1a710 <_gp+0xffff4654>
   1a7c4:	017fff04 	movi	r5,-4
   1a7c8:	414a703a 	and	r5,r8,r5
   1a7cc:	89800404 	addi	r6,r17,16
   1a7d0:	8151883a 	add	r8,r16,r5
   1a7d4:	4180590e 	bge	r8,r6,1a93c <_realloc_r+0x390>
   1a7d8:	1080004c 	andi	r2,r2,1
   1a7dc:	103f9e1e 	bne	r2,zero,1a658 <_gp+0xffff459c>
   1a7e0:	adbffe17 	ldw	r22,-8(r21)
   1a7e4:	00bfff04 	movi	r2,-4
   1a7e8:	9dadc83a 	sub	r22,r19,r22
   1a7ec:	b1800117 	ldw	r6,4(r22)
   1a7f0:	3084703a 	and	r2,r6,r2
   1a7f4:	20002026 	beq	r4,zero,1a878 <_realloc_r+0x2cc>
   1a7f8:	80af883a 	add	r23,r16,r2
   1a7fc:	b96f883a 	add	r23,r23,r5
   1a800:	21c05f26 	beq	r4,r7,1a980 <_realloc_r+0x3d4>
   1a804:	b8c01c16 	blt	r23,r3,1a878 <_realloc_r+0x2cc>
   1a808:	20800317 	ldw	r2,12(r4)
   1a80c:	20c00217 	ldw	r3,8(r4)
   1a810:	81bfff04 	addi	r6,r16,-4
   1a814:	01000904 	movi	r4,36
   1a818:	18800315 	stw	r2,12(r3)
   1a81c:	10c00215 	stw	r3,8(r2)
   1a820:	b0c00217 	ldw	r3,8(r22)
   1a824:	b0800317 	ldw	r2,12(r22)
   1a828:	b4800204 	addi	r18,r22,8
   1a82c:	18800315 	stw	r2,12(r3)
   1a830:	10c00215 	stw	r3,8(r2)
   1a834:	21801b36 	bltu	r4,r6,1a8a4 <_realloc_r+0x2f8>
   1a838:	008004c4 	movi	r2,19
   1a83c:	1180352e 	bgeu	r2,r6,1a914 <_realloc_r+0x368>
   1a840:	a8800017 	ldw	r2,0(r21)
   1a844:	b0800215 	stw	r2,8(r22)
   1a848:	a8800117 	ldw	r2,4(r21)
   1a84c:	b0800315 	stw	r2,12(r22)
   1a850:	008006c4 	movi	r2,27
   1a854:	11807f36 	bltu	r2,r6,1aa54 <_realloc_r+0x4a8>
   1a858:	b0800404 	addi	r2,r22,16
   1a85c:	ad400204 	addi	r21,r21,8
   1a860:	00002d06 	br	1a918 <_realloc_r+0x36c>
   1a864:	adbffe17 	ldw	r22,-8(r21)
   1a868:	00bfff04 	movi	r2,-4
   1a86c:	9dadc83a 	sub	r22,r19,r22
   1a870:	b1000117 	ldw	r4,4(r22)
   1a874:	2084703a 	and	r2,r4,r2
   1a878:	b03f7726 	beq	r22,zero,1a658 <_gp+0xffff459c>
   1a87c:	80af883a 	add	r23,r16,r2
   1a880:	b8ff7516 	blt	r23,r3,1a658 <_gp+0xffff459c>
   1a884:	b0800317 	ldw	r2,12(r22)
   1a888:	b0c00217 	ldw	r3,8(r22)
   1a88c:	81bfff04 	addi	r6,r16,-4
   1a890:	01000904 	movi	r4,36
   1a894:	18800315 	stw	r2,12(r3)
   1a898:	10c00215 	stw	r3,8(r2)
   1a89c:	b4800204 	addi	r18,r22,8
   1a8a0:	21bfe52e 	bgeu	r4,r6,1a838 <_gp+0xffff477c>
   1a8a4:	a80b883a 	mov	r5,r21
   1a8a8:	9009883a 	mov	r4,r18
   1a8ac:	001a4500 	call	1a450 <memmove>
   1a8b0:	b821883a 	mov	r16,r23
   1a8b4:	b027883a 	mov	r19,r22
   1a8b8:	003f8a06 	br	1a6e4 <_gp+0xffff4628>
   1a8bc:	300b883a 	mov	r5,r6
   1a8c0:	dfc00917 	ldw	ra,36(sp)
   1a8c4:	df000817 	ldw	fp,32(sp)
   1a8c8:	ddc00717 	ldw	r23,28(sp)
   1a8cc:	dd800617 	ldw	r22,24(sp)
   1a8d0:	dd400517 	ldw	r21,20(sp)
   1a8d4:	dd000417 	ldw	r20,16(sp)
   1a8d8:	dcc00317 	ldw	r19,12(sp)
   1a8dc:	dc800217 	ldw	r18,8(sp)
   1a8e0:	dc400117 	ldw	r17,4(sp)
   1a8e4:	dc000017 	ldw	r16,0(sp)
   1a8e8:	dec00a04 	addi	sp,sp,40
   1a8ec:	001239c1 	jmpi	1239c <_malloc_r>
   1a8f0:	a8c00017 	ldw	r3,0(r21)
   1a8f4:	90c00015 	stw	r3,0(r18)
   1a8f8:	a8c00117 	ldw	r3,4(r21)
   1a8fc:	90c00115 	stw	r3,4(r18)
   1a900:	00c006c4 	movi	r3,27
   1a904:	19804536 	bltu	r3,r6,1aa1c <_realloc_r+0x470>
   1a908:	90800204 	addi	r2,r18,8
   1a90c:	a8c00204 	addi	r3,r21,8
   1a910:	003f6306 	br	1a6a0 <_gp+0xffff45e4>
   1a914:	9005883a 	mov	r2,r18
   1a918:	a8c00017 	ldw	r3,0(r21)
   1a91c:	b821883a 	mov	r16,r23
   1a920:	b027883a 	mov	r19,r22
   1a924:	10c00015 	stw	r3,0(r2)
   1a928:	a8c00117 	ldw	r3,4(r21)
   1a92c:	10c00115 	stw	r3,4(r2)
   1a930:	a8c00217 	ldw	r3,8(r21)
   1a934:	10c00215 	stw	r3,8(r2)
   1a938:	003f6a06 	br	1a6e4 <_gp+0xffff4628>
   1a93c:	9c67883a 	add	r19,r19,r17
   1a940:	4445c83a 	sub	r2,r8,r17
   1a944:	e4c00215 	stw	r19,8(fp)
   1a948:	10800054 	ori	r2,r2,1
   1a94c:	98800115 	stw	r2,4(r19)
   1a950:	a8bfff17 	ldw	r2,-4(r21)
   1a954:	a009883a 	mov	r4,r20
   1a958:	1080004c 	andi	r2,r2,1
   1a95c:	1462b03a 	or	r17,r2,r17
   1a960:	ac7fff15 	stw	r17,-4(r21)
   1a964:	001ce840 	call	1ce84 <__malloc_unlock>
   1a968:	a805883a 	mov	r2,r21
   1a96c:	003f6b06 	br	1a71c <_gp+0xffff4660>
   1a970:	a80b883a 	mov	r5,r21
   1a974:	9009883a 	mov	r4,r18
   1a978:	001a4500 	call	1a450 <memmove>
   1a97c:	003f4e06 	br	1a6b8 <_gp+0xffff45fc>
   1a980:	89000404 	addi	r4,r17,16
   1a984:	b93fbc16 	blt	r23,r4,1a878 <_gp+0xffff47bc>
   1a988:	b0800317 	ldw	r2,12(r22)
   1a98c:	b0c00217 	ldw	r3,8(r22)
   1a990:	81bfff04 	addi	r6,r16,-4
   1a994:	01000904 	movi	r4,36
   1a998:	18800315 	stw	r2,12(r3)
   1a99c:	10c00215 	stw	r3,8(r2)
   1a9a0:	b4800204 	addi	r18,r22,8
   1a9a4:	21804336 	bltu	r4,r6,1aab4 <_realloc_r+0x508>
   1a9a8:	008004c4 	movi	r2,19
   1a9ac:	11803f2e 	bgeu	r2,r6,1aaac <_realloc_r+0x500>
   1a9b0:	a8800017 	ldw	r2,0(r21)
   1a9b4:	b0800215 	stw	r2,8(r22)
   1a9b8:	a8800117 	ldw	r2,4(r21)
   1a9bc:	b0800315 	stw	r2,12(r22)
   1a9c0:	008006c4 	movi	r2,27
   1a9c4:	11803f36 	bltu	r2,r6,1aac4 <_realloc_r+0x518>
   1a9c8:	b0800404 	addi	r2,r22,16
   1a9cc:	ad400204 	addi	r21,r21,8
   1a9d0:	a8c00017 	ldw	r3,0(r21)
   1a9d4:	10c00015 	stw	r3,0(r2)
   1a9d8:	a8c00117 	ldw	r3,4(r21)
   1a9dc:	10c00115 	stw	r3,4(r2)
   1a9e0:	a8c00217 	ldw	r3,8(r21)
   1a9e4:	10c00215 	stw	r3,8(r2)
   1a9e8:	b447883a 	add	r3,r22,r17
   1a9ec:	bc45c83a 	sub	r2,r23,r17
   1a9f0:	e0c00215 	stw	r3,8(fp)
   1a9f4:	10800054 	ori	r2,r2,1
   1a9f8:	18800115 	stw	r2,4(r3)
   1a9fc:	b0800117 	ldw	r2,4(r22)
   1aa00:	a009883a 	mov	r4,r20
   1aa04:	1080004c 	andi	r2,r2,1
   1aa08:	1462b03a 	or	r17,r2,r17
   1aa0c:	b4400115 	stw	r17,4(r22)
   1aa10:	001ce840 	call	1ce84 <__malloc_unlock>
   1aa14:	9005883a 	mov	r2,r18
   1aa18:	003f4006 	br	1a71c <_gp+0xffff4660>
   1aa1c:	a8c00217 	ldw	r3,8(r21)
   1aa20:	90c00215 	stw	r3,8(r18)
   1aa24:	a8c00317 	ldw	r3,12(r21)
   1aa28:	90c00315 	stw	r3,12(r18)
   1aa2c:	30801126 	beq	r6,r2,1aa74 <_realloc_r+0x4c8>
   1aa30:	90800404 	addi	r2,r18,16
   1aa34:	a8c00404 	addi	r3,r21,16
   1aa38:	003f1906 	br	1a6a0 <_gp+0xffff45e4>
   1aa3c:	90ffff17 	ldw	r3,-4(r18)
   1aa40:	00bfff04 	movi	r2,-4
   1aa44:	a825883a 	mov	r18,r21
   1aa48:	1884703a 	and	r2,r3,r2
   1aa4c:	80a1883a 	add	r16,r16,r2
   1aa50:	003f2406 	br	1a6e4 <_gp+0xffff4628>
   1aa54:	a8800217 	ldw	r2,8(r21)
   1aa58:	b0800415 	stw	r2,16(r22)
   1aa5c:	a8800317 	ldw	r2,12(r21)
   1aa60:	b0800515 	stw	r2,20(r22)
   1aa64:	31000a26 	beq	r6,r4,1aa90 <_realloc_r+0x4e4>
   1aa68:	b0800604 	addi	r2,r22,24
   1aa6c:	ad400404 	addi	r21,r21,16
   1aa70:	003fa906 	br	1a918 <_gp+0xffff485c>
   1aa74:	a9000417 	ldw	r4,16(r21)
   1aa78:	90800604 	addi	r2,r18,24
   1aa7c:	a8c00604 	addi	r3,r21,24
   1aa80:	91000415 	stw	r4,16(r18)
   1aa84:	a9000517 	ldw	r4,20(r21)
   1aa88:	91000515 	stw	r4,20(r18)
   1aa8c:	003f0406 	br	1a6a0 <_gp+0xffff45e4>
   1aa90:	a8c00417 	ldw	r3,16(r21)
   1aa94:	ad400604 	addi	r21,r21,24
   1aa98:	b0800804 	addi	r2,r22,32
   1aa9c:	b0c00615 	stw	r3,24(r22)
   1aaa0:	a8ffff17 	ldw	r3,-4(r21)
   1aaa4:	b0c00715 	stw	r3,28(r22)
   1aaa8:	003f9b06 	br	1a918 <_gp+0xffff485c>
   1aaac:	9005883a 	mov	r2,r18
   1aab0:	003fc706 	br	1a9d0 <_gp+0xffff4914>
   1aab4:	a80b883a 	mov	r5,r21
   1aab8:	9009883a 	mov	r4,r18
   1aabc:	001a4500 	call	1a450 <memmove>
   1aac0:	003fc906 	br	1a9e8 <_gp+0xffff492c>
   1aac4:	a8800217 	ldw	r2,8(r21)
   1aac8:	b0800415 	stw	r2,16(r22)
   1aacc:	a8800317 	ldw	r2,12(r21)
   1aad0:	b0800515 	stw	r2,20(r22)
   1aad4:	31000726 	beq	r6,r4,1aaf4 <_realloc_r+0x548>
   1aad8:	b0800604 	addi	r2,r22,24
   1aadc:	ad400404 	addi	r21,r21,16
   1aae0:	003fbb06 	br	1a9d0 <_gp+0xffff4914>
   1aae4:	a009883a 	mov	r4,r20
   1aae8:	001ce840 	call	1ce84 <__malloc_unlock>
   1aaec:	0005883a 	mov	r2,zero
   1aaf0:	003f0a06 	br	1a71c <_gp+0xffff4660>
   1aaf4:	a8c00417 	ldw	r3,16(r21)
   1aaf8:	ad400604 	addi	r21,r21,24
   1aafc:	b0800804 	addi	r2,r22,32
   1ab00:	b0c00615 	stw	r3,24(r22)
   1ab04:	a8ffff17 	ldw	r3,-4(r21)
   1ab08:	b0c00715 	stw	r3,28(r22)
   1ab0c:	003fb006 	br	1a9d0 <_gp+0xffff4914>

0001ab10 <__udivdi3>:
   1ab10:	defff404 	addi	sp,sp,-48
   1ab14:	dcc00515 	stw	r19,20(sp)
   1ab18:	dc000215 	stw	r16,8(sp)
   1ab1c:	dfc00b15 	stw	ra,44(sp)
   1ab20:	df000a15 	stw	fp,40(sp)
   1ab24:	ddc00915 	stw	r23,36(sp)
   1ab28:	dd800815 	stw	r22,32(sp)
   1ab2c:	dd400715 	stw	r21,28(sp)
   1ab30:	dd000615 	stw	r20,24(sp)
   1ab34:	dc800415 	stw	r18,16(sp)
   1ab38:	dc400315 	stw	r17,12(sp)
   1ab3c:	2027883a 	mov	r19,r4
   1ab40:	2821883a 	mov	r16,r5
   1ab44:	3800461e 	bne	r7,zero,1ac60 <__udivdi3+0x150>
   1ab48:	3023883a 	mov	r17,r6
   1ab4c:	2025883a 	mov	r18,r4
   1ab50:	2980572e 	bgeu	r5,r6,1acb0 <__udivdi3+0x1a0>
   1ab54:	00bfffd4 	movui	r2,65535
   1ab58:	282d883a 	mov	r22,r5
   1ab5c:	1180b236 	bltu	r2,r6,1ae28 <__udivdi3+0x318>
   1ab60:	00803fc4 	movi	r2,255
   1ab64:	1185803a 	cmpltu	r2,r2,r6
   1ab68:	100490fa 	slli	r2,r2,3
   1ab6c:	3086d83a 	srl	r3,r6,r2
   1ab70:	010000b4 	movhi	r4,2
   1ab74:	21353004 	addi	r4,r4,-11072
   1ab78:	20c7883a 	add	r3,r4,r3
   1ab7c:	18c00003 	ldbu	r3,0(r3)
   1ab80:	1885883a 	add	r2,r3,r2
   1ab84:	00c00804 	movi	r3,32
   1ab88:	1887c83a 	sub	r3,r3,r2
   1ab8c:	18000526 	beq	r3,zero,1aba4 <__udivdi3+0x94>
   1ab90:	80e0983a 	sll	r16,r16,r3
   1ab94:	9884d83a 	srl	r2,r19,r2
   1ab98:	30e2983a 	sll	r17,r6,r3
   1ab9c:	98e4983a 	sll	r18,r19,r3
   1aba0:	142cb03a 	or	r22,r2,r16
   1aba4:	882ad43a 	srli	r21,r17,16
   1aba8:	b009883a 	mov	r4,r22
   1abac:	8d3fffcc 	andi	r20,r17,65535
   1abb0:	a80b883a 	mov	r5,r21
   1abb4:	0010f400 	call	10f40 <__umodsi3>
   1abb8:	b009883a 	mov	r4,r22
   1abbc:	a80b883a 	mov	r5,r21
   1abc0:	1027883a 	mov	r19,r2
   1abc4:	0010edc0 	call	10edc <__udivsi3>
   1abc8:	100b883a 	mov	r5,r2
   1abcc:	a009883a 	mov	r4,r20
   1abd0:	102d883a 	mov	r22,r2
   1abd4:	00122700 	call	12270 <__mulsi3>
   1abd8:	9826943a 	slli	r19,r19,16
   1abdc:	9006d43a 	srli	r3,r18,16
   1abe0:	1cc6b03a 	or	r3,r3,r19
   1abe4:	1880052e 	bgeu	r3,r2,1abfc <__udivdi3+0xec>
   1abe8:	1c47883a 	add	r3,r3,r17
   1abec:	b13fffc4 	addi	r4,r22,-1
   1abf0:	1c400136 	bltu	r3,r17,1abf8 <__udivdi3+0xe8>
   1abf4:	18814236 	bltu	r3,r2,1b100 <__udivdi3+0x5f0>
   1abf8:	202d883a 	mov	r22,r4
   1abfc:	18a1c83a 	sub	r16,r3,r2
   1ac00:	8009883a 	mov	r4,r16
   1ac04:	a80b883a 	mov	r5,r21
   1ac08:	0010f400 	call	10f40 <__umodsi3>
   1ac0c:	1027883a 	mov	r19,r2
   1ac10:	8009883a 	mov	r4,r16
   1ac14:	a80b883a 	mov	r5,r21
   1ac18:	9826943a 	slli	r19,r19,16
   1ac1c:	0010edc0 	call	10edc <__udivsi3>
   1ac20:	100b883a 	mov	r5,r2
   1ac24:	a009883a 	mov	r4,r20
   1ac28:	94bfffcc 	andi	r18,r18,65535
   1ac2c:	1021883a 	mov	r16,r2
   1ac30:	94e4b03a 	or	r18,r18,r19
   1ac34:	00122700 	call	12270 <__mulsi3>
   1ac38:	9080052e 	bgeu	r18,r2,1ac50 <__udivdi3+0x140>
   1ac3c:	8ca5883a 	add	r18,r17,r18
   1ac40:	80ffffc4 	addi	r3,r16,-1
   1ac44:	94410c36 	bltu	r18,r17,1b078 <__udivdi3+0x568>
   1ac48:	90810b2e 	bgeu	r18,r2,1b078 <__udivdi3+0x568>
   1ac4c:	843fff84 	addi	r16,r16,-2
   1ac50:	b004943a 	slli	r2,r22,16
   1ac54:	0007883a 	mov	r3,zero
   1ac58:	1404b03a 	or	r2,r2,r16
   1ac5c:	00005e06 	br	1add8 <__udivdi3+0x2c8>
   1ac60:	29c05b36 	bltu	r5,r7,1add0 <__udivdi3+0x2c0>
   1ac64:	00bfffd4 	movui	r2,65535
   1ac68:	11c0672e 	bgeu	r2,r7,1ae08 <__udivdi3+0x2f8>
   1ac6c:	00804034 	movhi	r2,256
   1ac70:	10bfffc4 	addi	r2,r2,-1
   1ac74:	11c10a36 	bltu	r2,r7,1b0a0 <__udivdi3+0x590>
   1ac78:	00800404 	movi	r2,16
   1ac7c:	3886d83a 	srl	r3,r7,r2
   1ac80:	010000b4 	movhi	r4,2
   1ac84:	21353004 	addi	r4,r4,-11072
   1ac88:	20c7883a 	add	r3,r4,r3
   1ac8c:	18c00003 	ldbu	r3,0(r3)
   1ac90:	05c00804 	movi	r23,32
   1ac94:	1885883a 	add	r2,r3,r2
   1ac98:	b8afc83a 	sub	r23,r23,r2
   1ac9c:	b800671e 	bne	r23,zero,1ae3c <__udivdi3+0x32c>
   1aca0:	3c010536 	bltu	r7,r16,1b0b8 <__udivdi3+0x5a8>
   1aca4:	9985403a 	cmpgeu	r2,r19,r6
   1aca8:	0007883a 	mov	r3,zero
   1acac:	00004a06 	br	1add8 <__udivdi3+0x2c8>
   1acb0:	3000041e 	bne	r6,zero,1acc4 <__udivdi3+0x1b4>
   1acb4:	000b883a 	mov	r5,zero
   1acb8:	01000044 	movi	r4,1
   1acbc:	0010edc0 	call	10edc <__udivsi3>
   1acc0:	1023883a 	mov	r17,r2
   1acc4:	00bfffd4 	movui	r2,65535
   1acc8:	1440532e 	bgeu	r2,r17,1ae18 <__udivdi3+0x308>
   1accc:	00804034 	movhi	r2,256
   1acd0:	10bfffc4 	addi	r2,r2,-1
   1acd4:	1440f436 	bltu	r2,r17,1b0a8 <__udivdi3+0x598>
   1acd8:	00800404 	movi	r2,16
   1acdc:	8886d83a 	srl	r3,r17,r2
   1ace0:	010000b4 	movhi	r4,2
   1ace4:	21353004 	addi	r4,r4,-11072
   1ace8:	20c7883a 	add	r3,r4,r3
   1acec:	18c00003 	ldbu	r3,0(r3)
   1acf0:	1885883a 	add	r2,r3,r2
   1acf4:	00c00804 	movi	r3,32
   1acf8:	1887c83a 	sub	r3,r3,r2
   1acfc:	1800a51e 	bne	r3,zero,1af94 <__udivdi3+0x484>
   1ad00:	882ad43a 	srli	r21,r17,16
   1ad04:	8461c83a 	sub	r16,r16,r17
   1ad08:	8d3fffcc 	andi	r20,r17,65535
   1ad0c:	00c00044 	movi	r3,1
   1ad10:	a80b883a 	mov	r5,r21
   1ad14:	8009883a 	mov	r4,r16
   1ad18:	d8c00115 	stw	r3,4(sp)
   1ad1c:	0010f400 	call	10f40 <__umodsi3>
   1ad20:	a80b883a 	mov	r5,r21
   1ad24:	8009883a 	mov	r4,r16
   1ad28:	1027883a 	mov	r19,r2
   1ad2c:	0010edc0 	call	10edc <__udivsi3>
   1ad30:	a00b883a 	mov	r5,r20
   1ad34:	1009883a 	mov	r4,r2
   1ad38:	102d883a 	mov	r22,r2
   1ad3c:	00122700 	call	12270 <__mulsi3>
   1ad40:	9826943a 	slli	r19,r19,16
   1ad44:	900ed43a 	srli	r7,r18,16
   1ad48:	d8c00117 	ldw	r3,4(sp)
   1ad4c:	3cceb03a 	or	r7,r7,r19
   1ad50:	3880052e 	bgeu	r7,r2,1ad68 <__udivdi3+0x258>
   1ad54:	3c4f883a 	add	r7,r7,r17
   1ad58:	b13fffc4 	addi	r4,r22,-1
   1ad5c:	3c400136 	bltu	r7,r17,1ad64 <__udivdi3+0x254>
   1ad60:	3880e436 	bltu	r7,r2,1b0f4 <__udivdi3+0x5e4>
   1ad64:	202d883a 	mov	r22,r4
   1ad68:	38a1c83a 	sub	r16,r7,r2
   1ad6c:	8009883a 	mov	r4,r16
   1ad70:	a80b883a 	mov	r5,r21
   1ad74:	d8c00115 	stw	r3,4(sp)
   1ad78:	0010f400 	call	10f40 <__umodsi3>
   1ad7c:	1027883a 	mov	r19,r2
   1ad80:	8009883a 	mov	r4,r16
   1ad84:	a80b883a 	mov	r5,r21
   1ad88:	9826943a 	slli	r19,r19,16
   1ad8c:	0010edc0 	call	10edc <__udivsi3>
   1ad90:	a00b883a 	mov	r5,r20
   1ad94:	1009883a 	mov	r4,r2
   1ad98:	94bfffcc 	andi	r18,r18,65535
   1ad9c:	1021883a 	mov	r16,r2
   1ada0:	94e4b03a 	or	r18,r18,r19
   1ada4:	00122700 	call	12270 <__mulsi3>
   1ada8:	d8c00117 	ldw	r3,4(sp)
   1adac:	9080052e 	bgeu	r18,r2,1adc4 <__udivdi3+0x2b4>
   1adb0:	8ca5883a 	add	r18,r17,r18
   1adb4:	813fffc4 	addi	r4,r16,-1
   1adb8:	9440ad36 	bltu	r18,r17,1b070 <__udivdi3+0x560>
   1adbc:	9080ac2e 	bgeu	r18,r2,1b070 <__udivdi3+0x560>
   1adc0:	843fff84 	addi	r16,r16,-2
   1adc4:	b004943a 	slli	r2,r22,16
   1adc8:	1404b03a 	or	r2,r2,r16
   1adcc:	00000206 	br	1add8 <__udivdi3+0x2c8>
   1add0:	0007883a 	mov	r3,zero
   1add4:	0005883a 	mov	r2,zero
   1add8:	dfc00b17 	ldw	ra,44(sp)
   1addc:	df000a17 	ldw	fp,40(sp)
   1ade0:	ddc00917 	ldw	r23,36(sp)
   1ade4:	dd800817 	ldw	r22,32(sp)
   1ade8:	dd400717 	ldw	r21,28(sp)
   1adec:	dd000617 	ldw	r20,24(sp)
   1adf0:	dcc00517 	ldw	r19,20(sp)
   1adf4:	dc800417 	ldw	r18,16(sp)
   1adf8:	dc400317 	ldw	r17,12(sp)
   1adfc:	dc000217 	ldw	r16,8(sp)
   1ae00:	dec00c04 	addi	sp,sp,48
   1ae04:	f800283a 	ret
   1ae08:	00803fc4 	movi	r2,255
   1ae0c:	11c5803a 	cmpltu	r2,r2,r7
   1ae10:	100490fa 	slli	r2,r2,3
   1ae14:	003f9906 	br	1ac7c <_gp+0xffff4bc0>
   1ae18:	00803fc4 	movi	r2,255
   1ae1c:	1445803a 	cmpltu	r2,r2,r17
   1ae20:	100490fa 	slli	r2,r2,3
   1ae24:	003fad06 	br	1acdc <_gp+0xffff4c20>
   1ae28:	00804034 	movhi	r2,256
   1ae2c:	10bfffc4 	addi	r2,r2,-1
   1ae30:	11809f36 	bltu	r2,r6,1b0b0 <__udivdi3+0x5a0>
   1ae34:	00800404 	movi	r2,16
   1ae38:	003f4c06 	br	1ab6c <_gp+0xffff4ab0>
   1ae3c:	3dce983a 	sll	r7,r7,r23
   1ae40:	30b8d83a 	srl	fp,r6,r2
   1ae44:	80a2d83a 	srl	r17,r16,r2
   1ae48:	35cc983a 	sll	r6,r6,r23
   1ae4c:	3f38b03a 	or	fp,r7,fp
   1ae50:	e024d43a 	srli	r18,fp,16
   1ae54:	9884d83a 	srl	r2,r19,r2
   1ae58:	85e0983a 	sll	r16,r16,r23
   1ae5c:	8809883a 	mov	r4,r17
   1ae60:	900b883a 	mov	r5,r18
   1ae64:	d9800015 	stw	r6,0(sp)
   1ae68:	1420b03a 	or	r16,r2,r16
   1ae6c:	0010f400 	call	10f40 <__umodsi3>
   1ae70:	900b883a 	mov	r5,r18
   1ae74:	8809883a 	mov	r4,r17
   1ae78:	1029883a 	mov	r20,r2
   1ae7c:	e5bfffcc 	andi	r22,fp,65535
   1ae80:	0010edc0 	call	10edc <__udivsi3>
   1ae84:	100b883a 	mov	r5,r2
   1ae88:	b009883a 	mov	r4,r22
   1ae8c:	102b883a 	mov	r21,r2
   1ae90:	00122700 	call	12270 <__mulsi3>
   1ae94:	a028943a 	slli	r20,r20,16
   1ae98:	8006d43a 	srli	r3,r16,16
   1ae9c:	1d06b03a 	or	r3,r3,r20
   1aea0:	1880042e 	bgeu	r3,r2,1aeb4 <__udivdi3+0x3a4>
   1aea4:	1f07883a 	add	r3,r3,fp
   1aea8:	a93fffc4 	addi	r4,r21,-1
   1aeac:	1f00892e 	bgeu	r3,fp,1b0d4 <__udivdi3+0x5c4>
   1aeb0:	202b883a 	mov	r21,r4
   1aeb4:	18a3c83a 	sub	r17,r3,r2
   1aeb8:	8809883a 	mov	r4,r17
   1aebc:	900b883a 	mov	r5,r18
   1aec0:	0010f400 	call	10f40 <__umodsi3>
   1aec4:	1029883a 	mov	r20,r2
   1aec8:	8809883a 	mov	r4,r17
   1aecc:	900b883a 	mov	r5,r18
   1aed0:	a028943a 	slli	r20,r20,16
   1aed4:	0010edc0 	call	10edc <__udivsi3>
   1aed8:	100b883a 	mov	r5,r2
   1aedc:	b009883a 	mov	r4,r22
   1aee0:	843fffcc 	andi	r16,r16,65535
   1aee4:	1023883a 	mov	r17,r2
   1aee8:	8520b03a 	or	r16,r16,r20
   1aeec:	00122700 	call	12270 <__mulsi3>
   1aef0:	8080042e 	bgeu	r16,r2,1af04 <__udivdi3+0x3f4>
   1aef4:	8721883a 	add	r16,r16,fp
   1aef8:	88ffffc4 	addi	r3,r17,-1
   1aefc:	8700712e 	bgeu	r16,fp,1b0c4 <__udivdi3+0x5b4>
   1af00:	1823883a 	mov	r17,r3
   1af04:	a80e943a 	slli	r7,r21,16
   1af08:	d8c00017 	ldw	r3,0(sp)
   1af0c:	80a1c83a 	sub	r16,r16,r2
   1af10:	3c64b03a 	or	r18,r7,r17
   1af14:	1d3fffcc 	andi	r20,r3,65535
   1af18:	9022d43a 	srli	r17,r18,16
   1af1c:	95bfffcc 	andi	r22,r18,65535
   1af20:	a00b883a 	mov	r5,r20
   1af24:	b009883a 	mov	r4,r22
   1af28:	182ad43a 	srli	r21,r3,16
   1af2c:	00122700 	call	12270 <__mulsi3>
   1af30:	a00b883a 	mov	r5,r20
   1af34:	8809883a 	mov	r4,r17
   1af38:	1039883a 	mov	fp,r2
   1af3c:	00122700 	call	12270 <__mulsi3>
   1af40:	8809883a 	mov	r4,r17
   1af44:	a80b883a 	mov	r5,r21
   1af48:	1029883a 	mov	r20,r2
   1af4c:	00122700 	call	12270 <__mulsi3>
   1af50:	a80b883a 	mov	r5,r21
   1af54:	b009883a 	mov	r4,r22
   1af58:	1023883a 	mov	r17,r2
   1af5c:	00122700 	call	12270 <__mulsi3>
   1af60:	e006d43a 	srli	r3,fp,16
   1af64:	1505883a 	add	r2,r2,r20
   1af68:	1887883a 	add	r3,r3,r2
   1af6c:	1d00022e 	bgeu	r3,r20,1af78 <__udivdi3+0x468>
   1af70:	00800074 	movhi	r2,1
   1af74:	88a3883a 	add	r17,r17,r2
   1af78:	1804d43a 	srli	r2,r3,16
   1af7c:	1463883a 	add	r17,r2,r17
   1af80:	84404436 	bltu	r16,r17,1b094 <__udivdi3+0x584>
   1af84:	84403e26 	beq	r16,r17,1b080 <__udivdi3+0x570>
   1af88:	9005883a 	mov	r2,r18
   1af8c:	0007883a 	mov	r3,zero
   1af90:	003f9106 	br	1add8 <_gp+0xffff4d1c>
   1af94:	88e2983a 	sll	r17,r17,r3
   1af98:	80aed83a 	srl	r23,r16,r2
   1af9c:	80e0983a 	sll	r16,r16,r3
   1afa0:	882ad43a 	srli	r21,r17,16
   1afa4:	9884d83a 	srl	r2,r19,r2
   1afa8:	b809883a 	mov	r4,r23
   1afac:	a80b883a 	mov	r5,r21
   1afb0:	98e4983a 	sll	r18,r19,r3
   1afb4:	142cb03a 	or	r22,r2,r16
   1afb8:	0010f400 	call	10f40 <__umodsi3>
   1afbc:	b809883a 	mov	r4,r23
   1afc0:	a80b883a 	mov	r5,r21
   1afc4:	1027883a 	mov	r19,r2
   1afc8:	8d3fffcc 	andi	r20,r17,65535
   1afcc:	0010edc0 	call	10edc <__udivsi3>
   1afd0:	a009883a 	mov	r4,r20
   1afd4:	100b883a 	mov	r5,r2
   1afd8:	102f883a 	mov	r23,r2
   1afdc:	00122700 	call	12270 <__mulsi3>
   1afe0:	9826943a 	slli	r19,r19,16
   1afe4:	b008d43a 	srli	r4,r22,16
   1afe8:	24c8b03a 	or	r4,r4,r19
   1afec:	2080062e 	bgeu	r4,r2,1b008 <__udivdi3+0x4f8>
   1aff0:	2449883a 	add	r4,r4,r17
   1aff4:	b8ffffc4 	addi	r3,r23,-1
   1aff8:	24403c36 	bltu	r4,r17,1b0ec <__udivdi3+0x5dc>
   1affc:	20803b2e 	bgeu	r4,r2,1b0ec <__udivdi3+0x5dc>
   1b000:	bdffff84 	addi	r23,r23,-2
   1b004:	2449883a 	add	r4,r4,r17
   1b008:	20a1c83a 	sub	r16,r4,r2
   1b00c:	a80b883a 	mov	r5,r21
   1b010:	8009883a 	mov	r4,r16
   1b014:	0010f400 	call	10f40 <__umodsi3>
   1b018:	a80b883a 	mov	r5,r21
   1b01c:	8009883a 	mov	r4,r16
   1b020:	1027883a 	mov	r19,r2
   1b024:	0010edc0 	call	10edc <__udivsi3>
   1b028:	a009883a 	mov	r4,r20
   1b02c:	100b883a 	mov	r5,r2
   1b030:	9826943a 	slli	r19,r19,16
   1b034:	1039883a 	mov	fp,r2
   1b038:	00122700 	call	12270 <__mulsi3>
   1b03c:	b13fffcc 	andi	r4,r22,65535
   1b040:	24c8b03a 	or	r4,r4,r19
   1b044:	2080062e 	bgeu	r4,r2,1b060 <__udivdi3+0x550>
   1b048:	2449883a 	add	r4,r4,r17
   1b04c:	e0ffffc4 	addi	r3,fp,-1
   1b050:	24402436 	bltu	r4,r17,1b0e4 <__udivdi3+0x5d4>
   1b054:	2080232e 	bgeu	r4,r2,1b0e4 <__udivdi3+0x5d4>
   1b058:	e73fff84 	addi	fp,fp,-2
   1b05c:	2449883a 	add	r4,r4,r17
   1b060:	b82e943a 	slli	r23,r23,16
   1b064:	20a1c83a 	sub	r16,r4,r2
   1b068:	bf06b03a 	or	r3,r23,fp
   1b06c:	003f2806 	br	1ad10 <_gp+0xffff4c54>
   1b070:	2021883a 	mov	r16,r4
   1b074:	003f5306 	br	1adc4 <_gp+0xffff4d08>
   1b078:	1821883a 	mov	r16,r3
   1b07c:	003ef406 	br	1ac50 <_gp+0xffff4b94>
   1b080:	1806943a 	slli	r3,r3,16
   1b084:	9de6983a 	sll	r19,r19,r23
   1b088:	e73fffcc 	andi	fp,fp,65535
   1b08c:	1f07883a 	add	r3,r3,fp
   1b090:	98ffbd2e 	bgeu	r19,r3,1af88 <_gp+0xffff4ecc>
   1b094:	90bfffc4 	addi	r2,r18,-1
   1b098:	0007883a 	mov	r3,zero
   1b09c:	003f4e06 	br	1add8 <_gp+0xffff4d1c>
   1b0a0:	00800604 	movi	r2,24
   1b0a4:	003ef506 	br	1ac7c <_gp+0xffff4bc0>
   1b0a8:	00800604 	movi	r2,24
   1b0ac:	003f0b06 	br	1acdc <_gp+0xffff4c20>
   1b0b0:	00800604 	movi	r2,24
   1b0b4:	003ead06 	br	1ab6c <_gp+0xffff4ab0>
   1b0b8:	0007883a 	mov	r3,zero
   1b0bc:	00800044 	movi	r2,1
   1b0c0:	003f4506 	br	1add8 <_gp+0xffff4d1c>
   1b0c4:	80bf8e2e 	bgeu	r16,r2,1af00 <_gp+0xffff4e44>
   1b0c8:	8c7fff84 	addi	r17,r17,-2
   1b0cc:	8721883a 	add	r16,r16,fp
   1b0d0:	003f8c06 	br	1af04 <_gp+0xffff4e48>
   1b0d4:	18bf762e 	bgeu	r3,r2,1aeb0 <_gp+0xffff4df4>
   1b0d8:	ad7fff84 	addi	r21,r21,-2
   1b0dc:	1f07883a 	add	r3,r3,fp
   1b0e0:	003f7406 	br	1aeb4 <_gp+0xffff4df8>
   1b0e4:	1839883a 	mov	fp,r3
   1b0e8:	003fdd06 	br	1b060 <_gp+0xffff4fa4>
   1b0ec:	182f883a 	mov	r23,r3
   1b0f0:	003fc506 	br	1b008 <_gp+0xffff4f4c>
   1b0f4:	b5bfff84 	addi	r22,r22,-2
   1b0f8:	3c4f883a 	add	r7,r7,r17
   1b0fc:	003f1a06 	br	1ad68 <_gp+0xffff4cac>
   1b100:	b5bfff84 	addi	r22,r22,-2
   1b104:	1c47883a 	add	r3,r3,r17
   1b108:	003ebc06 	br	1abfc <_gp+0xffff4b40>

0001b10c <__umoddi3>:
   1b10c:	defff304 	addi	sp,sp,-52
   1b110:	df000b15 	stw	fp,44(sp)
   1b114:	dc400415 	stw	r17,16(sp)
   1b118:	dc000315 	stw	r16,12(sp)
   1b11c:	dfc00c15 	stw	ra,48(sp)
   1b120:	ddc00a15 	stw	r23,40(sp)
   1b124:	dd800915 	stw	r22,36(sp)
   1b128:	dd400815 	stw	r21,32(sp)
   1b12c:	dd000715 	stw	r20,28(sp)
   1b130:	dcc00615 	stw	r19,24(sp)
   1b134:	dc800515 	stw	r18,20(sp)
   1b138:	2021883a 	mov	r16,r4
   1b13c:	2823883a 	mov	r17,r5
   1b140:	2839883a 	mov	fp,r5
   1b144:	3800401e 	bne	r7,zero,1b248 <__umoddi3+0x13c>
   1b148:	3027883a 	mov	r19,r6
   1b14c:	2029883a 	mov	r20,r4
   1b150:	2980552e 	bgeu	r5,r6,1b2a8 <__umoddi3+0x19c>
   1b154:	00bfffd4 	movui	r2,65535
   1b158:	1180a236 	bltu	r2,r6,1b3e4 <__umoddi3+0x2d8>
   1b15c:	01003fc4 	movi	r4,255
   1b160:	2189803a 	cmpltu	r4,r4,r6
   1b164:	200890fa 	slli	r4,r4,3
   1b168:	3104d83a 	srl	r2,r6,r4
   1b16c:	00c000b4 	movhi	r3,2
   1b170:	18f53004 	addi	r3,r3,-11072
   1b174:	1885883a 	add	r2,r3,r2
   1b178:	10c00003 	ldbu	r3,0(r2)
   1b17c:	00800804 	movi	r2,32
   1b180:	1909883a 	add	r4,r3,r4
   1b184:	1125c83a 	sub	r18,r2,r4
   1b188:	90000526 	beq	r18,zero,1b1a0 <__umoddi3+0x94>
   1b18c:	8ca2983a 	sll	r17,r17,r18
   1b190:	8108d83a 	srl	r4,r16,r4
   1b194:	34a6983a 	sll	r19,r6,r18
   1b198:	84a8983a 	sll	r20,r16,r18
   1b19c:	2478b03a 	or	fp,r4,r17
   1b1a0:	982cd43a 	srli	r22,r19,16
   1b1a4:	e009883a 	mov	r4,fp
   1b1a8:	9dffffcc 	andi	r23,r19,65535
   1b1ac:	b00b883a 	mov	r5,r22
   1b1b0:	0010f400 	call	10f40 <__umodsi3>
   1b1b4:	b00b883a 	mov	r5,r22
   1b1b8:	e009883a 	mov	r4,fp
   1b1bc:	102b883a 	mov	r21,r2
   1b1c0:	0010edc0 	call	10edc <__udivsi3>
   1b1c4:	100b883a 	mov	r5,r2
   1b1c8:	b809883a 	mov	r4,r23
   1b1cc:	00122700 	call	12270 <__mulsi3>
   1b1d0:	a82a943a 	slli	r21,r21,16
   1b1d4:	a006d43a 	srli	r3,r20,16
   1b1d8:	1d46b03a 	or	r3,r3,r21
   1b1dc:	1880032e 	bgeu	r3,r2,1b1ec <__umoddi3+0xe0>
   1b1e0:	1cc7883a 	add	r3,r3,r19
   1b1e4:	1cc00136 	bltu	r3,r19,1b1ec <__umoddi3+0xe0>
   1b1e8:	18813136 	bltu	r3,r2,1b6b0 <__umoddi3+0x5a4>
   1b1ec:	18a1c83a 	sub	r16,r3,r2
   1b1f0:	b00b883a 	mov	r5,r22
   1b1f4:	8009883a 	mov	r4,r16
   1b1f8:	0010f400 	call	10f40 <__umodsi3>
   1b1fc:	b00b883a 	mov	r5,r22
   1b200:	8009883a 	mov	r4,r16
   1b204:	1023883a 	mov	r17,r2
   1b208:	0010edc0 	call	10edc <__udivsi3>
   1b20c:	100b883a 	mov	r5,r2
   1b210:	b809883a 	mov	r4,r23
   1b214:	8822943a 	slli	r17,r17,16
   1b218:	00122700 	call	12270 <__mulsi3>
   1b21c:	a0ffffcc 	andi	r3,r20,65535
   1b220:	1c46b03a 	or	r3,r3,r17
   1b224:	1880042e 	bgeu	r3,r2,1b238 <__umoddi3+0x12c>
   1b228:	1cc7883a 	add	r3,r3,r19
   1b22c:	1cc00236 	bltu	r3,r19,1b238 <__umoddi3+0x12c>
   1b230:	1880012e 	bgeu	r3,r2,1b238 <__umoddi3+0x12c>
   1b234:	1cc7883a 	add	r3,r3,r19
   1b238:	1885c83a 	sub	r2,r3,r2
   1b23c:	1484d83a 	srl	r2,r2,r18
   1b240:	0007883a 	mov	r3,zero
   1b244:	00005306 	br	1b394 <__umoddi3+0x288>
   1b248:	29c05036 	bltu	r5,r7,1b38c <__umoddi3+0x280>
   1b24c:	00bfffd4 	movui	r2,65535
   1b250:	11c05c2e 	bgeu	r2,r7,1b3c4 <__umoddi3+0x2b8>
   1b254:	00804034 	movhi	r2,256
   1b258:	10bfffc4 	addi	r2,r2,-1
   1b25c:	11c10636 	bltu	r2,r7,1b678 <__umoddi3+0x56c>
   1b260:	01000404 	movi	r4,16
   1b264:	3904d83a 	srl	r2,r7,r4
   1b268:	00c000b4 	movhi	r3,2
   1b26c:	18f53004 	addi	r3,r3,-11072
   1b270:	1885883a 	add	r2,r3,r2
   1b274:	14c00003 	ldbu	r19,0(r2)
   1b278:	00c00804 	movi	r3,32
   1b27c:	9927883a 	add	r19,r19,r4
   1b280:	1ce9c83a 	sub	r20,r3,r19
   1b284:	a0005c1e 	bne	r20,zero,1b3f8 <__umoddi3+0x2ec>
   1b288:	3c400136 	bltu	r7,r17,1b290 <__umoddi3+0x184>
   1b28c:	81810a36 	bltu	r16,r6,1b6b8 <__umoddi3+0x5ac>
   1b290:	8185c83a 	sub	r2,r16,r6
   1b294:	89e3c83a 	sub	r17,r17,r7
   1b298:	8089803a 	cmpltu	r4,r16,r2
   1b29c:	8939c83a 	sub	fp,r17,r4
   1b2a0:	e007883a 	mov	r3,fp
   1b2a4:	00003b06 	br	1b394 <__umoddi3+0x288>
   1b2a8:	3000041e 	bne	r6,zero,1b2bc <__umoddi3+0x1b0>
   1b2ac:	000b883a 	mov	r5,zero
   1b2b0:	01000044 	movi	r4,1
   1b2b4:	0010edc0 	call	10edc <__udivsi3>
   1b2b8:	1027883a 	mov	r19,r2
   1b2bc:	00bfffd4 	movui	r2,65535
   1b2c0:	14c0442e 	bgeu	r2,r19,1b3d4 <__umoddi3+0x2c8>
   1b2c4:	00804034 	movhi	r2,256
   1b2c8:	10bfffc4 	addi	r2,r2,-1
   1b2cc:	14c0ec36 	bltu	r2,r19,1b680 <__umoddi3+0x574>
   1b2d0:	00800404 	movi	r2,16
   1b2d4:	9886d83a 	srl	r3,r19,r2
   1b2d8:	010000b4 	movhi	r4,2
   1b2dc:	21353004 	addi	r4,r4,-11072
   1b2e0:	20c7883a 	add	r3,r4,r3
   1b2e4:	18c00003 	ldbu	r3,0(r3)
   1b2e8:	1887883a 	add	r3,r3,r2
   1b2ec:	00800804 	movi	r2,32
   1b2f0:	10e5c83a 	sub	r18,r2,r3
   1b2f4:	9000ab1e 	bne	r18,zero,1b5a4 <__umoddi3+0x498>
   1b2f8:	982cd43a 	srli	r22,r19,16
   1b2fc:	8ce3c83a 	sub	r17,r17,r19
   1b300:	9dffffcc 	andi	r23,r19,65535
   1b304:	b00b883a 	mov	r5,r22
   1b308:	8809883a 	mov	r4,r17
   1b30c:	0010f400 	call	10f40 <__umodsi3>
   1b310:	b00b883a 	mov	r5,r22
   1b314:	8809883a 	mov	r4,r17
   1b318:	102b883a 	mov	r21,r2
   1b31c:	0010edc0 	call	10edc <__udivsi3>
   1b320:	b80b883a 	mov	r5,r23
   1b324:	1009883a 	mov	r4,r2
   1b328:	00122700 	call	12270 <__mulsi3>
   1b32c:	a82a943a 	slli	r21,r21,16
   1b330:	a006d43a 	srli	r3,r20,16
   1b334:	1d46b03a 	or	r3,r3,r21
   1b338:	1880042e 	bgeu	r3,r2,1b34c <__umoddi3+0x240>
   1b33c:	1cc7883a 	add	r3,r3,r19
   1b340:	1cc00236 	bltu	r3,r19,1b34c <__umoddi3+0x240>
   1b344:	1880012e 	bgeu	r3,r2,1b34c <__umoddi3+0x240>
   1b348:	1cc7883a 	add	r3,r3,r19
   1b34c:	18a1c83a 	sub	r16,r3,r2
   1b350:	b00b883a 	mov	r5,r22
   1b354:	8009883a 	mov	r4,r16
   1b358:	0010f400 	call	10f40 <__umodsi3>
   1b35c:	1023883a 	mov	r17,r2
   1b360:	b00b883a 	mov	r5,r22
   1b364:	8009883a 	mov	r4,r16
   1b368:	0010edc0 	call	10edc <__udivsi3>
   1b36c:	8822943a 	slli	r17,r17,16
   1b370:	b80b883a 	mov	r5,r23
   1b374:	1009883a 	mov	r4,r2
   1b378:	00122700 	call	12270 <__mulsi3>
   1b37c:	a53fffcc 	andi	r20,r20,65535
   1b380:	a446b03a 	or	r3,r20,r17
   1b384:	18bfac2e 	bgeu	r3,r2,1b238 <_gp+0xffff517c>
   1b388:	003fa706 	br	1b228 <_gp+0xffff516c>
   1b38c:	2005883a 	mov	r2,r4
   1b390:	2807883a 	mov	r3,r5
   1b394:	dfc00c17 	ldw	ra,48(sp)
   1b398:	df000b17 	ldw	fp,44(sp)
   1b39c:	ddc00a17 	ldw	r23,40(sp)
   1b3a0:	dd800917 	ldw	r22,36(sp)
   1b3a4:	dd400817 	ldw	r21,32(sp)
   1b3a8:	dd000717 	ldw	r20,28(sp)
   1b3ac:	dcc00617 	ldw	r19,24(sp)
   1b3b0:	dc800517 	ldw	r18,20(sp)
   1b3b4:	dc400417 	ldw	r17,16(sp)
   1b3b8:	dc000317 	ldw	r16,12(sp)
   1b3bc:	dec00d04 	addi	sp,sp,52
   1b3c0:	f800283a 	ret
   1b3c4:	04c03fc4 	movi	r19,255
   1b3c8:	99c9803a 	cmpltu	r4,r19,r7
   1b3cc:	200890fa 	slli	r4,r4,3
   1b3d0:	003fa406 	br	1b264 <_gp+0xffff51a8>
   1b3d4:	00803fc4 	movi	r2,255
   1b3d8:	14c5803a 	cmpltu	r2,r2,r19
   1b3dc:	100490fa 	slli	r2,r2,3
   1b3e0:	003fbc06 	br	1b2d4 <_gp+0xffff5218>
   1b3e4:	00804034 	movhi	r2,256
   1b3e8:	10bfffc4 	addi	r2,r2,-1
   1b3ec:	1180a636 	bltu	r2,r6,1b688 <__umoddi3+0x57c>
   1b3f0:	01000404 	movi	r4,16
   1b3f4:	003f5c06 	br	1b168 <_gp+0xffff50ac>
   1b3f8:	3d0e983a 	sll	r7,r7,r20
   1b3fc:	34ead83a 	srl	r21,r6,r19
   1b400:	8cc6d83a 	srl	r3,r17,r19
   1b404:	8d10983a 	sll	r8,r17,r20
   1b408:	3d6ab03a 	or	r21,r7,r21
   1b40c:	a82cd43a 	srli	r22,r21,16
   1b410:	84e2d83a 	srl	r17,r16,r19
   1b414:	1809883a 	mov	r4,r3
   1b418:	b00b883a 	mov	r5,r22
   1b41c:	8a22b03a 	or	r17,r17,r8
   1b420:	3524983a 	sll	r18,r6,r20
   1b424:	dc400015 	stw	r17,0(sp)
   1b428:	d8c00115 	stw	r3,4(sp)
   1b42c:	0010f400 	call	10f40 <__umodsi3>
   1b430:	d8c00117 	ldw	r3,4(sp)
   1b434:	b00b883a 	mov	r5,r22
   1b438:	1039883a 	mov	fp,r2
   1b43c:	1809883a 	mov	r4,r3
   1b440:	0010edc0 	call	10edc <__udivsi3>
   1b444:	adffffcc 	andi	r23,r21,65535
   1b448:	100b883a 	mov	r5,r2
   1b44c:	b809883a 	mov	r4,r23
   1b450:	1023883a 	mov	r17,r2
   1b454:	00122700 	call	12270 <__mulsi3>
   1b458:	d9400017 	ldw	r5,0(sp)
   1b45c:	e008943a 	slli	r4,fp,16
   1b460:	8520983a 	sll	r16,r16,r20
   1b464:	2806d43a 	srli	r3,r5,16
   1b468:	1906b03a 	or	r3,r3,r4
   1b46c:	1880042e 	bgeu	r3,r2,1b480 <__umoddi3+0x374>
   1b470:	1d47883a 	add	r3,r3,r21
   1b474:	893fffc4 	addi	r4,r17,-1
   1b478:	1d40892e 	bgeu	r3,r21,1b6a0 <__umoddi3+0x594>
   1b47c:	2023883a 	mov	r17,r4
   1b480:	18b9c83a 	sub	fp,r3,r2
   1b484:	b00b883a 	mov	r5,r22
   1b488:	e009883a 	mov	r4,fp
   1b48c:	0010f400 	call	10f40 <__umodsi3>
   1b490:	b00b883a 	mov	r5,r22
   1b494:	e009883a 	mov	r4,fp
   1b498:	d8800215 	stw	r2,8(sp)
   1b49c:	0010edc0 	call	10edc <__udivsi3>
   1b4a0:	100b883a 	mov	r5,r2
   1b4a4:	b809883a 	mov	r4,r23
   1b4a8:	102d883a 	mov	r22,r2
   1b4ac:	00122700 	call	12270 <__mulsi3>
   1b4b0:	d9800217 	ldw	r6,8(sp)
   1b4b4:	d8c00017 	ldw	r3,0(sp)
   1b4b8:	300c943a 	slli	r6,r6,16
   1b4bc:	1a3fffcc 	andi	r8,r3,65535
   1b4c0:	4190b03a 	or	r8,r8,r6
   1b4c4:	4080042e 	bgeu	r8,r2,1b4d8 <__umoddi3+0x3cc>
   1b4c8:	4551883a 	add	r8,r8,r21
   1b4cc:	b0ffffc4 	addi	r3,r22,-1
   1b4d0:	45406f2e 	bgeu	r8,r21,1b690 <__umoddi3+0x584>
   1b4d4:	182d883a 	mov	r22,r3
   1b4d8:	880e943a 	slli	r7,r17,16
   1b4dc:	9006d43a 	srli	r3,r18,16
   1b4e0:	91bfffcc 	andi	r6,r18,65535
   1b4e4:	3dacb03a 	or	r22,r7,r22
   1b4e8:	b02ed43a 	srli	r23,r22,16
   1b4ec:	b5bfffcc 	andi	r22,r22,65535
   1b4f0:	300b883a 	mov	r5,r6
   1b4f4:	b009883a 	mov	r4,r22
   1b4f8:	40a3c83a 	sub	r17,r8,r2
   1b4fc:	d8c00115 	stw	r3,4(sp)
   1b500:	d9800215 	stw	r6,8(sp)
   1b504:	00122700 	call	12270 <__mulsi3>
   1b508:	d9800217 	ldw	r6,8(sp)
   1b50c:	b809883a 	mov	r4,r23
   1b510:	1039883a 	mov	fp,r2
   1b514:	300b883a 	mov	r5,r6
   1b518:	00122700 	call	12270 <__mulsi3>
   1b51c:	d8c00117 	ldw	r3,4(sp)
   1b520:	b809883a 	mov	r4,r23
   1b524:	d8800215 	stw	r2,8(sp)
   1b528:	180b883a 	mov	r5,r3
   1b52c:	00122700 	call	12270 <__mulsi3>
   1b530:	d8c00117 	ldw	r3,4(sp)
   1b534:	b009883a 	mov	r4,r22
   1b538:	102f883a 	mov	r23,r2
   1b53c:	180b883a 	mov	r5,r3
   1b540:	00122700 	call	12270 <__mulsi3>
   1b544:	d9800217 	ldw	r6,8(sp)
   1b548:	e006d43a 	srli	r3,fp,16
   1b54c:	1185883a 	add	r2,r2,r6
   1b550:	1885883a 	add	r2,r3,r2
   1b554:	1180022e 	bgeu	r2,r6,1b560 <__umoddi3+0x454>
   1b558:	00c00074 	movhi	r3,1
   1b55c:	b8ef883a 	add	r23,r23,r3
   1b560:	1006d43a 	srli	r3,r2,16
   1b564:	1004943a 	slli	r2,r2,16
   1b568:	e73fffcc 	andi	fp,fp,65535
   1b56c:	1dc7883a 	add	r3,r3,r23
   1b570:	1739883a 	add	fp,r2,fp
   1b574:	88c03a36 	bltu	r17,r3,1b660 <__umoddi3+0x554>
   1b578:	88c05126 	beq	r17,r3,1b6c0 <__umoddi3+0x5b4>
   1b57c:	88c9c83a 	sub	r4,r17,r3
   1b580:	e00f883a 	mov	r7,fp
   1b584:	81cfc83a 	sub	r7,r16,r7
   1b588:	81c7803a 	cmpltu	r3,r16,r7
   1b58c:	20c7c83a 	sub	r3,r4,r3
   1b590:	1cc4983a 	sll	r2,r3,r19
   1b594:	3d0ed83a 	srl	r7,r7,r20
   1b598:	1d06d83a 	srl	r3,r3,r20
   1b59c:	11c4b03a 	or	r2,r2,r7
   1b5a0:	003f7c06 	br	1b394 <_gp+0xffff52d8>
   1b5a4:	9ca6983a 	sll	r19,r19,r18
   1b5a8:	88f8d83a 	srl	fp,r17,r3
   1b5ac:	80c4d83a 	srl	r2,r16,r3
   1b5b0:	982cd43a 	srli	r22,r19,16
   1b5b4:	8ca2983a 	sll	r17,r17,r18
   1b5b8:	e009883a 	mov	r4,fp
   1b5bc:	b00b883a 	mov	r5,r22
   1b5c0:	146ab03a 	or	r21,r2,r17
   1b5c4:	0010f400 	call	10f40 <__umodsi3>
   1b5c8:	b00b883a 	mov	r5,r22
   1b5cc:	e009883a 	mov	r4,fp
   1b5d0:	1029883a 	mov	r20,r2
   1b5d4:	9dffffcc 	andi	r23,r19,65535
   1b5d8:	0010edc0 	call	10edc <__udivsi3>
   1b5dc:	b809883a 	mov	r4,r23
   1b5e0:	100b883a 	mov	r5,r2
   1b5e4:	00122700 	call	12270 <__mulsi3>
   1b5e8:	a008943a 	slli	r4,r20,16
   1b5ec:	a806d43a 	srli	r3,r21,16
   1b5f0:	84a8983a 	sll	r20,r16,r18
   1b5f4:	1906b03a 	or	r3,r3,r4
   1b5f8:	1880042e 	bgeu	r3,r2,1b60c <__umoddi3+0x500>
   1b5fc:	1cc7883a 	add	r3,r3,r19
   1b600:	1cc00236 	bltu	r3,r19,1b60c <__umoddi3+0x500>
   1b604:	1880012e 	bgeu	r3,r2,1b60c <__umoddi3+0x500>
   1b608:	1cc7883a 	add	r3,r3,r19
   1b60c:	18a3c83a 	sub	r17,r3,r2
   1b610:	b00b883a 	mov	r5,r22
   1b614:	8809883a 	mov	r4,r17
   1b618:	0010f400 	call	10f40 <__umodsi3>
   1b61c:	b00b883a 	mov	r5,r22
   1b620:	8809883a 	mov	r4,r17
   1b624:	1021883a 	mov	r16,r2
   1b628:	0010edc0 	call	10edc <__udivsi3>
   1b62c:	100b883a 	mov	r5,r2
   1b630:	b809883a 	mov	r4,r23
   1b634:	8020943a 	slli	r16,r16,16
   1b638:	00122700 	call	12270 <__mulsi3>
   1b63c:	a8ffffcc 	andi	r3,r21,65535
   1b640:	1c06b03a 	or	r3,r3,r16
   1b644:	1880042e 	bgeu	r3,r2,1b658 <__umoddi3+0x54c>
   1b648:	1cc7883a 	add	r3,r3,r19
   1b64c:	1cc00236 	bltu	r3,r19,1b658 <__umoddi3+0x54c>
   1b650:	1880012e 	bgeu	r3,r2,1b658 <__umoddi3+0x54c>
   1b654:	1cc7883a 	add	r3,r3,r19
   1b658:	18a3c83a 	sub	r17,r3,r2
   1b65c:	003f2906 	br	1b304 <_gp+0xffff5248>
   1b660:	e48fc83a 	sub	r7,fp,r18
   1b664:	1d49c83a 	sub	r4,r3,r21
   1b668:	e1f9803a 	cmpltu	fp,fp,r7
   1b66c:	2739c83a 	sub	fp,r4,fp
   1b670:	8f09c83a 	sub	r4,r17,fp
   1b674:	003fc306 	br	1b584 <_gp+0xffff54c8>
   1b678:	01000604 	movi	r4,24
   1b67c:	003ef906 	br	1b264 <_gp+0xffff51a8>
   1b680:	00800604 	movi	r2,24
   1b684:	003f1306 	br	1b2d4 <_gp+0xffff5218>
   1b688:	01000604 	movi	r4,24
   1b68c:	003eb606 	br	1b168 <_gp+0xffff50ac>
   1b690:	40bf902e 	bgeu	r8,r2,1b4d4 <_gp+0xffff5418>
   1b694:	b5bfff84 	addi	r22,r22,-2
   1b698:	4551883a 	add	r8,r8,r21
   1b69c:	003f8e06 	br	1b4d8 <_gp+0xffff541c>
   1b6a0:	18bf762e 	bgeu	r3,r2,1b47c <_gp+0xffff53c0>
   1b6a4:	8c7fff84 	addi	r17,r17,-2
   1b6a8:	1d47883a 	add	r3,r3,r21
   1b6ac:	003f7406 	br	1b480 <_gp+0xffff53c4>
   1b6b0:	1cc7883a 	add	r3,r3,r19
   1b6b4:	003ecd06 	br	1b1ec <_gp+0xffff5130>
   1b6b8:	8005883a 	mov	r2,r16
   1b6bc:	003ef806 	br	1b2a0 <_gp+0xffff51e4>
   1b6c0:	873fe736 	bltu	r16,fp,1b660 <_gp+0xffff55a4>
   1b6c4:	e00f883a 	mov	r7,fp
   1b6c8:	0009883a 	mov	r4,zero
   1b6cc:	003fad06 	br	1b584 <_gp+0xffff54c8>

0001b6d0 <__divdf3>:
   1b6d0:	defff004 	addi	sp,sp,-64
   1b6d4:	dc800815 	stw	r18,32(sp)
   1b6d8:	2824d53a 	srli	r18,r5,20
   1b6dc:	dd800c15 	stw	r22,48(sp)
   1b6e0:	282cd7fa 	srli	r22,r5,31
   1b6e4:	dc000615 	stw	r16,24(sp)
   1b6e8:	04000434 	movhi	r16,16
   1b6ec:	843fffc4 	addi	r16,r16,-1
   1b6f0:	dfc00f15 	stw	ra,60(sp)
   1b6f4:	df000e15 	stw	fp,56(sp)
   1b6f8:	ddc00d15 	stw	r23,52(sp)
   1b6fc:	dd400b15 	stw	r21,44(sp)
   1b700:	dd000a15 	stw	r20,40(sp)
   1b704:	dcc00915 	stw	r19,36(sp)
   1b708:	dc400715 	stw	r17,28(sp)
   1b70c:	9481ffcc 	andi	r18,r18,2047
   1b710:	2c20703a 	and	r16,r5,r16
   1b714:	b2003fcc 	andi	r8,r22,255
   1b718:	90006126 	beq	r18,zero,1b8a0 <__divdf3+0x1d0>
   1b71c:	0081ffc4 	movi	r2,2047
   1b720:	202b883a 	mov	r21,r4
   1b724:	90803726 	beq	r18,r2,1b804 <__divdf3+0x134>
   1b728:	80800434 	orhi	r2,r16,16
   1b72c:	100490fa 	slli	r2,r2,3
   1b730:	2020d77a 	srli	r16,r4,29
   1b734:	202a90fa 	slli	r21,r4,3
   1b738:	94bf0044 	addi	r18,r18,-1023
   1b73c:	80a0b03a 	or	r16,r16,r2
   1b740:	0013883a 	mov	r9,zero
   1b744:	000b883a 	mov	r5,zero
   1b748:	3806d53a 	srli	r3,r7,20
   1b74c:	382ed7fa 	srli	r23,r7,31
   1b750:	04400434 	movhi	r17,16
   1b754:	8c7fffc4 	addi	r17,r17,-1
   1b758:	18c1ffcc 	andi	r3,r3,2047
   1b75c:	3029883a 	mov	r20,r6
   1b760:	3c62703a 	and	r17,r7,r17
   1b764:	bf003fcc 	andi	fp,r23,255
   1b768:	18006e26 	beq	r3,zero,1b924 <__divdf3+0x254>
   1b76c:	0081ffc4 	movi	r2,2047
   1b770:	18806626 	beq	r3,r2,1b90c <__divdf3+0x23c>
   1b774:	88800434 	orhi	r2,r17,16
   1b778:	100490fa 	slli	r2,r2,3
   1b77c:	3022d77a 	srli	r17,r6,29
   1b780:	302890fa 	slli	r20,r6,3
   1b784:	18ff0044 	addi	r3,r3,-1023
   1b788:	88a2b03a 	or	r17,r17,r2
   1b78c:	000f883a 	mov	r7,zero
   1b790:	b5e6f03a 	xor	r19,r22,r23
   1b794:	3a4cb03a 	or	r6,r7,r9
   1b798:	008003c4 	movi	r2,15
   1b79c:	9809883a 	mov	r4,r19
   1b7a0:	90c7c83a 	sub	r3,r18,r3
   1b7a4:	9cc03fcc 	andi	r19,r19,255
   1b7a8:	11809636 	bltu	r2,r6,1ba04 <__divdf3+0x334>
   1b7ac:	300c90ba 	slli	r6,r6,2
   1b7b0:	008000b4 	movhi	r2,2
   1b7b4:	10adf104 	addi	r2,r2,-18492
   1b7b8:	308d883a 	add	r6,r6,r2
   1b7bc:	30800017 	ldw	r2,0(r6)
   1b7c0:	1000683a 	jmp	r2
   1b7c4:	0001ba04 	movi	zero,1768
   1b7c8:	0001b83c 	xorhi	zero,zero,1760
   1b7cc:	0001b9f4 	movhi	zero,1767
   1b7d0:	0001b830 	cmpltui	zero,zero,1760
   1b7d4:	0001b9f4 	movhi	zero,1767
   1b7d8:	0001b9c8 	cmpgei	zero,zero,1767
   1b7dc:	0001b9f4 	movhi	zero,1767
   1b7e0:	0001b830 	cmpltui	zero,zero,1760
   1b7e4:	0001b83c 	xorhi	zero,zero,1760
   1b7e8:	0001b83c 	xorhi	zero,zero,1760
   1b7ec:	0001b9c8 	cmpgei	zero,zero,1767
   1b7f0:	0001b830 	cmpltui	zero,zero,1760
   1b7f4:	0001b820 	cmpeqi	zero,zero,1760
   1b7f8:	0001b820 	cmpeqi	zero,zero,1760
   1b7fc:	0001b820 	cmpeqi	zero,zero,1760
   1b800:	0001bd8c 	andi	zero,zero,1782
   1b804:	2404b03a 	or	r2,r4,r16
   1b808:	10006c1e 	bne	r2,zero,1b9bc <__divdf3+0x2ec>
   1b80c:	02400204 	movi	r9,8
   1b810:	0021883a 	mov	r16,zero
   1b814:	002b883a 	mov	r21,zero
   1b818:	01400084 	movi	r5,2
   1b81c:	003fca06 	br	1b748 <_gp+0xffff568c>
   1b820:	8023883a 	mov	r17,r16
   1b824:	a829883a 	mov	r20,r21
   1b828:	4039883a 	mov	fp,r8
   1b82c:	280f883a 	mov	r7,r5
   1b830:	00800084 	movi	r2,2
   1b834:	3881601e 	bne	r7,r2,1bdb8 <__divdf3+0x6e8>
   1b838:	e027883a 	mov	r19,fp
   1b83c:	9900004c 	andi	r4,r19,1
   1b840:	0081ffc4 	movi	r2,2047
   1b844:	0021883a 	mov	r16,zero
   1b848:	002b883a 	mov	r21,zero
   1b84c:	1004953a 	slli	r2,r2,20
   1b850:	20c03fcc 	andi	r3,r4,255
   1b854:	01400434 	movhi	r5,16
   1b858:	297fffc4 	addi	r5,r5,-1
   1b85c:	180697fa 	slli	r3,r3,31
   1b860:	8160703a 	and	r16,r16,r5
   1b864:	80a0b03a 	or	r16,r16,r2
   1b868:	80c6b03a 	or	r3,r16,r3
   1b86c:	a805883a 	mov	r2,r21
   1b870:	dfc00f17 	ldw	ra,60(sp)
   1b874:	df000e17 	ldw	fp,56(sp)
   1b878:	ddc00d17 	ldw	r23,52(sp)
   1b87c:	dd800c17 	ldw	r22,48(sp)
   1b880:	dd400b17 	ldw	r21,44(sp)
   1b884:	dd000a17 	ldw	r20,40(sp)
   1b888:	dcc00917 	ldw	r19,36(sp)
   1b88c:	dc800817 	ldw	r18,32(sp)
   1b890:	dc400717 	ldw	r17,28(sp)
   1b894:	dc000617 	ldw	r16,24(sp)
   1b898:	dec01004 	addi	sp,sp,64
   1b89c:	f800283a 	ret
   1b8a0:	2404b03a 	or	r2,r4,r16
   1b8a4:	2023883a 	mov	r17,r4
   1b8a8:	10003f26 	beq	r2,zero,1b9a8 <__divdf3+0x2d8>
   1b8ac:	80015e26 	beq	r16,zero,1be28 <__divdf3+0x758>
   1b8b0:	8009883a 	mov	r4,r16
   1b8b4:	d9800215 	stw	r6,8(sp)
   1b8b8:	d9c00515 	stw	r7,20(sp)
   1b8bc:	da000415 	stw	r8,16(sp)
   1b8c0:	001220c0 	call	1220c <__clzsi2>
   1b8c4:	d9800217 	ldw	r6,8(sp)
   1b8c8:	d9c00517 	ldw	r7,20(sp)
   1b8cc:	da000417 	ldw	r8,16(sp)
   1b8d0:	113ffd44 	addi	r4,r2,-11
   1b8d4:	00c00704 	movi	r3,28
   1b8d8:	19014f16 	blt	r3,r4,1be18 <__divdf3+0x748>
   1b8dc:	00c00744 	movi	r3,29
   1b8e0:	157ffe04 	addi	r21,r2,-8
   1b8e4:	1907c83a 	sub	r3,r3,r4
   1b8e8:	8560983a 	sll	r16,r16,r21
   1b8ec:	88c6d83a 	srl	r3,r17,r3
   1b8f0:	8d6a983a 	sll	r21,r17,r21
   1b8f4:	1c20b03a 	or	r16,r3,r16
   1b8f8:	1080fcc4 	addi	r2,r2,1011
   1b8fc:	00a5c83a 	sub	r18,zero,r2
   1b900:	0013883a 	mov	r9,zero
   1b904:	000b883a 	mov	r5,zero
   1b908:	003f8f06 	br	1b748 <_gp+0xffff568c>
   1b90c:	3444b03a 	or	r2,r6,r17
   1b910:	1000231e 	bne	r2,zero,1b9a0 <__divdf3+0x2d0>
   1b914:	0023883a 	mov	r17,zero
   1b918:	0029883a 	mov	r20,zero
   1b91c:	01c00084 	movi	r7,2
   1b920:	003f9b06 	br	1b790 <_gp+0xffff56d4>
   1b924:	3444b03a 	or	r2,r6,r17
   1b928:	10001926 	beq	r2,zero,1b990 <__divdf3+0x2c0>
   1b92c:	88014b26 	beq	r17,zero,1be5c <__divdf3+0x78c>
   1b930:	8809883a 	mov	r4,r17
   1b934:	d9400115 	stw	r5,4(sp)
   1b938:	d9800215 	stw	r6,8(sp)
   1b93c:	da000415 	stw	r8,16(sp)
   1b940:	da400315 	stw	r9,12(sp)
   1b944:	001220c0 	call	1220c <__clzsi2>
   1b948:	d9400117 	ldw	r5,4(sp)
   1b94c:	d9800217 	ldw	r6,8(sp)
   1b950:	da000417 	ldw	r8,16(sp)
   1b954:	da400317 	ldw	r9,12(sp)
   1b958:	113ffd44 	addi	r4,r2,-11
   1b95c:	00c00704 	movi	r3,28
   1b960:	19013a16 	blt	r3,r4,1be4c <__divdf3+0x77c>
   1b964:	00c00744 	movi	r3,29
   1b968:	153ffe04 	addi	r20,r2,-8
   1b96c:	1907c83a 	sub	r3,r3,r4
   1b970:	8d22983a 	sll	r17,r17,r20
   1b974:	30c6d83a 	srl	r3,r6,r3
   1b978:	3528983a 	sll	r20,r6,r20
   1b97c:	1c62b03a 	or	r17,r3,r17
   1b980:	1080fcc4 	addi	r2,r2,1011
   1b984:	0087c83a 	sub	r3,zero,r2
   1b988:	000f883a 	mov	r7,zero
   1b98c:	003f8006 	br	1b790 <_gp+0xffff56d4>
   1b990:	0023883a 	mov	r17,zero
   1b994:	0029883a 	mov	r20,zero
   1b998:	01c00044 	movi	r7,1
   1b99c:	003f7c06 	br	1b790 <_gp+0xffff56d4>
   1b9a0:	01c000c4 	movi	r7,3
   1b9a4:	003f7a06 	br	1b790 <_gp+0xffff56d4>
   1b9a8:	02400104 	movi	r9,4
   1b9ac:	0021883a 	mov	r16,zero
   1b9b0:	002b883a 	mov	r21,zero
   1b9b4:	01400044 	movi	r5,1
   1b9b8:	003f6306 	br	1b748 <_gp+0xffff568c>
   1b9bc:	02400304 	movi	r9,12
   1b9c0:	014000c4 	movi	r5,3
   1b9c4:	003f6006 	br	1b748 <_gp+0xffff568c>
   1b9c8:	04000434 	movhi	r16,16
   1b9cc:	0009883a 	mov	r4,zero
   1b9d0:	843fffc4 	addi	r16,r16,-1
   1b9d4:	057fffc4 	movi	r21,-1
   1b9d8:	0081ffc4 	movi	r2,2047
   1b9dc:	003f9b06 	br	1b84c <_gp+0xffff5790>
   1b9e0:	00c00044 	movi	r3,1
   1b9e4:	1887c83a 	sub	r3,r3,r2
   1b9e8:	01000e04 	movi	r4,56
   1b9ec:	20c1530e 	bge	r4,r3,1bf3c <__divdf3+0x86c>
   1b9f0:	9900004c 	andi	r4,r19,1
   1b9f4:	0005883a 	mov	r2,zero
   1b9f8:	0021883a 	mov	r16,zero
   1b9fc:	002b883a 	mov	r21,zero
   1ba00:	003f9206 	br	1b84c <_gp+0xffff5790>
   1ba04:	8c012e36 	bltu	r17,r16,1bec0 <__divdf3+0x7f0>
   1ba08:	84412c26 	beq	r16,r17,1bebc <__divdf3+0x7ec>
   1ba0c:	a82f883a 	mov	r23,r21
   1ba10:	18ffffc4 	addi	r3,r3,-1
   1ba14:	002b883a 	mov	r21,zero
   1ba18:	a004d63a 	srli	r2,r20,24
   1ba1c:	8822923a 	slli	r17,r17,8
   1ba20:	a028923a 	slli	r20,r20,8
   1ba24:	8009883a 	mov	r4,r16
   1ba28:	88acb03a 	or	r22,r17,r2
   1ba2c:	dd000015 	stw	r20,0(sp)
   1ba30:	b028d43a 	srli	r20,r22,16
   1ba34:	d8c00215 	stw	r3,8(sp)
   1ba38:	b4bfffcc 	andi	r18,r22,65535
   1ba3c:	a00b883a 	mov	r5,r20
   1ba40:	0010edc0 	call	10edc <__udivsi3>
   1ba44:	100b883a 	mov	r5,r2
   1ba48:	9009883a 	mov	r4,r18
   1ba4c:	1023883a 	mov	r17,r2
   1ba50:	00122700 	call	12270 <__mulsi3>
   1ba54:	8009883a 	mov	r4,r16
   1ba58:	a00b883a 	mov	r5,r20
   1ba5c:	1039883a 	mov	fp,r2
   1ba60:	0010f400 	call	10f40 <__umodsi3>
   1ba64:	1004943a 	slli	r2,r2,16
   1ba68:	b808d43a 	srli	r4,r23,16
   1ba6c:	d8c00217 	ldw	r3,8(sp)
   1ba70:	2084b03a 	or	r2,r4,r2
   1ba74:	1700062e 	bgeu	r2,fp,1ba90 <__divdf3+0x3c0>
   1ba78:	1585883a 	add	r2,r2,r22
   1ba7c:	893fffc4 	addi	r4,r17,-1
   1ba80:	15811d36 	bltu	r2,r22,1bef8 <__divdf3+0x828>
   1ba84:	17011c2e 	bgeu	r2,fp,1bef8 <__divdf3+0x828>
   1ba88:	8c7fff84 	addi	r17,r17,-2
   1ba8c:	1585883a 	add	r2,r2,r22
   1ba90:	1739c83a 	sub	fp,r2,fp
   1ba94:	a00b883a 	mov	r5,r20
   1ba98:	e009883a 	mov	r4,fp
   1ba9c:	d8c00215 	stw	r3,8(sp)
   1baa0:	0010edc0 	call	10edc <__udivsi3>
   1baa4:	100b883a 	mov	r5,r2
   1baa8:	9009883a 	mov	r4,r18
   1baac:	1021883a 	mov	r16,r2
   1bab0:	00122700 	call	12270 <__mulsi3>
   1bab4:	a00b883a 	mov	r5,r20
   1bab8:	e009883a 	mov	r4,fp
   1babc:	d8800415 	stw	r2,16(sp)
   1bac0:	0010f400 	call	10f40 <__umodsi3>
   1bac4:	1004943a 	slli	r2,r2,16
   1bac8:	da000417 	ldw	r8,16(sp)
   1bacc:	bdffffcc 	andi	r23,r23,65535
   1bad0:	b884b03a 	or	r2,r23,r2
   1bad4:	d8c00217 	ldw	r3,8(sp)
   1bad8:	1200062e 	bgeu	r2,r8,1baf4 <__divdf3+0x424>
   1badc:	1585883a 	add	r2,r2,r22
   1bae0:	813fffc4 	addi	r4,r16,-1
   1bae4:	15810236 	bltu	r2,r22,1bef0 <__divdf3+0x820>
   1bae8:	1201012e 	bgeu	r2,r8,1bef0 <__divdf3+0x820>
   1baec:	843fff84 	addi	r16,r16,-2
   1baf0:	1585883a 	add	r2,r2,r22
   1baf4:	8822943a 	slli	r17,r17,16
   1baf8:	d9800017 	ldw	r6,0(sp)
   1bafc:	1211c83a 	sub	r8,r2,r8
   1bb00:	8c22b03a 	or	r17,r17,r16
   1bb04:	373fffcc 	andi	fp,r6,65535
   1bb08:	8abfffcc 	andi	r10,r17,65535
   1bb0c:	8820d43a 	srli	r16,r17,16
   1bb10:	5009883a 	mov	r4,r10
   1bb14:	e00b883a 	mov	r5,fp
   1bb18:	302ed43a 	srli	r23,r6,16
   1bb1c:	d8c00215 	stw	r3,8(sp)
   1bb20:	da000415 	stw	r8,16(sp)
   1bb24:	da800115 	stw	r10,4(sp)
   1bb28:	00122700 	call	12270 <__mulsi3>
   1bb2c:	800b883a 	mov	r5,r16
   1bb30:	e009883a 	mov	r4,fp
   1bb34:	d8800515 	stw	r2,20(sp)
   1bb38:	00122700 	call	12270 <__mulsi3>
   1bb3c:	8009883a 	mov	r4,r16
   1bb40:	b80b883a 	mov	r5,r23
   1bb44:	d8800315 	stw	r2,12(sp)
   1bb48:	00122700 	call	12270 <__mulsi3>
   1bb4c:	da800117 	ldw	r10,4(sp)
   1bb50:	b80b883a 	mov	r5,r23
   1bb54:	1021883a 	mov	r16,r2
   1bb58:	5009883a 	mov	r4,r10
   1bb5c:	00122700 	call	12270 <__mulsi3>
   1bb60:	d9c00517 	ldw	r7,20(sp)
   1bb64:	da400317 	ldw	r9,12(sp)
   1bb68:	d8c00217 	ldw	r3,8(sp)
   1bb6c:	3808d43a 	srli	r4,r7,16
   1bb70:	1245883a 	add	r2,r2,r9
   1bb74:	da000417 	ldw	r8,16(sp)
   1bb78:	2085883a 	add	r2,r4,r2
   1bb7c:	1240022e 	bgeu	r2,r9,1bb88 <__divdf3+0x4b8>
   1bb80:	01000074 	movhi	r4,1
   1bb84:	8121883a 	add	r16,r16,r4
   1bb88:	1008d43a 	srli	r4,r2,16
   1bb8c:	1004943a 	slli	r2,r2,16
   1bb90:	39ffffcc 	andi	r7,r7,65535
   1bb94:	2409883a 	add	r4,r4,r16
   1bb98:	11c5883a 	add	r2,r2,r7
   1bb9c:	4100bb36 	bltu	r8,r4,1be8c <__divdf3+0x7bc>
   1bba0:	4100d726 	beq	r8,r4,1bf00 <__divdf3+0x830>
   1bba4:	4109c83a 	sub	r4,r8,r4
   1bba8:	a8a1c83a 	sub	r16,r21,r2
   1bbac:	ac2b803a 	cmpltu	r21,r21,r16
   1bbb0:	256bc83a 	sub	r21,r4,r21
   1bbb4:	b540d926 	beq	r22,r21,1bf1c <__divdf3+0x84c>
   1bbb8:	a00b883a 	mov	r5,r20
   1bbbc:	a809883a 	mov	r4,r21
   1bbc0:	d8c00215 	stw	r3,8(sp)
   1bbc4:	0010edc0 	call	10edc <__udivsi3>
   1bbc8:	100b883a 	mov	r5,r2
   1bbcc:	9009883a 	mov	r4,r18
   1bbd0:	d8800515 	stw	r2,20(sp)
   1bbd4:	00122700 	call	12270 <__mulsi3>
   1bbd8:	a809883a 	mov	r4,r21
   1bbdc:	a00b883a 	mov	r5,r20
   1bbe0:	d8800415 	stw	r2,16(sp)
   1bbe4:	0010f400 	call	10f40 <__umodsi3>
   1bbe8:	1004943a 	slli	r2,r2,16
   1bbec:	8008d43a 	srli	r4,r16,16
   1bbf0:	da000417 	ldw	r8,16(sp)
   1bbf4:	d8c00217 	ldw	r3,8(sp)
   1bbf8:	2084b03a 	or	r2,r4,r2
   1bbfc:	d9c00517 	ldw	r7,20(sp)
   1bc00:	1200062e 	bgeu	r2,r8,1bc1c <__divdf3+0x54c>
   1bc04:	1585883a 	add	r2,r2,r22
   1bc08:	393fffc4 	addi	r4,r7,-1
   1bc0c:	1580c536 	bltu	r2,r22,1bf24 <__divdf3+0x854>
   1bc10:	1200c42e 	bgeu	r2,r8,1bf24 <__divdf3+0x854>
   1bc14:	39ffff84 	addi	r7,r7,-2
   1bc18:	1585883a 	add	r2,r2,r22
   1bc1c:	122bc83a 	sub	r21,r2,r8
   1bc20:	a00b883a 	mov	r5,r20
   1bc24:	a809883a 	mov	r4,r21
   1bc28:	d8c00215 	stw	r3,8(sp)
   1bc2c:	d9c00515 	stw	r7,20(sp)
   1bc30:	0010edc0 	call	10edc <__udivsi3>
   1bc34:	9009883a 	mov	r4,r18
   1bc38:	100b883a 	mov	r5,r2
   1bc3c:	d8800415 	stw	r2,16(sp)
   1bc40:	00122700 	call	12270 <__mulsi3>
   1bc44:	a809883a 	mov	r4,r21
   1bc48:	a00b883a 	mov	r5,r20
   1bc4c:	1025883a 	mov	r18,r2
   1bc50:	0010f400 	call	10f40 <__umodsi3>
   1bc54:	1004943a 	slli	r2,r2,16
   1bc58:	813fffcc 	andi	r4,r16,65535
   1bc5c:	d8c00217 	ldw	r3,8(sp)
   1bc60:	20a0b03a 	or	r16,r4,r2
   1bc64:	d9c00517 	ldw	r7,20(sp)
   1bc68:	da000417 	ldw	r8,16(sp)
   1bc6c:	8480062e 	bgeu	r16,r18,1bc88 <__divdf3+0x5b8>
   1bc70:	85a1883a 	add	r16,r16,r22
   1bc74:	40bfffc4 	addi	r2,r8,-1
   1bc78:	8580ac36 	bltu	r16,r22,1bf2c <__divdf3+0x85c>
   1bc7c:	8480ab2e 	bgeu	r16,r18,1bf2c <__divdf3+0x85c>
   1bc80:	423fff84 	addi	r8,r8,-2
   1bc84:	85a1883a 	add	r16,r16,r22
   1bc88:	3804943a 	slli	r2,r7,16
   1bc8c:	84a1c83a 	sub	r16,r16,r18
   1bc90:	e009883a 	mov	r4,fp
   1bc94:	1228b03a 	or	r20,r2,r8
   1bc98:	a1ffffcc 	andi	r7,r20,65535
   1bc9c:	a024d43a 	srli	r18,r20,16
   1bca0:	380b883a 	mov	r5,r7
   1bca4:	d8c00215 	stw	r3,8(sp)
   1bca8:	d9c00515 	stw	r7,20(sp)
   1bcac:	00122700 	call	12270 <__mulsi3>
   1bcb0:	900b883a 	mov	r5,r18
   1bcb4:	e009883a 	mov	r4,fp
   1bcb8:	102b883a 	mov	r21,r2
   1bcbc:	00122700 	call	12270 <__mulsi3>
   1bcc0:	900b883a 	mov	r5,r18
   1bcc4:	b809883a 	mov	r4,r23
   1bcc8:	1039883a 	mov	fp,r2
   1bccc:	00122700 	call	12270 <__mulsi3>
   1bcd0:	d9c00517 	ldw	r7,20(sp)
   1bcd4:	b80b883a 	mov	r5,r23
   1bcd8:	1025883a 	mov	r18,r2
   1bcdc:	3809883a 	mov	r4,r7
   1bce0:	00122700 	call	12270 <__mulsi3>
   1bce4:	a808d43a 	srli	r4,r21,16
   1bce8:	1705883a 	add	r2,r2,fp
   1bcec:	d8c00217 	ldw	r3,8(sp)
   1bcf0:	2085883a 	add	r2,r4,r2
   1bcf4:	1700022e 	bgeu	r2,fp,1bd00 <__divdf3+0x630>
   1bcf8:	01000074 	movhi	r4,1
   1bcfc:	9125883a 	add	r18,r18,r4
   1bd00:	1008d43a 	srli	r4,r2,16
   1bd04:	1004943a 	slli	r2,r2,16
   1bd08:	ad7fffcc 	andi	r21,r21,65535
   1bd0c:	2489883a 	add	r4,r4,r18
   1bd10:	1545883a 	add	r2,r2,r21
   1bd14:	81003836 	bltu	r16,r4,1bdf8 <__divdf3+0x728>
   1bd18:	81003626 	beq	r16,r4,1bdf4 <__divdf3+0x724>
   1bd1c:	a5000054 	ori	r20,r20,1
   1bd20:	1880ffc4 	addi	r2,r3,1023
   1bd24:	00bf2e0e 	bge	zero,r2,1b9e0 <_gp+0xffff5924>
   1bd28:	a10001cc 	andi	r4,r20,7
   1bd2c:	20000726 	beq	r4,zero,1bd4c <__divdf3+0x67c>
   1bd30:	a10003cc 	andi	r4,r20,15
   1bd34:	01400104 	movi	r5,4
   1bd38:	21400426 	beq	r4,r5,1bd4c <__divdf3+0x67c>
   1bd3c:	a149883a 	add	r4,r20,r5
   1bd40:	2529803a 	cmpltu	r20,r4,r20
   1bd44:	8d23883a 	add	r17,r17,r20
   1bd48:	2029883a 	mov	r20,r4
   1bd4c:	8900402c 	andhi	r4,r17,256
   1bd50:	20000426 	beq	r4,zero,1bd64 <__divdf3+0x694>
   1bd54:	18810004 	addi	r2,r3,1024
   1bd58:	00ffc034 	movhi	r3,65280
   1bd5c:	18ffffc4 	addi	r3,r3,-1
   1bd60:	88e2703a 	and	r17,r17,r3
   1bd64:	00c1ff84 	movi	r3,2046
   1bd68:	18beb416 	blt	r3,r2,1b83c <_gp+0xffff5780>
   1bd6c:	a028d0fa 	srli	r20,r20,3
   1bd70:	882a977a 	slli	r21,r17,29
   1bd74:	8820927a 	slli	r16,r17,9
   1bd78:	1081ffcc 	andi	r2,r2,2047
   1bd7c:	ad2ab03a 	or	r21,r21,r20
   1bd80:	8020d33a 	srli	r16,r16,12
   1bd84:	9900004c 	andi	r4,r19,1
   1bd88:	003eb006 	br	1b84c <_gp+0xffff5790>
   1bd8c:	8080022c 	andhi	r2,r16,8
   1bd90:	10001226 	beq	r2,zero,1bddc <__divdf3+0x70c>
   1bd94:	8880022c 	andhi	r2,r17,8
   1bd98:	1000101e 	bne	r2,zero,1bddc <__divdf3+0x70c>
   1bd9c:	00800434 	movhi	r2,16
   1bda0:	8c000234 	orhi	r16,r17,8
   1bda4:	10bfffc4 	addi	r2,r2,-1
   1bda8:	b809883a 	mov	r4,r23
   1bdac:	80a0703a 	and	r16,r16,r2
   1bdb0:	a02b883a 	mov	r21,r20
   1bdb4:	003f0806 	br	1b9d8 <_gp+0xffff591c>
   1bdb8:	008000c4 	movi	r2,3
   1bdbc:	3880b126 	beq	r7,r2,1c084 <__divdf3+0x9b4>
   1bdc0:	00800044 	movi	r2,1
   1bdc4:	38805b1e 	bne	r7,r2,1bf34 <__divdf3+0x864>
   1bdc8:	e009883a 	mov	r4,fp
   1bdcc:	0005883a 	mov	r2,zero
   1bdd0:	0021883a 	mov	r16,zero
   1bdd4:	002b883a 	mov	r21,zero
   1bdd8:	003e9c06 	br	1b84c <_gp+0xffff5790>
   1bddc:	00800434 	movhi	r2,16
   1bde0:	84000234 	orhi	r16,r16,8
   1bde4:	10bfffc4 	addi	r2,r2,-1
   1bde8:	b009883a 	mov	r4,r22
   1bdec:	80a0703a 	and	r16,r16,r2
   1bdf0:	003ef906 	br	1b9d8 <_gp+0xffff591c>
   1bdf4:	103fca26 	beq	r2,zero,1bd20 <_gp+0xffff5c64>
   1bdf8:	b421883a 	add	r16,r22,r16
   1bdfc:	a17fffc4 	addi	r5,r20,-1
   1be00:	8580422e 	bgeu	r16,r22,1bf0c <__divdf3+0x83c>
   1be04:	2829883a 	mov	r20,r5
   1be08:	813fc41e 	bne	r16,r4,1bd1c <_gp+0xffff5c60>
   1be0c:	d9800017 	ldw	r6,0(sp)
   1be10:	30bfc21e 	bne	r6,r2,1bd1c <_gp+0xffff5c60>
   1be14:	003fc206 	br	1bd20 <_gp+0xffff5c64>
   1be18:	143ff604 	addi	r16,r2,-40
   1be1c:	8c20983a 	sll	r16,r17,r16
   1be20:	002b883a 	mov	r21,zero
   1be24:	003eb406 	br	1b8f8 <_gp+0xffff583c>
   1be28:	d9800215 	stw	r6,8(sp)
   1be2c:	d9c00515 	stw	r7,20(sp)
   1be30:	da000415 	stw	r8,16(sp)
   1be34:	001220c0 	call	1220c <__clzsi2>
   1be38:	10800804 	addi	r2,r2,32
   1be3c:	da000417 	ldw	r8,16(sp)
   1be40:	d9c00517 	ldw	r7,20(sp)
   1be44:	d9800217 	ldw	r6,8(sp)
   1be48:	003ea106 	br	1b8d0 <_gp+0xffff5814>
   1be4c:	147ff604 	addi	r17,r2,-40
   1be50:	3462983a 	sll	r17,r6,r17
   1be54:	0029883a 	mov	r20,zero
   1be58:	003ec906 	br	1b980 <_gp+0xffff58c4>
   1be5c:	3009883a 	mov	r4,r6
   1be60:	d9400115 	stw	r5,4(sp)
   1be64:	d9800215 	stw	r6,8(sp)
   1be68:	da000415 	stw	r8,16(sp)
   1be6c:	da400315 	stw	r9,12(sp)
   1be70:	001220c0 	call	1220c <__clzsi2>
   1be74:	10800804 	addi	r2,r2,32
   1be78:	da400317 	ldw	r9,12(sp)
   1be7c:	da000417 	ldw	r8,16(sp)
   1be80:	d9800217 	ldw	r6,8(sp)
   1be84:	d9400117 	ldw	r5,4(sp)
   1be88:	003eb306 	br	1b958 <_gp+0xffff589c>
   1be8c:	d9800017 	ldw	r6,0(sp)
   1be90:	a9ab883a 	add	r21,r21,r6
   1be94:	a98b803a 	cmpltu	r5,r21,r6
   1be98:	2d8b883a 	add	r5,r5,r22
   1be9c:	2a11883a 	add	r8,r5,r8
   1bea0:	897fffc4 	addi	r5,r17,-1
   1bea4:	b2000c2e 	bgeu	r22,r8,1bed8 <__divdf3+0x808>
   1bea8:	41003f36 	bltu	r8,r4,1bfa8 <__divdf3+0x8d8>
   1beac:	22006c26 	beq	r4,r8,1c060 <__divdf3+0x990>
   1beb0:	4109c83a 	sub	r4,r8,r4
   1beb4:	2823883a 	mov	r17,r5
   1beb8:	003f3b06 	br	1bba8 <_gp+0xffff5aec>
   1bebc:	ad3ed336 	bltu	r21,r20,1ba0c <_gp+0xffff5950>
   1bec0:	a804d07a 	srli	r2,r21,1
   1bec4:	802e97fa 	slli	r23,r16,31
   1bec8:	a82a97fa 	slli	r21,r21,31
   1becc:	8020d07a 	srli	r16,r16,1
   1bed0:	b8aeb03a 	or	r23,r23,r2
   1bed4:	003ed006 	br	1ba18 <_gp+0xffff595c>
   1bed8:	b23ff51e 	bne	r22,r8,1beb0 <_gp+0xffff5df4>
   1bedc:	d9800017 	ldw	r6,0(sp)
   1bee0:	a9bff12e 	bgeu	r21,r6,1bea8 <_gp+0xffff5dec>
   1bee4:	b109c83a 	sub	r4,r22,r4
   1bee8:	2823883a 	mov	r17,r5
   1beec:	003f2e06 	br	1bba8 <_gp+0xffff5aec>
   1bef0:	2021883a 	mov	r16,r4
   1bef4:	003eff06 	br	1baf4 <_gp+0xffff5a38>
   1bef8:	2023883a 	mov	r17,r4
   1befc:	003ee406 	br	1ba90 <_gp+0xffff59d4>
   1bf00:	a8bfe236 	bltu	r21,r2,1be8c <_gp+0xffff5dd0>
   1bf04:	0009883a 	mov	r4,zero
   1bf08:	003f2706 	br	1bba8 <_gp+0xffff5aec>
   1bf0c:	81002d36 	bltu	r16,r4,1bfc4 <__divdf3+0x8f4>
   1bf10:	24005626 	beq	r4,r16,1c06c <__divdf3+0x99c>
   1bf14:	2829883a 	mov	r20,r5
   1bf18:	003f8006 	br	1bd1c <_gp+0xffff5c60>
   1bf1c:	053fffc4 	movi	r20,-1
   1bf20:	003f7f06 	br	1bd20 <_gp+0xffff5c64>
   1bf24:	200f883a 	mov	r7,r4
   1bf28:	003f3c06 	br	1bc1c <_gp+0xffff5b60>
   1bf2c:	1011883a 	mov	r8,r2
   1bf30:	003f5506 	br	1bc88 <_gp+0xffff5bcc>
   1bf34:	e027883a 	mov	r19,fp
   1bf38:	003f7906 	br	1bd20 <_gp+0xffff5c64>
   1bf3c:	010007c4 	movi	r4,31
   1bf40:	20c02816 	blt	r4,r3,1bfe4 <__divdf3+0x914>
   1bf44:	00800804 	movi	r2,32
   1bf48:	10c5c83a 	sub	r2,r2,r3
   1bf4c:	888a983a 	sll	r5,r17,r2
   1bf50:	a0c8d83a 	srl	r4,r20,r3
   1bf54:	a084983a 	sll	r2,r20,r2
   1bf58:	88e2d83a 	srl	r17,r17,r3
   1bf5c:	2906b03a 	or	r3,r5,r4
   1bf60:	1004c03a 	cmpne	r2,r2,zero
   1bf64:	1886b03a 	or	r3,r3,r2
   1bf68:	188001cc 	andi	r2,r3,7
   1bf6c:	10000726 	beq	r2,zero,1bf8c <__divdf3+0x8bc>
   1bf70:	188003cc 	andi	r2,r3,15
   1bf74:	01000104 	movi	r4,4
   1bf78:	11000426 	beq	r2,r4,1bf8c <__divdf3+0x8bc>
   1bf7c:	1805883a 	mov	r2,r3
   1bf80:	10c00104 	addi	r3,r2,4
   1bf84:	1885803a 	cmpltu	r2,r3,r2
   1bf88:	88a3883a 	add	r17,r17,r2
   1bf8c:	8880202c 	andhi	r2,r17,128
   1bf90:	10002926 	beq	r2,zero,1c038 <__divdf3+0x968>
   1bf94:	9900004c 	andi	r4,r19,1
   1bf98:	00800044 	movi	r2,1
   1bf9c:	0021883a 	mov	r16,zero
   1bfa0:	002b883a 	mov	r21,zero
   1bfa4:	003e2906 	br	1b84c <_gp+0xffff5790>
   1bfa8:	d9800017 	ldw	r6,0(sp)
   1bfac:	8c7fff84 	addi	r17,r17,-2
   1bfb0:	a9ab883a 	add	r21,r21,r6
   1bfb4:	a98b803a 	cmpltu	r5,r21,r6
   1bfb8:	2d8b883a 	add	r5,r5,r22
   1bfbc:	2a11883a 	add	r8,r5,r8
   1bfc0:	003ef806 	br	1bba4 <_gp+0xffff5ae8>
   1bfc4:	d9800017 	ldw	r6,0(sp)
   1bfc8:	318f883a 	add	r7,r6,r6
   1bfcc:	398b803a 	cmpltu	r5,r7,r6
   1bfd0:	2d8d883a 	add	r6,r5,r22
   1bfd4:	81a1883a 	add	r16,r16,r6
   1bfd8:	a17fff84 	addi	r5,r20,-2
   1bfdc:	d9c00015 	stw	r7,0(sp)
   1bfe0:	003f8806 	br	1be04 <_gp+0xffff5d48>
   1bfe4:	013ff844 	movi	r4,-31
   1bfe8:	2085c83a 	sub	r2,r4,r2
   1bfec:	8888d83a 	srl	r4,r17,r2
   1bff0:	00800804 	movi	r2,32
   1bff4:	18802126 	beq	r3,r2,1c07c <__divdf3+0x9ac>
   1bff8:	04001004 	movi	r16,64
   1bffc:	80c7c83a 	sub	r3,r16,r3
   1c000:	88e0983a 	sll	r16,r17,r3
   1c004:	8504b03a 	or	r2,r16,r20
   1c008:	1004c03a 	cmpne	r2,r2,zero
   1c00c:	2084b03a 	or	r2,r4,r2
   1c010:	144001cc 	andi	r17,r2,7
   1c014:	88000d1e 	bne	r17,zero,1c04c <__divdf3+0x97c>
   1c018:	0021883a 	mov	r16,zero
   1c01c:	102ad0fa 	srli	r21,r2,3
   1c020:	9900004c 	andi	r4,r19,1
   1c024:	0005883a 	mov	r2,zero
   1c028:	ac6ab03a 	or	r21,r21,r17
   1c02c:	003e0706 	br	1b84c <_gp+0xffff5790>
   1c030:	1007883a 	mov	r3,r2
   1c034:	0023883a 	mov	r17,zero
   1c038:	8820927a 	slli	r16,r17,9
   1c03c:	1805883a 	mov	r2,r3
   1c040:	8822977a 	slli	r17,r17,29
   1c044:	8020d33a 	srli	r16,r16,12
   1c048:	003ff406 	br	1c01c <_gp+0xffff5f60>
   1c04c:	10c003cc 	andi	r3,r2,15
   1c050:	01000104 	movi	r4,4
   1c054:	193ff626 	beq	r3,r4,1c030 <_gp+0xffff5f74>
   1c058:	0023883a 	mov	r17,zero
   1c05c:	003fc806 	br	1bf80 <_gp+0xffff5ec4>
   1c060:	a8bfd136 	bltu	r21,r2,1bfa8 <_gp+0xffff5eec>
   1c064:	2823883a 	mov	r17,r5
   1c068:	003fa606 	br	1bf04 <_gp+0xffff5e48>
   1c06c:	d9800017 	ldw	r6,0(sp)
   1c070:	30bfd436 	bltu	r6,r2,1bfc4 <_gp+0xffff5f08>
   1c074:	2829883a 	mov	r20,r5
   1c078:	003f6406 	br	1be0c <_gp+0xffff5d50>
   1c07c:	0021883a 	mov	r16,zero
   1c080:	003fe006 	br	1c004 <_gp+0xffff5f48>
   1c084:	00800434 	movhi	r2,16
   1c088:	8c000234 	orhi	r16,r17,8
   1c08c:	10bfffc4 	addi	r2,r2,-1
   1c090:	e009883a 	mov	r4,fp
   1c094:	80a0703a 	and	r16,r16,r2
   1c098:	a02b883a 	mov	r21,r20
   1c09c:	003e4e06 	br	1b9d8 <_gp+0xffff591c>

0001c0a0 <__eqdf2>:
   1c0a0:	2804d53a 	srli	r2,r5,20
   1c0a4:	3806d53a 	srli	r3,r7,20
   1c0a8:	02000434 	movhi	r8,16
   1c0ac:	423fffc4 	addi	r8,r8,-1
   1c0b0:	1081ffcc 	andi	r2,r2,2047
   1c0b4:	0281ffc4 	movi	r10,2047
   1c0b8:	2a12703a 	and	r9,r5,r8
   1c0bc:	18c1ffcc 	andi	r3,r3,2047
   1c0c0:	3a10703a 	and	r8,r7,r8
   1c0c4:	280ad7fa 	srli	r5,r5,31
   1c0c8:	380ed7fa 	srli	r7,r7,31
   1c0cc:	12801026 	beq	r2,r10,1c110 <__eqdf2+0x70>
   1c0d0:	0281ffc4 	movi	r10,2047
   1c0d4:	1a800a26 	beq	r3,r10,1c100 <__eqdf2+0x60>
   1c0d8:	10c00226 	beq	r2,r3,1c0e4 <__eqdf2+0x44>
   1c0dc:	00800044 	movi	r2,1
   1c0e0:	f800283a 	ret
   1c0e4:	4a3ffd1e 	bne	r9,r8,1c0dc <_gp+0xffff6020>
   1c0e8:	21bffc1e 	bne	r4,r6,1c0dc <_gp+0xffff6020>
   1c0ec:	29c00c26 	beq	r5,r7,1c120 <__eqdf2+0x80>
   1c0f0:	103ffa1e 	bne	r2,zero,1c0dc <_gp+0xffff6020>
   1c0f4:	2244b03a 	or	r2,r4,r9
   1c0f8:	1004c03a 	cmpne	r2,r2,zero
   1c0fc:	f800283a 	ret
   1c100:	3214b03a 	or	r10,r6,r8
   1c104:	503ff426 	beq	r10,zero,1c0d8 <_gp+0xffff601c>
   1c108:	00800044 	movi	r2,1
   1c10c:	f800283a 	ret
   1c110:	2254b03a 	or	r10,r4,r9
   1c114:	503fee26 	beq	r10,zero,1c0d0 <_gp+0xffff6014>
   1c118:	00800044 	movi	r2,1
   1c11c:	f800283a 	ret
   1c120:	0005883a 	mov	r2,zero
   1c124:	f800283a 	ret

0001c128 <__gedf2>:
   1c128:	2804d53a 	srli	r2,r5,20
   1c12c:	3806d53a 	srli	r3,r7,20
   1c130:	02000434 	movhi	r8,16
   1c134:	423fffc4 	addi	r8,r8,-1
   1c138:	1081ffcc 	andi	r2,r2,2047
   1c13c:	0241ffc4 	movi	r9,2047
   1c140:	2a14703a 	and	r10,r5,r8
   1c144:	18c1ffcc 	andi	r3,r3,2047
   1c148:	3a10703a 	and	r8,r7,r8
   1c14c:	280ad7fa 	srli	r5,r5,31
   1c150:	380ed7fa 	srli	r7,r7,31
   1c154:	12401d26 	beq	r2,r9,1c1cc <__gedf2+0xa4>
   1c158:	0241ffc4 	movi	r9,2047
   1c15c:	1a401226 	beq	r3,r9,1c1a8 <__gedf2+0x80>
   1c160:	1000081e 	bne	r2,zero,1c184 <__gedf2+0x5c>
   1c164:	2296b03a 	or	r11,r4,r10
   1c168:	5813003a 	cmpeq	r9,r11,zero
   1c16c:	1800091e 	bne	r3,zero,1c194 <__gedf2+0x6c>
   1c170:	3218b03a 	or	r12,r6,r8
   1c174:	6000071e 	bne	r12,zero,1c194 <__gedf2+0x6c>
   1c178:	0005883a 	mov	r2,zero
   1c17c:	5800101e 	bne	r11,zero,1c1c0 <__gedf2+0x98>
   1c180:	f800283a 	ret
   1c184:	18000c1e 	bne	r3,zero,1c1b8 <__gedf2+0x90>
   1c188:	3212b03a 	or	r9,r6,r8
   1c18c:	48000c26 	beq	r9,zero,1c1c0 <__gedf2+0x98>
   1c190:	0013883a 	mov	r9,zero
   1c194:	39c03fcc 	andi	r7,r7,255
   1c198:	48000826 	beq	r9,zero,1c1bc <__gedf2+0x94>
   1c19c:	38000926 	beq	r7,zero,1c1c4 <__gedf2+0x9c>
   1c1a0:	00800044 	movi	r2,1
   1c1a4:	f800283a 	ret
   1c1a8:	3212b03a 	or	r9,r6,r8
   1c1ac:	483fec26 	beq	r9,zero,1c160 <_gp+0xffff60a4>
   1c1b0:	00bfff84 	movi	r2,-2
   1c1b4:	f800283a 	ret
   1c1b8:	39c03fcc 	andi	r7,r7,255
   1c1bc:	29c00626 	beq	r5,r7,1c1d8 <__gedf2+0xb0>
   1c1c0:	283ff726 	beq	r5,zero,1c1a0 <_gp+0xffff60e4>
   1c1c4:	00bfffc4 	movi	r2,-1
   1c1c8:	f800283a 	ret
   1c1cc:	2292b03a 	or	r9,r4,r10
   1c1d0:	483fe126 	beq	r9,zero,1c158 <_gp+0xffff609c>
   1c1d4:	003ff606 	br	1c1b0 <_gp+0xffff60f4>
   1c1d8:	18bff916 	blt	r3,r2,1c1c0 <_gp+0xffff6104>
   1c1dc:	10c00316 	blt	r2,r3,1c1ec <__gedf2+0xc4>
   1c1e0:	42bff736 	bltu	r8,r10,1c1c0 <_gp+0xffff6104>
   1c1e4:	52000326 	beq	r10,r8,1c1f4 <__gedf2+0xcc>
   1c1e8:	5200042e 	bgeu	r10,r8,1c1fc <__gedf2+0xd4>
   1c1ec:	283fec1e 	bne	r5,zero,1c1a0 <_gp+0xffff60e4>
   1c1f0:	003ff406 	br	1c1c4 <_gp+0xffff6108>
   1c1f4:	313ff236 	bltu	r6,r4,1c1c0 <_gp+0xffff6104>
   1c1f8:	21bffc36 	bltu	r4,r6,1c1ec <_gp+0xffff6130>
   1c1fc:	0005883a 	mov	r2,zero
   1c200:	f800283a 	ret

0001c204 <__ledf2>:
   1c204:	2804d53a 	srli	r2,r5,20
   1c208:	3810d53a 	srli	r8,r7,20
   1c20c:	00c00434 	movhi	r3,16
   1c210:	18ffffc4 	addi	r3,r3,-1
   1c214:	1081ffcc 	andi	r2,r2,2047
   1c218:	0241ffc4 	movi	r9,2047
   1c21c:	28d4703a 	and	r10,r5,r3
   1c220:	4201ffcc 	andi	r8,r8,2047
   1c224:	38c6703a 	and	r3,r7,r3
   1c228:	280ad7fa 	srli	r5,r5,31
   1c22c:	380ed7fa 	srli	r7,r7,31
   1c230:	12401f26 	beq	r2,r9,1c2b0 <__ledf2+0xac>
   1c234:	0241ffc4 	movi	r9,2047
   1c238:	42401426 	beq	r8,r9,1c28c <__ledf2+0x88>
   1c23c:	1000091e 	bne	r2,zero,1c264 <__ledf2+0x60>
   1c240:	2296b03a 	or	r11,r4,r10
   1c244:	5813003a 	cmpeq	r9,r11,zero
   1c248:	29403fcc 	andi	r5,r5,255
   1c24c:	40000a1e 	bne	r8,zero,1c278 <__ledf2+0x74>
   1c250:	30d8b03a 	or	r12,r6,r3
   1c254:	6000081e 	bne	r12,zero,1c278 <__ledf2+0x74>
   1c258:	0005883a 	mov	r2,zero
   1c25c:	5800111e 	bne	r11,zero,1c2a4 <__ledf2+0xa0>
   1c260:	f800283a 	ret
   1c264:	29403fcc 	andi	r5,r5,255
   1c268:	40000c1e 	bne	r8,zero,1c29c <__ledf2+0x98>
   1c26c:	30d2b03a 	or	r9,r6,r3
   1c270:	48000c26 	beq	r9,zero,1c2a4 <__ledf2+0xa0>
   1c274:	0013883a 	mov	r9,zero
   1c278:	39c03fcc 	andi	r7,r7,255
   1c27c:	48000826 	beq	r9,zero,1c2a0 <__ledf2+0x9c>
   1c280:	38001126 	beq	r7,zero,1c2c8 <__ledf2+0xc4>
   1c284:	00800044 	movi	r2,1
   1c288:	f800283a 	ret
   1c28c:	30d2b03a 	or	r9,r6,r3
   1c290:	483fea26 	beq	r9,zero,1c23c <_gp+0xffff6180>
   1c294:	00800084 	movi	r2,2
   1c298:	f800283a 	ret
   1c29c:	39c03fcc 	andi	r7,r7,255
   1c2a0:	39400726 	beq	r7,r5,1c2c0 <__ledf2+0xbc>
   1c2a4:	2800081e 	bne	r5,zero,1c2c8 <__ledf2+0xc4>
   1c2a8:	00800044 	movi	r2,1
   1c2ac:	f800283a 	ret
   1c2b0:	2292b03a 	or	r9,r4,r10
   1c2b4:	483fdf26 	beq	r9,zero,1c234 <_gp+0xffff6178>
   1c2b8:	00800084 	movi	r2,2
   1c2bc:	f800283a 	ret
   1c2c0:	4080030e 	bge	r8,r2,1c2d0 <__ledf2+0xcc>
   1c2c4:	383fef26 	beq	r7,zero,1c284 <_gp+0xffff61c8>
   1c2c8:	00bfffc4 	movi	r2,-1
   1c2cc:	f800283a 	ret
   1c2d0:	123feb16 	blt	r2,r8,1c280 <_gp+0xffff61c4>
   1c2d4:	1abff336 	bltu	r3,r10,1c2a4 <_gp+0xffff61e8>
   1c2d8:	50c00326 	beq	r10,r3,1c2e8 <__ledf2+0xe4>
   1c2dc:	50c0042e 	bgeu	r10,r3,1c2f0 <__ledf2+0xec>
   1c2e0:	283fe81e 	bne	r5,zero,1c284 <_gp+0xffff61c8>
   1c2e4:	003ff806 	br	1c2c8 <_gp+0xffff620c>
   1c2e8:	313fee36 	bltu	r6,r4,1c2a4 <_gp+0xffff61e8>
   1c2ec:	21bffc36 	bltu	r4,r6,1c2e0 <_gp+0xffff6224>
   1c2f0:	0005883a 	mov	r2,zero
   1c2f4:	f800283a 	ret

0001c2f8 <__subdf3>:
   1c2f8:	02000434 	movhi	r8,16
   1c2fc:	423fffc4 	addi	r8,r8,-1
   1c300:	defffb04 	addi	sp,sp,-20
   1c304:	2a14703a 	and	r10,r5,r8
   1c308:	3812d53a 	srli	r9,r7,20
   1c30c:	3a10703a 	and	r8,r7,r8
   1c310:	2006d77a 	srli	r3,r4,29
   1c314:	3004d77a 	srli	r2,r6,29
   1c318:	dc000015 	stw	r16,0(sp)
   1c31c:	501490fa 	slli	r10,r10,3
   1c320:	2820d53a 	srli	r16,r5,20
   1c324:	401090fa 	slli	r8,r8,3
   1c328:	dc800215 	stw	r18,8(sp)
   1c32c:	dc400115 	stw	r17,4(sp)
   1c330:	dfc00415 	stw	ra,16(sp)
   1c334:	202290fa 	slli	r17,r4,3
   1c338:	dcc00315 	stw	r19,12(sp)
   1c33c:	4a41ffcc 	andi	r9,r9,2047
   1c340:	0101ffc4 	movi	r4,2047
   1c344:	2824d7fa 	srli	r18,r5,31
   1c348:	8401ffcc 	andi	r16,r16,2047
   1c34c:	50c6b03a 	or	r3,r10,r3
   1c350:	380ed7fa 	srli	r7,r7,31
   1c354:	408ab03a 	or	r5,r8,r2
   1c358:	300c90fa 	slli	r6,r6,3
   1c35c:	49009626 	beq	r9,r4,1c5b8 <__subdf3+0x2c0>
   1c360:	39c0005c 	xori	r7,r7,1
   1c364:	8245c83a 	sub	r2,r16,r9
   1c368:	3c807426 	beq	r7,r18,1c53c <__subdf3+0x244>
   1c36c:	0080af0e 	bge	zero,r2,1c62c <__subdf3+0x334>
   1c370:	48002a1e 	bne	r9,zero,1c41c <__subdf3+0x124>
   1c374:	2988b03a 	or	r4,r5,r6
   1c378:	20009a1e 	bne	r4,zero,1c5e4 <__subdf3+0x2ec>
   1c37c:	888001cc 	andi	r2,r17,7
   1c380:	10000726 	beq	r2,zero,1c3a0 <__subdf3+0xa8>
   1c384:	888003cc 	andi	r2,r17,15
   1c388:	01000104 	movi	r4,4
   1c38c:	11000426 	beq	r2,r4,1c3a0 <__subdf3+0xa8>
   1c390:	890b883a 	add	r5,r17,r4
   1c394:	2c63803a 	cmpltu	r17,r5,r17
   1c398:	1c47883a 	add	r3,r3,r17
   1c39c:	2823883a 	mov	r17,r5
   1c3a0:	1880202c 	andhi	r2,r3,128
   1c3a4:	10005926 	beq	r2,zero,1c50c <__subdf3+0x214>
   1c3a8:	84000044 	addi	r16,r16,1
   1c3ac:	0081ffc4 	movi	r2,2047
   1c3b0:	8080be26 	beq	r16,r2,1c6ac <__subdf3+0x3b4>
   1c3b4:	017fe034 	movhi	r5,65408
   1c3b8:	297fffc4 	addi	r5,r5,-1
   1c3bc:	1946703a 	and	r3,r3,r5
   1c3c0:	1804977a 	slli	r2,r3,29
   1c3c4:	1806927a 	slli	r3,r3,9
   1c3c8:	8822d0fa 	srli	r17,r17,3
   1c3cc:	8401ffcc 	andi	r16,r16,2047
   1c3d0:	180ad33a 	srli	r5,r3,12
   1c3d4:	9100004c 	andi	r4,r18,1
   1c3d8:	1444b03a 	or	r2,r2,r17
   1c3dc:	80c1ffcc 	andi	r3,r16,2047
   1c3e0:	1820953a 	slli	r16,r3,20
   1c3e4:	20c03fcc 	andi	r3,r4,255
   1c3e8:	180897fa 	slli	r4,r3,31
   1c3ec:	00c00434 	movhi	r3,16
   1c3f0:	18ffffc4 	addi	r3,r3,-1
   1c3f4:	28c6703a 	and	r3,r5,r3
   1c3f8:	1c06b03a 	or	r3,r3,r16
   1c3fc:	1906b03a 	or	r3,r3,r4
   1c400:	dfc00417 	ldw	ra,16(sp)
   1c404:	dcc00317 	ldw	r19,12(sp)
   1c408:	dc800217 	ldw	r18,8(sp)
   1c40c:	dc400117 	ldw	r17,4(sp)
   1c410:	dc000017 	ldw	r16,0(sp)
   1c414:	dec00504 	addi	sp,sp,20
   1c418:	f800283a 	ret
   1c41c:	0101ffc4 	movi	r4,2047
   1c420:	813fd626 	beq	r16,r4,1c37c <_gp+0xffff62c0>
   1c424:	29402034 	orhi	r5,r5,128
   1c428:	01000e04 	movi	r4,56
   1c42c:	2080a316 	blt	r4,r2,1c6bc <__subdf3+0x3c4>
   1c430:	010007c4 	movi	r4,31
   1c434:	2080c616 	blt	r4,r2,1c750 <__subdf3+0x458>
   1c438:	01000804 	movi	r4,32
   1c43c:	2089c83a 	sub	r4,r4,r2
   1c440:	2910983a 	sll	r8,r5,r4
   1c444:	308ed83a 	srl	r7,r6,r2
   1c448:	3108983a 	sll	r4,r6,r4
   1c44c:	2884d83a 	srl	r2,r5,r2
   1c450:	41ccb03a 	or	r6,r8,r7
   1c454:	2008c03a 	cmpne	r4,r4,zero
   1c458:	310cb03a 	or	r6,r6,r4
   1c45c:	898dc83a 	sub	r6,r17,r6
   1c460:	89a3803a 	cmpltu	r17,r17,r6
   1c464:	1887c83a 	sub	r3,r3,r2
   1c468:	1c47c83a 	sub	r3,r3,r17
   1c46c:	3023883a 	mov	r17,r6
   1c470:	1880202c 	andhi	r2,r3,128
   1c474:	10002326 	beq	r2,zero,1c504 <__subdf3+0x20c>
   1c478:	04c02034 	movhi	r19,128
   1c47c:	9cffffc4 	addi	r19,r19,-1
   1c480:	1ce6703a 	and	r19,r3,r19
   1c484:	98007a26 	beq	r19,zero,1c670 <__subdf3+0x378>
   1c488:	9809883a 	mov	r4,r19
   1c48c:	001220c0 	call	1220c <__clzsi2>
   1c490:	113ffe04 	addi	r4,r2,-8
   1c494:	00c007c4 	movi	r3,31
   1c498:	19007b16 	blt	r3,r4,1c688 <__subdf3+0x390>
   1c49c:	00800804 	movi	r2,32
   1c4a0:	1105c83a 	sub	r2,r2,r4
   1c4a4:	8884d83a 	srl	r2,r17,r2
   1c4a8:	9906983a 	sll	r3,r19,r4
   1c4ac:	8922983a 	sll	r17,r17,r4
   1c4b0:	10c4b03a 	or	r2,r2,r3
   1c4b4:	24007816 	blt	r4,r16,1c698 <__subdf3+0x3a0>
   1c4b8:	2421c83a 	sub	r16,r4,r16
   1c4bc:	80c00044 	addi	r3,r16,1
   1c4c0:	010007c4 	movi	r4,31
   1c4c4:	20c09516 	blt	r4,r3,1c71c <__subdf3+0x424>
   1c4c8:	01400804 	movi	r5,32
   1c4cc:	28cbc83a 	sub	r5,r5,r3
   1c4d0:	88c8d83a 	srl	r4,r17,r3
   1c4d4:	8962983a 	sll	r17,r17,r5
   1c4d8:	114a983a 	sll	r5,r2,r5
   1c4dc:	10c6d83a 	srl	r3,r2,r3
   1c4e0:	8804c03a 	cmpne	r2,r17,zero
   1c4e4:	290ab03a 	or	r5,r5,r4
   1c4e8:	28a2b03a 	or	r17,r5,r2
   1c4ec:	0021883a 	mov	r16,zero
   1c4f0:	003fa206 	br	1c37c <_gp+0xffff62c0>
   1c4f4:	2090b03a 	or	r8,r4,r2
   1c4f8:	40018e26 	beq	r8,zero,1cb34 <__subdf3+0x83c>
   1c4fc:	1007883a 	mov	r3,r2
   1c500:	2023883a 	mov	r17,r4
   1c504:	888001cc 	andi	r2,r17,7
   1c508:	103f9e1e 	bne	r2,zero,1c384 <_gp+0xffff62c8>
   1c50c:	1804977a 	slli	r2,r3,29
   1c510:	8822d0fa 	srli	r17,r17,3
   1c514:	1810d0fa 	srli	r8,r3,3
   1c518:	9100004c 	andi	r4,r18,1
   1c51c:	1444b03a 	or	r2,r2,r17
   1c520:	00c1ffc4 	movi	r3,2047
   1c524:	80c02826 	beq	r16,r3,1c5c8 <__subdf3+0x2d0>
   1c528:	01400434 	movhi	r5,16
   1c52c:	297fffc4 	addi	r5,r5,-1
   1c530:	80e0703a 	and	r16,r16,r3
   1c534:	414a703a 	and	r5,r8,r5
   1c538:	003fa806 	br	1c3dc <_gp+0xffff6320>
   1c53c:	0080630e 	bge	zero,r2,1c6cc <__subdf3+0x3d4>
   1c540:	48003026 	beq	r9,zero,1c604 <__subdf3+0x30c>
   1c544:	0101ffc4 	movi	r4,2047
   1c548:	813f8c26 	beq	r16,r4,1c37c <_gp+0xffff62c0>
   1c54c:	29402034 	orhi	r5,r5,128
   1c550:	01000e04 	movi	r4,56
   1c554:	2080a90e 	bge	r4,r2,1c7fc <__subdf3+0x504>
   1c558:	298cb03a 	or	r6,r5,r6
   1c55c:	3012c03a 	cmpne	r9,r6,zero
   1c560:	0005883a 	mov	r2,zero
   1c564:	4c53883a 	add	r9,r9,r17
   1c568:	4c63803a 	cmpltu	r17,r9,r17
   1c56c:	10c7883a 	add	r3,r2,r3
   1c570:	88c7883a 	add	r3,r17,r3
   1c574:	4823883a 	mov	r17,r9
   1c578:	1880202c 	andhi	r2,r3,128
   1c57c:	1000d026 	beq	r2,zero,1c8c0 <__subdf3+0x5c8>
   1c580:	84000044 	addi	r16,r16,1
   1c584:	0081ffc4 	movi	r2,2047
   1c588:	8080fe26 	beq	r16,r2,1c984 <__subdf3+0x68c>
   1c58c:	00bfe034 	movhi	r2,65408
   1c590:	10bfffc4 	addi	r2,r2,-1
   1c594:	1886703a 	and	r3,r3,r2
   1c598:	880ad07a 	srli	r5,r17,1
   1c59c:	180497fa 	slli	r2,r3,31
   1c5a0:	8900004c 	andi	r4,r17,1
   1c5a4:	2922b03a 	or	r17,r5,r4
   1c5a8:	1806d07a 	srli	r3,r3,1
   1c5ac:	1462b03a 	or	r17,r2,r17
   1c5b0:	3825883a 	mov	r18,r7
   1c5b4:	003f7106 	br	1c37c <_gp+0xffff62c0>
   1c5b8:	2984b03a 	or	r2,r5,r6
   1c5bc:	103f6826 	beq	r2,zero,1c360 <_gp+0xffff62a4>
   1c5c0:	39c03fcc 	andi	r7,r7,255
   1c5c4:	003f6706 	br	1c364 <_gp+0xffff62a8>
   1c5c8:	4086b03a 	or	r3,r8,r2
   1c5cc:	18015226 	beq	r3,zero,1cb18 <__subdf3+0x820>
   1c5d0:	00c00434 	movhi	r3,16
   1c5d4:	41400234 	orhi	r5,r8,8
   1c5d8:	18ffffc4 	addi	r3,r3,-1
   1c5dc:	28ca703a 	and	r5,r5,r3
   1c5e0:	003f7e06 	br	1c3dc <_gp+0xffff6320>
   1c5e4:	10bfffc4 	addi	r2,r2,-1
   1c5e8:	1000491e 	bne	r2,zero,1c710 <__subdf3+0x418>
   1c5ec:	898fc83a 	sub	r7,r17,r6
   1c5f0:	89e3803a 	cmpltu	r17,r17,r7
   1c5f4:	1947c83a 	sub	r3,r3,r5
   1c5f8:	1c47c83a 	sub	r3,r3,r17
   1c5fc:	3823883a 	mov	r17,r7
   1c600:	003f9b06 	br	1c470 <_gp+0xffff63b4>
   1c604:	2988b03a 	or	r4,r5,r6
   1c608:	203f5c26 	beq	r4,zero,1c37c <_gp+0xffff62c0>
   1c60c:	10bfffc4 	addi	r2,r2,-1
   1c610:	1000931e 	bne	r2,zero,1c860 <__subdf3+0x568>
   1c614:	898d883a 	add	r6,r17,r6
   1c618:	3463803a 	cmpltu	r17,r6,r17
   1c61c:	1947883a 	add	r3,r3,r5
   1c620:	88c7883a 	add	r3,r17,r3
   1c624:	3023883a 	mov	r17,r6
   1c628:	003fd306 	br	1c578 <_gp+0xffff64bc>
   1c62c:	1000541e 	bne	r2,zero,1c780 <__subdf3+0x488>
   1c630:	80800044 	addi	r2,r16,1
   1c634:	1081ffcc 	andi	r2,r2,2047
   1c638:	01000044 	movi	r4,1
   1c63c:	2080a20e 	bge	r4,r2,1c8c8 <__subdf3+0x5d0>
   1c640:	8989c83a 	sub	r4,r17,r6
   1c644:	8905803a 	cmpltu	r2,r17,r4
   1c648:	1967c83a 	sub	r19,r3,r5
   1c64c:	98a7c83a 	sub	r19,r19,r2
   1c650:	9880202c 	andhi	r2,r19,128
   1c654:	10006326 	beq	r2,zero,1c7e4 <__subdf3+0x4ec>
   1c658:	3463c83a 	sub	r17,r6,r17
   1c65c:	28c7c83a 	sub	r3,r5,r3
   1c660:	344d803a 	cmpltu	r6,r6,r17
   1c664:	19a7c83a 	sub	r19,r3,r6
   1c668:	3825883a 	mov	r18,r7
   1c66c:	983f861e 	bne	r19,zero,1c488 <_gp+0xffff63cc>
   1c670:	8809883a 	mov	r4,r17
   1c674:	001220c0 	call	1220c <__clzsi2>
   1c678:	10800804 	addi	r2,r2,32
   1c67c:	113ffe04 	addi	r4,r2,-8
   1c680:	00c007c4 	movi	r3,31
   1c684:	193f850e 	bge	r3,r4,1c49c <_gp+0xffff63e0>
   1c688:	10bff604 	addi	r2,r2,-40
   1c68c:	8884983a 	sll	r2,r17,r2
   1c690:	0023883a 	mov	r17,zero
   1c694:	243f880e 	bge	r4,r16,1c4b8 <_gp+0xffff63fc>
   1c698:	00ffe034 	movhi	r3,65408
   1c69c:	18ffffc4 	addi	r3,r3,-1
   1c6a0:	8121c83a 	sub	r16,r16,r4
   1c6a4:	10c6703a 	and	r3,r2,r3
   1c6a8:	003f3406 	br	1c37c <_gp+0xffff62c0>
   1c6ac:	9100004c 	andi	r4,r18,1
   1c6b0:	000b883a 	mov	r5,zero
   1c6b4:	0005883a 	mov	r2,zero
   1c6b8:	003f4806 	br	1c3dc <_gp+0xffff6320>
   1c6bc:	298cb03a 	or	r6,r5,r6
   1c6c0:	300cc03a 	cmpne	r6,r6,zero
   1c6c4:	0005883a 	mov	r2,zero
   1c6c8:	003f6406 	br	1c45c <_gp+0xffff63a0>
   1c6cc:	10009a1e 	bne	r2,zero,1c938 <__subdf3+0x640>
   1c6d0:	82400044 	addi	r9,r16,1
   1c6d4:	4881ffcc 	andi	r2,r9,2047
   1c6d8:	02800044 	movi	r10,1
   1c6dc:	5080670e 	bge	r10,r2,1c87c <__subdf3+0x584>
   1c6e0:	0081ffc4 	movi	r2,2047
   1c6e4:	4880af26 	beq	r9,r2,1c9a4 <__subdf3+0x6ac>
   1c6e8:	898d883a 	add	r6,r17,r6
   1c6ec:	1945883a 	add	r2,r3,r5
   1c6f0:	3447803a 	cmpltu	r3,r6,r17
   1c6f4:	1887883a 	add	r3,r3,r2
   1c6f8:	182297fa 	slli	r17,r3,31
   1c6fc:	300cd07a 	srli	r6,r6,1
   1c700:	1806d07a 	srli	r3,r3,1
   1c704:	4821883a 	mov	r16,r9
   1c708:	89a2b03a 	or	r17,r17,r6
   1c70c:	003f1b06 	br	1c37c <_gp+0xffff62c0>
   1c710:	0101ffc4 	movi	r4,2047
   1c714:	813f441e 	bne	r16,r4,1c428 <_gp+0xffff636c>
   1c718:	003f1806 	br	1c37c <_gp+0xffff62c0>
   1c71c:	843ff844 	addi	r16,r16,-31
   1c720:	01400804 	movi	r5,32
   1c724:	1408d83a 	srl	r4,r2,r16
   1c728:	19405026 	beq	r3,r5,1c86c <__subdf3+0x574>
   1c72c:	01401004 	movi	r5,64
   1c730:	28c7c83a 	sub	r3,r5,r3
   1c734:	10c4983a 	sll	r2,r2,r3
   1c738:	88a2b03a 	or	r17,r17,r2
   1c73c:	8822c03a 	cmpne	r17,r17,zero
   1c740:	2462b03a 	or	r17,r4,r17
   1c744:	0007883a 	mov	r3,zero
   1c748:	0021883a 	mov	r16,zero
   1c74c:	003f6d06 	br	1c504 <_gp+0xffff6448>
   1c750:	11fff804 	addi	r7,r2,-32
   1c754:	01000804 	movi	r4,32
   1c758:	29ced83a 	srl	r7,r5,r7
   1c75c:	11004526 	beq	r2,r4,1c874 <__subdf3+0x57c>
   1c760:	01001004 	movi	r4,64
   1c764:	2089c83a 	sub	r4,r4,r2
   1c768:	2904983a 	sll	r2,r5,r4
   1c76c:	118cb03a 	or	r6,r2,r6
   1c770:	300cc03a 	cmpne	r6,r6,zero
   1c774:	398cb03a 	or	r6,r7,r6
   1c778:	0005883a 	mov	r2,zero
   1c77c:	003f3706 	br	1c45c <_gp+0xffff63a0>
   1c780:	80002a26 	beq	r16,zero,1c82c <__subdf3+0x534>
   1c784:	0101ffc4 	movi	r4,2047
   1c788:	49006626 	beq	r9,r4,1c924 <__subdf3+0x62c>
   1c78c:	0085c83a 	sub	r2,zero,r2
   1c790:	18c02034 	orhi	r3,r3,128
   1c794:	01000e04 	movi	r4,56
   1c798:	20807e16 	blt	r4,r2,1c994 <__subdf3+0x69c>
   1c79c:	010007c4 	movi	r4,31
   1c7a0:	2080e716 	blt	r4,r2,1cb40 <__subdf3+0x848>
   1c7a4:	01000804 	movi	r4,32
   1c7a8:	2089c83a 	sub	r4,r4,r2
   1c7ac:	1914983a 	sll	r10,r3,r4
   1c7b0:	8890d83a 	srl	r8,r17,r2
   1c7b4:	8908983a 	sll	r4,r17,r4
   1c7b8:	1884d83a 	srl	r2,r3,r2
   1c7bc:	5222b03a 	or	r17,r10,r8
   1c7c0:	2006c03a 	cmpne	r3,r4,zero
   1c7c4:	88e2b03a 	or	r17,r17,r3
   1c7c8:	3463c83a 	sub	r17,r6,r17
   1c7cc:	2885c83a 	sub	r2,r5,r2
   1c7d0:	344d803a 	cmpltu	r6,r6,r17
   1c7d4:	1187c83a 	sub	r3,r2,r6
   1c7d8:	4821883a 	mov	r16,r9
   1c7dc:	3825883a 	mov	r18,r7
   1c7e0:	003f2306 	br	1c470 <_gp+0xffff63b4>
   1c7e4:	24d0b03a 	or	r8,r4,r19
   1c7e8:	40001b1e 	bne	r8,zero,1c858 <__subdf3+0x560>
   1c7ec:	0005883a 	mov	r2,zero
   1c7f0:	0009883a 	mov	r4,zero
   1c7f4:	0021883a 	mov	r16,zero
   1c7f8:	003f4906 	br	1c520 <_gp+0xffff6464>
   1c7fc:	010007c4 	movi	r4,31
   1c800:	20803a16 	blt	r4,r2,1c8ec <__subdf3+0x5f4>
   1c804:	01000804 	movi	r4,32
   1c808:	2089c83a 	sub	r4,r4,r2
   1c80c:	2912983a 	sll	r9,r5,r4
   1c810:	3090d83a 	srl	r8,r6,r2
   1c814:	3108983a 	sll	r4,r6,r4
   1c818:	2884d83a 	srl	r2,r5,r2
   1c81c:	4a12b03a 	or	r9,r9,r8
   1c820:	2008c03a 	cmpne	r4,r4,zero
   1c824:	4912b03a 	or	r9,r9,r4
   1c828:	003f4e06 	br	1c564 <_gp+0xffff64a8>
   1c82c:	1c48b03a 	or	r4,r3,r17
   1c830:	20003c26 	beq	r4,zero,1c924 <__subdf3+0x62c>
   1c834:	0084303a 	nor	r2,zero,r2
   1c838:	1000381e 	bne	r2,zero,1c91c <__subdf3+0x624>
   1c83c:	3463c83a 	sub	r17,r6,r17
   1c840:	28c5c83a 	sub	r2,r5,r3
   1c844:	344d803a 	cmpltu	r6,r6,r17
   1c848:	1187c83a 	sub	r3,r2,r6
   1c84c:	4821883a 	mov	r16,r9
   1c850:	3825883a 	mov	r18,r7
   1c854:	003f0606 	br	1c470 <_gp+0xffff63b4>
   1c858:	2023883a 	mov	r17,r4
   1c85c:	003f0906 	br	1c484 <_gp+0xffff63c8>
   1c860:	0101ffc4 	movi	r4,2047
   1c864:	813f3a1e 	bne	r16,r4,1c550 <_gp+0xffff6494>
   1c868:	003ec406 	br	1c37c <_gp+0xffff62c0>
   1c86c:	0005883a 	mov	r2,zero
   1c870:	003fb106 	br	1c738 <_gp+0xffff667c>
   1c874:	0005883a 	mov	r2,zero
   1c878:	003fbc06 	br	1c76c <_gp+0xffff66b0>
   1c87c:	1c44b03a 	or	r2,r3,r17
   1c880:	80008e1e 	bne	r16,zero,1cabc <__subdf3+0x7c4>
   1c884:	1000c826 	beq	r2,zero,1cba8 <__subdf3+0x8b0>
   1c888:	2984b03a 	or	r2,r5,r6
   1c88c:	103ebb26 	beq	r2,zero,1c37c <_gp+0xffff62c0>
   1c890:	8989883a 	add	r4,r17,r6
   1c894:	1945883a 	add	r2,r3,r5
   1c898:	2447803a 	cmpltu	r3,r4,r17
   1c89c:	1887883a 	add	r3,r3,r2
   1c8a0:	1880202c 	andhi	r2,r3,128
   1c8a4:	2023883a 	mov	r17,r4
   1c8a8:	103f1626 	beq	r2,zero,1c504 <_gp+0xffff6448>
   1c8ac:	00bfe034 	movhi	r2,65408
   1c8b0:	10bfffc4 	addi	r2,r2,-1
   1c8b4:	5021883a 	mov	r16,r10
   1c8b8:	1886703a 	and	r3,r3,r2
   1c8bc:	003eaf06 	br	1c37c <_gp+0xffff62c0>
   1c8c0:	3825883a 	mov	r18,r7
   1c8c4:	003f0f06 	br	1c504 <_gp+0xffff6448>
   1c8c8:	1c44b03a 	or	r2,r3,r17
   1c8cc:	8000251e 	bne	r16,zero,1c964 <__subdf3+0x66c>
   1c8d0:	1000661e 	bne	r2,zero,1ca6c <__subdf3+0x774>
   1c8d4:	2990b03a 	or	r8,r5,r6
   1c8d8:	40009626 	beq	r8,zero,1cb34 <__subdf3+0x83c>
   1c8dc:	2807883a 	mov	r3,r5
   1c8e0:	3023883a 	mov	r17,r6
   1c8e4:	3825883a 	mov	r18,r7
   1c8e8:	003ea406 	br	1c37c <_gp+0xffff62c0>
   1c8ec:	127ff804 	addi	r9,r2,-32
   1c8f0:	01000804 	movi	r4,32
   1c8f4:	2a52d83a 	srl	r9,r5,r9
   1c8f8:	11008c26 	beq	r2,r4,1cb2c <__subdf3+0x834>
   1c8fc:	01001004 	movi	r4,64
   1c900:	2085c83a 	sub	r2,r4,r2
   1c904:	2884983a 	sll	r2,r5,r2
   1c908:	118cb03a 	or	r6,r2,r6
   1c90c:	300cc03a 	cmpne	r6,r6,zero
   1c910:	4992b03a 	or	r9,r9,r6
   1c914:	0005883a 	mov	r2,zero
   1c918:	003f1206 	br	1c564 <_gp+0xffff64a8>
   1c91c:	0101ffc4 	movi	r4,2047
   1c920:	493f9c1e 	bne	r9,r4,1c794 <_gp+0xffff66d8>
   1c924:	2807883a 	mov	r3,r5
   1c928:	3023883a 	mov	r17,r6
   1c92c:	4821883a 	mov	r16,r9
   1c930:	3825883a 	mov	r18,r7
   1c934:	003e9106 	br	1c37c <_gp+0xffff62c0>
   1c938:	80001f1e 	bne	r16,zero,1c9b8 <__subdf3+0x6c0>
   1c93c:	1c48b03a 	or	r4,r3,r17
   1c940:	20005a26 	beq	r4,zero,1caac <__subdf3+0x7b4>
   1c944:	0084303a 	nor	r2,zero,r2
   1c948:	1000561e 	bne	r2,zero,1caa4 <__subdf3+0x7ac>
   1c94c:	89a3883a 	add	r17,r17,r6
   1c950:	1945883a 	add	r2,r3,r5
   1c954:	898d803a 	cmpltu	r6,r17,r6
   1c958:	3087883a 	add	r3,r6,r2
   1c95c:	4821883a 	mov	r16,r9
   1c960:	003f0506 	br	1c578 <_gp+0xffff64bc>
   1c964:	10002b1e 	bne	r2,zero,1ca14 <__subdf3+0x71c>
   1c968:	2984b03a 	or	r2,r5,r6
   1c96c:	10008026 	beq	r2,zero,1cb70 <__subdf3+0x878>
   1c970:	2807883a 	mov	r3,r5
   1c974:	3023883a 	mov	r17,r6
   1c978:	3825883a 	mov	r18,r7
   1c97c:	0401ffc4 	movi	r16,2047
   1c980:	003e7e06 	br	1c37c <_gp+0xffff62c0>
   1c984:	3809883a 	mov	r4,r7
   1c988:	0011883a 	mov	r8,zero
   1c98c:	0005883a 	mov	r2,zero
   1c990:	003ee306 	br	1c520 <_gp+0xffff6464>
   1c994:	1c62b03a 	or	r17,r3,r17
   1c998:	8822c03a 	cmpne	r17,r17,zero
   1c99c:	0005883a 	mov	r2,zero
   1c9a0:	003f8906 	br	1c7c8 <_gp+0xffff670c>
   1c9a4:	3809883a 	mov	r4,r7
   1c9a8:	4821883a 	mov	r16,r9
   1c9ac:	0011883a 	mov	r8,zero
   1c9b0:	0005883a 	mov	r2,zero
   1c9b4:	003eda06 	br	1c520 <_gp+0xffff6464>
   1c9b8:	0101ffc4 	movi	r4,2047
   1c9bc:	49003b26 	beq	r9,r4,1caac <__subdf3+0x7b4>
   1c9c0:	0085c83a 	sub	r2,zero,r2
   1c9c4:	18c02034 	orhi	r3,r3,128
   1c9c8:	01000e04 	movi	r4,56
   1c9cc:	20806e16 	blt	r4,r2,1cb88 <__subdf3+0x890>
   1c9d0:	010007c4 	movi	r4,31
   1c9d4:	20807716 	blt	r4,r2,1cbb4 <__subdf3+0x8bc>
   1c9d8:	01000804 	movi	r4,32
   1c9dc:	2089c83a 	sub	r4,r4,r2
   1c9e0:	1914983a 	sll	r10,r3,r4
   1c9e4:	8890d83a 	srl	r8,r17,r2
   1c9e8:	8908983a 	sll	r4,r17,r4
   1c9ec:	1884d83a 	srl	r2,r3,r2
   1c9f0:	5222b03a 	or	r17,r10,r8
   1c9f4:	2006c03a 	cmpne	r3,r4,zero
   1c9f8:	88e2b03a 	or	r17,r17,r3
   1c9fc:	89a3883a 	add	r17,r17,r6
   1ca00:	1145883a 	add	r2,r2,r5
   1ca04:	898d803a 	cmpltu	r6,r17,r6
   1ca08:	3087883a 	add	r3,r6,r2
   1ca0c:	4821883a 	mov	r16,r9
   1ca10:	003ed906 	br	1c578 <_gp+0xffff64bc>
   1ca14:	2984b03a 	or	r2,r5,r6
   1ca18:	10004226 	beq	r2,zero,1cb24 <__subdf3+0x82c>
   1ca1c:	1808d0fa 	srli	r4,r3,3
   1ca20:	8822d0fa 	srli	r17,r17,3
   1ca24:	1806977a 	slli	r3,r3,29
   1ca28:	2080022c 	andhi	r2,r4,8
   1ca2c:	1c62b03a 	or	r17,r3,r17
   1ca30:	10000826 	beq	r2,zero,1ca54 <__subdf3+0x75c>
   1ca34:	2812d0fa 	srli	r9,r5,3
   1ca38:	4880022c 	andhi	r2,r9,8
   1ca3c:	1000051e 	bne	r2,zero,1ca54 <__subdf3+0x75c>
   1ca40:	300cd0fa 	srli	r6,r6,3
   1ca44:	2804977a 	slli	r2,r5,29
   1ca48:	4809883a 	mov	r4,r9
   1ca4c:	3825883a 	mov	r18,r7
   1ca50:	11a2b03a 	or	r17,r2,r6
   1ca54:	8806d77a 	srli	r3,r17,29
   1ca58:	200890fa 	slli	r4,r4,3
   1ca5c:	882290fa 	slli	r17,r17,3
   1ca60:	0401ffc4 	movi	r16,2047
   1ca64:	1906b03a 	or	r3,r3,r4
   1ca68:	003e4406 	br	1c37c <_gp+0xffff62c0>
   1ca6c:	2984b03a 	or	r2,r5,r6
   1ca70:	103e4226 	beq	r2,zero,1c37c <_gp+0xffff62c0>
   1ca74:	8989c83a 	sub	r4,r17,r6
   1ca78:	8911803a 	cmpltu	r8,r17,r4
   1ca7c:	1945c83a 	sub	r2,r3,r5
   1ca80:	1205c83a 	sub	r2,r2,r8
   1ca84:	1200202c 	andhi	r8,r2,128
   1ca88:	403e9a26 	beq	r8,zero,1c4f4 <_gp+0xffff6438>
   1ca8c:	3463c83a 	sub	r17,r6,r17
   1ca90:	28c5c83a 	sub	r2,r5,r3
   1ca94:	344d803a 	cmpltu	r6,r6,r17
   1ca98:	1187c83a 	sub	r3,r2,r6
   1ca9c:	3825883a 	mov	r18,r7
   1caa0:	003e3606 	br	1c37c <_gp+0xffff62c0>
   1caa4:	0101ffc4 	movi	r4,2047
   1caa8:	493fc71e 	bne	r9,r4,1c9c8 <_gp+0xffff690c>
   1caac:	2807883a 	mov	r3,r5
   1cab0:	3023883a 	mov	r17,r6
   1cab4:	4821883a 	mov	r16,r9
   1cab8:	003e3006 	br	1c37c <_gp+0xffff62c0>
   1cabc:	10003626 	beq	r2,zero,1cb98 <__subdf3+0x8a0>
   1cac0:	2984b03a 	or	r2,r5,r6
   1cac4:	10001726 	beq	r2,zero,1cb24 <__subdf3+0x82c>
   1cac8:	1808d0fa 	srli	r4,r3,3
   1cacc:	8822d0fa 	srli	r17,r17,3
   1cad0:	1806977a 	slli	r3,r3,29
   1cad4:	2080022c 	andhi	r2,r4,8
   1cad8:	1c62b03a 	or	r17,r3,r17
   1cadc:	10000726 	beq	r2,zero,1cafc <__subdf3+0x804>
   1cae0:	2812d0fa 	srli	r9,r5,3
   1cae4:	4880022c 	andhi	r2,r9,8
   1cae8:	1000041e 	bne	r2,zero,1cafc <__subdf3+0x804>
   1caec:	300cd0fa 	srli	r6,r6,3
   1caf0:	2804977a 	slli	r2,r5,29
   1caf4:	4809883a 	mov	r4,r9
   1caf8:	11a2b03a 	or	r17,r2,r6
   1cafc:	8806d77a 	srli	r3,r17,29
   1cb00:	200890fa 	slli	r4,r4,3
   1cb04:	882290fa 	slli	r17,r17,3
   1cb08:	3825883a 	mov	r18,r7
   1cb0c:	1906b03a 	or	r3,r3,r4
   1cb10:	0401ffc4 	movi	r16,2047
   1cb14:	003e1906 	br	1c37c <_gp+0xffff62c0>
   1cb18:	000b883a 	mov	r5,zero
   1cb1c:	0005883a 	mov	r2,zero
   1cb20:	003e2e06 	br	1c3dc <_gp+0xffff6320>
   1cb24:	0401ffc4 	movi	r16,2047
   1cb28:	003e1406 	br	1c37c <_gp+0xffff62c0>
   1cb2c:	0005883a 	mov	r2,zero
   1cb30:	003f7506 	br	1c908 <_gp+0xffff684c>
   1cb34:	0005883a 	mov	r2,zero
   1cb38:	0009883a 	mov	r4,zero
   1cb3c:	003e7806 	br	1c520 <_gp+0xffff6464>
   1cb40:	123ff804 	addi	r8,r2,-32
   1cb44:	01000804 	movi	r4,32
   1cb48:	1a10d83a 	srl	r8,r3,r8
   1cb4c:	11002526 	beq	r2,r4,1cbe4 <__subdf3+0x8ec>
   1cb50:	01001004 	movi	r4,64
   1cb54:	2085c83a 	sub	r2,r4,r2
   1cb58:	1884983a 	sll	r2,r3,r2
   1cb5c:	1444b03a 	or	r2,r2,r17
   1cb60:	1004c03a 	cmpne	r2,r2,zero
   1cb64:	40a2b03a 	or	r17,r8,r2
   1cb68:	0005883a 	mov	r2,zero
   1cb6c:	003f1606 	br	1c7c8 <_gp+0xffff670c>
   1cb70:	02000434 	movhi	r8,16
   1cb74:	0009883a 	mov	r4,zero
   1cb78:	423fffc4 	addi	r8,r8,-1
   1cb7c:	00bfffc4 	movi	r2,-1
   1cb80:	0401ffc4 	movi	r16,2047
   1cb84:	003e6606 	br	1c520 <_gp+0xffff6464>
   1cb88:	1c62b03a 	or	r17,r3,r17
   1cb8c:	8822c03a 	cmpne	r17,r17,zero
   1cb90:	0005883a 	mov	r2,zero
   1cb94:	003f9906 	br	1c9fc <_gp+0xffff6940>
   1cb98:	2807883a 	mov	r3,r5
   1cb9c:	3023883a 	mov	r17,r6
   1cba0:	0401ffc4 	movi	r16,2047
   1cba4:	003df506 	br	1c37c <_gp+0xffff62c0>
   1cba8:	2807883a 	mov	r3,r5
   1cbac:	3023883a 	mov	r17,r6
   1cbb0:	003df206 	br	1c37c <_gp+0xffff62c0>
   1cbb4:	123ff804 	addi	r8,r2,-32
   1cbb8:	01000804 	movi	r4,32
   1cbbc:	1a10d83a 	srl	r8,r3,r8
   1cbc0:	11000a26 	beq	r2,r4,1cbec <__subdf3+0x8f4>
   1cbc4:	01001004 	movi	r4,64
   1cbc8:	2085c83a 	sub	r2,r4,r2
   1cbcc:	1884983a 	sll	r2,r3,r2
   1cbd0:	1444b03a 	or	r2,r2,r17
   1cbd4:	1004c03a 	cmpne	r2,r2,zero
   1cbd8:	40a2b03a 	or	r17,r8,r2
   1cbdc:	0005883a 	mov	r2,zero
   1cbe0:	003f8606 	br	1c9fc <_gp+0xffff6940>
   1cbe4:	0005883a 	mov	r2,zero
   1cbe8:	003fdc06 	br	1cb5c <_gp+0xffff6aa0>
   1cbec:	0005883a 	mov	r2,zero
   1cbf0:	003ff706 	br	1cbd0 <_gp+0xffff6b14>

0001cbf4 <__floatunsidf>:
   1cbf4:	defffe04 	addi	sp,sp,-8
   1cbf8:	dc000015 	stw	r16,0(sp)
   1cbfc:	dfc00115 	stw	ra,4(sp)
   1cc00:	2021883a 	mov	r16,r4
   1cc04:	20002226 	beq	r4,zero,1cc90 <__floatunsidf+0x9c>
   1cc08:	001220c0 	call	1220c <__clzsi2>
   1cc0c:	01010784 	movi	r4,1054
   1cc10:	2089c83a 	sub	r4,r4,r2
   1cc14:	01810cc4 	movi	r6,1075
   1cc18:	310dc83a 	sub	r6,r6,r4
   1cc1c:	00c007c4 	movi	r3,31
   1cc20:	1980120e 	bge	r3,r6,1cc6c <__floatunsidf+0x78>
   1cc24:	00c104c4 	movi	r3,1043
   1cc28:	1907c83a 	sub	r3,r3,r4
   1cc2c:	80ca983a 	sll	r5,r16,r3
   1cc30:	00800434 	movhi	r2,16
   1cc34:	10bfffc4 	addi	r2,r2,-1
   1cc38:	2101ffcc 	andi	r4,r4,2047
   1cc3c:	0021883a 	mov	r16,zero
   1cc40:	288a703a 	and	r5,r5,r2
   1cc44:	2008953a 	slli	r4,r4,20
   1cc48:	00c00434 	movhi	r3,16
   1cc4c:	18ffffc4 	addi	r3,r3,-1
   1cc50:	28c6703a 	and	r3,r5,r3
   1cc54:	8005883a 	mov	r2,r16
   1cc58:	1906b03a 	or	r3,r3,r4
   1cc5c:	dfc00117 	ldw	ra,4(sp)
   1cc60:	dc000017 	ldw	r16,0(sp)
   1cc64:	dec00204 	addi	sp,sp,8
   1cc68:	f800283a 	ret
   1cc6c:	00c002c4 	movi	r3,11
   1cc70:	188bc83a 	sub	r5,r3,r2
   1cc74:	814ad83a 	srl	r5,r16,r5
   1cc78:	00c00434 	movhi	r3,16
   1cc7c:	18ffffc4 	addi	r3,r3,-1
   1cc80:	81a0983a 	sll	r16,r16,r6
   1cc84:	2101ffcc 	andi	r4,r4,2047
   1cc88:	28ca703a 	and	r5,r5,r3
   1cc8c:	003fed06 	br	1cc44 <_gp+0xffff6b88>
   1cc90:	0009883a 	mov	r4,zero
   1cc94:	000b883a 	mov	r5,zero
   1cc98:	003fea06 	br	1cc44 <_gp+0xffff6b88>

0001cc9c <alt_getchar>:
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
   1cc9c:	008000b4 	movhi	r2,2
   1cca0:	10b81904 	addi	r2,r2,-8092
   1cca4:	11c00217 	ldw	r7,8(r2)
 * Uses the ALT_DRIVER_READ() macro to call directly to driver if available.
 * Otherwise, uses newlib provided getchar() routine.
 */
int 
alt_getchar(void)
{
   1cca8:	defffe04 	addi	sp,sp,-8
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
   1ccac:	010000b4 	movhi	r4,2
   1ccb0:	01800044 	movi	r6,1
   1ccb4:	d80b883a 	mov	r5,sp
   1ccb8:	21383804 	addi	r4,r4,-7968
 * Uses the ALT_DRIVER_READ() macro to call directly to driver if available.
 * Otherwise, uses newlib provided getchar() routine.
 */
int 
alt_getchar(void)
{
   1ccbc:	dfc00115 	stw	ra,4(sp)
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
   1ccc0:	001cf640 	call	1cf64 <altera_avalon_jtag_uart_read>
   1ccc4:	0080020e 	bge	zero,r2,1ccd0 <alt_getchar+0x34>
        return -1;
    }
    return c;
   1ccc8:	d8800007 	ldb	r2,0(sp)
   1cccc:	00000106 	br	1ccd4 <alt_getchar+0x38>
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_READ_EXTERNS(ALT_STDIN_DEV);
    char c;

    if (ALT_DRIVER_READ(ALT_STDIN_DEV, &c, 1, alt_fd_list[STDIN_FILENO].fd_flags) <= 0) {
        return -1;
   1ccd0:	00bfffc4 	movi	r2,-1
    return c;
#else
    return getchar();
#endif
#endif
}
   1ccd4:	dfc00117 	ldw	ra,4(sp)
   1ccd8:	dec00204 	addi	sp,sp,8
   1ccdc:	f800283a 	ret

0001cce0 <alt_irq_register>:
                      alt_isr_func handler)
{
  int rc = -EINVAL;  
  alt_irq_context status;

  if (id < ALT_NIRQ)
   1cce0:	008007c4 	movi	r2,31
   1cce4:	11002136 	bltu	r2,r4,1cd6c <alt_irq_register+0x8c>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1cce8:	000f303a 	rdctl	r7,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1ccec:	00ffff84 	movi	r3,-2
   1ccf0:	38c4703a 	and	r2,r7,r3
   1ccf4:	1001703a 	wrctl	status,r2
     * state.
     */

    status = alt_irq_disable_all ();

    alt_irq[id].handler = handler;
   1ccf8:	200490fa 	slli	r2,r4,3
   1ccfc:	020000b4 	movhi	r8,2
   1cd00:	423b9004 	addi	r8,r8,-4544
   1cd04:	4085883a 	add	r2,r8,r2
   1cd08:	11800015 	stw	r6,0(r2)
    alt_irq[id].context = context;
   1cd0c:	11400115 	stw	r5,4(r2)
   1cd10:	00800044 	movi	r2,1

    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);
   1cd14:	30000726 	beq	r6,zero,1cd34 <alt_irq_register+0x54>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1cd18:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1cd1c:	28c6703a 	and	r3,r5,r3
   1cd20:	1801703a 	wrctl	status,r3
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active |= (1 << id);
   1cd24:	d0e28617 	ldw	r3,-30184(gp)
   1cd28:	1104983a 	sll	r2,r2,r4
   1cd2c:	10c4b03a 	or	r2,r2,r3
   1cd30:	00000706 	br	1cd50 <alt_irq_register+0x70>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1cd34:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1cd38:	28c6703a 	and	r3,r5,r3
   1cd3c:	1801703a 	wrctl	status,r3
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();

  alt_irq_active &= ~(1 << id);
   1cd40:	1104983a 	sll	r2,r2,r4
   1cd44:	d0e28617 	ldw	r3,-30184(gp)
   1cd48:	0084303a 	nor	r2,zero,r2
   1cd4c:	10c4703a 	and	r2,r2,r3
   1cd50:	d0a28615 	stw	r2,-30184(gp)
  NIOS2_WRITE_IENABLE (alt_irq_active);
   1cd54:	d0a28617 	ldw	r2,-30184(gp)
   1cd58:	100170fa 	wrctl	ienable,r2
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1cd5c:	2801703a 	wrctl	status,r5
   1cd60:	3801703a 	wrctl	status,r7
   1cd64:	0005883a 	mov	r2,zero
   1cd68:	f800283a 	ret
 
int alt_irq_register (alt_u32 id, 
                      void* context, 
                      alt_isr_func handler)
{
  int rc = -EINVAL;  
   1cd6c:	00bffa84 	movi	r2,-22
    rc = (handler) ? alt_irq_enable (id): alt_irq_disable (id);

    alt_irq_enable_all(status);
  }
  return rc; 
}
   1cd70:	f800283a 	ret

0001cd74 <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
   1cd74:	deffff04 	addi	sp,sp,-4
   1cd78:	010000b4 	movhi	r4,2
   1cd7c:	014000b4 	movhi	r5,2
   1cd80:	dfc00015 	stw	ra,0(sp)
   1cd84:	2135e504 	addi	r4,r4,-10348
   1cd88:	29784104 	addi	r5,r5,-7932

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   1cd8c:	2140061e 	bne	r4,r5,1cda8 <alt_load+0x34>
   1cd90:	01000074 	movhi	r4,1
   1cd94:	01400074 	movhi	r5,1
   1cd98:	21000804 	addi	r4,r4,32
   1cd9c:	29400804 	addi	r5,r5,32
   1cda0:	2140121e 	bne	r4,r5,1cdec <alt_load+0x78>
   1cda4:	00000b06 	br	1cdd4 <alt_load+0x60>
   1cda8:	00c000b4 	movhi	r3,2
   1cdac:	18f84104 	addi	r3,r3,-7932
   1cdb0:	1907c83a 	sub	r3,r3,r4
   1cdb4:	0005883a 	mov	r2,zero
  {
    while( to != end )
   1cdb8:	10fff526 	beq	r2,r3,1cd90 <_gp+0xffff6cd4>
    {
      *to++ = *from++;
   1cdbc:	114f883a 	add	r7,r2,r5
   1cdc0:	39c00017 	ldw	r7,0(r7)
   1cdc4:	110d883a 	add	r6,r2,r4
   1cdc8:	10800104 	addi	r2,r2,4
   1cdcc:	31c00015 	stw	r7,0(r6)
   1cdd0:	003ff906 	br	1cdb8 <_gp+0xffff6cfc>
   1cdd4:	010000b4 	movhi	r4,2
   1cdd8:	014000b4 	movhi	r5,2
   1cddc:	21350404 	addi	r4,r4,-11248
   1cde0:	29750404 	addi	r5,r5,-11248

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   1cde4:	2140101e 	bne	r4,r5,1ce28 <alt_load+0xb4>
   1cde8:	00000b06 	br	1ce18 <alt_load+0xa4>
   1cdec:	00c00074 	movhi	r3,1
   1cdf0:	18c06004 	addi	r3,r3,384
   1cdf4:	1907c83a 	sub	r3,r3,r4
   1cdf8:	0005883a 	mov	r2,zero
  {
    while( to != end )
   1cdfc:	10fff526 	beq	r2,r3,1cdd4 <_gp+0xffff6d18>
    {
      *to++ = *from++;
   1ce00:	114f883a 	add	r7,r2,r5
   1ce04:	39c00017 	ldw	r7,0(r7)
   1ce08:	110d883a 	add	r6,r2,r4
   1ce0c:	10800104 	addi	r2,r2,4
   1ce10:	31c00015 	stw	r7,0(r6)
   1ce14:	003ff906 	br	1cdfc <_gp+0xffff6d40>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
   1ce18:	001d1b80 	call	1d1b8 <alt_dcache_flush_all>
  alt_icache_flush_all();
}
   1ce1c:	dfc00017 	ldw	ra,0(sp)
   1ce20:	dec00104 	addi	sp,sp,4
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
  alt_icache_flush_all();
   1ce24:	001d2a41 	jmpi	1d2a4 <alt_icache_flush_all>
   1ce28:	00c000b4 	movhi	r3,2
   1ce2c:	18f5e504 	addi	r3,r3,-10348
   1ce30:	1907c83a 	sub	r3,r3,r4

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
   1ce34:	0005883a 	mov	r2,zero
  {
    while( to != end )
   1ce38:	18bff726 	beq	r3,r2,1ce18 <_gp+0xffff6d5c>
    {
      *to++ = *from++;
   1ce3c:	114f883a 	add	r7,r2,r5
   1ce40:	39c00017 	ldw	r7,0(r7)
   1ce44:	110d883a 	add	r6,r2,r4
   1ce48:	10800104 	addi	r2,r2,4
   1ce4c:	31c00015 	stw	r7,0(r6)
   1ce50:	003ff906 	br	1ce38 <_gp+0xffff6d7c>

0001ce54 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   1ce54:	deffff04 	addi	sp,sp,-4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   1ce58:	0009883a 	mov	r4,zero
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
   1ce5c:	dfc00015 	stw	ra,0(sp)
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
   1ce60:	001cf0c0 	call	1cf0c <alt_irq_init>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
   1ce64:	001cf2c0 	call	1cf2c <alt_sys_init>
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
   1ce68:	d1a28717 	ldw	r6,-30180(gp)
   1ce6c:	d1628817 	ldw	r5,-30176(gp)
   1ce70:	d1228917 	ldw	r4,-30172(gp)
  close(STDOUT_FILENO);
  exit (result);
#endif

  ALT_LOG_PRINT_BOOT("[alt_main.c] After main - we should not be here?.\r\n");
}
   1ce74:	dfc00017 	ldw	ra,0(sp)
   1ce78:	dec00104 	addi	sp,sp,4
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
   1ce7c:	00109d81 	jmpi	109d8 <main>

0001ce80 <__malloc_lock>:
   1ce80:	f800283a 	ret

0001ce84 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
   1ce84:	f800283a 	ret

0001ce88 <alt_putstr>:
 * Uses the ALT_DRIVER_WRITE() macro to call directly to driver if available.
 * Otherwise, uses newlib provided fputs() routine.
 */
int 
alt_putstr(const char* str)
{
   1ce88:	defffe04 	addi	sp,sp,-8
   1ce8c:	dc000015 	stw	r16,0(sp)
   1ce90:	dfc00115 	stw	ra,4(sp)
   1ce94:	2021883a 	mov	r16,r4
#ifdef ALT_SEMIHOSTING
    return write(STDOUT_FILENO,str,strlen(str));
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
   1ce98:	0018d6c0 	call	18d6c <strlen>
   1ce9c:	010000b4 	movhi	r4,2
   1cea0:	000f883a 	mov	r7,zero
   1cea4:	100d883a 	mov	r6,r2
   1cea8:	800b883a 	mov	r5,r16
   1ceac:	21383804 	addi	r4,r4,-7968
#else
    return fputs(str, stdout);
#endif
#endif
}
   1ceb0:	dfc00117 	ldw	ra,4(sp)
   1ceb4:	dc000017 	ldw	r16,0(sp)
   1ceb8:	dec00204 	addi	sp,sp,8
#ifdef ALT_SEMIHOSTING
    return write(STDOUT_FILENO,str,strlen(str));
#else
#ifdef ALT_USE_DIRECT_DRIVERS
    ALT_DRIVER_WRITE_EXTERNS(ALT_STDOUT_DEV);
    return ALT_DRIVER_WRITE(ALT_STDOUT_DEV, str, strlen(str), 0);
   1cebc:	001cfc01 	jmpi	1cfc0 <altera_avalon_jtag_uart_write>

0001cec0 <sbrk>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1cec0:	000b303a 	rdctl	r5,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1cec4:	00bfff84 	movi	r2,-2
   1cec8:	2884703a 	and	r2,r5,r2
   1cecc:	1001703a 	wrctl	status,r2
  char *prev_heap_end; 

  context = alt_irq_disable_all();

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   1ced0:	d0a00817 	ldw	r2,-32736(gp)
   1ced4:	00ffff04 	movi	r3,-4
   1ced8:	108000c4 	addi	r2,r2,3
   1cedc:	10c4703a 	and	r2,r2,r3
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   1cee0:	00c000b4 	movhi	r3,2
  char *prev_heap_end; 

  context = alt_irq_disable_all();

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
   1cee4:	d0a00815 	stw	r2,-32736(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
   1cee8:	1109883a 	add	r4,r2,r4
   1ceec:	18c00004 	addi	r3,r3,0
   1cef0:	1900032e 	bgeu	r3,r4,1cf00 <sbrk+0x40>
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1cef4:	2801703a 	wrctl	status,r5
    alt_irq_enable_all(context);
    return (caddr_t)-1;
   1cef8:	00bfffc4 	movi	r2,-1
   1cefc:	f800283a 	ret
  }
#endif

  prev_heap_end = heap_end; 
  heap_end += incr; 
   1cf00:	d1200815 	stw	r4,-32736(gp)
   1cf04:	2801703a 	wrctl	status,r5
#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
} 
   1cf08:	f800283a 	ret

0001cf0c <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
   1cf0c:	deffff04 	addi	sp,sp,-4
   1cf10:	dfc00015 	stw	ra,0(sp)
    ALTERA_NIOS2_GEN2_IRQ_INIT ( CPU, cpu);
   1cf14:	001d3940 	call	1d394 <altera_nios2_gen2_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts (void)
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
   1cf18:	00800044 	movi	r2,1
   1cf1c:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
   1cf20:	dfc00017 	ldw	ra,0(sp)
   1cf24:	dec00104 	addi	sp,sp,4
   1cf28:	f800283a 	ret

0001cf2c <alt_sys_init>:
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   1cf2c:	010000b4 	movhi	r4,2
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   1cf30:	deffff04 	addi	sp,sp,-4
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   1cf34:	01c0fa04 	movi	r7,1000
   1cf38:	01800084 	movi	r6,2
   1cf3c:	000b883a 	mov	r5,zero
   1cf40:	21040004 	addi	r4,r4,4096
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
   1cf44:	dfc00015 	stw	ra,0(sp)
    ALTERA_AVALON_TIMER_INIT ( TIMER, timer);
   1cf48:	001d0300 	call	1d030 <alt_avalon_timer_sc_init>

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
   1cf4c:	010000b4 	movhi	r4,2
   1cf50:	d1600b04 	addi	r5,gp,-32724
   1cf54:	21380e04 	addi	r4,r4,-8136
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART, jtag_uart);
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
    ALTERA_UP_AVALON_ACCELEROMETER_SPI_INIT ( ACCELEROMETER_SPI, accelerometer_spi);
}
   1cf58:	dfc00017 	ldw	ra,0(sp)
   1cf5c:	dec00104 	addi	sp,sp,4
   1cf60:	001d1c41 	jmpi	1d1c4 <alt_dev_llist_insert>

0001cf64 <altera_avalon_jtag_uart_read>:

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char* buffer, int space, int flags)
{
  unsigned int base = sp->base;
   1cf64:	21000017 	ldw	r4,0(r4)

  char * ptr = buffer;
  char * end = buffer + space;
   1cf68:	298d883a 	add	r6,r5,r6

  while (ptr < end)
   1cf6c:	2805883a 	mov	r2,r5

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    else if (ptr != buffer)
      break;
    else if(flags & O_NONBLOCK)
   1cf70:	3a10000c 	andi	r8,r7,16384
  unsigned int base = sp->base;

  char * ptr = buffer;
  char * end = buffer + space;

  while (ptr < end)
   1cf74:	11800b2e 	bgeu	r2,r6,1cfa4 <altera_avalon_jtag_uart_read+0x40>
  {
    unsigned int data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
   1cf78:	20c00037 	ldwio	r3,0(r4)

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
   1cf7c:	1a60000c 	andi	r9,r3,32768
   1cf80:	48000326 	beq	r9,zero,1cf90 <altera_avalon_jtag_uart_read+0x2c>
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
   1cf84:	10c00005 	stb	r3,0(r2)
   1cf88:	10800044 	addi	r2,r2,1
   1cf8c:	003ff906 	br	1cf74 <_gp+0xffff6eb8>
    else if (ptr != buffer)
   1cf90:	11400226 	beq	r2,r5,1cf9c <altera_avalon_jtag_uart_read+0x38>
      break;   
    
  }

  if (ptr != buffer)
    return ptr - buffer;
   1cf94:	1145c83a 	sub	r2,r2,r5
   1cf98:	f800283a 	ret

    if (data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK)
      *ptr++ = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
    else if (ptr != buffer)
      break;
    else if(flags & O_NONBLOCK)
   1cf9c:	403ff526 	beq	r8,zero,1cf74 <_gp+0xffff6eb8>
   1cfa0:	00000106 	br	1cfa8 <altera_avalon_jtag_uart_read+0x44>
      break;   
    
  }

  if (ptr != buffer)
   1cfa4:	117ffb1e 	bne	r2,r5,1cf94 <_gp+0xffff6ed8>
    return ptr - buffer;
  else if (flags & O_NONBLOCK)
   1cfa8:	39d0000c 	andi	r7,r7,16384
   1cfac:	3800021e 	bne	r7,zero,1cfb8 <altera_avalon_jtag_uart_read+0x54>
    return -EWOULDBLOCK;
  else
    return -EIO;
   1cfb0:	00bffec4 	movi	r2,-5
   1cfb4:	f800283a 	ret
  }

  if (ptr != buffer)
    return ptr - buffer;
  else if (flags & O_NONBLOCK)
    return -EWOULDBLOCK;
   1cfb8:	00bffd44 	movi	r2,-11
  else
    return -EIO;
}
   1cfbc:	f800283a 	ret

0001cfc0 <altera_avalon_jtag_uart_write>:
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
  unsigned int base = sp->base;
   1cfc0:	21000017 	ldw	r4,0(r4)
 * one FIFOs worth of data.  But you said you didn't want to use interrupts :-)
 */

int altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
   1cfc4:	3005883a 	mov	r2,r6
  unsigned int base = sp->base;

  const char * end = ptr + count;
   1cfc8:	298d883a 	add	r6,r5,r6

  while (ptr < end)
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
   1cfcc:	21c00104 	addi	r7,r4,4
{
  unsigned int base = sp->base;

  const char * end = ptr + count;

  while (ptr < end)
   1cfd0:	2980072e 	bgeu	r5,r6,1cff0 <altera_avalon_jtag_uart_write+0x30>
    if ((IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base) & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) != 0)
   1cfd4:	38c00037 	ldwio	r3,0(r7)
   1cfd8:	18ffffec 	andhi	r3,r3,65535
   1cfdc:	183ffc26 	beq	r3,zero,1cfd0 <_gp+0xffff6f14>
      IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, *ptr++);
   1cfe0:	28c00007 	ldb	r3,0(r5)
   1cfe4:	20c00035 	stwio	r3,0(r4)
   1cfe8:	29400044 	addi	r5,r5,1
   1cfec:	003ff806 	br	1cfd0 <_gp+0xffff6f14>

  return count;
}
   1cff0:	f800283a 	ret

0001cff4 <alt_avalon_timer_sc_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void alt_avalon_timer_sc_irq (void* base)
#else
static void alt_avalon_timer_sc_irq (void* base, alt_u32 id)
#endif
{
   1cff4:	defffe04 	addi	sp,sp,-8
   1cff8:	dfc00115 	stw	ra,4(sp)
   1cffc:	dc000015 	stw	r16,0(sp)
  alt_irq_context cpu_sr;
  
  /* clear the interrupt */
  IOWR_ALTERA_AVALON_TIMER_STATUS (base, 0);
   1d000:	20000035 	stwio	zero,0(r4)
  /* 
   * Dummy read to ensure IRQ is negated before the ISR returns.
   * The control register is read because reading the status
   * register has side-effects per the register map documentation.
   */
  IORD_ALTERA_AVALON_TIMER_CONTROL (base);
   1d004:	20800137 	ldwio	r2,4(r4)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1d008:	0021303a 	rdctl	r16,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1d00c:	00bfff84 	movi	r2,-2
   1d010:	8084703a 	and	r2,r16,r2
   1d014:	1001703a 	wrctl	status,r2
  /* 
   * Notify the system of a clock tick. disable interrupts 
   * during this time to safely support ISR preemption
   */
  cpu_sr = alt_irq_disable_all();
  alt_tick ();
   1d018:	001d2dc0 	call	1d2dc <alt_tick>
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1d01c:	8001703a 	wrctl	status,r16
  alt_irq_enable_all(cpu_sr);
}
   1d020:	dfc00117 	ldw	ra,4(sp)
   1d024:	dc000017 	ldw	r16,0(sp)
   1d028:	dec00204 	addi	sp,sp,8
   1d02c:	f800283a 	ret

0001d030 <alt_avalon_timer_sc_init>:
 * in order to initialise the value of the clock frequency.
 */

static ALT_INLINE int ALT_ALWAYS_INLINE alt_sysclk_init (alt_u32 nticks)
{
  if (! _alt_tick_rate)
   1d030:	d0a28b17 	ldw	r2,-30164(gp)
 * auto-generated alt_sys_init() function.
 */

void alt_avalon_timer_sc_init (void* base, alt_u32 irq_controller_id, 
                                alt_u32 irq, alt_u32 freq)
{
   1d034:	200b883a 	mov	r5,r4
   1d038:	3009883a 	mov	r4,r6
   1d03c:	1000011e 	bne	r2,zero,1d044 <alt_avalon_timer_sc_init+0x14>
  {
    _alt_tick_rate = nticks;
   1d040:	d1e28b15 	stw	r7,-30164(gp)
  
  alt_sysclk_init (freq);
  
  /* set to free running mode */
  
  IOWR_ALTERA_AVALON_TIMER_CONTROL (base, 
   1d044:	008001c4 	movi	r2,7
   1d048:	28800135 	stwio	r2,4(r5)
  /* register the interrupt handler, and enable the interrupt */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, alt_avalon_timer_sc_irq, 
                      base, NULL);
#else
  alt_irq_register (irq, base, alt_avalon_timer_sc_irq);
   1d04c:	018000b4 	movhi	r6,2
   1d050:	31b3fd04 	addi	r6,r6,-12300
   1d054:	001cce01 	jmpi	1cce0 <alt_irq_register>

0001d058 <alt_up_accelerometer_spi_open_dev>:
{
  // find the device from the device list 
  // (see altera_hal/HAL/inc/priv/alt_file.h 
  // and altera_hal/HAL/src/alt_find_dev.c 
  // for details)
  alt_up_accelerometer_spi_dev *dev = (alt_up_accelerometer_spi_dev*)alt_find_dev(name, &alt_dev_list);
   1d058:	d1600b04 	addi	r5,gp,-32724
   1d05c:	001d2301 	jmpi	1d230 <alt_find_dev>

0001d060 <alt_up_accelerometer_spi_read_address_register>:
 * @return 0 for success 
 **/
int alt_up_accelerometer_spi_read_address_register(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 *addr)
{
	// reads data from the device Address register
	*(addr) = IORD_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base); 
   1d060:	20800a17 	ldw	r2,40(r4)
   1d064:	10800023 	ldbuio	r2,0(r2)
   1d068:	28800005 	stb	r2,0(r5)

	return 0;
}
   1d06c:	0005883a 	mov	r2,zero
   1d070:	f800283a 	ret

0001d074 <alt_up_accelerometer_spi_read>:
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_read(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 *data)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d074:	20800a17 	ldw	r2,40(r4)
   1d078:	29400fcc 	andi	r5,r5,63
   1d07c:	11400025 	stbio	r5,0(r2)

	// read data to the device Data register
	*(data) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1d080:	20800a17 	ldw	r2,40(r4)
   1d084:	10800063 	ldbuio	r2,1(r2)
   1d088:	30800005 	stb	r2,0(r6)

	return 0;
}
   1d08c:	0005883a 	mov	r2,zero
   1d090:	f800283a 	ret

0001d094 <alt_up_accelerometer_spi_write>:
 * @return 0 for success
 **/
int alt_up_accelerometer_spi_write(alt_up_accelerometer_spi_dev *accel_spi, alt_u8 addr, alt_u8 data)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, addr & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d094:	20800a17 	ldw	r2,40(r4)
   1d098:	29400fcc 	andi	r5,r5,63
   1d09c:	11400025 	stbio	r5,0(r2)

	// write data to the device Data register
	IOWR_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base, data & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK); 
   1d0a0:	20800a17 	ldw	r2,40(r4)
   1d0a4:	11800065 	stbio	r6,1(r2)

	return 0;
}
   1d0a8:	0005883a 	mov	r2,zero
   1d0ac:	f800283a 	ret

0001d0b0 <alt_up_accelerometer_spi_read_x_axis>:
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_x_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *x_axis)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d0b0:	20800a17 	ldw	r2,40(r4)
   1d0b4:	00c00c84 	movi	r3,50
   1d0b8:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1d0bc:	20800a17 	ldw	r2,40(r4)
   1d0c0:	10800063 	ldbuio	r2,1(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d0c4:	00c00cc4 	movi	r3,51
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 

	// read data to the device Data register
	*(x_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1d0c8:	10803fcc 	andi	r2,r2,255
   1d0cc:	28800015 	stw	r2,0(r5)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_X_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d0d0:	20800a17 	ldw	r2,40(r4)
   1d0d4:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(x_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   1d0d8:	20800a17 	ldw	r2,40(r4)
   1d0dc:	10800063 	ldbuio	r2,1(r2)
   1d0e0:	10803fcc 	andi	r2,r2,255
   1d0e4:	1006923a 	slli	r3,r2,8
   1d0e8:	28800017 	ldw	r2,0(r5)
   1d0ec:	1885883a 	add	r2,r3,r2

	if (*(x_axis) & 0x00008000)
   1d0f0:	10e0000c 	andi	r3,r2,32768
   1d0f4:	18000126 	beq	r3,zero,1d0fc <alt_up_accelerometer_spi_read_x_axis+0x4c>
	{
		*(x_axis) |= 0xFFFF0000;
   1d0f8:	10bffff4 	orhi	r2,r2,65535
   1d0fc:	28800015 	stw	r2,0(r5)
	}

	return 0;
}
   1d100:	0005883a 	mov	r2,zero
   1d104:	f800283a 	ret

0001d108 <alt_up_accelerometer_spi_read_y_axis>:
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_y_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *y_axis)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d108:	20800a17 	ldw	r2,40(r4)
   1d10c:	00c00d04 	movi	r3,52
   1d110:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1d114:	20800a17 	ldw	r2,40(r4)
   1d118:	10800063 	ldbuio	r2,1(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d11c:	00c00d44 	movi	r3,53
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 

	// read data to the device Data register
	*(y_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1d120:	10803fcc 	andi	r2,r2,255
   1d124:	28800015 	stw	r2,0(r5)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Y_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d128:	20800a17 	ldw	r2,40(r4)
   1d12c:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(y_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   1d130:	20800a17 	ldw	r2,40(r4)
   1d134:	10800063 	ldbuio	r2,1(r2)
   1d138:	10803fcc 	andi	r2,r2,255
   1d13c:	1006923a 	slli	r3,r2,8
   1d140:	28800017 	ldw	r2,0(r5)
   1d144:	1885883a 	add	r2,r3,r2

	if (*(y_axis) & 0x00008000)
   1d148:	10e0000c 	andi	r3,r2,32768
   1d14c:	18000126 	beq	r3,zero,1d154 <alt_up_accelerometer_spi_read_y_axis+0x4c>
	{
		*(y_axis) |= 0xFFFF0000;
   1d150:	10bffff4 	orhi	r2,r2,65535
   1d154:	28800015 	stw	r2,0(r5)
	}

	return 0;
}
   1d158:	0005883a 	mov	r2,zero
   1d15c:	f800283a 	ret

0001d160 <alt_up_accelerometer_spi_read_z_axis>:
 * @return 0 for success or -1 for failure
 **/
int alt_up_accelerometer_spi_read_z_axis(alt_up_accelerometer_spi_dev *accel_spi, alt_32 *z_axis)
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d160:	20800a17 	ldw	r2,40(r4)
   1d164:	00c00d84 	movi	r3,54
   1d168:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1d16c:	20800a17 	ldw	r2,40(r4)
   1d170:	10800063 	ldbuio	r2,1(r2)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d174:	00c00dc4 	movi	r3,55
{
	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_LOWER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 

	// read data to the device Data register
	*(z_axis) = IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK;
   1d178:	10803fcc 	andi	r2,r2,255
   1d17c:	28800015 	stw	r2,0(r5)

	// set the register address in the Address register
	IOWR_ALT_UP_ACCELEROMETER_SPI_ADDRESS(accel_spi->base, ACCELEROMETER_SPI_Z_AXIS_UPPER_BYTE & ALT_UP_ACCELEROMETER_SPI_ADDRESS_ADDR_MSK); 
   1d180:	20800a17 	ldw	r2,40(r4)
   1d184:	10c00025 	stbio	r3,0(r2)

	// read data to the device Data register
	*(z_axis) += (IORD_ALT_UP_ACCELEROMETER_SPI_DATA(accel_spi->base) & ALT_UP_ACCELEROMETER_SPI_DATA_DATA_MSK) << 8;
   1d188:	20800a17 	ldw	r2,40(r4)
   1d18c:	10800063 	ldbuio	r2,1(r2)
   1d190:	10803fcc 	andi	r2,r2,255
   1d194:	1006923a 	slli	r3,r2,8
   1d198:	28800017 	ldw	r2,0(r5)
   1d19c:	1885883a 	add	r2,r3,r2

	if (*(z_axis) & 0x00008000)
   1d1a0:	10e0000c 	andi	r3,r2,32768
   1d1a4:	18000126 	beq	r3,zero,1d1ac <alt_up_accelerometer_spi_read_z_axis+0x4c>
	{
		*(z_axis) |= 0xFFFF0000;
   1d1a8:	10bffff4 	orhi	r2,r2,65535
   1d1ac:	28800015 	stw	r2,0(r5)
	}

	return 0;
}
   1d1b0:	0005883a 	mov	r2,zero
   1d1b4:	f800283a 	ret

0001d1b8 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
   1d1b8:	f800283a 	ret

0001d1bc <alt_dev_null_write>:
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
  return len;
}
   1d1bc:	3005883a 	mov	r2,r6
   1d1c0:	f800283a 	ret

0001d1c4 <alt_dev_llist_insert>:
{
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
   1d1c4:	20000226 	beq	r4,zero,1d1d0 <alt_dev_llist_insert+0xc>
   1d1c8:	20800217 	ldw	r2,8(r4)
   1d1cc:	1000101e 	bne	r2,zero,1d210 <alt_dev_llist_insert+0x4c>

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
  return ((alt_errno) ? alt_errno() : &errno);
   1d1d0:	d0a00f17 	ldw	r2,-32708(gp)
   1d1d4:	10000926 	beq	r2,zero,1d1fc <alt_dev_llist_insert+0x38>
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
   1d1d8:	deffff04 	addi	sp,sp,-4
   1d1dc:	dfc00015 	stw	ra,0(sp)
   1d1e0:	103ee83a 	callr	r2
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  {
    ALT_ERRNO = EINVAL;
   1d1e4:	00c00584 	movi	r3,22
   1d1e8:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
   1d1ec:	00bffa84 	movi	r2,-22
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
}
   1d1f0:	dfc00017 	ldw	ra,0(sp)
   1d1f4:	dec00104 	addi	sp,sp,4
   1d1f8:	f800283a 	ret
   1d1fc:	d0a28204 	addi	r2,gp,-30200
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
  {
    ALT_ERRNO = EINVAL;
   1d200:	00c00584 	movi	r3,22
   1d204:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
   1d208:	00bffa84 	movi	r2,-22
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
}
   1d20c:	f800283a 	ret

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
  entry->next     = list->next;
   1d210:	28800017 	ldw	r2,0(r5)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
   1d214:	21400115 	stw	r5,4(r4)
  entry->next     = list->next;
   1d218:	20800015 	stw	r2,0(r4)

  list->next->previous = entry;
   1d21c:	28800017 	ldw	r2,0(r5)
   1d220:	11000115 	stw	r4,4(r2)
  list->next           = entry;
   1d224:	29000015 	stw	r4,0(r5)
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);

  return 0;  
   1d228:	0005883a 	mov	r2,zero
   1d22c:	f800283a 	ret

0001d230 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
   1d230:	defffb04 	addi	sp,sp,-20
   1d234:	dcc00315 	stw	r19,12(sp)
   1d238:	dc800215 	stw	r18,8(sp)
   1d23c:	dc400115 	stw	r17,4(sp)
   1d240:	dc000015 	stw	r16,0(sp)
   1d244:	dfc00415 	stw	ra,16(sp)
   1d248:	2027883a 	mov	r19,r4
   1d24c:	2823883a 	mov	r17,r5
  alt_dev* next = (alt_dev*) llist->next;
   1d250:	2c000017 	ldw	r16,0(r5)
  alt_32 len;

  len  = strlen(name) + 1;
   1d254:	0018d6c0 	call	18d6c <strlen>
   1d258:	14800044 	addi	r18,r2,1
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
   1d25c:	84400726 	beq	r16,r17,1d27c <alt_find_dev+0x4c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
   1d260:	81000217 	ldw	r4,8(r16)
   1d264:	900d883a 	mov	r6,r18
   1d268:	980b883a 	mov	r5,r19
   1d26c:	00179a00 	call	179a0 <memcmp>
   1d270:	10000426 	beq	r2,zero,1d284 <alt_find_dev+0x54>
    {
      /* match found */

      return next;
    }
    next = (alt_dev*) next->llist.next;
   1d274:	84000017 	ldw	r16,0(r16)
   1d278:	003ff806 	br	1d25c <_gp+0xffff71a0>
  }
  
  /* No match found */
  
  return NULL;
   1d27c:	0005883a 	mov	r2,zero
   1d280:	00000106 	br	1d288 <alt_find_dev+0x58>
   1d284:	8005883a 	mov	r2,r16
}
   1d288:	dfc00417 	ldw	ra,16(sp)
   1d28c:	dcc00317 	ldw	r19,12(sp)
   1d290:	dc800217 	ldw	r18,8(sp)
   1d294:	dc400117 	ldw	r17,4(sp)
   1d298:	dc000017 	ldw	r16,0(sp)
   1d29c:	dec00504 	addi	sp,sp,20
   1d2a0:	f800283a 	ret

0001d2a4 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
   1d2a4:	f800283a 	ret

0001d2a8 <alt_alarm_stop>:
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
   1d2a8:	0007303a 	rdctl	r3,status

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
   1d2ac:	00bfff84 	movi	r2,-2
   1d2b0:	1884703a 	and	r2,r3,r2
   1d2b4:	1001703a 	wrctl	status,r2
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
   1d2b8:	21400117 	ldw	r5,4(r4)
   1d2bc:	20800017 	ldw	r2,0(r4)
   1d2c0:	11400115 	stw	r5,4(r2)
  entry->previous->next = entry->next;
   1d2c4:	21400117 	ldw	r5,4(r4)
   1d2c8:	28800015 	stw	r2,0(r5)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
   1d2cc:	21000115 	stw	r4,4(r4)
  entry->next     = entry;
   1d2d0:	21000015 	stw	r4,0(r4)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
   1d2d4:	1801703a 	wrctl	status,r3
   1d2d8:	f800283a 	ret

0001d2dc <alt_tick>:

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   1d2dc:	d0a28a17 	ldw	r2,-30168(gp)
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   1d2e0:	defffb04 	addi	sp,sp,-20
   1d2e4:	dc000015 	stw	r16,0(sp)
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
   1d2e8:	d4201017 	ldw	r16,-32704(gp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   1d2ec:	10800044 	addi	r2,r2,1
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   1d2f0:	dc800215 	stw	r18,8(sp)
   1d2f4:	dc400115 	stw	r17,4(sp)
   1d2f8:	dfc00415 	stw	ra,16(sp)
   1d2fc:	dcc00315 	stw	r19,12(sp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
   1d300:	d0a28a15 	stw	r2,-30168(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   1d304:	d4601004 	addi	r17,gp,-32704
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
        {
          alarm->rollover = 1;
   1d308:	04800044 	movi	r18,1

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
   1d30c:	84401a26 	beq	r16,r17,1d378 <alt_tick+0x9c>
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   1d310:	80800403 	ldbu	r2,16(r16)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
  {
    next = (alt_alarm*) alarm->llist.next;
   1d314:	84c00017 	ldw	r19,0(r16)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
   1d318:	10000326 	beq	r2,zero,1d328 <alt_tick+0x4c>
   1d31c:	d0a28a17 	ldw	r2,-30168(gp)
   1d320:	1000011e 	bne	r2,zero,1d328 <alt_tick+0x4c>
    {
      alarm->rollover = 0;
   1d324:	80000405 	stb	zero,16(r16)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
   1d328:	d0e28a17 	ldw	r3,-30168(gp)
   1d32c:	80800217 	ldw	r2,8(r16)
   1d330:	18800f36 	bltu	r3,r2,1d370 <alt_tick+0x94>
   1d334:	80800403 	ldbu	r2,16(r16)
   1d338:	10000d1e 	bne	r2,zero,1d370 <alt_tick+0x94>
    {
      next_callback = alarm->callback (alarm->context);
   1d33c:	80800317 	ldw	r2,12(r16)
   1d340:	81000517 	ldw	r4,20(r16)
   1d344:	103ee83a 	callr	r2

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
   1d348:	1000031e 	bne	r2,zero,1d358 <alt_tick+0x7c>
      {
        alt_alarm_stop (alarm);
   1d34c:	8009883a 	mov	r4,r16
   1d350:	001d2a80 	call	1d2a8 <alt_alarm_stop>
   1d354:	00000606 	br	1d370 <alt_tick+0x94>
      }
      else
      {
        alarm->time += next_callback;
   1d358:	80c00217 	ldw	r3,8(r16)
   1d35c:	10c5883a 	add	r2,r2,r3
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   1d360:	d0e28a17 	ldw	r3,-30168(gp)
      {
        alt_alarm_stop (alarm);
      }
      else
      {
        alarm->time += next_callback;
   1d364:	80800215 	stw	r2,8(r16)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
   1d368:	10c0012e 	bgeu	r2,r3,1d370 <alt_tick+0x94>
        {
          alarm->rollover = 1;
   1d36c:	84800405 	stb	r18,16(r16)
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
   1d370:	9821883a 	mov	r16,r19
   1d374:	003fe506 	br	1d30c <_gp+0xffff7250>
  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
}
   1d378:	dfc00417 	ldw	ra,16(sp)
   1d37c:	dcc00317 	ldw	r19,12(sp)
   1d380:	dc800217 	ldw	r18,8(sp)
   1d384:	dc400117 	ldw	r17,4(sp)
   1d388:	dc000017 	ldw	r16,0(sp)
   1d38c:	dec00504 	addi	sp,sp,20
   1d390:	f800283a 	ret

0001d394 <altera_nios2_gen2_irq_init>:
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_gen2_irq_init(void) 
{
    NIOS2_WRITE_IENABLE(0);
   1d394:	000170fa 	wrctl	ienable,zero
   1d398:	f800283a 	ret

0001d39c <alt_exception_cause_generated_bad_addr>:
 *         0: BADADDR is not valid
 */
int 
alt_exception_cause_generated_bad_addr(alt_exception_cause cause)
{
  switch (cause) {
   1d39c:	213ffe84 	addi	r4,r4,-6
   1d3a0:	008003c4 	movi	r2,15
   1d3a4:	11001636 	bltu	r2,r4,1d400 <alt_exception_cause_generated_bad_addr+0x64>
   1d3a8:	200890ba 	slli	r4,r4,2
   1d3ac:	008000b4 	movhi	r2,2
   1d3b0:	10b4f004 	addi	r2,r2,-11328
   1d3b4:	2089883a 	add	r4,r4,r2
   1d3b8:	20800017 	ldw	r2,0(r4)
   1d3bc:	1000683a 	jmp	r2
   1d3c0:	0001d408 	cmpgei	zero,zero,1872
   1d3c4:	0001d408 	cmpgei	zero,zero,1872
   1d3c8:	0001d400 	call	1d40 <__alt_mem_onchip_memory-0xe2c0>
   1d3cc:	0001d400 	call	1d40 <__alt_mem_onchip_memory-0xe2c0>
   1d3d0:	0001d400 	call	1d40 <__alt_mem_onchip_memory-0xe2c0>
   1d3d4:	0001d408 	cmpgei	zero,zero,1872
   1d3d8:	0001d400 	call	1d40 <__alt_mem_onchip_memory-0xe2c0>
   1d3dc:	0001d400 	call	1d40 <__alt_mem_onchip_memory-0xe2c0>
   1d3e0:	0001d408 	cmpgei	zero,zero,1872
   1d3e4:	0001d408 	cmpgei	zero,zero,1872
   1d3e8:	0001d400 	call	1d40 <__alt_mem_onchip_memory-0xe2c0>
   1d3ec:	0001d408 	cmpgei	zero,zero,1872
   1d3f0:	0001d400 	call	1d40 <__alt_mem_onchip_memory-0xe2c0>
   1d3f4:	0001d400 	call	1d40 <__alt_mem_onchip_memory-0xe2c0>
   1d3f8:	0001d400 	call	1d40 <__alt_mem_onchip_memory-0xe2c0>
   1d3fc:	0001d408 	cmpgei	zero,zero,1872
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;

  case NIOS2_EXCEPTION_TLB_MISS:
  case NIOS2_EXCEPTION_ECC_TLB_ERR:
    return 0;
   1d400:	0005883a 	mov	r2,zero
   1d404:	f800283a 	ret
  case NIOS2_EXCEPTION_MISALIGNED_TARGET_PC:
  case NIOS2_EXCEPTION_TLB_READ_PERM_VIOLATION:
  case NIOS2_EXCEPTION_TLB_WRITE_PERM_VIOLATION:
  case NIOS2_EXCEPTION_MPU_DATA_REGION_VIOLATION:
  case NIOS2_EXCEPTION_ECC_DATA_ERR:
    return 1;
   1d408:	00800044 	movi	r2,1
    return 0;

  default:
    return 0;
  }
}
   1d40c:	f800283a 	ret
